; ModuleID = '../bcout/drivers/media/dvb-frontends/dib7000p.llvm.bc'
source_filename = "drivers/media/dvb-frontends/dib7000p.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%struct.kmem_cache = type opaque
%struct.dvb_frontend_ops = type { %struct.dvb_frontend_internal_info, [8 x i8], void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)*, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, %struct.dvb_tuner_ops, %struct.analog_demod_ops }
%struct.dvb_frontend_internal_info = type { [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dvb_frontend = type { %struct.kref, %struct.dvb_frontend_ops, %struct.dvb_adapter*, i8*, i8*, i8*, i8*, i8*, %struct.dtv_frontend_properties, i32 (i8*, i32, i32, i32)*, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dvb_adapter = type { i32, %struct.list_head, %struct.list_head, i8*, [6 x i8], i8*, %struct.device*, %struct.module*, i32, %struct.dvb_device*, %struct.mutex }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.4, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.7 }
%union.anon.7 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.6 }
%union.anon.6 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.dvb_device = type { %struct.list_head, %struct.file_operations*, %struct.dvb_adapter*, i32, i32, i32, i32, i32, i32, %struct.wait_queue_head, i32 (%struct.file*, i32, i8*)*, i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dtv_frontend_properties = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, [3 x %struct.anon], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats }
%struct.anon = type { i8, i32, i32, i8 }
%struct.dtv_fe_stats = type { i8, [4 x %struct.dtv_stats] }
%struct.dtv_stats = type <{ i8, %union.anon.0 }>
%union.anon.0 = type { i64 }
%struct.dvb_frontend_tune_settings = type { i32, i32, i32 }
%struct.dvb_diseqc_master_cmd = type { [6 x i8], i8 }
%struct.dvb_diseqc_slave_reply = type { [4 x i8], i8, i32 }
%struct.dvb_tuner_ops = type { %struct.dvb_tuner_info, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i8*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)* }
%struct.dvb_tuner_info = type { [128 x i8], i32, i32, i32, i32, i32, i32 }
%struct.analog_parameters = type { i32, i32, i32, i64 }
%struct.analog_demod_ops = type { %struct.analog_demod_info, void (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i8*)* }
%struct.analog_demod_info = type { i8* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { {}*, {}*, void (%struct.i2c_adapter*, i32)*, {}*, void (%struct.i2c_adapter*, i32)*, {}*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.linear_segments = type { i32, i32 }
%struct.dib7000p_ops = type { i32 (%struct.dvb_frontend*, i16)*, i32 (%struct.dvb_frontend*, i16*, i16*, i16*, i16*)*, i32 (%struct.dvb_frontend*, i16)*, i32 (%struct.dvb_frontend*, %struct.dibx000_bandwidth_config*)*, i32 (%struct.dvb_frontend*, i8, i8, i8)*, i32 (%struct.dvb_frontend*, i8, i32)*, i32 (%struct.i2c_adapter*)*, %struct.i2c_adapter* (%struct.dvb_frontend*, i32, i32)*, i32 (%struct.dvb_frontend*, i8)*, i32 (%struct.dvb_frontend*, i8, i16, i8)*, i32 (%struct.i2c_adapter*, i32, i8, %struct.dib7000p_config*)*, %struct.i2c_adapter* (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, %struct.dvb_frontend* (%struct.i2c_adapter*, i8, %struct.dib7000p_config*)* }
%struct.dibx000_bandwidth_config = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i32, i32, i32 }
%struct.dib7000p_config = type { i8, i8, i8, i32 (%struct.dvb_frontend*, i16)*, i8, %struct.dibx000_agc_config*, %struct.dibx000_bandwidth_config*, i16, i16, i16, i16, i8, i8, i32 (%struct.dvb_frontend*, i8)*, i8, i8, i16, i8, i8 }
%struct.dibx000_agc_config = type { i8, i16, i16, i16, i8, i16, i8, i16, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.anon.67 }
%struct.anon.67 = type { i16, i16, i16, i16 }
%struct.dib7000p_state = type { %struct.dvb_frontend, %struct.dib7000p_config, i8, %struct.i2c_adapter*, %struct.dibx000_i2c_master, i16, i8, i32, %struct.dibx000_agc_config*, i32, i8, i16, i8, i16, i16, i8, i16, i16, %struct.i2c_adapter, [2 x %struct.i2c_msg], [4 x i8], [2 x i8], %struct.mutex, i8, i64, i64, i64, i64 }
%struct.dibx000_i2c_master = type { i16, i32, %struct.i2c_adapter, %struct.i2c_adapter, %struct.i2c_adapter, %struct.i2c_adapter, %struct.i2c_adapter*, i8, i16, [34 x %struct.i2c_msg], [8 x i8], [2 x i8], %struct.mutex }

@__param_str_debug = internal constant [15 x i8] c"dib7000p.debug\00", align 1, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@debug = internal global i32 0, align 4, !dbg !446
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @debug to i8*) } }, section "__param", align 8, !dbg !339
@__UNIQUE_ID_debugtype220 = internal constant [28 x i8] c"dib7000p.parmtype=debug:int\00", section ".modinfo", align 1, !dbg !402
@__UNIQUE_ID_debug221 = internal constant [51 x i8] c"dib7000p.parm=debug:turn on debugging (default: 0)\00", section ".modinfo", align 1, !dbg !407
@__param_str_buggy_sfn_workaround = internal constant [30 x i8] c"dib7000p.buggy_sfn_workaround\00", align 16, !dbg !450
@buggy_sfn_workaround = internal global i32 0, align 4, !dbg !448
@__param_buggy_sfn_workaround = internal constant %struct.kernel_param { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__param_str_buggy_sfn_workaround, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @buggy_sfn_workaround to i8*) } }, section "__param", align 8, !dbg !412
@__UNIQUE_ID_buggy_sfn_workaroundtype222 = internal constant [43 x i8] c"dib7000p.parmtype=buggy_sfn_workaround:int\00", section ".modinfo", align 1, !dbg !414
@__UNIQUE_ID_buggy_sfn_workaround223 = internal constant [82 x i8] c"dib7000p.parm=buggy_sfn_workaround:Enable work-around for buggy SFNs (default: 0)\00", section ".modinfo", align 1, !dbg !419
@__UNIQUE_ID_author224 = internal constant [58 x i8] c"dib7000p.author=Olivier Grenie <olivie.grenie@parrot.com>\00", section ".modinfo", align 1, !dbg !424
@__UNIQUE_ID_author225 = internal constant [64 x i8] c"dib7000p.author=Patrick Boettcher <patrick.boettcher@posteo.de>\00", section ".modinfo", align 1, !dbg !429
@__UNIQUE_ID_description226 = internal constant [68 x i8] c"dib7000p.description=Driver for the DiBcom 7000PC COFDM demodulator\00", section ".modinfo", align 1, !dbg !434
@__UNIQUE_ID_file227 = internal constant [51 x i8] c"dib7000p.file=drivers/media/dvb-frontends/dib7000p\00", section ".modinfo", align 1, !dbg !439
@__UNIQUE_ID_license228 = internal constant [21 x i8] c"dib7000p.license=GPL\00", section ".modinfo", align 1, !dbg !441
@.str = private unnamed_addr constant [40 x i8] c"\017dib7000p: %s: could not acquire lock\0A\00", align 1
@__func__.dib7000p_read_word = private unnamed_addr constant [19 x i8] c"dib7000p_read_word\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"\017dib7000p: %s: i2c read error on %d\0A\00", align 1
@__func__.dib7000p_write_word = private unnamed_addr constant [20 x i8] c"dib7000p_write_word\00", align 1
@.str.2 = private unnamed_addr constant [32 x i8] c"\017dib7000p: %s: raw pow_i = %d\0A\00", align 1
@__func__.dib7000p_get_adc_power = private unnamed_addr constant [23 x i8] c"dib7000p_get_adc_power\00", align 1
@.str.3 = private unnamed_addr constant [37 x i8] c"\017dib7000p: %s:  mant = %d exp = %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"\017dib7000p: %s:  ix = %d\0A\00", align 1
@lut_1000ln_mant = internal constant [21 x i32] [i32 6908, i32 6956, i32 7003, i32 7047, i32 7090, i32 7131, i32 7170, i32 7208, i32 7244, i32 7279, i32 7313, i32 7346, i32 7377, i32 7408, i32 7438, i32 7467, i32 7495, i32 7523, i32 7549, i32 7575, i32 7600], align 16, !dbg !455
@.str.5 = private unnamed_addr constant [29 x i8] c"\017dib7000p: %s:  pow_i = %d\0A\00", align 1
@__const.dib7000pc_detection.msg = private unnamed_addr constant [2 x %struct.i2c_msg] [%struct.i2c_msg { i16 9, i16 0, i16 2, i8* null }, %struct.i2c_msg { i16 9, i16 1, i16 2, i8* null }], align 16
@.str.6 = private unnamed_addr constant [41 x i8] c"\017dib7000p: %s: -D-  DiB7000PC detected\0A\00", align 1
@__func__.dib7000pc_detection = private unnamed_addr constant [20 x i8] c"dib7000pc_detection\00", align 1
@.str.7 = private unnamed_addr constant [45 x i8] c"\017dib7000p: %s: -D-  DiB7000PC not detected\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.8 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.9 = private unnamed_addr constant [35 x i8] c"\017dib7000p: %s: sleep dib7090: %d\0A\00", align 1
@__func__.dib7090_tuner_sleep = private unnamed_addr constant [20 x i8] c"dib7090_tuner_sleep\00", align 1
@dib7000p_ops = internal constant %struct.dvb_frontend_ops { %struct.dvb_frontend_internal_info { [128 x i8] c"DiBcom 7000PC\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 44250000, i32 867250000, i32 62500, i32 0, i32 0, i32 0, i32 0, i32 1075523247 }, [8 x i8] c"\03\00\00\00\00\00\00\00", void (%struct.dvb_frontend*)* null, void (%struct.dvb_frontend*)* @dib7000p_release, void (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @dib7000p_wakeup, i32 (%struct.dvb_frontend*)* @dib7000p_sleep, i32 (%struct.dvb_frontend*, i8*, i32)* null, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @dib7000p_set_frontend, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)* @dib7000p_fe_get_tune_settings, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)* @dib7000p_get_frontend, i32 (%struct.dvb_frontend*, i32*)* @dib7000p_read_status, i32 (%struct.dvb_frontend*, i32*)* @dib7000p_read_ber, i32 (%struct.dvb_frontend*, i16*)* @dib7000p_read_signal_strength, i32 (%struct.dvb_frontend*, i16*)* @dib7000p_read_snr, i32 (%struct.dvb_frontend*, i32*)* @dib7000p_read_unc_blocks, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* null, %struct.dvb_tuner_ops zeroinitializer, %struct.analog_demod_ops zeroinitializer }, align 8, !dbg !4558
@dib7000p_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !459
@.str.10 = private unnamed_addr constant [21 x i8] c"&st->i2c_buffer_lock\00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c"DiB7090 tuner interface\00", align 1
@dib7090_tuner_xfer_algo = internal constant %struct.i2c_algorithm { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)* @dib7090_tuner_xfer, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)* null, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)* null, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)* null, i32 (%struct.i2c_adapter*)* @dib7000p_i2c_func }, align 8, !dbg !4632
@.str.12 = private unnamed_addr constant [56 x i8] c"\017dib7000p: %s: setting output mode for demod %p to %d\0A\00", align 1
@__func__.dib7000p_set_output_mode = private unnamed_addr constant [25 x i8] c"dib7000p_set_output_mode\00", align 1
@.str.13 = private unnamed_addr constant [69 x i8] c"\017dib7000p: %s: Unhandled output_mode passed to be set for demod %p\0A\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"\017dib7000p: %s: autosearch returns: %d\0A\00", align 1
@__func__.dib7000p_set_frontend = private unnamed_addr constant [22 x i8] c"dib7000p_set_frontend\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"\017dib7000p: %s: SPLIT %p: %u\0A\00", align 1
@__func__.dib7000p_agc_startup = private unnamed_addr constant [21 x i8] c"dib7000p_agc_startup\00", align 1
@.str.16 = private unnamed_addr constant [66 x i8] c"\017dib7000p: %s: no valid AGC configuration found for band 0x%02x\0A\00", align 1
@__func__.dib7000p_set_agc_config = private unnamed_addr constant [24 x i8] c"dib7000p_set_agc_config\00", align 1
@.str.17 = private unnamed_addr constant [62 x i8] c"\017dib7000p: %s: WBD: ref: %d, sel: %d, active: %d, alpha: %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [61 x i8] c"\014dib7000p: DIB7000P: dib7000p_get_internal_freq returned 0\0A\00", align 1
@.str.19 = private unnamed_addr constant [84 x i8] c"\017dib7000p: %s: setting a frequency offset of %dkHz internal freq = %d invert = %d\0A\00", align 1
@__func__.dib7000p_set_dds = private unnamed_addr constant [17 x i8] c"dib7000p_set_dds\00", align 1
@.str.20 = private unnamed_addr constant [36 x i8] c"\017dib7000p: %s: using default timf\0A\00", align 1
@__func__.dib7000p_set_bandwidth = private unnamed_addr constant [23 x i8] c"dib7000p_set_bandwidth\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"\017dib7000p: %s: using updated timf\0A\00", align 1
@.str.22 = private unnamed_addr constant [80 x i8] c"\017dib7000p: %s: diversity combination deactivated - forced by COFDM parameters\0A\00", align 1
@__func__.dib7000p_set_diversity_in = private unnamed_addr constant [26 x i8] c"dib7000p_set_diversity_in\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"\017dib7000p: %s: SFN workaround is active\0A\00", align 1
@__func__.dib7000p_tune = private unnamed_addr constant [14 x i8] c"dib7000p_tune\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"\017dib7000p: %s: updated timf_frequency: %d (default: %d)\0A\00", align 1
@__func__.dib7000p_update_timf = private unnamed_addr constant [21 x i8] c"dib7000p_update_timf\00", align 1
@dib7000p_spur_protect.notch = internal global [8 x i16] [i16 16143, i16 14402, i16 12238, i16 9713, i16 6902, i16 3888, i16 759, i16 -2392], align 16, !dbg !4561
@dib7000p_spur_protect.sine = internal global [256 x i8] c"\00\02\03\05\06\08\09\0B\0D\0E\10\11\13\14\16\18\19\1B\1C\1E\1F!\22$&')*,-/023578:;=>@ACDFGIJLMOPRSUVXY[\\^_abcefhiklmoprsuvwyz{}~align 16, !dbg !4618
@.str.25 = private unnamed_addr constant [73 x i8] c"\017dib7000p: %s: relative position of the Spur: %dk (RF: %dk, XTAL: %dk)\0A\00", align 1
@__func__.dib7000p_spur_protect = private unnamed_addr constant [22 x i8] c"dib7000p_spur_protect\00", align 1
@.str.26 = private unnamed_addr constant [45 x i8] c"\017dib7000p: %s: PALF COEF: %d re: %d im: %d\0A\00", align 1
@.str.27 = private unnamed_addr constant [42 x i8] c"\017dib7000p: %s: SET MPEG ON DIBSTREAM TX\0A\00", align 1
@__func__.dib7090_setDibTxMux = private unnamed_addr constant [20 x i8] c"dib7090_setDibTxMux\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"\017dib7000p: %s: SET DIV_OUT ON DIBSTREAM TX\0A\00", align 1
@.str.29 = private unnamed_addr constant [45 x i8] c"\017dib7000p: %s: SET ADC_OUT ON DIBSTREAM TX\0A\00", align 1
@.str.30 = private unnamed_addr constant [40 x i8] c"\017dib7000p: %s: Configure DibStream Tx\0A\00", align 1
@__func__.dib7090_cfg_DibTx = private unnamed_addr constant [18 x i8] c"dib7090_cfg_DibTx\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"\017dib7000p: %s: SET DEM OUT OLD INTERF ON HOST BUS\0A\00", align 1
@__func__.dib7090_setHostBusMux = private unnamed_addr constant [22 x i8] c"dib7090_setHostBusMux\00", align 1
@.str.32 = private unnamed_addr constant [46 x i8] c"\017dib7000p: %s: SET DIBSTREAM TX ON HOST BUS\0A\00", align 1
@.str.33 = private unnamed_addr constant [42 x i8] c"\017dib7000p: %s: SET MPEG MUX ON HOST BUS\0A\00", align 1
@strength_to_db_table = internal global [33 x %struct.linear_segments] [%struct.linear_segments { i32 63630, i32 110500 }, %struct.linear_segments { i32 62273, i32 110000 }, %struct.linear_segments { i32 60162, i32 109000 }, %struct.linear_segments { i32 58730, i32 108000 }, %struct.linear_segments { i32 58294, i32 107000 }, %struct.linear_segments { i32 57778, i32 106000 }, %struct.linear_segments { i32 57320, i32 105000 }, %struct.linear_segments { i32 56779, i32 104000 }, %struct.linear_segments { i32 56293, i32 103000 }, %struct.linear_segments { i32 55724, i32 102000 }, %struct.linear_segments { i32 55145, i32 101000 }, %struct.linear_segments { i32 54680, i32 100000 }, %struct.linear_segments { i32 54293, i32 99000 }, %struct.linear_segments { i32 53813, i32 98000 }, %struct.linear_segments { i32 53427, i32 97000 }, %struct.linear_segments { i32 52981, i32 96000 }, %struct.linear_segments { i32 52636, i32 95000 }, %struct.linear_segments { i32 52014, i32 94000 }, %struct.linear_segments { i32 51674, i32 93000 }, %struct.linear_segments { i32 50692, i32 92000 }, %struct.linear_segments { i32 49824, i32 91000 }, %struct.linear_segments { i32 49052, i32 90000 }, %struct.linear_segments { i32 48436, i32 89000 }, %struct.linear_segments { i32 47836, i32 88000 }, %struct.linear_segments { i32 47368, i32 87000 }, %struct.linear_segments { i32 46468, i32 86000 }, %struct.linear_segments { i32 45597, i32 85000 }, %struct.linear_segments { i32 44586, i32 84000 }, %struct.linear_segments { i32 43667, i32 83000 }, %struct.linear_segments { i32 42673, i32 82000 }, %struct.linear_segments { i32 41816, i32 81000 }, %struct.linear_segments { i32 40876, i32 80000 }, %struct.linear_segments zeroinitializer], align 16, !dbg !4623
@jiffies = external dso_local global i64, align 8
@.str.34 = private unnamed_addr constant [59 x i8] c"\017dib7000p: %s: Next all layers stats available in %u us.\0A\00", align 1
@__func__.dib7000p_get_stats = private unnamed_addr constant [19 x i8] c"dib7000p_get_stats\00", align 1
@.str.35 = private unnamed_addr constant [56 x i8] c"\017dib7000p: %s: checking demod on I2C address: %d (%x)\0A\00", align 1
@__func__.dib7000p_identify = private unnamed_addr constant [18 x i8] c"dib7000p_identify\00", align 1
@.str.36 = private unnamed_addr constant [45 x i8] c"\017dib7000p: %s: wrong Vendor ID (read=0x%x)\0A\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"\017dib7000p: %s: wrong Device ID (%x)\0A\00", align 1
@.str.38 = private unnamed_addr constant [50 x i8] c"\017dib7000p: %s: Tuner ITF: write busy (overflow)\0A\00", align 1
@__func__.w7090p_tuner_write_serpar = private unnamed_addr constant [26 x i8] c"w7090p_tuner_write_serpar\00", align 1
@.str.39 = private unnamed_addr constant [48 x i8] c"\017dib7000p: %s: TunerITF: read busy (overflow)\0A\00", align 1
@__func__.w7090p_tuner_read_serpar = private unnamed_addr constant [25 x i8] c"w7090p_tuner_read_serpar\00", align 1
@.str.40 = private unnamed_addr constant [45 x i8] c"\017dib7000p: %s: TunerITF: read busy (empty)\0A\00", align 1
@.str.41 = private unnamed_addr constant [48 x i8] c"\017dib7000p: %s: GPIO reset was not successful.\0A\00", align 1
@__func__.dib7000p_demod_reset = private unnamed_addr constant [21 x i8] c"dib7000p_demod_reset\00", align 1
@.str.42 = private unnamed_addr constant [49 x i8] c"\017dib7000p: %s: OUTPUT_MODE could not be reset.\0A\00", align 1
@dib7000p_defaults = internal global [77 x i16] [i16 3, i16 2, i16 4, i16 14344, i16 2068, i16 12, i16 6, i16 27, i16 30528, i16 91, i16 -29312, i16 457, i16 -15488, i16 0, i16 128, i16 0, i16 144, i16 1, i16 -11072, i16 1, i16 26, i16 26240, i16 11, i16 79, i16 7250, i16 7238, i16 7264, i16 7309, i16 7338, i16 7382, i16 7427, i16 7456, i16 7500, i16 7544, i16 7574, i16 1, i16 142, i16 1040, i16 8, i16 145, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 1, i16 154, i16 8192, i16 1, i16 168, i16 3277, i16 1, i16 183, i16 8207, i16 1, i16 212, i16 361, i16 5, i16 187, i16 573, i16 164, i16 164, i16 32752, i16 15564, i16 1, i16 198, i16 2048, i16 1, i16 222, i16 16, i16 1, i16 235, i16 98, i16 0], align 16, !dbg !4634
@.str.43 = private unnamed_addr constant [52 x i8] c"\017dib7000p: %s: gpio dir: %x: val: %x, pwm_pos: %x\0A\00", align 1
@__func__.dib7000p_reset_gpio = private unnamed_addr constant [20 x i8] c"dib7000p_reset_gpio\00", align 1
@.str.44 = private unnamed_addr constant [62 x i8] c"\017dib7000p: %s: setting output mode TS_SERIAL using Mpeg Mux\0A\00", align 1
@__func__.dib7090_set_output_mode = private unnamed_addr constant [24 x i8] c"dib7090_set_output_mode\00", align 1
@.str.45 = private unnamed_addr constant [65 x i8] c"\017dib7000p: %s: setting output mode TS_SERIAL using Smooth bloc\0A\00", align 1
@.str.46 = private unnamed_addr constant [70 x i8] c"\017dib7000p: %s: setting output mode TS_PARALLEL_GATED using Mpeg Mux\0A\00", align 1
@.str.47 = private unnamed_addr constant [74 x i8] c"\017dib7000p: %s: setting output mode TS_PARALLEL_GATED using Smooth block\0A\00", align 1
@.str.48 = private unnamed_addr constant [73 x i8] c"\017dib7000p: %s: setting output mode TS_PARALLEL_CONT using Smooth block\0A\00", align 1
@.str.49 = private unnamed_addr constant [64 x i8] c"\017dib7000p: %s: setting output mode TS_FIFO using Smooth block\0A\00", align 1
@.str.50 = private unnamed_addr constant [52 x i8] c"\017dib7000p: %s: setting output mode MODE_DIVERSITY\0A\00", align 1
@.str.51 = private unnamed_addr constant [53 x i8] c"\017dib7000p: %s: setting output mode MODE_ANALOG_ADC\0A\00", align 1
@.str.52 = private unnamed_addr constant [33 x i8] c"\017dib7000p: %s: Enable Mpeg mux\0A\00", align 1
@__func__.dib7090_configMpegMux = private unnamed_addr constant [22 x i8] c"dib7090_configMpegMux\00", align 1
@.str.53 = private unnamed_addr constant [60 x i8] c"\017dib7000p: %s: %s mode OFF : by default Enable Mpeg INPUT\0A\00", align 1
@__func__.dib7090_set_diversity_in = private unnamed_addr constant [25 x i8] c"dib7090_set_diversity_in\00", align 1
@.str.54 = private unnamed_addr constant [48 x i8] c"\017dib7000p: %s: %s ON : Enable diversity INPUT\0A\00", align 1
@.str.55 = private unnamed_addr constant [40 x i8] c"\017dib7000p: %s: Configure DibStream Rx\0A\00", align 1
@__func__.dib7090_cfg_DibRx = private unnamed_addr constant [18 x i8] c"dib7090_cfg_DibRx\00", align 1
@dib7000p_i2c_enumeration.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4639
@.str.56 = private unnamed_addr constant [23 x i8] c"&dpst->i2c_buffer_lock\00", align 1
@.str.57 = private unnamed_addr constant [46 x i8] c"\017dib7000p: %s: DiB7000P #%d: not identified\0A\00", align 1
@__func__.dib7000p_i2c_enumeration = private unnamed_addr constant [25 x i8] c"dib7000p_i2c_enumeration\00", align 1
@.str.58 = private unnamed_addr constant [57 x i8] c"\017dib7000p: %s: IC %d initialized (to i2c_address 0x%x)\0A\00", align 1
@.str.59 = private unnamed_addr constant [56 x i8] c"\017dib7000p: %s: PID filter: index %x, PID %d, OnOff %d\0A\00", align 1
@__func__.dib7000p_pid_filter = private unnamed_addr constant [20 x i8] c"dib7000p_pid_filter\00", align 1
@.str.60 = private unnamed_addr constant [39 x i8] c"\017dib7000p: %s: PID filter enabled %d\0A\00", align 1
@__func__.dib7000p_pid_filter_ctrl = private unnamed_addr constant [25 x i8] c"dib7000p_pid_filter_ctrl\00", align 1
@.str.61 = private unnamed_addr constant [89 x i8] c"\017dib7000p: %s: Updating pll (prediv: old =  %d new = %d ; loopdiv : old = %d new = %d)\0A\00", align 1
@__func__.dib7000p_update_pll = private unnamed_addr constant [20 x i8] c"dib7000p_update_pll\00", align 1
@.str.62 = private unnamed_addr constant [41 x i8] c"\017dib7000p: %s: Waiting for PLL to lock\0A\00", align 1
@llvm.used = appending global [11 x i8*] [i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_debugtype220, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_debug221, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_buggy_sfn_workaround to i8*), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @__UNIQUE_ID_buggy_sfn_workaroundtype222, i32 0, i32 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @__UNIQUE_ID_buggy_sfn_workaround223, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @__UNIQUE_ID_author224, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_author225, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_description226, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__UNIQUE_ID_file227, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_license228, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @dib7000p_attach(%struct.dib7000p_ops* %ops) #0 !dbg !4652 {
entry:
  %retval = alloca i8*, align 8
  %ops.addr = alloca %struct.dib7000p_ops*, align 8
  store %struct.dib7000p_ops* %ops, %struct.dib7000p_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_ops** %ops.addr, metadata !4697, metadata !DIExpression()), !dbg !4698
  %0 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4699
  %tobool = icmp ne %struct.dib7000p_ops* %0, null, !dbg !4699
  br i1 %tobool, label %if.end, label %if.then, !dbg !4701

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !4702
  br label %return, !dbg !4702

if.end:                                           ; preds = %entry
  %1 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4703
  %slave_reset = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %1, i32 0, i32 14, !dbg !4704
  store i32 (%struct.dvb_frontend*)* @dib7090_slave_reset, i32 (%struct.dvb_frontend*)** %slave_reset, align 8, !dbg !4705
  %2 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4706
  %get_adc_power = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %2, i32 0, i32 13, !dbg !4707
  store i32 (%struct.dvb_frontend*)* @dib7090_get_adc_power, i32 (%struct.dvb_frontend*)** %get_adc_power, align 8, !dbg !4708
  %3 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4709
  %dib7000pc_detection = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %3, i32 0, i32 6, !dbg !4710
  store i32 (%struct.i2c_adapter*)* @dib7000pc_detection, i32 (%struct.i2c_adapter*)** %dib7000pc_detection, align 8, !dbg !4711
  %4 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4712
  %get_i2c_tuner = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %4, i32 0, i32 11, !dbg !4713
  store %struct.i2c_adapter* (%struct.dvb_frontend*)* @dib7090_get_i2c_tuner, %struct.i2c_adapter* (%struct.dvb_frontend*)** %get_i2c_tuner, align 8, !dbg !4714
  %5 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4715
  %tuner_sleep = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %5, i32 0, i32 12, !dbg !4716
  store i32 (%struct.dvb_frontend*, i32)* @dib7090_tuner_sleep, i32 (%struct.dvb_frontend*, i32)** %tuner_sleep, align 8, !dbg !4717
  %6 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4718
  %init = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %6, i32 0, i32 15, !dbg !4719
  store %struct.dvb_frontend* (%struct.i2c_adapter*, i8, %struct.dib7000p_config*)* @dib7000p_init, %struct.dvb_frontend* (%struct.i2c_adapter*, i8, %struct.dib7000p_config*)** %init, align 8, !dbg !4720
  %7 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4721
  %set_agc1_min = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %7, i32 0, i32 2, !dbg !4722
  store i32 (%struct.dvb_frontend*, i16)* @dib7000p_set_agc1_min, i32 (%struct.dvb_frontend*, i16)** %set_agc1_min, align 8, !dbg !4723
  %8 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4724
  %set_gpio = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %8, i32 0, i32 4, !dbg !4725
  store i32 (%struct.dvb_frontend*, i8, i8, i8)* @dib7000p_set_gpio, i32 (%struct.dvb_frontend*, i8, i8, i8)** %set_gpio, align 8, !dbg !4726
  %9 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4727
  %i2c_enumeration = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %9, i32 0, i32 10, !dbg !4728
  store i32 (%struct.i2c_adapter*, i32, i8, %struct.dib7000p_config*)* @dib7000p_i2c_enumeration, i32 (%struct.i2c_adapter*, i32, i8, %struct.dib7000p_config*)** %i2c_enumeration, align 8, !dbg !4729
  %10 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4730
  %pid_filter = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %10, i32 0, i32 9, !dbg !4731
  store i32 (%struct.dvb_frontend*, i8, i16, i8)* @dib7000p_pid_filter, i32 (%struct.dvb_frontend*, i8, i16, i8)** %pid_filter, align 8, !dbg !4732
  %11 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4733
  %pid_filter_ctrl = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %11, i32 0, i32 8, !dbg !4734
  store i32 (%struct.dvb_frontend*, i8)* @dib7000p_pid_filter_ctrl, i32 (%struct.dvb_frontend*, i8)** %pid_filter_ctrl, align 8, !dbg !4735
  %12 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4736
  %get_i2c_master = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %12, i32 0, i32 7, !dbg !4737
  store %struct.i2c_adapter* (%struct.dvb_frontend*, i32, i32)* @dib7000p_get_i2c_master, %struct.i2c_adapter* (%struct.dvb_frontend*, i32, i32)** %get_i2c_master, align 8, !dbg !4738
  %13 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4739
  %update_pll = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %13, i32 0, i32 3, !dbg !4740
  store i32 (%struct.dvb_frontend*, %struct.dibx000_bandwidth_config*)* @dib7000p_update_pll, i32 (%struct.dvb_frontend*, %struct.dibx000_bandwidth_config*)** %update_pll, align 8, !dbg !4741
  %14 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4742
  %ctrl_timf = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %14, i32 0, i32 5, !dbg !4743
  store i32 (%struct.dvb_frontend*, i8, i32)* @dib7000p_ctrl_timf, i32 (%struct.dvb_frontend*, i8, i32)** %ctrl_timf, align 8, !dbg !4744
  %15 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4745
  %get_agc_values = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %15, i32 0, i32 1, !dbg !4746
  store i32 (%struct.dvb_frontend*, i16*, i16*, i16*, i16*)* @dib7000p_get_agc_values, i32 (%struct.dvb_frontend*, i16*, i16*, i16*, i16*)** %get_agc_values, align 8, !dbg !4747
  %16 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4748
  %set_wbd_ref = getelementptr inbounds %struct.dib7000p_ops, %struct.dib7000p_ops* %16, i32 0, i32 0, !dbg !4749
  store i32 (%struct.dvb_frontend*, i16)* @dib7000p_set_wbd_ref, i32 (%struct.dvb_frontend*, i16)** %set_wbd_ref, align 8, !dbg !4750
  %17 = load %struct.dib7000p_ops*, %struct.dib7000p_ops** %ops.addr, align 8, !dbg !4751
  %18 = bitcast %struct.dib7000p_ops* %17 to i8*, !dbg !4751
  store i8* %18, i8** %retval, align 8, !dbg !4752
  br label %return, !dbg !4752

return:                                           ; preds = %if.end, %if.then
  %19 = load i8*, i8** %retval, align 8, !dbg !4753
  ret i8* %19, !dbg !4753
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_slave_reset(%struct.dvb_frontend* %fe) #0 !dbg !4754 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %reg = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !4757, metadata !DIExpression()), !dbg !4758
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !4759
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !4760
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !4760
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !4759
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !4758
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !4761, metadata !DIExpression()), !dbg !4762
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4763
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 1794) #8, !dbg !4764
  store i16 %call, i16* %reg, align 2, !dbg !4765
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4766
  %5 = load i16, i16* %reg, align 2, !dbg !4767
  %conv = zext i16 %5 to i32, !dbg !4767
  %or = or i32 %conv, 16384, !dbg !4768
  %conv1 = trunc i32 %or to i16, !dbg !4767
  %call2 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %4, i16 zeroext 1794, i16 zeroext %conv1) #8, !dbg !4769
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4770
  %call3 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 1032, i16 zeroext -1) #8, !dbg !4771
  ret i32 0, !dbg !4772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_get_adc_power(%struct.dvb_frontend* %fe) #0 !dbg !4773 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !4774, metadata !DIExpression()), !dbg !4775
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !4776
  %call = call i32 @dib7000p_get_adc_power(%struct.dvb_frontend* %0) #8, !dbg !4777
  ret i32 %call, !dbg !4778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000pc_detection(%struct.i2c_adapter* %i2c_adap) #0 !dbg !4779 {
entry:
  %retval = alloca i32, align 4
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %tx = alloca i8*, align 8
  %rx = alloca i8*, align 8
  %msg = alloca [2 x %struct.i2c_msg], align 16
  %ret = alloca i32, align 4
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !4780, metadata !DIExpression()), !dbg !4781
  call void @llvm.dbg.declare(metadata i8** %tx, metadata !4782, metadata !DIExpression()), !dbg !4783
  call void @llvm.dbg.declare(metadata i8** %rx, metadata !4784, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.declare(metadata [2 x %struct.i2c_msg]* %msg, metadata !4786, metadata !DIExpression()), !dbg !4787
  %0 = bitcast [2 x %struct.i2c_msg]* %msg to i8*, !dbg !4787
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([2 x %struct.i2c_msg]* @__const.dib7000pc_detection.msg to i8*), i64 32, i1 false), !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4788, metadata !DIExpression()), !dbg !4789
  store i32 0, i32* %ret, align 4, !dbg !4789
  %call = call i8* @kzalloc(i64 2, i32 3264) #8, !dbg !4790
  store i8* %call, i8** %tx, align 8, !dbg !4791
  %1 = load i8*, i8** %tx, align 8, !dbg !4792
  %tobool = icmp ne i8* %1, null, !dbg !4792
  br i1 %tobool, label %if.end, label %if.then, !dbg !4794

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !4795
  br label %return, !dbg !4795

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 2, i32 3264) #8, !dbg !4796
  store i8* %call1, i8** %rx, align 8, !dbg !4797
  %2 = load i8*, i8** %rx, align 8, !dbg !4798
  %tobool2 = icmp ne i8* %2, null, !dbg !4798
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !4800

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !4801
  br label %rx_memory_error, !dbg !4803

if.end4:                                          ; preds = %if.end
  %3 = load i8*, i8** %tx, align 8, !dbg !4804
  %arrayidx = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !4805
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 3, !dbg !4806
  store i8* %3, i8** %buf, align 8, !dbg !4807
  %4 = load i8*, i8** %rx, align 8, !dbg !4808
  %arrayidx5 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 1, !dbg !4809
  %buf6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx5, i32 0, i32 3, !dbg !4810
  store i8* %4, i8** %buf6, align 8, !dbg !4811
  %5 = load i8*, i8** %tx, align 8, !dbg !4812
  %arrayidx7 = getelementptr i8, i8* %5, i64 0, !dbg !4812
  store i8 3, i8* %arrayidx7, align 1, !dbg !4813
  %6 = load i8*, i8** %tx, align 8, !dbg !4814
  %arrayidx8 = getelementptr i8, i8* %6, i64 1, !dbg !4814
  store i8 0, i8* %arrayidx8, align 1, !dbg !4815
  %7 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !4816
  %arraydecay = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !4818
  %call9 = call i32 @i2c_transfer(%struct.i2c_adapter* %7, %struct.i2c_msg* %arraydecay, i32 2) #8, !dbg !4819
  %cmp = icmp eq i32 %call9, 2, !dbg !4820
  br i1 %cmp, label %if.then10, label %if.end24, !dbg !4821

if.then10:                                        ; preds = %if.end4
  %8 = load i8*, i8** %rx, align 8, !dbg !4822
  %arrayidx11 = getelementptr i8, i8* %8, i64 0, !dbg !4822
  %9 = load i8, i8* %arrayidx11, align 1, !dbg !4822
  %conv = zext i8 %9 to i32, !dbg !4822
  %cmp12 = icmp eq i32 %conv, 1, !dbg !4824
  br i1 %cmp12, label %land.lhs.true, label %if.end23, !dbg !4825

land.lhs.true:                                    ; preds = %if.then10
  %10 = load i8*, i8** %rx, align 8, !dbg !4826
  %arrayidx14 = getelementptr i8, i8* %10, i64 1, !dbg !4826
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !4826
  %conv15 = zext i8 %11 to i32, !dbg !4826
  %cmp16 = icmp eq i32 %conv15, 179, !dbg !4827
  br i1 %cmp16, label %if.then18, label %if.end23, !dbg !4828

if.then18:                                        ; preds = %land.lhs.true
  br label %do.body, !dbg !4829

do.body:                                          ; preds = %if.then18
  %12 = load i32, i32* @debug, align 4, !dbg !4831
  %tobool19 = icmp ne i32 %12, 0, !dbg !4831
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !4834

if.then20:                                        ; preds = %do.body
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000pc_detection, i64 0, i64 0)) #9, !dbg !4831
  br label %if.end22, !dbg !4831

if.end22:                                         ; preds = %if.then20, %do.body
  br label %do.end, !dbg !4834

do.end:                                           ; preds = %if.end22
  store i32 1, i32* %ret, align 4, !dbg !4835
  br label %out, !dbg !4836

if.end23:                                         ; preds = %land.lhs.true, %if.then10
  br label %if.end24, !dbg !4837

if.end24:                                         ; preds = %if.end23, %if.end4
  %arrayidx25 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 1, !dbg !4838
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx25, i32 0, i32 0, !dbg !4839
  store i16 64, i16* %addr, align 16, !dbg !4840
  %arrayidx26 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !4841
  %addr27 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx26, i32 0, i32 0, !dbg !4842
  store i16 64, i16* %addr27, align 16, !dbg !4843
  %13 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !4844
  %arraydecay28 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !4846
  %call29 = call i32 @i2c_transfer(%struct.i2c_adapter* %13, %struct.i2c_msg* %arraydecay28, i32 2) #8, !dbg !4847
  %cmp30 = icmp eq i32 %call29, 2, !dbg !4848
  br i1 %cmp30, label %if.then32, label %if.end50, !dbg !4849

if.then32:                                        ; preds = %if.end24
  %14 = load i8*, i8** %rx, align 8, !dbg !4850
  %arrayidx33 = getelementptr i8, i8* %14, i64 0, !dbg !4850
  %15 = load i8, i8* %arrayidx33, align 1, !dbg !4850
  %conv34 = zext i8 %15 to i32, !dbg !4850
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !4852
  br i1 %cmp35, label %land.lhs.true37, label %if.end49, !dbg !4853

land.lhs.true37:                                  ; preds = %if.then32
  %16 = load i8*, i8** %rx, align 8, !dbg !4854
  %arrayidx38 = getelementptr i8, i8* %16, i64 1, !dbg !4854
  %17 = load i8, i8* %arrayidx38, align 1, !dbg !4854
  %conv39 = zext i8 %17 to i32, !dbg !4854
  %cmp40 = icmp eq i32 %conv39, 179, !dbg !4855
  br i1 %cmp40, label %if.then42, label %if.end49, !dbg !4856

if.then42:                                        ; preds = %land.lhs.true37
  br label %do.body43, !dbg !4857

do.body43:                                        ; preds = %if.then42
  %18 = load i32, i32* @debug, align 4, !dbg !4859
  %tobool44 = icmp ne i32 %18, 0, !dbg !4859
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !4862

if.then45:                                        ; preds = %do.body43
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000pc_detection, i64 0, i64 0)) #9, !dbg !4859
  br label %if.end47, !dbg !4859

if.end47:                                         ; preds = %if.then45, %do.body43
  br label %do.end48, !dbg !4862

do.end48:                                         ; preds = %if.end47
  store i32 1, i32* %ret, align 4, !dbg !4863
  br label %out, !dbg !4864

if.end49:                                         ; preds = %land.lhs.true37, %if.then32
  br label %if.end50, !dbg !4865

if.end50:                                         ; preds = %if.end49, %if.end24
  br label %do.body51, !dbg !4866

do.body51:                                        ; preds = %if.end50
  %19 = load i32, i32* @debug, align 4, !dbg !4867
  %tobool52 = icmp ne i32 %19, 0, !dbg !4867
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !4870

if.then53:                                        ; preds = %do.body51
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000pc_detection, i64 0, i64 0)) #9, !dbg !4867
  br label %if.end55, !dbg !4867

if.end55:                                         ; preds = %if.then53, %do.body51
  br label %do.end56, !dbg !4870

do.end56:                                         ; preds = %if.end55
  br label %out, !dbg !4870

out:                                              ; preds = %do.end56, %do.end48, %do.end
  call void @llvm.dbg.label(metadata !4871), !dbg !4872
  %20 = load i8*, i8** %rx, align 8, !dbg !4873
  call void @kfree(i8* %20) #8, !dbg !4874
  br label %rx_memory_error, !dbg !4874

rx_memory_error:                                  ; preds = %out, %if.then3
  call void @llvm.dbg.label(metadata !4875), !dbg !4876
  %21 = load i8*, i8** %tx, align 8, !dbg !4877
  call void @kfree(i8* %21) #8, !dbg !4878
  %22 = load i32, i32* %ret, align 4, !dbg !4879
  store i32 %22, i32* %retval, align 4, !dbg !4880
  br label %return, !dbg !4880

return:                                           ; preds = %rx_memory_error, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !4881
  ret i32 %23, !dbg !4881
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.i2c_adapter* @dib7090_get_i2c_tuner(%struct.dvb_frontend* %fe) #0 !dbg !4882 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %st = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !4883, metadata !DIExpression()), !dbg !4884
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st, metadata !4885, metadata !DIExpression()), !dbg !4886
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !4887
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !4888
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !4888
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !4887
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %st, align 8, !dbg !4886
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4889
  %dib7090_tuner_adap = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 18, !dbg !4890
  ret %struct.i2c_adapter* %dib7090_tuner_adap, !dbg !4891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_tuner_sleep(%struct.dvb_frontend* %fe, i32 %onoff) #0 !dbg !4892 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %onoff.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %en_cur_state = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !4893, metadata !DIExpression()), !dbg !4894
  store i32 %onoff, i32* %onoff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onoff.addr, metadata !4895, metadata !DIExpression()), !dbg !4896
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !4897, metadata !DIExpression()), !dbg !4898
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !4899
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !4900
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !4900
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !4899
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !4898
  call void @llvm.dbg.declare(metadata i16* %en_cur_state, metadata !4901, metadata !DIExpression()), !dbg !4902
  br label %do.body, !dbg !4903

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !4904
  %tobool = icmp ne i32 %3, 0, !dbg !4904
  br i1 %tobool, label %if.then, label %if.end, !dbg !4907

if.then:                                          ; preds = %do.body
  %4 = load i32, i32* %onoff.addr, align 4, !dbg !4904
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7090_tuner_sleep, i64 0, i64 0), i32 %4) #9, !dbg !4904
  br label %if.end, !dbg !4904

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !4907

do.end:                                           ; preds = %if.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4908
  %call1 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %5, i16 zeroext 1922) #8, !dbg !4909
  store i16 %call1, i16* %en_cur_state, align 2, !dbg !4910
  %6 = load i16, i16* %en_cur_state, align 2, !dbg !4911
  %conv = zext i16 %6 to i32, !dbg !4911
  %cmp = icmp sgt i32 %conv, 255, !dbg !4913
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !4914

if.then3:                                         ; preds = %do.end
  %7 = load i16, i16* %en_cur_state, align 2, !dbg !4915
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4916
  %tuner_enable = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 17, !dbg !4917
  store i16 %7, i16* %tuner_enable, align 2, !dbg !4918
  br label %if.end4, !dbg !4916

if.end4:                                          ; preds = %if.then3, %do.end
  %9 = load i32, i32* %onoff.addr, align 4, !dbg !4919
  %tobool5 = icmp ne i32 %9, 0, !dbg !4919
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !4921

if.then6:                                         ; preds = %if.end4
  %10 = load i16, i16* %en_cur_state, align 2, !dbg !4922
  %conv7 = zext i16 %10 to i32, !dbg !4922
  %and = and i32 %conv7, 255, !dbg !4922
  %conv8 = trunc i32 %and to i16, !dbg !4922
  store i16 %conv8, i16* %en_cur_state, align 2, !dbg !4922
  br label %if.end16, !dbg !4923

if.else:                                          ; preds = %if.end4
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4924
  %tuner_enable9 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %11, i32 0, i32 17, !dbg !4927
  %12 = load i16, i16* %tuner_enable9, align 2, !dbg !4927
  %conv10 = zext i16 %12 to i32, !dbg !4924
  %cmp11 = icmp ne i32 %conv10, 0, !dbg !4928
  br i1 %cmp11, label %if.then13, label %if.end15, !dbg !4929

if.then13:                                        ; preds = %if.else
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4930
  %tuner_enable14 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %13, i32 0, i32 17, !dbg !4931
  %14 = load i16, i16* %tuner_enable14, align 2, !dbg !4931
  store i16 %14, i16* %en_cur_state, align 2, !dbg !4932
  br label %if.end15, !dbg !4933

if.end15:                                         ; preds = %if.then13, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then6
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !4934
  %16 = load i16, i16* %en_cur_state, align 2, !dbg !4935
  %call17 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %15, i16 zeroext 1922, i16 zeroext %16) #8, !dbg !4936
  ret i32 0, !dbg !4937
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dvb_frontend* @dib7000p_init(%struct.i2c_adapter* %i2c_adap, i8 zeroext %i2c_addr, %struct.dib7000p_config* %cfg) #0 !dbg !461 {
entry:
  %retval = alloca %struct.dvb_frontend*, align 8
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %i2c_addr.addr = alloca i8, align 1
  %cfg.addr = alloca %struct.dib7000p_config*, align 8
  %demod = alloca %struct.dvb_frontend*, align 8
  %st = alloca %struct.dib7000p_state*, align 8
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !4938, metadata !DIExpression()), !dbg !4939
  store i8 %i2c_addr, i8* %i2c_addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %i2c_addr.addr, metadata !4940, metadata !DIExpression()), !dbg !4941
  store %struct.dib7000p_config* %cfg, %struct.dib7000p_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_config** %cfg.addr, metadata !4942, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod, metadata !4944, metadata !DIExpression()), !dbg !4945
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st, metadata !4946, metadata !DIExpression()), !dbg !4947
  %call = call i8* @kzalloc(i64 6840, i32 3264) #8, !dbg !4948
  %0 = bitcast i8* %call to %struct.dib7000p_state*, !dbg !4948
  store %struct.dib7000p_state* %0, %struct.dib7000p_state** %st, align 8, !dbg !4949
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4950
  %cmp = icmp eq %struct.dib7000p_state* %1, null, !dbg !4952
  br i1 %cmp, label %if.then, label %if.end, !dbg !4953

if.then:                                          ; preds = %entry
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !4954
  br label %return, !dbg !4954

if.end:                                           ; preds = %entry
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4955
  %cfg1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %2, i32 0, i32 1, !dbg !4956
  %3 = bitcast %struct.dib7000p_config* %cfg1 to i8*, !dbg !4957
  %4 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !4958
  %5 = bitcast %struct.dib7000p_config* %4 to i8*, !dbg !4957
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %5, i64 72, i1 false), !dbg !4957
  %6 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !4959
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4960
  %i2c_adap2 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %7, i32 0, i32 3, !dbg !4961
  store %struct.i2c_adapter* %6, %struct.i2c_adapter** %i2c_adap2, align 8, !dbg !4962
  %8 = load i8, i8* %i2c_addr.addr, align 1, !dbg !4963
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4964
  %i2c_addr3 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 2, !dbg !4965
  store i8 %8, i8* %i2c_addr3, align 8, !dbg !4966
  %10 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !4967
  %gpio_val = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %10, i32 0, i32 8, !dbg !4968
  %11 = load i16, i16* %gpio_val, align 2, !dbg !4968
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4969
  %gpio_val4 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %12, i32 0, i32 14, !dbg !4970
  store i16 %11, i16* %gpio_val4, align 4, !dbg !4971
  %13 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !4972
  %gpio_dir = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %13, i32 0, i32 7, !dbg !4973
  %14 = load i16, i16* %gpio_dir, align 8, !dbg !4973
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4974
  %gpio_dir5 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 13, !dbg !4975
  store i16 %14, i16* %gpio_dir5, align 2, !dbg !4976
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4977
  %cfg6 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %16, i32 0, i32 1, !dbg !4979
  %output_mode = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg6, i32 0, i32 14, !dbg !4980
  %17 = load i8, i8* %output_mode, align 8, !dbg !4980
  %conv = zext i8 %17 to i32, !dbg !4977
  %cmp7 = icmp ne i32 %conv, 7, !dbg !4981
  br i1 %cmp7, label %land.lhs.true, label %if.end17, !dbg !4982

land.lhs.true:                                    ; preds = %if.end
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4983
  %cfg9 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %18, i32 0, i32 1, !dbg !4984
  %output_mode10 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg9, i32 0, i32 14, !dbg !4985
  %19 = load i8, i8* %output_mode10, align 8, !dbg !4985
  %conv11 = zext i8 %19 to i32, !dbg !4983
  %cmp12 = icmp ne i32 %conv11, 1, !dbg !4986
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !4987

if.then14:                                        ; preds = %land.lhs.true
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4988
  %cfg15 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %20, i32 0, i32 1, !dbg !4989
  %output_mode16 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg15, i32 0, i32 14, !dbg !4990
  store i8 5, i8* %output_mode16, align 8, !dbg !4991
  br label %if.end17, !dbg !4988

if.end17:                                         ; preds = %if.then14, %land.lhs.true, %if.end
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4992
  %demod18 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %21, i32 0, i32 0, !dbg !4993
  store %struct.dvb_frontend* %demod18, %struct.dvb_frontend** %demod, align 8, !dbg !4994
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4995
  %23 = bitcast %struct.dib7000p_state* %22 to i8*, !dbg !4995
  %24 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod, align 8, !dbg !4996
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %24, i32 0, i32 3, !dbg !4997
  store i8* %23, i8** %demodulator_priv, align 8, !dbg !4998
  %25 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !4999
  %demod19 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %25, i32 0, i32 0, !dbg !5000
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %demod19, i32 0, i32 1, !dbg !5001
  %26 = bitcast %struct.dvb_frontend_ops* %ops to i8*, !dbg !5002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @dib7000p_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !5002
  br label %do.body, !dbg !5003

do.body:                                          ; preds = %if.end17
  %27 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5004
  %i2c_buffer_lock = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %27, i32 0, i32 22, !dbg !5004
  call void @__mutex_init(%struct.mutex* %i2c_buffer_lock, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), %struct.lock_class_key* @dib7000p_init.__key) #8, !dbg !5004
  br label %do.end, !dbg !5004

do.end:                                           ; preds = %do.body
  %28 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5006
  %call20 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %28, i16 zeroext 1287, i16 zeroext 3) #8, !dbg !5007
  %29 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5008
  %call21 = call i32 @dib7000p_identify(%struct.dib7000p_state* %29) #8, !dbg !5010
  %cmp22 = icmp ne i32 %call21, 0, !dbg !5011
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !5012

if.then24:                                        ; preds = %do.end
  br label %error, !dbg !5013

if.end25:                                         ; preds = %do.end
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5014
  %call26 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %30, i16 zeroext 897) #8, !dbg !5015
  %31 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5016
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %31, i32 0, i32 16, !dbg !5017
  store i16 %call26, i16* %version, align 8, !dbg !5018
  %32 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !5019
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %32, i32 0, i32 9, !dbg !5020
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !5021
  %33 = load %struct.device*, %struct.device** %parent, align 8, !dbg !5021
  %34 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5022
  %i2c_master = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %34, i32 0, i32 4, !dbg !5023
  %gated_tuner_i2c_adap = getelementptr inbounds %struct.dibx000_i2c_master, %struct.dibx000_i2c_master* %i2c_master, i32 0, i32 2, !dbg !5024
  %dev27 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %gated_tuner_i2c_adap, i32 0, i32 9, !dbg !5025
  %parent28 = getelementptr inbounds %struct.device, %struct.device* %dev27, i32 0, i32 1, !dbg !5026
  store %struct.device* %33, %struct.device** %parent28, align 8, !dbg !5027
  %35 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5028
  %i2c_master29 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %35, i32 0, i32 4, !dbg !5029
  %36 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5030
  %i2c_adap30 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %36, i32 0, i32 3, !dbg !5031
  %37 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap30, align 8, !dbg !5031
  %38 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5032
  %i2c_addr31 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %38, i32 0, i32 2, !dbg !5033
  %39 = load i8, i8* %i2c_addr31, align 8, !dbg !5033
  %call32 = call i32 @dibx000_init_i2c_master(%struct.dibx000_i2c_master* %i2c_master29, i16 zeroext 11, %struct.i2c_adapter* %37, i8 zeroext %39) #8, !dbg !5034
  %40 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5035
  %dib7090_tuner_adap = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %40, i32 0, i32 18, !dbg !5036
  %name = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %dib7090_tuner_adap, i32 0, i32 12, !dbg !5037
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %name, i64 0, i64 0, !dbg !5035
  %call33 = call i64 @strscpy(i8* %arraydecay, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i64 48) #8, !dbg !5038
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5039
  %dib7090_tuner_adap34 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %41, i32 0, i32 18, !dbg !5040
  %algo = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %dib7090_tuner_adap34, i32 0, i32 2, !dbg !5041
  store %struct.i2c_algorithm* @dib7090_tuner_xfer_algo, %struct.i2c_algorithm** %algo, align 8, !dbg !5042
  %42 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5043
  %dib7090_tuner_adap35 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %42, i32 0, i32 18, !dbg !5044
  %algo_data = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %dib7090_tuner_adap35, i32 0, i32 3, !dbg !5045
  store i8* null, i8** %algo_data, align 8, !dbg !5046
  %43 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5047
  %i2c_adap36 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %43, i32 0, i32 3, !dbg !5048
  %44 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap36, align 8, !dbg !5048
  %dev37 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %44, i32 0, i32 9, !dbg !5049
  %parent38 = getelementptr inbounds %struct.device, %struct.device* %dev37, i32 0, i32 1, !dbg !5050
  %45 = load %struct.device*, %struct.device** %parent38, align 8, !dbg !5050
  %46 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5051
  %dib7090_tuner_adap39 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %46, i32 0, i32 18, !dbg !5052
  %dev40 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %dib7090_tuner_adap39, i32 0, i32 9, !dbg !5053
  %parent41 = getelementptr inbounds %struct.device, %struct.device* %dev40, i32 0, i32 1, !dbg !5054
  store %struct.device* %45, %struct.device** %parent41, align 8, !dbg !5055
  %47 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5056
  %dib7090_tuner_adap42 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %47, i32 0, i32 18, !dbg !5057
  %48 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5058
  %49 = bitcast %struct.dib7000p_state* %48 to i8*, !dbg !5058
  call void @i2c_set_adapdata(%struct.i2c_adapter* %dib7090_tuner_adap42, i8* %49) #8, !dbg !5059
  %50 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5060
  %dib7090_tuner_adap43 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %50, i32 0, i32 18, !dbg !5061
  %call44 = call i32 @i2c_add_adapter(%struct.i2c_adapter* %dib7090_tuner_adap43) #8, !dbg !5062
  %51 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5063
  %call45 = call i32 @dib7000p_demod_reset(%struct.dib7000p_state* %51) #8, !dbg !5064
  %52 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod, align 8, !dbg !5065
  call void @dib7000p_reset_stats(%struct.dvb_frontend* %52) #8, !dbg !5066
  %53 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5067
  %version46 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %53, i32 0, i32 16, !dbg !5069
  %54 = load i16, i16* %version46, align 8, !dbg !5069
  %conv47 = zext i16 %54 to i32, !dbg !5067
  %cmp48 = icmp eq i32 %conv47, 28816, !dbg !5070
  br i1 %cmp48, label %if.then50, label %if.end56, !dbg !5071

if.then50:                                        ; preds = %if.end25
  %55 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod, align 8, !dbg !5072
  %56 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5074
  %cfg51 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %56, i32 0, i32 1, !dbg !5075
  %output_mode52 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg51, i32 0, i32 14, !dbg !5076
  %57 = load i8, i8* %output_mode52, align 8, !dbg !5076
  %conv53 = zext i8 %57 to i32, !dbg !5074
  %call54 = call i32 @dib7090_set_output_mode(%struct.dvb_frontend* %55, i32 %conv53) #8, !dbg !5077
  %58 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod, align 8, !dbg !5078
  %call55 = call i32 @dib7090_set_diversity_in(%struct.dvb_frontend* %58, i32 0) #8, !dbg !5079
  br label %if.end56, !dbg !5080

if.end56:                                         ; preds = %if.then50, %if.end25
  %59 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod, align 8, !dbg !5081
  store %struct.dvb_frontend* %59, %struct.dvb_frontend** %retval, align 8, !dbg !5082
  br label %return, !dbg !5082

error:                                            ; preds = %if.then24
  call void @llvm.dbg.label(metadata !5083), !dbg !5084
  %60 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5085
  %61 = bitcast %struct.dib7000p_state* %60 to i8*, !dbg !5085
  call void @kfree(i8* %61) #8, !dbg !5086
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !5087
  br label %return, !dbg !5087

return:                                           ; preds = %error, %if.end56, %if.then
  %62 = load %struct.dvb_frontend*, %struct.dvb_frontend** %retval, align 8, !dbg !5088
  ret %struct.dvb_frontend* %62, !dbg !5088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_agc1_min(%struct.dvb_frontend* %fe, i16 zeroext %v) #0 !dbg !5089 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %v.addr = alloca i16, align 2
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5090, metadata !DIExpression()), !dbg !5091
  store i16 %v, i16* %v.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %v.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5094, metadata !DIExpression()), !dbg !5095
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5096
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5097
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5097
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5096
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5095
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5098
  %4 = load i16, i16* %v.addr, align 2, !dbg !5099
  %call = call i32 @dib7000p_write_word(%struct.dib7000p_state* %3, i16 zeroext 108, i16 zeroext %4) #8, !dbg !5100
  ret i32 %call, !dbg !5101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_gpio(%struct.dvb_frontend* %demod, i8 zeroext %num, i8 zeroext %dir, i8 zeroext %val) #0 !dbg !5102 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %num.addr = alloca i8, align 1
  %dir.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !5103, metadata !DIExpression()), !dbg !5104
  store i8 %num, i8* %num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num.addr, metadata !5105, metadata !DIExpression()), !dbg !5106
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !5107, metadata !DIExpression()), !dbg !5108
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !5109, metadata !DIExpression()), !dbg !5110
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5111, metadata !DIExpression()), !dbg !5112
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !5113
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5114
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5114
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5113
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5112
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5115
  %4 = load i8, i8* %num.addr, align 1, !dbg !5116
  %5 = load i8, i8* %dir.addr, align 1, !dbg !5117
  %6 = load i8, i8* %val.addr, align 1, !dbg !5118
  %call = call i32 @dib7000p_cfg_gpio(%struct.dib7000p_state* %3, i8 zeroext %4, i8 zeroext %5, i8 zeroext %6) #8, !dbg !5119
  ret i32 %call, !dbg !5120
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_i2c_enumeration(%struct.i2c_adapter* %i2c, i32 %no_of_demods, i8 zeroext %default_addr, %struct.dib7000p_config* %cfg) #0 !dbg !4641 {
entry:
  %retval = alloca i32, align 4
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  %no_of_demods.addr = alloca i32, align 4
  %default_addr.addr = alloca i8, align 1
  %cfg.addr = alloca %struct.dib7000p_config*, align 8
  %dpst = alloca %struct.dib7000p_state*, align 8
  %k = alloca i32, align 4
  %new_addr = alloca i8, align 1
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  store i32 %no_of_demods, i32* %no_of_demods.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no_of_demods.addr, metadata !5123, metadata !DIExpression()), !dbg !5124
  store i8 %default_addr, i8* %default_addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %default_addr.addr, metadata !5125, metadata !DIExpression()), !dbg !5126
  store %struct.dib7000p_config* %cfg, %struct.dib7000p_config** %cfg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_config** %cfg.addr, metadata !5127, metadata !DIExpression()), !dbg !5128
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %dpst, metadata !5129, metadata !DIExpression()), !dbg !5130
  call void @llvm.dbg.declare(metadata i32* %k, metadata !5131, metadata !DIExpression()), !dbg !5132
  store i32 0, i32* %k, align 4, !dbg !5132
  call void @llvm.dbg.declare(metadata i8* %new_addr, metadata !5133, metadata !DIExpression()), !dbg !5134
  store i8 0, i8* %new_addr, align 1, !dbg !5134
  %call = call i8* @kzalloc(i64 6840, i32 3264) #8, !dbg !5135
  %0 = bitcast i8* %call to %struct.dib7000p_state*, !dbg !5135
  store %struct.dib7000p_state* %0, %struct.dib7000p_state** %dpst, align 8, !dbg !5136
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5137
  %tobool = icmp ne %struct.dib7000p_state* %1, null, !dbg !5137
  br i1 %tobool, label %if.end, label %if.then, !dbg !5139

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5140
  br label %return, !dbg !5140

if.end:                                           ; preds = %entry
  %2 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !5141
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5142
  %i2c_adap = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 3, !dbg !5143
  store %struct.i2c_adapter* %2, %struct.i2c_adapter** %i2c_adap, align 8, !dbg !5144
  br label %do.body, !dbg !5145

do.body:                                          ; preds = %if.end
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5146
  %i2c_buffer_lock = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %4, i32 0, i32 22, !dbg !5146
  call void @__mutex_init(%struct.mutex* %i2c_buffer_lock, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0), %struct.lock_class_key* @dib7000p_i2c_enumeration.__key) #8, !dbg !5146
  br label %do.end, !dbg !5146

do.end:                                           ; preds = %do.body
  %5 = load i32, i32* %no_of_demods.addr, align 4, !dbg !5148
  %sub = sub i32 %5, 1, !dbg !5150
  store i32 %sub, i32* %k, align 4, !dbg !5151
  br label %for.cond, !dbg !5152

for.cond:                                         ; preds = %for.inc, %do.end
  %6 = load i32, i32* %k, align 4, !dbg !5153
  %cmp = icmp sge i32 %6, 0, !dbg !5155
  br i1 %cmp, label %for.body, label %for.end, !dbg !5156

for.body:                                         ; preds = %for.cond
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5157
  %cfg1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %7, i32 0, i32 1, !dbg !5159
  %8 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !5160
  %9 = load i32, i32* %k, align 4, !dbg !5161
  %idxprom = sext i32 %9 to i64, !dbg !5160
  %arrayidx = getelementptr %struct.dib7000p_config, %struct.dib7000p_config* %8, i64 %idxprom, !dbg !5160
  %10 = bitcast %struct.dib7000p_config* %cfg1 to i8*, !dbg !5160
  %11 = bitcast %struct.dib7000p_config* %arrayidx to i8*, !dbg !5160
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 72, i1 false), !dbg !5160
  %12 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !5162
  %13 = load i32, i32* %k, align 4, !dbg !5164
  %idxprom2 = sext i32 %13 to i64, !dbg !5162
  %arrayidx3 = getelementptr %struct.dib7000p_config, %struct.dib7000p_config* %12, i64 %idxprom2, !dbg !5162
  %default_i2c_addr = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %arrayidx3, i32 0, i32 17, !dbg !5165
  %14 = load i8, i8* %default_i2c_addr, align 4, !dbg !5165
  %conv = zext i8 %14 to i32, !dbg !5162
  %cmp4 = icmp ne i32 %conv, 0, !dbg !5166
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !5167

if.then6:                                         ; preds = %for.body
  %15 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !5168
  %16 = load i32, i32* %k, align 4, !dbg !5169
  %idxprom7 = sext i32 %16 to i64, !dbg !5168
  %arrayidx8 = getelementptr %struct.dib7000p_config, %struct.dib7000p_config* %15, i64 %idxprom7, !dbg !5168
  %default_i2c_addr9 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %arrayidx8, i32 0, i32 17, !dbg !5170
  %17 = load i8, i8* %default_i2c_addr9, align 4, !dbg !5170
  %conv10 = zext i8 %17 to i32, !dbg !5168
  %18 = load i32, i32* %k, align 4, !dbg !5171
  %shl = shl i32 %18, 1, !dbg !5172
  %add = add i32 %conv10, %shl, !dbg !5173
  %conv11 = trunc i32 %add to i8, !dbg !5168
  store i8 %conv11, i8* %new_addr, align 1, !dbg !5174
  br label %if.end15, !dbg !5175

if.else:                                          ; preds = %for.body
  %19 = load i32, i32* %k, align 4, !dbg !5176
  %add12 = add i32 64, %19, !dbg !5177
  %shl13 = shl i32 %add12, 1, !dbg !5178
  %conv14 = trunc i32 %shl13 to i8, !dbg !5179
  store i8 %conv14, i8* %new_addr, align 1, !dbg !5180
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then6
  %20 = load i8, i8* %new_addr, align 1, !dbg !5181
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5182
  %i2c_addr = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %21, i32 0, i32 2, !dbg !5183
  store i8 %20, i8* %i2c_addr, align 8, !dbg !5184
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5185
  %call16 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 1287, i16 zeroext 3) #8, !dbg !5186
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5187
  %call17 = call i32 @dib7000p_identify(%struct.dib7000p_state* %23) #8, !dbg !5189
  %cmp18 = icmp ne i32 %call17, 0, !dbg !5190
  br i1 %cmp18, label %if.then20, label %if.end34, !dbg !5191

if.then20:                                        ; preds = %if.end15
  %24 = load i8, i8* %default_addr.addr, align 1, !dbg !5192
  %25 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5194
  %i2c_addr21 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %25, i32 0, i32 2, !dbg !5195
  store i8 %24, i8* %i2c_addr21, align 8, !dbg !5196
  %26 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5197
  %call22 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %26, i16 zeroext 1287, i16 zeroext 3) #8, !dbg !5198
  %27 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5199
  %call23 = call i32 @dib7000p_identify(%struct.dib7000p_state* %27) #8, !dbg !5201
  %cmp24 = icmp ne i32 %call23, 0, !dbg !5202
  br i1 %cmp24, label %if.then26, label %if.end33, !dbg !5203

if.then26:                                        ; preds = %if.then20
  br label %do.body27, !dbg !5204

do.body27:                                        ; preds = %if.then26
  %28 = load i32, i32* @debug, align 4, !dbg !5206
  %tobool28 = icmp ne i32 %28, 0, !dbg !5206
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !5209

if.then29:                                        ; preds = %do.body27
  %29 = load i32, i32* %k, align 4, !dbg !5206
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7000p_i2c_enumeration, i64 0, i64 0), i32 %29) #9, !dbg !5206
  br label %if.end31, !dbg !5206

if.end31:                                         ; preds = %if.then29, %do.body27
  br label %do.end32, !dbg !5209

do.end32:                                         ; preds = %if.end31
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5210
  %31 = bitcast %struct.dib7000p_state* %30 to i8*, !dbg !5210
  call void @kfree(i8* %31) #8, !dbg !5211
  store i32 -5, i32* %retval, align 4, !dbg !5212
  br label %return, !dbg !5212

if.end33:                                         ; preds = %if.then20
  br label %if.end34, !dbg !5213

if.end34:                                         ; preds = %if.end33, %if.end15
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5214
  %call35 = call i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %32, i32 4) #8, !dbg !5215
  %33 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5216
  %34 = load i8, i8* %new_addr, align 1, !dbg !5217
  %conv36 = zext i8 %34 to i32, !dbg !5217
  %shl37 = shl i32 %conv36, 2, !dbg !5218
  %or = or i32 %shl37, 2, !dbg !5219
  %conv38 = trunc i32 %or to i16, !dbg !5220
  %call39 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %33, i16 zeroext 1285, i16 zeroext %conv38) #8, !dbg !5221
  br label %do.body40, !dbg !5222

do.body40:                                        ; preds = %if.end34
  %35 = load i32, i32* @debug, align 4, !dbg !5223
  %tobool41 = icmp ne i32 %35, 0, !dbg !5223
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !5226

if.then42:                                        ; preds = %do.body40
  %36 = load i32, i32* %k, align 4, !dbg !5223
  %37 = load i8, i8* %new_addr, align 1, !dbg !5223
  %conv43 = zext i8 %37 to i32, !dbg !5223
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7000p_i2c_enumeration, i64 0, i64 0), i32 %36, i32 %conv43) #9, !dbg !5223
  br label %if.end45, !dbg !5223

if.end45:                                         ; preds = %if.then42, %do.body40
  br label %do.end46, !dbg !5226

do.end46:                                         ; preds = %if.end45
  br label %for.inc, !dbg !5227

for.inc:                                          ; preds = %do.end46
  %38 = load i32, i32* %k, align 4, !dbg !5228
  %dec = add i32 %38, -1, !dbg !5228
  store i32 %dec, i32* %k, align 4, !dbg !5228
  br label %for.cond, !dbg !5229, !llvm.loop !5230

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %k, align 4, !dbg !5232
  br label %for.cond47, !dbg !5234

for.cond47:                                       ; preds = %for.inc81, %for.end
  %39 = load i32, i32* %k, align 4, !dbg !5235
  %40 = load i32, i32* %no_of_demods.addr, align 4, !dbg !5237
  %cmp48 = icmp slt i32 %39, %40, !dbg !5238
  br i1 %cmp48, label %for.body50, label %for.end82, !dbg !5239

for.body50:                                       ; preds = %for.cond47
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5240
  %cfg51 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %41, i32 0, i32 1, !dbg !5242
  %42 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !5243
  %43 = load i32, i32* %k, align 4, !dbg !5244
  %idxprom52 = sext i32 %43 to i64, !dbg !5243
  %arrayidx53 = getelementptr %struct.dib7000p_config, %struct.dib7000p_config* %42, i64 %idxprom52, !dbg !5243
  %44 = bitcast %struct.dib7000p_config* %cfg51 to i8*, !dbg !5243
  %45 = bitcast %struct.dib7000p_config* %arrayidx53 to i8*, !dbg !5243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 72, i1 false), !dbg !5243
  %46 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !5245
  %47 = load i32, i32* %k, align 4, !dbg !5247
  %idxprom54 = sext i32 %47 to i64, !dbg !5245
  %arrayidx55 = getelementptr %struct.dib7000p_config, %struct.dib7000p_config* %46, i64 %idxprom54, !dbg !5245
  %default_i2c_addr56 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %arrayidx55, i32 0, i32 17, !dbg !5248
  %48 = load i8, i8* %default_i2c_addr56, align 4, !dbg !5248
  %conv57 = zext i8 %48 to i32, !dbg !5245
  %cmp58 = icmp ne i32 %conv57, 0, !dbg !5249
  br i1 %cmp58, label %if.then60, label %if.else69, !dbg !5250

if.then60:                                        ; preds = %for.body50
  %49 = load %struct.dib7000p_config*, %struct.dib7000p_config** %cfg.addr, align 8, !dbg !5251
  %50 = load i32, i32* %k, align 4, !dbg !5252
  %idxprom61 = sext i32 %50 to i64, !dbg !5251
  %arrayidx62 = getelementptr %struct.dib7000p_config, %struct.dib7000p_config* %49, i64 %idxprom61, !dbg !5251
  %default_i2c_addr63 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %arrayidx62, i32 0, i32 17, !dbg !5253
  %51 = load i8, i8* %default_i2c_addr63, align 4, !dbg !5253
  %conv64 = zext i8 %51 to i32, !dbg !5251
  %52 = load i32, i32* %k, align 4, !dbg !5254
  %add65 = add i32 %conv64, %52, !dbg !5255
  %shl66 = shl i32 %add65, 1, !dbg !5256
  %conv67 = trunc i32 %shl66 to i8, !dbg !5257
  %53 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5258
  %i2c_addr68 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %53, i32 0, i32 2, !dbg !5259
  store i8 %conv67, i8* %i2c_addr68, align 8, !dbg !5260
  br label %if.end74, !dbg !5258

if.else69:                                        ; preds = %for.body50
  %54 = load i32, i32* %k, align 4, !dbg !5261
  %add70 = add i32 64, %54, !dbg !5262
  %shl71 = shl i32 %add70, 1, !dbg !5263
  %conv72 = trunc i32 %shl71 to i8, !dbg !5264
  %55 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5265
  %i2c_addr73 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %55, i32 0, i32 2, !dbg !5266
  store i8 %conv72, i8* %i2c_addr73, align 8, !dbg !5267
  br label %if.end74

if.end74:                                         ; preds = %if.else69, %if.then60
  %56 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5268
  %57 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5269
  %i2c_addr75 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %57, i32 0, i32 2, !dbg !5270
  %58 = load i8, i8* %i2c_addr75, align 8, !dbg !5270
  %conv76 = zext i8 %58 to i32, !dbg !5269
  %shl77 = shl i32 %conv76, 2, !dbg !5271
  %conv78 = trunc i32 %shl77 to i16, !dbg !5269
  %call79 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %56, i16 zeroext 1285, i16 zeroext %conv78) #8, !dbg !5272
  %59 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5273
  %call80 = call i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %59, i32 0) #8, !dbg !5274
  br label %for.inc81, !dbg !5275

for.inc81:                                        ; preds = %if.end74
  %60 = load i32, i32* %k, align 4, !dbg !5276
  %inc = add i32 %60, 1, !dbg !5276
  store i32 %inc, i32* %k, align 4, !dbg !5276
  br label %for.cond47, !dbg !5277, !llvm.loop !5278

for.end82:                                        ; preds = %for.cond47
  %61 = load %struct.dib7000p_state*, %struct.dib7000p_state** %dpst, align 8, !dbg !5280
  %62 = bitcast %struct.dib7000p_state* %61 to i8*, !dbg !5280
  call void @kfree(i8* %62) #8, !dbg !5281
  store i32 0, i32* %retval, align 4, !dbg !5282
  br label %return, !dbg !5282

return:                                           ; preds = %for.end82, %do.end32, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !5283
  ret i32 %63, !dbg !5283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_pid_filter(%struct.dvb_frontend* %fe, i8 zeroext %id, i16 zeroext %pid, i8 zeroext %onoff) #0 !dbg !5284 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %id.addr = alloca i8, align 1
  %pid.addr = alloca i16, align 2
  %onoff.addr = alloca i8, align 1
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5285, metadata !DIExpression()), !dbg !5286
  store i8 %id, i8* %id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %id.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  store i16 %pid, i16* %pid.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pid.addr, metadata !5289, metadata !DIExpression()), !dbg !5290
  store i8 %onoff, i8* %onoff.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %onoff.addr, metadata !5291, metadata !DIExpression()), !dbg !5292
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5293, metadata !DIExpression()), !dbg !5294
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5295
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5296
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5296
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5295
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5294
  br label %do.body, !dbg !5297

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @debug, align 4, !dbg !5298
  %tobool = icmp ne i32 %3, 0, !dbg !5298
  br i1 %tobool, label %if.then, label %if.end, !dbg !5301

if.then:                                          ; preds = %do.body
  %4 = load i8, i8* %id.addr, align 1, !dbg !5298
  %conv = zext i8 %4 to i32, !dbg !5298
  %5 = load i16, i16* %pid.addr, align 2, !dbg !5298
  %conv1 = zext i16 %5 to i32, !dbg !5298
  %6 = load i8, i8* %onoff.addr, align 1, !dbg !5298
  %conv2 = zext i8 %6 to i32, !dbg !5298
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000p_pid_filter, i64 0, i64 0), i32 %conv, i32 %conv1, i32 %conv2) #9, !dbg !5298
  br label %if.end, !dbg !5298

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5301

do.end:                                           ; preds = %if.end
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5302
  %8 = load i8, i8* %id.addr, align 1, !dbg !5303
  %conv3 = zext i8 %8 to i32, !dbg !5303
  %add = add i32 241, %conv3, !dbg !5304
  %conv4 = trunc i32 %add to i16, !dbg !5305
  %9 = load i8, i8* %onoff.addr, align 1, !dbg !5306
  %conv5 = zext i8 %9 to i32, !dbg !5306
  %tobool6 = icmp ne i32 %conv5, 0, !dbg !5306
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !5306

cond.true:                                        ; preds = %do.end
  %10 = load i16, i16* %pid.addr, align 2, !dbg !5307
  %conv7 = zext i16 %10 to i32, !dbg !5307
  %or = or i32 8192, %conv7, !dbg !5308
  br label %cond.end, !dbg !5306

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !5306

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or, %cond.true ], [ 0, %cond.false ], !dbg !5306
  %conv8 = trunc i32 %cond to i16, !dbg !5306
  %call9 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %7, i16 zeroext %conv4, i16 zeroext %conv8) #8, !dbg !5309
  ret i32 %call9, !dbg !5310
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_pid_filter_ctrl(%struct.dvb_frontend* %fe, i8 zeroext %onoff) #0 !dbg !5311 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %onoff.addr = alloca i8, align 1
  %state = alloca %struct.dib7000p_state*, align 8
  %val = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5312, metadata !DIExpression()), !dbg !5313
  store i8 %onoff, i8* %onoff.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %onoff.addr, metadata !5314, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5316, metadata !DIExpression()), !dbg !5317
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5318
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5319
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5319
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5318
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5317
  call void @llvm.dbg.declare(metadata i16* %val, metadata !5320, metadata !DIExpression()), !dbg !5321
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5322
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 235) #8, !dbg !5323
  %conv = zext i16 %call to i32, !dbg !5323
  %and = and i32 %conv, 65519, !dbg !5324
  %conv1 = trunc i32 %and to i16, !dbg !5323
  store i16 %conv1, i16* %val, align 2, !dbg !5321
  %4 = load i8, i8* %onoff.addr, align 1, !dbg !5325
  %conv2 = zext i8 %4 to i32, !dbg !5325
  %and3 = and i32 %conv2, 1, !dbg !5326
  %shl = shl i32 %and3, 4, !dbg !5327
  %5 = load i16, i16* %val, align 2, !dbg !5328
  %conv4 = zext i16 %5 to i32, !dbg !5328
  %or = or i32 %conv4, %shl, !dbg !5328
  %conv5 = trunc i32 %or to i16, !dbg !5328
  store i16 %conv5, i16* %val, align 2, !dbg !5328
  br label %do.body, !dbg !5329

do.body:                                          ; preds = %entry
  %6 = load i32, i32* @debug, align 4, !dbg !5330
  %tobool = icmp ne i32 %6, 0, !dbg !5330
  br i1 %tobool, label %if.then, label %if.end, !dbg !5333

if.then:                                          ; preds = %do.body
  %7 = load i8, i8* %onoff.addr, align 1, !dbg !5330
  %conv6 = zext i8 %7 to i32, !dbg !5330
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7000p_pid_filter_ctrl, i64 0, i64 0), i32 %conv6) #9, !dbg !5330
  br label %if.end, !dbg !5330

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5333

do.end:                                           ; preds = %if.end
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5334
  %9 = load i16, i16* %val, align 2, !dbg !5335
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %8, i16 zeroext 235, i16 zeroext %9) #8, !dbg !5336
  ret i32 %call8, !dbg !5337
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.i2c_adapter* @dib7000p_get_i2c_master(%struct.dvb_frontend* %demod, i32 %intf, i32 %gating) #0 !dbg !5338 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %intf.addr = alloca i32, align 4
  %gating.addr = alloca i32, align 4
  %st = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  store i32 %intf, i32* %intf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %intf.addr, metadata !5341, metadata !DIExpression()), !dbg !5342
  store i32 %gating, i32* %gating.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gating.addr, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st, metadata !5345, metadata !DIExpression()), !dbg !5346
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !5347
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5348
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5348
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5347
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %st, align 8, !dbg !5346
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !5349
  %i2c_master = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 4, !dbg !5350
  %4 = load i32, i32* %intf.addr, align 4, !dbg !5351
  %5 = load i32, i32* %gating.addr, align 4, !dbg !5352
  %call = call %struct.i2c_adapter* @dibx000_get_i2c_adapter(%struct.dibx000_i2c_master* %i2c_master, i32 %4, i32 %5) #8, !dbg !5353
  ret %struct.i2c_adapter* %call, !dbg !5354
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_update_pll(%struct.dvb_frontend* %fe, %struct.dibx000_bandwidth_config* %bw) #0 !dbg !5355 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %bw.addr = alloca %struct.dibx000_bandwidth_config*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %reg_1857 = alloca i16, align 2
  %reg_1856 = alloca i16, align 2
  %loopdiv = alloca i8, align 1
  %prediv = alloca i8, align 1
  %internal = alloca i32, align 4
  %xtal = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5356, metadata !DIExpression()), !dbg !5357
  store %struct.dibx000_bandwidth_config* %bw, %struct.dibx000_bandwidth_config** %bw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dibx000_bandwidth_config** %bw.addr, metadata !5358, metadata !DIExpression()), !dbg !5359
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5360, metadata !DIExpression()), !dbg !5361
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5362
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5363
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5363
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5362
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5361
  call void @llvm.dbg.declare(metadata i16* %reg_1857, metadata !5364, metadata !DIExpression()), !dbg !5365
  call void @llvm.dbg.declare(metadata i16* %reg_1856, metadata !5366, metadata !DIExpression()), !dbg !5367
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5368
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 1856) #8, !dbg !5369
  store i16 %call, i16* %reg_1856, align 2, !dbg !5367
  call void @llvm.dbg.declare(metadata i8* %loopdiv, metadata !5370, metadata !DIExpression()), !dbg !5371
  call void @llvm.dbg.declare(metadata i8* %prediv, metadata !5372, metadata !DIExpression()), !dbg !5373
  call void @llvm.dbg.declare(metadata i32* %internal, metadata !5374, metadata !DIExpression()), !dbg !5375
  call void @llvm.dbg.declare(metadata i32* %xtal, metadata !5376, metadata !DIExpression()), !dbg !5377
  %4 = load i16, i16* %reg_1856, align 2, !dbg !5378
  %conv = zext i16 %4 to i32, !dbg !5378
  %and = and i32 %conv, 63, !dbg !5379
  %conv1 = trunc i32 %and to i8, !dbg !5378
  store i8 %conv1, i8* %prediv, align 1, !dbg !5380
  %5 = load i16, i16* %reg_1856, align 2, !dbg !5381
  %conv2 = zext i16 %5 to i32, !dbg !5381
  %shr = ashr i32 %conv2, 6, !dbg !5382
  %and3 = and i32 %shr, 63, !dbg !5383
  %conv4 = trunc i32 %and3 to i8, !dbg !5384
  store i8 %conv4, i8* %loopdiv, align 1, !dbg !5385
  %6 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5386
  %cmp = icmp ne %struct.dibx000_bandwidth_config* %6, null, !dbg !5388
  br i1 %cmp, label %land.lhs.true, label %if.end73, !dbg !5389

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5390
  %pll_prediv = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %7, i32 0, i32 2, !dbg !5391
  %8 = load i8, i8* %pll_prediv, align 4, !dbg !5391
  %conv6 = zext i8 %8 to i32, !dbg !5390
  %9 = load i8, i8* %prediv, align 1, !dbg !5392
  %conv7 = zext i8 %9 to i32, !dbg !5392
  %cmp8 = icmp ne i32 %conv6, %conv7, !dbg !5393
  br i1 %cmp8, label %if.then, label %lor.lhs.false, !dbg !5394

lor.lhs.false:                                    ; preds = %land.lhs.true
  %10 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5395
  %pll_ratio = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %10, i32 0, i32 3, !dbg !5396
  %11 = load i8, i8* %pll_ratio, align 1, !dbg !5396
  %conv10 = zext i8 %11 to i32, !dbg !5395
  %12 = load i8, i8* %loopdiv, align 1, !dbg !5397
  %conv11 = zext i8 %12 to i32, !dbg !5397
  %cmp12 = icmp ne i32 %conv10, %conv11, !dbg !5398
  br i1 %cmp12, label %if.then, label %if.end73, !dbg !5399

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %do.body, !dbg !5400

do.body:                                          ; preds = %if.then
  %13 = load i32, i32* @debug, align 4, !dbg !5402
  %tobool = icmp ne i32 %13, 0, !dbg !5402
  br i1 %tobool, label %if.then14, label %if.end, !dbg !5405

if.then14:                                        ; preds = %do.body
  %14 = load i8, i8* %prediv, align 1, !dbg !5402
  %conv15 = zext i8 %14 to i32, !dbg !5402
  %15 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5402
  %pll_prediv16 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %15, i32 0, i32 2, !dbg !5402
  %16 = load i8, i8* %pll_prediv16, align 4, !dbg !5402
  %conv17 = zext i8 %16 to i32, !dbg !5402
  %17 = load i8, i8* %loopdiv, align 1, !dbg !5402
  %conv18 = zext i8 %17 to i32, !dbg !5402
  %18 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5402
  %pll_ratio19 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %18, i32 0, i32 3, !dbg !5402
  %19 = load i8, i8* %pll_ratio19, align 1, !dbg !5402
  %conv20 = zext i8 %19 to i32, !dbg !5402
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000p_update_pll, i64 0, i64 0), i32 %conv15, i32 %conv17, i32 %conv18, i32 %conv20) #9, !dbg !5402
  br label %if.end, !dbg !5402

if.end:                                           ; preds = %if.then14, %do.body
  br label %do.end, !dbg !5405

do.end:                                           ; preds = %if.end
  %20 = load i16, i16* %reg_1856, align 2, !dbg !5406
  %conv22 = zext i16 %20 to i32, !dbg !5406
  %and23 = and i32 %conv22, 61440, !dbg !5406
  %conv24 = trunc i32 %and23 to i16, !dbg !5406
  store i16 %conv24, i16* %reg_1856, align 2, !dbg !5406
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5407
  %call25 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %21, i16 zeroext 1857) #8, !dbg !5408
  store i16 %call25, i16* %reg_1857, align 2, !dbg !5409
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5410
  %23 = load i16, i16* %reg_1857, align 2, !dbg !5411
  %conv26 = zext i16 %23 to i32, !dbg !5411
  %and27 = and i32 %conv26, -32769, !dbg !5412
  %conv28 = trunc i32 %and27 to i16, !dbg !5411
  %call29 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 1857, i16 zeroext %conv28) #8, !dbg !5413
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5414
  %25 = load i16, i16* %reg_1856, align 2, !dbg !5415
  %conv30 = zext i16 %25 to i32, !dbg !5415
  %26 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5416
  %pll_ratio31 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %26, i32 0, i32 3, !dbg !5417
  %27 = load i8, i8* %pll_ratio31, align 1, !dbg !5417
  %conv32 = zext i8 %27 to i32, !dbg !5416
  %and33 = and i32 %conv32, 63, !dbg !5418
  %shl = shl i32 %and33, 6, !dbg !5419
  %or = or i32 %conv30, %shl, !dbg !5420
  %28 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5421
  %pll_prediv34 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %28, i32 0, i32 2, !dbg !5422
  %29 = load i8, i8* %pll_prediv34, align 4, !dbg !5422
  %conv35 = zext i8 %29 to i32, !dbg !5421
  %and36 = and i32 %conv35, 63, !dbg !5423
  %or37 = or i32 %or, %and36, !dbg !5424
  %conv38 = trunc i32 %or37 to i16, !dbg !5415
  %call39 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %24, i16 zeroext 1856, i16 zeroext %conv38) #8, !dbg !5425
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5426
  %call40 = call i32 @dib7000p_get_internal_freq(%struct.dib7000p_state* %30) #8, !dbg !5427
  store i32 %call40, i32* %internal, align 4, !dbg !5428
  %31 = load i32, i32* %internal, align 4, !dbg !5429
  %32 = load i8, i8* %loopdiv, align 1, !dbg !5430
  %conv41 = zext i8 %32 to i32, !dbg !5430
  %div = udiv i32 %31, %conv41, !dbg !5431
  %33 = load i8, i8* %prediv, align 1, !dbg !5432
  %conv42 = zext i8 %33 to i32, !dbg !5432
  %mul = mul i32 %div, %conv42, !dbg !5433
  store i32 %mul, i32* %xtal, align 4, !dbg !5434
  %34 = load i32, i32* %xtal, align 4, !dbg !5435
  %35 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5436
  %pll_prediv43 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %35, i32 0, i32 2, !dbg !5437
  %36 = load i8, i8* %pll_prediv43, align 4, !dbg !5437
  %conv44 = zext i8 %36 to i32, !dbg !5436
  %div45 = udiv i32 %34, %conv44, !dbg !5438
  %mul46 = mul i32 1000, %div45, !dbg !5439
  %37 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw.addr, align 8, !dbg !5440
  %pll_ratio47 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %37, i32 0, i32 3, !dbg !5441
  %38 = load i8, i8* %pll_ratio47, align 1, !dbg !5441
  %conv48 = zext i8 %38 to i32, !dbg !5440
  %mul49 = mul i32 %mul46, %conv48, !dbg !5442
  store i32 %mul49, i32* %internal, align 4, !dbg !5443
  %39 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5444
  %40 = load i32, i32* %internal, align 4, !dbg !5445
  %shr50 = lshr i32 %40, 16, !dbg !5446
  %and51 = and i32 %shr50, 65535, !dbg !5447
  %conv52 = trunc i32 %and51 to i16, !dbg !5448
  %call53 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %39, i16 zeroext 18, i16 zeroext %conv52) #8, !dbg !5449
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5450
  %42 = load i32, i32* %internal, align 4, !dbg !5451
  %and54 = and i32 %42, 65535, !dbg !5452
  %conv55 = trunc i32 %and54 to i16, !dbg !5453
  %call56 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %41, i16 zeroext 19, i16 zeroext %conv55) #8, !dbg !5454
  %43 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5455
  %44 = load i16, i16* %reg_1857, align 2, !dbg !5456
  %conv57 = zext i16 %44 to i32, !dbg !5456
  %or58 = or i32 %conv57, 32768, !dbg !5457
  %conv59 = trunc i32 %or58 to i16, !dbg !5456
  %call60 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %43, i16 zeroext 1857, i16 zeroext %conv59) #8, !dbg !5458
  br label %while.cond, !dbg !5459

while.cond:                                       ; preds = %do.end72, %do.end
  %45 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5460
  %call61 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %45, i16 zeroext 1856) #8, !dbg !5461
  %conv62 = zext i16 %call61 to i32, !dbg !5461
  %shr63 = ashr i32 %conv62, 15, !dbg !5462
  %and64 = and i32 %shr63, 1, !dbg !5463
  %cmp65 = icmp ne i32 %and64, 1, !dbg !5464
  br i1 %cmp65, label %while.body, label %while.end, !dbg !5459

while.body:                                       ; preds = %while.cond
  br label %do.body67, !dbg !5465

do.body67:                                        ; preds = %while.body
  %46 = load i32, i32* @debug, align 4, !dbg !5466
  %tobool68 = icmp ne i32 %46, 0, !dbg !5466
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !5469

if.then69:                                        ; preds = %do.body67
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000p_update_pll, i64 0, i64 0)) #9, !dbg !5466
  br label %if.end71, !dbg !5466

if.end71:                                         ; preds = %if.then69, %do.body67
  br label %do.end72, !dbg !5469

do.end72:                                         ; preds = %if.end71
  br label %while.cond, !dbg !5459, !llvm.loop !5470

while.end:                                        ; preds = %while.cond
  store i32 0, i32* %retval, align 4, !dbg !5471
  br label %return, !dbg !5471

if.end73:                                         ; preds = %lor.lhs.false, %entry
  store i32 -5, i32* %retval, align 4, !dbg !5472
  br label %return, !dbg !5472

return:                                           ; preds = %if.end73, %while.end
  %47 = load i32, i32* %retval, align 4, !dbg !5473
  ret i32 %47, !dbg !5473
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_ctrl_timf(%struct.dvb_frontend* %fe, i8 zeroext %op, i32 %timf) #0 !dbg !5474 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %op.addr = alloca i8, align 1
  %timf.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5475, metadata !DIExpression()), !dbg !5476
  store i8 %op, i8* %op.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %op.addr, metadata !5477, metadata !DIExpression()), !dbg !5478
  store i32 %timf, i32* %timf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timf.addr, metadata !5479, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5481, metadata !DIExpression()), !dbg !5482
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5483
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5484
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5484
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5483
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5482
  %3 = load i8, i8* %op.addr, align 1, !dbg !5485
  %conv = zext i8 %3 to i32, !dbg !5485
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb2
    i32 1, label %sw.bb3
  ], !dbg !5486

sw.bb:                                            ; preds = %entry
  %4 = load i32, i32* %timf.addr, align 4, !dbg !5487
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5489
  %timf1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 9, !dbg !5490
  store i32 %4, i32* %timf1, align 8, !dbg !5491
  br label %sw.epilog, !dbg !5492

sw.bb2:                                           ; preds = %entry
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5493
  call void @dib7000p_update_timf(%struct.dib7000p_state* %6) #8, !dbg !5494
  br label %sw.epilog, !dbg !5495

sw.bb3:                                           ; preds = %entry
  br label %sw.epilog, !dbg !5496

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb2, %sw.bb
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5497
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5498
  %current_bandwidth = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 7, !dbg !5499
  %9 = load i32, i32* %current_bandwidth, align 4, !dbg !5499
  %call = call i32 @dib7000p_set_bandwidth(%struct.dib7000p_state* %7, i32 %9) #8, !dbg !5500
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5501
  %timf4 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 9, !dbg !5502
  %11 = load i32, i32* %timf4, align 8, !dbg !5502
  ret i32 %11, !dbg !5503
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_agc_values(%struct.dvb_frontend* %fe, i16* %agc_global, i16* %agc1, i16* %agc2, i16* %wbd) #0 !dbg !5504 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %agc_global.addr = alloca i16*, align 8
  %agc1.addr = alloca i16*, align 8
  %agc2.addr = alloca i16*, align 8
  %wbd.addr = alloca i16*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5505, metadata !DIExpression()), !dbg !5506
  store i16* %agc_global, i16** %agc_global.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %agc_global.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store i16* %agc1, i16** %agc1.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %agc1.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  store i16* %agc2, i16** %agc2.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %agc2.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  store i16* %wbd, i16** %wbd.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %wbd.addr, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5515, metadata !DIExpression()), !dbg !5516
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5517
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5518
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5518
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5517
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5516
  %3 = load i16*, i16** %agc_global.addr, align 8, !dbg !5519
  %cmp = icmp ne i16* %3, null, !dbg !5521
  br i1 %cmp, label %if.then, label %if.end, !dbg !5522

if.then:                                          ; preds = %entry
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5523
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %4, i16 zeroext 394) #8, !dbg !5524
  %5 = load i16*, i16** %agc_global.addr, align 8, !dbg !5525
  store i16 %call, i16* %5, align 2, !dbg !5526
  br label %if.end, !dbg !5527

if.end:                                           ; preds = %if.then, %entry
  %6 = load i16*, i16** %agc1.addr, align 8, !dbg !5528
  %cmp1 = icmp ne i16* %6, null, !dbg !5530
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !5531

if.then2:                                         ; preds = %if.end
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5532
  %call3 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %7, i16 zeroext 392) #8, !dbg !5533
  %8 = load i16*, i16** %agc1.addr, align 8, !dbg !5534
  store i16 %call3, i16* %8, align 2, !dbg !5535
  br label %if.end4, !dbg !5536

if.end4:                                          ; preds = %if.then2, %if.end
  %9 = load i16*, i16** %agc2.addr, align 8, !dbg !5537
  %cmp5 = icmp ne i16* %9, null, !dbg !5539
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !5540

if.then6:                                         ; preds = %if.end4
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5541
  %call7 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %10, i16 zeroext 393) #8, !dbg !5542
  %11 = load i16*, i16** %agc2.addr, align 8, !dbg !5543
  store i16 %call7, i16* %11, align 2, !dbg !5544
  br label %if.end8, !dbg !5545

if.end8:                                          ; preds = %if.then6, %if.end4
  %12 = load i16*, i16** %wbd.addr, align 8, !dbg !5546
  %cmp9 = icmp ne i16* %12, null, !dbg !5548
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !5549

if.then10:                                        ; preds = %if.end8
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5550
  %call11 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %13, i16 zeroext 397) #8, !dbg !5551
  %14 = load i16*, i16** %wbd.addr, align 8, !dbg !5552
  store i16 %call11, i16* %14, align 2, !dbg !5553
  br label %if.end12, !dbg !5554

if.end12:                                         ; preds = %if.then10, %if.end8
  ret i32 0, !dbg !5555
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_wbd_ref(%struct.dvb_frontend* %demod, i16 zeroext %value) #0 !dbg !5556 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %value.addr = alloca i16, align 2
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !5557, metadata !DIExpression()), !dbg !5558
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !5559, metadata !DIExpression()), !dbg !5560
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5561, metadata !DIExpression()), !dbg !5562
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !5563
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5564
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5564
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5563
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5562
  %3 = load i16, i16* %value.addr, align 2, !dbg !5565
  %conv = zext i16 %3 to i32, !dbg !5565
  %cmp = icmp sgt i32 %conv, 4095, !dbg !5567
  br i1 %cmp, label %if.then, label %if.end, !dbg !5568

if.then:                                          ; preds = %entry
  store i16 4095, i16* %value.addr, align 2, !dbg !5569
  br label %if.end, !dbg !5570

if.end:                                           ; preds = %if.then, %entry
  %4 = load i16, i16* %value.addr, align 2, !dbg !5571
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5572
  %wbd_ref = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 5, !dbg !5573
  store i16 %4, i16* %wbd_ref, align 8, !dbg !5574
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5575
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5576
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %7, i16 zeroext 105) #8, !dbg !5577
  %conv2 = zext i16 %call to i32, !dbg !5577
  %and = and i32 %conv2, 61440, !dbg !5578
  %8 = load i16, i16* %value.addr, align 2, !dbg !5579
  %conv3 = zext i16 %8 to i32, !dbg !5579
  %or = or i32 %and, %conv3, !dbg !5580
  %conv4 = trunc i32 %or to i16, !dbg !5581
  %call5 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 105, i16 zeroext %conv4) #8, !dbg !5582
  ret i32 %call5, !dbg !5583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %state, i16 zeroext %reg) #0 !dbg !5584 {
entry:
  %retval = alloca i16, align 2
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %reg.addr = alloca i16, align 2
  %ret = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !5589, metadata !DIExpression()), !dbg !5590
  call void @llvm.dbg.declare(metadata i16* %ret, metadata !5591, metadata !DIExpression()), !dbg !5592
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5593
  %i2c_buffer_lock = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 22, !dbg !5595
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %i2c_buffer_lock) #8, !dbg !5596
  %cmp = icmp slt i32 %call, 0, !dbg !5597
  br i1 %cmp, label %if.then, label %if.end3, !dbg !5598

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5599

do.body:                                          ; preds = %if.then
  %1 = load i32, i32* @debug, align 4, !dbg !5601
  %tobool = icmp ne i32 %1, 0, !dbg !5601
  br i1 %tobool, label %if.then1, label %if.end, !dbg !5604

if.then1:                                         ; preds = %do.body
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.dib7000p_read_word, i64 0, i64 0)) #9, !dbg !5601
  br label %if.end, !dbg !5601

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !5604

do.end:                                           ; preds = %if.end
  store i16 0, i16* %retval, align 2, !dbg !5605
  br label %return, !dbg !5605

if.end3:                                          ; preds = %entry
  %2 = load i16, i16* %reg.addr, align 2, !dbg !5606
  %conv = zext i16 %2 to i32, !dbg !5606
  %shr = ashr i32 %conv, 8, !dbg !5607
  %conv4 = trunc i32 %shr to i8, !dbg !5606
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5608
  %i2c_write_buffer = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 20, !dbg !5609
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %i2c_write_buffer, i64 0, i64 0, !dbg !5608
  store i8 %conv4, i8* %arrayidx, align 8, !dbg !5610
  %4 = load i16, i16* %reg.addr, align 2, !dbg !5611
  %conv5 = zext i16 %4 to i32, !dbg !5611
  %and = and i32 %conv5, 255, !dbg !5612
  %conv6 = trunc i32 %and to i8, !dbg !5611
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5613
  %i2c_write_buffer7 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 20, !dbg !5614
  %arrayidx8 = getelementptr [4 x i8], [4 x i8]* %i2c_write_buffer7, i64 0, i64 1, !dbg !5613
  store i8 %conv6, i8* %arrayidx8, align 1, !dbg !5615
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5616
  %msg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %6, i32 0, i32 19, !dbg !5617
  %arraydecay = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5618
  %7 = bitcast %struct.i2c_msg* %arraydecay to i8*, !dbg !5618
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false), !dbg !5618
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5619
  %i2c_addr = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 2, !dbg !5620
  %9 = load i8, i8* %i2c_addr, align 8, !dbg !5620
  %conv9 = zext i8 %9 to i32, !dbg !5619
  %shr10 = ashr i32 %conv9, 1, !dbg !5621
  %conv11 = trunc i32 %shr10 to i16, !dbg !5619
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5622
  %msg12 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 19, !dbg !5623
  %arrayidx13 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg12, i64 0, i64 0, !dbg !5622
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx13, i32 0, i32 0, !dbg !5624
  store i16 %conv11, i16* %addr, align 8, !dbg !5625
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5626
  %msg14 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %11, i32 0, i32 19, !dbg !5627
  %arrayidx15 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg14, i64 0, i64 0, !dbg !5626
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx15, i32 0, i32 1, !dbg !5628
  store i16 0, i16* %flags, align 2, !dbg !5629
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5630
  %i2c_write_buffer16 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %12, i32 0, i32 20, !dbg !5631
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %i2c_write_buffer16, i64 0, i64 0, !dbg !5630
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5632
  %msg18 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %13, i32 0, i32 19, !dbg !5633
  %arrayidx19 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg18, i64 0, i64 0, !dbg !5632
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx19, i32 0, i32 3, !dbg !5634
  store i8* %arraydecay17, i8** %buf, align 8, !dbg !5635
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5636
  %msg20 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %14, i32 0, i32 19, !dbg !5637
  %arrayidx21 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg20, i64 0, i64 0, !dbg !5636
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx21, i32 0, i32 2, !dbg !5638
  store i16 2, i16* %len, align 4, !dbg !5639
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5640
  %i2c_addr22 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 2, !dbg !5641
  %16 = load i8, i8* %i2c_addr22, align 8, !dbg !5641
  %conv23 = zext i8 %16 to i32, !dbg !5640
  %shr24 = ashr i32 %conv23, 1, !dbg !5642
  %conv25 = trunc i32 %shr24 to i16, !dbg !5640
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5643
  %msg26 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %17, i32 0, i32 19, !dbg !5644
  %arrayidx27 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg26, i64 0, i64 1, !dbg !5643
  %addr28 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx27, i32 0, i32 0, !dbg !5645
  store i16 %conv25, i16* %addr28, align 8, !dbg !5646
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5647
  %msg29 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %18, i32 0, i32 19, !dbg !5648
  %arrayidx30 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg29, i64 0, i64 1, !dbg !5647
  %flags31 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx30, i32 0, i32 1, !dbg !5649
  store i16 1, i16* %flags31, align 2, !dbg !5650
  %19 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5651
  %i2c_read_buffer = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %19, i32 0, i32 21, !dbg !5652
  %arraydecay32 = getelementptr inbounds [2 x i8], [2 x i8]* %i2c_read_buffer, i64 0, i64 0, !dbg !5651
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5653
  %msg33 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %20, i32 0, i32 19, !dbg !5654
  %arrayidx34 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg33, i64 0, i64 1, !dbg !5653
  %buf35 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx34, i32 0, i32 3, !dbg !5655
  store i8* %arraydecay32, i8** %buf35, align 8, !dbg !5656
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5657
  %msg36 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %21, i32 0, i32 19, !dbg !5658
  %arrayidx37 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg36, i64 0, i64 1, !dbg !5657
  %len38 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx37, i32 0, i32 2, !dbg !5659
  store i16 2, i16* %len38, align 4, !dbg !5660
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5661
  %i2c_adap = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %22, i32 0, i32 3, !dbg !5663
  %23 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap, align 8, !dbg !5663
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5664
  %msg39 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %24, i32 0, i32 19, !dbg !5665
  %arraydecay40 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg39, i64 0, i64 0, !dbg !5664
  %call41 = call i32 @i2c_transfer(%struct.i2c_adapter* %23, %struct.i2c_msg* %arraydecay40, i32 2) #8, !dbg !5666
  %cmp42 = icmp ne i32 %call41, 2, !dbg !5667
  br i1 %cmp42, label %if.then44, label %if.end52, !dbg !5668

if.then44:                                        ; preds = %if.end3
  br label %do.body45, !dbg !5669

do.body45:                                        ; preds = %if.then44
  %25 = load i32, i32* @debug, align 4, !dbg !5670
  %tobool46 = icmp ne i32 %25, 0, !dbg !5670
  br i1 %tobool46, label %if.then47, label %if.end50, !dbg !5673

if.then47:                                        ; preds = %do.body45
  %26 = load i16, i16* %reg.addr, align 2, !dbg !5670
  %conv48 = zext i16 %26 to i32, !dbg !5670
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.dib7000p_read_word, i64 0, i64 0), i32 %conv48) #9, !dbg !5670
  br label %if.end50, !dbg !5670

if.end50:                                         ; preds = %if.then47, %do.body45
  br label %do.end51, !dbg !5673

do.end51:                                         ; preds = %if.end50
  br label %if.end52, !dbg !5673

if.end52:                                         ; preds = %do.end51, %if.end3
  %27 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5674
  %i2c_read_buffer53 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %27, i32 0, i32 21, !dbg !5675
  %arrayidx54 = getelementptr [2 x i8], [2 x i8]* %i2c_read_buffer53, i64 0, i64 0, !dbg !5674
  %28 = load i8, i8* %arrayidx54, align 4, !dbg !5674
  %conv55 = zext i8 %28 to i32, !dbg !5674
  %shl = shl i32 %conv55, 8, !dbg !5676
  %29 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5677
  %i2c_read_buffer56 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %29, i32 0, i32 21, !dbg !5678
  %arrayidx57 = getelementptr [2 x i8], [2 x i8]* %i2c_read_buffer56, i64 0, i64 1, !dbg !5677
  %30 = load i8, i8* %arrayidx57, align 1, !dbg !5677
  %conv58 = zext i8 %30 to i32, !dbg !5677
  %or = or i32 %shl, %conv58, !dbg !5679
  %conv59 = trunc i32 %or to i16, !dbg !5680
  store i16 %conv59, i16* %ret, align 2, !dbg !5681
  %31 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5682
  %i2c_buffer_lock60 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %31, i32 0, i32 22, !dbg !5683
  call void @mutex_unlock(%struct.mutex* %i2c_buffer_lock60) #8, !dbg !5684
  %32 = load i16, i16* %ret, align 2, !dbg !5685
  store i16 %32, i16* %retval, align 2, !dbg !5686
  br label %return, !dbg !5686

return:                                           ; preds = %if.end52, %do.end
  %33 = load i16, i16* %retval, align 2, !dbg !5687
  ret i16 %33, !dbg !5687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_write_word(%struct.dib7000p_state* %state, i16 zeroext %reg, i16 zeroext %val) #0 !dbg !5688 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %reg.addr = alloca i16, align 2
  %val.addr = alloca i16, align 2
  %ret = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !5691, metadata !DIExpression()), !dbg !5692
  store i16 %reg, i16* %reg.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %reg.addr, metadata !5693, metadata !DIExpression()), !dbg !5694
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !5695, metadata !DIExpression()), !dbg !5696
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5697, metadata !DIExpression()), !dbg !5698
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5699
  %i2c_buffer_lock = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 22, !dbg !5701
  %call = call i32 @mutex_lock_interruptible(%struct.mutex* %i2c_buffer_lock) #8, !dbg !5702
  %cmp = icmp slt i32 %call, 0, !dbg !5703
  br i1 %cmp, label %if.then, label %if.end3, !dbg !5704

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5705

do.body:                                          ; preds = %if.then
  %1 = load i32, i32* @debug, align 4, !dbg !5707
  %tobool = icmp ne i32 %1, 0, !dbg !5707
  br i1 %tobool, label %if.then1, label %if.end, !dbg !5710

if.then1:                                         ; preds = %do.body
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000p_write_word, i64 0, i64 0)) #9, !dbg !5707
  br label %if.end, !dbg !5707

if.end:                                           ; preds = %if.then1, %do.body
  br label %do.end, !dbg !5710

do.end:                                           ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !5711
  br label %return, !dbg !5711

if.end3:                                          ; preds = %entry
  %2 = load i16, i16* %reg.addr, align 2, !dbg !5712
  %conv = zext i16 %2 to i32, !dbg !5712
  %shr = ashr i32 %conv, 8, !dbg !5713
  %and = and i32 %shr, 255, !dbg !5714
  %conv4 = trunc i32 %and to i8, !dbg !5715
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5716
  %i2c_write_buffer = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 20, !dbg !5717
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %i2c_write_buffer, i64 0, i64 0, !dbg !5716
  store i8 %conv4, i8* %arrayidx, align 8, !dbg !5718
  %4 = load i16, i16* %reg.addr, align 2, !dbg !5719
  %conv5 = zext i16 %4 to i32, !dbg !5719
  %and6 = and i32 %conv5, 255, !dbg !5720
  %conv7 = trunc i32 %and6 to i8, !dbg !5719
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5721
  %i2c_write_buffer8 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 20, !dbg !5722
  %arrayidx9 = getelementptr [4 x i8], [4 x i8]* %i2c_write_buffer8, i64 0, i64 1, !dbg !5721
  store i8 %conv7, i8* %arrayidx9, align 1, !dbg !5723
  %6 = load i16, i16* %val.addr, align 2, !dbg !5724
  %conv10 = zext i16 %6 to i32, !dbg !5724
  %shr11 = ashr i32 %conv10, 8, !dbg !5725
  %and12 = and i32 %shr11, 255, !dbg !5726
  %conv13 = trunc i32 %and12 to i8, !dbg !5727
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5728
  %i2c_write_buffer14 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %7, i32 0, i32 20, !dbg !5729
  %arrayidx15 = getelementptr [4 x i8], [4 x i8]* %i2c_write_buffer14, i64 0, i64 2, !dbg !5728
  store i8 %conv13, i8* %arrayidx15, align 2, !dbg !5730
  %8 = load i16, i16* %val.addr, align 2, !dbg !5731
  %conv16 = zext i16 %8 to i32, !dbg !5731
  %and17 = and i32 %conv16, 255, !dbg !5732
  %conv18 = trunc i32 %and17 to i8, !dbg !5731
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5733
  %i2c_write_buffer19 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 20, !dbg !5734
  %arrayidx20 = getelementptr [4 x i8], [4 x i8]* %i2c_write_buffer19, i64 0, i64 3, !dbg !5733
  store i8 %conv18, i8* %arrayidx20, align 1, !dbg !5735
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5736
  %msg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 19, !dbg !5737
  %arrayidx21 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !5736
  %11 = bitcast %struct.i2c_msg* %arrayidx21 to i8*, !dbg !5738
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false), !dbg !5738
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5739
  %i2c_addr = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %12, i32 0, i32 2, !dbg !5740
  %13 = load i8, i8* %i2c_addr, align 8, !dbg !5740
  %conv22 = zext i8 %13 to i32, !dbg !5739
  %shr23 = ashr i32 %conv22, 1, !dbg !5741
  %conv24 = trunc i32 %shr23 to i16, !dbg !5739
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5742
  %msg25 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %14, i32 0, i32 19, !dbg !5743
  %arrayidx26 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg25, i64 0, i64 0, !dbg !5742
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx26, i32 0, i32 0, !dbg !5744
  store i16 %conv24, i16* %addr, align 8, !dbg !5745
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5746
  %msg27 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 19, !dbg !5747
  %arrayidx28 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg27, i64 0, i64 0, !dbg !5746
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx28, i32 0, i32 1, !dbg !5748
  store i16 0, i16* %flags, align 2, !dbg !5749
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5750
  %i2c_write_buffer29 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %16, i32 0, i32 20, !dbg !5751
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %i2c_write_buffer29, i64 0, i64 0, !dbg !5750
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5752
  %msg30 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %17, i32 0, i32 19, !dbg !5753
  %arrayidx31 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg30, i64 0, i64 0, !dbg !5752
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx31, i32 0, i32 3, !dbg !5754
  store i8* %arraydecay, i8** %buf, align 8, !dbg !5755
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5756
  %msg32 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %18, i32 0, i32 19, !dbg !5757
  %arrayidx33 = getelementptr [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg32, i64 0, i64 0, !dbg !5756
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx33, i32 0, i32 2, !dbg !5758
  store i16 4, i16* %len, align 4, !dbg !5759
  %19 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5760
  %i2c_adap = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %19, i32 0, i32 3, !dbg !5761
  %20 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap, align 8, !dbg !5761
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5762
  %msg34 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %21, i32 0, i32 19, !dbg !5763
  %arraydecay35 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg34, i64 0, i64 0, !dbg !5762
  %call36 = call i32 @i2c_transfer(%struct.i2c_adapter* %20, %struct.i2c_msg* %arraydecay35, i32 1) #8, !dbg !5764
  %cmp37 = icmp ne i32 %call36, 1, !dbg !5765
  %22 = zext i1 %cmp37 to i64, !dbg !5764
  %cond = select i1 %cmp37, i32 -121, i32 0, !dbg !5764
  store i32 %cond, i32* %ret, align 4, !dbg !5766
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !5767
  %i2c_buffer_lock39 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %23, i32 0, i32 22, !dbg !5768
  call void @mutex_unlock(%struct.mutex* %i2c_buffer_lock39) #8, !dbg !5769
  %24 = load i32, i32* %ret, align 4, !dbg !5770
  store i32 %24, i32* %retval, align 4, !dbg !5771
  br label %return, !dbg !5771

return:                                           ; preds = %if.end3, %do.end
  %25 = load i32, i32* %retval, align 4, !dbg !5772
  ret i32 %25, !dbg !5772
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_lock_interruptible(%struct.mutex*) #2

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noredzone
declare dso_local i32 @i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_adc_power(%struct.dvb_frontend* %fe) #0 !dbg !5773 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %tmp_val = alloca i32, align 4
  %exp = alloca i32, align 4
  %mant = alloca i32, align 4
  %pow_i = alloca i32, align 4
  %buf = alloca [2 x i16], align 2
  %ix = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !5778, metadata !DIExpression()), !dbg !5779
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5780
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5781
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5781
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !5780
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !5779
  call void @llvm.dbg.declare(metadata i32* %tmp_val, metadata !5782, metadata !DIExpression()), !dbg !5783
  store i32 0, i32* %tmp_val, align 4, !dbg !5783
  call void @llvm.dbg.declare(metadata i32* %exp, metadata !5784, metadata !DIExpression()), !dbg !5785
  store i32 0, i32* %exp, align 4, !dbg !5785
  call void @llvm.dbg.declare(metadata i32* %mant, metadata !5786, metadata !DIExpression()), !dbg !5787
  store i32 0, i32* %mant, align 4, !dbg !5787
  call void @llvm.dbg.declare(metadata i32* %pow_i, metadata !5788, metadata !DIExpression()), !dbg !5789
  call void @llvm.dbg.declare(metadata [2 x i16]* %buf, metadata !5790, metadata !DIExpression()), !dbg !5792
  call void @llvm.dbg.declare(metadata i8* %ix, metadata !5793, metadata !DIExpression()), !dbg !5794
  store i8 0, i8* %ix, align 1, !dbg !5794
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5795
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 388) #8, !dbg !5796
  %arrayidx = getelementptr [2 x i16], [2 x i16]* %buf, i64 0, i64 0, !dbg !5797
  store i16 %call, i16* %arrayidx, align 2, !dbg !5798
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !5799
  %call1 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %4, i16 zeroext 389) #8, !dbg !5800
  %arrayidx2 = getelementptr [2 x i16], [2 x i16]* %buf, i64 0, i64 1, !dbg !5801
  store i16 %call1, i16* %arrayidx2, align 2, !dbg !5802
  %arrayidx3 = getelementptr [2 x i16], [2 x i16]* %buf, i64 0, i64 0, !dbg !5803
  %5 = load i16, i16* %arrayidx3, align 2, !dbg !5803
  %conv = zext i16 %5 to i32, !dbg !5803
  %shl = shl i32 %conv, 16, !dbg !5804
  %arrayidx4 = getelementptr [2 x i16], [2 x i16]* %buf, i64 0, i64 1, !dbg !5805
  %6 = load i16, i16* %arrayidx4, align 2, !dbg !5805
  %conv5 = zext i16 %6 to i32, !dbg !5805
  %or = or i32 %shl, %conv5, !dbg !5806
  store i32 %or, i32* %pow_i, align 4, !dbg !5807
  br label %do.body, !dbg !5808

do.body:                                          ; preds = %entry
  %7 = load i32, i32* @debug, align 4, !dbg !5809
  %tobool = icmp ne i32 %7, 0, !dbg !5809
  br i1 %tobool, label %if.then, label %if.end, !dbg !5812

if.then:                                          ; preds = %do.body
  %8 = load i32, i32* %pow_i, align 4, !dbg !5809
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dib7000p_get_adc_power, i64 0, i64 0), i32 %8) #9, !dbg !5809
  br label %if.end, !dbg !5809

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !5812

do.end:                                           ; preds = %if.end
  %9 = load i32, i32* %pow_i, align 4, !dbg !5813
  store i32 %9, i32* %tmp_val, align 4, !dbg !5814
  br label %while.cond, !dbg !5815

while.cond:                                       ; preds = %while.body, %do.end
  %10 = load i32, i32* %tmp_val, align 4, !dbg !5816
  %shr = lshr i32 %10, 1, !dbg !5816
  store i32 %shr, i32* %tmp_val, align 4, !dbg !5816
  %tobool7 = icmp ne i32 %shr, 0, !dbg !5815
  br i1 %tobool7, label %while.body, label %while.end, !dbg !5815

while.body:                                       ; preds = %while.cond
  %11 = load i32, i32* %exp, align 4, !dbg !5817
  %inc = add i32 %11, 1, !dbg !5817
  store i32 %inc, i32* %exp, align 4, !dbg !5817
  br label %while.cond, !dbg !5815, !llvm.loop !5818

while.end:                                        ; preds = %while.cond
  %12 = load i32, i32* %pow_i, align 4, !dbg !5819
  %mul = mul i32 %12, 1000, !dbg !5820
  %13 = load i32, i32* %exp, align 4, !dbg !5821
  %shl8 = shl i32 1, %13, !dbg !5822
  %div = sdiv i32 %mul, %shl8, !dbg !5823
  store i32 %div, i32* %mant, align 4, !dbg !5824
  br label %do.body9, !dbg !5825

do.body9:                                         ; preds = %while.end
  %14 = load i32, i32* @debug, align 4, !dbg !5826
  %tobool10 = icmp ne i32 %14, 0, !dbg !5826
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !5829

if.then11:                                        ; preds = %do.body9
  %15 = load i32, i32* %mant, align 4, !dbg !5826
  %div12 = udiv i32 %15, 1000, !dbg !5826
  %16 = load i32, i32* %exp, align 4, !dbg !5826
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dib7000p_get_adc_power, i64 0, i64 0), i32 %div12, i32 %16) #9, !dbg !5826
  br label %if.end14, !dbg !5826

if.end14:                                         ; preds = %if.then11, %do.body9
  br label %do.end15, !dbg !5829

do.end15:                                         ; preds = %if.end14
  %17 = load i32, i32* %mant, align 4, !dbg !5830
  %sub = sub i32 %17, 1000, !dbg !5831
  %div16 = udiv i32 %sub, 100, !dbg !5832
  %conv17 = trunc i32 %div16 to i8, !dbg !5833
  store i8 %conv17, i8* %ix, align 1, !dbg !5834
  br label %do.body18, !dbg !5835

do.body18:                                        ; preds = %do.end15
  %18 = load i32, i32* @debug, align 4, !dbg !5836
  %tobool19 = icmp ne i32 %18, 0, !dbg !5836
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !5839

if.then20:                                        ; preds = %do.body18
  %19 = load i8, i8* %ix, align 1, !dbg !5836
  %conv21 = zext i8 %19 to i32, !dbg !5836
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dib7000p_get_adc_power, i64 0, i64 0), i32 %conv21) #9, !dbg !5836
  br label %if.end23, !dbg !5836

if.end23:                                         ; preds = %if.then20, %do.body18
  br label %do.end24, !dbg !5839

do.end24:                                         ; preds = %if.end23
  %20 = load i8, i8* %ix, align 1, !dbg !5840
  %idxprom = zext i8 %20 to i64, !dbg !5841
  %arrayidx25 = getelementptr [21 x i32], [21 x i32]* @lut_1000ln_mant, i64 0, i64 %idxprom, !dbg !5841
  %21 = load i32, i32* %arrayidx25, align 4, !dbg !5841
  %22 = load i32, i32* %exp, align 4, !dbg !5842
  %sub26 = sub i32 %22, 20, !dbg !5843
  %mul27 = mul i32 693, %sub26, !dbg !5844
  %add = add i32 %21, %mul27, !dbg !5845
  %sub28 = sub i32 %add, 6908, !dbg !5846
  store i32 %sub28, i32* %pow_i, align 4, !dbg !5847
  %23 = load i32, i32* %pow_i, align 4, !dbg !5848
  %shl29 = shl i32 %23, 8, !dbg !5849
  %div30 = sdiv i32 %shl29, 1000, !dbg !5850
  store i32 %div30, i32* %pow_i, align 4, !dbg !5851
  br label %do.body31, !dbg !5852

do.body31:                                        ; preds = %do.end24
  %24 = load i32, i32* @debug, align 4, !dbg !5853
  %tobool32 = icmp ne i32 %24, 0, !dbg !5853
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !5856

if.then33:                                        ; preds = %do.body31
  %25 = load i32, i32* %pow_i, align 4, !dbg !5853
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dib7000p_get_adc_power, i64 0, i64 0), i32 %25) #9, !dbg !5853
  br label %if.end35, !dbg !5853

if.end35:                                         ; preds = %if.then33, %do.body31
  br label %do.end36, !dbg !5856

do.end36:                                         ; preds = %if.end35
  %26 = load i32, i32* %pow_i, align 4, !dbg !5857
  ret i32 %26, !dbg !5858
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5859 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5862, metadata !DIExpression()), !dbg !5866
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5872, metadata !DIExpression()), !dbg !5873
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5874, metadata !DIExpression()), !dbg !5875
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5876, metadata !DIExpression()), !dbg !5877
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5878, metadata !DIExpression()), !dbg !5882
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5884, metadata !DIExpression()), !dbg !5888
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5890, metadata !DIExpression()), !dbg !5894
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5899, metadata !DIExpression()), !dbg !5900
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5901, metadata !DIExpression()), !dbg !5902
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5903, metadata !DIExpression()), !dbg !5904
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5905, metadata !DIExpression()), !dbg !5906
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5907, metadata !DIExpression()), !dbg !5908
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5909, metadata !DIExpression()), !dbg !5910
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5911, metadata !DIExpression()), !dbg !5912
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5913, metadata !DIExpression()), !dbg !5914
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5915, metadata !DIExpression()), !dbg !5916
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5917, metadata !DIExpression()), !dbg !5918
  %0 = load i64, i64* %size.addr, align 8, !dbg !5919
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5920
  %or = or i32 %1, 256, !dbg !5921
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5922
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5923
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5924

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5925
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5926
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5927

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5928
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5929
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5930
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !5931
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5908
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5932
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5933
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5934
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5935
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5936
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5937
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5938
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5938
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5938
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5938
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5938
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5939
  br label %kmalloc.exit, !dbg !5939

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5940
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5941
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5941
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5943

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5944
  br label %kmalloc_index.exit.i, !dbg !5944

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5945
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5947
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5948

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5949
  br label %kmalloc_index.exit.i, !dbg !5949

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5950
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5952
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5953

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5954
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5955
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5956

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5957
  br label %kmalloc_index.exit.i, !dbg !5957

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5958
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5960
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5961

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5962
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5963
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5964

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5965
  br label %kmalloc_index.exit.i, !dbg !5965

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5966
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5968
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5969

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5970
  br label %kmalloc_index.exit.i, !dbg !5970

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5971
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5973
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5974

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5975
  br label %kmalloc_index.exit.i, !dbg !5975

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5976
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5978
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5979

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5980
  br label %kmalloc_index.exit.i, !dbg !5980

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5981
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5983
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5984

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5985
  br label %kmalloc_index.exit.i, !dbg !5985

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5986
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5988
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5989

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5990
  br label %kmalloc_index.exit.i, !dbg !5990

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5991
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5993
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5994

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5995
  br label %kmalloc_index.exit.i, !dbg !5995

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5996
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5998
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5999

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6000
  br label %kmalloc_index.exit.i, !dbg !6000

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6001
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6003
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6004

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6005
  br label %kmalloc_index.exit.i, !dbg !6005

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6006
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6008
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6009

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6010
  br label %kmalloc_index.exit.i, !dbg !6010

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6011
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6013
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6014

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6015
  br label %kmalloc_index.exit.i, !dbg !6015

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6016
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6018
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6019

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6020
  br label %kmalloc_index.exit.i, !dbg !6020

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6021
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6023
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6024

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6025
  br label %kmalloc_index.exit.i, !dbg !6025

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6026
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6028
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6029

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6030
  br label %kmalloc_index.exit.i, !dbg !6030

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6031
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !6033
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6034

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6035
  br label %kmalloc_index.exit.i, !dbg !6035

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6036
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !6038
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6039

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6040
  br label %kmalloc_index.exit.i, !dbg !6040

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6041
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !6043
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6044

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6045
  br label %kmalloc_index.exit.i, !dbg !6045

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6046
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !6048
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6049

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6050
  br label %kmalloc_index.exit.i, !dbg !6050

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6051
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !6053
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6054

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6055
  br label %kmalloc_index.exit.i, !dbg !6055

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6056
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !6058
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6059

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6060
  br label %kmalloc_index.exit.i, !dbg !6060

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6061
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !6063
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6064

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6065
  br label %kmalloc_index.exit.i, !dbg !6065

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6066
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !6068
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6069

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6070
  br label %kmalloc_index.exit.i, !dbg !6070

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6071
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !6073
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6074

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6075
  br label %kmalloc_index.exit.i, !dbg !6075

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6076
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !6078
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6079

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6080
  br label %kmalloc_index.exit.i, !dbg !6080

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6081
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !6083
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6084

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6085
  br label %kmalloc_index.exit.i, !dbg !6085

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !6086, !srcloc !6089
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 88) #10, !dbg !6090, !srcloc !6093
  unreachable, !dbg !6094

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !6095
  store i32 %45, i32* %index.i, align 4, !dbg !6096
  %46 = load i32, i32* %index.i, align 4, !dbg !6097
  %tobool.i = icmp ne i32 %46, 0, !dbg !6097
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6099

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6100
  br label %kmalloc.exit, !dbg !6100

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !6101
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6102
  %and.i.i = and i32 %48, 17, !dbg !6102
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6102
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6102
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6102
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6102
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6104

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6105
  br label %kmalloc_type.exit.i, !dbg !6105

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6106
  %and2.i.i = and i32 %49, 1, !dbg !6107
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6106
  %50 = zext i1 %tobool3.i.i to i64, !dbg !6106
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6106
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6108
  br label %kmalloc_type.exit.i, !dbg !6108

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !6109
  %idxprom.i = zext i32 %51 to i64, !dbg !6110
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6110
  %52 = load i32, i32* %index.i, align 4, !dbg !6111
  %idxprom6.i = zext i32 %52 to i64, !dbg !6110
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6110
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6110
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !6112
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !6113
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6114
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6115
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !6116
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6116
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6116
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6116
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !6116
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5877
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6117
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !6118
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6119
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6120
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !6121
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6122
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !6123
  store i8* %62, i8** %retval.i, align 8, !dbg !6124
  br label %kmalloc.exit, !dbg !6124

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !6125
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !6126
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !6127
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6127
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6127
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6127
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !6127
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6128
  br label %kmalloc.exit, !dbg !6128

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !6129
  ret i8* %65, !dbg !6130
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !6131 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6135, metadata !DIExpression()), !dbg !6140
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6142, metadata !DIExpression()), !dbg !6143
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6144, metadata !DIExpression()), !dbg !6145
  %0 = load i64, i64* %size.addr, align 8, !dbg !6146
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !6148
  br i1 %1, label %if.then, label %if.end447, !dbg !6149

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !6150
  %tobool = icmp ne i64 %2, 0, !dbg !6150
  br i1 %tobool, label %if.end, label %if.then1, !dbg !6153

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !6154
  br label %return, !dbg !6154

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !6155
  %cmp = icmp ult i64 %3, 4096, !dbg !6157
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6158

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6159
  br label %return, !dbg !6159

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub = sub i64 %4, 1, !dbg !6160
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !6160
  br i1 %5, label %cond.true, label %cond.false442, !dbg !6160

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub4 = sub i64 %6, 1, !dbg !6160
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !6160
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !6160

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub6 = sub i64 %8, 1, !dbg !6160
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !6160
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !6160

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !6160

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub9 = sub i64 %9, 1, !dbg !6160
  %and = and i64 %sub9, -9223372036854775808, !dbg !6160
  %tobool10 = icmp ne i64 %and, 0, !dbg !6160
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !6160

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !6160

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub13 = sub i64 %10, 1, !dbg !6160
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !6160
  %tobool15 = icmp ne i64 %and14, 0, !dbg !6160
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !6160

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !6160

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub18 = sub i64 %11, 1, !dbg !6160
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !6160
  %tobool20 = icmp ne i64 %and19, 0, !dbg !6160
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !6160

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !6160

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub23 = sub i64 %12, 1, !dbg !6160
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !6160
  %tobool25 = icmp ne i64 %and24, 0, !dbg !6160
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !6160

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !6160

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub28 = sub i64 %13, 1, !dbg !6160
  %and29 = and i64 %sub28, 576460752303423488, !dbg !6160
  %tobool30 = icmp ne i64 %and29, 0, !dbg !6160
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !6160

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !6160

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub33 = sub i64 %14, 1, !dbg !6160
  %and34 = and i64 %sub33, 288230376151711744, !dbg !6160
  %tobool35 = icmp ne i64 %and34, 0, !dbg !6160
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !6160

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !6160

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub38 = sub i64 %15, 1, !dbg !6160
  %and39 = and i64 %sub38, 144115188075855872, !dbg !6160
  %tobool40 = icmp ne i64 %and39, 0, !dbg !6160
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !6160

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !6160

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub43 = sub i64 %16, 1, !dbg !6160
  %and44 = and i64 %sub43, 72057594037927936, !dbg !6160
  %tobool45 = icmp ne i64 %and44, 0, !dbg !6160
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !6160

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !6160

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub48 = sub i64 %17, 1, !dbg !6160
  %and49 = and i64 %sub48, 36028797018963968, !dbg !6160
  %tobool50 = icmp ne i64 %and49, 0, !dbg !6160
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !6160

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !6160

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub53 = sub i64 %18, 1, !dbg !6160
  %and54 = and i64 %sub53, 18014398509481984, !dbg !6160
  %tobool55 = icmp ne i64 %and54, 0, !dbg !6160
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !6160

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !6160

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub58 = sub i64 %19, 1, !dbg !6160
  %and59 = and i64 %sub58, 9007199254740992, !dbg !6160
  %tobool60 = icmp ne i64 %and59, 0, !dbg !6160
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !6160

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !6160

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub63 = sub i64 %20, 1, !dbg !6160
  %and64 = and i64 %sub63, 4503599627370496, !dbg !6160
  %tobool65 = icmp ne i64 %and64, 0, !dbg !6160
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !6160

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !6160

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub68 = sub i64 %21, 1, !dbg !6160
  %and69 = and i64 %sub68, 2251799813685248, !dbg !6160
  %tobool70 = icmp ne i64 %and69, 0, !dbg !6160
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !6160

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !6160

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub73 = sub i64 %22, 1, !dbg !6160
  %and74 = and i64 %sub73, 1125899906842624, !dbg !6160
  %tobool75 = icmp ne i64 %and74, 0, !dbg !6160
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !6160

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !6160

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub78 = sub i64 %23, 1, !dbg !6160
  %and79 = and i64 %sub78, 562949953421312, !dbg !6160
  %tobool80 = icmp ne i64 %and79, 0, !dbg !6160
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !6160

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !6160

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub83 = sub i64 %24, 1, !dbg !6160
  %and84 = and i64 %sub83, 281474976710656, !dbg !6160
  %tobool85 = icmp ne i64 %and84, 0, !dbg !6160
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !6160

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !6160

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub88 = sub i64 %25, 1, !dbg !6160
  %and89 = and i64 %sub88, 140737488355328, !dbg !6160
  %tobool90 = icmp ne i64 %and89, 0, !dbg !6160
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !6160

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !6160

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub93 = sub i64 %26, 1, !dbg !6160
  %and94 = and i64 %sub93, 70368744177664, !dbg !6160
  %tobool95 = icmp ne i64 %and94, 0, !dbg !6160
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !6160

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !6160

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub98 = sub i64 %27, 1, !dbg !6160
  %and99 = and i64 %sub98, 35184372088832, !dbg !6160
  %tobool100 = icmp ne i64 %and99, 0, !dbg !6160
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !6160

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !6160

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub103 = sub i64 %28, 1, !dbg !6160
  %and104 = and i64 %sub103, 17592186044416, !dbg !6160
  %tobool105 = icmp ne i64 %and104, 0, !dbg !6160
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !6160

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !6160

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub108 = sub i64 %29, 1, !dbg !6160
  %and109 = and i64 %sub108, 8796093022208, !dbg !6160
  %tobool110 = icmp ne i64 %and109, 0, !dbg !6160
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !6160

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !6160

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub113 = sub i64 %30, 1, !dbg !6160
  %and114 = and i64 %sub113, 4398046511104, !dbg !6160
  %tobool115 = icmp ne i64 %and114, 0, !dbg !6160
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !6160

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !6160

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub118 = sub i64 %31, 1, !dbg !6160
  %and119 = and i64 %sub118, 2199023255552, !dbg !6160
  %tobool120 = icmp ne i64 %and119, 0, !dbg !6160
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !6160

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !6160

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub123 = sub i64 %32, 1, !dbg !6160
  %and124 = and i64 %sub123, 1099511627776, !dbg !6160
  %tobool125 = icmp ne i64 %and124, 0, !dbg !6160
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !6160

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !6160

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub128 = sub i64 %33, 1, !dbg !6160
  %and129 = and i64 %sub128, 549755813888, !dbg !6160
  %tobool130 = icmp ne i64 %and129, 0, !dbg !6160
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !6160

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !6160

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub133 = sub i64 %34, 1, !dbg !6160
  %and134 = and i64 %sub133, 274877906944, !dbg !6160
  %tobool135 = icmp ne i64 %and134, 0, !dbg !6160
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !6160

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !6160

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub138 = sub i64 %35, 1, !dbg !6160
  %and139 = and i64 %sub138, 137438953472, !dbg !6160
  %tobool140 = icmp ne i64 %and139, 0, !dbg !6160
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !6160

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !6160

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub143 = sub i64 %36, 1, !dbg !6160
  %and144 = and i64 %sub143, 68719476736, !dbg !6160
  %tobool145 = icmp ne i64 %and144, 0, !dbg !6160
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !6160

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !6160

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub148 = sub i64 %37, 1, !dbg !6160
  %and149 = and i64 %sub148, 34359738368, !dbg !6160
  %tobool150 = icmp ne i64 %and149, 0, !dbg !6160
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !6160

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !6160

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub153 = sub i64 %38, 1, !dbg !6160
  %and154 = and i64 %sub153, 17179869184, !dbg !6160
  %tobool155 = icmp ne i64 %and154, 0, !dbg !6160
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !6160

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !6160

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub158 = sub i64 %39, 1, !dbg !6160
  %and159 = and i64 %sub158, 8589934592, !dbg !6160
  %tobool160 = icmp ne i64 %and159, 0, !dbg !6160
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !6160

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !6160

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub163 = sub i64 %40, 1, !dbg !6160
  %and164 = and i64 %sub163, 4294967296, !dbg !6160
  %tobool165 = icmp ne i64 %and164, 0, !dbg !6160
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !6160

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !6160

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub168 = sub i64 %41, 1, !dbg !6160
  %and169 = and i64 %sub168, 2147483648, !dbg !6160
  %tobool170 = icmp ne i64 %and169, 0, !dbg !6160
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !6160

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !6160

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub173 = sub i64 %42, 1, !dbg !6160
  %and174 = and i64 %sub173, 1073741824, !dbg !6160
  %tobool175 = icmp ne i64 %and174, 0, !dbg !6160
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !6160

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !6160

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub178 = sub i64 %43, 1, !dbg !6160
  %and179 = and i64 %sub178, 536870912, !dbg !6160
  %tobool180 = icmp ne i64 %and179, 0, !dbg !6160
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !6160

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !6160

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub183 = sub i64 %44, 1, !dbg !6160
  %and184 = and i64 %sub183, 268435456, !dbg !6160
  %tobool185 = icmp ne i64 %and184, 0, !dbg !6160
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !6160

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !6160

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub188 = sub i64 %45, 1, !dbg !6160
  %and189 = and i64 %sub188, 134217728, !dbg !6160
  %tobool190 = icmp ne i64 %and189, 0, !dbg !6160
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !6160

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !6160

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub193 = sub i64 %46, 1, !dbg !6160
  %and194 = and i64 %sub193, 67108864, !dbg !6160
  %tobool195 = icmp ne i64 %and194, 0, !dbg !6160
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !6160

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !6160

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub198 = sub i64 %47, 1, !dbg !6160
  %and199 = and i64 %sub198, 33554432, !dbg !6160
  %tobool200 = icmp ne i64 %and199, 0, !dbg !6160
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !6160

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !6160

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub203 = sub i64 %48, 1, !dbg !6160
  %and204 = and i64 %sub203, 16777216, !dbg !6160
  %tobool205 = icmp ne i64 %and204, 0, !dbg !6160
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !6160

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !6160

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub208 = sub i64 %49, 1, !dbg !6160
  %and209 = and i64 %sub208, 8388608, !dbg !6160
  %tobool210 = icmp ne i64 %and209, 0, !dbg !6160
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !6160

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !6160

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub213 = sub i64 %50, 1, !dbg !6160
  %and214 = and i64 %sub213, 4194304, !dbg !6160
  %tobool215 = icmp ne i64 %and214, 0, !dbg !6160
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !6160

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !6160

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub218 = sub i64 %51, 1, !dbg !6160
  %and219 = and i64 %sub218, 2097152, !dbg !6160
  %tobool220 = icmp ne i64 %and219, 0, !dbg !6160
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !6160

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !6160

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub223 = sub i64 %52, 1, !dbg !6160
  %and224 = and i64 %sub223, 1048576, !dbg !6160
  %tobool225 = icmp ne i64 %and224, 0, !dbg !6160
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !6160

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !6160

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub228 = sub i64 %53, 1, !dbg !6160
  %and229 = and i64 %sub228, 524288, !dbg !6160
  %tobool230 = icmp ne i64 %and229, 0, !dbg !6160
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !6160

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !6160

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub233 = sub i64 %54, 1, !dbg !6160
  %and234 = and i64 %sub233, 262144, !dbg !6160
  %tobool235 = icmp ne i64 %and234, 0, !dbg !6160
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !6160

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !6160

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub238 = sub i64 %55, 1, !dbg !6160
  %and239 = and i64 %sub238, 131072, !dbg !6160
  %tobool240 = icmp ne i64 %and239, 0, !dbg !6160
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !6160

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !6160

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub243 = sub i64 %56, 1, !dbg !6160
  %and244 = and i64 %sub243, 65536, !dbg !6160
  %tobool245 = icmp ne i64 %and244, 0, !dbg !6160
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !6160

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !6160

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub248 = sub i64 %57, 1, !dbg !6160
  %and249 = and i64 %sub248, 32768, !dbg !6160
  %tobool250 = icmp ne i64 %and249, 0, !dbg !6160
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !6160

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !6160

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub253 = sub i64 %58, 1, !dbg !6160
  %and254 = and i64 %sub253, 16384, !dbg !6160
  %tobool255 = icmp ne i64 %and254, 0, !dbg !6160
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !6160

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !6160

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub258 = sub i64 %59, 1, !dbg !6160
  %and259 = and i64 %sub258, 8192, !dbg !6160
  %tobool260 = icmp ne i64 %and259, 0, !dbg !6160
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !6160

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !6160

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub263 = sub i64 %60, 1, !dbg !6160
  %and264 = and i64 %sub263, 4096, !dbg !6160
  %tobool265 = icmp ne i64 %and264, 0, !dbg !6160
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !6160

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !6160

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub268 = sub i64 %61, 1, !dbg !6160
  %and269 = and i64 %sub268, 2048, !dbg !6160
  %tobool270 = icmp ne i64 %and269, 0, !dbg !6160
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !6160

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !6160

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub273 = sub i64 %62, 1, !dbg !6160
  %and274 = and i64 %sub273, 1024, !dbg !6160
  %tobool275 = icmp ne i64 %and274, 0, !dbg !6160
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !6160

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !6160

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub278 = sub i64 %63, 1, !dbg !6160
  %and279 = and i64 %sub278, 512, !dbg !6160
  %tobool280 = icmp ne i64 %and279, 0, !dbg !6160
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !6160

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !6160

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub283 = sub i64 %64, 1, !dbg !6160
  %and284 = and i64 %sub283, 256, !dbg !6160
  %tobool285 = icmp ne i64 %and284, 0, !dbg !6160
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !6160

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !6160

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub288 = sub i64 %65, 1, !dbg !6160
  %and289 = and i64 %sub288, 128, !dbg !6160
  %tobool290 = icmp ne i64 %and289, 0, !dbg !6160
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !6160

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !6160

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub293 = sub i64 %66, 1, !dbg !6160
  %and294 = and i64 %sub293, 64, !dbg !6160
  %tobool295 = icmp ne i64 %and294, 0, !dbg !6160
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !6160

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !6160

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub298 = sub i64 %67, 1, !dbg !6160
  %and299 = and i64 %sub298, 32, !dbg !6160
  %tobool300 = icmp ne i64 %and299, 0, !dbg !6160
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !6160

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !6160

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub303 = sub i64 %68, 1, !dbg !6160
  %and304 = and i64 %sub303, 16, !dbg !6160
  %tobool305 = icmp ne i64 %and304, 0, !dbg !6160
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !6160

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !6160

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub308 = sub i64 %69, 1, !dbg !6160
  %and309 = and i64 %sub308, 8, !dbg !6160
  %tobool310 = icmp ne i64 %and309, 0, !dbg !6160
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !6160

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !6160

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub313 = sub i64 %70, 1, !dbg !6160
  %and314 = and i64 %sub313, 4, !dbg !6160
  %tobool315 = icmp ne i64 %and314, 0, !dbg !6160
  %71 = zext i1 %tobool315 to i64, !dbg !6160
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !6160
  br label %cond.end, !dbg !6160

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !6160
  br label %cond.end317, !dbg !6160

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !6160
  br label %cond.end319, !dbg !6160

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !6160
  br label %cond.end321, !dbg !6160

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !6160
  br label %cond.end323, !dbg !6160

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !6160
  br label %cond.end325, !dbg !6160

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !6160
  br label %cond.end327, !dbg !6160

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !6160
  br label %cond.end329, !dbg !6160

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !6160
  br label %cond.end331, !dbg !6160

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !6160
  br label %cond.end333, !dbg !6160

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !6160
  br label %cond.end335, !dbg !6160

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !6160
  br label %cond.end337, !dbg !6160

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !6160
  br label %cond.end339, !dbg !6160

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !6160
  br label %cond.end341, !dbg !6160

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !6160
  br label %cond.end343, !dbg !6160

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !6160
  br label %cond.end345, !dbg !6160

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !6160
  br label %cond.end347, !dbg !6160

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !6160
  br label %cond.end349, !dbg !6160

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !6160
  br label %cond.end351, !dbg !6160

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !6160
  br label %cond.end353, !dbg !6160

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !6160
  br label %cond.end355, !dbg !6160

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !6160
  br label %cond.end357, !dbg !6160

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !6160
  br label %cond.end359, !dbg !6160

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !6160
  br label %cond.end361, !dbg !6160

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !6160
  br label %cond.end363, !dbg !6160

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !6160
  br label %cond.end365, !dbg !6160

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !6160
  br label %cond.end367, !dbg !6160

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !6160
  br label %cond.end369, !dbg !6160

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !6160
  br label %cond.end371, !dbg !6160

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !6160
  br label %cond.end373, !dbg !6160

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !6160
  br label %cond.end375, !dbg !6160

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !6160
  br label %cond.end377, !dbg !6160

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !6160
  br label %cond.end379, !dbg !6160

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !6160
  br label %cond.end381, !dbg !6160

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !6160
  br label %cond.end383, !dbg !6160

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !6160
  br label %cond.end385, !dbg !6160

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !6160
  br label %cond.end387, !dbg !6160

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !6160
  br label %cond.end389, !dbg !6160

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !6160
  br label %cond.end391, !dbg !6160

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !6160
  br label %cond.end393, !dbg !6160

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !6160
  br label %cond.end395, !dbg !6160

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !6160
  br label %cond.end397, !dbg !6160

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !6160
  br label %cond.end399, !dbg !6160

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !6160
  br label %cond.end401, !dbg !6160

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !6160
  br label %cond.end403, !dbg !6160

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !6160
  br label %cond.end405, !dbg !6160

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !6160
  br label %cond.end407, !dbg !6160

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !6160
  br label %cond.end409, !dbg !6160

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !6160
  br label %cond.end411, !dbg !6160

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !6160
  br label %cond.end413, !dbg !6160

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !6160
  br label %cond.end415, !dbg !6160

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !6160
  br label %cond.end417, !dbg !6160

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !6160
  br label %cond.end419, !dbg !6160

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !6160
  br label %cond.end421, !dbg !6160

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !6160
  br label %cond.end423, !dbg !6160

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !6160
  br label %cond.end425, !dbg !6160

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !6160
  br label %cond.end427, !dbg !6160

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !6160
  br label %cond.end429, !dbg !6160

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !6160
  br label %cond.end431, !dbg !6160

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !6160
  br label %cond.end433, !dbg !6160

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !6160
  br label %cond.end435, !dbg !6160

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !6160
  br label %cond.end437, !dbg !6160

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !6160
  br label %cond.end440, !dbg !6160

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !6160

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !6160
  br label %cond.end444, !dbg !6160

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !6160
  %sub443 = sub i64 %72, 1, !dbg !6160
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !6160
  br label %cond.end444, !dbg !6160

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !6160
  %sub446 = sub i32 %cond445, 12, !dbg !6161
  %add = add i32 %sub446, 1, !dbg !6162
  store i32 %add, i32* %retval, align 4, !dbg !6163
  br label %return, !dbg !6163

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !6164
  %dec = add i64 %73, -1, !dbg !6164
  store i64 %dec, i64* %size.addr, align 8, !dbg !6164
  %74 = load i64, i64* %size.addr, align 8, !dbg !6165
  %shr = lshr i64 %74, 12, !dbg !6165
  store i64 %shr, i64* %size.addr, align 8, !dbg !6165
  %75 = load i64, i64* %size.addr, align 8, !dbg !6166
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6143
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !6167
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !6168
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !6167, !srcloc !6169
  store i32 %78, i32* %bitpos.i, align 4, !dbg !6167
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !6170
  %add.i = add i32 %79, 1, !dbg !6171
  store i32 %add.i, i32* %retval, align 4, !dbg !6172
  br label %return, !dbg !6172

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !6173
  ret i32 %80, !dbg !6173
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !6174 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !6135, metadata !DIExpression()), !dbg !6178
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !6142, metadata !DIExpression()), !dbg !6180
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6181, metadata !DIExpression()), !dbg !6182
  %0 = load i64, i64* %n.addr, align 8, !dbg !6183
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !6180
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !6184
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !6185
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !6184, !srcloc !6169
  store i32 %3, i32* %bitpos.i, align 4, !dbg !6184
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !6186
  %add.i = add i32 %4, 1, !dbg !6187
  %sub = sub i32 %add.i, 1, !dbg !6188
  ret i32 %sub, !dbg !6189
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !6190 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !6194, metadata !DIExpression()), !dbg !6195
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !6196, metadata !DIExpression()), !dbg !6197
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6198, metadata !DIExpression()), !dbg !6199
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6200, metadata !DIExpression()), !dbg !6201
  %0 = load i8*, i8** %object.addr, align 8, !dbg !6202
  ret i8* %0, !dbg !6203
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_identify(%struct.dib7000p_state* %st) #0 !dbg !6204 {
entry:
  %retval = alloca i32, align 4
  %st.addr = alloca %struct.dib7000p_state*, align 8
  %value = alloca i16, align 2
  store %struct.dib7000p_state* %st, %struct.dib7000p_state** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st.addr, metadata !6207, metadata !DIExpression()), !dbg !6208
  call void @llvm.dbg.declare(metadata i16* %value, metadata !6209, metadata !DIExpression()), !dbg !6210
  br label %do.body, !dbg !6211

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !6212
  %tobool = icmp ne i32 %0, 0, !dbg !6212
  br i1 %tobool, label %if.then, label %if.end, !dbg !6215

if.then:                                          ; preds = %do.body
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !6212
  %i2c_addr = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %1, i32 0, i32 2, !dbg !6212
  %2 = load i8, i8* %i2c_addr, align 8, !dbg !6212
  %conv = zext i8 %2 to i32, !dbg !6212
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !6212
  %i2c_addr1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 2, !dbg !6212
  %4 = load i8, i8* %i2c_addr1, align 8, !dbg !6212
  %conv2 = zext i8 %4 to i32, !dbg !6212
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dib7000p_identify, i64 0, i64 0), i32 %conv, i32 %conv2) #9, !dbg !6212
  br label %if.end, !dbg !6212

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6215

do.end:                                           ; preds = %if.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !6216
  %call3 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %5, i16 zeroext 768) #8, !dbg !6218
  store i16 %call3, i16* %value, align 2, !dbg !6219
  %conv4 = zext i16 %call3 to i32, !dbg !6220
  %cmp = icmp ne i32 %conv4, 435, !dbg !6221
  br i1 %cmp, label %if.then6, label %if.end14, !dbg !6222

if.then6:                                         ; preds = %do.end
  br label %do.body7, !dbg !6223

do.body7:                                         ; preds = %if.then6
  %6 = load i32, i32* @debug, align 4, !dbg !6225
  %tobool8 = icmp ne i32 %6, 0, !dbg !6225
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !6228

if.then9:                                         ; preds = %do.body7
  %7 = load i16, i16* %value, align 2, !dbg !6225
  %conv10 = zext i16 %7 to i32, !dbg !6225
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dib7000p_identify, i64 0, i64 0), i32 %conv10) #9, !dbg !6225
  br label %if.end12, !dbg !6225

if.end12:                                         ; preds = %if.then9, %do.body7
  br label %do.end13, !dbg !6228

do.end13:                                         ; preds = %if.end12
  store i32 -121, i32* %retval, align 4, !dbg !6229
  br label %return, !dbg !6229

if.end14:                                         ; preds = %do.end
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !6230
  %call15 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %8, i16 zeroext 769) #8, !dbg !6232
  store i16 %call15, i16* %value, align 2, !dbg !6233
  %conv16 = zext i16 %call15 to i32, !dbg !6234
  %cmp17 = icmp ne i32 %conv16, 16384, !dbg !6235
  br i1 %cmp17, label %if.then19, label %if.end27, !dbg !6236

if.then19:                                        ; preds = %if.end14
  br label %do.body20, !dbg !6237

do.body20:                                        ; preds = %if.then19
  %9 = load i32, i32* @debug, align 4, !dbg !6239
  %tobool21 = icmp ne i32 %9, 0, !dbg !6239
  br i1 %tobool21, label %if.then22, label %if.end25, !dbg !6242

if.then22:                                        ; preds = %do.body20
  %10 = load i16, i16* %value, align 2, !dbg !6239
  %conv23 = zext i16 %10 to i32, !dbg !6239
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dib7000p_identify, i64 0, i64 0), i32 %conv23) #9, !dbg !6239
  br label %if.end25, !dbg !6239

if.end25:                                         ; preds = %if.then22, %do.body20
  br label %do.end26, !dbg !6242

do.end26:                                         ; preds = %if.end25
  store i32 -121, i32* %retval, align 4, !dbg !6243
  br label %return, !dbg !6243

if.end27:                                         ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !6244
  br label %return, !dbg !6244

return:                                           ; preds = %if.end27, %do.end26, %do.end13
  %11 = load i32, i32* %retval, align 4, !dbg !6245
  ret i32 %11, !dbg !6245
}

; Function Attrs: noredzone
declare dso_local i32 @dibx000_init_i2c_master(%struct.dibx000_i2c_master*, i16 zeroext, %struct.i2c_adapter*, i8 zeroext) #2

; Function Attrs: noredzone
declare dso_local i64 @strscpy(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_set_adapdata(%struct.i2c_adapter* %adap, i8* %data) #0 !dbg !6246 {
entry:
  %adap.addr = alloca %struct.i2c_adapter*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.i2c_adapter* %adap, %struct.i2c_adapter** %adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adap.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adap.addr, align 8, !dbg !6253
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %0, i32 0, i32 9, !dbg !6254
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6255
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #8, !dbg !6256
  ret void, !dbg !6257
}

; Function Attrs: noredzone
declare dso_local i32 @i2c_add_adapter(%struct.i2c_adapter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_demod_reset(%struct.dib7000p_state* %state) #0 !dbg !6258 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6261
  %call = call i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %0, i32 0) #8, !dbg !6262
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6263
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %1, i32 0, i32 16, !dbg !6265
  %2 = load i16, i16* %version, align 8, !dbg !6265
  %conv = zext i16 %2 to i32, !dbg !6263
  %cmp = icmp eq i32 %conv, 28816, !dbg !6266
  br i1 %cmp, label %if.then, label %if.end, !dbg !6267

if.then:                                          ; preds = %entry
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6268
  %i2c_master = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 4, !dbg !6269
  call void @dibx000_reset_i2c_master(%struct.dibx000_i2c_master* %i2c_master) #8, !dbg !6270
  br label %if.end, !dbg !6270

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6271
  call void @dib7000p_set_adc_state(%struct.dib7000p_state* %4, i32 4) #8, !dbg !6272
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6273
  %call2 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %5, i16 zeroext 770, i16 zeroext -1) #8, !dbg !6274
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6275
  %call3 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 771, i16 zeroext -1) #8, !dbg !6276
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6277
  %call4 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %7, i16 zeroext 772, i16 zeroext 31) #8, !dbg !6278
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6279
  %call5 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %8, i16 zeroext 1280, i16 zeroext 7) #8, !dbg !6280
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6281
  %call6 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %9, i16 zeroext 770, i16 zeroext 0) #8, !dbg !6282
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6283
  %call7 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %10, i16 zeroext 771, i16 zeroext 0) #8, !dbg !6284
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6285
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %11, i16 zeroext 772, i16 zeroext 0) #8, !dbg !6286
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6287
  %call9 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 1280, i16 zeroext 0) #8, !dbg !6288
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6289
  %version10 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %13, i32 0, i32 16, !dbg !6291
  %14 = load i16, i16* %version10, align 8, !dbg !6291
  %conv11 = zext i16 %14 to i32, !dbg !6289
  %cmp12 = icmp ne i32 %conv11, 28816, !dbg !6292
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !6293

if.then14:                                        ; preds = %if.end
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6294
  %call15 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %15, i16 zeroext 898, i16 zeroext 3) #8, !dbg !6296
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6297
  %call16 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 898, i16 zeroext 0) #8, !dbg !6298
  br label %if.end17, !dbg !6299

if.end17:                                         ; preds = %if.then14, %if.end
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6300
  call void @dib7000p_reset_pll(%struct.dib7000p_state* %17) #8, !dbg !6301
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6302
  %call18 = call i32 @dib7000p_reset_gpio(%struct.dib7000p_state* %18) #8, !dbg !6304
  %cmp19 = icmp ne i32 %call18, 0, !dbg !6305
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !6306

if.then21:                                        ; preds = %if.end17
  br label %do.body, !dbg !6307

do.body:                                          ; preds = %if.then21
  %19 = load i32, i32* @debug, align 4, !dbg !6308
  %tobool = icmp ne i32 %19, 0, !dbg !6308
  br i1 %tobool, label %if.then22, label %if.end24, !dbg !6311

if.then22:                                        ; preds = %do.body
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dib7000p_demod_reset, i64 0, i64 0)) #9, !dbg !6308
  br label %if.end24, !dbg !6308

if.end24:                                         ; preds = %if.then22, %do.body
  br label %do.end, !dbg !6311

do.end:                                           ; preds = %if.end24
  br label %if.end25, !dbg !6311

if.end25:                                         ; preds = %do.end, %if.end17
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6312
  %version26 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %20, i32 0, i32 16, !dbg !6314
  %21 = load i16, i16* %version26, align 8, !dbg !6314
  %conv27 = zext i16 %21 to i32, !dbg !6312
  %cmp28 = icmp eq i32 %conv27, 28816, !dbg !6315
  br i1 %cmp28, label %if.then30, label %if.end36, !dbg !6316

if.then30:                                        ; preds = %if.end25
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6317
  %call31 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 899, i16 zeroext 0) #8, !dbg !6319
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6320
  %call32 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %23, i16 zeroext 42, i16 zeroext 35) #8, !dbg !6321
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6322
  %call33 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %24, i16 zeroext 43, i16 zeroext 724) #8, !dbg !6323
  %25 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6324
  %call34 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %25, i16 zeroext 44, i16 zeroext 300) #8, !dbg !6325
  %26 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6326
  %call35 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %26, i16 zeroext 273, i16 zeroext 30) #8, !dbg !6327
  br label %if.end36, !dbg !6328

if.end36:                                         ; preds = %if.then30, %if.end25
  %27 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6329
  %call37 = call i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %27, i32 0) #8, !dbg !6331
  %cmp38 = icmp ne i32 %call37, 0, !dbg !6332
  br i1 %cmp38, label %if.then40, label %if.end47, !dbg !6333

if.then40:                                        ; preds = %if.end36
  br label %do.body41, !dbg !6334

do.body41:                                        ; preds = %if.then40
  %28 = load i32, i32* @debug, align 4, !dbg !6335
  %tobool42 = icmp ne i32 %28, 0, !dbg !6335
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !6338

if.then43:                                        ; preds = %do.body41
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dib7000p_demod_reset, i64 0, i64 0)) #9, !dbg !6335
  br label %if.end45, !dbg !6335

if.end45:                                         ; preds = %if.then43, %do.body41
  br label %do.end46, !dbg !6338

do.end46:                                         ; preds = %if.end45
  br label %if.end47, !dbg !6338

if.end47:                                         ; preds = %do.end46, %if.end36
  %29 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6339
  call void @dib7000p_set_adc_state(%struct.dib7000p_state* %29, i32 0) #8, !dbg !6340
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6341
  %call48 = call i32 @dib7000p_sad_calib(%struct.dib7000p_state* %30) #8, !dbg !6342
  %31 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6343
  call void @dib7000p_set_adc_state(%struct.dib7000p_state* %31, i32 1) #8, !dbg !6344
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6345
  %33 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6346
  %call49 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %33, i16 zeroext 1285) #8, !dbg !6347
  %conv50 = zext i16 %call49 to i32, !dbg !6347
  %and = and i32 %conv50, -3, !dbg !6348
  %conv51 = trunc i32 %and to i16, !dbg !6347
  %call52 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %32, i16 zeroext 1285, i16 zeroext %conv51) #8, !dbg !6349
  %34 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6350
  %call53 = call i32 @dib7000p_set_bandwidth(%struct.dib7000p_state* %34, i32 8000) #8, !dbg !6351
  %35 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6352
  %version54 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %35, i32 0, i32 16, !dbg !6354
  %36 = load i16, i16* %version54, align 8, !dbg !6354
  %conv55 = zext i16 %36 to i32, !dbg !6352
  %cmp56 = icmp eq i32 %conv55, 28816, !dbg !6355
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !6356

if.then58:                                        ; preds = %if.end47
  %37 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6357
  %call59 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %37, i16 zeroext 36, i16 zeroext 1877) #8, !dbg !6359
  br label %if.end66, !dbg !6360

if.else:                                          ; preds = %if.end47
  %38 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6361
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %38, i32 0, i32 1, !dbg !6364
  %tuner_is_baseband = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 2, !dbg !6365
  %39 = load i8, i8* %tuner_is_baseband, align 2, !dbg !6365
  %tobool60 = icmp ne i8 %39, 0, !dbg !6361
  br i1 %tobool60, label %if.then61, label %if.else63, !dbg !6366

if.then61:                                        ; preds = %if.else
  %40 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6367
  %call62 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %40, i16 zeroext 36, i16 zeroext 1877) #8, !dbg !6368
  br label %if.end65, !dbg !6368

if.else63:                                        ; preds = %if.else
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6369
  %call64 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %41, i16 zeroext 36, i16 zeroext 8021) #8, !dbg !6370
  br label %if.end65

if.end65:                                         ; preds = %if.else63, %if.then61
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then58
  %42 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6371
  call void @dib7000p_write_tab(%struct.dib7000p_state* %42, i16* getelementptr inbounds ([77 x i16], [77 x i16]* @dib7000p_defaults, i64 0, i64 0)) #8, !dbg !6372
  %43 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6373
  %version67 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %43, i32 0, i32 16, !dbg !6375
  %44 = load i16, i16* %version67, align 8, !dbg !6375
  %conv68 = zext i16 %44 to i32, !dbg !6373
  %cmp69 = icmp ne i32 %conv68, 28816, !dbg !6376
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !6377

if.then71:                                        ; preds = %if.end66
  %45 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6378
  %call72 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %45, i16 zeroext 901, i16 zeroext 6) #8, !dbg !6380
  %46 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6381
  %call73 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %46, i16 zeroext 902, i16 zeroext 3136) #8, !dbg !6382
  %47 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6383
  %call74 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %47, i16 zeroext 905, i16 zeroext 11406) #8, !dbg !6384
  br label %if.end75, !dbg !6385

if.end75:                                         ; preds = %if.then71, %if.end66
  %48 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !6386
  %call76 = call i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %48, i32 2) #8, !dbg !6387
  ret i32 0, !dbg !6388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_reset_stats(%struct.dvb_frontend* %demod) #0 !dbg !6389 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %c = alloca %struct.dtv_frontend_properties*, align 8
  %ucb = alloca i32, align 4
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !6390, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6392, metadata !DIExpression()), !dbg !6393
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !6394
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6395
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6395
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6394
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !6393
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %c, metadata !6396, metadata !DIExpression()), !dbg !6397
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !6398
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !6399
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %c, align 8, !dbg !6397
  call void @llvm.dbg.declare(metadata i32* %ucb, metadata !6400, metadata !DIExpression()), !dbg !6401
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6402
  %strength = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 42, !dbg !6403
  %5 = bitcast %struct.dtv_fe_stats* %strength to i8*, !dbg !6404
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 37, i1 false), !dbg !6404
  %6 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6405
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %6, i32 0, i32 43, !dbg !6406
  %7 = bitcast %struct.dtv_fe_stats* %cnr to i8*, !dbg !6407
  call void @llvm.memset.p0i8.i64(i8* align 1 %7, i8 0, i64 37, i1 false), !dbg !6407
  %8 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6408
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %8, i32 0, i32 46, !dbg !6409
  %9 = bitcast %struct.dtv_fe_stats* %post_bit_error to i8*, !dbg !6410
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 37, i1 false), !dbg !6410
  %10 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6411
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %10, i32 0, i32 47, !dbg !6412
  %11 = bitcast %struct.dtv_fe_stats* %post_bit_count to i8*, !dbg !6413
  call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 37, i1 false), !dbg !6413
  %12 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6414
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %12, i32 0, i32 48, !dbg !6415
  %13 = bitcast %struct.dtv_fe_stats* %block_error to i8*, !dbg !6416
  call void @llvm.memset.p0i8.i64(i8* align 2 %13, i8 0, i64 37, i1 false), !dbg !6416
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6417
  %strength1 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 42, !dbg !6418
  %len = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength1, i32 0, i32 0, !dbg !6419
  store i8 1, i8* %len, align 4, !dbg !6420
  %15 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6421
  %cnr2 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %15, i32 0, i32 43, !dbg !6422
  %len3 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr2, i32 0, i32 0, !dbg !6423
  store i8 1, i8* %len3, align 1, !dbg !6424
  %16 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6425
  %block_error4 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %16, i32 0, i32 48, !dbg !6426
  %len5 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error4, i32 0, i32 0, !dbg !6427
  store i8 1, i8* %len5, align 2, !dbg !6428
  %17 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6429
  %block_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %17, i32 0, i32 49, !dbg !6430
  %len6 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count, i32 0, i32 0, !dbg !6431
  store i8 1, i8* %len6, align 1, !dbg !6432
  %18 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6433
  %post_bit_error7 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %18, i32 0, i32 46, !dbg !6434
  %len8 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error7, i32 0, i32 0, !dbg !6435
  store i8 1, i8* %len8, align 4, !dbg !6436
  %19 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6437
  %post_bit_count9 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %19, i32 0, i32 47, !dbg !6438
  %len10 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count9, i32 0, i32 0, !dbg !6439
  store i8 1, i8* %len10, align 1, !dbg !6440
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6441
  %strength11 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 42, !dbg !6442
  %stat = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength11, i32 0, i32 1, !dbg !6443
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat, i64 0, i64 0, !dbg !6441
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 0, !dbg !6444
  store i8 1, i8* %scale, align 1, !dbg !6445
  %21 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6446
  %strength12 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %21, i32 0, i32 42, !dbg !6447
  %stat13 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength12, i32 0, i32 1, !dbg !6448
  %arrayidx14 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat13, i64 0, i64 0, !dbg !6446
  %22 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx14, i32 0, i32 1, !dbg !6449
  %uvalue = bitcast %union.anon.0* %22 to i64*, !dbg !6449
  store i64 0, i64* %uvalue, align 1, !dbg !6450
  %23 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6451
  %cnr15 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %23, i32 0, i32 43, !dbg !6452
  %stat16 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr15, i32 0, i32 1, !dbg !6453
  %arrayidx17 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat16, i64 0, i64 0, !dbg !6451
  %scale18 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx17, i32 0, i32 0, !dbg !6454
  store i8 0, i8* %scale18, align 1, !dbg !6455
  %24 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6456
  %block_error19 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %24, i32 0, i32 48, !dbg !6457
  %stat20 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error19, i32 0, i32 1, !dbg !6458
  %arrayidx21 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat20, i64 0, i64 0, !dbg !6456
  %scale22 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx21, i32 0, i32 0, !dbg !6459
  store i8 0, i8* %scale22, align 1, !dbg !6460
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6461
  %block_count23 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 49, !dbg !6462
  %stat24 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count23, i32 0, i32 1, !dbg !6463
  %arrayidx25 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat24, i64 0, i64 0, !dbg !6461
  %scale26 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx25, i32 0, i32 0, !dbg !6464
  store i8 0, i8* %scale26, align 1, !dbg !6465
  %26 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6466
  %post_bit_error27 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %26, i32 0, i32 46, !dbg !6467
  %stat28 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error27, i32 0, i32 1, !dbg !6468
  %arrayidx29 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat28, i64 0, i64 0, !dbg !6466
  %scale30 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx29, i32 0, i32 0, !dbg !6469
  store i8 0, i8* %scale30, align 1, !dbg !6470
  %27 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !6471
  %post_bit_count31 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %27, i32 0, i32 47, !dbg !6472
  %stat32 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count31, i32 0, i32 1, !dbg !6473
  %arrayidx33 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat32, i64 0, i64 0, !dbg !6471
  %scale34 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx33, i32 0, i32 0, !dbg !6474
  store i8 0, i8* %scale34, align 1, !dbg !6475
  %28 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !6476
  %call = call i32 @dib7000p_read_unc_blocks(%struct.dvb_frontend* %28, i32* %ucb) #8, !dbg !6477
  %29 = load i32, i32* %ucb, align 4, !dbg !6478
  %conv = zext i32 %29 to i64, !dbg !6478
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6479
  %old_ucb = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %30, i32 0, i32 24, !dbg !6480
  store i64 %conv, i64* %old_ucb, align 8, !dbg !6481
  %31 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6482
  %ber_jiffies_stats = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %31, i32 0, i32 26, !dbg !6483
  store i64 0, i64* %ber_jiffies_stats, align 8, !dbg !6484
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6485
  %per_jiffies_stats = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %32, i32 0, i32 25, !dbg !6486
  store i64 0, i64* %per_jiffies_stats, align 8, !dbg !6487
  ret void, !dbg !6488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_set_output_mode(%struct.dvb_frontend* %fe, i32 %mode) #0 !dbg !6489 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %mode.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %outreg = alloca i16, align 2
  %smo_mode = alloca i16, align 2
  %fifo_threshold = alloca i16, align 2
  %prefer_mpeg_mux_use = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6490, metadata !DIExpression()), !dbg !6491
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6492, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6494, metadata !DIExpression()), !dbg !6495
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6496
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6497
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6497
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6496
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !6495
  call void @llvm.dbg.declare(metadata i16* %outreg, metadata !6498, metadata !DIExpression()), !dbg !6499
  call void @llvm.dbg.declare(metadata i16* %smo_mode, metadata !6500, metadata !DIExpression()), !dbg !6501
  call void @llvm.dbg.declare(metadata i16* %fifo_threshold, metadata !6502, metadata !DIExpression()), !dbg !6503
  call void @llvm.dbg.declare(metadata i8* %prefer_mpeg_mux_use, metadata !6504, metadata !DIExpression()), !dbg !6505
  store i8 1, i8* %prefer_mpeg_mux_use, align 1, !dbg !6505
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6506, metadata !DIExpression()), !dbg !6507
  store i32 0, i32* %ret, align 4, !dbg !6507
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6508
  %call = call i32 @dib7090_host_bus_drive(%struct.dib7000p_state* %3, i8 zeroext 1) #8, !dbg !6509
  store i16 1792, i16* %fifo_threshold, align 2, !dbg !6510
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6511
  %call1 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %4, i16 zeroext 235) #8, !dbg !6512
  %conv = zext i16 %call1 to i32, !dbg !6512
  %and = and i32 %conv, 80, !dbg !6513
  %or = or i32 %and, 2, !dbg !6514
  %conv2 = trunc i32 %or to i16, !dbg !6515
  store i16 %conv2, i16* %smo_mode, align 2, !dbg !6516
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6517
  %call3 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %5, i16 zeroext 1286) #8, !dbg !6518
  %conv4 = zext i16 %call3 to i32, !dbg !6518
  %and5 = and i32 %conv4, -1475, !dbg !6519
  %conv6 = trunc i32 %and5 to i16, !dbg !6518
  store i16 %conv6, i16* %outreg, align 2, !dbg !6520
  %6 = load i32, i32* %mode.addr, align 4, !dbg !6521
  switch i32 %6, label %sw.epilog [
    i32 0, label %sw.bb
    i32 7, label %sw.bb7
    i32 1, label %sw.bb21
    i32 2, label %sw.bb40
    i32 5, label %sw.bb50
    i32 4, label %sw.bb63
    i32 6, label %sw.bb70
  ], !dbg !6522

sw.bb:                                            ; preds = %entry
  store i16 0, i16* %outreg, align 2, !dbg !6523
  br label %sw.epilog, !dbg !6525

sw.bb7:                                           ; preds = %entry
  %7 = load i8, i8* %prefer_mpeg_mux_use, align 1, !dbg !6526
  %tobool = icmp ne i8 %7, 0, !dbg !6526
  br i1 %tobool, label %if.then, label %if.else, !dbg !6528

if.then:                                          ; preds = %sw.bb7
  br label %do.body, !dbg !6529

do.body:                                          ; preds = %if.then
  %8 = load i32, i32* @debug, align 4, !dbg !6531
  %tobool8 = icmp ne i32 %8, 0, !dbg !6531
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !6534

if.then9:                                         ; preds = %do.body
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6531
  br label %if.end, !dbg !6531

if.end:                                           ; preds = %if.then9, %do.body
  br label %do.end, !dbg !6534

do.end:                                           ; preds = %if.end
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6535
  call void @dib7090_configMpegMux(%struct.dib7000p_state* %9, i16 zeroext 3, i16 zeroext 1, i16 zeroext 1) #8, !dbg !6536
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6537
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %10, i32 6) #8, !dbg !6538
  br label %if.end20, !dbg !6539

if.else:                                          ; preds = %sw.bb7
  br label %do.body11, !dbg !6540

do.body11:                                        ; preds = %if.else
  %11 = load i32, i32* @debug, align 4, !dbg !6542
  %tobool12 = icmp ne i32 %11, 0, !dbg !6542
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6545

if.then13:                                        ; preds = %do.body11
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6542
  br label %if.end15, !dbg !6542

if.end15:                                         ; preds = %if.then13, %do.body11
  br label %do.end16, !dbg !6545

do.end16:                                         ; preds = %if.end15
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6546
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %12, i32 4) #8, !dbg !6547
  %13 = load i16, i16* %outreg, align 2, !dbg !6548
  %conv17 = zext i16 %13 to i32, !dbg !6548
  %or18 = or i32 %conv17, 128, !dbg !6548
  %conv19 = trunc i32 %or18 to i16, !dbg !6548
  store i16 %conv19, i16* %outreg, align 2, !dbg !6548
  br label %if.end20

if.end20:                                         ; preds = %do.end16, %do.end
  br label %sw.epilog, !dbg !6549

sw.bb21:                                          ; preds = %entry
  %14 = load i8, i8* %prefer_mpeg_mux_use, align 1, !dbg !6550
  %tobool22 = icmp ne i8 %14, 0, !dbg !6550
  br i1 %tobool22, label %if.then23, label %if.else30, !dbg !6552

if.then23:                                        ; preds = %sw.bb21
  br label %do.body24, !dbg !6553

do.body24:                                        ; preds = %if.then23
  %15 = load i32, i32* @debug, align 4, !dbg !6555
  %tobool25 = icmp ne i32 %15, 0, !dbg !6555
  br i1 %tobool25, label %if.then26, label %if.end28, !dbg !6558

if.then26:                                        ; preds = %do.body24
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6555
  br label %if.end28, !dbg !6555

if.end28:                                         ; preds = %if.then26, %do.body24
  br label %do.end29, !dbg !6558

do.end29:                                         ; preds = %if.end28
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6559
  call void @dib7090_configMpegMux(%struct.dib7000p_state* %16, i16 zeroext 2, i16 zeroext 0, i16 zeroext 0) #8, !dbg !6560
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6561
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %17, i32 6) #8, !dbg !6562
  br label %if.end39, !dbg !6563

if.else30:                                        ; preds = %sw.bb21
  br label %do.body31, !dbg !6564

do.body31:                                        ; preds = %if.else30
  %18 = load i32, i32* @debug, align 4, !dbg !6566
  %tobool32 = icmp ne i32 %18, 0, !dbg !6566
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !6569

if.then33:                                        ; preds = %do.body31
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6566
  br label %if.end35, !dbg !6566

if.end35:                                         ; preds = %if.then33, %do.body31
  br label %do.end36, !dbg !6569

do.end36:                                         ; preds = %if.end35
  %19 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6570
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %19, i32 4) #8, !dbg !6571
  %20 = load i16, i16* %outreg, align 2, !dbg !6572
  %conv37 = zext i16 %20 to i32, !dbg !6572
  %conv38 = trunc i32 %conv37 to i16, !dbg !6572
  store i16 %conv38, i16* %outreg, align 2, !dbg !6572
  br label %if.end39

if.end39:                                         ; preds = %do.end36, %do.end29
  br label %sw.epilog, !dbg !6573

sw.bb40:                                          ; preds = %entry
  br label %do.body41, !dbg !6574

do.body41:                                        ; preds = %sw.bb40
  %21 = load i32, i32* @debug, align 4, !dbg !6575
  %tobool42 = icmp ne i32 %21, 0, !dbg !6575
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !6578

if.then43:                                        ; preds = %do.body41
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6575
  br label %if.end45, !dbg !6575

if.end45:                                         ; preds = %if.then43, %do.body41
  br label %do.end46, !dbg !6578

do.end46:                                         ; preds = %if.end45
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6579
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %22, i32 4) #8, !dbg !6580
  %23 = load i16, i16* %outreg, align 2, !dbg !6581
  %conv47 = zext i16 %23 to i32, !dbg !6581
  %or48 = or i32 %conv47, 64, !dbg !6581
  %conv49 = trunc i32 %or48 to i16, !dbg !6581
  store i16 %conv49, i16* %outreg, align 2, !dbg !6581
  br label %sw.epilog, !dbg !6582

sw.bb50:                                          ; preds = %entry
  br label %do.body51, !dbg !6583

do.body51:                                        ; preds = %sw.bb50
  %24 = load i32, i32* @debug, align 4, !dbg !6584
  %tobool52 = icmp ne i32 %24, 0, !dbg !6584
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !6587

if.then53:                                        ; preds = %do.body51
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6584
  br label %if.end55, !dbg !6584

if.end55:                                         ; preds = %if.then53, %do.body51
  br label %do.end56, !dbg !6587

do.end56:                                         ; preds = %if.end55
  %25 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6588
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %25, i32 4) #8, !dbg !6589
  %26 = load i16, i16* %outreg, align 2, !dbg !6590
  %conv57 = zext i16 %26 to i32, !dbg !6590
  %or58 = or i32 %conv57, 320, !dbg !6590
  %conv59 = trunc i32 %or58 to i16, !dbg !6590
  store i16 %conv59, i16* %outreg, align 2, !dbg !6590
  %27 = load i16, i16* %smo_mode, align 2, !dbg !6591
  %conv60 = zext i16 %27 to i32, !dbg !6591
  %or61 = or i32 %conv60, 6, !dbg !6591
  %conv62 = trunc i32 %or61 to i16, !dbg !6591
  store i16 %conv62, i16* %smo_mode, align 2, !dbg !6591
  store i16 512, i16* %fifo_threshold, align 2, !dbg !6592
  br label %sw.epilog, !dbg !6593

sw.bb63:                                          ; preds = %entry
  br label %do.body64, !dbg !6594

do.body64:                                        ; preds = %sw.bb63
  %28 = load i32, i32* @debug, align 4, !dbg !6595
  %tobool65 = icmp ne i32 %28, 0, !dbg !6595
  br i1 %tobool65, label %if.then66, label %if.end68, !dbg !6598

if.then66:                                        ; preds = %do.body64
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6595
  br label %if.end68, !dbg !6595

if.end68:                                         ; preds = %if.then66, %do.body64
  br label %do.end69, !dbg !6598

do.end69:                                         ; preds = %if.end68
  %29 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6599
  call void @dib7090_setDibTxMux(%struct.dib7000p_state* %29, i32 2) #8, !dbg !6600
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6601
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %30, i32 5) #8, !dbg !6602
  br label %sw.epilog, !dbg !6603

sw.bb70:                                          ; preds = %entry
  br label %do.body71, !dbg !6604

do.body71:                                        ; preds = %sw.bb70
  %31 = load i32, i32* @debug, align 4, !dbg !6605
  %tobool72 = icmp ne i32 %31, 0, !dbg !6605
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !6608

if.then73:                                        ; preds = %do.body71
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7090_set_output_mode, i64 0, i64 0)) #9, !dbg !6605
  br label %if.end75, !dbg !6605

if.end75:                                         ; preds = %if.then73, %do.body71
  br label %do.end76, !dbg !6608

do.end76:                                         ; preds = %if.end75
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6609
  call void @dib7090_setDibTxMux(%struct.dib7000p_state* %32, i32 3) #8, !dbg !6610
  %33 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6611
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %33, i32 5) #8, !dbg !6612
  br label %sw.epilog, !dbg !6613

sw.epilog:                                        ; preds = %entry, %do.end76, %do.end69, %do.end56, %do.end46, %if.end39, %if.end20, %sw.bb
  %34 = load i32, i32* %mode.addr, align 4, !dbg !6614
  %cmp = icmp ne i32 %34, 0, !dbg !6616
  br i1 %cmp, label %if.then78, label %if.end82, !dbg !6617

if.then78:                                        ; preds = %sw.epilog
  %35 = load i16, i16* %outreg, align 2, !dbg !6618
  %conv79 = zext i16 %35 to i32, !dbg !6618
  %or80 = or i32 %conv79, 1024, !dbg !6618
  %conv81 = trunc i32 %or80 to i16, !dbg !6618
  store i16 %conv81, i16* %outreg, align 2, !dbg !6618
  br label %if.end82, !dbg !6619

if.end82:                                         ; preds = %if.then78, %sw.epilog
  %36 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6620
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %36, i32 0, i32 1, !dbg !6622
  %output_mpeg2_in_188_bytes = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 0, !dbg !6623
  %37 = load i8, i8* %output_mpeg2_in_188_bytes, align 8, !dbg !6623
  %tobool83 = icmp ne i8 %37, 0, !dbg !6620
  br i1 %tobool83, label %if.then84, label %if.end88, !dbg !6624

if.then84:                                        ; preds = %if.end82
  %38 = load i16, i16* %smo_mode, align 2, !dbg !6625
  %conv85 = zext i16 %38 to i32, !dbg !6625
  %or86 = or i32 %conv85, 32, !dbg !6625
  %conv87 = trunc i32 %or86 to i16, !dbg !6625
  store i16 %conv87, i16* %smo_mode, align 2, !dbg !6625
  br label %if.end88, !dbg !6626

if.end88:                                         ; preds = %if.then84, %if.end82
  %39 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6627
  %40 = load i16, i16* %smo_mode, align 2, !dbg !6628
  %call89 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %39, i16 zeroext 235, i16 zeroext %40) #8, !dbg !6629
  %41 = load i32, i32* %ret, align 4, !dbg !6630
  %or90 = or i32 %41, %call89, !dbg !6630
  store i32 %or90, i32* %ret, align 4, !dbg !6630
  %42 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6631
  %43 = load i16, i16* %fifo_threshold, align 2, !dbg !6632
  %call91 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %42, i16 zeroext 236, i16 zeroext %43) #8, !dbg !6633
  %44 = load i32, i32* %ret, align 4, !dbg !6634
  %or92 = or i32 %44, %call91, !dbg !6634
  store i32 %or92, i32* %ret, align 4, !dbg !6634
  %45 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6635
  %46 = load i16, i16* %outreg, align 2, !dbg !6636
  %call93 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %45, i16 zeroext 1286, i16 zeroext %46) #8, !dbg !6637
  %47 = load i32, i32* %ret, align 4, !dbg !6638
  %or94 = or i32 %47, %call93, !dbg !6638
  store i32 %or94, i32* %ret, align 4, !dbg !6638
  %48 = load i32, i32* %ret, align 4, !dbg !6639
  ret i32 %48, !dbg !6640
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_set_diversity_in(%struct.dvb_frontend* %fe, i32 %onoff) #0 !dbg !6641 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %onoff.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %reg_1287 = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6642, metadata !DIExpression()), !dbg !6643
  store i32 %onoff, i32* %onoff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onoff.addr, metadata !6644, metadata !DIExpression()), !dbg !6645
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6646, metadata !DIExpression()), !dbg !6647
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6648
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6649
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6649
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6648
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !6647
  call void @llvm.dbg.declare(metadata i16* %reg_1287, metadata !6650, metadata !DIExpression()), !dbg !6651
  %3 = load i32, i32* %onoff.addr, align 4, !dbg !6652
  switch i32 %3, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 2, label %sw.bb10
  ], !dbg !6653

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !6654

do.body:                                          ; preds = %sw.bb
  %4 = load i32, i32* @debug, align 4, !dbg !6656
  %tobool = icmp ne i32 %4, 0, !dbg !6656
  br i1 %tobool, label %if.then, label %if.end, !dbg !6659

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7090_set_diversity_in, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7090_set_diversity_in, i64 0, i64 0)) #9, !dbg !6656
  br label %if.end, !dbg !6656

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !6659

do.end:                                           ; preds = %if.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6660
  %call1 = call i32 @dib7090_cfg_DibRx(%struct.dib7000p_state* %5, i32 8, i32 5, i32 0, i32 0, i32 0, i32 8, i32 0) #8, !dbg !6661
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6662
  %call2 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %6, i16 zeroext 1287) #8, !dbg !6663
  store i16 %call2, i16* %reg_1287, align 2, !dbg !6664
  %7 = load i16, i16* %reg_1287, align 2, !dbg !6665
  %conv = zext i16 %7 to i32, !dbg !6665
  %and = and i32 %conv, 1, !dbg !6667
  %cmp = icmp eq i32 %and, 1, !dbg !6668
  br i1 %cmp, label %if.then4, label %if.end9, !dbg !6669

if.then4:                                         ; preds = %do.end
  %8 = load i16, i16* %reg_1287, align 2, !dbg !6670
  %conv5 = zext i16 %8 to i32, !dbg !6670
  %and6 = and i32 %conv5, -2, !dbg !6670
  %conv7 = trunc i32 %and6 to i16, !dbg !6670
  store i16 %conv7, i16* %reg_1287, align 2, !dbg !6670
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6672
  %10 = load i16, i16* %reg_1287, align 2, !dbg !6673
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %9, i16 zeroext 1287, i16 zeroext %10) #8, !dbg !6674
  br label %if.end9, !dbg !6675

if.end9:                                          ; preds = %if.then4, %do.end
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6676
  %input_mode_mpeg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %11, i32 0, i32 23, !dbg !6677
  store i8 1, i8* %input_mode_mpeg, align 8, !dbg !6678
  br label %sw.epilog, !dbg !6679

sw.bb10:                                          ; preds = %entry, %entry
  br label %do.body11, !dbg !6680

do.body11:                                        ; preds = %sw.bb10
  %12 = load i32, i32* @debug, align 4, !dbg !6681
  %tobool12 = icmp ne i32 %12, 0, !dbg !6681
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !6684

if.then13:                                        ; preds = %do.body11
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7090_set_diversity_in, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7090_set_diversity_in, i64 0, i64 0)) #9, !dbg !6681
  br label %if.end15, !dbg !6681

if.end15:                                         ; preds = %if.then13, %do.body11
  br label %do.end16, !dbg !6684

do.end16:                                         ; preds = %if.end15
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6685
  %call17 = call i32 @dib7090_cfg_DibRx(%struct.dib7000p_state* %13, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0) #8, !dbg !6686
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6687
  %input_mode_mpeg18 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %14, i32 0, i32 23, !dbg !6688
  store i8 0, i8* %input_mode_mpeg18, align 8, !dbg !6689
  br label %sw.epilog, !dbg !6690

sw.epilog:                                        ; preds = %entry, %do.end16, %if.end9
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6691
  %demod = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 0, !dbg !6692
  %16 = load i32, i32* %onoff.addr, align 4, !dbg !6693
  %call19 = call i32 @dib7000p_set_diversity_in(%struct.dvb_frontend* %demod, i32 %16) #8, !dbg !6694
  ret i32 0, !dbg !6695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_release(%struct.dvb_frontend* %demod) #0 !dbg !6696 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %st = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !6697, metadata !DIExpression()), !dbg !6698
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st, metadata !6699, metadata !DIExpression()), !dbg !6700
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !6701
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6702
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6702
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6701
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %st, align 8, !dbg !6700
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !6703
  %i2c_master = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 4, !dbg !6704
  call void @dibx000_exit_i2c_master(%struct.dibx000_i2c_master* %i2c_master) #8, !dbg !6705
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !6706
  %dib7090_tuner_adap = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %4, i32 0, i32 18, !dbg !6707
  call void @i2c_del_adapter(%struct.i2c_adapter* %dib7090_tuner_adap) #8, !dbg !6708
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st, align 8, !dbg !6709
  %6 = bitcast %struct.dib7000p_state* %5 to i8*, !dbg !6709
  call void @kfree(i8* %6) #8, !dbg !6710
  ret void, !dbg !6711
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_wakeup(%struct.dvb_frontend* %demod) #0 !dbg !6712 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !6713, metadata !DIExpression()), !dbg !6714
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6715, metadata !DIExpression()), !dbg !6716
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !6717
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6718
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6718
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6717
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !6716
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6719
  %call = call i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %3, i32 0) #8, !dbg !6720
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6721
  call void @dib7000p_set_adc_state(%struct.dib7000p_state* %4, i32 0) #8, !dbg !6722
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6723
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 16, !dbg !6725
  %6 = load i16, i16* %version, align 8, !dbg !6725
  %conv = zext i16 %6 to i32, !dbg !6723
  %cmp = icmp eq i32 %conv, 28816, !dbg !6726
  br i1 %cmp, label %if.then, label %if.end, !dbg !6727

if.then:                                          ; preds = %entry
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6728
  %call2 = call i32 @dib7000p_sad_calib(%struct.dib7000p_state* %7) #8, !dbg !6729
  br label %if.end, !dbg !6729

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !6730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_sleep(%struct.dvb_frontend* %demod) #0 !dbg !6731 {
entry:
  %retval = alloca i32, align 4
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !6732, metadata !DIExpression()), !dbg !6733
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6734, metadata !DIExpression()), !dbg !6735
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !6736
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6737
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6737
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6736
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !6735
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6738
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 16, !dbg !6740
  %4 = load i16, i16* %version, align 8, !dbg !6740
  %conv = zext i16 %4 to i32, !dbg !6738
  %cmp = icmp eq i32 %conv, 28816, !dbg !6741
  br i1 %cmp, label %if.then, label %if.end, !dbg !6742

if.then:                                          ; preds = %entry
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6743
  %call = call i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %5, i32 2) #8, !dbg !6744
  store i32 %call, i32* %retval, align 4, !dbg !6745
  br label %return, !dbg !6745

if.end:                                           ; preds = %entry
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6746
  %call2 = call i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %6, i32 0) #8, !dbg !6747
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6748
  %call3 = call i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %7, i32 2) #8, !dbg !6749
  %or = or i32 %call2, %call3, !dbg !6750
  store i32 %or, i32* %retval, align 4, !dbg !6751
  br label %return, !dbg !6751

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !6752
  ret i32 %8, !dbg !6752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_frontend(%struct.dvb_frontend* %fe) #0 !dbg !6753 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %fep = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %time = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %found = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6754, metadata !DIExpression()), !dbg !6755
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %fep, metadata !6756, metadata !DIExpression()), !dbg !6757
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6758
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !6759
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %fep, align 8, !dbg !6757
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6760, metadata !DIExpression()), !dbg !6761
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6762
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !6763
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !6763
  %3 = bitcast i8* %2 to %struct.dib7000p_state*, !dbg !6762
  store %struct.dib7000p_state* %3, %struct.dib7000p_state** %state, align 8, !dbg !6761
  call void @llvm.dbg.declare(metadata i32* %time, metadata !6764, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6766, metadata !DIExpression()), !dbg !6767
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6768
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %4, i32 0, i32 16, !dbg !6770
  %5 = load i16, i16* %version, align 8, !dbg !6770
  %conv = zext i16 %5 to i32, !dbg !6768
  %cmp = icmp eq i32 %conv, 28816, !dbg !6771
  br i1 %cmp, label %if.then, label %if.else, !dbg !6772

if.then:                                          ; preds = %entry
  %6 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6773
  %call = call i32 @dib7090_set_diversity_in(%struct.dvb_frontend* %6, i32 0) #8, !dbg !6774
  br label %if.end, !dbg !6774

if.else:                                          ; preds = %entry
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6775
  %call2 = call i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %7, i32 0) #8, !dbg !6776
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* @buggy_sfn_workaround, align 4, !dbg !6777
  %conv3 = trunc i32 %8 to i8, !dbg !6777
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6778
  %sfn_workaround_active = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 15, !dbg !6779
  %bf.load = load i8, i8* %sfn_workaround_active, align 2, !dbg !6780
  %bf.value = and i8 %conv3, 1, !dbg !6780
  %bf.clear = and i8 %bf.load, -2, !dbg !6780
  %bf.set = or i8 %bf.clear, %bf.value, !dbg !6780
  store i8 %bf.set, i8* %sfn_workaround_active, align 2, !dbg !6780
  %10 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6781
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %10, i32 0, i32 1, !dbg !6783
  %tuner_ops = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 30, !dbg !6784
  %set_params = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops, i32 0, i32 6, !dbg !6785
  %11 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %set_params, align 8, !dbg !6785
  %tobool = icmp ne i32 (%struct.dvb_frontend*)* %11, null, !dbg !6781
  br i1 %tobool, label %if.then4, label %if.end9, !dbg !6786

if.then4:                                         ; preds = %if.end
  %12 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6787
  %ops5 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %12, i32 0, i32 1, !dbg !6788
  %tuner_ops6 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops5, i32 0, i32 30, !dbg !6789
  %set_params7 = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops6, i32 0, i32 6, !dbg !6790
  %13 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %set_params7, align 8, !dbg !6790
  %14 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6791
  %call8 = call i32 %13(%struct.dvb_frontend* %14) #8, !dbg !6787
  br label %if.end9, !dbg !6787

if.end9:                                          ; preds = %if.then4, %if.end
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6792
  %agc_state = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 12, !dbg !6793
  store i8 0, i8* %agc_state, align 8, !dbg !6794
  br label %do.body, !dbg !6795

do.body:                                          ; preds = %do.cond, %if.end9
  %16 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6796
  %call10 = call i32 @dib7000p_agc_startup(%struct.dvb_frontend* %16) #8, !dbg !6798
  store i32 %call10, i32* %time, align 4, !dbg !6799
  %17 = load i32, i32* %time, align 4, !dbg !6800
  %cmp11 = icmp ne i32 %17, -1, !dbg !6802
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !6803

if.then13:                                        ; preds = %do.body
  %18 = load i32, i32* %time, align 4, !dbg !6804
  call void @msleep(i32 %18) #8, !dbg !6805
  br label %if.end14, !dbg !6805

if.end14:                                         ; preds = %if.then13, %do.body
  br label %do.cond, !dbg !6806

do.cond:                                          ; preds = %if.end14
  %19 = load i32, i32* %time, align 4, !dbg !6807
  %cmp15 = icmp ne i32 %19, -1, !dbg !6808
  br i1 %cmp15, label %do.body, label %do.end, !dbg !6806, !llvm.loop !6809

do.end:                                           ; preds = %do.cond
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep, align 8, !dbg !6811
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 6, !dbg !6813
  %21 = load i32, i32* %transmission_mode, align 4, !dbg !6813
  %cmp17 = icmp eq i32 %21, 2, !dbg !6814
  br i1 %cmp17, label %if.then27, label %lor.lhs.false, !dbg !6815

lor.lhs.false:                                    ; preds = %do.end
  %22 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep, align 8, !dbg !6816
  %guard_interval = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %22, i32 0, i32 8, !dbg !6817
  %23 = load i32, i32* %guard_interval, align 4, !dbg !6817
  %cmp19 = icmp eq i32 %23, 4, !dbg !6818
  br i1 %cmp19, label %if.then27, label %lor.lhs.false21, !dbg !6819

lor.lhs.false21:                                  ; preds = %lor.lhs.false
  %24 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep, align 8, !dbg !6820
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %24, i32 0, i32 1, !dbg !6821
  %25 = load i32, i32* %modulation, align 4, !dbg !6821
  %cmp22 = icmp eq i32 %25, 6, !dbg !6822
  br i1 %cmp22, label %if.then27, label %lor.lhs.false24, !dbg !6823

lor.lhs.false24:                                  ; preds = %lor.lhs.false21
  %26 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep, align 8, !dbg !6824
  %code_rate_HP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %26, i32 0, i32 11, !dbg !6825
  %27 = load i32, i32* %code_rate_HP, align 4, !dbg !6825
  %cmp25 = icmp eq i32 %27, 9, !dbg !6826
  br i1 %cmp25, label %if.then27, label %if.end51, !dbg !6827

if.then27:                                        ; preds = %lor.lhs.false24, %lor.lhs.false21, %lor.lhs.false, %do.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6828, metadata !DIExpression()), !dbg !6830
  store i32 800, i32* %i, align 4, !dbg !6830
  call void @llvm.dbg.declare(metadata i32* %found, metadata !6831, metadata !DIExpression()), !dbg !6832
  %28 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6833
  %call28 = call i32 @dib7000p_autosearch_start(%struct.dvb_frontend* %28) #8, !dbg !6834
  br label %do.body29, !dbg !6835

do.body29:                                        ; preds = %land.end, %if.then27
  call void @msleep(i32 1) #8, !dbg !6836
  %29 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6838
  %call30 = call i32 @dib7000p_autosearch_is_irq(%struct.dvb_frontend* %29) #8, !dbg !6839
  store i32 %call30, i32* %found, align 4, !dbg !6840
  br label %do.cond31, !dbg !6841

do.cond31:                                        ; preds = %do.body29
  %30 = load i32, i32* %found, align 4, !dbg !6842
  %cmp32 = icmp eq i32 %30, 0, !dbg !6843
  br i1 %cmp32, label %land.rhs, label %land.end, !dbg !6844

land.rhs:                                         ; preds = %do.cond31
  %31 = load i32, i32* %i, align 4, !dbg !6845
  %dec = add i32 %31, -1, !dbg !6845
  store i32 %dec, i32* %i, align 4, !dbg !6845
  %tobool34 = icmp ne i32 %31, 0, !dbg !6844
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond31
  %32 = phi i1 [ false, %do.cond31 ], [ %tobool34, %land.rhs ], !dbg !6846
  br i1 %32, label %do.body29, label %do.end35, !dbg !6841, !llvm.loop !6847

do.end35:                                         ; preds = %land.end
  br label %do.body36, !dbg !6849

do.body36:                                        ; preds = %do.end35
  %33 = load i32, i32* @debug, align 4, !dbg !6850
  %tobool37 = icmp ne i32 %33, 0, !dbg !6850
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !6853

if.then38:                                        ; preds = %do.body36
  %34 = load i32, i32* %found, align 4, !dbg !6850
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7000p_set_frontend, i64 0, i64 0), i32 %34) #9, !dbg !6850
  br label %if.end40, !dbg !6850

if.end40:                                         ; preds = %if.then38, %do.body36
  br label %do.end42, !dbg !6853

do.end42:                                         ; preds = %if.end40
  %35 = load i32, i32* %found, align 4, !dbg !6854
  %cmp43 = icmp eq i32 %35, 0, !dbg !6856
  br i1 %cmp43, label %if.then48, label %lor.lhs.false45, !dbg !6857

lor.lhs.false45:                                  ; preds = %do.end42
  %36 = load i32, i32* %found, align 4, !dbg !6858
  %cmp46 = icmp eq i32 %36, 1, !dbg !6859
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !6860

if.then48:                                        ; preds = %lor.lhs.false45, %do.end42
  store i32 0, i32* %retval, align 4, !dbg !6861
  br label %return, !dbg !6861

if.end49:                                         ; preds = %lor.lhs.false45
  %37 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6862
  %38 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep, align 8, !dbg !6863
  %call50 = call i32 @dib7000p_get_frontend(%struct.dvb_frontend* %37, %struct.dtv_frontend_properties* %38) #8, !dbg !6864
  br label %if.end51, !dbg !6865

if.end51:                                         ; preds = %if.end49, %lor.lhs.false24
  %39 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6866
  %call52 = call i32 @dib7000p_tune(%struct.dvb_frontend* %39) #8, !dbg !6867
  store i32 %call52, i32* %ret, align 4, !dbg !6868
  %40 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6869
  %version53 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %40, i32 0, i32 16, !dbg !6871
  %41 = load i16, i16* %version53, align 8, !dbg !6871
  %conv54 = zext i16 %41 to i32, !dbg !6869
  %cmp55 = icmp eq i32 %conv54, 28816, !dbg !6872
  br i1 %cmp55, label %if.then57, label %if.else68, !dbg !6873

if.then57:                                        ; preds = %if.end51
  %42 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6874
  %43 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6876
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %43, i32 0, i32 1, !dbg !6877
  %output_mode = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 14, !dbg !6878
  %44 = load i8, i8* %output_mode, align 8, !dbg !6878
  %conv58 = zext i8 %44 to i32, !dbg !6876
  %call59 = call i32 @dib7090_set_output_mode(%struct.dvb_frontend* %42, i32 %conv58) #8, !dbg !6879
  %45 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6880
  %cfg60 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %45, i32 0, i32 1, !dbg !6882
  %enMpegOutput = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg60, i32 0, i32 18, !dbg !6883
  %bf.load61 = load i8, i8* %enMpegOutput, align 1, !dbg !6883
  %bf.clear62 = and i8 %bf.load61, 1, !dbg !6883
  %conv63 = zext i8 %bf.clear62 to i32, !dbg !6880
  %cmp64 = icmp eq i32 %conv63, 0, !dbg !6884
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !6885

if.then66:                                        ; preds = %if.then57
  %46 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6886
  call void @dib7090_setDibTxMux(%struct.dib7000p_state* %46, i32 1) #8, !dbg !6888
  %47 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6889
  call void @dib7090_setHostBusMux(%struct.dib7000p_state* %47, i32 5) #8, !dbg !6890
  br label %if.end67, !dbg !6891

if.end67:                                         ; preds = %if.then66, %if.then57
  br label %if.end73, !dbg !6892

if.else68:                                        ; preds = %if.end51
  %48 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6893
  %49 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6894
  %cfg69 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %49, i32 0, i32 1, !dbg !6895
  %output_mode70 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg69, i32 0, i32 14, !dbg !6896
  %50 = load i8, i8* %output_mode70, align 8, !dbg !6896
  %conv71 = zext i8 %50 to i32, !dbg !6894
  %call72 = call i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %48, i32 %conv71) #8, !dbg !6897
  br label %if.end73

if.end73:                                         ; preds = %if.else68, %if.end67
  %51 = load i32, i32* %ret, align 4, !dbg !6898
  store i32 %51, i32* %retval, align 4, !dbg !6899
  br label %return, !dbg !6899

return:                                           ; preds = %if.end73, %if.then48
  %52 = load i32, i32* %retval, align 4, !dbg !6900
  ret i32 %52, !dbg !6900
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_fe_get_tune_settings(%struct.dvb_frontend* %fe, %struct.dvb_frontend_tune_settings* %tune) #0 !dbg !6901 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %tune.addr = alloca %struct.dvb_frontend_tune_settings*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  store %struct.dvb_frontend_tune_settings* %tune, %struct.dvb_frontend_tune_settings** %tune.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend_tune_settings** %tune.addr, metadata !6904, metadata !DIExpression()), !dbg !6905
  %0 = load %struct.dvb_frontend_tune_settings*, %struct.dvb_frontend_tune_settings** %tune.addr, align 8, !dbg !6906
  %min_delay_ms = getelementptr inbounds %struct.dvb_frontend_tune_settings, %struct.dvb_frontend_tune_settings* %0, i32 0, i32 0, !dbg !6907
  store i32 1000, i32* %min_delay_ms, align 4, !dbg !6908
  ret i32 0, !dbg !6909
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_frontend(%struct.dvb_frontend* %fe, %struct.dtv_frontend_properties* %fep) #0 !dbg !6910 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %fep.addr = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %tps = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6911, metadata !DIExpression()), !dbg !6912
  store %struct.dtv_frontend_properties* %fep, %struct.dtv_frontend_properties** %fep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %fep.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !6915, metadata !DIExpression()), !dbg !6916
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6917
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6918
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6918
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !6917
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !6916
  call void @llvm.dbg.declare(metadata i16* %tps, metadata !6919, metadata !DIExpression()), !dbg !6920
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6921
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 463) #8, !dbg !6922
  store i16 %call, i16* %tps, align 2, !dbg !6920
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6923
  %inversion = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 4, !dbg !6924
  store i32 2, i32* %inversion, align 4, !dbg !6925
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !6926
  %current_bandwidth = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 7, !dbg !6926
  %6 = load i32, i32* %current_bandwidth, align 4, !dbg !6926
  %mul = mul i32 %6, 1000, !dbg !6926
  %7 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6927
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %7, i32 0, i32 7, !dbg !6928
  store i32 %mul, i32* %bandwidth_hz, align 4, !dbg !6929
  %8 = load i16, i16* %tps, align 2, !dbg !6930
  %conv = zext i16 %8 to i32, !dbg !6930
  %shr = ashr i32 %conv, 8, !dbg !6931
  %and = and i32 %shr, 3, !dbg !6932
  switch i32 %and, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !6933

sw.bb:                                            ; preds = %entry
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6934
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 6, !dbg !6936
  store i32 0, i32* %transmission_mode, align 4, !dbg !6937
  br label %sw.epilog, !dbg !6938

sw.bb1:                                           ; preds = %entry
  %10 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6939
  %transmission_mode2 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %10, i32 0, i32 6, !dbg !6940
  store i32 1, i32* %transmission_mode2, align 4, !dbg !6941
  br label %sw.epilog, !dbg !6942

sw.epilog:                                        ; preds = %entry, %sw.bb1, %sw.bb
  %11 = load i16, i16* %tps, align 2, !dbg !6943
  %conv3 = zext i16 %11 to i32, !dbg !6943
  %and4 = and i32 %conv3, 3, !dbg !6944
  switch i32 %and4, label %sw.epilog12 [
    i32 0, label %sw.bb5
    i32 1, label %sw.bb6
    i32 2, label %sw.bb8
    i32 3, label %sw.bb10
  ], !dbg !6945

sw.bb5:                                           ; preds = %sw.epilog
  %12 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6946
  %guard_interval = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %12, i32 0, i32 8, !dbg !6948
  store i32 0, i32* %guard_interval, align 4, !dbg !6949
  br label %sw.epilog12, !dbg !6950

sw.bb6:                                           ; preds = %sw.epilog
  %13 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6951
  %guard_interval7 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %13, i32 0, i32 8, !dbg !6952
  store i32 1, i32* %guard_interval7, align 4, !dbg !6953
  br label %sw.epilog12, !dbg !6954

sw.bb8:                                           ; preds = %sw.epilog
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6955
  %guard_interval9 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 8, !dbg !6956
  store i32 2, i32* %guard_interval9, align 4, !dbg !6957
  br label %sw.epilog12, !dbg !6958

sw.bb10:                                          ; preds = %sw.epilog
  %15 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6959
  %guard_interval11 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %15, i32 0, i32 8, !dbg !6960
  store i32 3, i32* %guard_interval11, align 4, !dbg !6961
  br label %sw.epilog12, !dbg !6962

sw.epilog12:                                      ; preds = %sw.epilog, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb5
  %16 = load i16, i16* %tps, align 2, !dbg !6963
  %conv13 = zext i16 %16 to i32, !dbg !6963
  %shr14 = ashr i32 %conv13, 14, !dbg !6964
  %and15 = and i32 %shr14, 3, !dbg !6965
  switch i32 %and15, label %sw.default [
    i32 0, label %sw.bb16
    i32 1, label %sw.bb17
    i32 2, label %sw.bb19
  ], !dbg !6966

sw.bb16:                                          ; preds = %sw.epilog12
  %17 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6967
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %17, i32 0, i32 1, !dbg !6969
  store i32 0, i32* %modulation, align 4, !dbg !6970
  br label %sw.epilog21, !dbg !6971

sw.bb17:                                          ; preds = %sw.epilog12
  %18 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6972
  %modulation18 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %18, i32 0, i32 1, !dbg !6973
  store i32 1, i32* %modulation18, align 4, !dbg !6974
  br label %sw.epilog21, !dbg !6975

sw.bb19:                                          ; preds = %sw.epilog12
  br label %sw.default, !dbg !6975

sw.default:                                       ; preds = %sw.epilog12, %sw.bb19
  %19 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6976
  %modulation20 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %19, i32 0, i32 1, !dbg !6977
  store i32 3, i32* %modulation20, align 4, !dbg !6978
  br label %sw.epilog21, !dbg !6979

sw.epilog21:                                      ; preds = %sw.default, %sw.bb17, %sw.bb16
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6980
  %hierarchy = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 9, !dbg !6981
  store i32 0, i32* %hierarchy, align 4, !dbg !6982
  %21 = load i16, i16* %tps, align 2, !dbg !6983
  %conv22 = zext i16 %21 to i32, !dbg !6983
  %shr23 = ashr i32 %conv22, 5, !dbg !6984
  %and24 = and i32 %shr23, 7, !dbg !6985
  switch i32 %and24, label %sw.default33 [
    i32 1, label %sw.bb25
    i32 2, label %sw.bb26
    i32 3, label %sw.bb28
    i32 5, label %sw.bb30
    i32 7, label %sw.bb32
  ], !dbg !6986

sw.bb25:                                          ; preds = %sw.epilog21
  %22 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6987
  %code_rate_HP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %22, i32 0, i32 11, !dbg !6989
  store i32 1, i32* %code_rate_HP, align 4, !dbg !6990
  br label %sw.epilog35, !dbg !6991

sw.bb26:                                          ; preds = %sw.epilog21
  %23 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6992
  %code_rate_HP27 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %23, i32 0, i32 11, !dbg !6993
  store i32 2, i32* %code_rate_HP27, align 4, !dbg !6994
  br label %sw.epilog35, !dbg !6995

sw.bb28:                                          ; preds = %sw.epilog21
  %24 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !6996
  %code_rate_HP29 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %24, i32 0, i32 11, !dbg !6997
  store i32 3, i32* %code_rate_HP29, align 4, !dbg !6998
  br label %sw.epilog35, !dbg !6999

sw.bb30:                                          ; preds = %sw.epilog21
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7000
  %code_rate_HP31 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 11, !dbg !7001
  store i32 5, i32* %code_rate_HP31, align 4, !dbg !7002
  br label %sw.epilog35, !dbg !7003

sw.bb32:                                          ; preds = %sw.epilog21
  br label %sw.default33, !dbg !7003

sw.default33:                                     ; preds = %sw.epilog21, %sw.bb32
  %26 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7004
  %code_rate_HP34 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %26, i32 0, i32 11, !dbg !7005
  store i32 7, i32* %code_rate_HP34, align 4, !dbg !7006
  br label %sw.epilog35, !dbg !7007

sw.epilog35:                                      ; preds = %sw.default33, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb25
  %27 = load i16, i16* %tps, align 2, !dbg !7008
  %conv36 = zext i16 %27 to i32, !dbg !7008
  %shr37 = ashr i32 %conv36, 2, !dbg !7009
  %and38 = and i32 %shr37, 7, !dbg !7010
  switch i32 %and38, label %sw.default47 [
    i32 1, label %sw.bb39
    i32 2, label %sw.bb40
    i32 3, label %sw.bb42
    i32 5, label %sw.bb44
    i32 7, label %sw.bb46
  ], !dbg !7011

sw.bb39:                                          ; preds = %sw.epilog35
  %28 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7012
  %code_rate_LP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %28, i32 0, i32 12, !dbg !7014
  store i32 1, i32* %code_rate_LP, align 4, !dbg !7015
  br label %sw.epilog49, !dbg !7016

sw.bb40:                                          ; preds = %sw.epilog35
  %29 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7017
  %code_rate_LP41 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %29, i32 0, i32 12, !dbg !7018
  store i32 2, i32* %code_rate_LP41, align 4, !dbg !7019
  br label %sw.epilog49, !dbg !7020

sw.bb42:                                          ; preds = %sw.epilog35
  %30 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7021
  %code_rate_LP43 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %30, i32 0, i32 12, !dbg !7022
  store i32 3, i32* %code_rate_LP43, align 4, !dbg !7023
  br label %sw.epilog49, !dbg !7024

sw.bb44:                                          ; preds = %sw.epilog35
  %31 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7025
  %code_rate_LP45 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %31, i32 0, i32 12, !dbg !7026
  store i32 5, i32* %code_rate_LP45, align 4, !dbg !7027
  br label %sw.epilog49, !dbg !7028

sw.bb46:                                          ; preds = %sw.epilog35
  br label %sw.default47, !dbg !7028

sw.default47:                                     ; preds = %sw.epilog35, %sw.bb46
  %32 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %fep.addr, align 8, !dbg !7029
  %code_rate_LP48 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %32, i32 0, i32 12, !dbg !7030
  store i32 7, i32* %code_rate_LP48, align 4, !dbg !7031
  br label %sw.epilog49, !dbg !7032

sw.epilog49:                                      ; preds = %sw.default47, %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb39
  ret i32 0, !dbg !7033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_read_status(%struct.dvb_frontend* %fe, i32* %stat) #0 !dbg !7034 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %stat.addr = alloca i32*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %lock = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7035, metadata !DIExpression()), !dbg !7036
  store i32* %stat, i32** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %stat.addr, metadata !7037, metadata !DIExpression()), !dbg !7038
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7039, metadata !DIExpression()), !dbg !7040
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7041
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7042
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7042
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !7041
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !7040
  call void @llvm.dbg.declare(metadata i16* %lock, metadata !7043, metadata !DIExpression()), !dbg !7044
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7045
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 509) #8, !dbg !7046
  store i16 %call, i16* %lock, align 2, !dbg !7044
  %4 = load i32*, i32** %stat.addr, align 8, !dbg !7047
  store i32 0, i32* %4, align 4, !dbg !7048
  %5 = load i16, i16* %lock, align 2, !dbg !7049
  %conv = zext i16 %5 to i32, !dbg !7049
  %and = and i32 %conv, 32768, !dbg !7051
  %tobool = icmp ne i32 %and, 0, !dbg !7051
  br i1 %tobool, label %if.then, label %if.end, !dbg !7052

if.then:                                          ; preds = %entry
  %6 = load i32*, i32** %stat.addr, align 8, !dbg !7053
  %7 = load i32, i32* %6, align 4, !dbg !7054
  %or = or i32 %7, 1, !dbg !7054
  store i32 %or, i32* %6, align 4, !dbg !7054
  br label %if.end, !dbg !7055

if.end:                                           ; preds = %if.then, %entry
  %8 = load i16, i16* %lock, align 2, !dbg !7056
  %conv1 = zext i16 %8 to i32, !dbg !7056
  %and2 = and i32 %conv1, 12288, !dbg !7058
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7058
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7059

if.then4:                                         ; preds = %if.end
  %9 = load i32*, i32** %stat.addr, align 8, !dbg !7060
  %10 = load i32, i32* %9, align 4, !dbg !7061
  %or5 = or i32 %10, 2, !dbg !7061
  store i32 %or5, i32* %9, align 4, !dbg !7061
  br label %if.end6, !dbg !7062

if.end6:                                          ; preds = %if.then4, %if.end
  %11 = load i16, i16* %lock, align 2, !dbg !7063
  %conv7 = zext i16 %11 to i32, !dbg !7063
  %and8 = and i32 %conv7, 256, !dbg !7065
  %tobool9 = icmp ne i32 %and8, 0, !dbg !7065
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !7066

if.then10:                                        ; preds = %if.end6
  %12 = load i32*, i32** %stat.addr, align 8, !dbg !7067
  %13 = load i32, i32* %12, align 4, !dbg !7068
  %or11 = or i32 %13, 4, !dbg !7068
  store i32 %or11, i32* %12, align 4, !dbg !7068
  br label %if.end12, !dbg !7069

if.end12:                                         ; preds = %if.then10, %if.end6
  %14 = load i16, i16* %lock, align 2, !dbg !7070
  %conv13 = zext i16 %14 to i32, !dbg !7070
  %and14 = and i32 %conv13, 16, !dbg !7072
  %tobool15 = icmp ne i32 %and14, 0, !dbg !7072
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !7073

if.then16:                                        ; preds = %if.end12
  %15 = load i32*, i32** %stat.addr, align 8, !dbg !7074
  %16 = load i32, i32* %15, align 4, !dbg !7075
  %or17 = or i32 %16, 8, !dbg !7075
  store i32 %or17, i32* %15, align 4, !dbg !7075
  br label %if.end18, !dbg !7076

if.end18:                                         ; preds = %if.then16, %if.end12
  %17 = load i16, i16* %lock, align 2, !dbg !7077
  %conv19 = zext i16 %17 to i32, !dbg !7077
  %and20 = and i32 %conv19, 56, !dbg !7079
  %cmp = icmp eq i32 %and20, 56, !dbg !7080
  br i1 %cmp, label %if.then22, label %if.end24, !dbg !7081

if.then22:                                        ; preds = %if.end18
  %18 = load i32*, i32** %stat.addr, align 8, !dbg !7082
  %19 = load i32, i32* %18, align 4, !dbg !7083
  %or23 = or i32 %19, 16, !dbg !7083
  store i32 %or23, i32* %18, align 4, !dbg !7083
  br label %if.end24, !dbg !7084

if.end24:                                         ; preds = %if.then22, %if.end18
  %20 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7085
  %21 = load i32*, i32** %stat.addr, align 8, !dbg !7086
  %22 = load i32, i32* %21, align 4, !dbg !7087
  %call25 = call i32 @dib7000p_get_stats(%struct.dvb_frontend* %20, i32 %22) #8, !dbg !7088
  ret i32 0, !dbg !7089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_read_ber(%struct.dvb_frontend* %fe, i32* %ber) #0 !dbg !7090 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %ber.addr = alloca i32*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7091, metadata !DIExpression()), !dbg !7092
  store i32* %ber, i32** %ber.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ber.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7095, metadata !DIExpression()), !dbg !7096
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7097
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7098
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7098
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !7097
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !7096
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7099
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 500) #8, !dbg !7100
  %conv = zext i16 %call to i32, !dbg !7100
  %shl = shl i32 %conv, 16, !dbg !7101
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7102
  %call1 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %4, i16 zeroext 501) #8, !dbg !7103
  %conv2 = zext i16 %call1 to i32, !dbg !7103
  %or = or i32 %shl, %conv2, !dbg !7104
  %5 = load i32*, i32** %ber.addr, align 8, !dbg !7105
  store i32 %or, i32* %5, align 4, !dbg !7106
  ret i32 0, !dbg !7107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_read_signal_strength(%struct.dvb_frontend* %fe, i16* %strength) #0 !dbg !7108 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %strength.addr = alloca i16*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %val = alloca i16, align 2
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7109, metadata !DIExpression()), !dbg !7110
  store i16* %strength, i16** %strength.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %strength.addr, metadata !7111, metadata !DIExpression()), !dbg !7112
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7113, metadata !DIExpression()), !dbg !7114
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7115
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7116
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7116
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !7115
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !7114
  call void @llvm.dbg.declare(metadata i16* %val, metadata !7117, metadata !DIExpression()), !dbg !7118
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7119
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 394) #8, !dbg !7120
  store i16 %call, i16* %val, align 2, !dbg !7118
  %4 = load i16, i16* %val, align 2, !dbg !7121
  %conv = zext i16 %4 to i32, !dbg !7121
  %sub = sub i32 65535, %conv, !dbg !7122
  %conv1 = trunc i32 %sub to i16, !dbg !7123
  %5 = load i16*, i16** %strength.addr, align 8, !dbg !7124
  store i16 %conv1, i16* %5, align 2, !dbg !7125
  ret i32 0, !dbg !7126
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_read_snr(%struct.dvb_frontend* %fe, i16* %snr) #0 !dbg !7127 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %snr.addr = alloca i16*, align 8
  %result = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7128, metadata !DIExpression()), !dbg !7129
  store i16* %snr, i16** %snr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %snr.addr, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata i32* %result, metadata !7132, metadata !DIExpression()), !dbg !7133
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7134
  %call = call i32 @dib7000p_get_snr(%struct.dvb_frontend* %0) #8, !dbg !7135
  store i32 %call, i32* %result, align 4, !dbg !7136
  %1 = load i32, i32* %result, align 4, !dbg !7137
  %div = udiv i32 %1, 1677721, !dbg !7138
  %conv = trunc i32 %div to i16, !dbg !7137
  %2 = load i16*, i16** %snr.addr, align 8, !dbg !7139
  store i16 %conv, i16* %2, align 2, !dbg !7140
  ret i32 0, !dbg !7141
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_read_unc_blocks(%struct.dvb_frontend* %fe, i32* %unc) #0 !dbg !7142 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %unc.addr = alloca i32*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  store i32* %unc, i32** %unc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %unc.addr, metadata !7145, metadata !DIExpression()), !dbg !7146
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7147, metadata !DIExpression()), !dbg !7148
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7149
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7150
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7150
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !7149
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !7148
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7151
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 506) #8, !dbg !7152
  %conv = zext i16 %call to i32, !dbg !7152
  %4 = load i32*, i32** %unc.addr, align 8, !dbg !7153
  store i32 %conv, i32* %4, align 4, !dbg !7154
  ret i32 0, !dbg !7155
}

; Function Attrs: noredzone
declare dso_local void @dibx000_exit_i2c_master(%struct.dibx000_i2c_master*) #2

; Function Attrs: noredzone
declare dso_local void @i2c_del_adapter(%struct.i2c_adapter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %state, i32 %mode) #0 !dbg !7156 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %mode.addr = alloca i32, align 4
  %reg_774 = alloca i16, align 2
  %reg_775 = alloca i16, align 2
  %reg_776 = alloca i16, align 2
  %reg_899 = alloca i16, align 2
  %reg_1280 = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !7159, metadata !DIExpression()), !dbg !7160
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7161, metadata !DIExpression()), !dbg !7162
  call void @llvm.dbg.declare(metadata i16* %reg_774, metadata !7163, metadata !DIExpression()), !dbg !7164
  store i16 16383, i16* %reg_774, align 2, !dbg !7164
  call void @llvm.dbg.declare(metadata i16* %reg_775, metadata !7165, metadata !DIExpression()), !dbg !7166
  store i16 -1, i16* %reg_775, align 2, !dbg !7166
  call void @llvm.dbg.declare(metadata i16* %reg_776, metadata !7167, metadata !DIExpression()), !dbg !7168
  store i16 7, i16* %reg_776, align 2, !dbg !7168
  call void @llvm.dbg.declare(metadata i16* %reg_899, metadata !7169, metadata !DIExpression()), !dbg !7170
  store i16 3, i16* %reg_899, align 2, !dbg !7170
  call void @llvm.dbg.declare(metadata i16* %reg_1280, metadata !7171, metadata !DIExpression()), !dbg !7172
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7173
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 1280) #8, !dbg !7174
  %conv = zext i16 %call to i32, !dbg !7174
  %and = and i32 %conv, 511, !dbg !7175
  %or = or i32 65024, %and, !dbg !7176
  %conv1 = trunc i32 %or to i16, !dbg !7177
  store i16 %conv1, i16* %reg_1280, align 2, !dbg !7172
  %1 = load i32, i32* %mode.addr, align 4, !dbg !7178
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb10
    i32 2, label %sw.bb29
  ], !dbg !7179

sw.bb:                                            ; preds = %entry
  store i16 0, i16* %reg_774, align 2, !dbg !7180
  store i16 0, i16* %reg_775, align 2, !dbg !7182
  store i16 0, i16* %reg_776, align 2, !dbg !7183
  store i16 0, i16* %reg_899, align 2, !dbg !7184
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7185
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %2, i32 0, i32 16, !dbg !7187
  %3 = load i16, i16* %version, align 8, !dbg !7187
  %conv2 = zext i16 %3 to i32, !dbg !7185
  %cmp = icmp eq i32 %conv2, 28816, !dbg !7188
  br i1 %cmp, label %if.then, label %if.else, !dbg !7189

if.then:                                          ; preds = %sw.bb
  %4 = load i16, i16* %reg_1280, align 2, !dbg !7190
  %conv4 = zext i16 %4 to i32, !dbg !7190
  %and5 = and i32 %conv4, 31, !dbg !7190
  %conv6 = trunc i32 %and5 to i16, !dbg !7190
  store i16 %conv6, i16* %reg_1280, align 2, !dbg !7190
  br label %if.end, !dbg !7191

if.else:                                          ; preds = %sw.bb
  %5 = load i16, i16* %reg_1280, align 2, !dbg !7192
  %conv7 = zext i16 %5 to i32, !dbg !7192
  %and8 = and i32 %conv7, 511, !dbg !7192
  %conv9 = trunc i32 %and8 to i16, !dbg !7192
  store i16 %conv9, i16* %reg_1280, align 2, !dbg !7192
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !7193

sw.bb10:                                          ; preds = %entry
  %6 = load i16, i16* %reg_774, align 2, !dbg !7194
  %conv11 = zext i16 %6 to i32, !dbg !7194
  %and12 = and i32 %conv11, -52737, !dbg !7194
  %conv13 = trunc i32 %and12 to i16, !dbg !7194
  store i16 %conv13, i16* %reg_774, align 2, !dbg !7194
  %7 = load i16, i16* %reg_776, align 2, !dbg !7195
  %conv14 = zext i16 %7 to i32, !dbg !7195
  %and15 = and i32 %conv14, -2, !dbg !7195
  %conv16 = trunc i32 %and15 to i16, !dbg !7195
  store i16 %conv16, i16* %reg_776, align 2, !dbg !7195
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7196
  %version17 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 16, !dbg !7198
  %9 = load i16, i16* %version17, align 8, !dbg !7198
  %conv18 = zext i16 %9 to i32, !dbg !7196
  %cmp19 = icmp ne i32 %conv18, 28816, !dbg !7199
  br i1 %cmp19, label %if.then21, label %if.end25, !dbg !7200

if.then21:                                        ; preds = %sw.bb10
  %10 = load i16, i16* %reg_1280, align 2, !dbg !7201
  %conv22 = zext i16 %10 to i32, !dbg !7201
  %and23 = and i32 %conv22, -2049, !dbg !7201
  %conv24 = trunc i32 %and23 to i16, !dbg !7201
  store i16 %conv24, i16* %reg_1280, align 2, !dbg !7201
  br label %if.end25, !dbg !7202

if.end25:                                         ; preds = %if.then21, %sw.bb10
  %11 = load i16, i16* %reg_1280, align 2, !dbg !7203
  %conv26 = zext i16 %11 to i32, !dbg !7203
  %and27 = and i32 %conv26, -65, !dbg !7203
  %conv28 = trunc i32 %and27 to i16, !dbg !7203
  store i16 %conv28, i16* %reg_1280, align 2, !dbg !7203
  br label %sw.bb29, !dbg !7204

sw.bb29:                                          ; preds = %entry, %if.end25
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7205
  %version30 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %12, i32 0, i32 16, !dbg !7207
  %13 = load i16, i16* %version30, align 8, !dbg !7207
  %conv31 = zext i16 %13 to i32, !dbg !7205
  %cmp32 = icmp eq i32 %conv31, 28816, !dbg !7208
  br i1 %cmp32, label %if.then34, label %if.else38, !dbg !7209

if.then34:                                        ; preds = %sw.bb29
  %14 = load i16, i16* %reg_1280, align 2, !dbg !7210
  %conv35 = zext i16 %14 to i32, !dbg !7210
  %and36 = and i32 %conv35, -161, !dbg !7210
  %conv37 = trunc i32 %and36 to i16, !dbg !7210
  store i16 %conv37, i16* %reg_1280, align 2, !dbg !7210
  br label %if.end42, !dbg !7211

if.else38:                                        ; preds = %sw.bb29
  %15 = load i16, i16* %reg_1280, align 2, !dbg !7212
  %conv39 = zext i16 %15 to i32, !dbg !7212
  %and40 = and i32 %conv39, -29697, !dbg !7212
  %conv41 = trunc i32 %and40 to i16, !dbg !7212
  store i16 %conv41, i16* %reg_1280, align 2, !dbg !7212
  br label %if.end42

if.end42:                                         ; preds = %if.else38, %if.then34
  br label %sw.epilog, !dbg !7213

sw.epilog:                                        ; preds = %entry, %if.end42, %if.end
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7214
  %17 = load i16, i16* %reg_774, align 2, !dbg !7215
  %call43 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 774, i16 zeroext %17) #8, !dbg !7216
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7217
  %19 = load i16, i16* %reg_775, align 2, !dbg !7218
  %call44 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %18, i16 zeroext 775, i16 zeroext %19) #8, !dbg !7219
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7220
  %21 = load i16, i16* %reg_776, align 2, !dbg !7221
  %call45 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %20, i16 zeroext 776, i16 zeroext %21) #8, !dbg !7222
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7223
  %23 = load i16, i16* %reg_1280, align 2, !dbg !7224
  %call46 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 1280, i16 zeroext %23) #8, !dbg !7225
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7226
  %version47 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %24, i32 0, i32 16, !dbg !7228
  %25 = load i16, i16* %version47, align 8, !dbg !7228
  %conv48 = zext i16 %25 to i32, !dbg !7226
  %cmp49 = icmp ne i32 %conv48, 28816, !dbg !7229
  br i1 %cmp49, label %if.then51, label %if.end53, !dbg !7230

if.then51:                                        ; preds = %sw.epilog
  %26 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7231
  %27 = load i16, i16* %reg_899, align 2, !dbg !7232
  %call52 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %26, i16 zeroext 899, i16 zeroext %27) #8, !dbg !7233
  br label %if.end53, !dbg !7233

if.end53:                                         ; preds = %if.then51, %sw.epilog
  ret i32 0, !dbg !7234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_set_adc_state(%struct.dib7000p_state* %state, i32 %no) #0 !dbg !7235 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %no.addr = alloca i32, align 4
  %reg_908 = alloca i16, align 2
  %reg_909 = alloca i16, align 2
  %reg = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !7238, metadata !DIExpression()), !dbg !7239
  store i32 %no, i32* %no.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no.addr, metadata !7240, metadata !DIExpression()), !dbg !7241
  call void @llvm.dbg.declare(metadata i16* %reg_908, metadata !7242, metadata !DIExpression()), !dbg !7243
  store i16 0, i16* %reg_908, align 2, !dbg !7243
  call void @llvm.dbg.declare(metadata i16* %reg_909, metadata !7244, metadata !DIExpression()), !dbg !7245
  store i16 0, i16* %reg_909, align 2, !dbg !7245
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !7246, metadata !DIExpression()), !dbg !7247
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7248
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 16, !dbg !7250
  %1 = load i16, i16* %version, align 8, !dbg !7250
  %conv = zext i16 %1 to i32, !dbg !7248
  %cmp = icmp ne i32 %conv, 28816, !dbg !7251
  br i1 %cmp, label %if.then, label %if.end, !dbg !7252

if.then:                                          ; preds = %entry
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7253
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %2, i16 zeroext 908) #8, !dbg !7255
  store i16 %call, i16* %reg_908, align 2, !dbg !7256
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7257
  %call2 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 909) #8, !dbg !7258
  store i16 %call2, i16* %reg_909, align 2, !dbg !7259
  br label %if.end, !dbg !7260

if.end:                                           ; preds = %if.then, %entry
  %4 = load i32, i32* %no.addr, align 4, !dbg !7261
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb35
    i32 2, label %sw.bb52
    i32 3, label %sw.bb59
    i32 4, label %sw.bb66
    i32 5, label %sw.bb70
  ], !dbg !7262

sw.bb:                                            ; preds = %if.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7263
  %version3 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 16, !dbg !7266
  %6 = load i16, i16* %version3, align 8, !dbg !7266
  %conv4 = zext i16 %6 to i32, !dbg !7263
  %cmp5 = icmp eq i32 %conv4, 28816, !dbg !7267
  br i1 %cmp5, label %if.then7, label %if.else, !dbg !7268

if.then7:                                         ; preds = %sw.bb
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7269
  %call8 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %7, i16 zeroext 1925) #8, !dbg !7271
  store i16 %call8, i16* %reg, align 2, !dbg !7272
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7273
  %9 = load i16, i16* %reg, align 2, !dbg !7274
  %conv9 = zext i16 %9 to i32, !dbg !7274
  %or = or i32 %conv9, 16, !dbg !7275
  %or10 = or i32 %or, 4, !dbg !7276
  %conv11 = trunc i32 %or10 to i16, !dbg !7274
  %call12 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %8, i16 zeroext 1925, i16 zeroext %conv11) #8, !dbg !7277
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7278
  %call13 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %10, i16 zeroext 1925) #8, !dbg !7279
  store i16 %call13, i16* %reg, align 2, !dbg !7280
  call void @msleep(i32 200) #8, !dbg !7281
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7282
  %12 = load i16, i16* %reg, align 2, !dbg !7283
  %conv14 = zext i16 %12 to i32, !dbg !7283
  %and = and i32 %conv14, -17, !dbg !7284
  %conv15 = trunc i32 %and to i16, !dbg !7283
  %call16 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %11, i16 zeroext 1925, i16 zeroext %conv15) #8, !dbg !7285
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7286
  %call17 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %13, i16 zeroext 72) #8, !dbg !7287
  %conv18 = zext i16 %call17 to i32, !dbg !7287
  %and19 = and i32 %conv18, -61441, !dbg !7288
  %conv20 = trunc i32 %and19 to i16, !dbg !7287
  store i16 %conv20, i16* %reg, align 2, !dbg !7289
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7290
  %15 = load i16, i16* %reg, align 2, !dbg !7291
  %conv21 = zext i16 %15 to i32, !dbg !7291
  %or22 = or i32 %conv21, 16384, !dbg !7292
  %or23 = or i32 %or22, 12288, !dbg !7293
  %or24 = or i32 %or23, 524, !dbg !7294
  %conv25 = trunc i32 %or24 to i16, !dbg !7291
  %call26 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 72, i16 zeroext %conv25) #8, !dbg !7295
  br label %if.end34, !dbg !7296

if.else:                                          ; preds = %sw.bb
  %16 = load i16, i16* %reg_909, align 2, !dbg !7297
  %conv27 = zext i16 %16 to i32, !dbg !7297
  %or28 = or i32 %conv27, 3, !dbg !7297
  %conv29 = trunc i32 %or28 to i16, !dbg !7297
  store i16 %conv29, i16* %reg_909, align 2, !dbg !7297
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7299
  %18 = load i16, i16* %reg_909, align 2, !dbg !7300
  %call30 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %17, i16 zeroext 909, i16 zeroext %18) #8, !dbg !7301
  %19 = load i16, i16* %reg_909, align 2, !dbg !7302
  %conv31 = zext i16 %19 to i32, !dbg !7302
  %and32 = and i32 %conv31, -3, !dbg !7302
  %conv33 = trunc i32 %and32 to i16, !dbg !7302
  store i16 %conv33, i16* %reg_909, align 2, !dbg !7302
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.then7
  br label %sw.epilog, !dbg !7303

sw.bb35:                                          ; preds = %if.end
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7304
  %version36 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %20, i32 0, i32 16, !dbg !7306
  %21 = load i16, i16* %version36, align 8, !dbg !7306
  %conv37 = zext i16 %21 to i32, !dbg !7304
  %cmp38 = icmp eq i32 %conv37, 28816, !dbg !7307
  br i1 %cmp38, label %if.then40, label %if.else47, !dbg !7308

if.then40:                                        ; preds = %sw.bb35
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7309
  %call41 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %22, i16 zeroext 1925) #8, !dbg !7311
  store i16 %call41, i16* %reg, align 2, !dbg !7312
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7313
  %24 = load i16, i16* %reg, align 2, !dbg !7314
  %conv42 = zext i16 %24 to i32, !dbg !7314
  %and43 = and i32 %conv42, -5, !dbg !7315
  %or44 = or i32 %and43, 16, !dbg !7316
  %conv45 = trunc i32 %or44 to i16, !dbg !7317
  %call46 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %23, i16 zeroext 1925, i16 zeroext %conv45) #8, !dbg !7318
  br label %if.end51, !dbg !7319

if.else47:                                        ; preds = %sw.bb35
  %25 = load i16, i16* %reg_909, align 2, !dbg !7320
  %conv48 = zext i16 %25 to i32, !dbg !7320
  %or49 = or i32 %conv48, 3, !dbg !7320
  %conv50 = trunc i32 %or49 to i16, !dbg !7320
  store i16 %conv50, i16* %reg_909, align 2, !dbg !7320
  br label %if.end51

if.end51:                                         ; preds = %if.else47, %if.then40
  br label %sw.epilog, !dbg !7321

sw.bb52:                                          ; preds = %if.end
  %26 = load i16, i16* %reg_908, align 2, !dbg !7322
  %conv53 = zext i16 %26 to i32, !dbg !7322
  %and54 = and i32 %conv53, 4095, !dbg !7322
  %conv55 = trunc i32 %and54 to i16, !dbg !7322
  store i16 %conv55, i16* %reg_908, align 2, !dbg !7322
  %27 = load i16, i16* %reg_909, align 2, !dbg !7323
  %conv56 = zext i16 %27 to i32, !dbg !7323
  %and57 = and i32 %conv56, 3, !dbg !7323
  %conv58 = trunc i32 %and57 to i16, !dbg !7323
  store i16 %conv58, i16* %reg_909, align 2, !dbg !7323
  br label %sw.epilog, !dbg !7324

sw.bb59:                                          ; preds = %if.end
  %28 = load i16, i16* %reg_908, align 2, !dbg !7325
  %conv60 = zext i16 %28 to i32, !dbg !7325
  %or61 = or i32 %conv60, 28672, !dbg !7325
  %conv62 = trunc i32 %or61 to i16, !dbg !7325
  store i16 %conv62, i16* %reg_908, align 2, !dbg !7325
  %29 = load i16, i16* %reg_909, align 2, !dbg !7326
  %conv63 = zext i16 %29 to i32, !dbg !7326
  %or64 = or i32 %conv63, 60, !dbg !7326
  %conv65 = trunc i32 %or64 to i16, !dbg !7326
  store i16 %conv65, i16* %reg_909, align 2, !dbg !7326
  br label %sw.epilog, !dbg !7327

sw.bb66:                                          ; preds = %if.end
  %30 = load i16, i16* %reg_908, align 2, !dbg !7328
  %conv67 = zext i16 %30 to i32, !dbg !7328
  %and68 = and i32 %conv67, -32769, !dbg !7328
  %conv69 = trunc i32 %and68 to i16, !dbg !7328
  store i16 %conv69, i16* %reg_908, align 2, !dbg !7328
  br label %sw.epilog, !dbg !7329

sw.bb70:                                          ; preds = %if.end
  %31 = load i16, i16* %reg_908, align 2, !dbg !7330
  %conv71 = zext i16 %31 to i32, !dbg !7330
  %or72 = or i32 %conv71, 32768, !dbg !7330
  %conv73 = trunc i32 %or72 to i16, !dbg !7330
  store i16 %conv73, i16* %reg_908, align 2, !dbg !7330
  br label %sw.epilog, !dbg !7331

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !7332

sw.epilog:                                        ; preds = %sw.default, %sw.bb70, %sw.bb66, %sw.bb59, %sw.bb52, %if.end51, %if.end34
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7333
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %32, i32 0, i32 1, !dbg !7334
  %disable_sample_and_hold = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 15, !dbg !7335
  %bf.load = load i8, i8* %disable_sample_and_hold, align 1, !dbg !7335
  %bf.clear = and i8 %bf.load, 1, !dbg !7335
  %conv74 = zext i8 %bf.clear to i32, !dbg !7333
  %and75 = and i32 %conv74, 1, !dbg !7336
  %shl = shl i32 %and75, 4, !dbg !7337
  %33 = load i16, i16* %reg_909, align 2, !dbg !7338
  %conv76 = zext i16 %33 to i32, !dbg !7338
  %or77 = or i32 %conv76, %shl, !dbg !7338
  %conv78 = trunc i32 %or77 to i16, !dbg !7338
  store i16 %conv78, i16* %reg_909, align 2, !dbg !7338
  %34 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7339
  %cfg79 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %34, i32 0, i32 1, !dbg !7340
  %enable_current_mirror = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg79, i32 0, i32 15, !dbg !7341
  %bf.load80 = load i8, i8* %enable_current_mirror, align 1, !dbg !7341
  %bf.lshr = lshr i8 %bf.load80, 1, !dbg !7341
  %bf.clear81 = and i8 %bf.lshr, 1, !dbg !7341
  %conv82 = zext i8 %bf.clear81 to i32, !dbg !7339
  %and83 = and i32 %conv82, 1, !dbg !7342
  %shl84 = shl i32 %and83, 7, !dbg !7343
  %35 = load i16, i16* %reg_908, align 2, !dbg !7344
  %conv85 = zext i16 %35 to i32, !dbg !7344
  %or86 = or i32 %conv85, %shl84, !dbg !7344
  %conv87 = trunc i32 %or86 to i16, !dbg !7344
  store i16 %conv87, i16* %reg_908, align 2, !dbg !7344
  %36 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7345
  %version88 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %36, i32 0, i32 16, !dbg !7347
  %37 = load i16, i16* %version88, align 8, !dbg !7347
  %conv89 = zext i16 %37 to i32, !dbg !7345
  %cmp90 = icmp ne i32 %conv89, 28816, !dbg !7348
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !7349

if.then92:                                        ; preds = %sw.epilog
  %38 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7350
  %39 = load i16, i16* %reg_908, align 2, !dbg !7352
  %call93 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %38, i16 zeroext 908, i16 zeroext %39) #8, !dbg !7353
  %40 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7354
  %41 = load i16, i16* %reg_909, align 2, !dbg !7355
  %call94 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %40, i16 zeroext 909, i16 zeroext %41) #8, !dbg !7356
  br label %if.end95, !dbg !7357

if.end95:                                         ; preds = %if.then92, %sw.epilog
  ret void, !dbg !7358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_sad_calib(%struct.dib7000p_state* %state) #0 !dbg !7359 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !7360, metadata !DIExpression()), !dbg !7361
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7362
  %call = call i32 @dib7000p_write_word(%struct.dib7000p_state* %0, i16 zeroext 73, i16 zeroext 0) #8, !dbg !7363
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7364
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %1, i32 0, i32 16, !dbg !7366
  %2 = load i16, i16* %version, align 8, !dbg !7366
  %conv = zext i16 %2 to i32, !dbg !7364
  %cmp = icmp eq i32 %conv, 28816, !dbg !7367
  br i1 %cmp, label %if.then, label %if.else, !dbg !7368

if.then:                                          ; preds = %entry
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7369
  %call2 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %3, i16 zeroext 74, i16 zeroext 2048) #8, !dbg !7370
  br label %if.end, !dbg !7370

if.else:                                          ; preds = %entry
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7371
  %call3 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %4, i16 zeroext 74, i16 zeroext 776) #8, !dbg !7372
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7373
  %call4 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %5, i16 zeroext 73, i16 zeroext 1) #8, !dbg !7374
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7375
  %call5 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 73, i16 zeroext 0) #8, !dbg !7376
  call void @msleep(i32 1) #8, !dbg !7377
  ret i32 0, !dbg !7378
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_output_mode(%struct.dib7000p_state* %state, i32 %mode) #0 !dbg !7379 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %mode.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %outreg = alloca i16, align 2
  %fifo_threshold = alloca i16, align 2
  %smo_mode = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !7382, metadata !DIExpression()), !dbg !7383
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7384, metadata !DIExpression()), !dbg !7385
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7386, metadata !DIExpression()), !dbg !7387
  store i32 0, i32* %ret, align 4, !dbg !7387
  call void @llvm.dbg.declare(metadata i16* %outreg, metadata !7388, metadata !DIExpression()), !dbg !7389
  call void @llvm.dbg.declare(metadata i16* %fifo_threshold, metadata !7390, metadata !DIExpression()), !dbg !7391
  call void @llvm.dbg.declare(metadata i16* %smo_mode, metadata !7392, metadata !DIExpression()), !dbg !7393
  store i16 0, i16* %outreg, align 2, !dbg !7394
  store i16 1792, i16* %fifo_threshold, align 2, !dbg !7395
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7396
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 235) #8, !dbg !7397
  %conv = zext i16 %call to i32, !dbg !7397
  %and = and i32 %conv, 80, !dbg !7398
  %or = or i32 %and, 2, !dbg !7399
  %conv1 = trunc i32 %or to i16, !dbg !7400
  store i16 %conv1, i16* %smo_mode, align 2, !dbg !7401
  br label %do.body, !dbg !7402

do.body:                                          ; preds = %entry
  %1 = load i32, i32* @debug, align 4, !dbg !7403
  %tobool = icmp ne i32 %1, 0, !dbg !7403
  br i1 %tobool, label %if.then, label %if.end, !dbg !7406

if.then:                                          ; preds = %do.body
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7403
  %demod = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %2, i32 0, i32 0, !dbg !7403
  %3 = load i32, i32* %mode.addr, align 4, !dbg !7403
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7000p_set_output_mode, i64 0, i64 0), %struct.dvb_frontend* %demod, i32 %3) #9, !dbg !7403
  br label %if.end, !dbg !7403

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !7406

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %mode.addr, align 4, !dbg !7407
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 7, label %sw.bb4
    i32 4, label %sw.bb5
    i32 5, label %sw.bb9
    i32 6, label %sw.bb13
    i32 0, label %sw.bb14
  ], !dbg !7408

sw.bb:                                            ; preds = %do.end
  store i16 1024, i16* %outreg, align 2, !dbg !7409
  br label %sw.epilog, !dbg !7411

sw.bb3:                                           ; preds = %do.end
  store i16 1088, i16* %outreg, align 2, !dbg !7412
  br label %sw.epilog, !dbg !7413

sw.bb4:                                           ; preds = %do.end
  store i16 1152, i16* %outreg, align 2, !dbg !7414
  br label %sw.epilog, !dbg !7415

sw.bb5:                                           ; preds = %do.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7416
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 1, !dbg !7418
  %hostbus_diversity = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 1, !dbg !7419
  %6 = load i8, i8* %hostbus_diversity, align 1, !dbg !7419
  %tobool6 = icmp ne i8 %6, 0, !dbg !7416
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !7420

if.then7:                                         ; preds = %sw.bb5
  store i16 1280, i16* %outreg, align 2, !dbg !7421
  br label %if.end8, !dbg !7422

if.else:                                          ; preds = %sw.bb5
  store i16 2048, i16* %outreg, align 2, !dbg !7423
  br label %if.end8

if.end8:                                          ; preds = %if.else, %if.then7
  br label %sw.epilog, !dbg !7424

sw.bb9:                                           ; preds = %do.end
  %7 = load i16, i16* %smo_mode, align 2, !dbg !7425
  %conv10 = zext i16 %7 to i32, !dbg !7425
  %or11 = or i32 %conv10, 6, !dbg !7425
  %conv12 = trunc i32 %or11 to i16, !dbg !7425
  store i16 %conv12, i16* %smo_mode, align 2, !dbg !7425
  store i16 512, i16* %fifo_threshold, align 2, !dbg !7426
  store i16 1344, i16* %outreg, align 2, !dbg !7427
  br label %sw.epilog, !dbg !7428

sw.bb13:                                          ; preds = %do.end
  store i16 1216, i16* %outreg, align 2, !dbg !7429
  br label %sw.epilog, !dbg !7430

sw.bb14:                                          ; preds = %do.end
  store i16 0, i16* %outreg, align 2, !dbg !7431
  br label %sw.epilog, !dbg !7432

sw.default:                                       ; preds = %do.end
  br label %do.body15, !dbg !7433

do.body15:                                        ; preds = %sw.default
  %8 = load i32, i32* @debug, align 4, !dbg !7434
  %tobool16 = icmp ne i32 %8, 0, !dbg !7434
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !7437

if.then17:                                        ; preds = %do.body15
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7434
  %demod18 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 0, !dbg !7434
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.dib7000p_set_output_mode, i64 0, i64 0), %struct.dvb_frontend* %demod18) #9, !dbg !7434
  br label %if.end20, !dbg !7434

if.end20:                                         ; preds = %if.then17, %do.body15
  br label %do.end21, !dbg !7437

do.end21:                                         ; preds = %if.end20
  br label %sw.epilog, !dbg !7438

sw.epilog:                                        ; preds = %do.end21, %sw.bb14, %sw.bb13, %sw.bb9, %if.end8, %sw.bb4, %sw.bb3, %sw.bb
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7439
  %cfg22 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 1, !dbg !7441
  %output_mpeg2_in_188_bytes = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg22, i32 0, i32 0, !dbg !7442
  %11 = load i8, i8* %output_mpeg2_in_188_bytes, align 8, !dbg !7442
  %tobool23 = icmp ne i8 %11, 0, !dbg !7439
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !7443

if.then24:                                        ; preds = %sw.epilog
  %12 = load i16, i16* %smo_mode, align 2, !dbg !7444
  %conv25 = zext i16 %12 to i32, !dbg !7444
  %or26 = or i32 %conv25, 32, !dbg !7444
  %conv27 = trunc i32 %or26 to i16, !dbg !7444
  store i16 %conv27, i16* %smo_mode, align 2, !dbg !7444
  br label %if.end28, !dbg !7445

if.end28:                                         ; preds = %if.then24, %sw.epilog
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7446
  %14 = load i16, i16* %smo_mode, align 2, !dbg !7447
  %call29 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %13, i16 zeroext 235, i16 zeroext %14) #8, !dbg !7448
  %15 = load i32, i32* %ret, align 4, !dbg !7449
  %or30 = or i32 %15, %call29, !dbg !7449
  store i32 %or30, i32* %ret, align 4, !dbg !7449
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7450
  %17 = load i16, i16* %fifo_threshold, align 2, !dbg !7451
  %call31 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 236, i16 zeroext %17) #8, !dbg !7452
  %18 = load i32, i32* %ret, align 4, !dbg !7453
  %or32 = or i32 %18, %call31, !dbg !7453
  store i32 %or32, i32* %ret, align 4, !dbg !7453
  %19 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7454
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %19, i32 0, i32 16, !dbg !7456
  %20 = load i16, i16* %version, align 8, !dbg !7456
  %conv33 = zext i16 %20 to i32, !dbg !7454
  %cmp = icmp ne i32 %conv33, 28816, !dbg !7457
  br i1 %cmp, label %if.then35, label %if.end38, !dbg !7458

if.then35:                                        ; preds = %if.end28
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !7459
  %22 = load i16, i16* %outreg, align 2, !dbg !7460
  %call36 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %21, i16 zeroext 1286, i16 zeroext %22) #8, !dbg !7461
  %23 = load i32, i32* %ret, align 4, !dbg !7462
  %or37 = or i32 %23, %call36, !dbg !7462
  store i32 %or37, i32* %ret, align 4, !dbg !7462
  br label %if.end38, !dbg !7463

if.end38:                                         ; preds = %if.then35, %if.end28
  %24 = load i32, i32* %ret, align 4, !dbg !7464
  ret i32 %24, !dbg !7465
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_agc_startup(%struct.dvb_frontend* %demod) #0 !dbg !7466 {
entry:
  %retval = alloca i32, align 4
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %ch = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %ret = alloca i32, align 4
  %agc_state = alloca i8*, align 8
  %agc_split = alloca i8, align 1
  %reg = alloca i16, align 2
  %upd_demod_gain_period = alloca i32, align 4
  %frequency_offset = alloca i32, align 4
  %frequency_tuner = alloca i32, align 4
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !7467, metadata !DIExpression()), !dbg !7468
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %ch, metadata !7469, metadata !DIExpression()), !dbg !7470
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7471
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !7472
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7470
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7473, metadata !DIExpression()), !dbg !7474
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7475
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !7476
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !7476
  %3 = bitcast i8* %2 to %struct.dib7000p_state*, !dbg !7475
  store %struct.dib7000p_state* %3, %struct.dib7000p_state** %state, align 8, !dbg !7474
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7477, metadata !DIExpression()), !dbg !7478
  store i32 -1, i32* %ret, align 4, !dbg !7478
  call void @llvm.dbg.declare(metadata i8** %agc_state, metadata !7479, metadata !DIExpression()), !dbg !7480
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7481
  %agc_state1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %4, i32 0, i32 12, !dbg !7482
  store i8* %agc_state1, i8** %agc_state, align 8, !dbg !7480
  call void @llvm.dbg.declare(metadata i8* %agc_split, metadata !7483, metadata !DIExpression()), !dbg !7484
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !7485, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.declare(metadata i32* %upd_demod_gain_period, metadata !7487, metadata !DIExpression()), !dbg !7488
  store i32 4096, i32* %upd_demod_gain_period, align 4, !dbg !7488
  call void @llvm.dbg.declare(metadata i32* %frequency_offset, metadata !7489, metadata !DIExpression()), !dbg !7490
  store i32 0, i32* %frequency_offset, align 4, !dbg !7490
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7491
  %agc_state2 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 12, !dbg !7492
  %6 = load i8, i8* %agc_state2, align 8, !dbg !7492
  %conv = zext i8 %6 to i32, !dbg !7491
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb73
    i32 2, label %sw.bb96
    i32 3, label %sw.bb110
    i32 4, label %sw.bb137
    i32 5, label %sw.bb144
  ], !dbg !7493

sw.bb:                                            ; preds = %entry
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7494
  %call = call i32 @dib7000p_set_power_mode(%struct.dib7000p_state* %7, i32 0) #8, !dbg !7496
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7497
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 16, !dbg !7499
  %9 = load i16, i16* %version, align 8, !dbg !7499
  %conv3 = zext i16 %9 to i32, !dbg !7497
  %cmp = icmp eq i32 %conv3, 28816, !dbg !7500
  br i1 %cmp, label %if.then, label %if.else, !dbg !7501

if.then:                                          ; preds = %sw.bb
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7502
  %call5 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %10, i16 zeroext 1947) #8, !dbg !7504
  %conv6 = zext i16 %call5 to i32, !dbg !7504
  %and = and i32 %conv6, 65280, !dbg !7505
  %conv7 = trunc i32 %and to i16, !dbg !7504
  store i16 %conv7, i16* %reg, align 2, !dbg !7506
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7507
  %12 = load i32, i32* %upd_demod_gain_period, align 4, !dbg !7508
  %and8 = and i32 %12, 65535, !dbg !7509
  %conv9 = trunc i32 %and8 to i16, !dbg !7508
  %call10 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %11, i16 zeroext 1946, i16 zeroext %conv9) #8, !dbg !7510
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7511
  %14 = load i16, i16* %reg, align 2, !dbg !7512
  %conv11 = zext i16 %14 to i32, !dbg !7512
  %or = or i32 %conv11, 16384, !dbg !7513
  %15 = load i32, i32* %upd_demod_gain_period, align 4, !dbg !7514
  %shr = lshr i32 %15, 16, !dbg !7515
  %and12 = and i32 %shr, 255, !dbg !7516
  %or13 = or i32 %or, %and12, !dbg !7517
  %conv14 = trunc i32 %or13 to i16, !dbg !7512
  %call15 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %13, i16 zeroext 1947, i16 zeroext %conv14) #8, !dbg !7518
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7519
  %call16 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %16, i16 zeroext 1920) #8, !dbg !7520
  store i16 %call16, i16* %reg, align 2, !dbg !7521
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7522
  %18 = load i16, i16* %reg, align 2, !dbg !7523
  %conv17 = zext i16 %18 to i32, !dbg !7523
  %or18 = or i32 %conv17, 3, !dbg !7524
  %and19 = and i32 %or18, -129, !dbg !7525
  %conv20 = trunc i32 %and19 to i16, !dbg !7526
  %call21 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %17, i16 zeroext 1920, i16 zeroext %conv20) #8, !dbg !7527
  br label %if.end, !dbg !7528

if.else:                                          ; preds = %sw.bb
  %19 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7529
  call void @dib7000p_set_adc_state(%struct.dib7000p_state* %19, i32 2) #8, !dbg !7531
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7532
  call void @dib7000p_pll_clk_cfg(%struct.dib7000p_state* %20) #8, !dbg !7533
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7534
  %22 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7536
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %22, i32 0, i32 0, !dbg !7536
  %23 = load i32, i32* %frequency, align 4, !dbg !7536
  %div = udiv i32 %23, 1000, !dbg !7536
  %cmp22 = icmp ule i32 %div, 170000, !dbg !7536
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !7536

cond.true:                                        ; preds = %if.end
  br label %cond.end51, !dbg !7536

cond.false:                                       ; preds = %if.end
  %24 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7536
  %frequency24 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %24, i32 0, i32 0, !dbg !7536
  %25 = load i32, i32* %frequency24, align 4, !dbg !7536
  %div25 = udiv i32 %25, 1000, !dbg !7536
  %cmp26 = icmp ule i32 %div25, 115000, !dbg !7536
  br i1 %cmp26, label %cond.true28, label %cond.false29, !dbg !7536

cond.true28:                                      ; preds = %cond.false
  br label %cond.end49, !dbg !7536

cond.false29:                                     ; preds = %cond.false
  %26 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7536
  %frequency30 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %26, i32 0, i32 0, !dbg !7536
  %27 = load i32, i32* %frequency30, align 4, !dbg !7536
  %div31 = udiv i32 %27, 1000, !dbg !7536
  %cmp32 = icmp ule i32 %div31, 250000, !dbg !7536
  br i1 %cmp32, label %cond.true34, label %cond.false35, !dbg !7536

cond.true34:                                      ; preds = %cond.false29
  br label %cond.end47, !dbg !7536

cond.false35:                                     ; preds = %cond.false29
  %28 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7536
  %frequency36 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %28, i32 0, i32 0, !dbg !7536
  %29 = load i32, i32* %frequency36, align 4, !dbg !7536
  %div37 = udiv i32 %29, 1000, !dbg !7536
  %cmp38 = icmp ule i32 %div37, 863000, !dbg !7536
  br i1 %cmp38, label %cond.true40, label %cond.false41, !dbg !7536

cond.true40:                                      ; preds = %cond.false35
  br label %cond.end, !dbg !7536

cond.false41:                                     ; preds = %cond.false35
  %30 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7536
  %frequency42 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %30, i32 0, i32 0, !dbg !7536
  %31 = load i32, i32* %frequency42, align 4, !dbg !7536
  %div43 = udiv i32 %31, 1000, !dbg !7536
  %cmp44 = icmp ule i32 %div43, 2000000, !dbg !7536
  %32 = zext i1 %cmp44 to i64, !dbg !7536
  %cond = select i1 %cmp44, i32 1, i32 8, !dbg !7536
  br label %cond.end, !dbg !7536

cond.end:                                         ; preds = %cond.false41, %cond.true40
  %cond46 = phi i32 [ 2, %cond.true40 ], [ %cond, %cond.false41 ], !dbg !7536
  br label %cond.end47, !dbg !7536

cond.end47:                                       ; preds = %cond.end, %cond.true34
  %cond48 = phi i32 [ 4, %cond.true34 ], [ %cond46, %cond.end ], !dbg !7536
  br label %cond.end49, !dbg !7536

cond.end49:                                       ; preds = %cond.end47, %cond.true28
  %cond50 = phi i32 [ 16, %cond.true28 ], [ %cond48, %cond.end47 ], !dbg !7536
  br label %cond.end51, !dbg !7536

cond.end51:                                       ; preds = %cond.end49, %cond.true
  %cond52 = phi i32 [ 32, %cond.true ], [ %cond50, %cond.end49 ], !dbg !7536
  %conv53 = trunc i32 %cond52 to i8, !dbg !7536
  %call54 = call i32 @dib7000p_set_agc_config(%struct.dib7000p_state* %21, i8 zeroext %conv53) #8, !dbg !7537
  %cmp55 = icmp ne i32 %call54, 0, !dbg !7538
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !7539

if.then57:                                        ; preds = %cond.end51
  store i32 -1, i32* %retval, align 4, !dbg !7540
  br label %return, !dbg !7540

if.end58:                                         ; preds = %cond.end51
  %33 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7541
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %33, i32 0, i32 1, !dbg !7543
  %tuner_ops = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 30, !dbg !7544
  %get_frequency = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops, i32 0, i32 9, !dbg !7545
  %34 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %get_frequency, align 8, !dbg !7545
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32*)* %34, null, !dbg !7541
  br i1 %tobool, label %if.then59, label %if.end67, !dbg !7546

if.then59:                                        ; preds = %if.end58
  call void @llvm.dbg.declare(metadata i32* %frequency_tuner, metadata !7547, metadata !DIExpression()), !dbg !7549
  %35 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7550
  %ops60 = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %35, i32 0, i32 1, !dbg !7551
  %tuner_ops61 = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops60, i32 0, i32 30, !dbg !7552
  %get_frequency62 = getelementptr inbounds %struct.dvb_tuner_ops, %struct.dvb_tuner_ops* %tuner_ops61, i32 0, i32 9, !dbg !7553
  %36 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %get_frequency62, align 8, !dbg !7553
  %37 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7554
  %call63 = call i32 %36(%struct.dvb_frontend* %37, i32* %frequency_tuner) #8, !dbg !7550
  %38 = load i32, i32* %frequency_tuner, align 4, !dbg !7555
  %div64 = sdiv i32 %38, 1000, !dbg !7556
  %39 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7557
  %frequency65 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %39, i32 0, i32 0, !dbg !7558
  %40 = load i32, i32* %frequency65, align 4, !dbg !7558
  %div66 = udiv i32 %40, 1000, !dbg !7559
  %sub = sub i32 %div64, %div66, !dbg !7560
  store i32 %sub, i32* %frequency_offset, align 4, !dbg !7561
  br label %if.end67, !dbg !7562

if.end67:                                         ; preds = %if.then59, %if.end58
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7563
  %42 = load i32, i32* %frequency_offset, align 4, !dbg !7565
  %call68 = call i32 @dib7000p_set_dds(%struct.dib7000p_state* %41, i32 %42) #8, !dbg !7566
  %cmp69 = icmp slt i32 %call68, 0, !dbg !7567
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !7568

if.then71:                                        ; preds = %if.end67
  store i32 -1, i32* %retval, align 4, !dbg !7569
  br label %return, !dbg !7569

if.end72:                                         ; preds = %if.end67
  store i32 7, i32* %ret, align 4, !dbg !7570
  %43 = load i8*, i8** %agc_state, align 8, !dbg !7571
  %44 = load i8, i8* %43, align 1, !dbg !7572
  %inc = add i8 %44, 1, !dbg !7572
  store i8 %inc, i8* %43, align 1, !dbg !7572
  br label %sw.epilog, !dbg !7573

sw.bb73:                                          ; preds = %entry
  %45 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7574
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %45, i32 0, i32 1, !dbg !7576
  %agc_control = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 13, !dbg !7577
  %46 = load i32 (%struct.dvb_frontend*, i8)*, i32 (%struct.dvb_frontend*, i8)** %agc_control, align 8, !dbg !7577
  %tobool74 = icmp ne i32 (%struct.dvb_frontend*, i8)* %46, null, !dbg !7574
  br i1 %tobool74, label %if.then75, label %if.end80, !dbg !7578

if.then75:                                        ; preds = %sw.bb73
  %47 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7579
  %cfg76 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %47, i32 0, i32 1, !dbg !7580
  %agc_control77 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg76, i32 0, i32 13, !dbg !7581
  %48 = load i32 (%struct.dvb_frontend*, i8)*, i32 (%struct.dvb_frontend*, i8)** %agc_control77, align 8, !dbg !7581
  %49 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7582
  %demod78 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %49, i32 0, i32 0, !dbg !7583
  %call79 = call i32 %48(%struct.dvb_frontend* %demod78, i8 zeroext 1) #8, !dbg !7579
  br label %if.end80, !dbg !7579

if.end80:                                         ; preds = %if.then75, %sw.bb73
  %50 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7584
  %call81 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %50, i16 zeroext 78, i16 zeroext -32768) #8, !dbg !7585
  %51 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7586
  %current_agc = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %51, i32 0, i32 8, !dbg !7588
  %52 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc, align 8, !dbg !7588
  %perform_agc_softsplit = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %52, i32 0, i32 27, !dbg !7589
  %53 = load i8, i8* %perform_agc_softsplit, align 1, !dbg !7589
  %tobool82 = icmp ne i8 %53, 0, !dbg !7586
  br i1 %tobool82, label %if.else94, label %if.then83, !dbg !7590

if.then83:                                        ; preds = %if.end80
  %54 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7591
  %55 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7593
  %current_agc84 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %55, i32 0, i32 8, !dbg !7594
  %56 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc84, align 8, !dbg !7594
  %wbd_sel = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %56, i32 0, i32 8, !dbg !7595
  %57 = load i8, i8* %wbd_sel, align 2, !dbg !7595
  %conv85 = zext i8 %57 to i32, !dbg !7593
  %shl = shl i32 %conv85, 13, !dbg !7596
  %58 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7597
  %current_agc86 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %58, i32 0, i32 8, !dbg !7598
  %59 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc86, align 8, !dbg !7598
  %wbd_alpha = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %59, i32 0, i32 9, !dbg !7599
  %60 = load i8, i8* %wbd_alpha, align 1, !dbg !7599
  %conv87 = zext i8 %60 to i32, !dbg !7597
  %shl88 = shl i32 %conv87, 9, !dbg !7600
  %or89 = or i32 %shl, %shl88, !dbg !7601
  %or90 = or i32 %or89, 256, !dbg !7602
  %conv91 = trunc i32 %or90 to i16, !dbg !7603
  %call92 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %54, i16 zeroext 106, i16 zeroext %conv91) #8, !dbg !7604
  %61 = load i8*, i8** %agc_state, align 8, !dbg !7605
  %62 = load i8, i8* %61, align 1, !dbg !7606
  %inc93 = add i8 %62, 1, !dbg !7606
  store i8 %inc93, i8* %61, align 1, !dbg !7606
  store i32 5, i32* %ret, align 4, !dbg !7607
  br label %if.end95, !dbg !7608

if.else94:                                        ; preds = %if.end80
  %63 = load i8*, i8** %agc_state, align 8, !dbg !7609
  store i8 4, i8* %63, align 1, !dbg !7611
  store i32 7, i32* %ret, align 4, !dbg !7612
  br label %if.end95

if.end95:                                         ; preds = %if.else94, %if.then83
  %64 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7613
  call void @dib7000p_restart_agc(%struct.dib7000p_state* %64) #8, !dbg !7614
  br label %sw.epilog, !dbg !7615

sw.bb96:                                          ; preds = %entry
  %65 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7616
  %66 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7617
  %current_agc97 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %66, i32 0, i32 8, !dbg !7618
  %67 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc97, align 8, !dbg !7618
  %setup = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %67, i32 0, i32 1, !dbg !7619
  %68 = load i16, i16* %setup, align 2, !dbg !7619
  %conv98 = zext i16 %68 to i32, !dbg !7617
  %or99 = or i32 %conv98, 16, !dbg !7620
  %conv100 = trunc i32 %or99 to i16, !dbg !7617
  %call101 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %65, i16 zeroext 75, i16 zeroext %conv100) #8, !dbg !7621
  %69 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7622
  %70 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7623
  %current_agc102 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %70, i32 0, i32 8, !dbg !7624
  %71 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc102, align 8, !dbg !7624
  %wbd_sel103 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %71, i32 0, i32 8, !dbg !7625
  %72 = load i8, i8* %wbd_sel103, align 2, !dbg !7625
  %conv104 = zext i8 %72 to i32, !dbg !7623
  %shl105 = shl i32 %conv104, 13, !dbg !7626
  %or106 = or i32 %shl105, 1024, !dbg !7627
  %conv107 = trunc i32 %or106 to i16, !dbg !7628
  %call108 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %69, i16 zeroext 106, i16 zeroext %conv107) #8, !dbg !7629
  %73 = load i8*, i8** %agc_state, align 8, !dbg !7630
  %74 = load i8, i8* %73, align 1, !dbg !7631
  %inc109 = add i8 %74, 1, !dbg !7631
  store i8 %inc109, i8* %73, align 1, !dbg !7631
  store i32 14, i32* %ret, align 4, !dbg !7632
  br label %sw.epilog, !dbg !7633

sw.bb110:                                         ; preds = %entry
  %75 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7634
  %call111 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %75, i16 zeroext 396) #8, !dbg !7635
  %conv112 = trunc i16 %call111 to i8, !dbg !7636
  store i8 %conv112, i8* %agc_split, align 1, !dbg !7637
  %76 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7638
  %77 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7639
  %call113 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %77, i16 zeroext 394) #8, !dbg !7640
  %call114 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %76, i16 zeroext 78, i16 zeroext %call113) #8, !dbg !7641
  %78 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7642
  %79 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7643
  %current_agc115 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %79, i32 0, i32 8, !dbg !7644
  %80 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc115, align 8, !dbg !7644
  %setup116 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %80, i32 0, i32 1, !dbg !7645
  %81 = load i16, i16* %setup116, align 2, !dbg !7645
  %call117 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %78, i16 zeroext 75, i16 zeroext %81) #8, !dbg !7646
  %82 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7647
  %83 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7648
  %current_agc118 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %83, i32 0, i32 8, !dbg !7649
  %84 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc118, align 8, !dbg !7649
  %wbd_sel119 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %84, i32 0, i32 8, !dbg !7650
  %85 = load i8, i8* %wbd_sel119, align 2, !dbg !7650
  %conv120 = zext i8 %85 to i32, !dbg !7648
  %shl121 = shl i32 %conv120, 13, !dbg !7651
  %86 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7652
  %current_agc122 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %86, i32 0, i32 8, !dbg !7653
  %87 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc122, align 8, !dbg !7653
  %wbd_alpha123 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %87, i32 0, i32 9, !dbg !7654
  %88 = load i8, i8* %wbd_alpha123, align 1, !dbg !7654
  %conv124 = zext i8 %88 to i32, !dbg !7652
  %shl125 = shl i32 %conv124, 9, !dbg !7655
  %or126 = or i32 %shl121, %shl125, !dbg !7656
  %89 = load i8, i8* %agc_split, align 1, !dbg !7657
  %conv127 = zext i8 %89 to i32, !dbg !7657
  %or128 = or i32 %or126, %conv127, !dbg !7658
  %conv129 = trunc i32 %or128 to i16, !dbg !7659
  %call130 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %82, i16 zeroext 106, i16 zeroext %conv129) #8, !dbg !7660
  %90 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7661
  call void @dib7000p_restart_agc(%struct.dib7000p_state* %90) #8, !dbg !7662
  br label %do.body, !dbg !7663

do.body:                                          ; preds = %sw.bb110
  %91 = load i32, i32* @debug, align 4, !dbg !7664
  %tobool131 = icmp ne i32 %91, 0, !dbg !7664
  br i1 %tobool131, label %if.then132, label %if.end135, !dbg !7667

if.then132:                                       ; preds = %do.body
  %92 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7664
  %93 = load i8, i8* %agc_split, align 1, !dbg !7664
  %conv133 = zext i8 %93 to i32, !dbg !7664
  %call134 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dib7000p_agc_startup, i64 0, i64 0), %struct.dvb_frontend* %92, i32 %conv133) #9, !dbg !7664
  br label %if.end135, !dbg !7664

if.end135:                                        ; preds = %if.then132, %do.body
  br label %do.end, !dbg !7667

do.end:                                           ; preds = %if.end135
  %94 = load i8*, i8** %agc_state, align 8, !dbg !7668
  %95 = load i8, i8* %94, align 1, !dbg !7669
  %inc136 = add i8 %95, 1, !dbg !7669
  store i8 %inc136, i8* %94, align 1, !dbg !7669
  store i32 5, i32* %ret, align 4, !dbg !7670
  br label %sw.epilog, !dbg !7671

sw.bb137:                                         ; preds = %entry
  store i32 7, i32* %ret, align 4, !dbg !7672
  %96 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7673
  %call138 = call i32 @dib7000p_update_lna(%struct.dib7000p_state* %96) #8, !dbg !7675
  %tobool139 = icmp ne i32 %call138, 0, !dbg !7675
  br i1 %tobool139, label %if.then140, label %if.else141, !dbg !7676

if.then140:                                       ; preds = %sw.bb137
  store i32 5, i32* %ret, align 4, !dbg !7677
  br label %if.end143, !dbg !7678

if.else141:                                       ; preds = %sw.bb137
  %97 = load i8*, i8** %agc_state, align 8, !dbg !7679
  %98 = load i8, i8* %97, align 1, !dbg !7680
  %inc142 = add i8 %98, 1, !dbg !7680
  store i8 %inc142, i8* %97, align 1, !dbg !7680
  br label %if.end143

if.end143:                                        ; preds = %if.else141, %if.then140
  br label %sw.epilog, !dbg !7681

sw.bb144:                                         ; preds = %entry
  %99 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7682
  %cfg145 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %99, i32 0, i32 1, !dbg !7684
  %agc_control146 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg145, i32 0, i32 13, !dbg !7685
  %100 = load i32 (%struct.dvb_frontend*, i8)*, i32 (%struct.dvb_frontend*, i8)** %agc_control146, align 8, !dbg !7685
  %tobool147 = icmp ne i32 (%struct.dvb_frontend*, i8)* %100, null, !dbg !7682
  br i1 %tobool147, label %if.then148, label %if.end153, !dbg !7686

if.then148:                                       ; preds = %sw.bb144
  %101 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7687
  %cfg149 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %101, i32 0, i32 1, !dbg !7688
  %agc_control150 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg149, i32 0, i32 13, !dbg !7689
  %102 = load i32 (%struct.dvb_frontend*, i8)*, i32 (%struct.dvb_frontend*, i8)** %agc_control150, align 8, !dbg !7689
  %103 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7690
  %demod151 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %103, i32 0, i32 0, !dbg !7691
  %call152 = call i32 %102(%struct.dvb_frontend* %demod151, i8 zeroext 0) #8, !dbg !7687
  br label %if.end153, !dbg !7687

if.end153:                                        ; preds = %if.then148, %sw.bb144
  %104 = load i8*, i8** %agc_state, align 8, !dbg !7692
  %105 = load i8, i8* %104, align 1, !dbg !7693
  %inc154 = add i8 %105, 1, !dbg !7693
  store i8 %inc154, i8* %104, align 1, !dbg !7693
  br label %sw.epilog, !dbg !7694

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !7695

sw.epilog:                                        ; preds = %sw.default, %if.end153, %if.end143, %do.end, %sw.bb96, %if.end95, %if.end72
  %106 = load i32, i32* %ret, align 4, !dbg !7696
  store i32 %106, i32* %retval, align 4, !dbg !7697
  br label %return, !dbg !7697

return:                                           ; preds = %sw.epilog, %if.then71, %if.then57
  %107 = load i32, i32* %retval, align 4, !dbg !7698
  ret i32 %107, !dbg !7698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_autosearch_start(%struct.dvb_frontend* %demod) #0 !dbg !7699 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %ch = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %schan = alloca %struct.dtv_frontend_properties, align 4
  %value = alloca i32, align 4
  %factor = alloca i32, align 4
  %internal = alloca i32, align 4
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !7700, metadata !DIExpression()), !dbg !7701
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %ch, metadata !7702, metadata !DIExpression()), !dbg !7703
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7704
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !7705
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7703
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7706, metadata !DIExpression()), !dbg !7707
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7708
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !7709
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !7709
  %3 = bitcast i8* %2 to %struct.dib7000p_state*, !dbg !7708
  store %struct.dib7000p_state* %3, %struct.dib7000p_state** %state, align 8, !dbg !7707
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties* %schan, metadata !7710, metadata !DIExpression()), !dbg !7711
  call void @llvm.dbg.declare(metadata i32* %value, metadata !7712, metadata !DIExpression()), !dbg !7713
  call void @llvm.dbg.declare(metadata i32* %factor, metadata !7714, metadata !DIExpression()), !dbg !7715
  call void @llvm.dbg.declare(metadata i32* %internal, metadata !7716, metadata !DIExpression()), !dbg !7717
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7718
  %call = call i32 @dib7000p_get_internal_freq(%struct.dib7000p_state* %4) #8, !dbg !7719
  store i32 %call, i32* %internal, align 4, !dbg !7717
  %5 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7720
  %6 = bitcast %struct.dtv_frontend_properties* %schan to i8*, !dbg !7721
  %7 = bitcast %struct.dtv_frontend_properties* %5 to i8*, !dbg !7721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 456, i1 false), !dbg !7721
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %schan, i32 0, i32 1, !dbg !7722
  store i32 3, i32* %modulation, align 4, !dbg !7723
  %guard_interval = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %schan, i32 0, i32 8, !dbg !7724
  store i32 0, i32* %guard_interval, align 4, !dbg !7725
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %schan, i32 0, i32 6, !dbg !7726
  store i32 1, i32* %transmission_mode, align 4, !dbg !7727
  %code_rate_HP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %schan, i32 0, i32 11, !dbg !7728
  store i32 2, i32* %code_rate_HP, align 4, !dbg !7729
  %code_rate_LP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %schan, i32 0, i32 12, !dbg !7730
  store i32 3, i32* %code_rate_LP, align 4, !dbg !7731
  %hierarchy = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %schan, i32 0, i32 9, !dbg !7732
  store i32 0, i32* %hierarchy, align 4, !dbg !7733
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7734
  call void @dib7000p_set_channel(%struct.dib7000p_state* %8, %struct.dtv_frontend_properties* %schan, i8 zeroext 7) #8, !dbg !7735
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7736
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 7, !dbg !7736
  %10 = load i32, i32* %bandwidth_hz, align 4, !dbg !7736
  %div = udiv i32 %10, 1000, !dbg !7736
  store i32 %div, i32* %factor, align 4, !dbg !7737
  %11 = load i32, i32* %factor, align 4, !dbg !7738
  %cmp = icmp uge i32 %11, 5000, !dbg !7740
  br i1 %cmp, label %if.then, label %if.else4, !dbg !7741

if.then:                                          ; preds = %entry
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7742
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %12, i32 0, i32 16, !dbg !7745
  %13 = load i16, i16* %version, align 8, !dbg !7745
  %conv = zext i16 %13 to i32, !dbg !7742
  %cmp1 = icmp eq i32 %conv, 28816, !dbg !7746
  br i1 %cmp1, label %if.then3, label %if.else, !dbg !7747

if.then3:                                         ; preds = %if.then
  store i32 2, i32* %factor, align 4, !dbg !7748
  br label %if.end, !dbg !7749

if.else:                                          ; preds = %if.then
  store i32 1, i32* %factor, align 4, !dbg !7750
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end5, !dbg !7751

if.else4:                                         ; preds = %entry
  store i32 6, i32* %factor, align 4, !dbg !7752
  br label %if.end5

if.end5:                                          ; preds = %if.else4, %if.end
  %14 = load i32, i32* %internal, align 4, !dbg !7753
  %mul = mul i32 30, %14, !dbg !7754
  %15 = load i32, i32* %factor, align 4, !dbg !7755
  %mul6 = mul i32 %mul, %15, !dbg !7756
  store i32 %mul6, i32* %value, align 4, !dbg !7757
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7758
  %17 = load i32, i32* %value, align 4, !dbg !7759
  %shr = lshr i32 %17, 16, !dbg !7760
  %and = and i32 %shr, 65535, !dbg !7761
  %conv7 = trunc i32 %and to i16, !dbg !7762
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 6, i16 zeroext %conv7) #8, !dbg !7763
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7764
  %19 = load i32, i32* %value, align 4, !dbg !7765
  %and9 = and i32 %19, 65535, !dbg !7766
  %conv10 = trunc i32 %and9 to i16, !dbg !7767
  %call11 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %18, i16 zeroext 7, i16 zeroext %conv10) #8, !dbg !7768
  %20 = load i32, i32* %internal, align 4, !dbg !7769
  %mul12 = mul i32 100, %20, !dbg !7770
  %21 = load i32, i32* %factor, align 4, !dbg !7771
  %mul13 = mul i32 %mul12, %21, !dbg !7772
  store i32 %mul13, i32* %value, align 4, !dbg !7773
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7774
  %23 = load i32, i32* %value, align 4, !dbg !7775
  %shr14 = lshr i32 %23, 16, !dbg !7776
  %and15 = and i32 %shr14, 65535, !dbg !7777
  %conv16 = trunc i32 %and15 to i16, !dbg !7778
  %call17 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 8, i16 zeroext %conv16) #8, !dbg !7779
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7780
  %25 = load i32, i32* %value, align 4, !dbg !7781
  %and18 = and i32 %25, 65535, !dbg !7782
  %conv19 = trunc i32 %and18 to i16, !dbg !7783
  %call20 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %24, i16 zeroext 9, i16 zeroext %conv19) #8, !dbg !7784
  %26 = load i32, i32* %internal, align 4, !dbg !7785
  %mul21 = mul i32 500, %26, !dbg !7786
  %27 = load i32, i32* %factor, align 4, !dbg !7787
  %mul22 = mul i32 %mul21, %27, !dbg !7788
  store i32 %mul22, i32* %value, align 4, !dbg !7789
  %28 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7790
  %29 = load i32, i32* %value, align 4, !dbg !7791
  %shr23 = lshr i32 %29, 16, !dbg !7792
  %and24 = and i32 %shr23, 65535, !dbg !7793
  %conv25 = trunc i32 %and24 to i16, !dbg !7794
  %call26 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %28, i16 zeroext 10, i16 zeroext %conv25) #8, !dbg !7795
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7796
  %31 = load i32, i32* %value, align 4, !dbg !7797
  %and27 = and i32 %31, 65535, !dbg !7798
  %conv28 = trunc i32 %and27 to i16, !dbg !7799
  %call29 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %30, i16 zeroext 11, i16 zeroext %conv28) #8, !dbg !7800
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7801
  %call30 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %32, i16 zeroext 0) #8, !dbg !7802
  %conv31 = zext i16 %call30 to i32, !dbg !7802
  store i32 %conv31, i32* %value, align 4, !dbg !7803
  %33 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7804
  %34 = load i32, i32* %value, align 4, !dbg !7805
  %or = or i32 512, %34, !dbg !7806
  %conv32 = trunc i32 %or to i16, !dbg !7807
  %call33 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %33, i16 zeroext 0, i16 zeroext %conv32) #8, !dbg !7808
  %35 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7809
  %call34 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %35, i16 zeroext 1284) #8, !dbg !7810
  %36 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7811
  %37 = load i32, i32* %value, align 4, !dbg !7812
  %conv35 = trunc i32 %37 to i16, !dbg !7813
  %call36 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %36, i16 zeroext 0, i16 zeroext %conv35) #8, !dbg !7814
  ret i32 0, !dbg !7815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_autosearch_is_irq(%struct.dvb_frontend* %demod) #0 !dbg !7816 {
entry:
  %retval = alloca i32, align 4
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %irq_pending = alloca i16, align 2
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !7817, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7819, metadata !DIExpression()), !dbg !7820
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7821
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7822
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7822
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !7821
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !7820
  call void @llvm.dbg.declare(metadata i16* %irq_pending, metadata !7823, metadata !DIExpression()), !dbg !7824
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7825
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 1284) #8, !dbg !7826
  store i16 %call, i16* %irq_pending, align 2, !dbg !7824
  %4 = load i16, i16* %irq_pending, align 2, !dbg !7827
  %conv = zext i16 %4 to i32, !dbg !7827
  %and = and i32 %conv, 1, !dbg !7829
  %tobool = icmp ne i32 %and, 0, !dbg !7829
  br i1 %tobool, label %if.then, label %if.end, !dbg !7830

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7831
  br label %return, !dbg !7831

if.end:                                           ; preds = %entry
  %5 = load i16, i16* %irq_pending, align 2, !dbg !7832
  %conv1 = zext i16 %5 to i32, !dbg !7832
  %and2 = and i32 %conv1, 2, !dbg !7834
  %tobool3 = icmp ne i32 %and2, 0, !dbg !7834
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !7835

if.then4:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !7836
  br label %return, !dbg !7836

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !7837
  br label %return, !dbg !7837

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7838
  ret i32 %6, !dbg !7838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_tune(%struct.dvb_frontend* %demod) #0 !dbg !7839 {
entry:
  %retval = alloca i32, align 4
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %ch = alloca %struct.dtv_frontend_properties*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %tmp = alloca i16, align 2
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %ch, metadata !7842, metadata !DIExpression()), !dbg !7843
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7844
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !7845
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7843
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !7846, metadata !DIExpression()), !dbg !7847
  %1 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7848
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %1, i32 0, i32 3, !dbg !7849
  %2 = load i8*, i8** %demodulator_priv, align 8, !dbg !7849
  %3 = bitcast i8* %2 to %struct.dib7000p_state*, !dbg !7848
  store %struct.dib7000p_state* %3, %struct.dib7000p_state** %state, align 8, !dbg !7847
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !7850, metadata !DIExpression()), !dbg !7851
  store i16 0, i16* %tmp, align 2, !dbg !7851
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7852
  %cmp = icmp ne %struct.dtv_frontend_properties* %4, null, !dbg !7854
  br i1 %cmp, label %if.then, label %if.else, !dbg !7855

if.then:                                          ; preds = %entry
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7856
  %6 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7857
  call void @dib7000p_set_channel(%struct.dib7000p_state* %5, %struct.dtv_frontend_properties* %6, i8 zeroext 0) #8, !dbg !7858
  br label %if.end, !dbg !7858

if.else:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7859
  br label %return, !dbg !7859

if.end:                                           ; preds = %if.then
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7860
  %call = call i32 @dib7000p_write_word(%struct.dib7000p_state* %7, i16 zeroext 770, i16 zeroext 16384) #8, !dbg !7861
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7862
  %call1 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %8, i16 zeroext 770, i16 zeroext 0) #8, !dbg !7863
  call void @msleep(i32 45) #8, !dbg !7864
  store i16 4211, i16* %tmp, align 2, !dbg !7865
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7866
  %sfn_workaround_active = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 15, !dbg !7868
  %bf.load = load i8, i8* %sfn_workaround_active, align 2, !dbg !7868
  %bf.clear = and i8 %bf.load, 1, !dbg !7868
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !7866
  br i1 %tobool, label %if.then2, label %if.else9, !dbg !7869

if.then2:                                         ; preds = %if.end
  br label %do.body, !dbg !7870

do.body:                                          ; preds = %if.then2
  %10 = load i32, i32* @debug, align 4, !dbg !7872
  %tobool3 = icmp ne i32 %10, 0, !dbg !7872
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7875

if.then4:                                         ; preds = %do.body
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.dib7000p_tune, i64 0, i64 0)) #9, !dbg !7872
  br label %if.end6, !dbg !7872

if.end6:                                          ; preds = %if.then4, %do.body
  br label %do.end, !dbg !7875

do.end:                                           ; preds = %if.end6
  %11 = load i16, i16* %tmp, align 2, !dbg !7876
  %conv = zext i16 %11 to i32, !dbg !7876
  %or = or i32 %conv, 512, !dbg !7876
  %conv7 = trunc i32 %or to i16, !dbg !7876
  store i16 %conv7, i16* %tmp, align 2, !dbg !7876
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7877
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 166, i16 zeroext 16384) #8, !dbg !7878
  br label %if.end11, !dbg !7879

if.else9:                                         ; preds = %if.end
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7880
  %call10 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %13, i16 zeroext 166, i16 zeroext 0) #8, !dbg !7882
  br label %if.end11

if.end11:                                         ; preds = %if.else9, %do.end
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7883
  %15 = load i16, i16* %tmp, align 2, !dbg !7884
  %call12 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 29, i16 zeroext %15) #8, !dbg !7885
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7886
  %timf = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %16, i32 0, i32 9, !dbg !7888
  %17 = load i32, i32* %timf, align 8, !dbg !7888
  %cmp13 = icmp eq i32 %17, 0, !dbg !7889
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !7890

if.then15:                                        ; preds = %if.end11
  call void @msleep(i32 200) #8, !dbg !7891
  br label %if.end16, !dbg !7891

if.end16:                                         ; preds = %if.then15, %if.end11
  store i16 1664, i16* %tmp, align 2, !dbg !7892
  %18 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7893
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %18, i32 0, i32 6, !dbg !7894
  %19 = load i32, i32* %transmission_mode, align 4, !dbg !7894
  switch i32 %19, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb20
    i32 1, label %sw.bb24
  ], !dbg !7895

sw.bb:                                            ; preds = %if.end16
  %20 = load i16, i16* %tmp, align 2, !dbg !7896
  %conv17 = zext i16 %20 to i32, !dbg !7896
  %or18 = or i32 %conv17, 8192, !dbg !7896
  %conv19 = trunc i32 %or18 to i16, !dbg !7896
  store i16 %conv19, i16* %tmp, align 2, !dbg !7896
  br label %sw.epilog, !dbg !7898

sw.bb20:                                          ; preds = %if.end16
  %21 = load i16, i16* %tmp, align 2, !dbg !7899
  %conv21 = zext i16 %21 to i32, !dbg !7899
  %or22 = or i32 %conv21, 12288, !dbg !7899
  %conv23 = trunc i32 %or22 to i16, !dbg !7899
  store i16 %conv23, i16* %tmp, align 2, !dbg !7899
  br label %sw.epilog, !dbg !7900

sw.default:                                       ; preds = %if.end16
  br label %sw.bb24, !dbg !7900

sw.bb24:                                          ; preds = %if.end16, %sw.default
  %22 = load i16, i16* %tmp, align 2, !dbg !7901
  %conv25 = zext i16 %22 to i32, !dbg !7901
  %or26 = or i32 %conv25, 16384, !dbg !7901
  %conv27 = trunc i32 %or26 to i16, !dbg !7901
  store i16 %conv27, i16* %tmp, align 2, !dbg !7901
  br label %sw.epilog, !dbg !7902

sw.epilog:                                        ; preds = %sw.bb24, %sw.bb20, %sw.bb
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7903
  %24 = load i16, i16* %tmp, align 2, !dbg !7904
  %call28 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %23, i16 zeroext 26, i16 zeroext %24) #8, !dbg !7905
  store i16 0, i16* %tmp, align 2, !dbg !7906
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7907
  %transmission_mode29 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 6, !dbg !7908
  %26 = load i32, i32* %transmission_mode29, align 4, !dbg !7908
  switch i32 %26, label %sw.default38 [
    i32 0, label %sw.bb30
    i32 3, label %sw.bb34
    i32 1, label %sw.bb39
  ], !dbg !7909

sw.bb30:                                          ; preds = %sw.epilog
  %27 = load i16, i16* %tmp, align 2, !dbg !7910
  %conv31 = zext i16 %27 to i32, !dbg !7910
  %or32 = or i32 %conv31, 6, !dbg !7910
  %conv33 = trunc i32 %or32 to i16, !dbg !7910
  store i16 %conv33, i16* %tmp, align 2, !dbg !7910
  br label %sw.epilog43, !dbg !7912

sw.bb34:                                          ; preds = %sw.epilog
  %28 = load i16, i16* %tmp, align 2, !dbg !7913
  %conv35 = zext i16 %28 to i32, !dbg !7913
  %or36 = or i32 %conv35, 7, !dbg !7913
  %conv37 = trunc i32 %or36 to i16, !dbg !7913
  store i16 %conv37, i16* %tmp, align 2, !dbg !7913
  br label %sw.epilog43, !dbg !7914

sw.default38:                                     ; preds = %sw.epilog
  br label %sw.bb39, !dbg !7914

sw.bb39:                                          ; preds = %sw.epilog, %sw.default38
  %29 = load i16, i16* %tmp, align 2, !dbg !7915
  %conv40 = zext i16 %29 to i32, !dbg !7915
  %or41 = or i32 %conv40, 8, !dbg !7915
  %conv42 = trunc i32 %or41 to i16, !dbg !7915
  store i16 %conv42, i16* %tmp, align 2, !dbg !7915
  br label %sw.epilog43, !dbg !7916

sw.epilog43:                                      ; preds = %sw.bb39, %sw.bb34, %sw.bb30
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7917
  %31 = load i16, i16* %tmp, align 2, !dbg !7918
  %call44 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %30, i16 zeroext 32, i16 zeroext %31) #8, !dbg !7919
  store i16 0, i16* %tmp, align 2, !dbg !7920
  %32 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7921
  %transmission_mode45 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %32, i32 0, i32 6, !dbg !7922
  %33 = load i32, i32* %transmission_mode45, align 4, !dbg !7922
  switch i32 %33, label %sw.default54 [
    i32 0, label %sw.bb46
    i32 3, label %sw.bb50
    i32 1, label %sw.bb55
  ], !dbg !7923

sw.bb46:                                          ; preds = %sw.epilog43
  %34 = load i16, i16* %tmp, align 2, !dbg !7924
  %conv47 = zext i16 %34 to i32, !dbg !7924
  %or48 = or i32 %conv47, 6, !dbg !7924
  %conv49 = trunc i32 %or48 to i16, !dbg !7924
  store i16 %conv49, i16* %tmp, align 2, !dbg !7924
  br label %sw.epilog59, !dbg !7926

sw.bb50:                                          ; preds = %sw.epilog43
  %35 = load i16, i16* %tmp, align 2, !dbg !7927
  %conv51 = zext i16 %35 to i32, !dbg !7927
  %or52 = or i32 %conv51, 7, !dbg !7927
  %conv53 = trunc i32 %or52 to i16, !dbg !7927
  store i16 %conv53, i16* %tmp, align 2, !dbg !7927
  br label %sw.epilog59, !dbg !7928

sw.default54:                                     ; preds = %sw.epilog43
  br label %sw.bb55, !dbg !7928

sw.bb55:                                          ; preds = %sw.epilog43, %sw.default54
  %36 = load i16, i16* %tmp, align 2, !dbg !7929
  %conv56 = zext i16 %36 to i32, !dbg !7929
  %or57 = or i32 %conv56, 8, !dbg !7929
  %conv58 = trunc i32 %or57 to i16, !dbg !7929
  store i16 %conv58, i16* %tmp, align 2, !dbg !7929
  br label %sw.epilog59, !dbg !7930

sw.epilog59:                                      ; preds = %sw.bb55, %sw.bb50, %sw.bb46
  %37 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7931
  %38 = load i16, i16* %tmp, align 2, !dbg !7932
  %call60 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %37, i16 zeroext 33, i16 zeroext %38) #8, !dbg !7933
  %39 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7934
  %call61 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %39, i16 zeroext 509) #8, !dbg !7935
  store i16 %call61, i16* %tmp, align 2, !dbg !7936
  %40 = load i16, i16* %tmp, align 2, !dbg !7937
  %conv62 = zext i16 %40 to i32, !dbg !7937
  %shr = ashr i32 %conv62, 6, !dbg !7939
  %and = and i32 %shr, 1, !dbg !7940
  %tobool63 = icmp ne i32 %and, 0, !dbg !7940
  br i1 %tobool63, label %if.end72, label %if.then64, !dbg !7941

if.then64:                                        ; preds = %sw.epilog59
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7942
  %call65 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %41, i16 zeroext 771) #8, !dbg !7944
  store i16 %call65, i16* %tmp, align 2, !dbg !7945
  %42 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7946
  %43 = load i16, i16* %tmp, align 2, !dbg !7947
  %conv66 = zext i16 %43 to i32, !dbg !7947
  %or67 = or i32 %conv66, 2, !dbg !7948
  %conv68 = trunc i32 %or67 to i16, !dbg !7947
  %call69 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %42, i16 zeroext 771, i16 zeroext %conv68) #8, !dbg !7949
  %44 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7950
  %45 = load i16, i16* %tmp, align 2, !dbg !7951
  %call70 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %44, i16 zeroext 771, i16 zeroext %45) #8, !dbg !7952
  call void @msleep(i32 40) #8, !dbg !7953
  %46 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7954
  %call71 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %46, i16 zeroext 509) #8, !dbg !7955
  store i16 %call71, i16* %tmp, align 2, !dbg !7956
  br label %if.end72, !dbg !7957

if.end72:                                         ; preds = %if.then64, %sw.epilog59
  %47 = load i16, i16* %tmp, align 2, !dbg !7958
  %conv73 = zext i16 %47 to i32, !dbg !7958
  %shr74 = ashr i32 %conv73, 6, !dbg !7960
  %and75 = and i32 %shr74, 1, !dbg !7961
  %tobool76 = icmp ne i32 %and75, 0, !dbg !7961
  br i1 %tobool76, label %if.then77, label %if.end87, !dbg !7962

if.then77:                                        ; preds = %if.end72
  %48 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7963
  call void @dib7000p_update_timf(%struct.dib7000p_state* %48) #8, !dbg !7965
  %49 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7966
  %call78 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %49, i16 zeroext 26) #8, !dbg !7967
  store i16 %call78, i16* %tmp, align 2, !dbg !7968
  %50 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7969
  %51 = load i16, i16* %tmp, align 2, !dbg !7970
  %conv79 = zext i16 %51 to i32, !dbg !7970
  %and80 = and i32 %conv79, -61441, !dbg !7971
  %52 = load i16, i16* %tmp, align 2, !dbg !7972
  %conv81 = zext i16 %52 to i32, !dbg !7972
  %shr82 = ashr i32 %conv81, 12, !dbg !7973
  %and83 = and i32 %shr82, 15, !dbg !7974
  %add = add i32 %and83, 5, !dbg !7975
  %shl = shl i32 %add, 12, !dbg !7976
  %or84 = or i32 %and80, %shl, !dbg !7977
  %conv85 = trunc i32 %or84 to i16, !dbg !7978
  %call86 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %50, i16 zeroext 26, i16 zeroext %conv85) #8, !dbg !7979
  br label %if.end87, !dbg !7980

if.end87:                                         ; preds = %if.then77, %if.end72
  %53 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7981
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %53, i32 0, i32 1, !dbg !7983
  %spur_protect = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 12, !dbg !7984
  %54 = load i8, i8* %spur_protect, align 1, !dbg !7984
  %tobool88 = icmp ne i8 %54, 0, !dbg !7981
  br i1 %tobool88, label %if.then89, label %if.end91, !dbg !7985

if.then89:                                        ; preds = %if.end87
  %55 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7986
  %56 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7987
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %56, i32 0, i32 0, !dbg !7988
  %57 = load i32, i32* %frequency, align 4, !dbg !7988
  %div = udiv i32 %57, 1000, !dbg !7989
  %58 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7990
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %58, i32 0, i32 7, !dbg !7990
  %59 = load i32, i32* %bandwidth_hz, align 4, !dbg !7990
  %div90 = udiv i32 %59, 1000, !dbg !7990
  call void @dib7000p_spur_protect(%struct.dib7000p_state* %55, i32 %div, i32 %div90) #8, !dbg !7991
  br label %if.end91, !dbg !7991

if.end91:                                         ; preds = %if.then89, %if.end87
  %60 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !7992
  %61 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch, align 8, !dbg !7993
  %bandwidth_hz92 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %61, i32 0, i32 7, !dbg !7993
  %62 = load i32, i32* %bandwidth_hz92, align 4, !dbg !7993
  %div93 = udiv i32 %62, 1000, !dbg !7993
  %call94 = call i32 @dib7000p_set_bandwidth(%struct.dib7000p_state* %60, i32 %div93) #8, !dbg !7994
  %63 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !7995
  call void @dib7000p_reset_stats(%struct.dvb_frontend* %63) #8, !dbg !7996
  store i32 0, i32* %retval, align 4, !dbg !7997
  br label %return, !dbg !7997

return:                                           ; preds = %if.end91, %if.else
  %64 = load i32, i32* %retval, align 4, !dbg !7998
  ret i32 %64, !dbg !7998
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7090_setDibTxMux(%struct.dib7000p_state* %state, i32 %mode) #0 !dbg !7999 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %mode.addr = alloca i32, align 4
  %reg_1288 = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata i16* %reg_1288, metadata !8006, metadata !DIExpression()), !dbg !8007
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8008
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 1288) #8, !dbg !8009
  %conv = zext i16 %call to i32, !dbg !8009
  %and = and i32 %conv, -897, !dbg !8010
  %conv1 = trunc i32 %and to i16, !dbg !8009
  store i16 %conv1, i16* %reg_1288, align 2, !dbg !8007
  %1 = load i32, i32* %mode.addr, align 4, !dbg !8011
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb17
  ], !dbg !8012

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !8013

do.body:                                          ; preds = %sw.bb
  %2 = load i32, i32* @debug, align 4, !dbg !8015
  %tobool = icmp ne i32 %2, 0, !dbg !8015
  br i1 %tobool, label %if.then, label %if.end, !dbg !8018

if.then:                                          ; preds = %do.body
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7090_setDibTxMux, i64 0, i64 0)) #9, !dbg !8015
  br label %if.end, !dbg !8015

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8018

do.end:                                           ; preds = %if.end
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8019
  %call3 = call i32 @dib7090_cfg_DibTx(%struct.dib7000p_state* %3, i32 8, i32 5, i32 0, i32 0, i32 0, i32 0) #8, !dbg !8020
  %4 = load i16, i16* %reg_1288, align 2, !dbg !8021
  %conv4 = zext i16 %4 to i32, !dbg !8021
  %or = or i32 %conv4, 512, !dbg !8021
  %conv5 = trunc i32 %or to i16, !dbg !8021
  store i16 %conv5, i16* %reg_1288, align 2, !dbg !8021
  br label %sw.epilog, !dbg !8022

sw.bb6:                                           ; preds = %entry
  br label %do.body7, !dbg !8023

do.body7:                                         ; preds = %sw.bb6
  %5 = load i32, i32* @debug, align 4, !dbg !8024
  %tobool8 = icmp ne i32 %5, 0, !dbg !8024
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !8027

if.then9:                                         ; preds = %do.body7
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7090_setDibTxMux, i64 0, i64 0)) #9, !dbg !8024
  br label %if.end11, !dbg !8024

if.end11:                                         ; preds = %if.then9, %do.body7
  br label %do.end12, !dbg !8027

do.end12:                                         ; preds = %if.end11
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8028
  %call13 = call i32 @dib7090_cfg_DibTx(%struct.dib7000p_state* %6, i32 5, i32 5, i32 0, i32 0, i32 0, i32 0) #8, !dbg !8029
  %7 = load i16, i16* %reg_1288, align 2, !dbg !8030
  %conv14 = zext i16 %7 to i32, !dbg !8030
  %or15 = or i32 %conv14, 256, !dbg !8030
  %conv16 = trunc i32 %or15 to i16, !dbg !8030
  store i16 %conv16, i16* %reg_1288, align 2, !dbg !8030
  br label %sw.epilog, !dbg !8031

sw.bb17:                                          ; preds = %entry
  br label %do.body18, !dbg !8032

do.body18:                                        ; preds = %sw.bb17
  %8 = load i32, i32* @debug, align 4, !dbg !8033
  %tobool19 = icmp ne i32 %8, 0, !dbg !8033
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !8036

if.then20:                                        ; preds = %do.body18
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7090_setDibTxMux, i64 0, i64 0)) #9, !dbg !8033
  br label %if.end22, !dbg !8033

if.end22:                                         ; preds = %if.then20, %do.body18
  br label %do.end23, !dbg !8036

do.end23:                                         ; preds = %if.end22
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8037
  %call24 = call i32 @dib7090_cfg_DibTx(%struct.dib7000p_state* %9, i32 20, i32 5, i32 10, i32 0, i32 0, i32 0) #8, !dbg !8038
  %10 = load i16, i16* %reg_1288, align 2, !dbg !8039
  %conv25 = zext i16 %10 to i32, !dbg !8039
  %or26 = or i32 %conv25, 128, !dbg !8039
  %conv27 = trunc i32 %or26 to i16, !dbg !8039
  store i16 %conv27, i16* %reg_1288, align 2, !dbg !8039
  br label %sw.epilog, !dbg !8040

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8041

sw.epilog:                                        ; preds = %sw.default, %do.end23, %do.end12, %do.end
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8042
  %12 = load i16, i16* %reg_1288, align 2, !dbg !8043
  %call28 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %11, i16 zeroext 1288, i16 zeroext %12) #8, !dbg !8044
  ret void, !dbg !8045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7090_setHostBusMux(%struct.dib7000p_state* %state, i32 %mode) #0 !dbg !8046 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %mode.addr = alloca i32, align 4
  %reg_1288 = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8047, metadata !DIExpression()), !dbg !8048
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8049, metadata !DIExpression()), !dbg !8050
  call void @llvm.dbg.declare(metadata i16* %reg_1288, metadata !8051, metadata !DIExpression()), !dbg !8052
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8053
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 1288) #8, !dbg !8054
  %conv = zext i16 %call to i32, !dbg !8054
  %and = and i32 %conv, -113, !dbg !8055
  %conv1 = trunc i32 %and to i16, !dbg !8054
  store i16 %conv1, i16* %reg_1288, align 2, !dbg !8052
  %1 = load i32, i32* %mode.addr, align 4, !dbg !8056
  switch i32 %1, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb5
    i32 6, label %sw.bb15
  ], !dbg !8057

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !8058

do.body:                                          ; preds = %sw.bb
  %2 = load i32, i32* @debug, align 4, !dbg !8060
  %tobool = icmp ne i32 %2, 0, !dbg !8060
  br i1 %tobool, label %if.then, label %if.end, !dbg !8063

if.then:                                          ; preds = %do.body
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7090_setHostBusMux, i64 0, i64 0)) #9, !dbg !8060
  br label %if.end, !dbg !8060

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8063

do.end:                                           ; preds = %if.end
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8064
  call void @dib7090_enMpegMux(%struct.dib7000p_state* %3, i32 0) #8, !dbg !8065
  %4 = load i16, i16* %reg_1288, align 2, !dbg !8066
  %conv3 = zext i16 %4 to i32, !dbg !8066
  %or = or i32 %conv3, 64, !dbg !8066
  %conv4 = trunc i32 %or to i16, !dbg !8066
  store i16 %conv4, i16* %reg_1288, align 2, !dbg !8066
  br label %sw.epilog, !dbg !8067

sw.bb5:                                           ; preds = %entry
  br label %do.body6, !dbg !8068

do.body6:                                         ; preds = %sw.bb5
  %5 = load i32, i32* @debug, align 4, !dbg !8069
  %tobool7 = icmp ne i32 %5, 0, !dbg !8069
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !8072

if.then8:                                         ; preds = %do.body6
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7090_setHostBusMux, i64 0, i64 0)) #9, !dbg !8069
  br label %if.end10, !dbg !8069

if.end10:                                         ; preds = %if.then8, %do.body6
  br label %do.end11, !dbg !8072

do.end11:                                         ; preds = %if.end10
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8073
  call void @dib7090_enMpegMux(%struct.dib7000p_state* %6, i32 0) #8, !dbg !8074
  %7 = load i16, i16* %reg_1288, align 2, !dbg !8075
  %conv12 = zext i16 %7 to i32, !dbg !8075
  %or13 = or i32 %conv12, 32, !dbg !8075
  %conv14 = trunc i32 %or13 to i16, !dbg !8075
  store i16 %conv14, i16* %reg_1288, align 2, !dbg !8075
  br label %sw.epilog, !dbg !8076

sw.bb15:                                          ; preds = %entry
  br label %do.body16, !dbg !8077

do.body16:                                        ; preds = %sw.bb15
  %8 = load i32, i32* @debug, align 4, !dbg !8078
  %tobool17 = icmp ne i32 %8, 0, !dbg !8078
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !8081

if.then18:                                        ; preds = %do.body16
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7090_setHostBusMux, i64 0, i64 0)) #9, !dbg !8078
  br label %if.end20, !dbg !8078

if.end20:                                         ; preds = %if.then18, %do.body16
  br label %do.end21, !dbg !8081

do.end21:                                         ; preds = %if.end20
  %9 = load i16, i16* %reg_1288, align 2, !dbg !8082
  %conv22 = zext i16 %9 to i32, !dbg !8082
  %or23 = or i32 %conv22, 16, !dbg !8082
  %conv24 = trunc i32 %or23 to i16, !dbg !8082
  store i16 %conv24, i16* %reg_1288, align 2, !dbg !8082
  br label %sw.epilog, !dbg !8083

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !8084

sw.epilog:                                        ; preds = %sw.default, %do.end21, %do.end11, %do.end
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8085
  %11 = load i16, i16* %reg_1288, align 2, !dbg !8086
  %call25 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %10, i16 zeroext 1288, i16 zeroext %11) #8, !dbg !8087
  ret void, !dbg !8088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_pll_clk_cfg(%struct.dib7000p_state* %state) #0 !dbg !8089 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %tmp = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.declare(metadata i16* %tmp, metadata !8094, metadata !DIExpression()), !dbg !8095
  store i16 0, i16* %tmp, align 2, !dbg !8095
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8096
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 903) #8, !dbg !8097
  store i16 %call, i16* %tmp, align 2, !dbg !8098
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8099
  %2 = load i16, i16* %tmp, align 2, !dbg !8100
  %conv = zext i16 %2 to i32, !dbg !8100
  %or = or i32 %conv, 1, !dbg !8101
  %conv1 = trunc i32 %or to i16, !dbg !8102
  %call2 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %1, i16 zeroext 903, i16 zeroext %conv1) #8, !dbg !8103
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8104
  %call3 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 900) #8, !dbg !8105
  store i16 %call3, i16* %tmp, align 2, !dbg !8106
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8107
  %5 = load i16, i16* %tmp, align 2, !dbg !8108
  %conv4 = zext i16 %5 to i32, !dbg !8108
  %and = and i32 %conv4, 32767, !dbg !8109
  %or5 = or i32 %and, 64, !dbg !8110
  %conv6 = trunc i32 %or5 to i16, !dbg !8111
  %call7 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %4, i16 zeroext 900, i16 zeroext %conv6) #8, !dbg !8112
  ret void, !dbg !8113
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_agc_config(%struct.dib7000p_state* %state, i8 zeroext %band) #0 !dbg !8114 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %band.addr = alloca i8, align 1
  %agc = alloca %struct.dibx000_agc_config*, align 8
  %i = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  store i8 %band, i8* %band.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %band.addr, metadata !8119, metadata !DIExpression()), !dbg !8120
  call void @llvm.dbg.declare(metadata %struct.dibx000_agc_config** %agc, metadata !8121, metadata !DIExpression()), !dbg !8122
  store %struct.dibx000_agc_config* null, %struct.dibx000_agc_config** %agc, align 8, !dbg !8122
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8123, metadata !DIExpression()), !dbg !8124
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8125
  %current_band = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 6, !dbg !8127
  %1 = load i8, i8* %current_band, align 2, !dbg !8127
  %conv = zext i8 %1 to i32, !dbg !8125
  %2 = load i8, i8* %band.addr, align 1, !dbg !8128
  %conv1 = zext i8 %2 to i32, !dbg !8128
  %cmp = icmp eq i32 %conv, %conv1, !dbg !8129
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8130

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8131
  %current_agc = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 8, !dbg !8132
  %4 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %current_agc, align 8, !dbg !8132
  %cmp3 = icmp ne %struct.dibx000_agc_config* %4, null, !dbg !8133
  br i1 %cmp3, label %if.then, label %if.end, !dbg !8134

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8135
  br label %return, !dbg !8135

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i8, i8* %band.addr, align 1, !dbg !8136
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8137
  %current_band5 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %6, i32 0, i32 6, !dbg !8138
  store i8 %5, i8* %current_band5, align 2, !dbg !8139
  store i32 0, i32* %i, align 4, !dbg !8140
  br label %for.cond, !dbg !8142

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !8143
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8145
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 1, !dbg !8146
  %agc_config_count = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 4, !dbg !8147
  %9 = load i8, i8* %agc_config_count, align 8, !dbg !8147
  %conv6 = zext i8 %9 to i32, !dbg !8145
  %cmp7 = icmp slt i32 %7, %conv6, !dbg !8148
  br i1 %cmp7, label %for.body, label %for.end, !dbg !8149

for.body:                                         ; preds = %for.cond
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8150
  %cfg9 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 1, !dbg !8152
  %agc10 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg9, i32 0, i32 5, !dbg !8153
  %11 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc10, align 8, !dbg !8153
  %12 = load i32, i32* %i, align 4, !dbg !8154
  %idxprom = sext i32 %12 to i64, !dbg !8150
  %arrayidx = getelementptr %struct.dibx000_agc_config, %struct.dibx000_agc_config* %11, i64 %idxprom, !dbg !8150
  %band_caps = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %arrayidx, i32 0, i32 0, !dbg !8155
  %13 = load i8, i8* %band_caps, align 2, !dbg !8155
  %conv11 = zext i8 %13 to i32, !dbg !8150
  %14 = load i8, i8* %band.addr, align 1, !dbg !8156
  %conv12 = zext i8 %14 to i32, !dbg !8156
  %and = and i32 %conv11, %conv12, !dbg !8157
  %tobool = icmp ne i32 %and, 0, !dbg !8157
  br i1 %tobool, label %if.then13, label %if.end18, !dbg !8158

if.then13:                                        ; preds = %for.body
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8159
  %cfg14 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 1, !dbg !8161
  %agc15 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg14, i32 0, i32 5, !dbg !8162
  %16 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc15, align 8, !dbg !8162
  %17 = load i32, i32* %i, align 4, !dbg !8163
  %idxprom16 = sext i32 %17 to i64, !dbg !8159
  %arrayidx17 = getelementptr %struct.dibx000_agc_config, %struct.dibx000_agc_config* %16, i64 %idxprom16, !dbg !8159
  store %struct.dibx000_agc_config* %arrayidx17, %struct.dibx000_agc_config** %agc, align 8, !dbg !8164
  br label %for.end, !dbg !8165

if.end18:                                         ; preds = %for.body
  br label %for.inc, !dbg !8156

for.inc:                                          ; preds = %if.end18
  %18 = load i32, i32* %i, align 4, !dbg !8166
  %inc = add i32 %18, 1, !dbg !8166
  store i32 %inc, i32* %i, align 4, !dbg !8166
  br label %for.cond, !dbg !8167, !llvm.loop !8168

for.end:                                          ; preds = %if.then13, %for.cond
  %19 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8170
  %cmp19 = icmp eq %struct.dibx000_agc_config* %19, null, !dbg !8172
  br i1 %cmp19, label %if.then21, label %if.end26, !dbg !8173

if.then21:                                        ; preds = %for.end
  br label %do.body, !dbg !8174

do.body:                                          ; preds = %if.then21
  %20 = load i32, i32* @debug, align 4, !dbg !8176
  %tobool22 = icmp ne i32 %20, 0, !dbg !8176
  br i1 %tobool22, label %if.then23, label %if.end25, !dbg !8179

if.then23:                                        ; preds = %do.body
  %21 = load i8, i8* %band.addr, align 1, !dbg !8176
  %conv24 = zext i8 %21 to i32, !dbg !8176
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7000p_set_agc_config, i64 0, i64 0), i32 %conv24) #9, !dbg !8176
  br label %if.end25, !dbg !8176

if.end25:                                         ; preds = %if.then23, %do.body
  br label %do.end, !dbg !8179

do.end:                                           ; preds = %if.end25
  store i32 -22, i32* %retval, align 4, !dbg !8180
  br label %return, !dbg !8180

if.end26:                                         ; preds = %for.end
  %22 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8181
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8182
  %current_agc27 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %23, i32 0, i32 8, !dbg !8183
  store %struct.dibx000_agc_config* %22, %struct.dibx000_agc_config** %current_agc27, align 8, !dbg !8184
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8185
  %25 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8186
  %setup = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %25, i32 0, i32 1, !dbg !8187
  %26 = load i16, i16* %setup, align 2, !dbg !8187
  %call28 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %24, i16 zeroext 75, i16 zeroext %26) #8, !dbg !8188
  %27 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8189
  %28 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8190
  %inv_gain = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %28, i32 0, i32 2, !dbg !8191
  %29 = load i16, i16* %inv_gain, align 2, !dbg !8191
  %call29 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %27, i16 zeroext 76, i16 zeroext %29) #8, !dbg !8192
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8193
  %31 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8194
  %time_stabiliz = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %31, i32 0, i32 3, !dbg !8195
  %32 = load i16, i16* %time_stabiliz, align 2, !dbg !8195
  %call30 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %30, i16 zeroext 77, i16 zeroext %32) #8, !dbg !8196
  %33 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8197
  %34 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8198
  %alpha_level = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %34, i32 0, i32 4, !dbg !8199
  %35 = load i8, i8* %alpha_level, align 2, !dbg !8199
  %conv31 = zext i8 %35 to i32, !dbg !8198
  %shl = shl i32 %conv31, 12, !dbg !8200
  %36 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8201
  %thlock = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %36, i32 0, i32 5, !dbg !8202
  %37 = load i16, i16* %thlock, align 2, !dbg !8202
  %conv32 = zext i16 %37 to i32, !dbg !8201
  %or = or i32 %shl, %conv32, !dbg !8203
  %conv33 = trunc i32 %or to i16, !dbg !8204
  %call34 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %33, i16 zeroext 100, i16 zeroext %conv33) #8, !dbg !8205
  %38 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8206
  %39 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8207
  %alpha_mant = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %39, i32 0, i32 23, !dbg !8208
  %40 = load i8, i8* %alpha_mant, align 1, !dbg !8208
  %conv35 = zext i8 %40 to i32, !dbg !8207
  %shl36 = shl i32 %conv35, 5, !dbg !8209
  %41 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8210
  %alpha_exp = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %41, i32 0, i32 24, !dbg !8211
  %42 = load i8, i8* %alpha_exp, align 2, !dbg !8211
  %conv37 = zext i8 %42 to i32, !dbg !8210
  %or38 = or i32 %shl36, %conv37, !dbg !8212
  %conv39 = trunc i32 %or38 to i16, !dbg !8213
  %call40 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %38, i16 zeroext 101, i16 zeroext %conv39) #8, !dbg !8214
  %43 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8215
  %44 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8216
  %beta_mant = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %44, i32 0, i32 25, !dbg !8217
  %45 = load i8, i8* %beta_mant, align 1, !dbg !8217
  %conv41 = zext i8 %45 to i32, !dbg !8216
  %shl42 = shl i32 %conv41, 6, !dbg !8218
  %46 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8219
  %beta_exp = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %46, i32 0, i32 26, !dbg !8220
  %47 = load i8, i8* %beta_exp, align 2, !dbg !8220
  %conv43 = zext i8 %47 to i32, !dbg !8219
  %or44 = or i32 %shl42, %conv43, !dbg !8221
  %conv45 = trunc i32 %or44 to i16, !dbg !8222
  %call46 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %43, i16 zeroext 102, i16 zeroext %conv45) #8, !dbg !8223
  br label %do.body47, !dbg !8224

do.body47:                                        ; preds = %if.end26
  %48 = load i32, i32* @debug, align 4, !dbg !8225
  %tobool48 = icmp ne i32 %48, 0, !dbg !8225
  br i1 %tobool48, label %if.then49, label %if.end62, !dbg !8228

if.then49:                                        ; preds = %do.body47
  %49 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8225
  %wbd_ref = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %49, i32 0, i32 5, !dbg !8225
  %50 = load i16, i16* %wbd_ref, align 8, !dbg !8225
  %conv50 = zext i16 %50 to i32, !dbg !8225
  %cmp51 = icmp ne i32 %conv50, 0, !dbg !8225
  br i1 %cmp51, label %cond.true, label %cond.false, !dbg !8225

cond.true:                                        ; preds = %if.then49
  %51 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8225
  %wbd_ref53 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %51, i32 0, i32 5, !dbg !8225
  %52 = load i16, i16* %wbd_ref53, align 8, !dbg !8225
  %conv54 = zext i16 %52 to i32, !dbg !8225
  br label %cond.end, !dbg !8225

cond.false:                                       ; preds = %if.then49
  %53 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8225
  %wbd_ref55 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %53, i32 0, i32 7, !dbg !8225
  %54 = load i16, i16* %wbd_ref55, align 2, !dbg !8225
  %conv56 = zext i16 %54 to i32, !dbg !8225
  br label %cond.end, !dbg !8225

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv54, %cond.true ], [ %conv56, %cond.false ], !dbg !8225
  %55 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8225
  %wbd_sel = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %55, i32 0, i32 8, !dbg !8225
  %56 = load i8, i8* %wbd_sel, align 2, !dbg !8225
  %conv57 = zext i8 %56 to i32, !dbg !8225
  %57 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8225
  %perform_agc_softsplit = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %57, i32 0, i32 27, !dbg !8225
  %58 = load i8, i8* %perform_agc_softsplit, align 1, !dbg !8225
  %tobool58 = icmp ne i8 %58, 0, !dbg !8225
  %lnot = xor i1 %tobool58, true, !dbg !8225
  %lnot.ext = zext i1 %lnot to i32, !dbg !8225
  %59 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8225
  %wbd_sel59 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %59, i32 0, i32 8, !dbg !8225
  %60 = load i8, i8* %wbd_sel59, align 2, !dbg !8225
  %conv60 = zext i8 %60 to i32, !dbg !8225
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.dib7000p_set_agc_config, i64 0, i64 0), i32 %cond, i32 %conv57, i32 %lnot.ext, i32 %conv60) #9, !dbg !8225
  br label %if.end62, !dbg !8225

if.end62:                                         ; preds = %cond.end, %do.body47
  br label %do.end63, !dbg !8228

do.end63:                                         ; preds = %if.end62
  %61 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8229
  %wbd_ref64 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %61, i32 0, i32 5, !dbg !8231
  %62 = load i16, i16* %wbd_ref64, align 8, !dbg !8231
  %conv65 = zext i16 %62 to i32, !dbg !8229
  %cmp66 = icmp ne i32 %conv65, 0, !dbg !8232
  br i1 %cmp66, label %if.then68, label %if.else, !dbg !8233

if.then68:                                        ; preds = %do.end63
  %63 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8234
  %64 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8235
  %wbd_inv = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %64, i32 0, i32 6, !dbg !8236
  %65 = load i8, i8* %wbd_inv, align 2, !dbg !8236
  %conv69 = zext i8 %65 to i32, !dbg !8235
  %shl70 = shl i32 %conv69, 12, !dbg !8237
  %66 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8238
  %wbd_ref71 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %66, i32 0, i32 5, !dbg !8239
  %67 = load i16, i16* %wbd_ref71, align 8, !dbg !8239
  %conv72 = zext i16 %67 to i32, !dbg !8238
  %or73 = or i32 %shl70, %conv72, !dbg !8240
  %conv74 = trunc i32 %or73 to i16, !dbg !8241
  %call75 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %63, i16 zeroext 105, i16 zeroext %conv74) #8, !dbg !8242
  br label %if.end84, !dbg !8242

if.else:                                          ; preds = %do.end63
  %68 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8243
  %69 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8244
  %wbd_inv76 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %69, i32 0, i32 6, !dbg !8245
  %70 = load i8, i8* %wbd_inv76, align 2, !dbg !8245
  %conv77 = zext i8 %70 to i32, !dbg !8244
  %shl78 = shl i32 %conv77, 12, !dbg !8246
  %71 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8247
  %wbd_ref79 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %71, i32 0, i32 7, !dbg !8248
  %72 = load i16, i16* %wbd_ref79, align 2, !dbg !8248
  %conv80 = zext i16 %72 to i32, !dbg !8247
  %or81 = or i32 %shl78, %conv80, !dbg !8249
  %conv82 = trunc i32 %or81 to i16, !dbg !8250
  %call83 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %68, i16 zeroext 105, i16 zeroext %conv82) #8, !dbg !8251
  br label %if.end84

if.end84:                                         ; preds = %if.else, %if.then68
  %73 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8252
  %74 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8253
  %wbd_sel85 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %74, i32 0, i32 8, !dbg !8254
  %75 = load i8, i8* %wbd_sel85, align 2, !dbg !8254
  %conv86 = zext i8 %75 to i32, !dbg !8253
  %shl87 = shl i32 %conv86, 13, !dbg !8255
  %76 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8256
  %wbd_alpha = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %76, i32 0, i32 9, !dbg !8257
  %77 = load i8, i8* %wbd_alpha, align 1, !dbg !8257
  %conv88 = zext i8 %77 to i32, !dbg !8256
  %shl89 = shl i32 %conv88, 9, !dbg !8258
  %or90 = or i32 %shl87, %shl89, !dbg !8259
  %78 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8260
  %perform_agc_softsplit91 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %78, i32 0, i32 27, !dbg !8261
  %79 = load i8, i8* %perform_agc_softsplit91, align 1, !dbg !8261
  %conv92 = zext i8 %79 to i32, !dbg !8260
  %shl93 = shl i32 %conv92, 8, !dbg !8262
  %or94 = or i32 %or90, %shl93, !dbg !8263
  %conv95 = trunc i32 %or94 to i16, !dbg !8264
  %call96 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %73, i16 zeroext 106, i16 zeroext %conv95) #8, !dbg !8265
  %80 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8266
  %81 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8267
  %agc1_max = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %81, i32 0, i32 10, !dbg !8268
  %82 = load i16, i16* %agc1_max, align 2, !dbg !8268
  %call97 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %80, i16 zeroext 107, i16 zeroext %82) #8, !dbg !8269
  %83 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8270
  %84 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8271
  %agc1_min = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %84, i32 0, i32 11, !dbg !8272
  %85 = load i16, i16* %agc1_min, align 2, !dbg !8272
  %call98 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %83, i16 zeroext 108, i16 zeroext %85) #8, !dbg !8273
  %86 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8274
  %87 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8275
  %agc2_max = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %87, i32 0, i32 12, !dbg !8276
  %88 = load i16, i16* %agc2_max, align 2, !dbg !8276
  %call99 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %86, i16 zeroext 109, i16 zeroext %88) #8, !dbg !8277
  %89 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8278
  %90 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8279
  %agc2_min = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %90, i32 0, i32 13, !dbg !8280
  %91 = load i16, i16* %agc2_min, align 2, !dbg !8280
  %call100 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %89, i16 zeroext 110, i16 zeroext %91) #8, !dbg !8281
  %92 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8282
  %93 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8283
  %agc1_pt1 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %93, i32 0, i32 14, !dbg !8284
  %94 = load i8, i8* %agc1_pt1, align 2, !dbg !8284
  %conv101 = zext i8 %94 to i32, !dbg !8283
  %shl102 = shl i32 %conv101, 8, !dbg !8285
  %95 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8286
  %agc1_pt2 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %95, i32 0, i32 15, !dbg !8287
  %96 = load i8, i8* %agc1_pt2, align 1, !dbg !8287
  %conv103 = zext i8 %96 to i32, !dbg !8286
  %or104 = or i32 %shl102, %conv103, !dbg !8288
  %conv105 = trunc i32 %or104 to i16, !dbg !8289
  %call106 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %92, i16 zeroext 111, i16 zeroext %conv105) #8, !dbg !8290
  %97 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8291
  %98 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8292
  %agc1_pt3 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %98, i32 0, i32 16, !dbg !8293
  %99 = load i8, i8* %agc1_pt3, align 2, !dbg !8293
  %conv107 = zext i8 %99 to i16, !dbg !8292
  %call108 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %97, i16 zeroext 112, i16 zeroext %conv107) #8, !dbg !8294
  %100 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8295
  %101 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8296
  %agc1_slope1 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %101, i32 0, i32 17, !dbg !8297
  %102 = load i8, i8* %agc1_slope1, align 1, !dbg !8297
  %conv109 = zext i8 %102 to i32, !dbg !8296
  %shl110 = shl i32 %conv109, 8, !dbg !8298
  %103 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8299
  %agc1_slope2 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %103, i32 0, i32 18, !dbg !8300
  %104 = load i8, i8* %agc1_slope2, align 2, !dbg !8300
  %conv111 = zext i8 %104 to i32, !dbg !8299
  %or112 = or i32 %shl110, %conv111, !dbg !8301
  %conv113 = trunc i32 %or112 to i16, !dbg !8302
  %call114 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %100, i16 zeroext 113, i16 zeroext %conv113) #8, !dbg !8303
  %105 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8304
  %106 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8305
  %agc2_pt1 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %106, i32 0, i32 19, !dbg !8306
  %107 = load i8, i8* %agc2_pt1, align 1, !dbg !8306
  %conv115 = zext i8 %107 to i32, !dbg !8305
  %shl116 = shl i32 %conv115, 8, !dbg !8307
  %108 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8308
  %agc2_pt2 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %108, i32 0, i32 20, !dbg !8309
  %109 = load i8, i8* %agc2_pt2, align 2, !dbg !8309
  %conv117 = zext i8 %109 to i32, !dbg !8308
  %or118 = or i32 %shl116, %conv117, !dbg !8310
  %conv119 = trunc i32 %or118 to i16, !dbg !8311
  %call120 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %105, i16 zeroext 114, i16 zeroext %conv119) #8, !dbg !8312
  %110 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8313
  %111 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8314
  %agc2_slope1 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %111, i32 0, i32 21, !dbg !8315
  %112 = load i8, i8* %agc2_slope1, align 1, !dbg !8315
  %conv121 = zext i8 %112 to i32, !dbg !8314
  %shl122 = shl i32 %conv121, 8, !dbg !8316
  %113 = load %struct.dibx000_agc_config*, %struct.dibx000_agc_config** %agc, align 8, !dbg !8317
  %agc2_slope2 = getelementptr inbounds %struct.dibx000_agc_config, %struct.dibx000_agc_config* %113, i32 0, i32 22, !dbg !8318
  %114 = load i8, i8* %agc2_slope2, align 2, !dbg !8318
  %conv123 = zext i8 %114 to i32, !dbg !8317
  %or124 = or i32 %shl122, %conv123, !dbg !8319
  %conv125 = trunc i32 %or124 to i16, !dbg !8320
  %call126 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %110, i16 zeroext 115, i16 zeroext %conv125) #8, !dbg !8321
  store i32 0, i32* %retval, align 4, !dbg !8322
  br label %return, !dbg !8322

return:                                           ; preds = %if.end84, %do.end, %if.then
  %115 = load i32, i32* %retval, align 4, !dbg !8323
  ret i32 %115, !dbg !8323
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_dds(%struct.dib7000p_state* %state, i32 %offset_khz) #0 !dbg !8324 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %offset_khz.addr = alloca i32, align 4
  %internal = alloca i32, align 4
  %unit_khz_dds_val = alloca i32, align 4
  %abs_offset_khz = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %dds = alloca i32, align 4
  %invert = alloca i8, align 1
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8327, metadata !DIExpression()), !dbg !8328
  store i32 %offset_khz, i32* %offset_khz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset_khz.addr, metadata !8329, metadata !DIExpression()), !dbg !8330
  call void @llvm.dbg.declare(metadata i32* %internal, metadata !8331, metadata !DIExpression()), !dbg !8332
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8333
  %call = call i32 @dib7000p_get_internal_freq(%struct.dib7000p_state* %0) #8, !dbg !8334
  store i32 %call, i32* %internal, align 4, !dbg !8332
  call void @llvm.dbg.declare(metadata i32* %unit_khz_dds_val, metadata !8335, metadata !DIExpression()), !dbg !8336
  call void @llvm.dbg.declare(metadata i32* %abs_offset_khz, metadata !8337, metadata !DIExpression()), !dbg !8338
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !8339, metadata !DIExpression()), !dbg !8341
  %1 = load i32, i32* %offset_khz.addr, align 4, !dbg !8341
  store i32 %1, i32* %__x, align 4, !dbg !8341
  %2 = load i32, i32* %__x, align 4, !dbg !8341
  %cmp = icmp slt i32 %2, 0, !dbg !8341
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8341

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %__x, align 4, !dbg !8341
  %sub = sub i32 0, %3, !dbg !8341
  br label %cond.end, !dbg !8341

cond.false:                                       ; preds = %entry
  %4 = load i32, i32* %__x, align 4, !dbg !8341
  br label %cond.end, !dbg !8341

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub, %cond.true ], [ %4, %cond.false ], !dbg !8341
  store i32 %cond, i32* %tmp, align 4, !dbg !8341
  %5 = load i32, i32* %tmp, align 4, !dbg !8341
  store i32 %5, i32* %abs_offset_khz, align 4, !dbg !8338
  call void @llvm.dbg.declare(metadata i32* %dds, metadata !8342, metadata !DIExpression()), !dbg !8343
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8344
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %6, i32 0, i32 1, !dbg !8345
  %bw = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 6, !dbg !8346
  %7 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !8346
  %ifreq = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %7, i32 0, i32 13, !dbg !8347
  %8 = load i32, i32* %ifreq, align 4, !dbg !8347
  %and = and i32 %8, 33554431, !dbg !8348
  store i32 %and, i32* %dds, align 4, !dbg !8343
  call void @llvm.dbg.declare(metadata i8* %invert, metadata !8349, metadata !DIExpression()), !dbg !8350
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8351
  %cfg1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 1, !dbg !8352
  %bw2 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg1, i32 0, i32 6, !dbg !8353
  %10 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw2, align 8, !dbg !8353
  %ifreq3 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %10, i32 0, i32 13, !dbg !8354
  %11 = load i32, i32* %ifreq3, align 4, !dbg !8354
  %and4 = and i32 %11, 33554432, !dbg !8355
  %tobool = icmp ne i32 %and4, 0, !dbg !8356
  %lnot = xor i1 %tobool, true, !dbg !8356
  %lnot5 = xor i1 %lnot, true, !dbg !8357
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !8357
  %conv = trunc i32 %lnot.ext to i8, !dbg !8357
  store i8 %conv, i8* %invert, align 1, !dbg !8350
  %12 = load i32, i32* %internal, align 4, !dbg !8358
  %cmp6 = icmp eq i32 %12, 0, !dbg !8360
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8361

if.then:                                          ; preds = %cond.end
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.18, i64 0, i64 0)) #9, !dbg !8362
  store i32 -1, i32* %retval, align 4, !dbg !8364
  br label %return, !dbg !8364

if.end:                                           ; preds = %cond.end
  %13 = load i32, i32* %internal, align 4, !dbg !8365
  %div = udiv i32 67108864, %13, !dbg !8366
  store i32 %div, i32* %unit_khz_dds_val, align 4, !dbg !8367
  br label %do.body, !dbg !8368

do.body:                                          ; preds = %if.end
  %14 = load i32, i32* @debug, align 4, !dbg !8369
  %tobool9 = icmp ne i32 %14, 0, !dbg !8369
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !8372

if.then10:                                        ; preds = %do.body
  %15 = load i32, i32* %offset_khz.addr, align 4, !dbg !8369
  %16 = load i32, i32* %internal, align 4, !dbg !8369
  %17 = load i8, i8* %invert, align 1, !dbg !8369
  %conv11 = zext i8 %17 to i32, !dbg !8369
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.dib7000p_set_dds, i64 0, i64 0), i32 %15, i32 %16, i32 %conv11) #9, !dbg !8369
  br label %if.end13, !dbg !8369

if.end13:                                         ; preds = %if.then10, %do.body
  br label %do.end, !dbg !8372

do.end:                                           ; preds = %if.end13
  %18 = load i32, i32* %offset_khz.addr, align 4, !dbg !8373
  %cmp14 = icmp slt i32 %18, 0, !dbg !8375
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !8376

if.then16:                                        ; preds = %do.end
  %19 = load i32, i32* %unit_khz_dds_val, align 4, !dbg !8377
  %mul = mul i32 %19, -1, !dbg !8377
  store i32 %mul, i32* %unit_khz_dds_val, align 4, !dbg !8377
  br label %if.end17, !dbg !8378

if.end17:                                         ; preds = %if.then16, %do.end
  %20 = load i8, i8* %invert, align 1, !dbg !8379
  %tobool18 = icmp ne i8 %20, 0, !dbg !8379
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !8381

if.then19:                                        ; preds = %if.end17
  %21 = load i32, i32* %abs_offset_khz, align 4, !dbg !8382
  %22 = load i32, i32* %unit_khz_dds_val, align 4, !dbg !8383
  %mul20 = mul i32 %21, %22, !dbg !8384
  %23 = load i32, i32* %dds, align 4, !dbg !8385
  %sub21 = sub i32 %23, %mul20, !dbg !8385
  store i32 %sub21, i32* %dds, align 4, !dbg !8385
  br label %if.end23, !dbg !8386

if.else:                                          ; preds = %if.end17
  %24 = load i32, i32* %abs_offset_khz, align 4, !dbg !8387
  %25 = load i32, i32* %unit_khz_dds_val, align 4, !dbg !8388
  %mul22 = mul i32 %24, %25, !dbg !8389
  %26 = load i32, i32* %dds, align 4, !dbg !8390
  %add = add i32 %26, %mul22, !dbg !8390
  store i32 %add, i32* %dds, align 4, !dbg !8390
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then19
  %27 = load i32, i32* %abs_offset_khz, align 4, !dbg !8391
  %28 = load i32, i32* %internal, align 4, !dbg !8393
  %div24 = udiv i32 %28, 2, !dbg !8394
  %cmp25 = icmp ule i32 %27, %div24, !dbg !8395
  br i1 %cmp25, label %if.then27, label %if.end35, !dbg !8396

if.then27:                                        ; preds = %if.end23
  %29 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8397
  %30 = load i32, i32* %dds, align 4, !dbg !8399
  %shr = lshr i32 %30, 16, !dbg !8400
  %and28 = and i32 %shr, 511, !dbg !8401
  %31 = load i8, i8* %invert, align 1, !dbg !8402
  %conv29 = zext i8 %31 to i32, !dbg !8402
  %shl = shl i32 %conv29, 9, !dbg !8403
  %or = or i32 %and28, %shl, !dbg !8404
  %conv30 = trunc i32 %or to i16, !dbg !8405
  %call31 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %29, i16 zeroext 21, i16 zeroext %conv30) #8, !dbg !8406
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8407
  %33 = load i32, i32* %dds, align 4, !dbg !8408
  %and32 = and i32 %33, 65535, !dbg !8409
  %conv33 = trunc i32 %and32 to i16, !dbg !8410
  %call34 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %32, i16 zeroext 22, i16 zeroext %conv33) #8, !dbg !8411
  br label %if.end35, !dbg !8412

if.end35:                                         ; preds = %if.then27, %if.end23
  store i32 0, i32* %retval, align 4, !dbg !8413
  br label %return, !dbg !8413

return:                                           ; preds = %if.end35, %if.then
  %34 = load i32, i32* %retval, align 4, !dbg !8414
  ret i32 %34, !dbg !8414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_restart_agc(%struct.dib7000p_state* %state) #0 !dbg !8415 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8416, metadata !DIExpression()), !dbg !8417
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8418
  %call = call i32 @dib7000p_write_word(%struct.dib7000p_state* %0, i16 zeroext 770, i16 zeroext 2560) #8, !dbg !8419
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8420
  %call1 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %1, i16 zeroext 770, i16 zeroext 0) #8, !dbg !8421
  ret void, !dbg !8422
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_update_lna(%struct.dib7000p_state* %state) #0 !dbg !8423 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %dyn_gain = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8424, metadata !DIExpression()), !dbg !8425
  call void @llvm.dbg.declare(metadata i16* %dyn_gain, metadata !8426, metadata !DIExpression()), !dbg !8427
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8428
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 1, !dbg !8430
  %update_lna = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 3, !dbg !8431
  %1 = load i32 (%struct.dvb_frontend*, i16)*, i32 (%struct.dvb_frontend*, i16)** %update_lna, align 8, !dbg !8431
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i16)* %1, null, !dbg !8428
  br i1 %tobool, label %if.then, label %if.end6, !dbg !8432

if.then:                                          ; preds = %entry
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8433
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %2, i16 zeroext 394) #8, !dbg !8435
  store i16 %call, i16* %dyn_gain, align 2, !dbg !8436
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8437
  %cfg1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 1, !dbg !8439
  %update_lna2 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg1, i32 0, i32 3, !dbg !8440
  %4 = load i32 (%struct.dvb_frontend*, i16)*, i32 (%struct.dvb_frontend*, i16)** %update_lna2, align 8, !dbg !8440
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8441
  %demod = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 0, !dbg !8442
  %6 = load i16, i16* %dyn_gain, align 2, !dbg !8443
  %call3 = call i32 %4(%struct.dvb_frontend* %demod, i16 zeroext %6) #8, !dbg !8437
  %tobool4 = icmp ne i32 %call3, 0, !dbg !8437
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !8444

if.then5:                                         ; preds = %if.then
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8445
  call void @dib7000p_restart_agc(%struct.dib7000p_state* %7) #8, !dbg !8447
  store i32 1, i32* %retval, align 4, !dbg !8448
  br label %return, !dbg !8448

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !8449

if.end6:                                          ; preds = %if.end, %entry
  store i32 0, i32* %retval, align 4, !dbg !8450
  br label %return, !dbg !8450

return:                                           ; preds = %if.end6, %if.then5
  %8 = load i32, i32* %retval, align 4, !dbg !8451
  ret i32 %8, !dbg !8451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_internal_freq(%struct.dib7000p_state* %state) #0 !dbg !8452 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %internal = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8455, metadata !DIExpression()), !dbg !8456
  call void @llvm.dbg.declare(metadata i32* %internal, metadata !8457, metadata !DIExpression()), !dbg !8458
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8459
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 18) #8, !dbg !8460
  %conv = zext i16 %call to i32, !dbg !8461
  %shl = shl i32 %conv, 16, !dbg !8462
  store i32 %shl, i32* %internal, align 4, !dbg !8458
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8463
  %call1 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %1, i16 zeroext 19) #8, !dbg !8464
  %conv2 = zext i16 %call1 to i32, !dbg !8465
  %2 = load i32, i32* %internal, align 4, !dbg !8466
  %or = or i32 %2, %conv2, !dbg !8466
  store i32 %or, i32* %internal, align 4, !dbg !8466
  %3 = load i32, i32* %internal, align 4, !dbg !8467
  %div = udiv i32 %3, 1000, !dbg !8467
  store i32 %div, i32* %internal, align 4, !dbg !8467
  %4 = load i32, i32* %internal, align 4, !dbg !8468
  ret i32 %4, !dbg !8469
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_set_channel(%struct.dib7000p_state* %state, %struct.dtv_frontend_properties* %ch, i8 zeroext %seq) #0 !dbg !8470 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %ch.addr = alloca %struct.dtv_frontend_properties*, align 8
  %seq.addr = alloca i8, align 1
  %value = alloca i16, align 2
  %est = alloca [4 x i16], align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8473, metadata !DIExpression()), !dbg !8474
  store %struct.dtv_frontend_properties* %ch, %struct.dtv_frontend_properties** %ch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %ch.addr, metadata !8475, metadata !DIExpression()), !dbg !8476
  store i8 %seq, i8* %seq.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %seq.addr, metadata !8477, metadata !DIExpression()), !dbg !8478
  call void @llvm.dbg.declare(metadata i16* %value, metadata !8479, metadata !DIExpression()), !dbg !8480
  call void @llvm.dbg.declare(metadata [4 x i16]* %est, metadata !8481, metadata !DIExpression()), !dbg !8483
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8484
  %1 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8485
  %bandwidth_hz = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %1, i32 0, i32 7, !dbg !8485
  %2 = load i32, i32* %bandwidth_hz, align 4, !dbg !8485
  %div = udiv i32 %2, 1000, !dbg !8485
  %call = call i32 @dib7000p_set_bandwidth(%struct.dib7000p_state* %0, i32 %div) #8, !dbg !8486
  store i16 0, i16* %value, align 2, !dbg !8487
  %3 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8488
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %3, i32 0, i32 6, !dbg !8489
  %4 = load i32, i32* %transmission_mode, align 4, !dbg !8489
  switch i32 %4, label %sw.default [
    i32 0, label %sw.bb
    i32 3, label %sw.bb2
    i32 1, label %sw.bb5
  ], !dbg !8490

sw.bb:                                            ; preds = %entry
  %5 = load i16, i16* %value, align 2, !dbg !8491
  %conv = zext i16 %5 to i32, !dbg !8491
  %conv1 = trunc i32 %conv to i16, !dbg !8491
  store i16 %conv1, i16* %value, align 2, !dbg !8491
  br label %sw.epilog, !dbg !8493

sw.bb2:                                           ; preds = %entry
  %6 = load i16, i16* %value, align 2, !dbg !8494
  %conv3 = zext i16 %6 to i32, !dbg !8494
  %or = or i32 %conv3, 256, !dbg !8494
  %conv4 = trunc i32 %or to i16, !dbg !8494
  store i16 %conv4, i16* %value, align 2, !dbg !8494
  br label %sw.epilog, !dbg !8495

sw.default:                                       ; preds = %entry
  br label %sw.bb5, !dbg !8495

sw.bb5:                                           ; preds = %entry, %sw.default
  %7 = load i16, i16* %value, align 2, !dbg !8496
  %conv6 = zext i16 %7 to i32, !dbg !8496
  %or7 = or i32 %conv6, 128, !dbg !8496
  %conv8 = trunc i32 %or7 to i16, !dbg !8496
  store i16 %conv8, i16* %value, align 2, !dbg !8496
  br label %sw.epilog, !dbg !8497

sw.epilog:                                        ; preds = %sw.bb5, %sw.bb2, %sw.bb
  %8 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8498
  %guard_interval = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %8, i32 0, i32 8, !dbg !8499
  %9 = load i32, i32* %guard_interval, align 4, !dbg !8499
  switch i32 %9, label %sw.default20 [
    i32 0, label %sw.bb9
    i32 1, label %sw.bb12
    i32 3, label %sw.bb16
    i32 2, label %sw.bb21
  ], !dbg !8500

sw.bb9:                                           ; preds = %sw.epilog
  %10 = load i16, i16* %value, align 2, !dbg !8501
  %conv10 = zext i16 %10 to i32, !dbg !8501
  %conv11 = trunc i32 %conv10 to i16, !dbg !8501
  store i16 %conv11, i16* %value, align 2, !dbg !8501
  br label %sw.epilog25, !dbg !8503

sw.bb12:                                          ; preds = %sw.epilog
  %11 = load i16, i16* %value, align 2, !dbg !8504
  %conv13 = zext i16 %11 to i32, !dbg !8504
  %or14 = or i32 %conv13, 32, !dbg !8504
  %conv15 = trunc i32 %or14 to i16, !dbg !8504
  store i16 %conv15, i16* %value, align 2, !dbg !8504
  br label %sw.epilog25, !dbg !8505

sw.bb16:                                          ; preds = %sw.epilog
  %12 = load i16, i16* %value, align 2, !dbg !8506
  %conv17 = zext i16 %12 to i32, !dbg !8506
  %or18 = or i32 %conv17, 96, !dbg !8506
  %conv19 = trunc i32 %or18 to i16, !dbg !8506
  store i16 %conv19, i16* %value, align 2, !dbg !8506
  br label %sw.epilog25, !dbg !8507

sw.default20:                                     ; preds = %sw.epilog
  br label %sw.bb21, !dbg !8507

sw.bb21:                                          ; preds = %sw.epilog, %sw.default20
  %13 = load i16, i16* %value, align 2, !dbg !8508
  %conv22 = zext i16 %13 to i32, !dbg !8508
  %or23 = or i32 %conv22, 64, !dbg !8508
  %conv24 = trunc i32 %or23 to i16, !dbg !8508
  store i16 %conv24, i16* %value, align 2, !dbg !8508
  br label %sw.epilog25, !dbg !8509

sw.epilog25:                                      ; preds = %sw.bb21, %sw.bb16, %sw.bb12, %sw.bb9
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8510
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 1, !dbg !8511
  %15 = load i32, i32* %modulation, align 4, !dbg !8511
  switch i32 %15, label %sw.default33 [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb29
    i32 3, label %sw.bb34
  ], !dbg !8512

sw.bb26:                                          ; preds = %sw.epilog25
  %16 = load i16, i16* %value, align 2, !dbg !8513
  %conv27 = zext i16 %16 to i32, !dbg !8513
  %conv28 = trunc i32 %conv27 to i16, !dbg !8513
  store i16 %conv28, i16* %value, align 2, !dbg !8513
  br label %sw.epilog38, !dbg !8515

sw.bb29:                                          ; preds = %sw.epilog25
  %17 = load i16, i16* %value, align 2, !dbg !8516
  %conv30 = zext i16 %17 to i32, !dbg !8516
  %or31 = or i32 %conv30, 8, !dbg !8516
  %conv32 = trunc i32 %or31 to i16, !dbg !8516
  store i16 %conv32, i16* %value, align 2, !dbg !8516
  br label %sw.epilog38, !dbg !8517

sw.default33:                                     ; preds = %sw.epilog25
  br label %sw.bb34, !dbg !8517

sw.bb34:                                          ; preds = %sw.epilog25, %sw.default33
  %18 = load i16, i16* %value, align 2, !dbg !8518
  %conv35 = zext i16 %18 to i32, !dbg !8518
  %or36 = or i32 %conv35, 16, !dbg !8518
  %conv37 = trunc i32 %or36 to i16, !dbg !8518
  store i16 %conv37, i16* %value, align 2, !dbg !8518
  br label %sw.epilog38, !dbg !8519

sw.epilog38:                                      ; preds = %sw.bb34, %sw.bb29, %sw.bb26
  %19 = load i16, i16* %value, align 2, !dbg !8520
  %conv39 = zext i16 %19 to i32, !dbg !8520
  %or40 = or i32 %conv39, 1, !dbg !8520
  %conv41 = trunc i32 %or40 to i16, !dbg !8520
  store i16 %conv41, i16* %value, align 2, !dbg !8520
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8521
  %21 = load i16, i16* %value, align 2, !dbg !8522
  %call42 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %20, i16 zeroext 0, i16 zeroext %21) #8, !dbg !8523
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8524
  %23 = load i8, i8* %seq.addr, align 1, !dbg !8525
  %conv43 = zext i8 %23 to i32, !dbg !8525
  %shl = shl i32 %conv43, 4, !dbg !8526
  %or44 = or i32 %shl, 1, !dbg !8527
  %conv45 = trunc i32 %or44 to i16, !dbg !8528
  %call46 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 5, i16 zeroext %conv45) #8, !dbg !8529
  store i16 0, i16* %value, align 2, !dbg !8530
  %24 = load i16, i16* %value, align 2, !dbg !8531
  %conv47 = zext i16 %24 to i32, !dbg !8531
  %or48 = or i32 %conv47, 64, !dbg !8531
  %conv49 = trunc i32 %or48 to i16, !dbg !8531
  store i16 %conv49, i16* %value, align 2, !dbg !8531
  %25 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8533
  %hierarchy = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %25, i32 0, i32 9, !dbg !8535
  %26 = load i32, i32* %hierarchy, align 4, !dbg !8535
  %cmp = icmp eq i32 %26, 1, !dbg !8536
  br i1 %cmp, label %if.then, label %if.end, !dbg !8537

if.then:                                          ; preds = %sw.epilog38
  %27 = load i16, i16* %value, align 2, !dbg !8538
  %conv51 = zext i16 %27 to i32, !dbg !8538
  %or52 = or i32 %conv51, 16, !dbg !8538
  %conv53 = trunc i32 %or52 to i16, !dbg !8538
  store i16 %conv53, i16* %value, align 2, !dbg !8538
  br label %if.end, !dbg !8539

if.end:                                           ; preds = %if.then, %sw.epilog38
  %28 = load i16, i16* %value, align 2, !dbg !8540
  %conv54 = zext i16 %28 to i32, !dbg !8540
  %or55 = or i32 %conv54, 1, !dbg !8540
  %conv56 = trunc i32 %or55 to i16, !dbg !8540
  store i16 %conv56, i16* %value, align 2, !dbg !8540
  %29 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8542
  %hierarchy57 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %29, i32 0, i32 9, !dbg !8543
  %30 = load i32, i32* %hierarchy57, align 4, !dbg !8543
  %cmp58 = icmp eq i32 %30, 0, !dbg !8544
  br i1 %cmp58, label %cond.true, label %lor.lhs.false, !dbg !8545

lor.lhs.false:                                    ; preds = %if.end
  br i1 true, label %cond.true, label %cond.false, !dbg !8546

cond.true:                                        ; preds = %lor.lhs.false, %if.end
  %31 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8547
  %code_rate_HP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %31, i32 0, i32 11, !dbg !8548
  %32 = load i32, i32* %code_rate_HP, align 4, !dbg !8548
  br label %cond.end, !dbg !8546

cond.false:                                       ; preds = %lor.lhs.false
  %33 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8549
  %code_rate_LP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %33, i32 0, i32 12, !dbg !8550
  %34 = load i32, i32* %code_rate_LP, align 4, !dbg !8550
  br label %cond.end, !dbg !8546

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ %34, %cond.false ], !dbg !8546
  switch i32 %cond, label %sw.default76 [
    i32 2, label %sw.bb60
    i32 3, label %sw.bb64
    i32 5, label %sw.bb68
    i32 7, label %sw.bb72
    i32 1, label %sw.bb77
  ], !dbg !8551

sw.bb60:                                          ; preds = %cond.end
  %35 = load i16, i16* %value, align 2, !dbg !8552
  %conv61 = zext i16 %35 to i32, !dbg !8552
  %or62 = or i32 %conv61, 4, !dbg !8552
  %conv63 = trunc i32 %or62 to i16, !dbg !8552
  store i16 %conv63, i16* %value, align 2, !dbg !8552
  br label %sw.epilog81, !dbg !8554

sw.bb64:                                          ; preds = %cond.end
  %36 = load i16, i16* %value, align 2, !dbg !8555
  %conv65 = zext i16 %36 to i32, !dbg !8555
  %or66 = or i32 %conv65, 6, !dbg !8555
  %conv67 = trunc i32 %or66 to i16, !dbg !8555
  store i16 %conv67, i16* %value, align 2, !dbg !8555
  br label %sw.epilog81, !dbg !8556

sw.bb68:                                          ; preds = %cond.end
  %37 = load i16, i16* %value, align 2, !dbg !8557
  %conv69 = zext i16 %37 to i32, !dbg !8557
  %or70 = or i32 %conv69, 10, !dbg !8557
  %conv71 = trunc i32 %or70 to i16, !dbg !8557
  store i16 %conv71, i16* %value, align 2, !dbg !8557
  br label %sw.epilog81, !dbg !8558

sw.bb72:                                          ; preds = %cond.end
  %38 = load i16, i16* %value, align 2, !dbg !8559
  %conv73 = zext i16 %38 to i32, !dbg !8559
  %or74 = or i32 %conv73, 14, !dbg !8559
  %conv75 = trunc i32 %or74 to i16, !dbg !8559
  store i16 %conv75, i16* %value, align 2, !dbg !8559
  br label %sw.epilog81, !dbg !8560

sw.default76:                                     ; preds = %cond.end
  br label %sw.bb77, !dbg !8560

sw.bb77:                                          ; preds = %cond.end, %sw.default76
  %39 = load i16, i16* %value, align 2, !dbg !8561
  %conv78 = zext i16 %39 to i32, !dbg !8561
  %or79 = or i32 %conv78, 2, !dbg !8561
  %conv80 = trunc i32 %or79 to i16, !dbg !8561
  store i16 %conv80, i16* %value, align 2, !dbg !8561
  br label %sw.epilog81, !dbg !8562

sw.epilog81:                                      ; preds = %sw.bb77, %sw.bb72, %sw.bb68, %sw.bb64, %sw.bb60
  %40 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8563
  %41 = load i16, i16* %value, align 2, !dbg !8564
  %call82 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %40, i16 zeroext 208, i16 zeroext %41) #8, !dbg !8565
  %42 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8566
  %call83 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %42, i16 zeroext 26, i16 zeroext 26240) #8, !dbg !8567
  %43 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8568
  %call84 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %43, i16 zeroext 32, i16 zeroext 3) #8, !dbg !8569
  %44 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8570
  %call85 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %44, i16 zeroext 29, i16 zeroext 4723) #8, !dbg !8571
  %45 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8572
  %call86 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %45, i16 zeroext 33, i16 zeroext 5) #8, !dbg !8573
  %46 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8574
  %transmission_mode87 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %46, i32 0, i32 6, !dbg !8575
  %47 = load i32, i32* %transmission_mode87, align 4, !dbg !8575
  switch i32 %47, label %sw.default91 [
    i32 1, label %sw.bb88
    i32 3, label %sw.bb89
    i32 0, label %sw.bb90
  ], !dbg !8576

sw.bb88:                                          ; preds = %sw.epilog81
  store i16 256, i16* %value, align 2, !dbg !8577
  br label %sw.epilog92, !dbg !8579

sw.bb89:                                          ; preds = %sw.epilog81
  store i16 128, i16* %value, align 2, !dbg !8580
  br label %sw.epilog92, !dbg !8581

sw.bb90:                                          ; preds = %sw.epilog81
  br label %sw.default91, !dbg !8581

sw.default91:                                     ; preds = %sw.epilog81, %sw.bb90
  store i16 64, i16* %value, align 2, !dbg !8582
  br label %sw.epilog92, !dbg !8583

sw.epilog92:                                      ; preds = %sw.default91, %sw.bb89, %sw.bb88
  %48 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8584
  %guard_interval93 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %48, i32 0, i32 8, !dbg !8585
  %49 = load i32, i32* %guard_interval93, align 4, !dbg !8585
  switch i32 %49, label %sw.default105 [
    i32 1, label %sw.bb94
    i32 2, label %sw.bb97
    i32 3, label %sw.bb101
    i32 0, label %sw.bb106
  ], !dbg !8586

sw.bb94:                                          ; preds = %sw.epilog92
  %50 = load i16, i16* %value, align 2, !dbg !8587
  %conv95 = zext i16 %50 to i32, !dbg !8587
  %mul = mul i32 %conv95, 2, !dbg !8587
  %conv96 = trunc i32 %mul to i16, !dbg !8587
  store i16 %conv96, i16* %value, align 2, !dbg !8587
  br label %sw.epilog110, !dbg !8589

sw.bb97:                                          ; preds = %sw.epilog92
  %51 = load i16, i16* %value, align 2, !dbg !8590
  %conv98 = zext i16 %51 to i32, !dbg !8590
  %mul99 = mul i32 %conv98, 4, !dbg !8590
  %conv100 = trunc i32 %mul99 to i16, !dbg !8590
  store i16 %conv100, i16* %value, align 2, !dbg !8590
  br label %sw.epilog110, !dbg !8591

sw.bb101:                                         ; preds = %sw.epilog92
  %52 = load i16, i16* %value, align 2, !dbg !8592
  %conv102 = zext i16 %52 to i32, !dbg !8592
  %mul103 = mul i32 %conv102, 8, !dbg !8592
  %conv104 = trunc i32 %mul103 to i16, !dbg !8592
  store i16 %conv104, i16* %value, align 2, !dbg !8592
  br label %sw.epilog110, !dbg !8593

sw.default105:                                    ; preds = %sw.epilog92
  br label %sw.bb106, !dbg !8593

sw.bb106:                                         ; preds = %sw.epilog92, %sw.default105
  %53 = load i16, i16* %value, align 2, !dbg !8594
  %conv107 = zext i16 %53 to i32, !dbg !8594
  %mul108 = mul i32 %conv107, 1, !dbg !8594
  %conv109 = trunc i32 %mul108 to i16, !dbg !8594
  store i16 %conv109, i16* %value, align 2, !dbg !8594
  br label %sw.epilog110, !dbg !8595

sw.epilog110:                                     ; preds = %sw.bb106, %sw.bb101, %sw.bb97, %sw.bb94
  %54 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8596
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %54, i32 0, i32 1, !dbg !8598
  %diversity_delay = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 16, !dbg !8599
  %55 = load i16, i16* %diversity_delay, align 2, !dbg !8599
  %conv111 = zext i16 %55 to i32, !dbg !8596
  %cmp112 = icmp eq i32 %conv111, 0, !dbg !8600
  br i1 %cmp112, label %if.then114, label %if.else, !dbg !8601

if.then114:                                       ; preds = %sw.epilog110
  %56 = load i16, i16* %value, align 2, !dbg !8602
  %conv115 = zext i16 %56 to i32, !dbg !8602
  %mul116 = mul i32 %conv115, 3, !dbg !8603
  %div117 = sdiv i32 %mul116, 2, !dbg !8604
  %add = add i32 %div117, 48, !dbg !8605
  %conv118 = trunc i32 %add to i16, !dbg !8606
  %57 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8607
  %div_sync_wait = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %57, i32 0, i32 11, !dbg !8608
  store i16 %conv118, i16* %div_sync_wait, align 2, !dbg !8609
  br label %if.end128, !dbg !8607

if.else:                                          ; preds = %sw.epilog110
  %58 = load i16, i16* %value, align 2, !dbg !8610
  %conv119 = zext i16 %58 to i32, !dbg !8610
  %mul120 = mul i32 %conv119, 3, !dbg !8611
  %div121 = sdiv i32 %mul120, 2, !dbg !8612
  %59 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8613
  %cfg122 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %59, i32 0, i32 1, !dbg !8614
  %diversity_delay123 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg122, i32 0, i32 16, !dbg !8615
  %60 = load i16, i16* %diversity_delay123, align 2, !dbg !8615
  %conv124 = zext i16 %60 to i32, !dbg !8613
  %add125 = add i32 %div121, %conv124, !dbg !8616
  %conv126 = trunc i32 %add125 to i16, !dbg !8617
  %61 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8618
  %div_sync_wait127 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %61, i32 0, i32 11, !dbg !8619
  store i16 %conv126, i16* %div_sync_wait127, align 2, !dbg !8620
  br label %if.end128

if.end128:                                        ; preds = %if.else, %if.then114
  %62 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8621
  %div_force_off = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %62, i32 0, i32 10, !dbg !8622
  %bf.load = load i8, i8* %div_force_off, align 4, !dbg !8623
  %bf.clear = and i8 %bf.load, -2, !dbg !8623
  store i8 %bf.clear, i8* %div_force_off, align 4, !dbg !8623
  %63 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8624
  %demod = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %63, i32 0, i32 0, !dbg !8625
  %64 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8626
  %div_state = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %64, i32 0, i32 10, !dbg !8627
  %bf.load129 = load i8, i8* %div_state, align 4, !dbg !8627
  %bf.lshr = lshr i8 %bf.load129, 1, !dbg !8627
  %bf.clear130 = and i8 %bf.lshr, 1, !dbg !8627
  %conv131 = zext i8 %bf.clear130 to i32, !dbg !8626
  %call132 = call i32 @dib7000p_set_diversity_in(%struct.dvb_frontend* %demod, i32 %conv131) #8, !dbg !8628
  %65 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %ch.addr, align 8, !dbg !8629
  %modulation133 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %65, i32 0, i32 1, !dbg !8630
  %66 = load i32, i32* %modulation133, align 4, !dbg !8630
  switch i32 %66, label %sw.default143 [
    i32 3, label %sw.bb134
    i32 1, label %sw.bb138
  ], !dbg !8631

sw.bb134:                                         ; preds = %if.end128
  %arrayidx = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 0, !dbg !8632
  store i16 328, i16* %arrayidx, align 2, !dbg !8634
  %arrayidx135 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 1, !dbg !8635
  store i16 -16, i16* %arrayidx135, align 2, !dbg !8636
  %arrayidx136 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 2, !dbg !8637
  store i16 164, i16* %arrayidx136, align 2, !dbg !8638
  %arrayidx137 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 3, !dbg !8639
  store i16 -8, i16* %arrayidx137, align 2, !dbg !8640
  br label %sw.epilog148, !dbg !8641

sw.bb138:                                         ; preds = %if.end128
  %arrayidx139 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 0, !dbg !8642
  store i16 573, i16* %arrayidx139, align 2, !dbg !8643
  %arrayidx140 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 1, !dbg !8644
  store i16 -33, i16* %arrayidx140, align 2, !dbg !8645
  %arrayidx141 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 2, !dbg !8646
  store i16 164, i16* %arrayidx141, align 2, !dbg !8647
  %arrayidx142 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 3, !dbg !8648
  store i16 -16, i16* %arrayidx142, align 2, !dbg !8649
  br label %sw.epilog148, !dbg !8650

sw.default143:                                    ; preds = %if.end128
  %arrayidx144 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 0, !dbg !8651
  store i16 2458, i16* %arrayidx144, align 2, !dbg !8652
  %arrayidx145 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 1, !dbg !8653
  store i16 -82, i16* %arrayidx145, align 2, !dbg !8654
  %arrayidx146 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 2, !dbg !8655
  store i16 819, i16* %arrayidx146, align 2, !dbg !8656
  %arrayidx147 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 3, !dbg !8657
  store i16 -8, i16* %arrayidx147, align 2, !dbg !8658
  br label %sw.epilog148, !dbg !8659

sw.epilog148:                                     ; preds = %sw.default143, %sw.bb138, %sw.bb134
  store i16 0, i16* %value, align 2, !dbg !8660
  br label %for.cond, !dbg !8662

for.cond:                                         ; preds = %for.inc, %sw.epilog148
  %67 = load i16, i16* %value, align 2, !dbg !8663
  %conv149 = zext i16 %67 to i32, !dbg !8663
  %cmp150 = icmp slt i32 %conv149, 4, !dbg !8665
  br i1 %cmp150, label %for.body, label %for.end, !dbg !8666

for.body:                                         ; preds = %for.cond
  %68 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8667
  %69 = load i16, i16* %value, align 2, !dbg !8668
  %conv152 = zext i16 %69 to i32, !dbg !8668
  %add153 = add i32 187, %conv152, !dbg !8669
  %conv154 = trunc i32 %add153 to i16, !dbg !8670
  %70 = load i16, i16* %value, align 2, !dbg !8671
  %idxprom = zext i16 %70 to i64, !dbg !8672
  %arrayidx155 = getelementptr [4 x i16], [4 x i16]* %est, i64 0, i64 %idxprom, !dbg !8672
  %71 = load i16, i16* %arrayidx155, align 2, !dbg !8672
  %call156 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %68, i16 zeroext %conv154, i16 zeroext %71) #8, !dbg !8673
  br label %for.inc, !dbg !8673

for.inc:                                          ; preds = %for.body
  %72 = load i16, i16* %value, align 2, !dbg !8674
  %inc = add i16 %72, 1, !dbg !8674
  store i16 %inc, i16* %value, align 2, !dbg !8674
  br label %for.cond, !dbg !8675, !llvm.loop !8676

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8678
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_bandwidth(%struct.dib7000p_state* %state, i32 %bw) #0 !dbg !8679 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %bw.addr = alloca i32, align 4
  %timf = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8682, metadata !DIExpression()), !dbg !8683
  store i32 %bw, i32* %bw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bw.addr, metadata !8684, metadata !DIExpression()), !dbg !8685
  call void @llvm.dbg.declare(metadata i32* %timf, metadata !8686, metadata !DIExpression()), !dbg !8687
  %0 = load i32, i32* %bw.addr, align 4, !dbg !8688
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8689
  %current_bandwidth = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %1, i32 0, i32 7, !dbg !8690
  store i32 %0, i32* %current_bandwidth, align 4, !dbg !8691
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8692
  %timf1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %2, i32 0, i32 9, !dbg !8694
  %3 = load i32, i32* %timf1, align 8, !dbg !8694
  %cmp = icmp eq i32 %3, 0, !dbg !8695
  br i1 %cmp, label %if.then, label %if.else, !dbg !8696

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8697

do.body:                                          ; preds = %if.then
  %4 = load i32, i32* @debug, align 4, !dbg !8699
  %tobool = icmp ne i32 %4, 0, !dbg !8699
  br i1 %tobool, label %if.then2, label %if.end, !dbg !8702

if.then2:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dib7000p_set_bandwidth, i64 0, i64 0)) #9, !dbg !8699
  br label %if.end, !dbg !8699

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !8702

do.end:                                           ; preds = %if.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8703
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 1, !dbg !8704
  %bw3 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 6, !dbg !8705
  %6 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw3, align 8, !dbg !8705
  %timf4 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %6, i32 0, i32 14, !dbg !8706
  %7 = load i32, i32* %timf4, align 4, !dbg !8706
  store i32 %7, i32* %timf, align 4, !dbg !8707
  br label %if.end12, !dbg !8708

if.else:                                          ; preds = %entry
  br label %do.body5, !dbg !8709

do.body5:                                         ; preds = %if.else
  %8 = load i32, i32* @debug, align 4, !dbg !8711
  %tobool6 = icmp ne i32 %8, 0, !dbg !8711
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !8714

if.then7:                                         ; preds = %do.body5
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.dib7000p_set_bandwidth, i64 0, i64 0)) #9, !dbg !8711
  br label %if.end9, !dbg !8711

if.end9:                                          ; preds = %if.then7, %do.body5
  br label %do.end10, !dbg !8714

do.end10:                                         ; preds = %if.end9
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8715
  %timf11 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %9, i32 0, i32 9, !dbg !8716
  %10 = load i32, i32* %timf11, align 8, !dbg !8716
  store i32 %10, i32* %timf, align 4, !dbg !8717
  br label %if.end12

if.end12:                                         ; preds = %do.end10, %do.end
  %11 = load i32, i32* %timf, align 4, !dbg !8718
  %12 = load i32, i32* %bw.addr, align 4, !dbg !8719
  %div = udiv i32 %12, 50, !dbg !8720
  %mul = mul i32 %11, %div, !dbg !8721
  %div13 = udiv i32 %mul, 160, !dbg !8722
  store i32 %div13, i32* %timf, align 4, !dbg !8723
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8724
  %14 = load i32, i32* %timf, align 4, !dbg !8725
  %shr = lshr i32 %14, 16, !dbg !8726
  %and = and i32 %shr, 65535, !dbg !8727
  %conv = trunc i32 %and to i16, !dbg !8728
  %call14 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %13, i16 zeroext 23, i16 zeroext %conv) #8, !dbg !8729
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8730
  %16 = load i32, i32* %timf, align 4, !dbg !8731
  %and15 = and i32 %16, 65535, !dbg !8732
  %conv16 = trunc i32 %and15 to i16, !dbg !8733
  %call17 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %15, i16 zeroext 24, i16 zeroext %conv16) #8, !dbg !8734
  ret i32 0, !dbg !8735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_set_diversity_in(%struct.dvb_frontend* %demod, i32 %onoff) #0 !dbg !8736 {
entry:
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %onoff.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i32 %onoff, i32* %onoff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onoff.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !8741, metadata !DIExpression()), !dbg !8742
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !8743
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !8744
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !8744
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !8743
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !8742
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8745
  %div_force_off = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 10, !dbg !8747
  %bf.load = load i8, i8* %div_force_off, align 4, !dbg !8747
  %bf.clear = and i8 %bf.load, 1, !dbg !8747
  %tobool = icmp ne i8 %bf.clear, 0, !dbg !8745
  br i1 %tobool, label %if.then, label %if.else, !dbg !8748

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !8749

do.body:                                          ; preds = %if.then
  %4 = load i32, i32* @debug, align 4, !dbg !8751
  %tobool1 = icmp ne i32 %4, 0, !dbg !8751
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !8754

if.then2:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.dib7000p_set_diversity_in, i64 0, i64 0)) #9, !dbg !8751
  br label %if.end, !dbg !8751

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !8754

do.end:                                           ; preds = %if.end
  store i32 0, i32* %onoff.addr, align 4, !dbg !8755
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8756
  %call3 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %5, i16 zeroext 207, i16 zeroext 0) #8, !dbg !8757
  br label %if.end7, !dbg !8758

if.else:                                          ; preds = %entry
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8759
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8760
  %div_sync_wait = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %7, i32 0, i32 11, !dbg !8761
  %8 = load i16, i16* %div_sync_wait, align 2, !dbg !8761
  %conv = zext i16 %8 to i32, !dbg !8760
  %shl = shl i32 %conv, 4, !dbg !8762
  %or = or i32 %shl, 4, !dbg !8763
  %or4 = or i32 %or, 2, !dbg !8764
  %conv5 = trunc i32 %or4 to i16, !dbg !8765
  %call6 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 207, i16 zeroext %conv5) #8, !dbg !8766
  br label %if.end7

if.end7:                                          ; preds = %if.else, %do.end
  %9 = load i32, i32* %onoff.addr, align 4, !dbg !8767
  %conv8 = trunc i32 %9 to i8, !dbg !8768
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8769
  %div_state = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 10, !dbg !8770
  %bf.load9 = load i8, i8* %div_state, align 4, !dbg !8771
  %bf.value = and i8 %conv8, 1, !dbg !8771
  %bf.shl = shl i8 %bf.value, 1, !dbg !8771
  %bf.clear10 = and i8 %bf.load9, -3, !dbg !8771
  %bf.set = or i8 %bf.clear10, %bf.shl, !dbg !8771
  store i8 %bf.set, i8* %div_state, align 4, !dbg !8771
  %11 = load i32, i32* %onoff.addr, align 4, !dbg !8772
  %tobool11 = icmp ne i32 %11, 0, !dbg !8772
  br i1 %tobool11, label %if.then12, label %if.else15, !dbg !8774

if.then12:                                        ; preds = %if.end7
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8775
  %call13 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 204, i16 zeroext 6) #8, !dbg !8777
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8778
  %call14 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %13, i16 zeroext 205, i16 zeroext 16) #8, !dbg !8779
  br label %if.end18, !dbg !8780

if.else15:                                        ; preds = %if.end7
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8781
  %call16 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 204, i16 zeroext 1) #8, !dbg !8783
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !8784
  %call17 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %15, i16 zeroext 205, i16 zeroext 0) #8, !dbg !8785
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then12
  ret i32 0, !dbg !8786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_update_timf(%struct.dib7000p_state* %state) #0 !dbg !8787 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %timf = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  call void @llvm.dbg.declare(metadata i32* %timf, metadata !8790, metadata !DIExpression()), !dbg !8791
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8792
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 427) #8, !dbg !8793
  %conv = zext i16 %call to i32, !dbg !8793
  %shl = shl i32 %conv, 16, !dbg !8794
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8795
  %call1 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %1, i16 zeroext 428) #8, !dbg !8796
  %conv2 = zext i16 %call1 to i32, !dbg !8796
  %or = or i32 %shl, %conv2, !dbg !8797
  store i32 %or, i32* %timf, align 4, !dbg !8791
  %2 = load i32, i32* %timf, align 4, !dbg !8798
  %mul = mul i32 %2, 160, !dbg !8799
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8800
  %current_bandwidth = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 7, !dbg !8801
  %4 = load i32, i32* %current_bandwidth, align 4, !dbg !8801
  %div = udiv i32 %4, 50, !dbg !8802
  %div3 = udiv i32 %mul, %div, !dbg !8803
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8804
  %timf4 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 9, !dbg !8805
  store i32 %div3, i32* %timf4, align 8, !dbg !8806
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8807
  %7 = load i32, i32* %timf, align 4, !dbg !8808
  %shr = lshr i32 %7, 16, !dbg !8809
  %conv5 = trunc i32 %shr to i16, !dbg !8810
  %call6 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 23, i16 zeroext %conv5) #8, !dbg !8811
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8812
  %9 = load i32, i32* %timf, align 4, !dbg !8813
  %and = and i32 %9, 65535, !dbg !8814
  %conv7 = trunc i32 %and to i16, !dbg !8815
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %8, i16 zeroext 24, i16 zeroext %conv7) #8, !dbg !8816
  br label %do.body, !dbg !8817

do.body:                                          ; preds = %entry
  %10 = load i32, i32* @debug, align 4, !dbg !8818
  %tobool = icmp ne i32 %10, 0, !dbg !8818
  br i1 %tobool, label %if.then, label %if.end, !dbg !8821

if.then:                                          ; preds = %do.body
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8818
  %timf9 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %11, i32 0, i32 9, !dbg !8818
  %12 = load i32, i32* %timf9, align 8, !dbg !8818
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8818
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %13, i32 0, i32 1, !dbg !8818
  %bw = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 6, !dbg !8818
  %14 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !8818
  %timf10 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %14, i32 0, i32 14, !dbg !8818
  %15 = load i32, i32* %timf10, align 4, !dbg !8818
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.dib7000p_update_timf, i64 0, i64 0), i32 %12, i32 %15) #9, !dbg !8818
  br label %if.end, !dbg !8818

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8821

do.end:                                           ; preds = %if.end
  ret void, !dbg !8822
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_spur_protect(%struct.dib7000p_state* %state, i32 %rf_khz, i32 %bw) #0 !dbg !4563 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %rf_khz.addr = alloca i32, align 4
  %bw.addr = alloca i32, align 4
  %xtal = alloca i32, align 4
  %f_rel = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  %k = alloca i32, align 4
  %coef_re = alloca [8 x i32], align 16
  %coef_im = alloca [8 x i32], align 16
  %bw_khz = alloca i32, align 4
  %pha = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !8823, metadata !DIExpression()), !dbg !8824
  store i32 %rf_khz, i32* %rf_khz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rf_khz.addr, metadata !8825, metadata !DIExpression()), !dbg !8826
  store i32 %bw, i32* %bw.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bw.addr, metadata !8827, metadata !DIExpression()), !dbg !8828
  call void @llvm.dbg.declare(metadata i32* %xtal, metadata !8829, metadata !DIExpression()), !dbg !8830
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8831
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 1, !dbg !8832
  %bw1 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 6, !dbg !8833
  %1 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw1, align 8, !dbg !8833
  %xtal_hz = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %1, i32 0, i32 15, !dbg !8834
  %2 = load i32, i32* %xtal_hz, align 4, !dbg !8834
  %div = udiv i32 %2, 1000, !dbg !8835
  store i32 %div, i32* %xtal, align 4, !dbg !8830
  call void @llvm.dbg.declare(metadata i32* %f_rel, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !8838, metadata !DIExpression()), !dbg !8840
  %3 = load i32, i32* %rf_khz.addr, align 4, !dbg !8840
  store i32 %3, i32* %__x, align 4, !dbg !8840
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !8841, metadata !DIExpression()), !dbg !8840
  %4 = load i32, i32* %xtal, align 4, !dbg !8840
  store i32 %4, i32* %__d, align 4, !dbg !8840
  %5 = load i32, i32* %__x, align 4, !dbg !8840
  %6 = load i32, i32* %__d, align 4, !dbg !8840
  %div2 = udiv i32 %6, 2, !dbg !8840
  %add = add i32 %5, %div2, !dbg !8840
  %7 = load i32, i32* %__d, align 4, !dbg !8840
  %div3 = udiv i32 %add, %7, !dbg !8840
  store i32 %div3, i32* %tmp, align 4, !dbg !8840
  %8 = load i32, i32* %tmp, align 4, !dbg !8840
  %9 = load i32, i32* %xtal, align 4, !dbg !8842
  %mul = mul i32 %8, %9, !dbg !8843
  %10 = load i32, i32* %rf_khz.addr, align 4, !dbg !8844
  %sub = sub i32 %mul, %10, !dbg !8845
  store i32 %sub, i32* %f_rel, align 4, !dbg !8837
  call void @llvm.dbg.declare(metadata i32* %k, metadata !8846, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.declare(metadata [8 x i32]* %coef_re, metadata !8848, metadata !DIExpression()), !dbg !8850
  call void @llvm.dbg.declare(metadata [8 x i32]* %coef_im, metadata !8851, metadata !DIExpression()), !dbg !8852
  call void @llvm.dbg.declare(metadata i32* %bw_khz, metadata !8853, metadata !DIExpression()), !dbg !8854
  %11 = load i32, i32* %bw.addr, align 4, !dbg !8855
  store i32 %11, i32* %bw_khz, align 4, !dbg !8854
  call void @llvm.dbg.declare(metadata i32* %pha, metadata !8856, metadata !DIExpression()), !dbg !8857
  br label %do.body, !dbg !8858

do.body:                                          ; preds = %entry
  %12 = load i32, i32* @debug, align 4, !dbg !8859
  %tobool = icmp ne i32 %12, 0, !dbg !8859
  br i1 %tobool, label %if.then, label %if.end, !dbg !8862

if.then:                                          ; preds = %do.body
  %13 = load i32, i32* %f_rel, align 4, !dbg !8859
  %14 = load i32, i32* %rf_khz.addr, align 4, !dbg !8859
  %15 = load i32, i32* %xtal, align 4, !dbg !8859
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7000p_spur_protect, i64 0, i64 0), i32 %13, i32 %14, i32 %15) #9, !dbg !8859
  br label %if.end, !dbg !8859

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !8862

do.end:                                           ; preds = %if.end
  %16 = load i32, i32* %f_rel, align 4, !dbg !8863
  %17 = load i32, i32* %bw_khz, align 4, !dbg !8865
  %sub4 = sub i32 0, %17, !dbg !8866
  %div5 = sdiv i32 %sub4, 2, !dbg !8867
  %cmp = icmp slt i32 %16, %div5, !dbg !8868
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !8869

lor.lhs.false:                                    ; preds = %do.end
  %18 = load i32, i32* %f_rel, align 4, !dbg !8870
  %19 = load i32, i32* %bw_khz, align 4, !dbg !8871
  %div6 = sdiv i32 %19, 2, !dbg !8872
  %cmp7 = icmp sgt i32 %18, %div6, !dbg !8873
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8874

if.then8:                                         ; preds = %lor.lhs.false, %do.end
  br label %return, !dbg !8875

if.end9:                                          ; preds = %lor.lhs.false
  %20 = load i32, i32* %bw_khz, align 4, !dbg !8876
  %div10 = sdiv i32 %20, 100, !dbg !8876
  store i32 %div10, i32* %bw_khz, align 4, !dbg !8876
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !8877
  %call11 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %21, i16 zeroext 142, i16 zeroext 1552) #8, !dbg !8878
  store i32 0, i32* %k, align 4, !dbg !8879
  br label %for.cond, !dbg !8881

for.cond:                                         ; preds = %for.inc, %if.end9
  %22 = load i32, i32* %k, align 4, !dbg !8882
  %cmp12 = icmp slt i32 %22, 8, !dbg !8884
  br i1 %cmp12, label %for.body, label %for.end, !dbg !8885

for.body:                                         ; preds = %for.cond
  %23 = load i32, i32* %f_rel, align 4, !dbg !8886
  %24 = load i32, i32* %k, align 4, !dbg !8888
  %add13 = add i32 %24, 1, !dbg !8889
  %mul14 = mul i32 %23, %add13, !dbg !8890
  %mul15 = mul i32 %mul14, 112, !dbg !8891
  %mul16 = mul i32 %mul15, 80, !dbg !8892
  %25 = load i32, i32* %bw_khz, align 4, !dbg !8893
  %div17 = sdiv i32 %mul16, %25, !dbg !8894
  %div18 = sdiv i32 %div17, 1000, !dbg !8895
  %and = and i32 %div18, 1023, !dbg !8896
  store i32 %and, i32* %pha, align 4, !dbg !8897
  %26 = load i32, i32* %pha, align 4, !dbg !8898
  %cmp19 = icmp eq i32 %26, 0, !dbg !8900
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !8901

if.then20:                                        ; preds = %for.body
  %27 = load i32, i32* %k, align 4, !dbg !8902
  %idxprom = sext i32 %27 to i64, !dbg !8904
  %arrayidx = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom, !dbg !8904
  store i32 256, i32* %arrayidx, align 4, !dbg !8905
  %28 = load i32, i32* %k, align 4, !dbg !8906
  %idxprom21 = sext i32 %28 to i64, !dbg !8907
  %arrayidx22 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom21, !dbg !8907
  store i32 0, i32* %arrayidx22, align 4, !dbg !8908
  br label %if.end119, !dbg !8909

if.else:                                          ; preds = %for.body
  %29 = load i32, i32* %pha, align 4, !dbg !8910
  %cmp23 = icmp ult i32 %29, 256, !dbg !8912
  br i1 %cmp23, label %if.then24, label %if.else37, !dbg !8913

if.then24:                                        ; preds = %if.else
  %30 = load i32, i32* %pha, align 4, !dbg !8914
  %and25 = and i32 %30, 255, !dbg !8916
  %sub26 = sub i32 256, %and25, !dbg !8917
  %idxprom27 = zext i32 %sub26 to i64, !dbg !8918
  %arrayidx28 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom27, !dbg !8918
  %31 = load i8, i8* %arrayidx28, align 1, !dbg !8918
  %conv = zext i8 %31 to i32, !dbg !8918
  %32 = load i32, i32* %k, align 4, !dbg !8919
  %idxprom29 = sext i32 %32 to i64, !dbg !8920
  %arrayidx30 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom29, !dbg !8920
  store i32 %conv, i32* %arrayidx30, align 4, !dbg !8921
  %33 = load i32, i32* %pha, align 4, !dbg !8922
  %and31 = and i32 %33, 255, !dbg !8923
  %idxprom32 = zext i32 %and31 to i64, !dbg !8924
  %arrayidx33 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom32, !dbg !8924
  %34 = load i8, i8* %arrayidx33, align 1, !dbg !8924
  %conv34 = zext i8 %34 to i32, !dbg !8924
  %35 = load i32, i32* %k, align 4, !dbg !8925
  %idxprom35 = sext i32 %35 to i64, !dbg !8926
  %arrayidx36 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom35, !dbg !8926
  store i32 %conv34, i32* %arrayidx36, align 4, !dbg !8927
  br label %if.end118, !dbg !8928

if.else37:                                        ; preds = %if.else
  %36 = load i32, i32* %pha, align 4, !dbg !8929
  %cmp38 = icmp eq i32 %36, 256, !dbg !8931
  br i1 %cmp38, label %if.then40, label %if.else45, !dbg !8932

if.then40:                                        ; preds = %if.else37
  %37 = load i32, i32* %k, align 4, !dbg !8933
  %idxprom41 = sext i32 %37 to i64, !dbg !8935
  %arrayidx42 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom41, !dbg !8935
  store i32 0, i32* %arrayidx42, align 4, !dbg !8936
  %38 = load i32, i32* %k, align 4, !dbg !8937
  %idxprom43 = sext i32 %38 to i64, !dbg !8938
  %arrayidx44 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom43, !dbg !8938
  store i32 256, i32* %arrayidx44, align 4, !dbg !8939
  br label %if.end117, !dbg !8940

if.else45:                                        ; preds = %if.else37
  %39 = load i32, i32* %pha, align 4, !dbg !8941
  %cmp46 = icmp ult i32 %39, 512, !dbg !8943
  br i1 %cmp46, label %if.then48, label %if.else63, !dbg !8944

if.then48:                                        ; preds = %if.else45
  %40 = load i32, i32* %pha, align 4, !dbg !8945
  %and49 = and i32 %40, 255, !dbg !8947
  %idxprom50 = zext i32 %and49 to i64, !dbg !8948
  %arrayidx51 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom50, !dbg !8948
  %41 = load i8, i8* %arrayidx51, align 1, !dbg !8948
  %conv52 = zext i8 %41 to i32, !dbg !8948
  %sub53 = sub i32 0, %conv52, !dbg !8949
  %42 = load i32, i32* %k, align 4, !dbg !8950
  %idxprom54 = sext i32 %42 to i64, !dbg !8951
  %arrayidx55 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom54, !dbg !8951
  store i32 %sub53, i32* %arrayidx55, align 4, !dbg !8952
  %43 = load i32, i32* %pha, align 4, !dbg !8953
  %and56 = and i32 %43, 255, !dbg !8954
  %sub57 = sub i32 256, %and56, !dbg !8955
  %idxprom58 = zext i32 %sub57 to i64, !dbg !8956
  %arrayidx59 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom58, !dbg !8956
  %44 = load i8, i8* %arrayidx59, align 1, !dbg !8956
  %conv60 = zext i8 %44 to i32, !dbg !8956
  %45 = load i32, i32* %k, align 4, !dbg !8957
  %idxprom61 = sext i32 %45 to i64, !dbg !8958
  %arrayidx62 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom61, !dbg !8958
  store i32 %conv60, i32* %arrayidx62, align 4, !dbg !8959
  br label %if.end116, !dbg !8960

if.else63:                                        ; preds = %if.else45
  %46 = load i32, i32* %pha, align 4, !dbg !8961
  %cmp64 = icmp eq i32 %46, 512, !dbg !8963
  br i1 %cmp64, label %if.then66, label %if.else71, !dbg !8964

if.then66:                                        ; preds = %if.else63
  %47 = load i32, i32* %k, align 4, !dbg !8965
  %idxprom67 = sext i32 %47 to i64, !dbg !8967
  %arrayidx68 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom67, !dbg !8967
  store i32 -256, i32* %arrayidx68, align 4, !dbg !8968
  %48 = load i32, i32* %k, align 4, !dbg !8969
  %idxprom69 = sext i32 %48 to i64, !dbg !8970
  %arrayidx70 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom69, !dbg !8970
  store i32 0, i32* %arrayidx70, align 4, !dbg !8971
  br label %if.end115, !dbg !8972

if.else71:                                        ; preds = %if.else63
  %49 = load i32, i32* %pha, align 4, !dbg !8973
  %cmp72 = icmp ult i32 %49, 768, !dbg !8975
  br i1 %cmp72, label %if.then74, label %if.else90, !dbg !8976

if.then74:                                        ; preds = %if.else71
  %50 = load i32, i32* %pha, align 4, !dbg !8977
  %and75 = and i32 %50, 255, !dbg !8979
  %sub76 = sub i32 256, %and75, !dbg !8980
  %idxprom77 = zext i32 %sub76 to i64, !dbg !8981
  %arrayidx78 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom77, !dbg !8981
  %51 = load i8, i8* %arrayidx78, align 1, !dbg !8981
  %conv79 = zext i8 %51 to i32, !dbg !8981
  %sub80 = sub i32 0, %conv79, !dbg !8982
  %52 = load i32, i32* %k, align 4, !dbg !8983
  %idxprom81 = sext i32 %52 to i64, !dbg !8984
  %arrayidx82 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom81, !dbg !8984
  store i32 %sub80, i32* %arrayidx82, align 4, !dbg !8985
  %53 = load i32, i32* %pha, align 4, !dbg !8986
  %and83 = and i32 %53, 255, !dbg !8987
  %idxprom84 = zext i32 %and83 to i64, !dbg !8988
  %arrayidx85 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom84, !dbg !8988
  %54 = load i8, i8* %arrayidx85, align 1, !dbg !8988
  %conv86 = zext i8 %54 to i32, !dbg !8988
  %sub87 = sub i32 0, %conv86, !dbg !8989
  %55 = load i32, i32* %k, align 4, !dbg !8990
  %idxprom88 = sext i32 %55 to i64, !dbg !8991
  %arrayidx89 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom88, !dbg !8991
  store i32 %sub87, i32* %arrayidx89, align 4, !dbg !8992
  br label %if.end114, !dbg !8993

if.else90:                                        ; preds = %if.else71
  %56 = load i32, i32* %pha, align 4, !dbg !8994
  %cmp91 = icmp eq i32 %56, 768, !dbg !8996
  br i1 %cmp91, label %if.then93, label %if.else98, !dbg !8997

if.then93:                                        ; preds = %if.else90
  %57 = load i32, i32* %k, align 4, !dbg !8998
  %idxprom94 = sext i32 %57 to i64, !dbg !9000
  %arrayidx95 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom94, !dbg !9000
  store i32 0, i32* %arrayidx95, align 4, !dbg !9001
  %58 = load i32, i32* %k, align 4, !dbg !9002
  %idxprom96 = sext i32 %58 to i64, !dbg !9003
  %arrayidx97 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom96, !dbg !9003
  store i32 -256, i32* %arrayidx97, align 4, !dbg !9004
  br label %if.end113, !dbg !9005

if.else98:                                        ; preds = %if.else90
  %59 = load i32, i32* %pha, align 4, !dbg !9006
  %and99 = and i32 %59, 255, !dbg !9008
  %idxprom100 = zext i32 %and99 to i64, !dbg !9009
  %arrayidx101 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom100, !dbg !9009
  %60 = load i8, i8* %arrayidx101, align 1, !dbg !9009
  %conv102 = zext i8 %60 to i32, !dbg !9009
  %61 = load i32, i32* %k, align 4, !dbg !9010
  %idxprom103 = sext i32 %61 to i64, !dbg !9011
  %arrayidx104 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom103, !dbg !9011
  store i32 %conv102, i32* %arrayidx104, align 4, !dbg !9012
  %62 = load i32, i32* %pha, align 4, !dbg !9013
  %and105 = and i32 %62, 255, !dbg !9014
  %sub106 = sub i32 256, %and105, !dbg !9015
  %idxprom107 = zext i32 %sub106 to i64, !dbg !9016
  %arrayidx108 = getelementptr [256 x i8], [256 x i8]* @dib7000p_spur_protect.sine, i64 0, i64 %idxprom107, !dbg !9016
  %63 = load i8, i8* %arrayidx108, align 1, !dbg !9016
  %conv109 = zext i8 %63 to i32, !dbg !9016
  %sub110 = sub i32 0, %conv109, !dbg !9017
  %64 = load i32, i32* %k, align 4, !dbg !9018
  %idxprom111 = sext i32 %64 to i64, !dbg !9019
  %arrayidx112 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom111, !dbg !9019
  store i32 %sub110, i32* %arrayidx112, align 4, !dbg !9020
  br label %if.end113

if.end113:                                        ; preds = %if.else98, %if.then93
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then74
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then66
  br label %if.end116

if.end116:                                        ; preds = %if.end115, %if.then48
  br label %if.end117

if.end117:                                        ; preds = %if.end116, %if.then40
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %if.then24
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then20
  %65 = load i32, i32* %k, align 4, !dbg !9021
  %idxprom120 = sext i32 %65 to i64, !dbg !9022
  %arrayidx121 = getelementptr [8 x i16], [8 x i16]* @dib7000p_spur_protect.notch, i64 0, i64 %idxprom120, !dbg !9022
  %66 = load i16, i16* %arrayidx121, align 2, !dbg !9022
  %conv122 = sext i16 %66 to i32, !dbg !9022
  %67 = load i32, i32* %k, align 4, !dbg !9023
  %idxprom123 = sext i32 %67 to i64, !dbg !9024
  %arrayidx124 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom123, !dbg !9024
  %68 = load i32, i32* %arrayidx124, align 4, !dbg !9025
  %mul125 = mul i32 %68, %conv122, !dbg !9025
  store i32 %mul125, i32* %arrayidx124, align 4, !dbg !9025
  %69 = load i32, i32* %k, align 4, !dbg !9026
  %idxprom126 = sext i32 %69 to i64, !dbg !9027
  %arrayidx127 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom126, !dbg !9027
  %70 = load i32, i32* %arrayidx127, align 4, !dbg !9028
  %add128 = add i32 %70, 16384, !dbg !9028
  store i32 %add128, i32* %arrayidx127, align 4, !dbg !9028
  %71 = load i32, i32* %k, align 4, !dbg !9029
  %idxprom129 = sext i32 %71 to i64, !dbg !9031
  %arrayidx130 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom129, !dbg !9031
  %72 = load i32, i32* %arrayidx130, align 4, !dbg !9031
  %cmp131 = icmp sge i32 %72, 16777216, !dbg !9032
  br i1 %cmp131, label %if.then133, label %if.end136, !dbg !9033

if.then133:                                       ; preds = %if.end119
  %73 = load i32, i32* %k, align 4, !dbg !9034
  %idxprom134 = sext i32 %73 to i64, !dbg !9035
  %arrayidx135 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom134, !dbg !9035
  store i32 16777215, i32* %arrayidx135, align 4, !dbg !9036
  br label %if.end136, !dbg !9035

if.end136:                                        ; preds = %if.then133, %if.end119
  %74 = load i32, i32* %k, align 4, !dbg !9037
  %idxprom137 = sext i32 %74 to i64, !dbg !9038
  %arrayidx138 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom137, !dbg !9038
  %75 = load i32, i32* %arrayidx138, align 4, !dbg !9039
  %div139 = sdiv i32 %75, 32768, !dbg !9039
  store i32 %div139, i32* %arrayidx138, align 4, !dbg !9039
  %76 = load i32, i32* %k, align 4, !dbg !9040
  %idxprom140 = sext i32 %76 to i64, !dbg !9041
  %arrayidx141 = getelementptr [8 x i16], [8 x i16]* @dib7000p_spur_protect.notch, i64 0, i64 %idxprom140, !dbg !9041
  %77 = load i16, i16* %arrayidx141, align 2, !dbg !9041
  %conv142 = sext i16 %77 to i32, !dbg !9041
  %78 = load i32, i32* %k, align 4, !dbg !9042
  %idxprom143 = sext i32 %78 to i64, !dbg !9043
  %arrayidx144 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom143, !dbg !9043
  %79 = load i32, i32* %arrayidx144, align 4, !dbg !9044
  %mul145 = mul i32 %79, %conv142, !dbg !9044
  store i32 %mul145, i32* %arrayidx144, align 4, !dbg !9044
  %80 = load i32, i32* %k, align 4, !dbg !9045
  %idxprom146 = sext i32 %80 to i64, !dbg !9046
  %arrayidx147 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom146, !dbg !9046
  %81 = load i32, i32* %arrayidx147, align 4, !dbg !9047
  %add148 = add i32 %81, 16384, !dbg !9047
  store i32 %add148, i32* %arrayidx147, align 4, !dbg !9047
  %82 = load i32, i32* %k, align 4, !dbg !9048
  %idxprom149 = sext i32 %82 to i64, !dbg !9050
  %arrayidx150 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom149, !dbg !9050
  %83 = load i32, i32* %arrayidx150, align 4, !dbg !9050
  %cmp151 = icmp sge i32 %83, 16777216, !dbg !9051
  br i1 %cmp151, label %if.then153, label %if.end156, !dbg !9052

if.then153:                                       ; preds = %if.end136
  %84 = load i32, i32* %k, align 4, !dbg !9053
  %idxprom154 = sext i32 %84 to i64, !dbg !9054
  %arrayidx155 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom154, !dbg !9054
  store i32 16777215, i32* %arrayidx155, align 4, !dbg !9055
  br label %if.end156, !dbg !9054

if.end156:                                        ; preds = %if.then153, %if.end136
  %85 = load i32, i32* %k, align 4, !dbg !9056
  %idxprom157 = sext i32 %85 to i64, !dbg !9057
  %arrayidx158 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom157, !dbg !9057
  %86 = load i32, i32* %arrayidx158, align 4, !dbg !9058
  %div159 = sdiv i32 %86, 32768, !dbg !9058
  store i32 %div159, i32* %arrayidx158, align 4, !dbg !9058
  br label %do.body160, !dbg !9059

do.body160:                                       ; preds = %if.end156
  %87 = load i32, i32* @debug, align 4, !dbg !9060
  %tobool161 = icmp ne i32 %87, 0, !dbg !9060
  br i1 %tobool161, label %if.then162, label %if.end168, !dbg !9063

if.then162:                                       ; preds = %do.body160
  %88 = load i32, i32* %k, align 4, !dbg !9060
  %89 = load i32, i32* %k, align 4, !dbg !9060
  %idxprom163 = sext i32 %89 to i64, !dbg !9060
  %arrayidx164 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom163, !dbg !9060
  %90 = load i32, i32* %arrayidx164, align 4, !dbg !9060
  %91 = load i32, i32* %k, align 4, !dbg !9060
  %idxprom165 = sext i32 %91 to i64, !dbg !9060
  %arrayidx166 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom165, !dbg !9060
  %92 = load i32, i32* %arrayidx166, align 4, !dbg !9060
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7000p_spur_protect, i64 0, i64 0), i32 %88, i32 %90, i32 %92) #9, !dbg !9060
  br label %if.end168, !dbg !9060

if.end168:                                        ; preds = %if.then162, %do.body160
  br label %do.end169, !dbg !9063

do.end169:                                        ; preds = %if.end168
  %93 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9064
  %94 = load i32, i32* %k, align 4, !dbg !9065
  %shl = shl i32 %94, 10, !dbg !9066
  %or = or i32 0, %shl, !dbg !9067
  %95 = load i32, i32* %k, align 4, !dbg !9068
  %idxprom170 = sext i32 %95 to i64, !dbg !9069
  %arrayidx171 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom170, !dbg !9069
  %96 = load i32, i32* %arrayidx171, align 4, !dbg !9069
  %and172 = and i32 %96, 1023, !dbg !9070
  %or173 = or i32 %or, %and172, !dbg !9071
  %conv174 = trunc i32 %or173 to i16, !dbg !9072
  %call175 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %93, i16 zeroext 143, i16 zeroext %conv174) #8, !dbg !9073
  %97 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9074
  %98 = load i32, i32* %k, align 4, !dbg !9075
  %idxprom176 = sext i32 %98 to i64, !dbg !9076
  %arrayidx177 = getelementptr [8 x i32], [8 x i32]* %coef_im, i64 0, i64 %idxprom176, !dbg !9076
  %99 = load i32, i32* %arrayidx177, align 4, !dbg !9076
  %and178 = and i32 %99, 1023, !dbg !9077
  %conv179 = trunc i32 %and178 to i16, !dbg !9076
  %call180 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %97, i16 zeroext 144, i16 zeroext %conv179) #8, !dbg !9078
  %100 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9079
  %101 = load i32, i32* %k, align 4, !dbg !9080
  %shl181 = shl i32 %101, 10, !dbg !9081
  %or182 = or i32 16384, %shl181, !dbg !9082
  %102 = load i32, i32* %k, align 4, !dbg !9083
  %idxprom183 = sext i32 %102 to i64, !dbg !9084
  %arrayidx184 = getelementptr [8 x i32], [8 x i32]* %coef_re, i64 0, i64 %idxprom183, !dbg !9084
  %103 = load i32, i32* %arrayidx184, align 4, !dbg !9084
  %and185 = and i32 %103, 1023, !dbg !9085
  %or186 = or i32 %or182, %and185, !dbg !9086
  %conv187 = trunc i32 %or186 to i16, !dbg !9087
  %call188 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %100, i16 zeroext 143, i16 zeroext %conv187) #8, !dbg !9088
  br label %for.inc, !dbg !9089

for.inc:                                          ; preds = %do.end169
  %104 = load i32, i32* %k, align 4, !dbg !9090
  %inc = add i32 %104, 1, !dbg !9090
  store i32 %inc, i32* %k, align 4, !dbg !9090
  br label %for.cond, !dbg !9091, !llvm.loop !9092

for.end:                                          ; preds = %for.cond
  %105 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9094
  %call189 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %105, i16 zeroext 143, i16 zeroext 0) #8, !dbg !9095
  br label %return, !dbg !9096

return:                                           ; preds = %for.end, %if.then8
  ret void, !dbg !9096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_cfg_DibTx(%struct.dib7000p_state* %state, i32 %P_Kin, i32 %P_Kout, i32 %insertExtSynchro, i32 %synchroMode, i32 %syncWord, i32 %syncSize) #0 !dbg !9097 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %P_Kin.addr = alloca i32, align 4
  %P_Kout.addr = alloca i32, align 4
  %insertExtSynchro.addr = alloca i32, align 4
  %synchroMode.addr = alloca i32, align 4
  %syncWord.addr = alloca i32, align 4
  %syncSize.addr = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !9100, metadata !DIExpression()), !dbg !9101
  store i32 %P_Kin, i32* %P_Kin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P_Kin.addr, metadata !9102, metadata !DIExpression()), !dbg !9103
  store i32 %P_Kout, i32* %P_Kout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P_Kout.addr, metadata !9104, metadata !DIExpression()), !dbg !9105
  store i32 %insertExtSynchro, i32* %insertExtSynchro.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %insertExtSynchro.addr, metadata !9106, metadata !DIExpression()), !dbg !9107
  store i32 %synchroMode, i32* %synchroMode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %synchroMode.addr, metadata !9108, metadata !DIExpression()), !dbg !9109
  store i32 %syncWord, i32* %syncWord.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %syncWord.addr, metadata !9110, metadata !DIExpression()), !dbg !9111
  store i32 %syncSize, i32* %syncSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %syncSize.addr, metadata !9112, metadata !DIExpression()), !dbg !9113
  br label %do.body, !dbg !9114

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !9115
  %tobool = icmp ne i32 %0, 0, !dbg !9115
  br i1 %tobool, label %if.then, label %if.end, !dbg !9118

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dib7090_cfg_DibTx, i64 0, i64 0)) #9, !dbg !9115
  br label %if.end, !dbg !9115

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !9118

do.end:                                           ; preds = %if.end
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9119
  %call1 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %1, i16 zeroext 1615, i16 zeroext 1) #8, !dbg !9120
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9121
  %3 = load i32, i32* %P_Kin.addr, align 4, !dbg !9122
  %conv = trunc i32 %3 to i16, !dbg !9122
  %call2 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %2, i16 zeroext 1603, i16 zeroext %conv) #8, !dbg !9123
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9124
  %5 = load i32, i32* %P_Kout.addr, align 4, !dbg !9125
  %conv3 = trunc i32 %5 to i16, !dbg !9125
  %call4 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %4, i16 zeroext 1605, i16 zeroext %conv3) #8, !dbg !9126
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9127
  %7 = load i32, i32* %insertExtSynchro.addr, align 4, !dbg !9128
  %conv5 = trunc i32 %7 to i16, !dbg !9128
  %call6 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext 1606, i16 zeroext %conv5) #8, !dbg !9129
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9130
  %9 = load i32, i32* %synchroMode.addr, align 4, !dbg !9131
  %conv7 = trunc i32 %9 to i16, !dbg !9131
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %8, i16 zeroext 1608, i16 zeroext %conv7) #8, !dbg !9132
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9133
  %11 = load i32, i32* %syncWord.addr, align 4, !dbg !9134
  %shr = lshr i32 %11, 16, !dbg !9135
  %and = and i32 %shr, 65535, !dbg !9136
  %conv9 = trunc i32 %and to i16, !dbg !9137
  %call10 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %10, i16 zeroext 1609, i16 zeroext %conv9) #8, !dbg !9138
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9139
  %13 = load i32, i32* %syncWord.addr, align 4, !dbg !9140
  %and11 = and i32 %13, 65535, !dbg !9141
  %conv12 = trunc i32 %and11 to i16, !dbg !9140
  %call13 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 1610, i16 zeroext %conv12) #8, !dbg !9142
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9143
  %15 = load i32, i32* %syncSize.addr, align 4, !dbg !9144
  %conv14 = trunc i32 %15 to i16, !dbg !9144
  %call15 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 1612, i16 zeroext %conv14) #8, !dbg !9145
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9146
  %call16 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 1615, i16 zeroext 0) #8, !dbg !9147
  ret i32 0, !dbg !9148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7090_enMpegMux(%struct.dib7000p_state* %state, i32 %onoff) #0 !dbg !9149 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %onoff.addr = alloca i32, align 4
  %reg_1287 = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i32 %onoff, i32* %onoff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onoff.addr, metadata !9152, metadata !DIExpression()), !dbg !9153
  call void @llvm.dbg.declare(metadata i16* %reg_1287, metadata !9154, metadata !DIExpression()), !dbg !9155
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9156
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 1287) #8, !dbg !9157
  store i16 %call, i16* %reg_1287, align 2, !dbg !9155
  %1 = load i32, i32* %onoff.addr, align 4, !dbg !9158
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb2
  ], !dbg !9159

sw.bb:                                            ; preds = %entry
  %2 = load i16, i16* %reg_1287, align 2, !dbg !9160
  %conv = zext i16 %2 to i32, !dbg !9160
  %and = and i32 %conv, -129, !dbg !9160
  %conv1 = trunc i32 %and to i16, !dbg !9160
  store i16 %conv1, i16* %reg_1287, align 2, !dbg !9160
  br label %sw.epilog, !dbg !9162

sw.bb2:                                           ; preds = %entry
  %3 = load i16, i16* %reg_1287, align 2, !dbg !9163
  %conv3 = zext i16 %3 to i32, !dbg !9163
  %or = or i32 %conv3, 128, !dbg !9163
  %conv4 = trunc i32 %or to i16, !dbg !9163
  store i16 %conv4, i16* %reg_1287, align 2, !dbg !9163
  br label %sw.epilog, !dbg !9164

sw.epilog:                                        ; preds = %entry, %sw.bb2, %sw.bb
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !9165
  %5 = load i16, i16* %reg_1287, align 2, !dbg !9166
  %call5 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %4, i16 zeroext 1287, i16 zeroext %5) #8, !dbg !9167
  ret void, !dbg !9168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_stats(%struct.dvb_frontend* %demod, i32 %stat) #0 !dbg !9169 {
entry:
  %retval.i159 = alloca i64, align 8
  %m.addr.i160 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i160, metadata !9172, metadata !DIExpression()), !dbg !9177
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !9172, metadata !DIExpression()), !dbg !9181
  %retval = alloca i32, align 4
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %stat.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %c = alloca %struct.dtv_frontend_properties*, align 8
  %show_per_stats = alloca i32, align 4
  %time_us = alloca i32, align 4
  %val = alloca i32, align 4
  %snr = alloca i32, align 4
  %blocks = alloca i64, align 8
  %ucb = alloca i64, align 8
  %db = alloca i32, align 4
  %strength = alloca i16, align 2
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__base138 = alloca i32, align 4
  %__rem141 = alloca i32, align 4
  %tmp147 = alloca i32, align 4
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  store i32 %stat, i32* %stat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %stat.addr, metadata !9187, metadata !DIExpression()), !dbg !9188
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !9189, metadata !DIExpression()), !dbg !9190
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9191
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !9192
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !9192
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !9191
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !9190
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %c, metadata !9193, metadata !DIExpression()), !dbg !9194
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9195
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !9196
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %c, align 8, !dbg !9194
  call void @llvm.dbg.declare(metadata i32* %show_per_stats, metadata !9197, metadata !DIExpression()), !dbg !9198
  store i32 0, i32* %show_per_stats, align 4, !dbg !9198
  call void @llvm.dbg.declare(metadata i32* %time_us, metadata !9199, metadata !DIExpression()), !dbg !9200
  store i32 0, i32* %time_us, align 4, !dbg !9200
  call void @llvm.dbg.declare(metadata i32* %val, metadata !9201, metadata !DIExpression()), !dbg !9202
  call void @llvm.dbg.declare(metadata i32* %snr, metadata !9203, metadata !DIExpression()), !dbg !9204
  call void @llvm.dbg.declare(metadata i64* %blocks, metadata !9205, metadata !DIExpression()), !dbg !9206
  call void @llvm.dbg.declare(metadata i64* %ucb, metadata !9207, metadata !DIExpression()), !dbg !9208
  call void @llvm.dbg.declare(metadata i32* %db, metadata !9209, metadata !DIExpression()), !dbg !9210
  call void @llvm.dbg.declare(metadata i16* %strength, metadata !9211, metadata !DIExpression()), !dbg !9212
  %4 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9213
  %call = call i32 @dib7000p_read_signal_strength(%struct.dvb_frontend* %4, i16* %strength) #8, !dbg !9214
  %5 = load i16, i16* %strength, align 2, !dbg !9215
  %conv = zext i16 %5 to i32, !dbg !9215
  store i32 %conv, i32* %val, align 4, !dbg !9216
  %6 = load i32, i32* %val, align 4, !dbg !9217
  %call1 = call i32 @interpolate_value(i32 %6, %struct.linear_segments* getelementptr inbounds ([33 x %struct.linear_segments], [33 x %struct.linear_segments]* @strength_to_db_table, i64 0, i64 0), i32 33) #8, !dbg !9218
  %sub = sub i32 %call1, 131000, !dbg !9219
  store i32 %sub, i32* %db, align 4, !dbg !9220
  %7 = load i32, i32* %db, align 4, !dbg !9221
  %conv2 = sext i32 %7 to i64, !dbg !9221
  %8 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9222
  %strength3 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %8, i32 0, i32 42, !dbg !9223
  %stat4 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %strength3, i32 0, i32 1, !dbg !9224
  %arrayidx = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat4, i64 0, i64 0, !dbg !9222
  %9 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx, i32 0, i32 1, !dbg !9225
  %svalue = bitcast %union.anon.0* %9 to i64*, !dbg !9225
  store i64 %conv2, i64* %svalue, align 1, !dbg !9226
  %10 = load i32, i32* %stat.addr, align 4, !dbg !9227
  %and = and i32 %10, 16, !dbg !9229
  %tobool = icmp ne i32 %and, 0, !dbg !9229
  br i1 %tobool, label %if.end, label %if.then, !dbg !9230

if.then:                                          ; preds = %entry
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9231
  %cnr = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 43, !dbg !9233
  %len = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr, i32 0, i32 0, !dbg !9234
  store i8 1, i8* %len, align 1, !dbg !9235
  %12 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9236
  %block_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %12, i32 0, i32 49, !dbg !9237
  %len5 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count, i32 0, i32 0, !dbg !9238
  store i8 1, i8* %len5, align 1, !dbg !9239
  %13 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9240
  %block_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %13, i32 0, i32 48, !dbg !9241
  %len6 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error, i32 0, i32 0, !dbg !9242
  store i8 1, i8* %len6, align 2, !dbg !9243
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9244
  %post_bit_error = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 46, !dbg !9245
  %len7 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error, i32 0, i32 0, !dbg !9246
  store i8 1, i8* %len7, align 4, !dbg !9247
  %15 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9248
  %post_bit_count = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %15, i32 0, i32 47, !dbg !9249
  %len8 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count, i32 0, i32 0, !dbg !9250
  store i8 1, i8* %len8, align 1, !dbg !9251
  %16 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9252
  %cnr9 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %16, i32 0, i32 43, !dbg !9253
  %stat10 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr9, i32 0, i32 1, !dbg !9254
  %arrayidx11 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat10, i64 0, i64 0, !dbg !9252
  %scale = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx11, i32 0, i32 0, !dbg !9255
  store i8 0, i8* %scale, align 1, !dbg !9256
  %17 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9257
  %post_bit_error12 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %17, i32 0, i32 46, !dbg !9258
  %stat13 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error12, i32 0, i32 1, !dbg !9259
  %arrayidx14 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat13, i64 0, i64 0, !dbg !9257
  %scale15 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx14, i32 0, i32 0, !dbg !9260
  store i8 0, i8* %scale15, align 1, !dbg !9261
  %18 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9262
  %post_bit_count16 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %18, i32 0, i32 47, !dbg !9263
  %stat17 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count16, i32 0, i32 1, !dbg !9264
  %arrayidx18 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat17, i64 0, i64 0, !dbg !9262
  %scale19 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx18, i32 0, i32 0, !dbg !9265
  store i8 0, i8* %scale19, align 1, !dbg !9266
  %19 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9267
  %block_error20 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %19, i32 0, i32 48, !dbg !9268
  %stat21 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error20, i32 0, i32 1, !dbg !9269
  %arrayidx22 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat21, i64 0, i64 0, !dbg !9267
  %scale23 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx22, i32 0, i32 0, !dbg !9270
  store i8 0, i8* %scale23, align 1, !dbg !9271
  %20 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9272
  %block_count24 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %20, i32 0, i32 49, !dbg !9273
  %stat25 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count24, i32 0, i32 1, !dbg !9274
  %arrayidx26 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat25, i64 0, i64 0, !dbg !9272
  %scale27 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx26, i32 0, i32 0, !dbg !9275
  store i8 0, i8* %scale27, align 1, !dbg !9276
  store i32 0, i32* %retval, align 4, !dbg !9277
  br label %return, !dbg !9277

if.end:                                           ; preds = %entry
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9278
  %per_jiffies_stats = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %21, i32 0, i32 25, !dbg !9278
  %22 = load i64, i64* %per_jiffies_stats, align 8, !dbg !9278
  %23 = load volatile i64, i64* @jiffies, align 8, !dbg !9278
  %sub28 = sub i64 %22, %23, !dbg !9278
  %cmp = icmp slt i64 %sub28, 0, !dbg !9278
  br i1 %cmp, label %if.then30, label %if.end86, !dbg !9279

if.then30:                                        ; preds = %if.end
  %24 = load volatile i64, i64* @jiffies, align 8, !dbg !9280
  store i32 1000, i32* %m.addr.i, align 4
  %25 = load i32, i32* %m.addr.i, align 4, !dbg !9281
  %26 = call i1 @llvm.is.constant.i32(i32 %25) #10, !dbg !9283
  br i1 %26, label %if.then.i, label %if.else.i, !dbg !9284

if.then.i:                                        ; preds = %if.then30
  %27 = load i32, i32* %m.addr.i, align 4, !dbg !9285
  %cmp.i = icmp slt i32 %27, 0, !dbg !9288
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !9289

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !9290
  br label %msecs_to_jiffies.exit, !dbg !9290

if.end.i:                                         ; preds = %if.then.i
  %28 = load i32, i32* %m.addr.i, align 4, !dbg !9291
  %call.i = call i64 @_msecs_to_jiffies(i32 %28) #12, !dbg !9292
  store i64 %call.i, i64* %retval.i, align 8, !dbg !9293
  br label %msecs_to_jiffies.exit, !dbg !9293

if.else.i:                                        ; preds = %if.then30
  %29 = load i32, i32* %m.addr.i, align 4, !dbg !9294
  %call2.i = call i64 @__msecs_to_jiffies(i32 %29) #12, !dbg !9296
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !9297
  br label %msecs_to_jiffies.exit, !dbg !9297

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %30 = load i64, i64* %retval.i, align 8, !dbg !9298
  %add = add i64 %24, %30, !dbg !9299
  %31 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9300
  %per_jiffies_stats32 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %31, i32 0, i32 25, !dbg !9301
  store i64 %add, i64* %per_jiffies_stats32, align 8, !dbg !9302
  %32 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9303
  %call33 = call i32 @dib7000p_get_snr(%struct.dvb_frontend* %32) #8, !dbg !9304
  store i32 %call33, i32* %snr, align 4, !dbg !9305
  %33 = load i32, i32* %snr, align 4, !dbg !9306
  %tobool34 = icmp ne i32 %33, 0, !dbg !9306
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !9308

if.then35:                                        ; preds = %msecs_to_jiffies.exit
  %34 = load i32, i32* %snr, align 4, !dbg !9309
  %conv36 = zext i32 %34 to i64, !dbg !9309
  %mul = mul i64 1000, %conv36, !dbg !9310
  %shr = ashr i64 %mul, 24, !dbg !9311
  %conv37 = trunc i64 %shr to i32, !dbg !9312
  store i32 %conv37, i32* %snr, align 4, !dbg !9313
  br label %if.end38, !dbg !9314

if.else:                                          ; preds = %msecs_to_jiffies.exit
  store i32 0, i32* %snr, align 4, !dbg !9315
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then35
  %35 = load i32, i32* %snr, align 4, !dbg !9316
  %conv39 = zext i32 %35 to i64, !dbg !9316
  %36 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9317
  %cnr40 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %36, i32 0, i32 43, !dbg !9318
  %stat41 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr40, i32 0, i32 1, !dbg !9319
  %arrayidx42 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat41, i64 0, i64 0, !dbg !9317
  %37 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx42, i32 0, i32 1, !dbg !9320
  %svalue43 = bitcast %union.anon.0* %37 to i64*, !dbg !9320
  store i64 %conv39, i64* %svalue43, align 1, !dbg !9321
  %38 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9322
  %cnr44 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %38, i32 0, i32 43, !dbg !9323
  %stat45 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %cnr44, i32 0, i32 1, !dbg !9324
  %arrayidx46 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat45, i64 0, i64 0, !dbg !9322
  %scale47 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx46, i32 0, i32 0, !dbg !9325
  store i8 1, i8* %scale47, align 1, !dbg !9326
  %39 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9327
  %call48 = call i32 @dib7000p_read_unc_blocks(%struct.dvb_frontend* %39, i32* %val) #8, !dbg !9328
  %40 = load i32, i32* %val, align 4, !dbg !9329
  %conv49 = zext i32 %40 to i64, !dbg !9329
  %41 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9330
  %old_ucb = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %41, i32 0, i32 24, !dbg !9331
  %42 = load i64, i64* %old_ucb, align 8, !dbg !9331
  %sub50 = sub i64 %conv49, %42, !dbg !9332
  store i64 %sub50, i64* %ucb, align 8, !dbg !9333
  %43 = load i32, i32* %val, align 4, !dbg !9334
  %conv51 = zext i32 %43 to i64, !dbg !9334
  %44 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9336
  %old_ucb52 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %44, i32 0, i32 24, !dbg !9337
  %45 = load i64, i64* %old_ucb52, align 8, !dbg !9337
  %cmp53 = icmp slt i64 %conv51, %45, !dbg !9338
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !9339

if.then55:                                        ; preds = %if.end38
  %46 = load i64, i64* %ucb, align 8, !dbg !9340
  %add56 = add i64 %46, 4294967296, !dbg !9340
  store i64 %add56, i64* %ucb, align 8, !dbg !9340
  br label %if.end57, !dbg !9341

if.end57:                                         ; preds = %if.then55, %if.end38
  %47 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9342
  %block_error58 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %47, i32 0, i32 48, !dbg !9343
  %stat59 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error58, i32 0, i32 1, !dbg !9344
  %arrayidx60 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat59, i64 0, i64 0, !dbg !9342
  %scale61 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx60, i32 0, i32 0, !dbg !9345
  store i8 3, i8* %scale61, align 1, !dbg !9346
  %48 = load i64, i64* %ucb, align 8, !dbg !9347
  %49 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9348
  %block_error62 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %49, i32 0, i32 48, !dbg !9349
  %stat63 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error62, i32 0, i32 1, !dbg !9350
  %arrayidx64 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat63, i64 0, i64 0, !dbg !9348
  %50 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx64, i32 0, i32 1, !dbg !9351
  %uvalue = bitcast %union.anon.0* %50 to i64*, !dbg !9351
  store i64 %48, i64* %uvalue, align 1, !dbg !9352
  %51 = load i32, i32* %time_us, align 4, !dbg !9353
  %tobool65 = icmp ne i32 %51, 0, !dbg !9353
  br i1 %tobool65, label %if.end68, label %if.then66, !dbg !9355

if.then66:                                        ; preds = %if.end57
  %52 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9356
  %call67 = call i32 @dib7000p_get_time_us(%struct.dvb_frontend* %52) #8, !dbg !9357
  store i32 %call67, i32* %time_us, align 4, !dbg !9358
  br label %if.end68, !dbg !9359

if.end68:                                         ; preds = %if.then66, %if.end57
  %53 = load i32, i32* %time_us, align 4, !dbg !9360
  %tobool69 = icmp ne i32 %53, 0, !dbg !9360
  br i1 %tobool69, label %if.then70, label %if.end85, !dbg !9362

if.then70:                                        ; preds = %if.end68
  store i64 1250000000000, i64* %blocks, align 8, !dbg !9363
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !9365, metadata !DIExpression()), !dbg !9367
  %54 = load i32, i32* %time_us, align 4, !dbg !9367
  %mul71 = mul i32 %54, 8, !dbg !9367
  %mul72 = mul i32 %mul71, 204, !dbg !9367
  store i32 %mul72, i32* %__base, align 4, !dbg !9367
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !9368, metadata !DIExpression()), !dbg !9367
  %55 = load i64, i64* %blocks, align 8, !dbg !9367
  %56 = load i32, i32* %__base, align 4, !dbg !9367
  %conv73 = zext i32 %56 to i64, !dbg !9367
  %rem = urem i64 %55, %conv73, !dbg !9367
  %conv74 = trunc i64 %rem to i32, !dbg !9367
  store i32 %conv74, i32* %__rem, align 4, !dbg !9367
  %57 = load i64, i64* %blocks, align 8, !dbg !9367
  %58 = load i32, i32* %__base, align 4, !dbg !9367
  %conv75 = zext i32 %58 to i64, !dbg !9367
  %div = udiv i64 %57, %conv75, !dbg !9367
  store i64 %div, i64* %blocks, align 8, !dbg !9367
  %59 = load i32, i32* %__rem, align 4, !dbg !9367
  store i32 %59, i32* %tmp, align 4, !dbg !9367
  %60 = load i32, i32* %tmp, align 4, !dbg !9367
  %61 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9369
  %block_count76 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %61, i32 0, i32 49, !dbg !9370
  %stat77 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count76, i32 0, i32 1, !dbg !9371
  %arrayidx78 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat77, i64 0, i64 0, !dbg !9369
  %scale79 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx78, i32 0, i32 0, !dbg !9372
  store i8 3, i8* %scale79, align 1, !dbg !9373
  %62 = load i64, i64* %blocks, align 8, !dbg !9374
  %63 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9375
  %block_count80 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %63, i32 0, i32 49, !dbg !9376
  %stat81 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count80, i32 0, i32 1, !dbg !9377
  %arrayidx82 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat81, i64 0, i64 0, !dbg !9375
  %64 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx82, i32 0, i32 1, !dbg !9378
  %uvalue83 = bitcast %union.anon.0* %64 to i64*, !dbg !9378
  %65 = load i64, i64* %uvalue83, align 1, !dbg !9379
  %add84 = add i64 %65, %62, !dbg !9379
  store i64 %add84, i64* %uvalue83, align 1, !dbg !9379
  br label %if.end85, !dbg !9380

if.end85:                                         ; preds = %if.then70, %if.end68
  store i32 1, i32* %show_per_stats, align 4, !dbg !9381
  br label %if.end86, !dbg !9382

if.end86:                                         ; preds = %if.end85, %if.end
  %66 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9383
  %ber_jiffies_stats = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %66, i32 0, i32 26, !dbg !9383
  %67 = load i64, i64* %ber_jiffies_stats, align 8, !dbg !9383
  %68 = load volatile i64, i64* @jiffies, align 8, !dbg !9383
  %sub87 = sub i64 %67, %68, !dbg !9383
  %cmp88 = icmp slt i64 %sub87, 0, !dbg !9383
  br i1 %cmp88, label %if.then90, label %if.end121, !dbg !9384

if.then90:                                        ; preds = %if.end86
  %69 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9385
  %call91 = call i32 @dib7000p_get_time_us(%struct.dvb_frontend* %69) #8, !dbg !9386
  store i32 %call91, i32* %time_us, align 4, !dbg !9387
  %70 = load volatile i64, i64* @jiffies, align 8, !dbg !9388
  %71 = load i32, i32* %time_us, align 4, !dbg !9389
  %add92 = add i32 %71, 500, !dbg !9390
  %div93 = udiv i32 %add92, 1000, !dbg !9391
  store i32 %div93, i32* %m.addr.i160, align 4
  %72 = load i32, i32* %m.addr.i160, align 4, !dbg !9392
  %73 = call i1 @llvm.is.constant.i32(i32 %72) #10, !dbg !9393
  br i1 %73, label %if.then.i162, label %if.else.i167, !dbg !9394

if.then.i162:                                     ; preds = %if.then90
  %74 = load i32, i32* %m.addr.i160, align 4, !dbg !9395
  %cmp.i161 = icmp slt i32 %74, 0, !dbg !9396
  br i1 %cmp.i161, label %if.then1.i163, label %if.end.i165, !dbg !9397

if.then1.i163:                                    ; preds = %if.then.i162
  store i64 4611686018427387902, i64* %retval.i159, align 8, !dbg !9398
  br label %msecs_to_jiffies.exit168, !dbg !9398

if.end.i165:                                      ; preds = %if.then.i162
  %75 = load i32, i32* %m.addr.i160, align 4, !dbg !9399
  %call.i164 = call i64 @_msecs_to_jiffies(i32 %75) #12, !dbg !9400
  store i64 %call.i164, i64* %retval.i159, align 8, !dbg !9401
  br label %msecs_to_jiffies.exit168, !dbg !9401

if.else.i167:                                     ; preds = %if.then90
  %76 = load i32, i32* %m.addr.i160, align 4, !dbg !9402
  %call2.i166 = call i64 @__msecs_to_jiffies(i32 %76) #12, !dbg !9403
  store i64 %call2.i166, i64* %retval.i159, align 8, !dbg !9404
  br label %msecs_to_jiffies.exit168, !dbg !9404

msecs_to_jiffies.exit168:                         ; preds = %if.then1.i163, %if.end.i165, %if.else.i167
  %77 = load i64, i64* %retval.i159, align 8, !dbg !9405
  %add95 = add i64 %70, %77, !dbg !9406
  %78 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9407
  %ber_jiffies_stats96 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %78, i32 0, i32 26, !dbg !9408
  store i64 %add95, i64* %ber_jiffies_stats96, align 8, !dbg !9409
  br label %do.body, !dbg !9410

do.body:                                          ; preds = %msecs_to_jiffies.exit168
  %79 = load i32, i32* @debug, align 4, !dbg !9411
  %tobool97 = icmp ne i32 %79, 0, !dbg !9411
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !9414

if.then98:                                        ; preds = %do.body
  %80 = load i32, i32* %time_us, align 4, !dbg !9411
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.dib7000p_get_stats, i64 0, i64 0), i32 %80) #9, !dbg !9411
  br label %if.end100, !dbg !9411

if.end100:                                        ; preds = %if.then98, %do.body
  br label %do.end, !dbg !9414

do.end:                                           ; preds = %if.end100
  %81 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9415
  %call101 = call i32 @dib7000p_read_ber(%struct.dvb_frontend* %81, i32* %val) #8, !dbg !9416
  %82 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9417
  %post_bit_error102 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %82, i32 0, i32 46, !dbg !9418
  %stat103 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error102, i32 0, i32 1, !dbg !9419
  %arrayidx104 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat103, i64 0, i64 0, !dbg !9417
  %scale105 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx104, i32 0, i32 0, !dbg !9420
  store i8 3, i8* %scale105, align 1, !dbg !9421
  %83 = load i32, i32* %val, align 4, !dbg !9422
  %conv106 = zext i32 %83 to i64, !dbg !9422
  %84 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9423
  %post_bit_error107 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %84, i32 0, i32 46, !dbg !9424
  %stat108 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_error107, i32 0, i32 1, !dbg !9425
  %arrayidx109 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat108, i64 0, i64 0, !dbg !9423
  %85 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx109, i32 0, i32 1, !dbg !9426
  %uvalue110 = bitcast %union.anon.0* %85 to i64*, !dbg !9426
  %86 = load i64, i64* %uvalue110, align 1, !dbg !9427
  %add111 = add i64 %86, %conv106, !dbg !9427
  store i64 %add111, i64* %uvalue110, align 1, !dbg !9427
  %87 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9428
  %post_bit_count112 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %87, i32 0, i32 47, !dbg !9429
  %stat113 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count112, i32 0, i32 1, !dbg !9430
  %arrayidx114 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat113, i64 0, i64 0, !dbg !9428
  %scale115 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx114, i32 0, i32 0, !dbg !9431
  store i8 3, i8* %scale115, align 1, !dbg !9432
  %88 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9433
  %post_bit_count116 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %88, i32 0, i32 47, !dbg !9434
  %stat117 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %post_bit_count116, i32 0, i32 1, !dbg !9435
  %arrayidx118 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat117, i64 0, i64 0, !dbg !9433
  %89 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx118, i32 0, i32 1, !dbg !9436
  %uvalue119 = bitcast %union.anon.0* %89 to i64*, !dbg !9436
  %90 = load i64, i64* %uvalue119, align 1, !dbg !9437
  %add120 = add i64 %90, 100000000, !dbg !9437
  store i64 %add120, i64* %uvalue119, align 1, !dbg !9437
  br label %if.end121, !dbg !9438

if.end121:                                        ; preds = %do.end, %if.end86
  %91 = load i32, i32* %show_per_stats, align 4, !dbg !9439
  %tobool122 = icmp ne i32 %91, 0, !dbg !9439
  br i1 %tobool122, label %if.then123, label %if.end158, !dbg !9441

if.then123:                                       ; preds = %if.end121
  %92 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9442
  %call124 = call i32 @dib7000p_read_unc_blocks(%struct.dvb_frontend* %92, i32* %val) #8, !dbg !9444
  %93 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9445
  %block_error125 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %93, i32 0, i32 48, !dbg !9446
  %stat126 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error125, i32 0, i32 1, !dbg !9447
  %arrayidx127 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat126, i64 0, i64 0, !dbg !9445
  %scale128 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx127, i32 0, i32 0, !dbg !9448
  store i8 3, i8* %scale128, align 1, !dbg !9449
  %94 = load i32, i32* %val, align 4, !dbg !9450
  %conv129 = zext i32 %94 to i64, !dbg !9450
  %95 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9451
  %block_error130 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %95, i32 0, i32 48, !dbg !9452
  %stat131 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_error130, i32 0, i32 1, !dbg !9453
  %arrayidx132 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat131, i64 0, i64 0, !dbg !9451
  %96 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx132, i32 0, i32 1, !dbg !9454
  %uvalue133 = bitcast %union.anon.0* %96 to i64*, !dbg !9454
  %97 = load i64, i64* %uvalue133, align 1, !dbg !9455
  %add134 = add i64 %97, %conv129, !dbg !9455
  store i64 %add134, i64* %uvalue133, align 1, !dbg !9455
  %98 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9456
  %call135 = call i32 @dib7000p_get_time_us(%struct.dvb_frontend* %98) #8, !dbg !9457
  store i32 %call135, i32* %time_us, align 4, !dbg !9458
  %99 = load i32, i32* %time_us, align 4, !dbg !9459
  %tobool136 = icmp ne i32 %99, 0, !dbg !9459
  br i1 %tobool136, label %if.then137, label %if.end157, !dbg !9461

if.then137:                                       ; preds = %if.then123
  store i64 1250000000000, i64* %blocks, align 8, !dbg !9462
  call void @llvm.dbg.declare(metadata i32* %__base138, metadata !9464, metadata !DIExpression()), !dbg !9466
  %100 = load i32, i32* %time_us, align 4, !dbg !9466
  %mul139 = mul i32 %100, 8, !dbg !9466
  %mul140 = mul i32 %mul139, 204, !dbg !9466
  store i32 %mul140, i32* %__base138, align 4, !dbg !9466
  call void @llvm.dbg.declare(metadata i32* %__rem141, metadata !9467, metadata !DIExpression()), !dbg !9466
  %101 = load i64, i64* %blocks, align 8, !dbg !9466
  %102 = load i32, i32* %__base138, align 4, !dbg !9466
  %conv142 = zext i32 %102 to i64, !dbg !9466
  %rem143 = urem i64 %101, %conv142, !dbg !9466
  %conv144 = trunc i64 %rem143 to i32, !dbg !9466
  store i32 %conv144, i32* %__rem141, align 4, !dbg !9466
  %103 = load i64, i64* %blocks, align 8, !dbg !9466
  %104 = load i32, i32* %__base138, align 4, !dbg !9466
  %conv145 = zext i32 %104 to i64, !dbg !9466
  %div146 = udiv i64 %103, %conv145, !dbg !9466
  store i64 %div146, i64* %blocks, align 8, !dbg !9466
  %105 = load i32, i32* %__rem141, align 4, !dbg !9466
  store i32 %105, i32* %tmp147, align 4, !dbg !9466
  %106 = load i32, i32* %tmp147, align 4, !dbg !9466
  %107 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9468
  %block_count148 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %107, i32 0, i32 49, !dbg !9469
  %stat149 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count148, i32 0, i32 1, !dbg !9470
  %arrayidx150 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat149, i64 0, i64 0, !dbg !9468
  %scale151 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx150, i32 0, i32 0, !dbg !9471
  store i8 3, i8* %scale151, align 1, !dbg !9472
  %108 = load i64, i64* %blocks, align 8, !dbg !9473
  %109 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9474
  %block_count152 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %109, i32 0, i32 49, !dbg !9475
  %stat153 = getelementptr inbounds %struct.dtv_fe_stats, %struct.dtv_fe_stats* %block_count152, i32 0, i32 1, !dbg !9476
  %arrayidx154 = getelementptr [4 x %struct.dtv_stats], [4 x %struct.dtv_stats]* %stat153, i64 0, i64 0, !dbg !9474
  %110 = getelementptr inbounds %struct.dtv_stats, %struct.dtv_stats* %arrayidx154, i32 0, i32 1, !dbg !9477
  %uvalue155 = bitcast %union.anon.0* %110 to i64*, !dbg !9477
  %111 = load i64, i64* %uvalue155, align 1, !dbg !9478
  %add156 = add i64 %111, %108, !dbg !9478
  store i64 %add156, i64* %uvalue155, align 1, !dbg !9478
  br label %if.end157, !dbg !9479

if.end157:                                        ; preds = %if.then137, %if.then123
  br label %if.end158, !dbg !9480

if.end158:                                        ; preds = %if.end157, %if.end121
  store i32 0, i32* %retval, align 4, !dbg !9481
  br label %return, !dbg !9481

return:                                           ; preds = %if.end158, %if.then
  %112 = load i32, i32* %retval, align 4, !dbg !9482
  ret i32 %112, !dbg !9482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @interpolate_value(i32 %value, %struct.linear_segments* %segments, i32 %len) #0 !dbg !9483 {
entry:
  %retval = alloca i32, align 4
  %value.addr = alloca i32, align 4
  %segments.addr = alloca %struct.linear_segments*, align 8
  %len.addr = alloca i32, align 4
  %tmp64 = alloca i64, align 8
  %dx = alloca i32, align 4
  %dy = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !9487, metadata !DIExpression()), !dbg !9488
  store %struct.linear_segments* %segments, %struct.linear_segments** %segments.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.linear_segments** %segments.addr, metadata !9489, metadata !DIExpression()), !dbg !9490
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !9491, metadata !DIExpression()), !dbg !9492
  call void @llvm.dbg.declare(metadata i64* %tmp64, metadata !9493, metadata !DIExpression()), !dbg !9494
  call void @llvm.dbg.declare(metadata i32* %dx, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata i32* %dy, metadata !9497, metadata !DIExpression()), !dbg !9498
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9499, metadata !DIExpression()), !dbg !9500
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9501, metadata !DIExpression()), !dbg !9502
  %0 = load i32, i32* %value.addr, align 4, !dbg !9503
  %1 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9505
  %arrayidx = getelementptr %struct.linear_segments, %struct.linear_segments* %1, i64 0, !dbg !9505
  %x = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx, i32 0, i32 0, !dbg !9506
  %2 = load i32, i32* %x, align 4, !dbg !9506
  %cmp = icmp uge i32 %0, %2, !dbg !9507
  br i1 %cmp, label %if.then, label %if.end, !dbg !9508

if.then:                                          ; preds = %entry
  %3 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9509
  %arrayidx1 = getelementptr %struct.linear_segments, %struct.linear_segments* %3, i64 0, !dbg !9509
  %y = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx1, i32 0, i32 1, !dbg !9510
  %4 = load i32, i32* %y, align 4, !dbg !9510
  store i32 %4, i32* %retval, align 4, !dbg !9511
  br label %return, !dbg !9511

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %value.addr, align 4, !dbg !9512
  %6 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9514
  %7 = load i32, i32* %len.addr, align 4, !dbg !9515
  %sub = sub i32 %7, 1, !dbg !9516
  %idxprom = zext i32 %sub to i64, !dbg !9514
  %arrayidx2 = getelementptr %struct.linear_segments, %struct.linear_segments* %6, i64 %idxprom, !dbg !9514
  %x3 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx2, i32 0, i32 0, !dbg !9517
  %8 = load i32, i32* %x3, align 4, !dbg !9517
  %cmp4 = icmp ult i32 %5, %8, !dbg !9518
  br i1 %cmp4, label %if.then5, label %if.end10, !dbg !9519

if.then5:                                         ; preds = %if.end
  %9 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9520
  %10 = load i32, i32* %len.addr, align 4, !dbg !9521
  %sub6 = sub i32 %10, 1, !dbg !9522
  %idxprom7 = zext i32 %sub6 to i64, !dbg !9520
  %arrayidx8 = getelementptr %struct.linear_segments, %struct.linear_segments* %9, i64 %idxprom7, !dbg !9520
  %y9 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx8, i32 0, i32 1, !dbg !9523
  %11 = load i32, i32* %y9, align 4, !dbg !9523
  store i32 %11, i32* %retval, align 4, !dbg !9524
  br label %return, !dbg !9524

if.end10:                                         ; preds = %if.end
  store i32 1, i32* %i, align 4, !dbg !9525
  br label %for.cond, !dbg !9527

for.cond:                                         ; preds = %for.inc, %if.end10
  %12 = load i32, i32* %i, align 4, !dbg !9528
  %13 = load i32, i32* %len.addr, align 4, !dbg !9530
  %sub11 = sub i32 %13, 1, !dbg !9531
  %cmp12 = icmp ult i32 %12, %sub11, !dbg !9532
  br i1 %cmp12, label %for.body, label %for.end, !dbg !9533

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %value.addr, align 4, !dbg !9534
  %15 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9537
  %16 = load i32, i32* %i, align 4, !dbg !9538
  %idxprom13 = sext i32 %16 to i64, !dbg !9537
  %arrayidx14 = getelementptr %struct.linear_segments, %struct.linear_segments* %15, i64 %idxprom13, !dbg !9537
  %x15 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx14, i32 0, i32 0, !dbg !9539
  %17 = load i32, i32* %x15, align 4, !dbg !9539
  %cmp16 = icmp eq i32 %14, %17, !dbg !9540
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !9541

if.then17:                                        ; preds = %for.body
  %18 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9542
  %19 = load i32, i32* %i, align 4, !dbg !9543
  %idxprom18 = sext i32 %19 to i64, !dbg !9542
  %arrayidx19 = getelementptr %struct.linear_segments, %struct.linear_segments* %18, i64 %idxprom18, !dbg !9542
  %y20 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx19, i32 0, i32 1, !dbg !9544
  %20 = load i32, i32* %y20, align 4, !dbg !9544
  store i32 %20, i32* %retval, align 4, !dbg !9545
  br label %return, !dbg !9545

if.end21:                                         ; preds = %for.body
  %21 = load i32, i32* %value.addr, align 4, !dbg !9546
  %22 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9548
  %23 = load i32, i32* %i, align 4, !dbg !9549
  %idxprom22 = sext i32 %23 to i64, !dbg !9548
  %arrayidx23 = getelementptr %struct.linear_segments, %struct.linear_segments* %22, i64 %idxprom22, !dbg !9548
  %x24 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx23, i32 0, i32 0, !dbg !9550
  %24 = load i32, i32* %x24, align 4, !dbg !9550
  %cmp25 = icmp ugt i32 %21, %24, !dbg !9551
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9552

if.then26:                                        ; preds = %if.end21
  br label %for.end, !dbg !9553

if.end27:                                         ; preds = %if.end21
  br label %for.inc, !dbg !9554

for.inc:                                          ; preds = %if.end27
  %25 = load i32, i32* %i, align 4, !dbg !9555
  %inc = add i32 %25, 1, !dbg !9555
  store i32 %inc, i32* %i, align 4, !dbg !9555
  br label %for.cond, !dbg !9556, !llvm.loop !9557

for.end:                                          ; preds = %if.then26, %for.cond
  %26 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9559
  %27 = load i32, i32* %i, align 4, !dbg !9560
  %sub28 = sub i32 %27, 1, !dbg !9561
  %idxprom29 = sext i32 %sub28 to i64, !dbg !9559
  %arrayidx30 = getelementptr %struct.linear_segments, %struct.linear_segments* %26, i64 %idxprom29, !dbg !9559
  %y31 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx30, i32 0, i32 1, !dbg !9562
  %28 = load i32, i32* %y31, align 4, !dbg !9562
  %29 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9563
  %30 = load i32, i32* %i, align 4, !dbg !9564
  %idxprom32 = sext i32 %30 to i64, !dbg !9563
  %arrayidx33 = getelementptr %struct.linear_segments, %struct.linear_segments* %29, i64 %idxprom32, !dbg !9563
  %y34 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx33, i32 0, i32 1, !dbg !9565
  %31 = load i32, i32* %y34, align 4, !dbg !9565
  %sub35 = sub i32 %28, %31, !dbg !9566
  store i32 %sub35, i32* %dy, align 4, !dbg !9567
  %32 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9568
  %33 = load i32, i32* %i, align 4, !dbg !9569
  %sub36 = sub i32 %33, 1, !dbg !9570
  %idxprom37 = sext i32 %sub36 to i64, !dbg !9568
  %arrayidx38 = getelementptr %struct.linear_segments, %struct.linear_segments* %32, i64 %idxprom37, !dbg !9568
  %x39 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx38, i32 0, i32 0, !dbg !9571
  %34 = load i32, i32* %x39, align 4, !dbg !9571
  %35 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9572
  %36 = load i32, i32* %i, align 4, !dbg !9573
  %idxprom40 = sext i32 %36 to i64, !dbg !9572
  %arrayidx41 = getelementptr %struct.linear_segments, %struct.linear_segments* %35, i64 %idxprom40, !dbg !9572
  %x42 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx41, i32 0, i32 0, !dbg !9574
  %37 = load i32, i32* %x42, align 4, !dbg !9574
  %sub43 = sub i32 %34, %37, !dbg !9575
  store i32 %sub43, i32* %dx, align 4, !dbg !9576
  %38 = load i32, i32* %value.addr, align 4, !dbg !9577
  %39 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9578
  %40 = load i32, i32* %i, align 4, !dbg !9579
  %idxprom44 = sext i32 %40 to i64, !dbg !9578
  %arrayidx45 = getelementptr %struct.linear_segments, %struct.linear_segments* %39, i64 %idxprom44, !dbg !9578
  %x46 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx45, i32 0, i32 0, !dbg !9580
  %41 = load i32, i32* %x46, align 4, !dbg !9580
  %sub47 = sub i32 %38, %41, !dbg !9581
  %conv = zext i32 %sub47 to i64, !dbg !9577
  store i64 %conv, i64* %tmp64, align 8, !dbg !9582
  %42 = load i32, i32* %dy, align 4, !dbg !9583
  %conv48 = sext i32 %42 to i64, !dbg !9583
  %43 = load i64, i64* %tmp64, align 8, !dbg !9584
  %mul = mul i64 %43, %conv48, !dbg !9584
  store i64 %mul, i64* %tmp64, align 8, !dbg !9584
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !9585, metadata !DIExpression()), !dbg !9587
  %44 = load i32, i32* %dx, align 4, !dbg !9587
  store i32 %44, i32* %__base, align 4, !dbg !9587
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !9588, metadata !DIExpression()), !dbg !9587
  %45 = load i64, i64* %tmp64, align 8, !dbg !9587
  %46 = load i32, i32* %__base, align 4, !dbg !9587
  %conv49 = zext i32 %46 to i64, !dbg !9587
  %rem = urem i64 %45, %conv49, !dbg !9587
  %conv50 = trunc i64 %rem to i32, !dbg !9587
  store i32 %conv50, i32* %__rem, align 4, !dbg !9587
  %47 = load i64, i64* %tmp64, align 8, !dbg !9587
  %48 = load i32, i32* %__base, align 4, !dbg !9587
  %conv51 = zext i32 %48 to i64, !dbg !9587
  %div = udiv i64 %47, %conv51, !dbg !9587
  store i64 %div, i64* %tmp64, align 8, !dbg !9587
  %49 = load i32, i32* %__rem, align 4, !dbg !9587
  store i32 %49, i32* %tmp, align 4, !dbg !9587
  %50 = load i32, i32* %tmp, align 4, !dbg !9587
  %51 = load %struct.linear_segments*, %struct.linear_segments** %segments.addr, align 8, !dbg !9589
  %52 = load i32, i32* %i, align 4, !dbg !9590
  %idxprom52 = sext i32 %52 to i64, !dbg !9589
  %arrayidx53 = getelementptr %struct.linear_segments, %struct.linear_segments* %51, i64 %idxprom52, !dbg !9589
  %y54 = getelementptr inbounds %struct.linear_segments, %struct.linear_segments* %arrayidx53, i32 0, i32 1, !dbg !9591
  %53 = load i32, i32* %y54, align 4, !dbg !9591
  %conv55 = sext i32 %53 to i64, !dbg !9589
  %54 = load i64, i64* %tmp64, align 8, !dbg !9592
  %add = add i64 %conv55, %54, !dbg !9593
  %conv56 = trunc i64 %add to i32, !dbg !9589
  store i32 %conv56, i32* %ret, align 4, !dbg !9594
  %55 = load i32, i32* %ret, align 4, !dbg !9595
  store i32 %55, i32* %retval, align 4, !dbg !9596
  br label %return, !dbg !9596

return:                                           ; preds = %for.end, %if.then17, %if.then5, %if.then
  %56 = load i32, i32* %retval, align 4, !dbg !9597
  ret i32 %56, !dbg !9597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_snr(%struct.dvb_frontend* %fe) #0 !dbg !9598 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.dib7000p_state*, align 8
  %val = alloca i16, align 2
  %signal_mant = alloca i32, align 4
  %signal_exp = alloca i32, align 4
  %noise_mant = alloca i32, align 4
  %noise_exp = alloca i32, align 4
  %result = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !9601, metadata !DIExpression()), !dbg !9602
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !9603, metadata !DIExpression()), !dbg !9604
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !9605
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !9606
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !9606
  %2 = bitcast i8* %1 to %struct.dib7000p_state*, !dbg !9605
  store %struct.dib7000p_state* %2, %struct.dib7000p_state** %state, align 8, !dbg !9604
  call void @llvm.dbg.declare(metadata i16* %val, metadata !9607, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.declare(metadata i32* %signal_mant, metadata !9609, metadata !DIExpression()), !dbg !9610
  call void @llvm.dbg.declare(metadata i32* %signal_exp, metadata !9611, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.declare(metadata i32* %noise_mant, metadata !9613, metadata !DIExpression()), !dbg !9614
  call void @llvm.dbg.declare(metadata i32* %noise_exp, metadata !9615, metadata !DIExpression()), !dbg !9616
  call void @llvm.dbg.declare(metadata i32* %result, metadata !9617, metadata !DIExpression()), !dbg !9618
  store i32 0, i32* %result, align 4, !dbg !9618
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9619
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %3, i16 zeroext 479) #8, !dbg !9620
  store i16 %call, i16* %val, align 2, !dbg !9621
  %4 = load i16, i16* %val, align 2, !dbg !9622
  %conv = zext i16 %4 to i32, !dbg !9622
  %shr = ashr i32 %conv, 4, !dbg !9623
  %and = and i32 %shr, 255, !dbg !9624
  store i32 %and, i32* %noise_mant, align 4, !dbg !9625
  %5 = load i16, i16* %val, align 2, !dbg !9626
  %conv1 = zext i16 %5 to i32, !dbg !9626
  %and2 = and i32 %conv1, 15, !dbg !9627
  %shl = shl i32 %and2, 2, !dbg !9628
  store i32 %shl, i32* %noise_exp, align 4, !dbg !9629
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9630
  %call3 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %6, i16 zeroext 480) #8, !dbg !9631
  store i16 %call3, i16* %val, align 2, !dbg !9632
  %7 = load i16, i16* %val, align 2, !dbg !9633
  %conv4 = zext i16 %7 to i32, !dbg !9633
  %shr5 = ashr i32 %conv4, 14, !dbg !9634
  %and6 = and i32 %shr5, 3, !dbg !9635
  %8 = load i32, i32* %noise_exp, align 4, !dbg !9636
  %add = add i32 %8, %and6, !dbg !9636
  store i32 %add, i32* %noise_exp, align 4, !dbg !9636
  %9 = load i32, i32* %noise_exp, align 4, !dbg !9637
  %and7 = and i32 %9, 32, !dbg !9639
  %cmp = icmp ne i32 %and7, 0, !dbg !9640
  br i1 %cmp, label %if.then, label %if.end, !dbg !9641

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %noise_exp, align 4, !dbg !9642
  %sub = sub i32 %10, 64, !dbg !9642
  store i32 %sub, i32* %noise_exp, align 4, !dbg !9642
  br label %if.end, !dbg !9643

if.end:                                           ; preds = %if.then, %entry
  %11 = load i16, i16* %val, align 2, !dbg !9644
  %conv9 = zext i16 %11 to i32, !dbg !9644
  %shr10 = ashr i32 %conv9, 6, !dbg !9645
  %and11 = and i32 %shr10, 255, !dbg !9646
  store i32 %and11, i32* %signal_mant, align 4, !dbg !9647
  %12 = load i16, i16* %val, align 2, !dbg !9648
  %conv12 = zext i16 %12 to i32, !dbg !9648
  %and13 = and i32 %conv12, 63, !dbg !9649
  store i32 %and13, i32* %signal_exp, align 4, !dbg !9650
  %13 = load i32, i32* %signal_exp, align 4, !dbg !9651
  %and14 = and i32 %13, 32, !dbg !9653
  %cmp15 = icmp ne i32 %and14, 0, !dbg !9654
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !9655

if.then17:                                        ; preds = %if.end
  %14 = load i32, i32* %signal_exp, align 4, !dbg !9656
  %sub18 = sub i32 %14, 64, !dbg !9656
  store i32 %sub18, i32* %signal_exp, align 4, !dbg !9656
  br label %if.end19, !dbg !9657

if.end19:                                         ; preds = %if.then17, %if.end
  %15 = load i32, i32* %signal_mant, align 4, !dbg !9658
  %cmp20 = icmp ne i32 %15, 0, !dbg !9660
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !9661

if.then22:                                        ; preds = %if.end19
  %call23 = call i32 @intlog10(i32 2) #8, !dbg !9662
  %mul = mul i32 %call23, 10, !dbg !9663
  %16 = load i32, i32* %signal_exp, align 4, !dbg !9664
  %mul24 = mul i32 %mul, %16, !dbg !9665
  %17 = load i32, i32* %signal_mant, align 4, !dbg !9666
  %call25 = call i32 @intlog10(i32 %17) #8, !dbg !9667
  %mul26 = mul i32 10, %call25, !dbg !9668
  %add27 = add i32 %mul24, %mul26, !dbg !9669
  store i32 %add27, i32* %result, align 4, !dbg !9670
  br label %if.end32, !dbg !9671

if.else:                                          ; preds = %if.end19
  %call28 = call i32 @intlog10(i32 2) #8, !dbg !9672
  %mul29 = mul i32 %call28, 10, !dbg !9673
  %18 = load i32, i32* %signal_exp, align 4, !dbg !9674
  %mul30 = mul i32 %mul29, %18, !dbg !9675
  %sub31 = sub i32 %mul30, 100, !dbg !9676
  store i32 %sub31, i32* %result, align 4, !dbg !9677
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then22
  %19 = load i32, i32* %noise_mant, align 4, !dbg !9678
  %cmp33 = icmp ne i32 %19, 0, !dbg !9680
  br i1 %cmp33, label %if.then35, label %if.else43, !dbg !9681

if.then35:                                        ; preds = %if.end32
  %call36 = call i32 @intlog10(i32 2) #8, !dbg !9682
  %mul37 = mul i32 %call36, 10, !dbg !9683
  %20 = load i32, i32* %noise_exp, align 4, !dbg !9684
  %mul38 = mul i32 %mul37, %20, !dbg !9685
  %21 = load i32, i32* %noise_mant, align 4, !dbg !9686
  %call39 = call i32 @intlog10(i32 %21) #8, !dbg !9687
  %mul40 = mul i32 10, %call39, !dbg !9688
  %add41 = add i32 %mul38, %mul40, !dbg !9689
  %22 = load i32, i32* %result, align 4, !dbg !9690
  %sub42 = sub i32 %22, %add41, !dbg !9690
  store i32 %sub42, i32* %result, align 4, !dbg !9690
  br label %if.end49, !dbg !9691

if.else43:                                        ; preds = %if.end32
  %call44 = call i32 @intlog10(i32 2) #8, !dbg !9692
  %mul45 = mul i32 %call44, 10, !dbg !9693
  %23 = load i32, i32* %noise_exp, align 4, !dbg !9694
  %mul46 = mul i32 %mul45, %23, !dbg !9695
  %sub47 = sub i32 %mul46, 100, !dbg !9696
  %24 = load i32, i32* %result, align 4, !dbg !9697
  %sub48 = sub i32 %24, %sub47, !dbg !9697
  store i32 %sub48, i32* %result, align 4, !dbg !9697
  br label %if.end49

if.end49:                                         ; preds = %if.else43, %if.then35
  %25 = load i32, i32* %result, align 4, !dbg !9698
  ret i32 %25, !dbg !9699
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_get_time_us(%struct.dvb_frontend* %demod) #0 !dbg !9700 {
entry:
  %retval = alloca i32, align 4
  %demod.addr = alloca %struct.dvb_frontend*, align 8
  %c = alloca %struct.dtv_frontend_properties*, align 8
  %time_us = alloca i64, align 8
  %tmp64 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %denom = alloca i32, align 4
  %guard = alloca i32, align 4
  %rate_num = alloca i32, align 4
  %rate_denum = alloca i32, align 4
  %bits_per_symbol = alloca i32, align 4
  %interleaving = alloca i32, align 4
  %fft_div = alloca i32, align 4
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp27 = alloca i32, align 4
  %__base31 = alloca i32, align 4
  %__rem32 = alloca i32, align 4
  %tmp38 = alloca i32, align 4
  store %struct.dvb_frontend* %demod, %struct.dvb_frontend** %demod.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %demod.addr, metadata !9701, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %c, metadata !9703, metadata !DIExpression()), !dbg !9704
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %demod.addr, align 8, !dbg !9705
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 8, !dbg !9706
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %c, align 8, !dbg !9704
  call void @llvm.dbg.declare(metadata i64* %time_us, metadata !9707, metadata !DIExpression()), !dbg !9708
  call void @llvm.dbg.declare(metadata i64* %tmp64, metadata !9709, metadata !DIExpression()), !dbg !9710
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !9711, metadata !DIExpression()), !dbg !9712
  call void @llvm.dbg.declare(metadata i32* %denom, metadata !9713, metadata !DIExpression()), !dbg !9714
  call void @llvm.dbg.declare(metadata i32* %guard, metadata !9715, metadata !DIExpression()), !dbg !9716
  call void @llvm.dbg.declare(metadata i32* %rate_num, metadata !9717, metadata !DIExpression()), !dbg !9718
  call void @llvm.dbg.declare(metadata i32* %rate_denum, metadata !9719, metadata !DIExpression()), !dbg !9720
  store i32 1, i32* %rate_denum, align 4, !dbg !9720
  call void @llvm.dbg.declare(metadata i32* %bits_per_symbol, metadata !9721, metadata !DIExpression()), !dbg !9722
  call void @llvm.dbg.declare(metadata i32* %interleaving, metadata !9723, metadata !DIExpression()), !dbg !9724
  store i32 0, i32* %interleaving, align 4, !dbg !9724
  call void @llvm.dbg.declare(metadata i32* %fft_div, metadata !9725, metadata !DIExpression()), !dbg !9726
  %1 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9727
  %guard_interval = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %1, i32 0, i32 8, !dbg !9728
  %2 = load i32, i32* %guard_interval, align 4, !dbg !9728
  switch i32 %2, label %sw.default [
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
    i32 1, label %sw.bb2
    i32 0, label %sw.bb3
  ], !dbg !9729

sw.bb:                                            ; preds = %entry
  store i32 4, i32* %guard, align 4, !dbg !9730
  br label %sw.epilog, !dbg !9732

sw.bb1:                                           ; preds = %entry
  store i32 8, i32* %guard, align 4, !dbg !9733
  br label %sw.epilog, !dbg !9734

sw.bb2:                                           ; preds = %entry
  store i32 16, i32* %guard, align 4, !dbg !9735
  br label %sw.epilog, !dbg !9736

sw.default:                                       ; preds = %entry
  br label %sw.bb3, !dbg !9736

sw.bb3:                                           ; preds = %entry, %sw.default
  store i32 32, i32* %guard, align 4, !dbg !9737
  br label %sw.epilog, !dbg !9738

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %3 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9739
  %transmission_mode = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %3, i32 0, i32 6, !dbg !9740
  %4 = load i32, i32* %transmission_mode, align 4, !dbg !9740
  switch i32 %4, label %sw.default6 [
    i32 0, label %sw.bb4
    i32 3, label %sw.bb5
    i32 1, label %sw.bb7
  ], !dbg !9741

sw.bb4:                                           ; preds = %sw.epilog
  store i32 4, i32* %fft_div, align 4, !dbg !9742
  br label %sw.epilog8, !dbg !9744

sw.bb5:                                           ; preds = %sw.epilog
  store i32 2, i32* %fft_div, align 4, !dbg !9745
  br label %sw.epilog8, !dbg !9746

sw.default6:                                      ; preds = %sw.epilog
  br label %sw.bb7, !dbg !9746

sw.bb7:                                           ; preds = %sw.epilog, %sw.default6
  store i32 1, i32* %fft_div, align 4, !dbg !9747
  br label %sw.epilog8, !dbg !9748

sw.epilog8:                                       ; preds = %sw.bb7, %sw.bb5, %sw.bb4
  %5 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9749
  %modulation = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %5, i32 0, i32 1, !dbg !9750
  %6 = load i32, i32* %modulation, align 4, !dbg !9750
  switch i32 %6, label %sw.default11 [
    i32 12, label %sw.bb9
    i32 0, label %sw.bb9
    i32 1, label %sw.bb10
    i32 3, label %sw.bb12
  ], !dbg !9751

sw.bb9:                                           ; preds = %sw.epilog8, %sw.epilog8
  store i32 2, i32* %bits_per_symbol, align 4, !dbg !9752
  br label %sw.epilog13, !dbg !9754

sw.bb10:                                          ; preds = %sw.epilog8
  store i32 4, i32* %bits_per_symbol, align 4, !dbg !9755
  br label %sw.epilog13, !dbg !9756

sw.default11:                                     ; preds = %sw.epilog8
  br label %sw.bb12, !dbg !9756

sw.bb12:                                          ; preds = %sw.epilog8, %sw.default11
  store i32 6, i32* %bits_per_symbol, align 4, !dbg !9757
  br label %sw.epilog13, !dbg !9758

sw.epilog13:                                      ; preds = %sw.bb12, %sw.bb10, %sw.bb9
  %7 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9759
  %hierarchy = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %7, i32 0, i32 9, !dbg !9760
  %8 = load i32, i32* %hierarchy, align 4, !dbg !9760
  %cmp = icmp eq i32 %8, 0, !dbg !9761
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !9762

lor.lhs.false:                                    ; preds = %sw.epilog13
  br i1 true, label %cond.true, label %cond.false, !dbg !9763

cond.true:                                        ; preds = %lor.lhs.false, %sw.epilog13
  %9 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9764
  %code_rate_HP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %9, i32 0, i32 11, !dbg !9765
  %10 = load i32, i32* %code_rate_HP, align 4, !dbg !9765
  br label %cond.end, !dbg !9763

cond.false:                                       ; preds = %lor.lhs.false
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %c, align 8, !dbg !9766
  %code_rate_LP = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 12, !dbg !9767
  %12 = load i32, i32* %code_rate_LP, align 4, !dbg !9767
  br label %cond.end, !dbg !9763

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %12, %cond.false ], !dbg !9763
  switch i32 %cond, label %sw.default18 [
    i32 1, label %sw.bb14
    i32 2, label %sw.bb15
    i32 3, label %sw.bb16
    i32 5, label %sw.bb17
    i32 7, label %sw.bb19
  ], !dbg !9768

sw.bb14:                                          ; preds = %cond.end
  store i32 1, i32* %rate_num, align 4, !dbg !9769
  store i32 2, i32* %rate_denum, align 4, !dbg !9771
  br label %sw.epilog20, !dbg !9772

sw.bb15:                                          ; preds = %cond.end
  store i32 2, i32* %rate_num, align 4, !dbg !9773
  store i32 3, i32* %rate_denum, align 4, !dbg !9774
  br label %sw.epilog20, !dbg !9775

sw.bb16:                                          ; preds = %cond.end
  store i32 3, i32* %rate_num, align 4, !dbg !9776
  store i32 4, i32* %rate_denum, align 4, !dbg !9777
  br label %sw.epilog20, !dbg !9778

sw.bb17:                                          ; preds = %cond.end
  store i32 5, i32* %rate_num, align 4, !dbg !9779
  store i32 6, i32* %rate_denum, align 4, !dbg !9780
  br label %sw.epilog20, !dbg !9781

sw.default18:                                     ; preds = %cond.end
  br label %sw.bb19, !dbg !9781

sw.bb19:                                          ; preds = %cond.end, %sw.default18
  store i32 7, i32* %rate_num, align 4, !dbg !9782
  store i32 8, i32* %rate_denum, align 4, !dbg !9783
  br label %sw.epilog20, !dbg !9784

sw.epilog20:                                      ; preds = %sw.bb19, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14
  %13 = load i32, i32* %bits_per_symbol, align 4, !dbg !9785
  %14 = load i32, i32* %rate_num, align 4, !dbg !9786
  %mul = mul i32 %13, %14, !dbg !9787
  %15 = load i32, i32* %fft_div, align 4, !dbg !9788
  %mul21 = mul i32 %mul, %15, !dbg !9789
  %mul22 = mul i32 %mul21, 384, !dbg !9790
  store i32 %mul22, i32* %denom, align 4, !dbg !9791
  %16 = load i32, i32* %denom, align 4, !dbg !9792
  %tobool = icmp ne i32 %16, 0, !dbg !9792
  br i1 %tobool, label %if.end, label %if.then, !dbg !9794

if.then:                                          ; preds = %sw.epilog20
  store i32 0, i32* %retval, align 4, !dbg !9795
  br label %return, !dbg !9795

if.end:                                           ; preds = %sw.epilog20
  %17 = load i32, i32* %rate_denum, align 4, !dbg !9796
  %conv = sext i32 %17 to i64, !dbg !9796
  %mul23 = mul i64 %conv, 1575000000, !dbg !9797
  store i64 %mul23, i64* %time_us, align 8, !dbg !9798
  %18 = load i64, i64* %time_us, align 8, !dbg !9799
  store i64 %18, i64* %tmp64, align 8, !dbg !9800
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !9801, metadata !DIExpression()), !dbg !9803
  %19 = load i32, i32* %guard, align 4, !dbg !9803
  store i32 %19, i32* %__base, align 4, !dbg !9803
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !9804, metadata !DIExpression()), !dbg !9803
  %20 = load i64, i64* %tmp64, align 8, !dbg !9803
  %21 = load i32, i32* %__base, align 4, !dbg !9803
  %conv24 = zext i32 %21 to i64, !dbg !9803
  %rem = urem i64 %20, %conv24, !dbg !9803
  %conv25 = trunc i64 %rem to i32, !dbg !9803
  store i32 %conv25, i32* %__rem, align 4, !dbg !9803
  %22 = load i64, i64* %tmp64, align 8, !dbg !9803
  %23 = load i32, i32* %__base, align 4, !dbg !9803
  %conv26 = zext i32 %23 to i64, !dbg !9803
  %div = udiv i64 %22, %conv26, !dbg !9803
  store i64 %div, i64* %tmp64, align 8, !dbg !9803
  %24 = load i32, i32* %__rem, align 4, !dbg !9803
  store i32 %24, i32* %tmp27, align 4, !dbg !9803
  %25 = load i32, i32* %tmp27, align 4, !dbg !9803
  %26 = load i64, i64* %time_us, align 8, !dbg !9805
  %27 = load i64, i64* %tmp64, align 8, !dbg !9806
  %add = add i64 %26, %27, !dbg !9807
  store i64 %add, i64* %time_us, align 8, !dbg !9808
  %28 = load i32, i32* %denom, align 4, !dbg !9809
  %div28 = udiv i32 %28, 2, !dbg !9810
  %conv29 = zext i32 %div28 to i64, !dbg !9809
  %29 = load i64, i64* %time_us, align 8, !dbg !9811
  %add30 = add i64 %29, %conv29, !dbg !9811
  store i64 %add30, i64* %time_us, align 8, !dbg !9811
  call void @llvm.dbg.declare(metadata i32* %__base31, metadata !9812, metadata !DIExpression()), !dbg !9814
  %30 = load i32, i32* %denom, align 4, !dbg !9814
  store i32 %30, i32* %__base31, align 4, !dbg !9814
  call void @llvm.dbg.declare(metadata i32* %__rem32, metadata !9815, metadata !DIExpression()), !dbg !9814
  %31 = load i64, i64* %time_us, align 8, !dbg !9814
  %32 = load i32, i32* %__base31, align 4, !dbg !9814
  %conv33 = zext i32 %32 to i64, !dbg !9814
  %rem34 = urem i64 %31, %conv33, !dbg !9814
  %conv35 = trunc i64 %rem34 to i32, !dbg !9814
  store i32 %conv35, i32* %__rem32, align 4, !dbg !9814
  %33 = load i64, i64* %time_us, align 8, !dbg !9814
  %34 = load i32, i32* %__base31, align 4, !dbg !9814
  %conv36 = zext i32 %34 to i64, !dbg !9814
  %div37 = udiv i64 %33, %conv36, !dbg !9814
  store i64 %div37, i64* %time_us, align 8, !dbg !9814
  %35 = load i32, i32* %__rem32, align 4, !dbg !9814
  store i32 %35, i32* %tmp38, align 4, !dbg !9814
  %36 = load i32, i32* %tmp38, align 4, !dbg !9814
  %37 = load i32, i32* %interleaving, align 4, !dbg !9816
  %mul39 = mul i32 96768, %37, !dbg !9817
  store i32 %mul39, i32* %tmp, align 4, !dbg !9818
  %38 = load i32, i32* %tmp, align 4, !dbg !9819
  %39 = load i32, i32* %tmp, align 4, !dbg !9820
  %40 = load i32, i32* %guard, align 4, !dbg !9821
  %div40 = udiv i32 %39, %40, !dbg !9822
  %add41 = add i32 %38, %div40, !dbg !9823
  %conv42 = zext i32 %add41 to i64, !dbg !9819
  %41 = load i64, i64* %time_us, align 8, !dbg !9824
  %add43 = add i64 %41, %conv42, !dbg !9824
  store i64 %add43, i64* %time_us, align 8, !dbg !9824
  %42 = load i64, i64* %time_us, align 8, !dbg !9825
  %conv44 = trunc i64 %42 to i32, !dbg !9825
  store i32 %conv44, i32* %retval, align 4, !dbg !9826
  br label %return, !dbg !9826

return:                                           ; preds = %if.end, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !9827
  ret i32 %43, !dbg !9827
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !9828 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !9829, metadata !DIExpression()), !dbg !9830
  %0 = load i32, i32* %m.addr, align 4, !dbg !9831
  %conv = zext i32 %0 to i64, !dbg !9831
  %add = add i64 %conv, 4, !dbg !9832
  %sub = sub i64 %add, 1, !dbg !9833
  %div = sdiv i64 %sub, 4, !dbg !9834
  ret i64 %div, !dbg !9835
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noredzone
declare dso_local i32 @intlog10(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_tuner_xfer(%struct.i2c_adapter* %i2c_adap, %struct.i2c_msg* %msg, i32 %num) #0 !dbg !9836 {
entry:
  %retval = alloca i32, align 4
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %msg.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %apb_address = alloca i16, align 2
  %word = alloca i16, align 2
  %i = alloca i32, align 4
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !9837, metadata !DIExpression()), !dbg !9838
  store %struct.i2c_msg* %msg, %struct.i2c_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msg.addr, metadata !9839, metadata !DIExpression()), !dbg !9840
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !9841, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !9843, metadata !DIExpression()), !dbg !9844
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !9845
  %call = call i8* @i2c_get_adapdata(%struct.i2c_adapter* %0) #8, !dbg !9846
  %1 = bitcast i8* %call to %struct.dib7000p_state*, !dbg !9846
  store %struct.dib7000p_state* %1, %struct.dib7000p_state** %state, align 8, !dbg !9844
  call void @llvm.dbg.declare(metadata i16* %apb_address, metadata !9847, metadata !DIExpression()), !dbg !9848
  store i16 0, i16* %apb_address, align 2, !dbg !9848
  call void @llvm.dbg.declare(metadata i16* %word, metadata !9849, metadata !DIExpression()), !dbg !9850
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9851, metadata !DIExpression()), !dbg !9852
  store i32 0, i32* %i, align 4, !dbg !9852
  %2 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9853
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %2, i64 0, !dbg !9853
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 3, !dbg !9854
  %3 = load i8*, i8** %buf, align 8, !dbg !9854
  %arrayidx1 = getelementptr i8, i8* %3, i64 0, !dbg !9853
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !9853
  %conv = zext i8 %4 to i32, !dbg !9853
  switch i32 %conv, label %sw.epilog [
    i32 18, label %sw.bb
    i32 20, label %sw.bb2
    i32 36, label %sw.bb3
    i32 26, label %sw.bb4
    i32 34, label %sw.bb5
    i32 51, label %sw.bb6
    i32 52, label %sw.bb7
    i32 53, label %sw.bb8
    i32 54, label %sw.bb9
    i32 55, label %sw.bb10
    i32 56, label %sw.bb11
    i32 57, label %sw.bb12
    i32 42, label %sw.bb13
    i32 43, label %sw.bb14
    i32 44, label %sw.bb15
    i32 45, label %sw.bb16
    i32 46, label %sw.bb17
    i32 47, label %sw.bb18
    i32 48, label %sw.bb19
    i32 49, label %sw.bb20
    i32 50, label %sw.bb21
    i32 62, label %sw.bb22
    i32 63, label %sw.bb23
    i32 64, label %sw.bb24
    i32 37, label %sw.bb25
    i32 38, label %sw.bb26
    i32 39, label %sw.bb27
    i32 40, label %sw.bb28
    i32 29, label %sw.bb29
    i32 31, label %sw.bb47
  ], !dbg !9855

sw.bb:                                            ; preds = %entry
  store i16 1920, i16* %apb_address, align 2, !dbg !9856
  br label %sw.epilog, !dbg !9858

sw.bb2:                                           ; preds = %entry
  store i16 1921, i16* %apb_address, align 2, !dbg !9859
  br label %sw.epilog, !dbg !9860

sw.bb3:                                           ; preds = %entry
  store i16 1922, i16* %apb_address, align 2, !dbg !9861
  br label %sw.epilog, !dbg !9862

sw.bb4:                                           ; preds = %entry
  store i16 1923, i16* %apb_address, align 2, !dbg !9863
  br label %sw.epilog, !dbg !9864

sw.bb5:                                           ; preds = %entry
  store i16 1924, i16* %apb_address, align 2, !dbg !9865
  br label %sw.epilog, !dbg !9866

sw.bb6:                                           ; preds = %entry
  store i16 1926, i16* %apb_address, align 2, !dbg !9867
  br label %sw.epilog, !dbg !9868

sw.bb7:                                           ; preds = %entry
  store i16 1927, i16* %apb_address, align 2, !dbg !9869
  br label %sw.epilog, !dbg !9870

sw.bb8:                                           ; preds = %entry
  store i16 1928, i16* %apb_address, align 2, !dbg !9871
  br label %sw.epilog, !dbg !9872

sw.bb9:                                           ; preds = %entry
  store i16 1929, i16* %apb_address, align 2, !dbg !9873
  br label %sw.epilog, !dbg !9874

sw.bb10:                                          ; preds = %entry
  store i16 1930, i16* %apb_address, align 2, !dbg !9875
  br label %sw.epilog, !dbg !9876

sw.bb11:                                          ; preds = %entry
  store i16 1931, i16* %apb_address, align 2, !dbg !9877
  br label %sw.epilog, !dbg !9878

sw.bb12:                                          ; preds = %entry
  store i16 1932, i16* %apb_address, align 2, !dbg !9879
  br label %sw.epilog, !dbg !9880

sw.bb13:                                          ; preds = %entry
  store i16 1935, i16* %apb_address, align 2, !dbg !9881
  br label %sw.epilog, !dbg !9882

sw.bb14:                                          ; preds = %entry
  store i16 1936, i16* %apb_address, align 2, !dbg !9883
  br label %sw.epilog, !dbg !9884

sw.bb15:                                          ; preds = %entry
  store i16 1937, i16* %apb_address, align 2, !dbg !9885
  br label %sw.epilog, !dbg !9886

sw.bb16:                                          ; preds = %entry
  store i16 1938, i16* %apb_address, align 2, !dbg !9887
  br label %sw.epilog, !dbg !9888

sw.bb17:                                          ; preds = %entry
  store i16 1939, i16* %apb_address, align 2, !dbg !9889
  br label %sw.epilog, !dbg !9890

sw.bb18:                                          ; preds = %entry
  store i16 1940, i16* %apb_address, align 2, !dbg !9891
  br label %sw.epilog, !dbg !9892

sw.bb19:                                          ; preds = %entry
  store i16 1941, i16* %apb_address, align 2, !dbg !9893
  br label %sw.epilog, !dbg !9894

sw.bb20:                                          ; preds = %entry
  store i16 1942, i16* %apb_address, align 2, !dbg !9895
  br label %sw.epilog, !dbg !9896

sw.bb21:                                          ; preds = %entry
  store i16 1943, i16* %apb_address, align 2, !dbg !9897
  br label %sw.epilog, !dbg !9898

sw.bb22:                                          ; preds = %entry
  store i16 1944, i16* %apb_address, align 2, !dbg !9899
  br label %sw.epilog, !dbg !9900

sw.bb23:                                          ; preds = %entry
  store i16 1945, i16* %apb_address, align 2, !dbg !9901
  br label %sw.epilog, !dbg !9902

sw.bb24:                                          ; preds = %entry
  store i16 1948, i16* %apb_address, align 2, !dbg !9903
  br label %sw.epilog, !dbg !9904

sw.bb25:                                          ; preds = %entry
  store i16 914, i16* %apb_address, align 2, !dbg !9905
  br label %sw.epilog, !dbg !9906

sw.bb26:                                          ; preds = %entry
  store i16 915, i16* %apb_address, align 2, !dbg !9907
  br label %sw.epilog, !dbg !9908

sw.bb27:                                          ; preds = %entry
  store i16 917, i16* %apb_address, align 2, !dbg !9909
  br label %sw.epilog, !dbg !9910

sw.bb28:                                          ; preds = %entry
  store i16 916, i16* %apb_address, align 2, !dbg !9911
  br label %sw.epilog, !dbg !9912

sw.bb29:                                          ; preds = %entry
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9913
  %call30 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %5, i16 zeroext 72) #8, !dbg !9914
  %conv31 = zext i16 %call30 to i32, !dbg !9914
  %shr = ashr i32 %conv31, 12, !dbg !9915
  %and = and i32 %shr, 3, !dbg !9916
  store i32 %and, i32* %i, align 4, !dbg !9917
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9918
  %7 = load i32, i32* %i, align 4, !dbg !9919
  %add = add i32 384, %7, !dbg !9920
  %conv32 = trunc i32 %add to i16, !dbg !9921
  %call33 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %6, i16 zeroext %conv32) #8, !dbg !9922
  store i16 %call33, i16* %word, align 2, !dbg !9923
  %8 = load i16, i16* %word, align 2, !dbg !9924
  %conv34 = zext i16 %8 to i32, !dbg !9924
  %shr35 = ashr i32 %conv34, 8, !dbg !9925
  %and36 = and i32 %shr35, 255, !dbg !9926
  %conv37 = trunc i32 %and36 to i8, !dbg !9927
  %9 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9928
  %arrayidx38 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %9, i64 1, !dbg !9928
  %buf39 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx38, i32 0, i32 3, !dbg !9929
  %10 = load i8*, i8** %buf39, align 8, !dbg !9929
  %arrayidx40 = getelementptr i8, i8* %10, i64 0, !dbg !9928
  store i8 %conv37, i8* %arrayidx40, align 1, !dbg !9930
  %11 = load i16, i16* %word, align 2, !dbg !9931
  %conv41 = zext i16 %11 to i32, !dbg !9932
  %and42 = and i32 %conv41, 255, !dbg !9933
  %conv43 = trunc i32 %and42 to i8, !dbg !9932
  %12 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9934
  %arrayidx44 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %12, i64 1, !dbg !9934
  %buf45 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx44, i32 0, i32 3, !dbg !9935
  %13 = load i8*, i8** %buf45, align 8, !dbg !9935
  %arrayidx46 = getelementptr i8, i8* %13, i64 1, !dbg !9934
  store i8 %conv43, i8* %arrayidx46, align 1, !dbg !9936
  %14 = load i32, i32* %num.addr, align 4, !dbg !9937
  store i32 %14, i32* %retval, align 4, !dbg !9938
  br label %return, !dbg !9938

sw.bb47:                                          ; preds = %entry
  %15 = load i32, i32* %num.addr, align 4, !dbg !9939
  %cmp = icmp eq i32 %15, 1, !dbg !9941
  br i1 %cmp, label %if.then, label %if.end, !dbg !9942

if.then:                                          ; preds = %sw.bb47
  %16 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9943
  %arrayidx49 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %16, i64 0, !dbg !9943
  %buf50 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx49, i32 0, i32 3, !dbg !9945
  %17 = load i8*, i8** %buf50, align 8, !dbg !9945
  %arrayidx51 = getelementptr i8, i8* %17, i64 1, !dbg !9943
  %18 = load i8, i8* %arrayidx51, align 1, !dbg !9943
  %conv52 = zext i8 %18 to i32, !dbg !9943
  %shl = shl i32 %conv52, 8, !dbg !9946
  %19 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9947
  %arrayidx53 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %19, i64 0, !dbg !9947
  %buf54 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx53, i32 0, i32 3, !dbg !9948
  %20 = load i8*, i8** %buf54, align 8, !dbg !9948
  %arrayidx55 = getelementptr i8, i8* %20, i64 2, !dbg !9947
  %21 = load i8, i8* %arrayidx55, align 1, !dbg !9947
  %conv56 = zext i8 %21 to i32, !dbg !9947
  %or = or i32 %shl, %conv56, !dbg !9949
  %conv57 = trunc i32 %or to i16, !dbg !9950
  store i16 %conv57, i16* %word, align 2, !dbg !9951
  %22 = load i16, i16* %word, align 2, !dbg !9952
  %conv58 = zext i16 %22 to i32, !dbg !9952
  %and59 = and i32 %conv58, 3, !dbg !9952
  %conv60 = trunc i32 %and59 to i16, !dbg !9952
  store i16 %conv60, i16* %word, align 2, !dbg !9952
  %23 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9953
  %call61 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %23, i16 zeroext 72) #8, !dbg !9954
  %conv62 = zext i16 %call61 to i32, !dbg !9954
  %and63 = and i32 %conv62, -12289, !dbg !9955
  %24 = load i16, i16* %word, align 2, !dbg !9956
  %conv64 = zext i16 %24 to i32, !dbg !9956
  %shl65 = shl i32 %conv64, 12, !dbg !9957
  %or66 = or i32 %and63, %shl65, !dbg !9958
  %conv67 = trunc i32 %or66 to i16, !dbg !9959
  store i16 %conv67, i16* %word, align 2, !dbg !9960
  %25 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !9961
  %26 = load i16, i16* %word, align 2, !dbg !9962
  %call68 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %25, i16 zeroext 72, i16 zeroext %26) #8, !dbg !9963
  %27 = load i32, i32* %num.addr, align 4, !dbg !9964
  store i32 %27, i32* %retval, align 4, !dbg !9965
  br label %return, !dbg !9965

if.end:                                           ; preds = %sw.bb47
  br label %sw.epilog, !dbg !9966

sw.epilog:                                        ; preds = %if.end, %entry, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb
  %28 = load i16, i16* %apb_address, align 2, !dbg !9967
  %conv69 = zext i16 %28 to i32, !dbg !9967
  %cmp70 = icmp ne i32 %conv69, 0, !dbg !9969
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !9970

if.then72:                                        ; preds = %sw.epilog
  %29 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !9971
  %30 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9972
  %31 = load i32, i32* %num.addr, align 4, !dbg !9973
  %32 = load i16, i16* %apb_address, align 2, !dbg !9974
  %call73 = call i32 @dib7090p_rw_on_apb(%struct.i2c_adapter* %29, %struct.i2c_msg* %30, i32 %31, i16 zeroext %32) #8, !dbg !9975
  store i32 %call73, i32* %retval, align 4, !dbg !9976
  br label %return, !dbg !9976

if.else:                                          ; preds = %sw.epilog
  %33 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !9977
  %34 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !9978
  %35 = load i32, i32* %num.addr, align 4, !dbg !9979
  %call74 = call i32 @w7090p_tuner_rw_serpar(%struct.i2c_adapter* %33, %struct.i2c_msg* %34, i32 %35) #8, !dbg !9980
  store i32 %call74, i32* %retval, align 4, !dbg !9981
  br label %return, !dbg !9981

return:                                           ; preds = %if.else, %if.then72, %if.then, %sw.bb29
  %36 = load i32, i32* %retval, align 4, !dbg !9982
  ret i32 %36, !dbg !9982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_i2c_func(%struct.i2c_adapter* %adapter) #0 !dbg !9983 {
entry:
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !9984, metadata !DIExpression()), !dbg !9985
  ret i32 1, !dbg !9986
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @i2c_get_adapdata(%struct.i2c_adapter* %adap) #0 !dbg !9987 {
entry:
  %adap.addr = alloca %struct.i2c_adapter*, align 8
  store %struct.i2c_adapter* %adap, %struct.i2c_adapter** %adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adap.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adap.addr, align 8, !dbg !9994
  %dev = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %0, i32 0, i32 9, !dbg !9995
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #8, !dbg !9996
  ret i8* %call, !dbg !9997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090p_rw_on_apb(%struct.i2c_adapter* %i2c_adap, %struct.i2c_msg* %msg, i32 %num, i16 zeroext %apb_address) #0 !dbg !9998 {
entry:
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %msg.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %apb_address.addr = alloca i16, align 2
  %state = alloca %struct.dib7000p_state*, align 8
  %word = alloca i16, align 2
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !10001, metadata !DIExpression()), !dbg !10002
  store %struct.i2c_msg* %msg, %struct.i2c_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msg.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10005, metadata !DIExpression()), !dbg !10006
  store i16 %apb_address, i16* %apb_address.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %apb_address.addr, metadata !10007, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !10009, metadata !DIExpression()), !dbg !10010
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !10011
  %call = call i8* @i2c_get_adapdata(%struct.i2c_adapter* %0) #8, !dbg !10012
  %1 = bitcast i8* %call to %struct.dib7000p_state*, !dbg !10012
  store %struct.dib7000p_state* %1, %struct.dib7000p_state** %state, align 8, !dbg !10010
  call void @llvm.dbg.declare(metadata i16* %word, metadata !10013, metadata !DIExpression()), !dbg !10014
  %2 = load i32, i32* %num.addr, align 4, !dbg !10015
  %cmp = icmp eq i32 %2, 1, !dbg !10017
  br i1 %cmp, label %if.then, label %if.else, !dbg !10018

if.then:                                          ; preds = %entry
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10019
  %4 = load i16, i16* %apb_address.addr, align 2, !dbg !10021
  %5 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10022
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %5, i64 0, !dbg !10022
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 3, !dbg !10023
  %6 = load i8*, i8** %buf, align 8, !dbg !10023
  %arrayidx1 = getelementptr i8, i8* %6, i64 1, !dbg !10022
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !10022
  %conv = zext i8 %7 to i32, !dbg !10022
  %shl = shl i32 %conv, 8, !dbg !10024
  %8 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10025
  %arrayidx2 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %8, i64 0, !dbg !10025
  %buf3 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx2, i32 0, i32 3, !dbg !10026
  %9 = load i8*, i8** %buf3, align 8, !dbg !10026
  %arrayidx4 = getelementptr i8, i8* %9, i64 2, !dbg !10025
  %10 = load i8, i8* %arrayidx4, align 1, !dbg !10025
  %conv5 = zext i8 %10 to i32, !dbg !10027
  %or = or i32 %shl, %conv5, !dbg !10028
  %conv6 = trunc i32 %or to i16, !dbg !10029
  %call7 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %3, i16 zeroext %4, i16 zeroext %conv6) #8, !dbg !10030
  br label %if.end, !dbg !10031

if.else:                                          ; preds = %entry
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10032
  %12 = load i16, i16* %apb_address.addr, align 2, !dbg !10034
  %call8 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %11, i16 zeroext %12) #8, !dbg !10035
  store i16 %call8, i16* %word, align 2, !dbg !10036
  %13 = load i16, i16* %word, align 2, !dbg !10037
  %conv9 = zext i16 %13 to i32, !dbg !10037
  %shr = ashr i32 %conv9, 8, !dbg !10038
  %and = and i32 %shr, 255, !dbg !10039
  %conv10 = trunc i32 %and to i8, !dbg !10040
  %14 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10041
  %arrayidx11 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %14, i64 1, !dbg !10041
  %buf12 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx11, i32 0, i32 3, !dbg !10042
  %15 = load i8*, i8** %buf12, align 8, !dbg !10042
  %arrayidx13 = getelementptr i8, i8* %15, i64 0, !dbg !10041
  store i8 %conv10, i8* %arrayidx13, align 1, !dbg !10043
  %16 = load i16, i16* %word, align 2, !dbg !10044
  %conv14 = zext i16 %16 to i32, !dbg !10045
  %and15 = and i32 %conv14, 255, !dbg !10046
  %conv16 = trunc i32 %and15 to i8, !dbg !10045
  %17 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10047
  %arrayidx17 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %17, i64 1, !dbg !10047
  %buf18 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx17, i32 0, i32 3, !dbg !10048
  %18 = load i8*, i8** %buf18, align 8, !dbg !10048
  %arrayidx19 = getelementptr i8, i8* %18, i64 1, !dbg !10047
  store i8 %conv16, i8* %arrayidx19, align 1, !dbg !10049
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %19 = load i32, i32* %num.addr, align 4, !dbg !10050
  ret i32 %19, !dbg !10051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @w7090p_tuner_rw_serpar(%struct.i2c_adapter* %i2c_adap, %struct.i2c_msg* %msg, i32 %num) #0 !dbg !10052 {
entry:
  %retval = alloca i32, align 4
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %msg.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !10053, metadata !DIExpression()), !dbg !10054
  store %struct.i2c_msg* %msg, %struct.i2c_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msg.addr, metadata !10055, metadata !DIExpression()), !dbg !10056
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10057, metadata !DIExpression()), !dbg !10058
  %0 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10059
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %0, i64 0, !dbg !10059
  %call = call i32 @map_addr_to_serpar_number(%struct.i2c_msg* %arrayidx) #8, !dbg !10061
  %cmp = icmp eq i32 %call, 0, !dbg !10062
  br i1 %cmp, label %if.then, label %if.end, !dbg !10063

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %num.addr, align 4, !dbg !10064
  %cmp1 = icmp eq i32 %1, 1, !dbg !10067
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !10068

if.then2:                                         ; preds = %if.then
  %2 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !10069
  %3 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10071
  %call3 = call i32 @w7090p_tuner_write_serpar(%struct.i2c_adapter* %2, %struct.i2c_msg* %3, i32 1) #8, !dbg !10072
  store i32 %call3, i32* %retval, align 4, !dbg !10073
  br label %return, !dbg !10073

if.else:                                          ; preds = %if.then
  %4 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !10074
  %5 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10076
  %call4 = call i32 @w7090p_tuner_read_serpar(%struct.i2c_adapter* %4, %struct.i2c_msg* %5, i32 2) #8, !dbg !10077
  store i32 %call4, i32* %retval, align 4, !dbg !10078
  br label %return, !dbg !10078

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %num.addr, align 4, !dbg !10079
  store i32 %6, i32* %retval, align 4, !dbg !10080
  br label %return, !dbg !10080

return:                                           ; preds = %if.end, %if.else, %if.then2
  %7 = load i32, i32* %retval, align 4, !dbg !10081
  ret i32 %7, !dbg !10081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !10082 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10085, metadata !DIExpression()), !dbg !10086
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10087
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !10088
  %1 = load i8*, i8** %driver_data, align 8, !dbg !10088
  ret i8* %1, !dbg !10089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @map_addr_to_serpar_number(%struct.i2c_msg* %msg) #0 !dbg !10090 {
entry:
  %retval = alloca i32, align 4
  %msg.addr = alloca %struct.i2c_msg*, align 8
  store %struct.i2c_msg* %msg, %struct.i2c_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msg.addr, metadata !10093, metadata !DIExpression()), !dbg !10094
  %0 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10095
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %0, i32 0, i32 3, !dbg !10097
  %1 = load i8*, i8** %buf, align 8, !dbg !10097
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !10095
  %2 = load i8, i8* %arrayidx, align 1, !dbg !10095
  %conv = zext i8 %2 to i32, !dbg !10095
  %cmp = icmp sle i32 %conv, 15, !dbg !10098
  br i1 %cmp, label %if.then, label %if.else, !dbg !10099

if.then:                                          ; preds = %entry
  %3 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10100
  %buf2 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %3, i32 0, i32 3, !dbg !10101
  %4 = load i8*, i8** %buf2, align 8, !dbg !10101
  %arrayidx3 = getelementptr i8, i8* %4, i64 0, !dbg !10100
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !10102
  %conv4 = zext i8 %5 to i32, !dbg !10102
  %sub = sub i32 %conv4, 1, !dbg !10102
  %conv5 = trunc i32 %sub to i8, !dbg !10102
  store i8 %conv5, i8* %arrayidx3, align 1, !dbg !10102
  br label %if.end63, !dbg !10100

if.else:                                          ; preds = %entry
  %6 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10103
  %buf6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %6, i32 0, i32 3, !dbg !10105
  %7 = load i8*, i8** %buf6, align 8, !dbg !10105
  %arrayidx7 = getelementptr i8, i8* %7, i64 0, !dbg !10103
  %8 = load i8, i8* %arrayidx7, align 1, !dbg !10103
  %conv8 = zext i8 %8 to i32, !dbg !10103
  %cmp9 = icmp eq i32 %conv8, 17, !dbg !10106
  br i1 %cmp9, label %if.then11, label %if.else14, !dbg !10107

if.then11:                                        ; preds = %if.else
  %9 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10108
  %buf12 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %9, i32 0, i32 3, !dbg !10109
  %10 = load i8*, i8** %buf12, align 8, !dbg !10109
  %arrayidx13 = getelementptr i8, i8* %10, i64 0, !dbg !10108
  store i8 15, i8* %arrayidx13, align 1, !dbg !10110
  br label %if.end62, !dbg !10108

if.else14:                                        ; preds = %if.else
  %11 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10111
  %buf15 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %11, i32 0, i32 3, !dbg !10113
  %12 = load i8*, i8** %buf15, align 8, !dbg !10113
  %arrayidx16 = getelementptr i8, i8* %12, i64 0, !dbg !10111
  %13 = load i8, i8* %arrayidx16, align 1, !dbg !10111
  %conv17 = zext i8 %13 to i32, !dbg !10111
  %cmp18 = icmp eq i32 %conv17, 16, !dbg !10114
  br i1 %cmp18, label %if.then20, label %if.else23, !dbg !10115

if.then20:                                        ; preds = %if.else14
  %14 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10116
  %buf21 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %14, i32 0, i32 3, !dbg !10117
  %15 = load i8*, i8** %buf21, align 8, !dbg !10117
  %arrayidx22 = getelementptr i8, i8* %15, i64 0, !dbg !10116
  store i8 17, i8* %arrayidx22, align 1, !dbg !10118
  br label %if.end61, !dbg !10116

if.else23:                                        ; preds = %if.else14
  %16 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10119
  %buf24 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %16, i32 0, i32 3, !dbg !10121
  %17 = load i8*, i8** %buf24, align 8, !dbg !10121
  %arrayidx25 = getelementptr i8, i8* %17, i64 0, !dbg !10119
  %18 = load i8, i8* %arrayidx25, align 1, !dbg !10119
  %conv26 = zext i8 %18 to i32, !dbg !10119
  %cmp27 = icmp eq i32 %conv26, 19, !dbg !10122
  br i1 %cmp27, label %if.then29, label %if.else32, !dbg !10123

if.then29:                                        ; preds = %if.else23
  %19 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10124
  %buf30 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %19, i32 0, i32 3, !dbg !10125
  %20 = load i8*, i8** %buf30, align 8, !dbg !10125
  %arrayidx31 = getelementptr i8, i8* %20, i64 0, !dbg !10124
  store i8 16, i8* %arrayidx31, align 1, !dbg !10126
  br label %if.end60, !dbg !10124

if.else32:                                        ; preds = %if.else23
  %21 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10127
  %buf33 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %21, i32 0, i32 3, !dbg !10129
  %22 = load i8*, i8** %buf33, align 8, !dbg !10129
  %arrayidx34 = getelementptr i8, i8* %22, i64 0, !dbg !10127
  %23 = load i8, i8* %arrayidx34, align 1, !dbg !10127
  %conv35 = zext i8 %23 to i32, !dbg !10127
  %cmp36 = icmp sge i32 %conv35, 21, !dbg !10130
  br i1 %cmp36, label %land.lhs.true, label %if.else49, !dbg !10131

land.lhs.true:                                    ; preds = %if.else32
  %24 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10132
  %buf38 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %24, i32 0, i32 3, !dbg !10133
  %25 = load i8*, i8** %buf38, align 8, !dbg !10133
  %arrayidx39 = getelementptr i8, i8* %25, i64 0, !dbg !10132
  %26 = load i8, i8* %arrayidx39, align 1, !dbg !10132
  %conv40 = zext i8 %26 to i32, !dbg !10132
  %cmp41 = icmp sle i32 %conv40, 25, !dbg !10134
  br i1 %cmp41, label %if.then43, label %if.else49, !dbg !10135

if.then43:                                        ; preds = %land.lhs.true
  %27 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10136
  %buf44 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %27, i32 0, i32 3, !dbg !10137
  %28 = load i8*, i8** %buf44, align 8, !dbg !10137
  %arrayidx45 = getelementptr i8, i8* %28, i64 0, !dbg !10136
  %29 = load i8, i8* %arrayidx45, align 1, !dbg !10138
  %conv46 = zext i8 %29 to i32, !dbg !10138
  %sub47 = sub i32 %conv46, 3, !dbg !10138
  %conv48 = trunc i32 %sub47 to i8, !dbg !10138
  store i8 %conv48, i8* %arrayidx45, align 1, !dbg !10138
  br label %if.end59, !dbg !10136

if.else49:                                        ; preds = %land.lhs.true, %if.else32
  %30 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10139
  %buf50 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %30, i32 0, i32 3, !dbg !10141
  %31 = load i8*, i8** %buf50, align 8, !dbg !10141
  %arrayidx51 = getelementptr i8, i8* %31, i64 0, !dbg !10139
  %32 = load i8, i8* %arrayidx51, align 1, !dbg !10139
  %conv52 = zext i8 %32 to i32, !dbg !10139
  %cmp53 = icmp eq i32 %conv52, 28, !dbg !10142
  br i1 %cmp53, label %if.then55, label %if.else58, !dbg !10143

if.then55:                                        ; preds = %if.else49
  %33 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10144
  %buf56 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %33, i32 0, i32 3, !dbg !10145
  %34 = load i8*, i8** %buf56, align 8, !dbg !10145
  %arrayidx57 = getelementptr i8, i8* %34, i64 0, !dbg !10144
  store i8 23, i8* %arrayidx57, align 1, !dbg !10146
  br label %if.end, !dbg !10144

if.else58:                                        ; preds = %if.else49
  store i32 -22, i32* %retval, align 4, !dbg !10147
  br label %return, !dbg !10147

if.end:                                           ; preds = %if.then55
  br label %if.end59

if.end59:                                         ; preds = %if.end, %if.then43
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then29
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then20
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then11
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then
  store i32 0, i32* %retval, align 4, !dbg !10148
  br label %return, !dbg !10148

return:                                           ; preds = %if.end63, %if.else58
  %35 = load i32, i32* %retval, align 4, !dbg !10149
  ret i32 %35, !dbg !10149
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @w7090p_tuner_write_serpar(%struct.i2c_adapter* %i2c_adap, %struct.i2c_msg* %msg, i32 %num) #0 !dbg !10150 {
entry:
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %msg.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %n_overflow = alloca i8, align 1
  %i = alloca i16, align 2
  %serpar_num = alloca i16, align 2
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !10151, metadata !DIExpression()), !dbg !10152
  store %struct.i2c_msg* %msg, %struct.i2c_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msg.addr, metadata !10153, metadata !DIExpression()), !dbg !10154
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !10157, metadata !DIExpression()), !dbg !10158
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !10159
  %call = call i8* @i2c_get_adapdata(%struct.i2c_adapter* %0) #8, !dbg !10160
  %1 = bitcast i8* %call to %struct.dib7000p_state*, !dbg !10160
  store %struct.dib7000p_state* %1, %struct.dib7000p_state** %state, align 8, !dbg !10158
  call void @llvm.dbg.declare(metadata i8* %n_overflow, metadata !10161, metadata !DIExpression()), !dbg !10162
  store i8 1, i8* %n_overflow, align 1, !dbg !10162
  call void @llvm.dbg.declare(metadata i16* %i, metadata !10163, metadata !DIExpression()), !dbg !10164
  store i16 1000, i16* %i, align 2, !dbg !10164
  call void @llvm.dbg.declare(metadata i16* %serpar_num, metadata !10165, metadata !DIExpression()), !dbg !10166
  %2 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10167
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %2, i64 0, !dbg !10167
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 3, !dbg !10168
  %3 = load i8*, i8** %buf, align 8, !dbg !10168
  %arrayidx1 = getelementptr i8, i8* %3, i64 0, !dbg !10167
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !10167
  %conv = zext i8 %4 to i16, !dbg !10167
  store i16 %conv, i16* %serpar_num, align 2, !dbg !10166
  br label %while.cond, !dbg !10169

while.cond:                                       ; preds = %if.end14, %entry
  %5 = load i8, i8* %n_overflow, align 1, !dbg !10170
  %conv2 = zext i8 %5 to i32, !dbg !10170
  %cmp = icmp eq i32 %conv2, 1, !dbg !10171
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10172

land.rhs:                                         ; preds = %while.cond
  %6 = load i16, i16* %i, align 2, !dbg !10173
  %conv4 = zext i16 %6 to i32, !dbg !10173
  %tobool = icmp ne i32 %conv4, 0, !dbg !10172
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !10174
  br i1 %7, label %while.body, label %while.end, !dbg !10169

while.body:                                       ; preds = %land.end
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10175
  %call5 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %8, i16 zeroext 1984) #8, !dbg !10177
  %conv6 = zext i16 %call5 to i32, !dbg !10177
  %shr = ashr i32 %conv6, 1, !dbg !10178
  %and = and i32 %shr, 1, !dbg !10179
  %conv7 = trunc i32 %and to i8, !dbg !10180
  store i8 %conv7, i8* %n_overflow, align 1, !dbg !10181
  %9 = load i16, i16* %i, align 2, !dbg !10182
  %dec = add i16 %9, -1, !dbg !10182
  store i16 %dec, i16* %i, align 2, !dbg !10182
  %10 = load i16, i16* %i, align 2, !dbg !10183
  %conv8 = zext i16 %10 to i32, !dbg !10183
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !10185
  br i1 %cmp9, label %if.then, label %if.end14, !dbg !10186

if.then:                                          ; preds = %while.body
  br label %do.body, !dbg !10187

do.body:                                          ; preds = %if.then
  %11 = load i32, i32* @debug, align 4, !dbg !10188
  %tobool11 = icmp ne i32 %11, 0, !dbg !10188
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !10191

if.then12:                                        ; preds = %do.body
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.w7090p_tuner_write_serpar, i64 0, i64 0)) #9, !dbg !10188
  br label %if.end, !dbg !10188

if.end:                                           ; preds = %if.then12, %do.body
  br label %do.end, !dbg !10191

do.end:                                           ; preds = %if.end
  br label %if.end14, !dbg !10191

if.end14:                                         ; preds = %do.end, %while.body
  br label %while.cond, !dbg !10169, !llvm.loop !10192

while.end:                                        ; preds = %land.end
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10194
  %13 = load i16, i16* %serpar_num, align 2, !dbg !10195
  %conv15 = zext i16 %13 to i32, !dbg !10195
  %and16 = and i32 %conv15, 63, !dbg !10196
  %or = or i32 64, %and16, !dbg !10197
  %conv17 = trunc i32 %or to i16, !dbg !10198
  %call18 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 1985, i16 zeroext %conv17) #8, !dbg !10199
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10200
  %15 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10201
  %arrayidx19 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %15, i64 0, !dbg !10201
  %buf20 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx19, i32 0, i32 3, !dbg !10202
  %16 = load i8*, i8** %buf20, align 8, !dbg !10202
  %arrayidx21 = getelementptr i8, i8* %16, i64 1, !dbg !10201
  %17 = load i8, i8* %arrayidx21, align 1, !dbg !10201
  %conv22 = zext i8 %17 to i32, !dbg !10201
  %shl = shl i32 %conv22, 8, !dbg !10203
  %18 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10204
  %arrayidx23 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %18, i64 0, !dbg !10204
  %buf24 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx23, i32 0, i32 3, !dbg !10205
  %19 = load i8*, i8** %buf24, align 8, !dbg !10205
  %arrayidx25 = getelementptr i8, i8* %19, i64 2, !dbg !10204
  %20 = load i8, i8* %arrayidx25, align 1, !dbg !10204
  %conv26 = zext i8 %20 to i32, !dbg !10204
  %or27 = or i32 %shl, %conv26, !dbg !10206
  %conv28 = trunc i32 %or27 to i16, !dbg !10207
  %call29 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 1986, i16 zeroext %conv28) #8, !dbg !10208
  %21 = load i32, i32* %num.addr, align 4, !dbg !10209
  ret i32 %21, !dbg !10210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @w7090p_tuner_read_serpar(%struct.i2c_adapter* %i2c_adap, %struct.i2c_msg* %msg, i32 %num) #0 !dbg !10211 {
entry:
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %msg.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %state = alloca %struct.dib7000p_state*, align 8
  %n_overflow = alloca i8, align 1
  %n_empty = alloca i8, align 1
  %i = alloca i16, align 2
  %serpar_num = alloca i16, align 2
  %read_word = alloca i16, align 2
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !10212, metadata !DIExpression()), !dbg !10213
  store %struct.i2c_msg* %msg, %struct.i2c_msg** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msg.addr, metadata !10214, metadata !DIExpression()), !dbg !10215
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !10216, metadata !DIExpression()), !dbg !10217
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state, metadata !10218, metadata !DIExpression()), !dbg !10219
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !10220
  %call = call i8* @i2c_get_adapdata(%struct.i2c_adapter* %0) #8, !dbg !10221
  %1 = bitcast i8* %call to %struct.dib7000p_state*, !dbg !10221
  store %struct.dib7000p_state* %1, %struct.dib7000p_state** %state, align 8, !dbg !10219
  call void @llvm.dbg.declare(metadata i8* %n_overflow, metadata !10222, metadata !DIExpression()), !dbg !10223
  store i8 1, i8* %n_overflow, align 1, !dbg !10223
  call void @llvm.dbg.declare(metadata i8* %n_empty, metadata !10224, metadata !DIExpression()), !dbg !10225
  store i8 1, i8* %n_empty, align 1, !dbg !10225
  call void @llvm.dbg.declare(metadata i16* %i, metadata !10226, metadata !DIExpression()), !dbg !10227
  store i16 1000, i16* %i, align 2, !dbg !10227
  call void @llvm.dbg.declare(metadata i16* %serpar_num, metadata !10228, metadata !DIExpression()), !dbg !10229
  %2 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10230
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %2, i64 0, !dbg !10230
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 3, !dbg !10231
  %3 = load i8*, i8** %buf, align 8, !dbg !10231
  %arrayidx1 = getelementptr i8, i8* %3, i64 0, !dbg !10230
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !10230
  %conv = zext i8 %4 to i16, !dbg !10230
  store i16 %conv, i16* %serpar_num, align 2, !dbg !10229
  call void @llvm.dbg.declare(metadata i16* %read_word, metadata !10232, metadata !DIExpression()), !dbg !10233
  br label %while.cond, !dbg !10234

while.cond:                                       ; preds = %if.end14, %entry
  %5 = load i8, i8* %n_overflow, align 1, !dbg !10235
  %conv2 = zext i8 %5 to i32, !dbg !10235
  %cmp = icmp eq i32 %conv2, 1, !dbg !10236
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10237

land.rhs:                                         ; preds = %while.cond
  %6 = load i16, i16* %i, align 2, !dbg !10238
  %conv4 = zext i16 %6 to i32, !dbg !10238
  %tobool = icmp ne i32 %conv4, 0, !dbg !10237
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %7 = phi i1 [ false, %while.cond ], [ %tobool, %land.rhs ], !dbg !10239
  br i1 %7, label %while.body, label %while.end, !dbg !10234

while.body:                                       ; preds = %land.end
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10240
  %call5 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %8, i16 zeroext 1984) #8, !dbg !10242
  %conv6 = zext i16 %call5 to i32, !dbg !10242
  %shr = ashr i32 %conv6, 1, !dbg !10243
  %and = and i32 %shr, 1, !dbg !10244
  %conv7 = trunc i32 %and to i8, !dbg !10245
  store i8 %conv7, i8* %n_overflow, align 1, !dbg !10246
  %9 = load i16, i16* %i, align 2, !dbg !10247
  %dec = add i16 %9, -1, !dbg !10247
  store i16 %dec, i16* %i, align 2, !dbg !10247
  %10 = load i16, i16* %i, align 2, !dbg !10248
  %conv8 = zext i16 %10 to i32, !dbg !10248
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !10250
  br i1 %cmp9, label %if.then, label %if.end14, !dbg !10251

if.then:                                          ; preds = %while.body
  br label %do.body, !dbg !10252

do.body:                                          ; preds = %if.then
  %11 = load i32, i32* @debug, align 4, !dbg !10253
  %tobool11 = icmp ne i32 %11, 0, !dbg !10253
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !10256

if.then12:                                        ; preds = %do.body
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.w7090p_tuner_read_serpar, i64 0, i64 0)) #9, !dbg !10253
  br label %if.end, !dbg !10253

if.end:                                           ; preds = %if.then12, %do.body
  br label %do.end, !dbg !10256

do.end:                                           ; preds = %if.end
  br label %if.end14, !dbg !10256

if.end14:                                         ; preds = %do.end, %while.body
  br label %while.cond, !dbg !10234, !llvm.loop !10257

while.end:                                        ; preds = %land.end
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10259
  %13 = load i16, i16* %serpar_num, align 2, !dbg !10260
  %conv15 = zext i16 %13 to i32, !dbg !10260
  %and16 = and i32 %conv15, 63, !dbg !10261
  %or = or i32 0, %and16, !dbg !10262
  %conv17 = trunc i32 %or to i16, !dbg !10263
  %call18 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 1985, i16 zeroext %conv17) #8, !dbg !10264
  store i16 1000, i16* %i, align 2, !dbg !10265
  br label %while.cond19, !dbg !10266

while.cond19:                                     ; preds = %if.end43, %while.end
  %14 = load i8, i8* %n_empty, align 1, !dbg !10267
  %conv20 = zext i8 %14 to i32, !dbg !10267
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !10268
  br i1 %cmp21, label %land.rhs23, label %land.end26, !dbg !10269

land.rhs23:                                       ; preds = %while.cond19
  %15 = load i16, i16* %i, align 2, !dbg !10270
  %conv24 = zext i16 %15 to i32, !dbg !10270
  %tobool25 = icmp ne i32 %conv24, 0, !dbg !10269
  br label %land.end26

land.end26:                                       ; preds = %land.rhs23, %while.cond19
  %16 = phi i1 [ false, %while.cond19 ], [ %tobool25, %land.rhs23 ], !dbg !10239
  br i1 %16, label %while.body27, label %while.end44, !dbg !10266

while.body27:                                     ; preds = %land.end26
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10271
  %call28 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %17, i16 zeroext 1984) #8, !dbg !10273
  %conv29 = zext i16 %call28 to i32, !dbg !10273
  %and30 = and i32 %conv29, 1, !dbg !10274
  %conv31 = trunc i32 %and30 to i8, !dbg !10273
  store i8 %conv31, i8* %n_empty, align 1, !dbg !10275
  %18 = load i16, i16* %i, align 2, !dbg !10276
  %dec32 = add i16 %18, -1, !dbg !10276
  store i16 %dec32, i16* %i, align 2, !dbg !10276
  %19 = load i16, i16* %i, align 2, !dbg !10277
  %conv33 = zext i16 %19 to i32, !dbg !10277
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !10279
  br i1 %cmp34, label %if.then36, label %if.end43, !dbg !10280

if.then36:                                        ; preds = %while.body27
  br label %do.body37, !dbg !10281

do.body37:                                        ; preds = %if.then36
  %20 = load i32, i32* @debug, align 4, !dbg !10282
  %tobool38 = icmp ne i32 %20, 0, !dbg !10282
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !10285

if.then39:                                        ; preds = %do.body37
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.w7090p_tuner_read_serpar, i64 0, i64 0)) #9, !dbg !10282
  br label %if.end41, !dbg !10282

if.end41:                                         ; preds = %if.then39, %do.body37
  br label %do.end42, !dbg !10285

do.end42:                                         ; preds = %if.end41
  br label %if.end43, !dbg !10285

if.end43:                                         ; preds = %do.end42, %while.body27
  br label %while.cond19, !dbg !10266, !llvm.loop !10286

while.end44:                                      ; preds = %land.end26
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state, align 8, !dbg !10288
  %call45 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %21, i16 zeroext 1987) #8, !dbg !10289
  store i16 %call45, i16* %read_word, align 2, !dbg !10290
  %22 = load i16, i16* %read_word, align 2, !dbg !10291
  %conv46 = zext i16 %22 to i32, !dbg !10291
  %shr47 = ashr i32 %conv46, 8, !dbg !10292
  %and48 = and i32 %shr47, 255, !dbg !10293
  %conv49 = trunc i32 %and48 to i8, !dbg !10294
  %23 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10295
  %arrayidx50 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %23, i64 1, !dbg !10295
  %buf51 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx50, i32 0, i32 3, !dbg !10296
  %24 = load i8*, i8** %buf51, align 8, !dbg !10296
  %arrayidx52 = getelementptr i8, i8* %24, i64 0, !dbg !10295
  store i8 %conv49, i8* %arrayidx52, align 1, !dbg !10297
  %25 = load i16, i16* %read_word, align 2, !dbg !10298
  %conv53 = zext i16 %25 to i32, !dbg !10299
  %and54 = and i32 %conv53, 255, !dbg !10300
  %conv55 = trunc i32 %and54 to i8, !dbg !10299
  %26 = load %struct.i2c_msg*, %struct.i2c_msg** %msg.addr, align 8, !dbg !10301
  %arrayidx56 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %26, i64 1, !dbg !10301
  %buf57 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx56, i32 0, i32 3, !dbg !10302
  %27 = load i8*, i8** %buf57, align 8, !dbg !10302
  %arrayidx58 = getelementptr i8, i8* %27, i64 1, !dbg !10301
  store i8 %conv55, i8* %arrayidx58, align 1, !dbg !10303
  %28 = load i32, i32* %num.addr, align 4, !dbg !10304
  ret i32 %28, !dbg !10305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !10306 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10309, metadata !DIExpression()), !dbg !10310
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10311, metadata !DIExpression()), !dbg !10312
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10313
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10314
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !10315
  store i8* %0, i8** %driver_data, align 8, !dbg !10316
  ret void, !dbg !10317
}

; Function Attrs: noredzone
declare dso_local void @dibx000_reset_i2c_master(%struct.dibx000_i2c_master*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_reset_pll(%struct.dib7000p_state* %state) #0 !dbg !10318 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %bw = alloca %struct.dibx000_bandwidth_config*, align 8
  %clk_cfg0 = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !10319, metadata !DIExpression()), !dbg !10320
  call void @llvm.dbg.declare(metadata %struct.dibx000_bandwidth_config** %bw, metadata !10321, metadata !DIExpression()), !dbg !10322
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10323
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %0, i32 0, i32 1, !dbg !10324
  %bw1 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 6, !dbg !10325
  %1 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw1, align 8, !dbg !10325
  %arrayidx = getelementptr %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %1, i64 0, !dbg !10323
  store %struct.dibx000_bandwidth_config* %arrayidx, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10322
  call void @llvm.dbg.declare(metadata i16* %clk_cfg0, metadata !10326, metadata !DIExpression()), !dbg !10327
  %2 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10328
  %version = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %2, i32 0, i32 16, !dbg !10330
  %3 = load i16, i16* %version, align 8, !dbg !10330
  %conv = zext i16 %3 to i32, !dbg !10328
  %cmp = icmp eq i32 %conv, 28816, !dbg !10331
  br i1 %cmp, label %if.then, label %if.else, !dbg !10332

if.then:                                          ; preds = %entry
  %4 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10333
  %5 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10335
  %pll_reset = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %5, i32 0, i32 5, !dbg !10336
  %6 = load i8, i8* %pll_reset, align 1, !dbg !10336
  %tobool = icmp ne i8 %6, 0, !dbg !10337
  %lnot = xor i1 %tobool, true, !dbg !10337
  %lnot.ext = zext i1 %lnot to i32, !dbg !10337
  %shl = shl i32 %lnot.ext, 13, !dbg !10338
  %7 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10339
  %pll_range = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %7, i32 0, i32 4, !dbg !10340
  %8 = load i8, i8* %pll_range, align 2, !dbg !10340
  %conv3 = zext i8 %8 to i32, !dbg !10339
  %shl4 = shl i32 %conv3, 12, !dbg !10341
  %or = or i32 %shl, %shl4, !dbg !10342
  %9 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10343
  %pll_ratio = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %9, i32 0, i32 3, !dbg !10344
  %10 = load i8, i8* %pll_ratio, align 1, !dbg !10344
  %conv5 = zext i8 %10 to i32, !dbg !10343
  %shl6 = shl i32 %conv5, 6, !dbg !10345
  %or7 = or i32 %or, %shl6, !dbg !10346
  %11 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10347
  %pll_prediv = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %11, i32 0, i32 2, !dbg !10348
  %12 = load i8, i8* %pll_prediv, align 4, !dbg !10348
  %conv8 = zext i8 %12 to i32, !dbg !10349
  %or9 = or i32 %or7, %conv8, !dbg !10350
  %conv10 = trunc i32 %or9 to i16, !dbg !10351
  %call = call i32 @dib7000p_write_word(%struct.dib7000p_state* %4, i16 zeroext 1856, i16 zeroext %conv10) #8, !dbg !10352
  br label %while.cond, !dbg !10353

while.cond:                                       ; preds = %while.body, %if.then
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10354
  %call11 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %13, i16 zeroext 1856) #8, !dbg !10355
  %conv12 = zext i16 %call11 to i32, !dbg !10355
  %shr = ashr i32 %conv12, 15, !dbg !10356
  %and = and i32 %shr, 1, !dbg !10357
  %cmp13 = icmp ne i32 %and, 1, !dbg !10358
  br i1 %cmp13, label %while.body, label %while.end, !dbg !10353

while.body:                                       ; preds = %while.cond
  br label %while.cond, !dbg !10353, !llvm.loop !10359

while.end:                                        ; preds = %while.cond
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10361
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10362
  %call15 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %15, i16 zeroext 1857) #8, !dbg !10363
  %conv16 = zext i16 %call15 to i32, !dbg !10363
  %16 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10364
  %pll_bypass = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %16, i32 0, i32 6, !dbg !10365
  %17 = load i8, i8* %pll_bypass, align 4, !dbg !10365
  %tobool17 = icmp ne i8 %17, 0, !dbg !10366
  %lnot18 = xor i1 %tobool17, true, !dbg !10366
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10366
  %shl20 = shl i32 %lnot.ext19, 15, !dbg !10367
  %or21 = or i32 %conv16, %shl20, !dbg !10368
  %conv22 = trunc i32 %or21 to i16, !dbg !10363
  %call23 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 1857, i16 zeroext %conv22) #8, !dbg !10369
  br label %if.end, !dbg !10370

if.else:                                          ; preds = %entry
  %18 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10371
  %pll_ratio24 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %18, i32 0, i32 3, !dbg !10373
  %19 = load i8, i8* %pll_ratio24, align 1, !dbg !10373
  %conv25 = zext i8 %19 to i32, !dbg !10371
  %and26 = and i32 %conv25, 63, !dbg !10374
  %shl27 = shl i32 %and26, 9, !dbg !10375
  %or28 = or i32 32768, %shl27, !dbg !10376
  %20 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10377
  %modulo = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %20, i32 0, i32 11, !dbg !10378
  %21 = load i8, i8* %modulo, align 1, !dbg !10378
  %conv29 = zext i8 %21 to i32, !dbg !10377
  %shl30 = shl i32 %conv29, 7, !dbg !10379
  %or31 = or i32 %or28, %shl30, !dbg !10380
  %22 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10381
  %ADClkSrc = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %22, i32 0, i32 10, !dbg !10382
  %23 = load i8, i8* %ADClkSrc, align 4, !dbg !10382
  %conv32 = zext i8 %23 to i32, !dbg !10381
  %shl33 = shl i32 %conv32, 6, !dbg !10383
  %or34 = or i32 %or31, %shl33, !dbg !10384
  %24 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10385
  %IO_CLK_en_core = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %24, i32 0, i32 9, !dbg !10386
  %25 = load i8, i8* %IO_CLK_en_core, align 1, !dbg !10386
  %conv35 = zext i8 %25 to i32, !dbg !10385
  %shl36 = shl i32 %conv35, 5, !dbg !10387
  %or37 = or i32 %or34, %shl36, !dbg !10388
  %26 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10389
  %bypclk_div = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %26, i32 0, i32 8, !dbg !10390
  %27 = load i8, i8* %bypclk_div, align 2, !dbg !10390
  %conv38 = zext i8 %27 to i32, !dbg !10389
  %shl39 = shl i32 %conv38, 2, !dbg !10391
  %or40 = or i32 %or37, %shl39, !dbg !10392
  %28 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10393
  %enable_refdiv = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %28, i32 0, i32 7, !dbg !10394
  %29 = load i8, i8* %enable_refdiv, align 1, !dbg !10394
  %conv41 = zext i8 %29 to i32, !dbg !10393
  %shl42 = shl i32 %conv41, 1, !dbg !10395
  %or43 = or i32 %or40, %shl42, !dbg !10396
  %conv44 = trunc i32 %or43 to i16, !dbg !10397
  store i16 %conv44, i16* %clk_cfg0, align 2, !dbg !10398
  %30 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10399
  %31 = load i16, i16* %clk_cfg0, align 2, !dbg !10400
  %call45 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %30, i16 zeroext 900, i16 zeroext %31) #8, !dbg !10401
  %32 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10402
  %33 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10403
  %pll_prediv46 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %33, i32 0, i32 2, !dbg !10404
  %34 = load i8, i8* %pll_prediv46, align 4, !dbg !10404
  %conv47 = zext i8 %34 to i32, !dbg !10403
  %shl48 = shl i32 %conv47, 5, !dbg !10405
  %35 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10406
  %pll_ratio49 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %35, i32 0, i32 3, !dbg !10407
  %36 = load i8, i8* %pll_ratio49, align 1, !dbg !10407
  %conv50 = zext i8 %36 to i32, !dbg !10406
  %shr51 = ashr i32 %conv50, 6, !dbg !10408
  %and52 = and i32 %shr51, 3, !dbg !10409
  %shl53 = shl i32 %and52, 3, !dbg !10410
  %or54 = or i32 %shl48, %shl53, !dbg !10411
  %37 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10412
  %pll_range55 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %37, i32 0, i32 4, !dbg !10413
  %38 = load i8, i8* %pll_range55, align 2, !dbg !10413
  %conv56 = zext i8 %38 to i32, !dbg !10412
  %shl57 = shl i32 %conv56, 1, !dbg !10414
  %or58 = or i32 %or54, %shl57, !dbg !10415
  %39 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10416
  %pll_reset59 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %39, i32 0, i32 5, !dbg !10417
  %40 = load i8, i8* %pll_reset59, align 1, !dbg !10417
  %conv60 = zext i8 %40 to i32, !dbg !10416
  %or61 = or i32 %or58, %conv60, !dbg !10418
  %conv62 = trunc i32 %or61 to i16, !dbg !10419
  %call63 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %32, i16 zeroext 903, i16 zeroext %conv62) #8, !dbg !10420
  %41 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10421
  %pll_bypass64 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %41, i32 0, i32 6, !dbg !10422
  %42 = load i8, i8* %pll_bypass64, align 4, !dbg !10422
  %conv65 = zext i8 %42 to i32, !dbg !10421
  %shl66 = shl i32 %conv65, 15, !dbg !10423
  %43 = load i16, i16* %clk_cfg0, align 2, !dbg !10424
  %conv67 = zext i16 %43 to i32, !dbg !10424
  %and68 = and i32 %conv67, 32767, !dbg !10425
  %or69 = or i32 %shl66, %and68, !dbg !10426
  %conv70 = trunc i32 %or69 to i16, !dbg !10427
  store i16 %conv70, i16* %clk_cfg0, align 2, !dbg !10428
  %44 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10429
  %45 = load i16, i16* %clk_cfg0, align 2, !dbg !10430
  %call71 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %44, i16 zeroext 900, i16 zeroext %45) #8, !dbg !10431
  br label %if.end

if.end:                                           ; preds = %if.else, %while.end
  %46 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10432
  %47 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10433
  %internal = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %47, i32 0, i32 0, !dbg !10434
  %48 = load i32, i32* %internal, align 4, !dbg !10434
  %mul = mul i32 %48, 1000, !dbg !10435
  %shr72 = lshr i32 %mul, 16, !dbg !10436
  %and73 = and i32 %shr72, 65535, !dbg !10437
  %conv74 = trunc i32 %and73 to i16, !dbg !10438
  %call75 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %46, i16 zeroext 18, i16 zeroext %conv74) #8, !dbg !10439
  %49 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10440
  %50 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10441
  %internal76 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %50, i32 0, i32 0, !dbg !10442
  %51 = load i32, i32* %internal76, align 4, !dbg !10442
  %mul77 = mul i32 %51, 1000, !dbg !10443
  %and78 = and i32 %mul77, 65535, !dbg !10444
  %conv79 = trunc i32 %and78 to i16, !dbg !10445
  %call80 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %49, i16 zeroext 19, i16 zeroext %conv79) #8, !dbg !10446
  %52 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10447
  %53 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10448
  %ifreq = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %53, i32 0, i32 13, !dbg !10449
  %54 = load i32, i32* %ifreq, align 4, !dbg !10449
  %shr81 = lshr i32 %54, 16, !dbg !10450
  %and82 = and i32 %shr81, 65535, !dbg !10451
  %conv83 = trunc i32 %and82 to i16, !dbg !10452
  %call84 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %52, i16 zeroext 21, i16 zeroext %conv83) #8, !dbg !10453
  %55 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10454
  %56 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10455
  %ifreq85 = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %56, i32 0, i32 13, !dbg !10456
  %57 = load i32, i32* %ifreq85, align 4, !dbg !10456
  %and86 = and i32 %57, 65535, !dbg !10457
  %conv87 = trunc i32 %and86 to i16, !dbg !10458
  %call88 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %55, i16 zeroext 22, i16 zeroext %conv87) #8, !dbg !10459
  %58 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10460
  %59 = load %struct.dibx000_bandwidth_config*, %struct.dibx000_bandwidth_config** %bw, align 8, !dbg !10461
  %sad_cfg = getelementptr inbounds %struct.dibx000_bandwidth_config, %struct.dibx000_bandwidth_config* %59, i32 0, i32 12, !dbg !10462
  %60 = load i16, i16* %sad_cfg, align 2, !dbg !10462
  %call89 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %58, i16 zeroext 72, i16 zeroext %60) #8, !dbg !10463
  ret void, !dbg !10464
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_reset_gpio(%struct.dib7000p_state* %st) #0 !dbg !10465 {
entry:
  %st.addr = alloca %struct.dib7000p_state*, align 8
  store %struct.dib7000p_state* %st, %struct.dib7000p_state** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st.addr, metadata !10466, metadata !DIExpression()), !dbg !10467
  br label %do.body, !dbg !10468

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10469
  %tobool = icmp ne i32 %0, 0, !dbg !10469
  br i1 %tobool, label %if.then, label %if.end, !dbg !10472

if.then:                                          ; preds = %do.body
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10469
  %gpio_dir = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %1, i32 0, i32 13, !dbg !10469
  %2 = load i16, i16* %gpio_dir, align 2, !dbg !10469
  %conv = zext i16 %2 to i32, !dbg !10469
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10469
  %gpio_val = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 14, !dbg !10469
  %4 = load i16, i16* %gpio_val, align 4, !dbg !10469
  %conv1 = zext i16 %4 to i32, !dbg !10469
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10469
  %cfg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %5, i32 0, i32 1, !dbg !10469
  %gpio_pwm_pos = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg, i32 0, i32 9, !dbg !10469
  %6 = load i16, i16* %gpio_pwm_pos, align 4, !dbg !10469
  %conv2 = zext i16 %6 to i32, !dbg !10469
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.dib7000p_reset_gpio, i64 0, i64 0), i32 %conv, i32 %conv1, i32 %conv2) #9, !dbg !10469
  br label %if.end, !dbg !10469

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10472

do.end:                                           ; preds = %if.end
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10473
  %8 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10474
  %gpio_dir3 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %8, i32 0, i32 13, !dbg !10475
  %9 = load i16, i16* %gpio_dir3, align 2, !dbg !10475
  %call4 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %7, i16 zeroext 1029, i16 zeroext %9) #8, !dbg !10476
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10477
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10478
  %gpio_val5 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %11, i32 0, i32 14, !dbg !10479
  %12 = load i16, i16* %gpio_val5, align 4, !dbg !10479
  %call6 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %10, i16 zeroext 1030, i16 zeroext %12) #8, !dbg !10480
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10481
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10482
  %cfg7 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %14, i32 0, i32 1, !dbg !10483
  %gpio_pwm_pos8 = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg7, i32 0, i32 9, !dbg !10484
  %15 = load i16, i16* %gpio_pwm_pos8, align 4, !dbg !10484
  %call9 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %13, i16 zeroext 1032, i16 zeroext %15) #8, !dbg !10485
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10486
  %17 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10487
  %cfg10 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %17, i32 0, i32 1, !dbg !10488
  %pwm_freq_div = getelementptr inbounds %struct.dib7000p_config, %struct.dib7000p_config* %cfg10, i32 0, i32 10, !dbg !10489
  %18 = load i16, i16* %pwm_freq_div, align 2, !dbg !10489
  %call11 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 1037, i16 zeroext %18) #8, !dbg !10490
  ret i32 0, !dbg !10491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7000p_write_tab(%struct.dib7000p_state* %state, i16* %buf) #0 !dbg !10492 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %buf.addr = alloca i16*, align 8
  %l = alloca i16, align 2
  %r = alloca i16, align 2
  %n = alloca i16*, align 8
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !10495, metadata !DIExpression()), !dbg !10496
  store i16* %buf, i16** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %buf.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  call void @llvm.dbg.declare(metadata i16* %l, metadata !10499, metadata !DIExpression()), !dbg !10500
  store i16 0, i16* %l, align 2, !dbg !10500
  call void @llvm.dbg.declare(metadata i16* %r, metadata !10501, metadata !DIExpression()), !dbg !10502
  call void @llvm.dbg.declare(metadata i16** %n, metadata !10503, metadata !DIExpression()), !dbg !10504
  %0 = load i16*, i16** %buf.addr, align 8, !dbg !10505
  store i16* %0, i16** %n, align 8, !dbg !10506
  %1 = load i16*, i16** %n, align 8, !dbg !10507
  %incdec.ptr = getelementptr i16, i16* %1, i32 1, !dbg !10507
  store i16* %incdec.ptr, i16** %n, align 8, !dbg !10507
  %2 = load i16, i16* %1, align 2, !dbg !10508
  store i16 %2, i16* %l, align 2, !dbg !10509
  br label %while.cond, !dbg !10510

while.cond:                                       ; preds = %do.end, %entry
  %3 = load i16, i16* %l, align 2, !dbg !10511
  %tobool = icmp ne i16 %3, 0, !dbg !10510
  br i1 %tobool, label %while.body, label %while.end, !dbg !10510

while.body:                                       ; preds = %while.cond
  %4 = load i16*, i16** %n, align 8, !dbg !10512
  %incdec.ptr1 = getelementptr i16, i16* %4, i32 1, !dbg !10512
  store i16* %incdec.ptr1, i16** %n, align 8, !dbg !10512
  %5 = load i16, i16* %4, align 2, !dbg !10514
  store i16 %5, i16* %r, align 2, !dbg !10515
  br label %do.body, !dbg !10516

do.body:                                          ; preds = %do.cond, %while.body
  %6 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10517
  %7 = load i16, i16* %r, align 2, !dbg !10519
  %8 = load i16*, i16** %n, align 8, !dbg !10520
  %incdec.ptr2 = getelementptr i16, i16* %8, i32 1, !dbg !10520
  store i16* %incdec.ptr2, i16** %n, align 8, !dbg !10520
  %9 = load i16, i16* %8, align 2, !dbg !10521
  %call = call i32 @dib7000p_write_word(%struct.dib7000p_state* %6, i16 zeroext %7, i16 zeroext %9) #8, !dbg !10522
  %10 = load i16, i16* %r, align 2, !dbg !10523
  %inc = add i16 %10, 1, !dbg !10523
  store i16 %inc, i16* %r, align 2, !dbg !10523
  br label %do.cond, !dbg !10524

do.cond:                                          ; preds = %do.body
  %11 = load i16, i16* %l, align 2, !dbg !10525
  %dec = add i16 %11, -1, !dbg !10525
  store i16 %dec, i16* %l, align 2, !dbg !10525
  %tobool3 = icmp ne i16 %dec, 0, !dbg !10524
  br i1 %tobool3, label %do.body, label %do.end, !dbg !10524, !llvm.loop !10526

do.end:                                           ; preds = %do.cond
  %12 = load i16*, i16** %n, align 8, !dbg !10528
  %incdec.ptr4 = getelementptr i16, i16* %12, i32 1, !dbg !10528
  store i16* %incdec.ptr4, i16** %n, align 8, !dbg !10528
  %13 = load i16, i16* %12, align 2, !dbg !10529
  store i16 %13, i16* %l, align 2, !dbg !10530
  br label %while.cond, !dbg !10510, !llvm.loop !10531

while.end:                                        ; preds = %while.cond
  ret void, !dbg !10533
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_host_bus_drive(%struct.dib7000p_state* %state, i8 zeroext %drive) #0 !dbg !10534 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %drive.addr = alloca i8, align 1
  %reg = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !10535, metadata !DIExpression()), !dbg !10536
  store i8 %drive, i8* %drive.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drive.addr, metadata !10537, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.declare(metadata i16* %reg, metadata !10539, metadata !DIExpression()), !dbg !10540
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10541
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 1798) #8, !dbg !10542
  %conv = zext i16 %call to i32, !dbg !10542
  %and = and i32 %conv, -29128, !dbg !10543
  %conv1 = trunc i32 %and to i16, !dbg !10542
  store i16 %conv1, i16* %reg, align 2, !dbg !10544
  %1 = load i8, i8* %drive.addr, align 1, !dbg !10545
  %conv2 = zext i8 %1 to i32, !dbg !10545
  %shl = shl i32 %conv2, 12, !dbg !10546
  %2 = load i8, i8* %drive.addr, align 1, !dbg !10547
  %conv3 = zext i8 %2 to i32, !dbg !10547
  %shl4 = shl i32 %conv3, 6, !dbg !10548
  %or = or i32 %shl, %shl4, !dbg !10549
  %3 = load i8, i8* %drive.addr, align 1, !dbg !10550
  %conv5 = zext i8 %3 to i32, !dbg !10550
  %or6 = or i32 %or, %conv5, !dbg !10551
  %4 = load i16, i16* %reg, align 2, !dbg !10552
  %conv7 = zext i16 %4 to i32, !dbg !10552
  %or8 = or i32 %conv7, %or6, !dbg !10552
  %conv9 = trunc i32 %or8 to i16, !dbg !10552
  store i16 %conv9, i16* %reg, align 2, !dbg !10552
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10553
  %6 = load i16, i16* %reg, align 2, !dbg !10554
  %call10 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %5, i16 zeroext 1798, i16 zeroext %6) #8, !dbg !10555
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10556
  %call11 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %7, i16 zeroext 1799) #8, !dbg !10557
  %conv12 = zext i16 %call11 to i32, !dbg !10557
  %and13 = and i32 %conv12, -1821, !dbg !10558
  %conv14 = trunc i32 %and13 to i16, !dbg !10557
  store i16 %conv14, i16* %reg, align 2, !dbg !10559
  %8 = load i8, i8* %drive.addr, align 1, !dbg !10560
  %conv15 = zext i8 %8 to i32, !dbg !10560
  %shl16 = shl i32 %conv15, 8, !dbg !10561
  %9 = load i8, i8* %drive.addr, align 1, !dbg !10562
  %conv17 = zext i8 %9 to i32, !dbg !10562
  %shl18 = shl i32 %conv17, 2, !dbg !10563
  %or19 = or i32 %shl16, %shl18, !dbg !10564
  %10 = load i16, i16* %reg, align 2, !dbg !10565
  %conv20 = zext i16 %10 to i32, !dbg !10565
  %or21 = or i32 %conv20, %or19, !dbg !10565
  %conv22 = trunc i32 %or21 to i16, !dbg !10565
  store i16 %conv22, i16* %reg, align 2, !dbg !10565
  %11 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10566
  %12 = load i16, i16* %reg, align 2, !dbg !10567
  %call23 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %11, i16 zeroext 1799, i16 zeroext %12) #8, !dbg !10568
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10569
  %call24 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %13, i16 zeroext 1800) #8, !dbg !10570
  %conv25 = zext i16 %call24 to i32, !dbg !10570
  %and26 = and i32 %conv25, -29128, !dbg !10571
  %conv27 = trunc i32 %and26 to i16, !dbg !10570
  store i16 %conv27, i16* %reg, align 2, !dbg !10572
  %14 = load i8, i8* %drive.addr, align 1, !dbg !10573
  %conv28 = zext i8 %14 to i32, !dbg !10573
  %shl29 = shl i32 %conv28, 12, !dbg !10574
  %15 = load i8, i8* %drive.addr, align 1, !dbg !10575
  %conv30 = zext i8 %15 to i32, !dbg !10575
  %shl31 = shl i32 %conv30, 6, !dbg !10576
  %or32 = or i32 %shl29, %shl31, !dbg !10577
  %16 = load i8, i8* %drive.addr, align 1, !dbg !10578
  %conv33 = zext i8 %16 to i32, !dbg !10578
  %or34 = or i32 %or32, %conv33, !dbg !10579
  %17 = load i16, i16* %reg, align 2, !dbg !10580
  %conv35 = zext i16 %17 to i32, !dbg !10580
  %or36 = or i32 %conv35, %or34, !dbg !10580
  %conv37 = trunc i32 %or36 to i16, !dbg !10580
  store i16 %conv37, i16* %reg, align 2, !dbg !10580
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10581
  %19 = load i16, i16* %reg, align 2, !dbg !10582
  %call38 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %18, i16 zeroext 1800, i16 zeroext %19) #8, !dbg !10583
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10584
  %call39 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %20, i16 zeroext 1801) #8, !dbg !10585
  %conv40 = zext i16 %call39 to i32, !dbg !10585
  %and41 = and i32 %conv40, -1821, !dbg !10586
  %conv42 = trunc i32 %and41 to i16, !dbg !10585
  store i16 %conv42, i16* %reg, align 2, !dbg !10587
  %21 = load i8, i8* %drive.addr, align 1, !dbg !10588
  %conv43 = zext i8 %21 to i32, !dbg !10588
  %shl44 = shl i32 %conv43, 8, !dbg !10589
  %22 = load i8, i8* %drive.addr, align 1, !dbg !10590
  %conv45 = zext i8 %22 to i32, !dbg !10590
  %shl46 = shl i32 %conv45, 2, !dbg !10591
  %or47 = or i32 %shl44, %shl46, !dbg !10592
  %23 = load i16, i16* %reg, align 2, !dbg !10593
  %conv48 = zext i16 %23 to i32, !dbg !10593
  %or49 = or i32 %conv48, %or47, !dbg !10593
  %conv50 = trunc i32 %or49 to i16, !dbg !10593
  store i16 %conv50, i16* %reg, align 2, !dbg !10593
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10594
  %25 = load i16, i16* %reg, align 2, !dbg !10595
  %call51 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %24, i16 zeroext 1801, i16 zeroext %25) #8, !dbg !10596
  %26 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10597
  %call52 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %26, i16 zeroext 1802) #8, !dbg !10598
  %conv53 = zext i16 %call52 to i32, !dbg !10598
  %and54 = and i32 %conv53, -29128, !dbg !10599
  %conv55 = trunc i32 %and54 to i16, !dbg !10598
  store i16 %conv55, i16* %reg, align 2, !dbg !10600
  %27 = load i8, i8* %drive.addr, align 1, !dbg !10601
  %conv56 = zext i8 %27 to i32, !dbg !10601
  %shl57 = shl i32 %conv56, 12, !dbg !10602
  %28 = load i8, i8* %drive.addr, align 1, !dbg !10603
  %conv58 = zext i8 %28 to i32, !dbg !10603
  %shl59 = shl i32 %conv58, 6, !dbg !10604
  %or60 = or i32 %shl57, %shl59, !dbg !10605
  %29 = load i8, i8* %drive.addr, align 1, !dbg !10606
  %conv61 = zext i8 %29 to i32, !dbg !10606
  %or62 = or i32 %or60, %conv61, !dbg !10607
  %30 = load i16, i16* %reg, align 2, !dbg !10608
  %conv63 = zext i16 %30 to i32, !dbg !10608
  %or64 = or i32 %conv63, %or62, !dbg !10608
  %conv65 = trunc i32 %or64 to i16, !dbg !10608
  store i16 %conv65, i16* %reg, align 2, !dbg !10608
  %31 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10609
  %32 = load i16, i16* %reg, align 2, !dbg !10610
  %call66 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %31, i16 zeroext 1802, i16 zeroext %32) #8, !dbg !10611
  ret i32 0, !dbg !10612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dib7090_configMpegMux(%struct.dib7000p_state* %state, i16 zeroext %pulseWidth, i16 zeroext %enSerialMode, i16 zeroext %enSerialClkDiv2) #0 !dbg !10613 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %pulseWidth.addr = alloca i16, align 2
  %enSerialMode.addr = alloca i16, align 2
  %enSerialClkDiv2.addr = alloca i16, align 2
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !10616, metadata !DIExpression()), !dbg !10617
  store i16 %pulseWidth, i16* %pulseWidth.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pulseWidth.addr, metadata !10618, metadata !DIExpression()), !dbg !10619
  store i16 %enSerialMode, i16* %enSerialMode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %enSerialMode.addr, metadata !10620, metadata !DIExpression()), !dbg !10621
  store i16 %enSerialClkDiv2, i16* %enSerialClkDiv2.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %enSerialClkDiv2.addr, metadata !10622, metadata !DIExpression()), !dbg !10623
  br label %do.body, !dbg !10624

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10625
  %tobool = icmp ne i32 %0, 0, !dbg !10625
  br i1 %tobool, label %if.then, label %if.end, !dbg !10628

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.dib7090_configMpegMux, i64 0, i64 0)) #9, !dbg !10625
  br label %if.end, !dbg !10625

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10628

do.end:                                           ; preds = %if.end
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10629
  call void @dib7090_enMpegMux(%struct.dib7000p_state* %1, i32 0) #8, !dbg !10630
  %2 = load i16, i16* %enSerialMode.addr, align 2, !dbg !10631
  %conv = zext i16 %2 to i32, !dbg !10631
  %cmp = icmp eq i32 %conv, 1, !dbg !10633
  br i1 %cmp, label %land.lhs.true, label %if.end6, !dbg !10634

land.lhs.true:                                    ; preds = %do.end
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10635
  %input_mode_mpeg = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 23, !dbg !10636
  %4 = load i8, i8* %input_mode_mpeg, align 8, !dbg !10636
  %conv2 = zext i8 %4 to i32, !dbg !10635
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !10637
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !10638

if.then5:                                         ; preds = %land.lhs.true
  store i16 0, i16* %enSerialClkDiv2.addr, align 2, !dbg !10639
  br label %if.end6, !dbg !10640

if.end6:                                          ; preds = %if.then5, %land.lhs.true, %do.end
  %5 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10641
  %6 = load i16, i16* %pulseWidth.addr, align 2, !dbg !10642
  %conv7 = zext i16 %6 to i32, !dbg !10642
  %and = and i32 %conv7, 31, !dbg !10643
  %shl = shl i32 %and, 2, !dbg !10644
  %7 = load i16, i16* %enSerialMode.addr, align 2, !dbg !10645
  %conv8 = zext i16 %7 to i32, !dbg !10645
  %and9 = and i32 %conv8, 1, !dbg !10646
  %shl10 = shl i32 %and9, 1, !dbg !10647
  %or = or i32 %shl, %shl10, !dbg !10648
  %8 = load i16, i16* %enSerialClkDiv2.addr, align 2, !dbg !10649
  %conv11 = zext i16 %8 to i32, !dbg !10649
  %and12 = and i32 %conv11, 1, !dbg !10650
  %or13 = or i32 %or, %and12, !dbg !10651
  %conv14 = trunc i32 %or13 to i16, !dbg !10652
  %call15 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %5, i16 zeroext 1287, i16 zeroext %conv14) #8, !dbg !10653
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10654
  call void @dib7090_enMpegMux(%struct.dib7000p_state* %9, i32 1) #8, !dbg !10655
  ret void, !dbg !10656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_cfg_DibRx(%struct.dib7000p_state* %state, i32 %P_Kin, i32 %P_Kout, i32 %synchroMode, i32 %insertExtSynchro, i32 %syncWord, i32 %syncSize, i32 %dataOutRate) #0 !dbg !10657 {
entry:
  %state.addr = alloca %struct.dib7000p_state*, align 8
  %P_Kin.addr = alloca i32, align 4
  %P_Kout.addr = alloca i32, align 4
  %synchroMode.addr = alloca i32, align 4
  %insertExtSynchro.addr = alloca i32, align 4
  %syncWord.addr = alloca i32, align 4
  %syncSize.addr = alloca i32, align 4
  %dataOutRate.addr = alloca i32, align 4
  %syncFreq = alloca i32, align 4
  store %struct.dib7000p_state* %state, %struct.dib7000p_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %state.addr, metadata !10660, metadata !DIExpression()), !dbg !10661
  store i32 %P_Kin, i32* %P_Kin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P_Kin.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  store i32 %P_Kout, i32* %P_Kout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P_Kout.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  store i32 %synchroMode, i32* %synchroMode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %synchroMode.addr, metadata !10666, metadata !DIExpression()), !dbg !10667
  store i32 %insertExtSynchro, i32* %insertExtSynchro.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %insertExtSynchro.addr, metadata !10668, metadata !DIExpression()), !dbg !10669
  store i32 %syncWord, i32* %syncWord.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %syncWord.addr, metadata !10670, metadata !DIExpression()), !dbg !10671
  store i32 %syncSize, i32* %syncSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %syncSize.addr, metadata !10672, metadata !DIExpression()), !dbg !10673
  store i32 %dataOutRate, i32* %dataOutRate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dataOutRate.addr, metadata !10674, metadata !DIExpression()), !dbg !10675
  call void @llvm.dbg.declare(metadata i32* %syncFreq, metadata !10676, metadata !DIExpression()), !dbg !10677
  br label %do.body, !dbg !10678

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @debug, align 4, !dbg !10679
  %tobool = icmp ne i32 %0, 0, !dbg !10679
  br i1 %tobool, label %if.then, label %if.end, !dbg !10682

if.then:                                          ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.dib7090_cfg_DibRx, i64 0, i64 0)) #9, !dbg !10679
  br label %if.end, !dbg !10679

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !10682

do.end:                                           ; preds = %if.end
  %1 = load i32, i32* %P_Kin.addr, align 4, !dbg !10683
  %cmp = icmp ne i32 %1, 0, !dbg !10685
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !10686

land.lhs.true:                                    ; preds = %do.end
  %2 = load i32, i32* %P_Kout.addr, align 4, !dbg !10687
  %cmp1 = icmp ne i32 %2, 0, !dbg !10688
  br i1 %cmp1, label %if.then2, label %if.end5, !dbg !10689

if.then2:                                         ; preds = %land.lhs.true
  %3 = load i32, i32* %P_Kin.addr, align 4, !dbg !10690
  %4 = load i32, i32* %P_Kout.addr, align 4, !dbg !10692
  %5 = load i32, i32* %insertExtSynchro.addr, align 4, !dbg !10693
  %6 = load i32, i32* %syncSize.addr, align 4, !dbg !10694
  %call3 = call i32 @dib7090_calcSyncFreq(i32 %3, i32 %4, i32 %5, i32 %6) #8, !dbg !10695
  store i32 %call3, i32* %syncFreq, align 4, !dbg !10696
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10697
  %8 = load i32, i32* %syncFreq, align 4, !dbg !10698
  %conv = trunc i32 %8 to i16, !dbg !10698
  %call4 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %7, i16 zeroext 1542, i16 zeroext %conv) #8, !dbg !10699
  br label %if.end5, !dbg !10700

if.end5:                                          ; preds = %if.then2, %land.lhs.true, %do.end
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10701
  %call6 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %9, i16 zeroext 1554, i16 zeroext 1) #8, !dbg !10702
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10703
  %11 = load i32, i32* %P_Kin.addr, align 4, !dbg !10704
  %conv7 = trunc i32 %11 to i16, !dbg !10704
  %call8 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %10, i16 zeroext 1536, i16 zeroext %conv7) #8, !dbg !10705
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10706
  %13 = load i32, i32* %P_Kout.addr, align 4, !dbg !10707
  %conv9 = trunc i32 %13 to i16, !dbg !10707
  %call10 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %12, i16 zeroext 1537, i16 zeroext %conv9) #8, !dbg !10708
  %14 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10709
  %15 = load i32, i32* %synchroMode.addr, align 4, !dbg !10710
  %conv11 = trunc i32 %15 to i16, !dbg !10710
  %call12 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %14, i16 zeroext 1539, i16 zeroext %conv11) #8, !dbg !10711
  %16 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10712
  %17 = load i32, i32* %syncWord.addr, align 4, !dbg !10713
  %shr = lshr i32 %17, 16, !dbg !10714
  %and = and i32 %shr, 65535, !dbg !10715
  %conv13 = trunc i32 %and to i16, !dbg !10716
  %call14 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %16, i16 zeroext 1540, i16 zeroext %conv13) #8, !dbg !10717
  %18 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10718
  %19 = load i32, i32* %syncWord.addr, align 4, !dbg !10719
  %and15 = and i32 %19, 65535, !dbg !10720
  %conv16 = trunc i32 %and15 to i16, !dbg !10719
  %call17 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %18, i16 zeroext 1541, i16 zeroext %conv16) #8, !dbg !10721
  %20 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10722
  %21 = load i32, i32* %syncSize.addr, align 4, !dbg !10723
  %conv18 = trunc i32 %21 to i16, !dbg !10723
  %call19 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %20, i16 zeroext 1543, i16 zeroext %conv18) #8, !dbg !10724
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10725
  %23 = load i32, i32* %dataOutRate.addr, align 4, !dbg !10726
  %conv20 = trunc i32 %23 to i16, !dbg !10726
  %call21 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %22, i16 zeroext 1544, i16 zeroext %conv20) #8, !dbg !10727
  %24 = load %struct.dib7000p_state*, %struct.dib7000p_state** %state.addr, align 8, !dbg !10728
  %call22 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %24, i16 zeroext 1554, i16 zeroext 0) #8, !dbg !10729
  ret i32 0, !dbg !10730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7090_calcSyncFreq(i32 %P_Kin, i32 %P_Kout, i32 %insertExtSynchro, i32 %syncSize) #0 !dbg !10731 {
entry:
  %P_Kin.addr = alloca i32, align 4
  %P_Kout.addr = alloca i32, align 4
  %insertExtSynchro.addr = alloca i32, align 4
  %syncSize.addr = alloca i32, align 4
  %quantif = alloca i32, align 4
  %nom = alloca i32, align 4
  %denom = alloca i32, align 4
  %syncFreq = alloca i32, align 4
  store i32 %P_Kin, i32* %P_Kin.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P_Kin.addr, metadata !10734, metadata !DIExpression()), !dbg !10735
  store i32 %P_Kout, i32* %P_Kout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %P_Kout.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  store i32 %insertExtSynchro, i32* %insertExtSynchro.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %insertExtSynchro.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  store i32 %syncSize, i32* %syncSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %syncSize.addr, metadata !10740, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.declare(metadata i32* %quantif, metadata !10742, metadata !DIExpression()), !dbg !10743
  store i32 3, i32* %quantif, align 4, !dbg !10743
  call void @llvm.dbg.declare(metadata i32* %nom, metadata !10744, metadata !DIExpression()), !dbg !10745
  %0 = load i32, i32* %insertExtSynchro.addr, align 4, !dbg !10746
  %1 = load i32, i32* %P_Kin.addr, align 4, !dbg !10747
  %mul = mul i32 %0, %1, !dbg !10748
  %2 = load i32, i32* %syncSize.addr, align 4, !dbg !10749
  %add = add i32 %mul, %2, !dbg !10750
  store i32 %add, i32* %nom, align 4, !dbg !10745
  call void @llvm.dbg.declare(metadata i32* %denom, metadata !10751, metadata !DIExpression()), !dbg !10752
  %3 = load i32, i32* %P_Kout.addr, align 4, !dbg !10753
  store i32 %3, i32* %denom, align 4, !dbg !10752
  call void @llvm.dbg.declare(metadata i32* %syncFreq, metadata !10754, metadata !DIExpression()), !dbg !10755
  %4 = load i32, i32* %nom, align 4, !dbg !10756
  %5 = load i32, i32* %quantif, align 4, !dbg !10757
  %shl = shl i32 %4, %5, !dbg !10758
  %6 = load i32, i32* %denom, align 4, !dbg !10759
  %div = udiv i32 %shl, %6, !dbg !10760
  store i32 %div, i32* %syncFreq, align 4, !dbg !10755
  %7 = load i32, i32* %syncFreq, align 4, !dbg !10761
  %8 = load i32, i32* %quantif, align 4, !dbg !10763
  %shl1 = shl i32 1, %8, !dbg !10764
  %sub = sub i32 %shl1, 1, !dbg !10765
  %and = and i32 %7, %sub, !dbg !10766
  %cmp = icmp ne i32 %and, 0, !dbg !10767
  br i1 %cmp, label %if.then, label %if.else, !dbg !10768

if.then:                                          ; preds = %entry
  %9 = load i32, i32* %syncFreq, align 4, !dbg !10769
  %10 = load i32, i32* %quantif, align 4, !dbg !10770
  %shr = lshr i32 %9, %10, !dbg !10771
  %add2 = add i32 %shr, 1, !dbg !10772
  store i32 %add2, i32* %syncFreq, align 4, !dbg !10773
  br label %if.end, !dbg !10774

if.else:                                          ; preds = %entry
  %11 = load i32, i32* %syncFreq, align 4, !dbg !10775
  %12 = load i32, i32* %quantif, align 4, !dbg !10776
  %shr3 = lshr i32 %11, %12, !dbg !10777
  store i32 %shr3, i32* %syncFreq, align 4, !dbg !10778
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load i32, i32* %syncFreq, align 4, !dbg !10779
  %cmp4 = icmp ne i32 %13, 0, !dbg !10781
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !10782

if.then5:                                         ; preds = %if.end
  %14 = load i32, i32* %syncFreq, align 4, !dbg !10783
  %sub6 = sub i32 %14, 1, !dbg !10784
  store i32 %sub6, i32* %syncFreq, align 4, !dbg !10785
  br label %if.end7, !dbg !10786

if.end7:                                          ; preds = %if.then5, %if.end
  %15 = load i32, i32* %syncFreq, align 4, !dbg !10787
  ret i32 %15, !dbg !10788
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dib7000p_cfg_gpio(%struct.dib7000p_state* %st, i8 zeroext %num, i8 zeroext %dir, i8 zeroext %val) #0 !dbg !10789 {
entry:
  %st.addr = alloca %struct.dib7000p_state*, align 8
  %num.addr = alloca i8, align 1
  %dir.addr = alloca i8, align 1
  %val.addr = alloca i8, align 1
  store %struct.dib7000p_state* %st, %struct.dib7000p_state** %st.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dib7000p_state** %st.addr, metadata !10792, metadata !DIExpression()), !dbg !10793
  store i8 %num, i8* %num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num.addr, metadata !10794, metadata !DIExpression()), !dbg !10795
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !10796, metadata !DIExpression()), !dbg !10797
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !10798, metadata !DIExpression()), !dbg !10799
  %0 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10800
  %call = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %0, i16 zeroext 1029) #8, !dbg !10801
  %1 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10802
  %gpio_dir = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %1, i32 0, i32 13, !dbg !10803
  store i16 %call, i16* %gpio_dir, align 2, !dbg !10804
  %2 = load i8, i8* %num.addr, align 1, !dbg !10805
  %conv = zext i8 %2 to i32, !dbg !10805
  %shl = shl i32 1, %conv, !dbg !10806
  %neg = xor i32 %shl, -1, !dbg !10807
  %3 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10808
  %gpio_dir1 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %3, i32 0, i32 13, !dbg !10809
  %4 = load i16, i16* %gpio_dir1, align 2, !dbg !10810
  %conv2 = zext i16 %4 to i32, !dbg !10810
  %and = and i32 %conv2, %neg, !dbg !10810
  %conv3 = trunc i32 %and to i16, !dbg !10810
  store i16 %conv3, i16* %gpio_dir1, align 2, !dbg !10810
  %5 = load i8, i8* %dir.addr, align 1, !dbg !10811
  %conv4 = zext i8 %5 to i32, !dbg !10811
  %and5 = and i32 %conv4, 1, !dbg !10812
  %6 = load i8, i8* %num.addr, align 1, !dbg !10813
  %conv6 = zext i8 %6 to i32, !dbg !10813
  %shl7 = shl i32 %and5, %conv6, !dbg !10814
  %7 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10815
  %gpio_dir8 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %7, i32 0, i32 13, !dbg !10816
  %8 = load i16, i16* %gpio_dir8, align 2, !dbg !10817
  %conv9 = zext i16 %8 to i32, !dbg !10817
  %or = or i32 %conv9, %shl7, !dbg !10817
  %conv10 = trunc i32 %or to i16, !dbg !10817
  store i16 %conv10, i16* %gpio_dir8, align 2, !dbg !10817
  %9 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10818
  %10 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10819
  %gpio_dir11 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %10, i32 0, i32 13, !dbg !10820
  %11 = load i16, i16* %gpio_dir11, align 2, !dbg !10820
  %call12 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %9, i16 zeroext 1029, i16 zeroext %11) #8, !dbg !10821
  %12 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10822
  %call13 = call zeroext i16 @dib7000p_read_word(%struct.dib7000p_state* %12, i16 zeroext 1030) #8, !dbg !10823
  %13 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10824
  %gpio_val = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %13, i32 0, i32 14, !dbg !10825
  store i16 %call13, i16* %gpio_val, align 4, !dbg !10826
  %14 = load i8, i8* %num.addr, align 1, !dbg !10827
  %conv14 = zext i8 %14 to i32, !dbg !10827
  %shl15 = shl i32 1, %conv14, !dbg !10828
  %neg16 = xor i32 %shl15, -1, !dbg !10829
  %15 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10830
  %gpio_val17 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %15, i32 0, i32 14, !dbg !10831
  %16 = load i16, i16* %gpio_val17, align 4, !dbg !10832
  %conv18 = zext i16 %16 to i32, !dbg !10832
  %and19 = and i32 %conv18, %neg16, !dbg !10832
  %conv20 = trunc i32 %and19 to i16, !dbg !10832
  store i16 %conv20, i16* %gpio_val17, align 4, !dbg !10832
  %17 = load i8, i8* %val.addr, align 1, !dbg !10833
  %conv21 = zext i8 %17 to i32, !dbg !10833
  %and22 = and i32 %conv21, 1, !dbg !10834
  %18 = load i8, i8* %num.addr, align 1, !dbg !10835
  %conv23 = zext i8 %18 to i32, !dbg !10835
  %shl24 = shl i32 %and22, %conv23, !dbg !10836
  %19 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10837
  %gpio_val25 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %19, i32 0, i32 14, !dbg !10838
  %20 = load i16, i16* %gpio_val25, align 4, !dbg !10839
  %conv26 = zext i16 %20 to i32, !dbg !10839
  %or27 = or i32 %conv26, %shl24, !dbg !10839
  %conv28 = trunc i32 %or27 to i16, !dbg !10839
  store i16 %conv28, i16* %gpio_val25, align 4, !dbg !10839
  %21 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10840
  %22 = load %struct.dib7000p_state*, %struct.dib7000p_state** %st.addr, align 8, !dbg !10841
  %gpio_val29 = getelementptr inbounds %struct.dib7000p_state, %struct.dib7000p_state* %22, i32 0, i32 14, !dbg !10842
  %23 = load i16, i16* %gpio_val29, align 4, !dbg !10842
  %call30 = call i32 @dib7000p_write_word(%struct.dib7000p_state* %21, i16 zeroext 1030, i16 zeroext %23) #8, !dbg !10843
  ret i32 0, !dbg !10844
}

; Function Attrs: noredzone
declare dso_local %struct.i2c_adapter* @dibx000_get_i2c_adapter(%struct.dibx000_i2c_master*, i32, i32) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone }
attributes #9 = { cold noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4647, !4648, !4649, !4650}
!llvm.ident = !{!4651}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_debug", scope: !2, file: !3, line: 22, type: !4644, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !316, globals: !338, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/dvb-frontends/dib7000p.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !40, !50, !57, !73, !78, !82, !87, !102, !113, !126, !133, !138, !144, !165, !171, !175, !183, !190, !195, !201, !207, !216, !224, !230, !236, !243, !251, !257, !271, !283, !290, !297, !302, !310}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_caps", file: !6, line: 72, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/dvb/frontend.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!9 = !DIEnumerator(name: "FE_IS_STUPID", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "FE_CAN_INVERSION_AUTO", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "FE_CAN_FEC_1_2", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "FE_CAN_FEC_2_3", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "FE_CAN_FEC_3_4", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "FE_CAN_FEC_4_5", value: 16, isUnsigned: true)
!15 = !DIEnumerator(name: "FE_CAN_FEC_5_6", value: 32, isUnsigned: true)
!16 = !DIEnumerator(name: "FE_CAN_FEC_6_7", value: 64, isUnsigned: true)
!17 = !DIEnumerator(name: "FE_CAN_FEC_7_8", value: 128, isUnsigned: true)
!18 = !DIEnumerator(name: "FE_CAN_FEC_8_9", value: 256, isUnsigned: true)
!19 = !DIEnumerator(name: "FE_CAN_FEC_AUTO", value: 512, isUnsigned: true)
!20 = !DIEnumerator(name: "FE_CAN_QPSK", value: 1024, isUnsigned: true)
!21 = !DIEnumerator(name: "FE_CAN_QAM_16", value: 2048, isUnsigned: true)
!22 = !DIEnumerator(name: "FE_CAN_QAM_32", value: 4096, isUnsigned: true)
!23 = !DIEnumerator(name: "FE_CAN_QAM_64", value: 8192, isUnsigned: true)
!24 = !DIEnumerator(name: "FE_CAN_QAM_128", value: 16384, isUnsigned: true)
!25 = !DIEnumerator(name: "FE_CAN_QAM_256", value: 32768, isUnsigned: true)
!26 = !DIEnumerator(name: "FE_CAN_QAM_AUTO", value: 65536, isUnsigned: true)
!27 = !DIEnumerator(name: "FE_CAN_TRANSMISSION_MODE_AUTO", value: 131072, isUnsigned: true)
!28 = !DIEnumerator(name: "FE_CAN_BANDWIDTH_AUTO", value: 262144, isUnsigned: true)
!29 = !DIEnumerator(name: "FE_CAN_GUARD_INTERVAL_AUTO", value: 524288, isUnsigned: true)
!30 = !DIEnumerator(name: "FE_CAN_HIERARCHY_AUTO", value: 1048576, isUnsigned: true)
!31 = !DIEnumerator(name: "FE_CAN_8VSB", value: 2097152, isUnsigned: true)
!32 = !DIEnumerator(name: "FE_CAN_16VSB", value: 4194304, isUnsigned: true)
!33 = !DIEnumerator(name: "FE_HAS_EXTENDED_CAPS", value: 8388608, isUnsigned: true)
!34 = !DIEnumerator(name: "FE_CAN_MULTISTREAM", value: 67108864, isUnsigned: true)
!35 = !DIEnumerator(name: "FE_CAN_TURBO_FEC", value: 134217728, isUnsigned: true)
!36 = !DIEnumerator(name: "FE_CAN_2G_MODULATION", value: 268435456, isUnsigned: true)
!37 = !DIEnumerator(name: "FE_NEEDS_BENDING", value: 536870912, isUnsigned: true)
!38 = !DIEnumerator(name: "FE_CAN_RECOVER", value: 1073741824, isUnsigned: true)
!39 = !DIEnumerator(name: "FE_CAN_MUTE_TS", value: 2147483648, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_status", file: !6, line: 252, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49}
!42 = !DIEnumerator(name: "FE_NONE", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "FE_HAS_SIGNAL", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "FE_HAS_CARRIER", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "FE_HAS_VITERBI", value: 4, isUnsigned: true)
!46 = !DIEnumerator(name: "FE_HAS_SYNC", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "FE_HAS_LOCK", value: 16, isUnsigned: true)
!48 = !DIEnumerator(name: "FE_TIMEDOUT", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "FE_REINIT", value: 64, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_algo", file: !51, line: 144, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/media/dvb_frontend.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "DVBFE_ALGO_HW", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "DVBFE_ALGO_SW", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "DVBFE_ALGO_CUSTOM", value: 4, isUnsigned: true)
!56 = !DIEnumerator(name: "DVBFE_ALGO_RECOVERY", value: 2147483648, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_modulation", file: !6, line: 338, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!59 = !DIEnumerator(name: "QPSK", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "QAM_16", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "QAM_32", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "QAM_64", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "QAM_128", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "QAM_256", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "QAM_AUTO", value: 6, isUnsigned: true)
!66 = !DIEnumerator(name: "VSB_8", value: 7, isUnsigned: true)
!67 = !DIEnumerator(name: "VSB_16", value: 8, isUnsigned: true)
!68 = !DIEnumerator(name: "PSK_8", value: 9, isUnsigned: true)
!69 = !DIEnumerator(name: "APSK_16", value: 10, isUnsigned: true)
!70 = !DIEnumerator(name: "APSK_32", value: 11, isUnsigned: true)
!71 = !DIEnumerator(name: "DQPSK", value: 12, isUnsigned: true)
!72 = !DIEnumerator(name: "QAM_4_NR", value: 13, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_voltage", file: !6, line: 208, baseType: !7, size: 32, elements: !74)
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "SEC_VOLTAGE_13", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "SEC_VOLTAGE_18", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "SEC_VOLTAGE_OFF", value: 2, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_tone_mode", file: !6, line: 220, baseType: !7, size: 32, elements: !79)
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "SEC_TONE_ON", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "SEC_TONE_OFF", value: 1, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_spectral_inversion", file: !6, line: 276, baseType: !7, size: 32, elements: !83)
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "INVERSION_OFF", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "INVERSION_ON", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "INVERSION_AUTO", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_code_rate", file: !6, line: 302, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!89 = !DIEnumerator(name: "FEC_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "FEC_1_2", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "FEC_2_3", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "FEC_3_4", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "FEC_4_5", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "FEC_5_6", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "FEC_6_7", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "FEC_7_8", value: 7, isUnsigned: true)
!97 = !DIEnumerator(name: "FEC_8_9", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "FEC_AUTO", value: 9, isUnsigned: true)
!99 = !DIEnumerator(name: "FEC_3_5", value: 10, isUnsigned: true)
!100 = !DIEnumerator(name: "FEC_9_10", value: 11, isUnsigned: true)
!101 = !DIEnumerator(name: "FEC_2_5", value: 12, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_transmit_mode", file: !6, line: 381, baseType: !7, size: 32, elements: !103)
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112}
!104 = !DIEnumerator(name: "TRANSMISSION_MODE_2K", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "TRANSMISSION_MODE_8K", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "TRANSMISSION_MODE_AUTO", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TRANSMISSION_MODE_4K", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "TRANSMISSION_MODE_1K", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "TRANSMISSION_MODE_16K", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "TRANSMISSION_MODE_32K", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "TRANSMISSION_MODE_C1", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "TRANSMISSION_MODE_C3780", value: 8, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_guard_interval", file: !6, line: 410, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!115 = !DIEnumerator(name: "GUARD_INTERVAL_1_32", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "GUARD_INTERVAL_1_16", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "GUARD_INTERVAL_1_8", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "GUARD_INTERVAL_1_4", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "GUARD_INTERVAL_AUTO", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "GUARD_INTERVAL_1_128", value: 5, isUnsigned: true)
!121 = !DIEnumerator(name: "GUARD_INTERVAL_19_128", value: 6, isUnsigned: true)
!122 = !DIEnumerator(name: "GUARD_INTERVAL_19_256", value: 7, isUnsigned: true)
!123 = !DIEnumerator(name: "GUARD_INTERVAL_PN420", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "GUARD_INTERVAL_PN595", value: 9, isUnsigned: true)
!125 = !DIEnumerator(name: "GUARD_INTERVAL_PN945", value: 10, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_hierarchy", file: !6, line: 434, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132}
!128 = !DIEnumerator(name: "HIERARCHY_NONE", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "HIERARCHY_1", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "HIERARCHY_2", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "HIERARCHY_4", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "HIERARCHY_AUTO", value: 4, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_pilot", file: !6, line: 562, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137}
!135 = !DIEnumerator(name: "PILOT_ON", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PILOT_OFF", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PILOT_AUTO", value: 2, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_rolloff", file: !6, line: 579, baseType: !7, size: 32, elements: !139)
!139 = !{!140, !141, !142, !143}
!140 = !DIEnumerator(name: "ROLLOFF_35", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "ROLLOFF_20", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "ROLLOFF_25", value: 2, isUnsigned: true)
!143 = !DIEnumerator(name: "ROLLOFF_AUTO", value: 3, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_delivery_system", file: !6, line: 628, baseType: !7, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164}
!146 = !DIEnumerator(name: "SYS_UNDEFINED", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "SYS_DVBC_ANNEX_A", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "SYS_DVBC_ANNEX_B", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "SYS_DVBT", value: 3, isUnsigned: true)
!150 = !DIEnumerator(name: "SYS_DSS", value: 4, isUnsigned: true)
!151 = !DIEnumerator(name: "SYS_DVBS", value: 5, isUnsigned: true)
!152 = !DIEnumerator(name: "SYS_DVBS2", value: 6, isUnsigned: true)
!153 = !DIEnumerator(name: "SYS_DVBH", value: 7, isUnsigned: true)
!154 = !DIEnumerator(name: "SYS_ISDBT", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "SYS_ISDBS", value: 9, isUnsigned: true)
!156 = !DIEnumerator(name: "SYS_ISDBC", value: 10, isUnsigned: true)
!157 = !DIEnumerator(name: "SYS_ATSC", value: 11, isUnsigned: true)
!158 = !DIEnumerator(name: "SYS_ATSCMH", value: 12, isUnsigned: true)
!159 = !DIEnumerator(name: "SYS_DTMB", value: 13, isUnsigned: true)
!160 = !DIEnumerator(name: "SYS_CMMB", value: 14, isUnsigned: true)
!161 = !DIEnumerator(name: "SYS_DAB", value: 15, isUnsigned: true)
!162 = !DIEnumerator(name: "SYS_DVBT2", value: 16, isUnsigned: true)
!163 = !DIEnumerator(name: "SYS_TURBO", value: 17, isUnsigned: true)
!164 = !DIEnumerator(name: "SYS_DVBC_ANNEX_C", value: 18, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_interleaving", file: !6, line: 451, baseType: !7, size: 32, elements: !166)
!166 = !{!167, !168, !169, !170}
!167 = !DIEnumerator(name: "INTERLEAVING_NONE", value: 0, isUnsigned: true)
!168 = !DIEnumerator(name: "INTERLEAVING_AUTO", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "INTERLEAVING_240", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "INTERLEAVING_720", value: 3, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_mini_cmd", file: !6, line: 233, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174}
!173 = !DIEnumerator(name: "SEC_MINI_A", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "SEC_MINI_B", value: 1, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_search", file: !51, line: 173, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181, !182}
!177 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_SUCCESS", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ASLEEP", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_FAILED", value: 4, isUnsigned: true)
!180 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_INVALID", value: 8, isUnsigned: true)
!181 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_AGAIN", value: 16, isUnsigned: true)
!182 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ERROR", value: 2147483648, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !184, line: 15, baseType: !7, size: 32, elements: !185)
!184 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!185 = !{!186, !187, !188, !189}
!186 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!187 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !191, line: 65, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194}
!193 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !196, line: 16, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199, !200}
!198 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !202, line: 54, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206}
!204 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !208, line: 296, baseType: !7, size: 32, elements: !209)
!208 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !211, !212, !213, !214, !215}
!210 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !217, line: 9, baseType: !7, size: 32, elements: !218)
!217 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!218 = !{!219, !220, !221, !222, !223}
!219 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!223 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!224 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !225, line: 26, baseType: !7, size: 32, elements: !226)
!225 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !228, !229}
!227 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !231, line: 44, baseType: !7, size: 32, elements: !232)
!231 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235}
!233 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !237, line: 343, baseType: !7, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !242}
!239 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !244, line: 524, baseType: !7, size: 32, elements: !245)
!244 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!245 = !{!246, !247, !248, !249, !250}
!246 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!248 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!249 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!250 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !244, line: 502, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !258, line: 76, baseType: !7, size: 32, elements: !259)
!258 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270}
!260 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!261 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!264 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!265 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!266 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!267 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!268 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!269 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!270 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvb_device_type", file: !272, line: 57, baseType: !7, size: 32, elements: !273)
!272 = !DIFile(filename: "./include/media/dvbdev.h", directory: "/home/lizy2001/genbc/linux")
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282}
!274 = !DIEnumerator(name: "DVB_DEVICE_SEC", value: 0, isUnsigned: true)
!275 = !DIEnumerator(name: "DVB_DEVICE_FRONTEND", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "DVB_DEVICE_DEMUX", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "DVB_DEVICE_DVR", value: 3, isUnsigned: true)
!278 = !DIEnumerator(name: "DVB_DEVICE_CA", value: 4, isUnsigned: true)
!279 = !DIEnumerator(name: "DVB_DEVICE_NET", value: 5, isUnsigned: true)
!280 = !DIEnumerator(name: "DVB_DEVICE_VIDEO", value: 6, isUnsigned: true)
!281 = !DIEnumerator(name: "DVB_DEVICE_AUDIO", value: 7, isUnsigned: true)
!282 = !DIEnumerator(name: "DVB_DEVICE_OSD", value: 8, isUnsigned: true)
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dibx000_i2c_interface", file: !284, line: 5, baseType: !7, size: 32, elements: !285)
!284 = !DIFile(filename: "drivers/media/dvb-frontends/dibx000_common.h", directory: "/home/lizy2001/genbc/linux")
!285 = !{!286, !287, !288, !289}
!286 = !DIEnumerator(name: "DIBX000_I2C_INTERFACE_TUNER", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "DIBX000_I2C_INTERFACE_GPIO_1_2", value: 1, isUnsigned: true)
!288 = !DIEnumerator(name: "DIBX000_I2C_INTERFACE_GPIO_3_4", value: 2, isUnsigned: true)
!289 = !DIEnumerator(name: "DIBX000_I2C_INTERFACE_GPIO_6_7", value: 3, isUnsigned: true)
!290 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !291, line: 305, baseType: !7, size: 32, elements: !292)
!291 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!292 = !{!293, !294, !295, !296}
!293 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!294 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!295 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!296 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!297 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dib7000p_power_mode", file: !3, line: 88, baseType: !7, size: 32, elements: !298)
!298 = !{!299, !300, !301}
!299 = !DIEnumerator(name: "DIB7000P_POWER_ALL", value: 0, isUnsigned: true)
!300 = !DIEnumerator(name: "DIB7000P_POWER_ANALOG_ADC", value: 1, isUnsigned: true)
!301 = !DIEnumerator(name: "DIB7000P_POWER_INTERFACE_ONLY", value: 2, isUnsigned: true)
!302 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dibx000_adc_states", file: !284, line: 139, baseType: !7, size: 32, elements: !303)
!303 = !{!304, !305, !306, !307, !308, !309}
!304 = !DIEnumerator(name: "DIBX000_SLOW_ADC_ON", value: 0, isUnsigned: true)
!305 = !DIEnumerator(name: "DIBX000_SLOW_ADC_OFF", value: 1, isUnsigned: true)
!306 = !DIEnumerator(name: "DIBX000_ADC_ON", value: 2, isUnsigned: true)
!307 = !DIEnumerator(name: "DIBX000_ADC_OFF", value: 3, isUnsigned: true)
!308 = !DIEnumerator(name: "DIBX000_VBG_ENABLE", value: 4, isUnsigned: true)
!309 = !DIEnumerator(name: "DIBX000_VBG_DISABLE", value: 5, isUnsigned: true)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fecap_scale_params", file: !6, line: 752, baseType: !7, size: 32, elements: !311)
!311 = !{!312, !313, !314, !315}
!312 = !DIEnumerator(name: "FE_SCALE_NOT_AVAILABLE", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "FE_SCALE_DECIBEL", value: 1, isUnsigned: true)
!314 = !DIEnumerator(name: "FE_SCALE_RELATIVE", value: 2, isUnsigned: true)
!315 = !DIEnumerator(name: "FE_SCALE_COUNTER", value: 3, isUnsigned: true)
!316 = !{!317, !318, !323, !325, !328, !331, !327, !333, !334}
!317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!318 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !319, line: 17, baseType: !320)
!319 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !321, line: 21, baseType: !322)
!321 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!322 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!323 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !324, line: 148, baseType: !7)
!324 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!325 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !319, line: 20, baseType: !326)
!326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !321, line: 26, baseType: !327)
!327 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !319, line: 19, baseType: !329)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !321, line: 24, baseType: !330)
!330 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!331 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !319, line: 21, baseType: !332)
!332 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !321, line: 27, baseType: !7)
!333 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !324, line: 107, baseType: !335)
!335 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !319, line: 23, baseType: !336)
!336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !321, line: 31, baseType: !337)
!337 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!338 = !{!339, !402, !407, !412, !414, !419, !424, !429, !434, !439, !441, !446, !448, !0, !450, !455, !459, !4558, !4561, !4618, !4623, !4632, !4634, !4639}
!339 = !DIGlobalVariableExpression(var: !340, expr: !DIExpression())
!340 = distinct !DIGlobalVariable(name: "__param_debug", scope: !2, file: !3, line: 22, type: !341, isLocal: true, isDefinition: true, align: 64)
!341 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !342)
!342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !343, line: 69, size: 320, elements: !344)
!343 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!344 = !{!345, !349, !353, !373, !375, !379, !380}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !342, file: !343, line: 70, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !348)
!348 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !342, file: !343, line: 71, baseType: !350, size: 64, offset: 64)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !351, size: 64)
!351 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !352, line: 76, flags: DIFlagFwdDecl)
!352 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !342, file: !343, line: 72, baseType: !354, size: 64, offset: 128)
!354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !355, size: 64)
!355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !356)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !343, line: 47, size: 256, elements: !357)
!357 = !{!358, !359, !364, !369}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !356, file: !343, line: 49, baseType: !7, size: 32)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !356, file: !343, line: 51, baseType: !360, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!327, !346, !363}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !356, file: !343, line: 53, baseType: !365, size: 64, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DISubroutineType(types: !367)
!367 = !{!327, !368, !363}
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !348, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !356, file: !343, line: 55, baseType: !370, size: 64, offset: 192)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !371, size: 64)
!371 = !DISubroutineType(types: !372)
!372 = !{null, !317}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !342, file: !343, line: 73, baseType: !374, size: 16, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !328)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !342, file: !343, line: 74, baseType: !376, size: 8, offset: 208)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !319, line: 16, baseType: !377)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !321, line: 20, baseType: !378)
!378 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !342, file: !343, line: 75, baseType: !318, size: 8, offset: 216)
!380 = !DIDerivedType(tag: DW_TAG_member, scope: !342, file: !343, line: 76, baseType: !381, size: 64, offset: 256)
!381 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !342, file: !343, line: 76, size: 64, elements: !382)
!382 = !{!383, !384, !391}
!383 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !381, file: !343, line: 77, baseType: !317, size: 64)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !381, file: !343, line: 78, baseType: !385, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !387)
!387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !343, line: 86, size: 128, elements: !388)
!388 = !{!389, !390}
!389 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !387, file: !343, line: 87, baseType: !7, size: 32)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !387, file: !343, line: 88, baseType: !368, size: 64, offset: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !381, file: !343, line: 79, baseType: !392, size: 64)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !394)
!394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !343, line: 92, size: 256, elements: !395)
!395 = !{!396, !397, !398, !400, !401}
!396 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !394, file: !343, line: 94, baseType: !7, size: 32)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !394, file: !343, line: 95, baseType: !7, size: 32, offset: 32)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !394, file: !343, line: 96, baseType: !399, size: 64, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !394, file: !343, line: 97, baseType: !354, size: 64, offset: 128)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !394, file: !343, line: 98, baseType: !317, size: 64, offset: 192)
!402 = !DIGlobalVariableExpression(var: !403, expr: !DIExpression())
!403 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debugtype220", scope: !2, file: !3, line: 22, type: !404, isLocal: true, isDefinition: true, align: 8)
!404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 224, elements: !405)
!405 = !{!406}
!406 = !DISubrange(count: 28)
!407 = !DIGlobalVariableExpression(var: !408, expr: !DIExpression())
!408 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_debug221", scope: !2, file: !3, line: 23, type: !409, isLocal: true, isDefinition: true, align: 8)
!409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 408, elements: !410)
!410 = !{!411}
!411 = !DISubrange(count: 51)
!412 = !DIGlobalVariableExpression(var: !413, expr: !DIExpression())
!413 = distinct !DIGlobalVariable(name: "__param_buggy_sfn_workaround", scope: !2, file: !3, line: 26, type: !341, isLocal: true, isDefinition: true, align: 64)
!414 = !DIGlobalVariableExpression(var: !415, expr: !DIExpression())
!415 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_buggy_sfn_workaroundtype222", scope: !2, file: !3, line: 26, type: !416, isLocal: true, isDefinition: true, align: 8)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 344, elements: !417)
!417 = !{!418}
!418 = !DISubrange(count: 43)
!419 = !DIGlobalVariableExpression(var: !420, expr: !DIExpression())
!420 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_buggy_sfn_workaround223", scope: !2, file: !3, line: 27, type: !421, isLocal: true, isDefinition: true, align: 8)
!421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 656, elements: !422)
!422 = !{!423}
!423 = !DISubrange(count: 82)
!424 = !DIGlobalVariableExpression(var: !425, expr: !DIExpression())
!425 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author224", scope: !2, file: !3, line: 2857, type: !426, isLocal: true, isDefinition: true, align: 8)
!426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 464, elements: !427)
!427 = !{!428}
!428 = !DISubrange(count: 58)
!429 = !DIGlobalVariableExpression(var: !430, expr: !DIExpression())
!430 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author225", scope: !2, file: !3, line: 2858, type: !431, isLocal: true, isDefinition: true, align: 8)
!431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 512, elements: !432)
!432 = !{!433}
!433 = !DISubrange(count: 64)
!434 = !DIGlobalVariableExpression(var: !435, expr: !DIExpression())
!435 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description226", scope: !2, file: !3, line: 2859, type: !436, isLocal: true, isDefinition: true, align: 8)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 544, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 68)
!439 = !DIGlobalVariableExpression(var: !440, expr: !DIExpression())
!440 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file227", scope: !2, file: !3, line: 2860, type: !409, isLocal: true, isDefinition: true, align: 8)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license228", scope: !2, file: !3, line: 2860, type: !443, isLocal: true, isDefinition: true, align: 8)
!443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 168, elements: !444)
!444 = !{!445}
!445 = !DISubrange(count: 21)
!446 = !DIGlobalVariableExpression(var: !447, expr: !DIExpression())
!447 = distinct !DIGlobalVariable(name: "debug", scope: !2, file: !3, line: 21, type: !327, isLocal: true, isDefinition: true)
!448 = !DIGlobalVariableExpression(var: !449, expr: !DIExpression())
!449 = distinct !DIGlobalVariable(name: "buggy_sfn_workaround", scope: !2, file: !3, line: 25, type: !327, isLocal: true, isDefinition: true)
!450 = !DIGlobalVariableExpression(var: !451, expr: !DIExpression())
!451 = distinct !DIGlobalVariable(name: "__param_str_buggy_sfn_workaround", scope: !2, file: !3, line: 26, type: !452, isLocal: true, isDefinition: true)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 240, elements: !453)
!453 = !{!454}
!454 = !DISubrange(count: 30)
!455 = !DIGlobalVariableExpression(var: !456, expr: !DIExpression())
!456 = distinct !DIGlobalVariable(name: "lut_1000ln_mant", scope: !2, file: !3, line: 2143, type: !457, isLocal: true, isDefinition: true)
!457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 672, elements: !444)
!458 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!459 = !DIGlobalVariableExpression(var: !460, expr: !DIExpression())
!460 = distinct !DIGlobalVariable(name: "__key", scope: !461, file: !3, line: 2760, type: !1191, isLocal: true, isDefinition: true)
!461 = distinct !DISubprogram(name: "dib7000p_init", scope: !3, file: !3, line: 2737, type: !462, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!462 = !DISubroutineType(types: !463)
!463 = !{!464, !4349, !318, !4471}
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend", file: !51, line: 686, size: 10240, elements: !466)
!466 = !{!467, !481, !768, !4337, !4338, !4339, !4340, !4341, !4342, !4343, !4347, !4348}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !465, file: !51, line: 687, baseType: !468, size: 32)
!468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !469, line: 19, size: 32, elements: !470)
!469 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!470 = !{!471}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !468, file: !469, line: 20, baseType: !472, size: 32)
!472 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !473, line: 113, baseType: !474)
!473 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !473, line: 111, size: 32, elements: !475)
!475 = !{!476}
!476 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !474, file: !473, line: 112, baseType: !477, size: 32)
!477 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !324, line: 168, baseType: !478)
!478 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !324, line: 166, size: 32, elements: !479)
!479 = !{!480}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !478, file: !324, line: 167, baseType: !327, size: 32)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !465, file: !51, line: 688, baseType: !482, size: 6016, offset: 64)
!482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_ops", file: !51, line: 435, size: 6016, elements: !483)
!483 = !{!484, !499, !503, !507, !508, !509, !513, !514, !520, !527, !531, !532, !542, !625, !629, !634, !639, !640, !641, !642, !654, !665, !669, !673, !677, !681, !686, !690, !691, !692, !696, !750}
!484 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !482, file: !51, line: 436, baseType: !485, size: 1280)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_internal_info", file: !51, line: 338, size: 1280, elements: !486)
!486 = !{!487, !491, !492, !493, !494, !495, !496, !497, !498}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !485, file: !51, line: 339, baseType: !488, size: 1024)
!488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 1024, elements: !489)
!489 = !{!490}
!490 = !DISubrange(count: 128)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !485, file: !51, line: 340, baseType: !331, size: 32, offset: 1024)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !485, file: !51, line: 341, baseType: !331, size: 32, offset: 1056)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_stepsize_hz", scope: !485, file: !51, line: 342, baseType: !331, size: 32, offset: 1088)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_tolerance_hz", scope: !485, file: !51, line: 343, baseType: !331, size: 32, offset: 1120)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_min", scope: !485, file: !51, line: 344, baseType: !331, size: 32, offset: 1152)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_max", scope: !485, file: !51, line: 345, baseType: !331, size: 32, offset: 1184)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_tolerance", scope: !485, file: !51, line: 346, baseType: !331, size: 32, offset: 1216)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !485, file: !51, line: 347, baseType: !5, size: 32, offset: 1248)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !482, file: !51, line: 438, baseType: !500, size: 64, offset: 1280)
!500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 64, elements: !501)
!501 = !{!502}
!502 = !DISubrange(count: 8)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !482, file: !51, line: 440, baseType: !504, size: 64, offset: 1344)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DISubroutineType(types: !506)
!506 = !{null, !464}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !482, file: !51, line: 441, baseType: !504, size: 64, offset: 1408)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "release_sec", scope: !482, file: !51, line: 442, baseType: !504, size: 64, offset: 1472)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !482, file: !51, line: 444, baseType: !510, size: 64, offset: 1536)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DISubroutineType(types: !512)
!512 = !{!327, !464}
!513 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !482, file: !51, line: 445, baseType: !510, size: 64, offset: 1600)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !482, file: !51, line: 447, baseType: !515, size: 64, offset: 1664)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DISubroutineType(types: !517)
!517 = !{!327, !464, !518, !327}
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !318)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !482, file: !51, line: 450, baseType: !521, size: 64, offset: 1728)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DISubroutineType(types: !523)
!523 = !{!327, !464, !524, !7, !399, !526}
!524 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !324, line: 30, baseType: !525)
!525 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend_algo", scope: !482, file: !51, line: 457, baseType: !528, size: 64, offset: 1792)
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{!50, !464}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "set_frontend", scope: !482, file: !51, line: 460, baseType: !510, size: 64, offset: 1856)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "get_tune_settings", scope: !482, file: !51, line: 461, baseType: !533, size: 64, offset: 1920)
!533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !534, size: 64)
!534 = !DISubroutineType(types: !535)
!535 = !{!327, !464, !536}
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_tune_settings", file: !51, line: 69, size: 96, elements: !538)
!538 = !{!539, !540, !541}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "min_delay_ms", scope: !537, file: !51, line: 70, baseType: !327, size: 32)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "step_size", scope: !537, file: !51, line: 71, baseType: !327, size: 32, offset: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "max_drift", scope: !537, file: !51, line: 72, baseType: !327, size: 32, offset: 64)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend", scope: !482, file: !51, line: 463, baseType: !543, size: 64, offset: 1984)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!327, !464, !546}
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_frontend_properties", file: !51, line: 586, size: 3648, elements: !548)
!548 = !{!549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !618, !619, !620, !621, !622, !623, !624}
!549 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !547, file: !51, line: 587, baseType: !331, size: 32)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !547, file: !51, line: 588, baseType: !57, size: 32, offset: 32)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !547, file: !51, line: 590, baseType: !73, size: 32, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "sectone", scope: !547, file: !51, line: 591, baseType: !78, size: 32, offset: 96)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !547, file: !51, line: 592, baseType: !82, size: 32, offset: 128)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "fec_inner", scope: !547, file: !51, line: 593, baseType: !87, size: 32, offset: 160)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_mode", scope: !547, file: !51, line: 594, baseType: !102, size: 32, offset: 192)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_hz", scope: !547, file: !51, line: 595, baseType: !331, size: 32, offset: 224)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "guard_interval", scope: !547, file: !51, line: 596, baseType: !113, size: 32, offset: 256)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchy", scope: !547, file: !51, line: 597, baseType: !126, size: 32, offset: 288)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate", scope: !547, file: !51, line: 598, baseType: !331, size: 32, offset: 320)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_HP", scope: !547, file: !51, line: 599, baseType: !87, size: 32, offset: 352)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_LP", scope: !547, file: !51, line: 600, baseType: !87, size: 32, offset: 384)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "pilot", scope: !547, file: !51, line: 602, baseType: !133, size: 32, offset: 416)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !547, file: !51, line: 603, baseType: !138, size: 32, offset: 448)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_system", scope: !547, file: !51, line: 605, baseType: !144, size: 32, offset: 480)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !547, file: !51, line: 607, baseType: !165, size: 32, offset: 512)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_partial_reception", scope: !547, file: !51, line: 610, baseType: !318, size: 8, offset: 544)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_mode", scope: !547, file: !51, line: 611, baseType: !318, size: 8, offset: 552)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_subchannel", scope: !547, file: !51, line: 612, baseType: !318, size: 8, offset: 560)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_idx", scope: !547, file: !51, line: 613, baseType: !331, size: 32, offset: 576)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_count", scope: !547, file: !51, line: 614, baseType: !331, size: 32, offset: 608)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_layer_enabled", scope: !547, file: !51, line: 615, baseType: !318, size: 8, offset: 640)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !547, file: !51, line: 621, baseType: !573, size: 384, offset: 672)
!573 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 384, elements: !580)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !547, file: !51, line: 616, size: 128, elements: !575)
!575 = !{!576, !577, !578, !579}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "segment_count", scope: !574, file: !51, line: 617, baseType: !318, size: 8)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !574, file: !51, line: 618, baseType: !87, size: 32, offset: 32)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !574, file: !51, line: 619, baseType: !57, size: 32, offset: 64)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !574, file: !51, line: 620, baseType: !318, size: 8, offset: 96)
!580 = !{!581}
!581 = !DISubrange(count: 3)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !547, file: !51, line: 624, baseType: !331, size: 32, offset: 1056)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling_sequence_index", scope: !547, file: !51, line: 627, baseType: !331, size: 32, offset: 1088)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_fic_ver", scope: !547, file: !51, line: 630, baseType: !318, size: 8, offset: 1120)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_parade_id", scope: !547, file: !51, line: 631, baseType: !318, size: 8, offset: 1128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_nog", scope: !547, file: !51, line: 632, baseType: !318, size: 8, offset: 1136)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_tnog", scope: !547, file: !51, line: 633, baseType: !318, size: 8, offset: 1144)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sgn", scope: !547, file: !51, line: 634, baseType: !318, size: 8, offset: 1152)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_prc", scope: !547, file: !51, line: 635, baseType: !318, size: 8, offset: 1160)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_mode", scope: !547, file: !51, line: 637, baseType: !318, size: 8, offset: 1168)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_ensemble", scope: !547, file: !51, line: 638, baseType: !318, size: 8, offset: 1176)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_pri", scope: !547, file: !51, line: 639, baseType: !318, size: 8, offset: 1184)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_sec", scope: !547, file: !51, line: 640, baseType: !318, size: 8, offset: 1192)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_block_mode", scope: !547, file: !51, line: 641, baseType: !318, size: 8, offset: 1200)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_a", scope: !547, file: !51, line: 642, baseType: !318, size: 8, offset: 1208)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_b", scope: !547, file: !51, line: 643, baseType: !318, size: 8, offset: 1216)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_c", scope: !547, file: !51, line: 644, baseType: !318, size: 8, offset: 1224)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_d", scope: !547, file: !51, line: 645, baseType: !318, size: 8, offset: 1232)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "lna", scope: !547, file: !51, line: 647, baseType: !331, size: 32, offset: 1248)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !547, file: !51, line: 650, baseType: !601, size: 296, offset: 1280)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_fe_stats", file: !6, line: 825, size: 296, elements: !602)
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !601, file: !6, line: 826, baseType: !320, size: 8)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !601, file: !6, line: 827, baseType: !605, size: 288, offset: 8)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !606, size: 288, elements: !616)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_stats", file: !6, line: 803, size: 72, elements: !607)
!607 = !{!608, !609}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !606, file: !6, line: 804, baseType: !320, size: 8)
!609 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !6, line: 805, baseType: !610, size: 64, offset: 8)
!610 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !606, file: !6, line: 805, size: 64, elements: !611)
!611 = !{!612, !613}
!612 = !DIDerivedType(tag: DW_TAG_member, name: "uvalue", scope: !610, file: !6, line: 806, baseType: !336, size: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "svalue", scope: !610, file: !6, line: 807, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !321, line: 30, baseType: !615)
!615 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!616 = !{!617}
!617 = !DISubrange(count: 4)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "cnr", scope: !547, file: !51, line: 651, baseType: !601, size: 296, offset: 1576)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_error", scope: !547, file: !51, line: 652, baseType: !601, size: 296, offset: 1872)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_count", scope: !547, file: !51, line: 653, baseType: !601, size: 296, offset: 2168)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_error", scope: !547, file: !51, line: 654, baseType: !601, size: 296, offset: 2464)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_count", scope: !547, file: !51, line: 655, baseType: !601, size: 296, offset: 2760)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "block_error", scope: !547, file: !51, line: 656, baseType: !601, size: 296, offset: 3056)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !547, file: !51, line: 657, baseType: !601, size: 296, offset: 3352)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !482, file: !51, line: 466, baseType: !626, size: 64, offset: 2048)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DISubroutineType(types: !628)
!628 = !{!327, !464, !526}
!629 = !DIDerivedType(tag: DW_TAG_member, name: "read_ber", scope: !482, file: !51, line: 467, baseType: !630, size: 64, offset: 2112)
!630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !631, size: 64)
!631 = !DISubroutineType(types: !632)
!632 = !{!327, !464, !633}
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "read_signal_strength", scope: !482, file: !51, line: 468, baseType: !635, size: 64, offset: 2176)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!327, !464, !638}
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "read_snr", scope: !482, file: !51, line: 469, baseType: !635, size: 64, offset: 2240)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "read_ucblocks", scope: !482, file: !51, line: 470, baseType: !630, size: 64, offset: 2304)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_reset_overload", scope: !482, file: !51, line: 472, baseType: !510, size: 64, offset: 2368)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_master_cmd", scope: !482, file: !51, line: 473, baseType: !643, size: 64, offset: 2432)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!327, !464, !646}
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_master_cmd", file: !6, line: 173, size: 56, elements: !648)
!648 = !{!649, !653}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !647, file: !6, line: 174, baseType: !650, size: 48)
!650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 48, elements: !651)
!651 = !{!652}
!652 = !DISubrange(count: 6)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !647, file: !6, line: 175, baseType: !320, size: 8, offset: 48)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_recv_slave_reply", scope: !482, file: !51, line: 474, baseType: !655, size: 64, offset: 2496)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DISubroutineType(types: !657)
!657 = !{!327, !464, !658}
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_slave_reply", file: !6, line: 195, size: 96, elements: !660)
!660 = !{!661, !663, !664}
!661 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !659, file: !6, line: 196, baseType: !662, size: 32)
!662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 32, elements: !616)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !659, file: !6, line: 197, baseType: !320, size: 8, offset: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !659, file: !6, line: 198, baseType: !327, size: 32, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_burst", scope: !482, file: !51, line: 475, baseType: !666, size: 64, offset: 2560)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!327, !464, !171}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "set_tone", scope: !482, file: !51, line: 477, baseType: !670, size: 64, offset: 2624)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!327, !464, !78}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltage", scope: !482, file: !51, line: 478, baseType: !674, size: 64, offset: 2688)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DISubroutineType(types: !676)
!676 = !{!327, !464, !73}
!677 = !DIDerivedType(tag: DW_TAG_member, name: "enable_high_lnb_voltage", scope: !482, file: !51, line: 480, baseType: !678, size: 64, offset: 2752)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DISubroutineType(types: !680)
!680 = !{!327, !464, !333}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "dishnetwork_send_legacy_command", scope: !482, file: !51, line: 481, baseType: !682, size: 64, offset: 2816)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!327, !464, !685}
!685 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !482, file: !51, line: 482, baseType: !687, size: 64, offset: 2880)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!327, !464, !327}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "ts_bus_ctrl", scope: !482, file: !51, line: 483, baseType: !687, size: 64, offset: 2944)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "set_lna", scope: !482, file: !51, line: 484, baseType: !510, size: 64, offset: 3008)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !482, file: !51, line: 490, baseType: !693, size: 64, offset: 3072)
!693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!694 = !DISubroutineType(types: !695)
!695 = !{!175, !464}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_ops", scope: !482, file: !51, line: 492, baseType: !697, size: 2304, offset: 3136)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_ops", file: !51, line: 226, size: 2304, elements: !698)
!698 = !{!699, !709, !710, !711, !712, !713, !714, !715, !726, !730, !731, !732, !733, !734, !735, !740, !745, !749}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !697, file: !51, line: 228, baseType: !700, size: 1216)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_info", file: !51, line: 88, size: 1216, elements: !701)
!701 = !{!702, !703, !704, !705, !706, !707, !708}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !700, file: !51, line: 89, baseType: !488, size: 1024)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !700, file: !51, line: 91, baseType: !331, size: 32, offset: 1024)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !700, file: !51, line: 92, baseType: !331, size: 32, offset: 1056)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_step_hz", scope: !700, file: !51, line: 93, baseType: !331, size: 32, offset: 1088)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_min", scope: !700, file: !51, line: 95, baseType: !331, size: 32, offset: 1120)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_max", scope: !700, file: !51, line: 96, baseType: !331, size: 32, offset: 1152)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_step", scope: !700, file: !51, line: 97, baseType: !331, size: 32, offset: 1184)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !697, file: !51, line: 230, baseType: !504, size: 64, offset: 1216)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !697, file: !51, line: 231, baseType: !510, size: 64, offset: 1280)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !697, file: !51, line: 232, baseType: !510, size: 64, offset: 1344)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !697, file: !51, line: 233, baseType: !510, size: 64, offset: 1408)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !697, file: !51, line: 234, baseType: !510, size: 64, offset: 1472)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !697, file: !51, line: 237, baseType: !510, size: 64, offset: 1536)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "set_analog_params", scope: !697, file: !51, line: 238, baseType: !716, size: 64, offset: 1600)
!716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !717, size: 64)
!717 = !DISubroutineType(types: !718)
!718 = !{!327, !464, !719}
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !720, size: 64)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_parameters", file: !51, line: 114, size: 192, elements: !721)
!721 = !{!722, !723, !724, !725}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !720, file: !51, line: 115, baseType: !7, size: 32)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !720, file: !51, line: 116, baseType: !7, size: 32, offset: 32)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "audmode", scope: !720, file: !51, line: 117, baseType: !7, size: 32, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !720, file: !51, line: 118, baseType: !335, size: 64, offset: 128)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !697, file: !51, line: 240, baseType: !727, size: 64, offset: 1664)
!727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!728 = !DISubroutineType(types: !729)
!729 = !{!327, !464, !317}
!730 = !DIDerivedType(tag: DW_TAG_member, name: "get_frequency", scope: !697, file: !51, line: 242, baseType: !630, size: 64, offset: 1728)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "get_bandwidth", scope: !697, file: !51, line: 243, baseType: !630, size: 64, offset: 1792)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "get_if_frequency", scope: !697, file: !51, line: 244, baseType: !630, size: 64, offset: 1856)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !697, file: !51, line: 248, baseType: !630, size: 64, offset: 1920)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "get_rf_strength", scope: !697, file: !51, line: 249, baseType: !635, size: 64, offset: 1984)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !697, file: !51, line: 250, baseType: !736, size: 64, offset: 2048)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DISubroutineType(types: !738)
!738 = !{!327, !464, !739}
!739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "calc_regs", scope: !697, file: !51, line: 258, baseType: !741, size: 64, offset: 2112)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DISubroutineType(types: !743)
!743 = !{!327, !464, !744, !327}
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "set_frequency", scope: !697, file: !51, line: 267, baseType: !746, size: 64, offset: 2176)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!327, !464, !331}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "set_bandwidth", scope: !697, file: !51, line: 268, baseType: !746, size: 64, offset: 2240)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "analog_ops", scope: !482, file: !51, line: 493, baseType: !751, size: 576, offset: 5440)
!751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_ops", file: !51, line: 302, size: 576, elements: !752)
!752 = !{!753, !757, !761, !762, !763, !764, !765, !766, !767}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !751, file: !51, line: 304, baseType: !754, size: 64)
!754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_info", file: !51, line: 276, size: 64, elements: !755)
!755 = !{!756}
!756 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !754, file: !51, line: 277, baseType: !368, size: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !751, file: !51, line: 306, baseType: !758, size: 64, offset: 64)
!758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !759, size: 64)
!759 = !DISubroutineType(types: !760)
!760 = !{null, !464, !719}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "has_signal", scope: !751, file: !51, line: 308, baseType: !635, size: 64, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !751, file: !51, line: 309, baseType: !736, size: 64, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_status", scope: !751, file: !51, line: 310, baseType: !504, size: 64, offset: 256)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "standby", scope: !751, file: !51, line: 311, baseType: !504, size: 64, offset: 320)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !751, file: !51, line: 312, baseType: !504, size: 64, offset: 384)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !751, file: !51, line: 313, baseType: !687, size: 64, offset: 448)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !751, file: !51, line: 316, baseType: !727, size: 64, offset: 512)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "dvb", scope: !465, file: !51, line: 689, baseType: !769, size: 64, offset: 6080)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_adapter", file: !272, line: 101, size: 960, elements: !771)
!771 = !{!772, !773, !779, !780, !781, !783, !784, !4315, !4316, !4317, !4336}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !770, file: !272, line: 102, baseType: !327, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !770, file: !272, line: 103, baseType: !774, size: 128, offset: 64)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !324, line: 178, size: 128, elements: !775)
!775 = !{!776, !778}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !774, file: !324, line: 179, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !774, file: !324, line: 179, baseType: !777, size: 64, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "device_list", scope: !770, file: !272, line: 104, baseType: !774, size: 128, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !770, file: !272, line: 105, baseType: !346, size: 64, offset: 320)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "proposed_mac", scope: !770, file: !272, line: 106, baseType: !782, size: 48, offset: 384)
!782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 48, elements: !651)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !770, file: !272, line: 107, baseType: !317, size: 64, offset: 448)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !770, file: !272, line: 109, baseType: !785, size: 64, offset: 512)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !237, line: 461, size: 5568, elements: !787)
!787 = !{!788, !3772, !3773, !3776, !3777, !3828, !3916, !3917, !3918, !3919, !3920, !3929, !4034, !4047, !4242, !4243, !4247, !4249, !4250, !4251, !4255, !4261, !4262, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4303, !4304, !4305, !4308, !4311, !4312, !4313, !4314}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !786, file: !237, line: 462, baseType: !789, size: 512)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !790, line: 64, size: 512, elements: !791)
!790 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!791 = !{!792, !793, !794, !796, !851, !3627, !3766, !3767, !3768, !3769, !3770, !3771}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !789, file: !790, line: 65, baseType: !346, size: 64)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !789, file: !790, line: 66, baseType: !774, size: 128, offset: 64)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !789, file: !790, line: 67, baseType: !795, size: 64, offset: 192)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !789, file: !790, line: 68, baseType: !797, size: 64, offset: 256)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !790, line: 192, size: 704, elements: !799)
!799 = !{!800, !801, !817, !818}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !798, file: !790, line: 193, baseType: !774, size: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !798, file: !790, line: 194, baseType: !802, offset: 128)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !803, line: 83, baseType: !804)
!803 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !803, line: 71, elements: !805)
!805 = !{!806}
!806 = !DIDerivedType(tag: DW_TAG_member, scope: !804, file: !803, line: 72, baseType: !807)
!807 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !804, file: !803, line: 72, elements: !808)
!808 = !{!809}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !807, file: !803, line: 73, baseType: !810)
!810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !803, line: 20, elements: !811)
!811 = !{!812}
!812 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !810, file: !803, line: 21, baseType: !813)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !814, line: 25, baseType: !815)
!814 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!815 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !814, line: 25, elements: !816)
!816 = !{}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !798, file: !790, line: 195, baseType: !789, size: 512, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !798, file: !790, line: 196, baseType: !819, size: 64, offset: 640)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !821)
!821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !790, line: 156, size: 192, elements: !822)
!822 = !{!823, !828, !833}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !821, file: !790, line: 157, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DISubroutineType(types: !827)
!827 = !{!327, !797, !795}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !821, file: !790, line: 158, baseType: !829, size: 64, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !830)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = !DISubroutineType(types: !832)
!832 = !{!346, !797, !795}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !821, file: !790, line: 159, baseType: !834, size: 64, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !835)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = !DISubroutineType(types: !837)
!837 = !{!327, !797, !795, !838}
!838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !839, size: 64)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !790, line: 148, size: 20736, elements: !840)
!840 = !{!841, !843, !845, !846, !850}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !839, file: !790, line: 149, baseType: !842, size: 192)
!842 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 192, elements: !580)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !839, file: !790, line: 150, baseType: !844, size: 4096, offset: 192)
!844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 4096, elements: !432)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !839, file: !790, line: 151, baseType: !327, size: 32, offset: 4288)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !839, file: !790, line: 152, baseType: !847, size: 16384, offset: 4320)
!847 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 16384, elements: !848)
!848 = !{!849}
!849 = !DISubrange(count: 2048)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !839, file: !790, line: 153, baseType: !327, size: 32, offset: 20704)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !789, file: !790, line: 69, baseType: !852, size: 64, offset: 320)
!852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !790, line: 138, size: 448, elements: !854)
!854 = !{!855, !859, !886, !888, !3589, !3617, !3621}
!855 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !853, file: !790, line: 139, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DISubroutineType(types: !858)
!858 = !{null, !795}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !853, file: !790, line: 140, baseType: !860, size: 64, offset: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !863, line: 230, size: 128, elements: !864)
!863 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!864 = !{!865, !879}
!865 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !862, file: !863, line: 231, baseType: !866, size: 64)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DISubroutineType(types: !868)
!868 = !{!869, !795, !873, !368}
!869 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !324, line: 60, baseType: !870)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !871, line: 73, baseType: !872)
!871 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !871, line: 15, baseType: !333)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !863, line: 30, size: 128, elements: !875)
!875 = !{!876, !877}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !874, file: !863, line: 31, baseType: !346, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !874, file: !863, line: 32, baseType: !878, size: 16, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !324, line: 19, baseType: !330)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !862, file: !863, line: 232, baseType: !880, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DISubroutineType(types: !882)
!882 = !{!869, !795, !873, !346, !883}
!883 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !324, line: 55, baseType: !884)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !871, line: 72, baseType: !885)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !871, line: 16, baseType: !685)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !853, file: !790, line: 141, baseType: !887, size: 64, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !853, file: !790, line: 142, baseType: !889, size: 64, offset: 192)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !892)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !863, line: 84, size: 320, elements: !893)
!893 = !{!894, !895, !899, !3586, !3587}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !892, file: !863, line: 85, baseType: !346, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !892, file: !863, line: 86, baseType: !896, size: 64, offset: 64)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!878, !795, !873, !327}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !892, file: !863, line: 88, baseType: !900, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!878, !795, !903, !327}
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !863, line: 168, size: 448, elements: !905)
!905 = !{!906, !907, !908, !909, !3581, !3582}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !904, file: !863, line: 169, baseType: !874, size: 128)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !904, file: !863, line: 170, baseType: !883, size: 64, offset: 128)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !904, file: !863, line: 171, baseType: !317, size: 64, offset: 192)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !904, file: !863, line: 172, baseType: !910, size: 64, offset: 256)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!869, !913, !795, !903, !368, !1079, !883}
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !208, line: 916, size: 1856, align: 32, elements: !915)
!915 = !{!916, !934, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3564, !3565, !3574, !3575, !3576, !3577, !3578, !3579, !3580}
!916 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !914, file: !208, line: 920, baseType: !917, size: 128)
!917 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !914, file: !208, line: 917, size: 128, elements: !918)
!918 = !{!919, !925}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !917, file: !208, line: 918, baseType: !920, size: 64)
!920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !921, line: 58, size: 64, elements: !922)
!921 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!922 = !{!923}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !920, file: !921, line: 59, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !917, file: !208, line: 919, baseType: !926, size: 128, align: 64)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !324, line: 216, size: 128, align: 64, elements: !927)
!927 = !{!928, !930}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !926, file: !324, line: 217, baseType: !929, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !926, size: 64)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !926, file: !324, line: 218, baseType: !931, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!932 = !DISubroutineType(types: !933)
!933 = !{null, !929}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !914, file: !208, line: 921, baseType: !935, size: 128, offset: 128)
!935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !936, line: 8, size: 128, elements: !937)
!936 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!937 = !{!938, !942}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !935, file: !936, line: 9, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !941, line: 18, flags: DIFlagFwdDecl)
!941 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!942 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !935, file: !936, line: 10, baseType: !943, size: 64, offset: 64)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !941, line: 89, size: 1536, elements: !945)
!945 = !{!946, !947, !957, !965, !966, !981, !3515, !3517, !3529, !3530, !3531, !3532, !3533, !3538, !3539, !3540}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !944, file: !941, line: 91, baseType: !7, size: 32)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !944, file: !941, line: 92, baseType: !948, size: 32, offset: 32)
!948 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !949, line: 277, baseType: !950)
!949 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !949, line: 277, size: 32, elements: !951)
!951 = !{!952}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !950, file: !949, line: 277, baseType: !953, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !949, line: 70, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !949, line: 65, size: 32, elements: !955)
!955 = !{!956}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !954, file: !949, line: 66, baseType: !7, size: 32)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !944, file: !941, line: 93, baseType: !958, size: 128, offset: 64)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !959, line: 38, size: 128, elements: !960)
!959 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!960 = !{!961, !963}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !958, file: !959, line: 39, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !958, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !958, file: !959, line: 39, baseType: !964, size: 64, offset: 64)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !944, file: !941, line: 94, baseType: !943, size: 64, offset: 192)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !944, file: !941, line: 95, baseType: !967, size: 128, offset: 256)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !941, line: 47, size: 128, elements: !968)
!968 = !{!969, !978}
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !967, file: !941, line: 48, baseType: !970, size: 64)
!970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !967, file: !941, line: 48, size: 64, elements: !971)
!971 = !{!972, !977}
!972 = !DIDerivedType(tag: DW_TAG_member, scope: !970, file: !941, line: 49, baseType: !973, size: 64)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !970, file: !941, line: 49, size: 64, elements: !974)
!974 = !{!975, !976}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !973, file: !941, line: 50, baseType: !331, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !973, file: !941, line: 50, baseType: !331, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !970, file: !941, line: 52, baseType: !335, size: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !967, file: !941, line: 54, baseType: !979, size: 64, offset: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !322)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !944, file: !941, line: 96, baseType: !982, size: 64, offset: 384)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !208, line: 610, size: 4224, elements: !984)
!984 = !{!985, !986, !987, !995, !1002, !1003, !1144, !3209, !3210, !3211, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3241, !3242, !3243, !3244, !3245, !3246, !3247, !3483, !3491, !3492, !3493, !3511, !3512, !3513, !3514}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !983, file: !208, line: 611, baseType: !878, size: 16)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !983, file: !208, line: 612, baseType: !330, size: 16, offset: 16)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !983, file: !208, line: 613, baseType: !988, size: 32, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !989, line: 23, baseType: !990)
!989 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!990 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !989, line: 21, size: 32, elements: !991)
!991 = !{!992}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !990, file: !989, line: 22, baseType: !993, size: 32)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !324, line: 32, baseType: !994)
!994 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !871, line: 49, baseType: !7)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !983, file: !208, line: 614, baseType: !996, size: 32, offset: 64)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !989, line: 28, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !989, line: 26, size: 32, elements: !998)
!998 = !{!999}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !997, file: !989, line: 27, baseType: !1000, size: 32)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !324, line: 33, baseType: !1001)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !871, line: 50, baseType: !7)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !983, file: !208, line: 615, baseType: !7, size: 32, offset: 96)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !983, file: !208, line: 622, baseType: !1004, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1006)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !208, line: 1864, size: 1536, align: 512, elements: !1007)
!1007 = !{!1008, !1012, !1022, !1026, !1032, !1036, !1040, !1044, !1048, !1052, !1056, !1057, !1063, !1067, !1091, !1120, !1124, !1130, !1135, !1139, !1140}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1006, file: !208, line: 1865, baseType: !1009, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!943, !982, !943, !7}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1006, file: !208, line: 1866, baseType: !1013, size: 64, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!346, !943, !982, !1016}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1018, line: 10, size: 128, elements: !1019)
!1018 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !{!1020, !1021}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1017, file: !1018, line: 11, baseType: !370, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1017, file: !1018, line: 12, baseType: !317, size: 64, offset: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1006, file: !208, line: 1867, baseType: !1023, size: 64, offset: 128)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!327, !982, !327}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1006, file: !208, line: 1868, baseType: !1027, size: 64, offset: 192)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!1030, !982, !327}
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !208, line: 581, flags: DIFlagFwdDecl)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1006, file: !208, line: 1870, baseType: !1033, size: 64, offset: 256)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!327, !943, !368, !327}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1006, file: !208, line: 1872, baseType: !1037, size: 64, offset: 320)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = !DISubroutineType(types: !1039)
!1039 = !{!327, !982, !943, !878, !524}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1006, file: !208, line: 1873, baseType: !1041, size: 64, offset: 384)
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1042 = !DISubroutineType(types: !1043)
!1043 = !{!327, !943, !982, !943}
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1006, file: !208, line: 1874, baseType: !1045, size: 64, offset: 448)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{!327, !982, !943}
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1006, file: !208, line: 1875, baseType: !1049, size: 64, offset: 512)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DISubroutineType(types: !1051)
!1051 = !{!327, !982, !943, !346}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1006, file: !208, line: 1876, baseType: !1053, size: 64, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DISubroutineType(types: !1055)
!1055 = !{!327, !982, !943, !878}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1006, file: !208, line: 1877, baseType: !1045, size: 64, offset: 640)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1006, file: !208, line: 1878, baseType: !1058, size: 64, offset: 704)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DISubroutineType(types: !1060)
!1060 = !{!327, !982, !943, !878, !1061}
!1061 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !324, line: 16, baseType: !1062)
!1062 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !324, line: 13, baseType: !331)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1006, file: !208, line: 1879, baseType: !1064, size: 64, offset: 768)
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DISubroutineType(types: !1066)
!1066 = !{!327, !982, !943, !982, !943, !7}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1006, file: !208, line: 1881, baseType: !1068, size: 64, offset: 832)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{!327, !943, !1071}
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !208, line: 219, size: 640, elements: !1073)
!1073 = !{!1074, !1075, !1076, !1077, !1078, !1081, !1088, !1089, !1090}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1072, file: !208, line: 220, baseType: !7, size: 32)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1072, file: !208, line: 221, baseType: !878, size: 16, offset: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1072, file: !208, line: 222, baseType: !988, size: 32, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1072, file: !208, line: 223, baseType: !996, size: 32, offset: 96)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1072, file: !208, line: 224, baseType: !1079, size: 64, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !324, line: 46, baseType: !1080)
!1080 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !871, line: 88, baseType: !615)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1072, file: !208, line: 225, baseType: !1082, size: 128, offset: 192)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1083, line: 13, size: 128, elements: !1084)
!1083 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1084 = !{!1085, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1082, file: !1083, line: 14, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1083, line: 8, baseType: !614)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1082, file: !1083, line: 15, baseType: !333, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1072, file: !208, line: 226, baseType: !1082, size: 128, offset: 320)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1072, file: !208, line: 227, baseType: !1082, size: 128, offset: 448)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1072, file: !208, line: 234, baseType: !913, size: 64, offset: 576)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1006, file: !208, line: 1882, baseType: !1092, size: 64, offset: 896)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!327, !1095, !1097, !331, !7}
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!1097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1098, size: 64)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1099, line: 22, size: 1152, elements: !1100)
!1099 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1100 = !{!1101, !1102, !1103, !1104, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1098, file: !1099, line: 23, baseType: !331, size: 32)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1098, file: !1099, line: 24, baseType: !878, size: 16, offset: 32)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1098, file: !1099, line: 25, baseType: !7, size: 32, offset: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1098, file: !1099, line: 26, baseType: !1105, size: 32, offset: 96)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !324, line: 104, baseType: !331)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1098, file: !1099, line: 27, baseType: !335, size: 64, offset: 128)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1098, file: !1099, line: 28, baseType: !335, size: 64, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1098, file: !1099, line: 37, baseType: !335, size: 64, offset: 256)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1098, file: !1099, line: 38, baseType: !1061, size: 32, offset: 320)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1098, file: !1099, line: 39, baseType: !1061, size: 32, offset: 352)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1098, file: !1099, line: 40, baseType: !988, size: 32, offset: 384)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1098, file: !1099, line: 41, baseType: !996, size: 32, offset: 416)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1098, file: !1099, line: 42, baseType: !1079, size: 64, offset: 448)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1098, file: !1099, line: 43, baseType: !1082, size: 128, offset: 512)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1098, file: !1099, line: 44, baseType: !1082, size: 128, offset: 640)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1098, file: !1099, line: 45, baseType: !1082, size: 128, offset: 768)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1098, file: !1099, line: 46, baseType: !1082, size: 128, offset: 896)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1098, file: !1099, line: 47, baseType: !335, size: 64, offset: 1024)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1098, file: !1099, line: 48, baseType: !335, size: 64, offset: 1088)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1006, file: !208, line: 1883, baseType: !1121, size: 64, offset: 960)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DISubroutineType(types: !1123)
!1123 = !{!869, !943, !368, !883}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1006, file: !208, line: 1884, baseType: !1125, size: 64, offset: 1024)
!1125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64)
!1126 = !DISubroutineType(types: !1127)
!1127 = !{!327, !982, !1128, !335, !335}
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !208, line: 50, flags: DIFlagFwdDecl)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1006, file: !208, line: 1886, baseType: !1131, size: 64, offset: 1088)
!1131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1132, size: 64)
!1132 = !DISubroutineType(types: !1133)
!1133 = !{!327, !982, !1134, !327}
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1006, file: !208, line: 1887, baseType: !1136, size: 64, offset: 1152)
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1137, size: 64)
!1137 = !DISubroutineType(types: !1138)
!1138 = !{!327, !982, !943, !913, !7, !878}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1006, file: !208, line: 1890, baseType: !1053, size: 64, offset: 1216)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1006, file: !208, line: 1891, baseType: !1141, size: 64, offset: 1280)
!1141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1142, size: 64)
!1142 = !DISubroutineType(types: !1143)
!1143 = !{!327, !982, !1030, !327}
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !983, file: !208, line: 623, baseType: !1145, size: 64, offset: 192)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !208, line: 1416, size: 9472, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152, !1153, !1200, !2817, !2899, !2982, !2986, !2987, !2988, !2989, !2990, !2991, !2992, !2993, !2998, !3002, !3003, !3006, !3007, !3010, !3011, !3012, !3053, !3079, !3080, !3081, !3082, !3083, !3084, !3087, !3089, !3096, !3097, !3099, !3100, !3101, !3160, !3161, !3176, !3177, !3178, !3179, !3180, !3183, !3184, !3185, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1146, file: !208, line: 1417, baseType: !774, size: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1146, file: !208, line: 1418, baseType: !1061, size: 32, offset: 128)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1146, file: !208, line: 1419, baseType: !322, size: 8, offset: 160)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1146, file: !208, line: 1420, baseType: !685, size: 64, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1146, file: !208, line: 1421, baseType: !1079, size: 64, offset: 256)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1146, file: !208, line: 1422, baseType: !1154, size: 64, offset: 320)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !208, line: 2228, size: 576, elements: !1156)
!1156 = !{!1157, !1158, !1159, !1166, !1170, !1174, !1178, !1179, !1180, !1190, !1193, !1194, !1195, !1197, !1198, !1199}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1155, file: !208, line: 2229, baseType: !346, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1155, file: !208, line: 2230, baseType: !327, size: 32, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1155, file: !208, line: 2238, baseType: !1160, size: 64, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = !DISubroutineType(types: !1162)
!1162 = !{!327, !1163}
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1165, line: 28, flags: DIFlagFwdDecl)
!1165 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1155, file: !208, line: 2239, baseType: !1167, size: 64, offset: 192)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1169)
!1169 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !208, line: 70, flags: DIFlagFwdDecl)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1155, file: !208, line: 2240, baseType: !1171, size: 64, offset: 256)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!943, !1154, !327, !346, !317}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1155, file: !208, line: 2242, baseType: !1175, size: 64, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{null, !1145}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1155, file: !208, line: 2243, baseType: !350, size: 64, offset: 384)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1155, file: !208, line: 2244, baseType: !1154, size: 64, offset: 448)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1155, file: !208, line: 2245, baseType: !1181, size: 64, offset: 512)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !324, line: 182, size: 64, elements: !1182)
!1182 = !{!1183}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1181, file: !324, line: 183, baseType: !1184, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !324, line: 186, size: 128, elements: !1186)
!1186 = !{!1187, !1188}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1185, file: !324, line: 187, baseType: !1184, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1185, file: !324, line: 187, baseType: !1189, size: 64, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1184, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1155, file: !208, line: 2247, baseType: !1191, offset: 576)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1192, line: 187, elements: !816)
!1192 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1155, file: !208, line: 2248, baseType: !1191, offset: 576)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1155, file: !208, line: 2249, baseType: !1191, offset: 576)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1155, file: !208, line: 2250, baseType: !1196, offset: 576)
!1196 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1191, elements: !580)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1155, file: !208, line: 2252, baseType: !1191, offset: 576)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1155, file: !208, line: 2253, baseType: !1191, offset: 576)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1155, file: !208, line: 2254, baseType: !1191, offset: 576)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1146, file: !208, line: 1423, baseType: !1201, size: 64, offset: 384)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !208, line: 1935, size: 1472, elements: !1204)
!1204 = !{!1205, !1209, !1213, !1214, !1218, !1224, !1228, !1229, !1230, !1234, !1238, !1239, !1240, !1241, !1247, !1252, !1253, !1260, !1261, !1262, !1263, !2801, !2816}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1203, file: !208, line: 1936, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{!982, !1145}
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1203, file: !208, line: 1937, baseType: !1210, size: 64, offset: 64)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DISubroutineType(types: !1212)
!1212 = !{null, !982}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1203, file: !208, line: 1938, baseType: !1210, size: 64, offset: 128)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1203, file: !208, line: 1940, baseType: !1215, size: 64, offset: 192)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{null, !982, !327}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1203, file: !208, line: 1941, baseType: !1219, size: 64, offset: 256)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{!327, !982, !1222}
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !208, line: 289, flags: DIFlagFwdDecl)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1203, file: !208, line: 1942, baseType: !1225, size: 64, offset: 320)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!327, !982}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1203, file: !208, line: 1943, baseType: !1210, size: 64, offset: 384)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1203, file: !208, line: 1944, baseType: !1175, size: 64, offset: 448)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1203, file: !208, line: 1945, baseType: !1231, size: 64, offset: 512)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!327, !1145, !327}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1203, file: !208, line: 1946, baseType: !1235, size: 64, offset: 576)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!327, !1145}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1203, file: !208, line: 1947, baseType: !1235, size: 64, offset: 640)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1203, file: !208, line: 1948, baseType: !1235, size: 64, offset: 704)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1203, file: !208, line: 1949, baseType: !1235, size: 64, offset: 768)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1203, file: !208, line: 1950, baseType: !1242, size: 64, offset: 832)
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = !DISubroutineType(types: !1244)
!1244 = !{!327, !943, !1245}
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !208, line: 57, flags: DIFlagFwdDecl)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1203, file: !208, line: 1951, baseType: !1248, size: 64, offset: 896)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!327, !1145, !1251, !368}
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1203, file: !208, line: 1952, baseType: !1175, size: 64, offset: 960)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1203, file: !208, line: 1954, baseType: !1254, size: 64, offset: 1024)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{!327, !1257, !943}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1259, line: 539, flags: DIFlagFwdDecl)
!1259 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1203, file: !208, line: 1955, baseType: !1254, size: 64, offset: 1088)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1203, file: !208, line: 1956, baseType: !1254, size: 64, offset: 1152)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1203, file: !208, line: 1957, baseType: !1254, size: 64, offset: 1216)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1203, file: !208, line: 1963, baseType: !1264, size: 64, offset: 1280)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DISubroutineType(types: !1266)
!1266 = !{!327, !1145, !1267, !323}
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1269, line: 68, size: 512, align: 128, elements: !1270)
!1269 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1270 = !{!1271, !1272, !2793, !2800}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1268, file: !1269, line: 69, baseType: !685, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, scope: !1268, file: !1269, line: 77, baseType: !1273, size: 320, offset: 64)
!1273 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1268, file: !1269, line: 77, size: 320, elements: !1274)
!1274 = !{!1275, !1456, !1461, !1489, !1497, !1503, !2785, !2792}
!1275 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 78, baseType: !1276, size: 320)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 78, size: 320, elements: !1277)
!1277 = !{!1278, !1279, !1454, !1455}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1276, file: !1269, line: 84, baseType: !774, size: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1276, file: !1269, line: 86, baseType: !1280, size: 64, offset: 128)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !208, line: 451, size: 1216, align: 64, elements: !1282)
!1282 = !{!1283, !1284, !1291, !1292, !1293, !1308, !1324, !1325, !1326, !1327, !1447, !1448, !1451, !1452, !1453}
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1281, file: !208, line: 452, baseType: !982, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1281, file: !208, line: 453, baseType: !1285, size: 128, offset: 64)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1286, line: 292, size: 128, elements: !1287)
!1286 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1287 = !{!1288, !1289, !1290}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1285, file: !1286, line: 293, baseType: !802)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1285, file: !1286, line: 295, baseType: !323, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1285, file: !1286, line: 296, baseType: !317, size: 64, offset: 64)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1281, file: !208, line: 454, baseType: !323, size: 32, offset: 192)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1281, file: !208, line: 455, baseType: !477, size: 32, offset: 224)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1281, file: !208, line: 460, baseType: !1294, size: 128, offset: 256)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1295, line: 125, size: 128, elements: !1296)
!1295 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1296 = !{!1297, !1307}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1294, file: !1295, line: 126, baseType: !1298, size: 64)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1295, line: 31, size: 64, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1298, file: !1295, line: 32, baseType: !1301, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1302, size: 64)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1295, line: 24, size: 192, align: 64, elements: !1303)
!1303 = !{!1304, !1305, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1302, file: !1295, line: 25, baseType: !685, size: 64)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1302, file: !1295, line: 26, baseType: !1301, size: 64, offset: 64)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1302, file: !1295, line: 27, baseType: !1301, size: 64, offset: 128)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1294, file: !1295, line: 127, baseType: !1301, size: 64, offset: 64)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1281, file: !208, line: 461, baseType: !1309, size: 256, offset: 384)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1310, line: 35, size: 256, elements: !1311)
!1310 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1311 = !{!1312, !1320, !1321, !1323}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1309, file: !1310, line: 36, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1314, line: 13, baseType: !1315)
!1314 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1315 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !324, line: 175, baseType: !1316)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !324, line: 173, size: 64, elements: !1317)
!1317 = !{!1318}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1316, file: !324, line: 174, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !319, line: 22, baseType: !614)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1309, file: !1310, line: 42, baseType: !1313, size: 64, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1309, file: !1310, line: 46, baseType: !1322, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !803, line: 29, baseType: !810)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1309, file: !1310, line: 47, baseType: !774, size: 128, offset: 128)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1281, file: !208, line: 462, baseType: !685, size: 64, offset: 640)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1281, file: !208, line: 463, baseType: !685, size: 64, offset: 704)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1281, file: !208, line: 464, baseType: !685, size: 64, offset: 768)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1281, file: !208, line: 465, baseType: !1328, size: 64, offset: 832)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !208, line: 367, size: 1408, elements: !1331)
!1331 = !{!1332, !1336, !1340, !1344, !1348, !1352, !1358, !1364, !1368, !1373, !1377, !1381, !1385, !1411, !1415, !1421, !1422, !1423, !1427, !1432, !1436, !1443}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1330, file: !208, line: 368, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{!327, !1267, !1222}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1330, file: !208, line: 369, baseType: !1337, size: 64, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1338 = !DISubroutineType(types: !1339)
!1339 = !{!327, !913, !1267}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1330, file: !208, line: 372, baseType: !1341, size: 64, offset: 128)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DISubroutineType(types: !1343)
!1343 = !{!327, !1280, !1222}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1330, file: !208, line: 375, baseType: !1345, size: 64, offset: 192)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!327, !1267}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1330, file: !208, line: 381, baseType: !1349, size: 64, offset: 256)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{!327, !913, !1280, !777, !7}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1330, file: !208, line: 383, baseType: !1353, size: 64, offset: 320)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{null, !1356}
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !208, line: 290, flags: DIFlagFwdDecl)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1330, file: !208, line: 385, baseType: !1359, size: 64, offset: 384)
!1359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1360 = !DISubroutineType(types: !1361)
!1361 = !{!327, !913, !1280, !1079, !7, !7, !1362, !1363}
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1330, file: !208, line: 388, baseType: !1365, size: 64, offset: 448)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!327, !913, !1280, !1079, !7, !7, !1267, !317}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1330, file: !208, line: 393, baseType: !1369, size: 64, offset: 512)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!1372, !1280, !1372}
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !324, line: 125, baseType: !335)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1330, file: !208, line: 394, baseType: !1374, size: 64, offset: 576)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = !DISubroutineType(types: !1376)
!1376 = !{null, !1267, !7, !7}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1330, file: !208, line: 395, baseType: !1378, size: 64, offset: 640)
!1378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1379, size: 64)
!1379 = !DISubroutineType(types: !1380)
!1380 = !{!327, !1267, !323}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1330, file: !208, line: 396, baseType: !1382, size: 64, offset: 704)
!1382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1383, size: 64)
!1383 = !DISubroutineType(types: !1384)
!1384 = !{null, !1267}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1330, file: !208, line: 397, baseType: !1386, size: 64, offset: 768)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!869, !1389, !1409}
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !208, line: 320, size: 384, elements: !1391)
!1391 = !{!1392, !1393, !1394, !1398, !1399, !1400, !1401, !1402}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1390, file: !208, line: 321, baseType: !913, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1390, file: !208, line: 326, baseType: !1079, size: 64, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1390, file: !208, line: 327, baseType: !1395, size: 64, offset: 128)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DISubroutineType(types: !1397)
!1397 = !{null, !1389, !333, !333}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1390, file: !208, line: 328, baseType: !317, size: 64, offset: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1390, file: !208, line: 329, baseType: !327, size: 32, offset: 256)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1390, file: !208, line: 330, baseType: !328, size: 16, offset: 288)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1390, file: !208, line: 331, baseType: !328, size: 16, offset: 304)
!1402 = !DIDerivedType(tag: DW_TAG_member, scope: !1390, file: !208, line: 332, baseType: !1403, size: 64, offset: 320)
!1403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1390, file: !208, line: 332, size: 64, elements: !1404)
!1404 = !{!1405, !1406}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1403, file: !208, line: 333, baseType: !7, size: 32)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1403, file: !208, line: 334, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !208, line: 334, flags: DIFlagFwdDecl)
!1409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1410, size: 64)
!1410 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !208, line: 64, flags: DIFlagFwdDecl)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1330, file: !208, line: 402, baseType: !1412, size: 64, offset: 832)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DISubroutineType(types: !1414)
!1414 = !{!327, !1280, !1267, !1267, !183}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1330, file: !208, line: 404, baseType: !1416, size: 64, offset: 896)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DISubroutineType(types: !1418)
!1418 = !{!524, !1267, !1419}
!1419 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1420, line: 305, baseType: !7)
!1420 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1330, file: !208, line: 405, baseType: !1382, size: 64, offset: 960)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1330, file: !208, line: 406, baseType: !1345, size: 64, offset: 1024)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1330, file: !208, line: 407, baseType: !1424, size: 64, offset: 1088)
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{!327, !1267, !685, !685}
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1330, file: !208, line: 409, baseType: !1428, size: 64, offset: 1152)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = !DISubroutineType(types: !1430)
!1430 = !{null, !1267, !1431, !1431}
!1431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !524, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1330, file: !208, line: 410, baseType: !1433, size: 64, offset: 1216)
!1433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1434, size: 64)
!1434 = !DISubroutineType(types: !1435)
!1435 = !{!327, !1280, !1267}
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1330, file: !208, line: 413, baseType: !1437, size: 64, offset: 1280)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = !DISubroutineType(types: !1439)
!1439 = !{!327, !1440, !913, !1442}
!1440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1441, size: 64)
!1441 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !208, line: 61, flags: DIFlagFwdDecl)
!1442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1330, file: !208, line: 415, baseType: !1444, size: 64, offset: 1344)
!1444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1445, size: 64)
!1445 = !DISubroutineType(types: !1446)
!1446 = !{null, !913}
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1281, file: !208, line: 466, baseType: !685, size: 64, offset: 896)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1281, file: !208, line: 467, baseType: !1449, size: 32, offset: 960)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1450, line: 8, baseType: !331)
!1450 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1281, file: !208, line: 468, baseType: !802, offset: 992)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1281, file: !208, line: 469, baseType: !774, size: 128, offset: 1024)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1281, file: !208, line: 470, baseType: !317, size: 64, offset: 1152)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1276, file: !1269, line: 87, baseType: !685, size: 64, offset: 192)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1276, file: !1269, line: 94, baseType: !685, size: 64, offset: 256)
!1456 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 96, baseType: !1457, size: 64)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 96, size: 64, elements: !1458)
!1458 = !{!1459}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1457, file: !1269, line: 101, baseType: !1460, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !324, line: 143, baseType: !335)
!1461 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 103, baseType: !1462, size: 320)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 103, size: 320, elements: !1463)
!1463 = !{!1464, !1474, !1477, !1478}
!1464 = !DIDerivedType(tag: DW_TAG_member, scope: !1462, file: !1269, line: 104, baseType: !1465, size: 128)
!1465 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1462, file: !1269, line: 104, size: 128, elements: !1466)
!1466 = !{!1467, !1468}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1465, file: !1269, line: 105, baseType: !774, size: 128)
!1468 = !DIDerivedType(tag: DW_TAG_member, scope: !1465, file: !1269, line: 106, baseType: !1469, size: 128)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1465, file: !1269, line: 106, size: 128, elements: !1470)
!1470 = !{!1471, !1472, !1473}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1469, file: !1269, line: 107, baseType: !1267, size: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1469, file: !1269, line: 109, baseType: !327, size: 32, offset: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1469, file: !1269, line: 110, baseType: !327, size: 32, offset: 96)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1462, file: !1269, line: 117, baseType: !1475, size: 64, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1269, line: 117, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1462, file: !1269, line: 119, baseType: !317, size: 64, offset: 192)
!1478 = !DIDerivedType(tag: DW_TAG_member, scope: !1462, file: !1269, line: 120, baseType: !1479, size: 64, offset: 256)
!1479 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1462, file: !1269, line: 120, size: 64, elements: !1480)
!1480 = !{!1481, !1482, !1483}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1479, file: !1269, line: 121, baseType: !317, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1479, file: !1269, line: 122, baseType: !685, size: 64)
!1483 = !DIDerivedType(tag: DW_TAG_member, scope: !1479, file: !1269, line: 123, baseType: !1484, size: 32)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1479, file: !1269, line: 123, size: 32, elements: !1485)
!1485 = !{!1486, !1487, !1488}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1484, file: !1269, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1484, file: !1269, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1484, file: !1269, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1489 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 130, baseType: !1490, size: 192)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 130, size: 192, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1490, file: !1269, line: 131, baseType: !685, size: 64)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1490, file: !1269, line: 134, baseType: !322, size: 8, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1490, file: !1269, line: 135, baseType: !322, size: 8, offset: 72)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1490, file: !1269, line: 136, baseType: !477, size: 32, offset: 96)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1490, file: !1269, line: 137, baseType: !7, size: 32, offset: 128)
!1497 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 139, baseType: !1498, size: 256)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 139, size: 256, elements: !1499)
!1499 = !{!1500, !1501, !1502}
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1498, file: !1269, line: 140, baseType: !685, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1498, file: !1269, line: 141, baseType: !477, size: 32, offset: 64)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1498, file: !1269, line: 143, baseType: !774, size: 128, offset: 128)
!1503 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 145, baseType: !1504, size: 256)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 145, size: 256, elements: !1505)
!1505 = !{!1506, !1507, !1509, !1510, !2784}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1504, file: !1269, line: 146, baseType: !685, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1504, file: !1269, line: 147, baseType: !1508, size: 64, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1259, line: 509, baseType: !1267)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1504, file: !1269, line: 148, baseType: !685, size: 64, offset: 128)
!1510 = !DIDerivedType(tag: DW_TAG_member, scope: !1504, file: !1269, line: 149, baseType: !1511, size: 64, offset: 192)
!1511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1504, file: !1269, line: 149, size: 64, elements: !1512)
!1512 = !{!1513, !2783}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1511, file: !1269, line: 150, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1269, line: 388, size: 7296, elements: !1516)
!1516 = !{!1517, !2779}
!1517 = !DIDerivedType(tag: DW_TAG_member, scope: !1515, file: !1269, line: 389, baseType: !1518, size: 7296)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1515, file: !1269, line: 389, size: 7296, elements: !1519)
!1519 = !{!1520, !1558, !1559, !1560, !1564, !1565, !1566, !1567, !1568, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1609, !1615, !1618, !1664, !1665, !2763, !2764, !2767, !2768, !2769, !2772, !2773, !2774, !2777, !2778}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1518, file: !1269, line: 390, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1269, line: 305, size: 1472, elements: !1523)
!1523 = !{!1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1538, !1539, !1544, !1545, !1548, !1552, !1553, !1554, !1555, !1556}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1522, file: !1269, line: 308, baseType: !685, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1522, file: !1269, line: 309, baseType: !685, size: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1522, file: !1269, line: 313, baseType: !1521, size: 64, offset: 128)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1522, file: !1269, line: 313, baseType: !1521, size: 64, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1522, file: !1269, line: 315, baseType: !1302, size: 192, align: 64, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1522, file: !1269, line: 323, baseType: !685, size: 64, offset: 448)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1522, file: !1269, line: 327, baseType: !1514, size: 64, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1522, file: !1269, line: 333, baseType: !1532, size: 64, offset: 576)
!1532 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1259, line: 284, baseType: !1533)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1259, line: 284, size: 64, elements: !1534)
!1534 = !{!1535}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1533, file: !1259, line: 284, baseType: !1536, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1537, line: 19, baseType: !685)
!1537 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1522, file: !1269, line: 334, baseType: !685, size: 64, offset: 640)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1522, file: !1269, line: 343, baseType: !1540, size: 256, offset: 704)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1522, file: !1269, line: 340, size: 256, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1540, file: !1269, line: 341, baseType: !1302, size: 192, align: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1540, file: !1269, line: 342, baseType: !685, size: 64, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1522, file: !1269, line: 351, baseType: !774, size: 128, offset: 960)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1522, file: !1269, line: 353, baseType: !1546, size: 64, offset: 1088)
!1546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1547, size: 64)
!1547 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1269, line: 353, flags: DIFlagFwdDecl)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1522, file: !1269, line: 356, baseType: !1549, size: 64, offset: 1152)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1551)
!1551 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1269, line: 356, flags: DIFlagFwdDecl)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1522, file: !1269, line: 359, baseType: !685, size: 64, offset: 1216)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1522, file: !1269, line: 361, baseType: !913, size: 64, offset: 1280)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1522, file: !1269, line: 362, baseType: !317, size: 64, offset: 1344)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1522, file: !1269, line: 365, baseType: !1313, size: 64, offset: 1408)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1522, file: !1269, line: 373, baseType: !1557, offset: 1472)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1269, line: 296, elements: !816)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1518, file: !1269, line: 391, baseType: !1298, size: 64, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1518, file: !1269, line: 392, baseType: !335, size: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1518, file: !1269, line: 394, baseType: !1561, size: 64, offset: 192)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DISubroutineType(types: !1563)
!1563 = !{!685, !913, !685, !685, !685, !685}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1518, file: !1269, line: 398, baseType: !685, size: 64, offset: 256)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1518, file: !1269, line: 399, baseType: !685, size: 64, offset: 320)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1518, file: !1269, line: 405, baseType: !685, size: 64, offset: 384)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1518, file: !1269, line: 406, baseType: !685, size: 64, offset: 448)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1518, file: !1269, line: 407, baseType: !1569, size: 64, offset: 512)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1259, line: 286, baseType: !1571)
!1571 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1259, line: 286, size: 64, elements: !1572)
!1572 = !{!1573}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1571, file: !1259, line: 286, baseType: !1574, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1537, line: 18, baseType: !685)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1518, file: !1269, line: 416, baseType: !477, size: 32, offset: 576)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1518, file: !1269, line: 428, baseType: !477, size: 32, offset: 608)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1518, file: !1269, line: 437, baseType: !477, size: 32, offset: 640)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1518, file: !1269, line: 447, baseType: !477, size: 32, offset: 672)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1518, file: !1269, line: 450, baseType: !1313, size: 64, offset: 704)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1518, file: !1269, line: 452, baseType: !327, size: 32, offset: 768)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1518, file: !1269, line: 454, baseType: !802, offset: 800)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1518, file: !1269, line: 457, baseType: !1309, size: 256, offset: 832)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1518, file: !1269, line: 459, baseType: !774, size: 128, offset: 1088)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1518, file: !1269, line: 466, baseType: !685, size: 64, offset: 1216)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1518, file: !1269, line: 467, baseType: !685, size: 64, offset: 1280)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1518, file: !1269, line: 469, baseType: !685, size: 64, offset: 1344)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1518, file: !1269, line: 470, baseType: !685, size: 64, offset: 1408)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1518, file: !1269, line: 471, baseType: !1315, size: 64, offset: 1472)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1518, file: !1269, line: 472, baseType: !685, size: 64, offset: 1536)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1518, file: !1269, line: 473, baseType: !685, size: 64, offset: 1600)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1518, file: !1269, line: 474, baseType: !685, size: 64, offset: 1664)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1518, file: !1269, line: 475, baseType: !685, size: 64, offset: 1728)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1518, file: !1269, line: 477, baseType: !802, offset: 1792)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1518, file: !1269, line: 478, baseType: !685, size: 64, offset: 1792)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1518, file: !1269, line: 478, baseType: !685, size: 64, offset: 1856)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1518, file: !1269, line: 478, baseType: !685, size: 64, offset: 1920)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1518, file: !1269, line: 478, baseType: !685, size: 64, offset: 1984)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1518, file: !1269, line: 479, baseType: !685, size: 64, offset: 2048)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1518, file: !1269, line: 479, baseType: !685, size: 64, offset: 2112)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1518, file: !1269, line: 479, baseType: !685, size: 64, offset: 2176)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1518, file: !1269, line: 480, baseType: !685, size: 64, offset: 2240)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1518, file: !1269, line: 480, baseType: !685, size: 64, offset: 2304)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1518, file: !1269, line: 480, baseType: !685, size: 64, offset: 2368)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1518, file: !1269, line: 480, baseType: !685, size: 64, offset: 2432)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1518, file: !1269, line: 482, baseType: !1606, size: 2816, offset: 2496)
!1606 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 2816, elements: !1607)
!1607 = !{!1608}
!1608 = !DISubrange(count: 44)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1518, file: !1269, line: 488, baseType: !1610, size: 256, offset: 5312)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1611, line: 60, size: 256, elements: !1612)
!1611 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1612 = !{!1613}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1610, file: !1611, line: 61, baseType: !1614, size: 256)
!1614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1313, size: 256, elements: !616)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1518, file: !1269, line: 490, baseType: !1616, size: 64, offset: 5568)
!1616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1617, size: 64)
!1617 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1269, line: 490, flags: DIFlagFwdDecl)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1518, file: !1269, line: 493, baseType: !1619, size: 896, offset: 5632)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1620, line: 53, baseType: !1621)
!1620 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1620, line: 13, size: 896, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1629, !1630, !1637, !1638, !1658, !1659, !1660}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1621, file: !1620, line: 18, baseType: !335, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1621, file: !1620, line: 28, baseType: !1315, size: 64, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1621, file: !1620, line: 31, baseType: !1309, size: 256, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1621, file: !1620, line: 32, baseType: !1627, size: 64, offset: 384)
!1627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1628, size: 64)
!1628 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1620, line: 32, flags: DIFlagFwdDecl)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1621, file: !1620, line: 37, baseType: !330, size: 16, offset: 448)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1621, file: !1620, line: 40, baseType: !1631, size: 192, offset: 512)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1632, line: 53, size: 192, elements: !1633)
!1632 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1633 = !{!1634, !1635, !1636}
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1631, file: !1632, line: 54, baseType: !1313, size: 64)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1631, file: !1632, line: 55, baseType: !802, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1631, file: !1632, line: 59, baseType: !774, size: 128, offset: 64)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1621, file: !1620, line: 41, baseType: !317, size: 64, offset: 704)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1621, file: !1620, line: 42, baseType: !1639, size: 64, offset: 768)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1642, line: 13, size: 896, elements: !1643)
!1642 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1643 = !{!1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1641, file: !1642, line: 14, baseType: !317, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1641, file: !1642, line: 15, baseType: !685, size: 64, offset: 64)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1641, file: !1642, line: 17, baseType: !685, size: 64, offset: 128)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1641, file: !1642, line: 17, baseType: !685, size: 64, offset: 192)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1641, file: !1642, line: 19, baseType: !333, size: 64, offset: 256)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1641, file: !1642, line: 21, baseType: !333, size: 64, offset: 320)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1641, file: !1642, line: 22, baseType: !333, size: 64, offset: 384)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1641, file: !1642, line: 23, baseType: !333, size: 64, offset: 448)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1641, file: !1642, line: 24, baseType: !333, size: 64, offset: 512)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1641, file: !1642, line: 25, baseType: !333, size: 64, offset: 576)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1641, file: !1642, line: 26, baseType: !333, size: 64, offset: 640)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1641, file: !1642, line: 27, baseType: !333, size: 64, offset: 704)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1641, file: !1642, line: 28, baseType: !333, size: 64, offset: 768)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1641, file: !1642, line: 29, baseType: !333, size: 64, offset: 832)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1621, file: !1620, line: 44, baseType: !477, size: 32, offset: 832)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1621, file: !1620, line: 50, baseType: !328, size: 16, offset: 864)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1621, file: !1620, line: 51, baseType: !1661, size: 16, offset: 880)
!1661 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !319, line: 18, baseType: !1662)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !321, line: 23, baseType: !1663)
!1663 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1518, file: !1269, line: 495, baseType: !685, size: 64, offset: 6528)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1518, file: !1269, line: 497, baseType: !1666, size: 64, offset: 6592)
!1666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1667, size: 64)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1269, line: 381, size: 384, elements: !1668)
!1668 = !{!1669, !1670, !2762}
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1667, file: !1269, line: 382, baseType: !477, size: 32)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1667, file: !1269, line: 383, baseType: !1671, size: 128, offset: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1269, line: 376, size: 128, elements: !1672)
!1672 = !{!1673, !2760}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1671, file: !1269, line: 377, baseType: !1674, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1676, line: 640, size: 48640, elements: !1677)
!1676 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1677 = !{!1678, !1684, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1699, !1717, !1728, !1809, !1810, !1811, !1822, !1823, !1825, !1826, !1827, !1828, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1909, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1947, !1949, !1950, !1951, !1963, !1964, !1965, !1966, !1967, !1968, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1992, !1997, !2179, !2180, !2181, !2182, !2186, !2189, !2192, !2195, !2198, !2201, !2302, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2348, !2349, !2350, !2351, !2352, !2357, !2358, !2359, !2362, !2363, !2366, !2369, !2372, !2375, !2418, !2421, !2422, !2501, !2502, !2505, !2506, !2509, !2510, !2511, !2515, !2516, !2517, !2530, !2531, !2532, !2542, !2547, !2550, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1675, file: !1676, line: 646, baseType: !1679, size: 128)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1680, line: 56, size: 128, elements: !1681)
!1680 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1681 = !{!1682, !1683}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1679, file: !1680, line: 57, baseType: !685, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1679, file: !1680, line: 58, baseType: !331, size: 32, offset: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1675, file: !1676, line: 649, baseType: !1685, size: 64, offset: 128)
!1685 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !333)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1675, file: !1676, line: 657, baseType: !317, size: 64, offset: 192)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1675, file: !1676, line: 658, baseType: !472, size: 32, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1675, file: !1676, line: 660, baseType: !7, size: 32, offset: 288)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1675, file: !1676, line: 661, baseType: !7, size: 32, offset: 320)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1675, file: !1676, line: 684, baseType: !327, size: 32, offset: 352)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1675, file: !1676, line: 686, baseType: !327, size: 32, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1675, file: !1676, line: 687, baseType: !327, size: 32, offset: 416)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1675, file: !1676, line: 688, baseType: !327, size: 32, offset: 448)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1675, file: !1676, line: 689, baseType: !7, size: 32, offset: 480)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1675, file: !1676, line: 691, baseType: !1696, size: 64, offset: 512)
!1696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1697, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1698)
!1698 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1676, line: 691, flags: DIFlagFwdDecl)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1675, file: !1676, line: 692, baseType: !1700, size: 832, offset: 576)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1676, line: 451, size: 832, elements: !1701)
!1701 = !{!1702, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1700, file: !1676, line: 453, baseType: !1703, size: 128)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1676, line: 325, size: 128, elements: !1704)
!1704 = !{!1705, !1706}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1703, file: !1676, line: 326, baseType: !685, size: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1703, file: !1676, line: 327, baseType: !331, size: 32, offset: 64)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1700, file: !1676, line: 454, baseType: !1302, size: 192, align: 64, offset: 128)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1700, file: !1676, line: 455, baseType: !774, size: 128, offset: 320)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1700, file: !1676, line: 456, baseType: !7, size: 32, offset: 448)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1700, file: !1676, line: 458, baseType: !335, size: 64, offset: 512)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1700, file: !1676, line: 459, baseType: !335, size: 64, offset: 576)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1700, file: !1676, line: 460, baseType: !335, size: 64, offset: 640)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1700, file: !1676, line: 461, baseType: !335, size: 64, offset: 704)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1700, file: !1676, line: 463, baseType: !335, size: 64, offset: 768)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1700, file: !1676, line: 465, baseType: !1716, offset: 832)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1676, line: 415, elements: !816)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1675, file: !1676, line: 693, baseType: !1718, size: 384, offset: 1408)
!1718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1676, line: 489, size: 384, elements: !1719)
!1719 = !{!1720, !1721, !1722, !1723, !1724, !1725, !1726}
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1718, file: !1676, line: 490, baseType: !774, size: 128)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1718, file: !1676, line: 491, baseType: !685, size: 64, offset: 128)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1718, file: !1676, line: 492, baseType: !685, size: 64, offset: 192)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1718, file: !1676, line: 493, baseType: !7, size: 32, offset: 256)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1718, file: !1676, line: 494, baseType: !330, size: 16, offset: 288)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1718, file: !1676, line: 495, baseType: !330, size: 16, offset: 304)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1718, file: !1676, line: 497, baseType: !1727, size: 64, offset: 320)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1675, file: !1676, line: 697, baseType: !1729, size: 1792, offset: 1792)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1676, line: 507, size: 1792, elements: !1730)
!1730 = !{!1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1806, !1807}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1729, file: !1676, line: 508, baseType: !1302, size: 192, align: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1729, file: !1676, line: 515, baseType: !335, size: 64, offset: 192)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1729, file: !1676, line: 516, baseType: !335, size: 64, offset: 256)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1729, file: !1676, line: 517, baseType: !335, size: 64, offset: 320)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1729, file: !1676, line: 518, baseType: !335, size: 64, offset: 384)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1729, file: !1676, line: 519, baseType: !335, size: 64, offset: 448)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1729, file: !1676, line: 526, baseType: !1319, size: 64, offset: 512)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1729, file: !1676, line: 527, baseType: !335, size: 64, offset: 576)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1729, file: !1676, line: 528, baseType: !7, size: 32, offset: 640)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1729, file: !1676, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1729, file: !1676, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1729, file: !1676, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1729, file: !1676, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1729, file: !1676, line: 563, baseType: !1745, size: 512, offset: 704)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !191, line: 118, size: 512, elements: !1746)
!1746 = !{!1747, !1755, !1756, !1761, !1802, !1803, !1804, !1805}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1745, file: !191, line: 119, baseType: !1748, size: 256)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1749, line: 9, size: 256, elements: !1750)
!1749 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1750 = !{!1751, !1752}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1748, file: !1749, line: 10, baseType: !1302, size: 192, align: 64)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1748, file: !1749, line: 11, baseType: !1753, size: 64, offset: 192)
!1753 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1754, line: 29, baseType: !1319)
!1754 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1745, file: !191, line: 120, baseType: !1753, size: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1745, file: !191, line: 121, baseType: !1757, size: 64, offset: 320)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DISubroutineType(types: !1759)
!1759 = !{!190, !1760}
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1745, file: !191, line: 122, baseType: !1762, size: 64, offset: 384)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !191, line: 159, size: 512, align: 512, elements: !1764)
!1764 = !{!1765, !1783, !1784, !1787, !1792, !1793, !1797, !1801}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1763, file: !191, line: 160, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !191, line: 214, size: 4608, align: 512, elements: !1768)
!1768 = !{!1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1767, file: !191, line: 215, baseType: !1322)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1767, file: !191, line: 216, baseType: !7, size: 32)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1767, file: !191, line: 217, baseType: !7, size: 32, offset: 32)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1767, file: !191, line: 218, baseType: !7, size: 32, offset: 64)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1767, file: !191, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1767, file: !191, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1767, file: !191, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1767, file: !191, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1767, file: !191, line: 233, baseType: !1753, size: 64, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1767, file: !191, line: 234, baseType: !1760, size: 64, offset: 192)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1767, file: !191, line: 235, baseType: !1753, size: 64, offset: 256)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1767, file: !191, line: 236, baseType: !1760, size: 64, offset: 320)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1767, file: !191, line: 237, baseType: !1782, size: 4096, offset: 512)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1763, size: 4096, elements: !501)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1763, file: !191, line: 161, baseType: !7, size: 32, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1763, file: !191, line: 162, baseType: !1785, size: 32, offset: 96)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !324, line: 27, baseType: !1786)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !871, line: 96, baseType: !327)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1763, file: !191, line: 163, baseType: !1788, size: 32, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !949, line: 276, baseType: !1789)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !949, line: 276, size: 32, elements: !1790)
!1790 = !{!1791}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1789, file: !949, line: 276, baseType: !953, size: 32)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1763, file: !191, line: 164, baseType: !1760, size: 64, offset: 192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1763, file: !191, line: 165, baseType: !1794, size: 128, offset: 256)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1749, line: 14, size: 128, elements: !1795)
!1795 = !{!1796}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1794, file: !1749, line: 15, baseType: !1294, size: 128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1763, file: !191, line: 166, baseType: !1798, size: 64, offset: 384)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!1753}
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1763, file: !191, line: 167, baseType: !1753, size: 64, offset: 448)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1745, file: !191, line: 123, baseType: !318, size: 8, offset: 448)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1745, file: !191, line: 124, baseType: !318, size: 8, offset: 456)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1745, file: !191, line: 125, baseType: !318, size: 8, offset: 464)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1745, file: !191, line: 126, baseType: !318, size: 8, offset: 472)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1729, file: !1676, line: 572, baseType: !1745, size: 512, offset: 1216)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1729, file: !1676, line: 580, baseType: !1808, size: 64, offset: 1728)
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1675, file: !1676, line: 721, baseType: !7, size: 32, offset: 3584)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1675, file: !1676, line: 722, baseType: !327, size: 32, offset: 3616)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1675, file: !1676, line: 723, baseType: !1812, size: 64, offset: 3648)
!1812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1814)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1815, line: 17, baseType: !1816)
!1815 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1815, line: 17, size: 64, elements: !1817)
!1817 = !{!1818}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1816, file: !1815, line: 17, baseType: !1819, size: 64)
!1819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, size: 64, elements: !1820)
!1820 = !{!1821}
!1821 = !DISubrange(count: 1)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1675, file: !1676, line: 724, baseType: !1814, size: 64, offset: 3712)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1675, file: !1676, line: 749, baseType: !1824, offset: 3776)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1676, line: 290, elements: !816)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1675, file: !1676, line: 751, baseType: !774, size: 128, offset: 3776)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1675, file: !1676, line: 757, baseType: !1514, size: 64, offset: 3904)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1675, file: !1676, line: 758, baseType: !1514, size: 64, offset: 3968)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1675, file: !1676, line: 761, baseType: !1829, size: 320, offset: 4032)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1611, line: 34, size: 320, elements: !1830)
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1829, file: !1611, line: 35, baseType: !335, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1829, file: !1611, line: 36, baseType: !1833, size: 256, offset: 64)
!1833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 256, elements: !616)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1675, file: !1676, line: 766, baseType: !327, size: 32, offset: 4352)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1675, file: !1676, line: 767, baseType: !327, size: 32, offset: 4384)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1675, file: !1676, line: 768, baseType: !327, size: 32, offset: 4416)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1675, file: !1676, line: 770, baseType: !327, size: 32, offset: 4448)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1675, file: !1676, line: 772, baseType: !685, size: 64, offset: 4480)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1675, file: !1676, line: 775, baseType: !7, size: 32, offset: 4544)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1675, file: !1676, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1675, file: !1676, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1675, file: !1676, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1675, file: !1676, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1675, file: !1676, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1675, file: !1676, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1675, file: !1676, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1675, file: !1676, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1675, file: !1676, line: 831, baseType: !685, size: 64, offset: 4672)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1675, file: !1676, line: 833, baseType: !1850, size: 384, offset: 4736)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !196, line: 25, size: 384, elements: !1851)
!1851 = !{!1852, !1857}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1850, file: !196, line: 26, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DISubroutineType(types: !1855)
!1855 = !{!333, !1856}
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_member, scope: !1850, file: !196, line: 27, baseType: !1858, size: 320, offset: 64)
!1858 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1850, file: !196, line: 27, size: 320, elements: !1859)
!1859 = !{!1860, !1869, !1894}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1858, file: !196, line: 36, baseType: !1861, size: 320)
!1861 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1858, file: !196, line: 29, size: 320, elements: !1862)
!1862 = !{!1863, !1864, !1865, !1866, !1867, !1868}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1861, file: !196, line: 30, baseType: !633, size: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1861, file: !196, line: 31, baseType: !331, size: 32, offset: 64)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1861, file: !196, line: 32, baseType: !331, size: 32, offset: 96)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1861, file: !196, line: 33, baseType: !331, size: 32, offset: 128)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1861, file: !196, line: 34, baseType: !335, size: 64, offset: 192)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1861, file: !196, line: 35, baseType: !633, size: 64, offset: 256)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1858, file: !196, line: 46, baseType: !1870, size: 192)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1858, file: !196, line: 38, size: 192, elements: !1871)
!1871 = !{!1872, !1873, !1874, !1893}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1870, file: !196, line: 39, baseType: !1785, size: 32)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1870, file: !196, line: 40, baseType: !195, size: 32, offset: 32)
!1874 = !DIDerivedType(tag: DW_TAG_member, scope: !1870, file: !196, line: 41, baseType: !1875, size: 64, offset: 64)
!1875 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1870, file: !196, line: 41, size: 64, elements: !1876)
!1876 = !{!1877, !1885}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1875, file: !196, line: 42, baseType: !1878, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1880, line: 7, size: 128, elements: !1881)
!1880 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1881 = !{!1882, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1879, file: !1880, line: 8, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !871, line: 93, baseType: !615)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1879, file: !1880, line: 9, baseType: !615, size: 64, offset: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1875, file: !196, line: 43, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1888, line: 7, size: 64, elements: !1889)
!1888 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1889 = !{!1890, !1892}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1887, file: !1888, line: 8, baseType: !1891, size: 32)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1888, line: 5, baseType: !325)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1887, file: !1888, line: 9, baseType: !325, size: 32, offset: 32)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1870, file: !196, line: 45, baseType: !335, size: 64, offset: 128)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1858, file: !196, line: 54, baseType: !1895, size: 256)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1858, file: !196, line: 48, size: 256, elements: !1896)
!1896 = !{!1897, !1905, !1906, !1907, !1908}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1895, file: !196, line: 49, baseType: !1898, size: 64)
!1898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1900, line: 36, size: 64, elements: !1901)
!1900 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1901 = !{!1902, !1903, !1904}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1899, file: !1900, line: 37, baseType: !327, size: 32)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1899, file: !1900, line: 38, baseType: !1663, size: 16, offset: 32)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1899, file: !1900, line: 39, baseType: !1663, size: 16, offset: 48)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1895, file: !196, line: 50, baseType: !327, size: 32, offset: 64)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1895, file: !196, line: 51, baseType: !327, size: 32, offset: 96)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1895, file: !196, line: 52, baseType: !685, size: 64, offset: 128)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1895, file: !196, line: 53, baseType: !685, size: 64, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1675, file: !1676, line: 835, baseType: !1910, size: 32, offset: 5120)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !324, line: 22, baseType: !1911)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !871, line: 28, baseType: !327)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1675, file: !1676, line: 836, baseType: !1910, size: 32, offset: 5152)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1675, file: !1676, line: 840, baseType: !685, size: 64, offset: 5184)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1675, file: !1676, line: 849, baseType: !1674, size: 64, offset: 5248)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1675, file: !1676, line: 852, baseType: !1674, size: 64, offset: 5312)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1675, file: !1676, line: 857, baseType: !774, size: 128, offset: 5376)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1675, file: !1676, line: 858, baseType: !774, size: 128, offset: 5504)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1675, file: !1676, line: 859, baseType: !1674, size: 64, offset: 5632)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1675, file: !1676, line: 867, baseType: !774, size: 128, offset: 5696)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1675, file: !1676, line: 868, baseType: !774, size: 128, offset: 5824)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1675, file: !1676, line: 871, baseType: !1922, size: 64, offset: 5952)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !217, line: 59, size: 768, elements: !1924)
!1924 = !{!1925, !1926, !1927, !1928, !1930, !1931, !1938, !1939}
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1923, file: !217, line: 61, baseType: !472, size: 32)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1923, file: !217, line: 62, baseType: !7, size: 32, offset: 32)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1923, file: !217, line: 63, baseType: !802, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1923, file: !217, line: 65, baseType: !1929, size: 256, offset: 64)
!1929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1181, size: 256, elements: !616)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1923, file: !217, line: 66, baseType: !1181, size: 64, offset: 320)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1923, file: !217, line: 68, baseType: !1932, size: 128, offset: 384)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1933, line: 40, baseType: !1934)
!1933 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1933, line: 36, size: 128, elements: !1935)
!1935 = !{!1936, !1937}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1934, file: !1933, line: 37, baseType: !802)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1934, file: !1933, line: 38, baseType: !774, size: 128)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1923, file: !217, line: 69, baseType: !926, size: 128, align: 64, offset: 512)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1923, file: !217, line: 70, baseType: !1940, size: 128, offset: 640)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1941, size: 128, elements: !1820)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !217, line: 54, size: 128, elements: !1942)
!1942 = !{!1943, !1944}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1941, file: !217, line: 55, baseType: !327, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1941, file: !217, line: 56, baseType: !1945, size: 64, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !217, line: 56, flags: DIFlagFwdDecl)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1675, file: !1676, line: 872, baseType: !1948, size: 512, offset: 6016)
!1948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, size: 512, elements: !616)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1675, file: !1676, line: 873, baseType: !774, size: 128, offset: 6528)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1675, file: !1676, line: 874, baseType: !774, size: 128, offset: 6656)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1675, file: !1676, line: 876, baseType: !1952, size: 64, offset: 6784)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1954, line: 26, size: 192, elements: !1955)
!1954 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !{!1956, !1957}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1953, file: !1954, line: 27, baseType: !7, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1953, file: !1954, line: 28, baseType: !1958, size: 128, offset: 64)
!1958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1959, line: 43, size: 128, elements: !1960)
!1959 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1958, file: !1959, line: 44, baseType: !1322)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1958, file: !1959, line: 45, baseType: !774, size: 128)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1675, file: !1676, line: 879, baseType: !1251, size: 64, offset: 6848)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1675, file: !1676, line: 882, baseType: !1251, size: 64, offset: 6912)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1675, file: !1676, line: 884, baseType: !335, size: 64, offset: 6976)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1675, file: !1676, line: 885, baseType: !335, size: 64, offset: 7040)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1675, file: !1676, line: 890, baseType: !335, size: 64, offset: 7104)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1675, file: !1676, line: 891, baseType: !1969, size: 128, offset: 7168)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1676, line: 242, size: 128, elements: !1970)
!1970 = !{!1971, !1972, !1973}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1969, file: !1676, line: 244, baseType: !335, size: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1969, file: !1676, line: 245, baseType: !335, size: 64, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1969, file: !1676, line: 246, baseType: !1322, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1675, file: !1676, line: 900, baseType: !685, size: 64, offset: 7296)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1675, file: !1676, line: 901, baseType: !685, size: 64, offset: 7360)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1675, file: !1676, line: 904, baseType: !335, size: 64, offset: 7424)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1675, file: !1676, line: 907, baseType: !335, size: 64, offset: 7488)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1675, file: !1676, line: 910, baseType: !685, size: 64, offset: 7552)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1675, file: !1676, line: 911, baseType: !685, size: 64, offset: 7616)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1675, file: !1676, line: 914, baseType: !1981, size: 640, offset: 7680)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1982, line: 123, size: 640, elements: !1983)
!1982 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1983 = !{!1984, !1990, !1991}
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1981, file: !1982, line: 124, baseType: !1985, size: 576)
!1985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1986, size: 576, elements: !580)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1982, line: 108, size: 192, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1986, file: !1982, line: 109, baseType: !335, size: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1986, file: !1982, line: 110, baseType: !1794, size: 128, offset: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1981, file: !1982, line: 125, baseType: !7, size: 32, offset: 576)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1981, file: !1982, line: 126, baseType: !7, size: 32, offset: 608)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1675, file: !1676, line: 917, baseType: !1993, size: 192, offset: 8320)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1982, line: 134, size: 192, elements: !1994)
!1994 = !{!1995, !1996}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1993, file: !1982, line: 135, baseType: !926, size: 128, align: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1993, file: !1982, line: 136, baseType: !7, size: 32, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1675, file: !1676, line: 923, baseType: !1998, size: 64, offset: 8512)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2000)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2001, line: 111, size: 1280, elements: !2002)
!2001 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2002 = !{!2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2022, !2023, !2024, !2025, !2026, !2027, !2132, !2133, !2134, !2135, !2161, !2164, !2174}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2000, file: !2001, line: 112, baseType: !477, size: 32)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2000, file: !2001, line: 120, baseType: !988, size: 32, offset: 32)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2000, file: !2001, line: 121, baseType: !996, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2000, file: !2001, line: 122, baseType: !988, size: 32, offset: 96)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2000, file: !2001, line: 123, baseType: !996, size: 32, offset: 128)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2000, file: !2001, line: 124, baseType: !988, size: 32, offset: 160)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2000, file: !2001, line: 125, baseType: !996, size: 32, offset: 192)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2000, file: !2001, line: 126, baseType: !988, size: 32, offset: 224)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2000, file: !2001, line: 127, baseType: !996, size: 32, offset: 256)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2000, file: !2001, line: 128, baseType: !7, size: 32, offset: 288)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2000, file: !2001, line: 129, baseType: !2014, size: 64, offset: 320)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2015, line: 26, baseType: !2016)
!2015 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2015, line: 24, size: 64, elements: !2017)
!2017 = !{!2018}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2016, file: !2015, line: 25, baseType: !2019, size: 64)
!2019 = !DICompositeType(tag: DW_TAG_array_type, baseType: !332, size: 64, elements: !2020)
!2020 = !{!2021}
!2021 = !DISubrange(count: 2)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2000, file: !2001, line: 130, baseType: !2014, size: 64, offset: 384)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2000, file: !2001, line: 131, baseType: !2014, size: 64, offset: 448)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2000, file: !2001, line: 132, baseType: !2014, size: 64, offset: 512)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2000, file: !2001, line: 133, baseType: !2014, size: 64, offset: 576)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2000, file: !2001, line: 135, baseType: !322, size: 8, offset: 640)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2000, file: !2001, line: 137, baseType: !2028, size: 64, offset: 704)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2030, line: 189, size: 1664, elements: !2031)
!2030 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2031 = !{!2032, !2033, !2036, !2041, !2042, !2045, !2046, !2051, !2052, !2053, !2054, !2056, !2057, !2058, !2059, !2060, !2096, !2117}
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2029, file: !2030, line: 190, baseType: !472, size: 32)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2029, file: !2030, line: 191, baseType: !2034, size: 32, offset: 32)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2030, line: 28, baseType: !2035)
!2035 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !324, line: 98, baseType: !325)
!2036 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !2030, line: 192, baseType: !2037, size: 192, offset: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !2030, line: 192, size: 192, elements: !2038)
!2038 = !{!2039, !2040}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2037, file: !2030, line: 193, baseType: !774, size: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2037, file: !2030, line: 194, baseType: !1302, size: 192, align: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2029, file: !2030, line: 199, baseType: !1309, size: 256, offset: 256)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2029, file: !2030, line: 200, baseType: !2043, size: 64, offset: 512)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2030, line: 200, flags: DIFlagFwdDecl)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2029, file: !2030, line: 201, baseType: !317, size: 64, offset: 576)
!2046 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !2030, line: 202, baseType: !2047, size: 64, offset: 640)
!2047 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !2030, line: 202, size: 64, elements: !2048)
!2048 = !{!2049, !2050}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2047, file: !2030, line: 203, baseType: !1086, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2047, file: !2030, line: 204, baseType: !1086, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2029, file: !2030, line: 206, baseType: !1086, size: 64, offset: 704)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2029, file: !2030, line: 207, baseType: !988, size: 32, offset: 768)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2029, file: !2030, line: 208, baseType: !996, size: 32, offset: 800)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2029, file: !2030, line: 209, baseType: !2055, size: 32, offset: 832)
!2055 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2030, line: 31, baseType: !1105)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2029, file: !2030, line: 210, baseType: !330, size: 16, offset: 864)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2029, file: !2030, line: 211, baseType: !330, size: 16, offset: 880)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2029, file: !2030, line: 215, baseType: !1663, size: 16, offset: 896)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2029, file: !2030, line: 222, baseType: !685, size: 64, offset: 960)
!2060 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !2030, line: 239, baseType: !2061, size: 320, offset: 1024)
!2061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !2030, line: 239, size: 320, elements: !2062)
!2062 = !{!2063, !2088}
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2061, file: !2030, line: 240, baseType: !2064, size: 320)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2030, line: 108, size: 320, elements: !2065)
!2065 = !{!2066, !2067, !2077, !2080, !2087}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2064, file: !2030, line: 110, baseType: !685, size: 64)
!2067 = !DIDerivedType(tag: DW_TAG_member, scope: !2064, file: !2030, line: 111, baseType: !2068, size: 64, offset: 64)
!2068 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2064, file: !2030, line: 111, size: 64, elements: !2069)
!2069 = !{!2070, !2076}
!2070 = !DIDerivedType(tag: DW_TAG_member, scope: !2068, file: !2030, line: 112, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2068, file: !2030, line: 112, size: 64, elements: !2072)
!2072 = !{!2073, !2074}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2071, file: !2030, line: 114, baseType: !328, size: 16)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2071, file: !2030, line: 115, baseType: !2075, size: 48, offset: 16)
!2075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 48, elements: !651)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2068, file: !2030, line: 121, baseType: !685, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2064, file: !2030, line: 123, baseType: !2078, size: 64, offset: 128)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2030, line: 96, flags: DIFlagFwdDecl)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2064, file: !2030, line: 124, baseType: !2081, size: 64, offset: 192)
!2081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2082, size: 64)
!2082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2030, line: 102, size: 192, elements: !2083)
!2083 = !{!2084, !2085, !2086}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2082, file: !2030, line: 103, baseType: !926, size: 128, align: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2082, file: !2030, line: 104, baseType: !472, size: 32, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2082, file: !2030, line: 105, baseType: !524, size: 8, offset: 160)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2064, file: !2030, line: 125, baseType: !346, size: 64, offset: 256)
!2088 = !DIDerivedType(tag: DW_TAG_member, scope: !2061, file: !2030, line: 241, baseType: !2089, size: 320)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2061, file: !2030, line: 241, size: 320, elements: !2090)
!2090 = !{!2091, !2092, !2093, !2094, !2095}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2089, file: !2030, line: 242, baseType: !685, size: 64)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2089, file: !2030, line: 243, baseType: !685, size: 64, offset: 64)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2089, file: !2030, line: 244, baseType: !2078, size: 64, offset: 128)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2089, file: !2030, line: 245, baseType: !2081, size: 64, offset: 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2089, file: !2030, line: 246, baseType: !368, size: 64, offset: 256)
!2096 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !2030, line: 254, baseType: !2097, size: 256, offset: 1344)
!2097 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2029, file: !2030, line: 254, size: 256, elements: !2098)
!2098 = !{!2099, !2105}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2097, file: !2030, line: 255, baseType: !2100, size: 256)
!2100 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2030, line: 128, size: 256, elements: !2101)
!2101 = !{!2102, !2103}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2100, file: !2030, line: 129, baseType: !317, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2100, file: !2030, line: 130, baseType: !2104, size: 256)
!2104 = !DICompositeType(tag: DW_TAG_array_type, baseType: !317, size: 256, elements: !616)
!2105 = !DIDerivedType(tag: DW_TAG_member, scope: !2097, file: !2030, line: 256, baseType: !2106, size: 256)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2097, file: !2030, line: 256, size: 256, elements: !2107)
!2107 = !{!2108, !2109}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2106, file: !2030, line: 258, baseType: !774, size: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2106, file: !2030, line: 259, baseType: !2110, size: 128, offset: 128)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2111, line: 22, size: 128, elements: !2112)
!2111 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2112 = !{!2113, !2116}
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2110, file: !2111, line: 23, baseType: !2114, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2111, line: 23, flags: DIFlagFwdDecl)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2110, file: !2111, line: 24, baseType: !685, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2029, file: !2030, line: 274, baseType: !2118, size: 64, offset: 1600)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2030, line: 170, size: 192, elements: !2120)
!2120 = !{!2121, !2130, !2131}
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2119, file: !2030, line: 171, baseType: !2122, size: 64)
!2122 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2030, line: 165, baseType: !2123)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!327, !2028, !2126, !2128, !2028}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2079)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2100)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2119, file: !2030, line: 172, baseType: !2028, size: 64, offset: 64)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2119, file: !2030, line: 173, baseType: !2078, size: 64, offset: 128)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2000, file: !2001, line: 138, baseType: !2028, size: 64, offset: 768)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2000, file: !2001, line: 139, baseType: !2028, size: 64, offset: 832)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2000, file: !2001, line: 140, baseType: !2028, size: 64, offset: 896)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2000, file: !2001, line: 145, baseType: !2136, size: 64, offset: 960)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2138, line: 13, size: 896, elements: !2139)
!2138 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2139 = !{!2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2137, file: !2138, line: 14, baseType: !472, size: 32)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2137, file: !2138, line: 15, baseType: !477, size: 32, offset: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2137, file: !2138, line: 16, baseType: !477, size: 32, offset: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2137, file: !2138, line: 21, baseType: !1313, size: 64, offset: 128)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2137, file: !2138, line: 27, baseType: !685, size: 64, offset: 192)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2137, file: !2138, line: 28, baseType: !685, size: 64, offset: 256)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2137, file: !2138, line: 29, baseType: !1313, size: 64, offset: 320)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2137, file: !2138, line: 32, baseType: !1185, size: 128, offset: 384)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2137, file: !2138, line: 33, baseType: !988, size: 32, offset: 512)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2137, file: !2138, line: 37, baseType: !1313, size: 64, offset: 576)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2137, file: !2138, line: 44, baseType: !2151, size: 256, offset: 640)
!2151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2152, line: 15, size: 256, elements: !2153)
!2152 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2153 = !{!2154, !2155, !2156, !2157, !2158, !2159, !2160}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2151, file: !2152, line: 16, baseType: !1322)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2151, file: !2152, line: 18, baseType: !327, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2151, file: !2152, line: 19, baseType: !327, size: 32, offset: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2151, file: !2152, line: 20, baseType: !327, size: 32, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2151, file: !2152, line: 21, baseType: !327, size: 32, offset: 96)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2151, file: !2152, line: 22, baseType: !685, size: 64, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2151, file: !2152, line: 23, baseType: !685, size: 64, offset: 192)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2000, file: !2001, line: 146, baseType: !2162, size: 64, offset: 1024)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1269, line: 516, flags: DIFlagFwdDecl)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2000, file: !2001, line: 147, baseType: !2165, size: 64, offset: 1088)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2001, line: 25, size: 64, elements: !2167)
!2167 = !{!2168, !2169, !2170}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2166, file: !2001, line: 26, baseType: !477, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2166, file: !2001, line: 27, baseType: !327, size: 32, offset: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2166, file: !2001, line: 28, baseType: !2171, offset: 64)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !996, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 0)
!2174 = !DIDerivedType(tag: DW_TAG_member, scope: !2000, file: !2001, line: 149, baseType: !2175, size: 128, offset: 1152)
!2175 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2000, file: !2001, line: 149, size: 128, elements: !2176)
!2176 = !{!2177, !2178}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2175, file: !2001, line: 150, baseType: !327, size: 32)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2175, file: !2001, line: 151, baseType: !926, size: 128, align: 64)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1675, file: !1676, line: 926, baseType: !1998, size: 64, offset: 8576)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1675, file: !1676, line: 929, baseType: !1998, size: 64, offset: 8640)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1675, file: !1676, line: 933, baseType: !2028, size: 64, offset: 8704)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1675, file: !1676, line: 943, baseType: !2183, size: 128, offset: 8768)
!2183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 128, elements: !2184)
!2184 = !{!2185}
!2185 = !DISubrange(count: 16)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1675, file: !1676, line: 945, baseType: !2187, size: 64, offset: 8896)
!2187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!2188 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1676, line: 49, flags: DIFlagFwdDecl)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1675, file: !1676, line: 956, baseType: !2190, size: 64, offset: 8960)
!2190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2191 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1676, line: 45, flags: DIFlagFwdDecl)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1675, file: !1676, line: 959, baseType: !2193, size: 64, offset: 9024)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1676, line: 959, flags: DIFlagFwdDecl)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1675, file: !1676, line: 962, baseType: !2196, size: 64, offset: 9088)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1676, line: 66, flags: DIFlagFwdDecl)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1675, file: !1676, line: 966, baseType: !2199, size: 64, offset: 9152)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1676, line: 50, flags: DIFlagFwdDecl)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1675, file: !1676, line: 969, baseType: !2202, size: 64, offset: 9216)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2204, line: 82, size: 7296, elements: !2205)
!2204 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2212, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2241, !2250, !2251, !2253, !2254, !2255, !2258, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2288, !2289, !2296, !2297, !2298, !2299, !2300, !2301}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2203, file: !2204, line: 83, baseType: !472, size: 32)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2203, file: !2204, line: 84, baseType: !477, size: 32, offset: 32)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2203, file: !2204, line: 85, baseType: !327, size: 32, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2203, file: !2204, line: 86, baseType: !774, size: 128, offset: 128)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2203, file: !2204, line: 88, baseType: !1932, size: 128, offset: 256)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2203, file: !2204, line: 91, baseType: !1674, size: 64, offset: 384)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2203, file: !2204, line: 94, baseType: !2213, size: 192, offset: 448)
!2213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2214, line: 30, size: 192, elements: !2215)
!2214 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2215 = !{!2216, !2217}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2213, file: !2214, line: 31, baseType: !774, size: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2213, file: !2214, line: 32, baseType: !2218, size: 64, offset: 128)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2219, line: 25, baseType: !2220)
!2219 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2219, line: 23, size: 64, elements: !2221)
!2221 = !{!2222}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2220, file: !2219, line: 24, baseType: !1819, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2203, file: !2204, line: 97, baseType: !1181, size: 64, offset: 640)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2203, file: !2204, line: 100, baseType: !327, size: 32, offset: 704)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2203, file: !2204, line: 106, baseType: !327, size: 32, offset: 736)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2203, file: !2204, line: 107, baseType: !1674, size: 64, offset: 768)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2203, file: !2204, line: 110, baseType: !327, size: 32, offset: 832)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2203, file: !2204, line: 111, baseType: !7, size: 32, offset: 864)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2203, file: !2204, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2203, file: !2204, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2203, file: !2204, line: 128, baseType: !327, size: 32, offset: 928)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2203, file: !2204, line: 129, baseType: !774, size: 128, offset: 960)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2203, file: !2204, line: 132, baseType: !1745, size: 512, offset: 1088)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2203, file: !2204, line: 133, baseType: !1753, size: 64, offset: 1600)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2203, file: !2204, line: 140, baseType: !2236, size: 256, offset: 1664)
!2236 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2237, size: 256, elements: !2020)
!2237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2204, line: 38, size: 128, elements: !2238)
!2238 = !{!2239, !2240}
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2237, file: !2204, line: 39, baseType: !335, size: 64)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2237, file: !2204, line: 40, baseType: !335, size: 64, offset: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2203, file: !2204, line: 146, baseType: !2242, size: 192, offset: 1920)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2204, line: 66, size: 192, elements: !2243)
!2243 = !{!2244}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2242, file: !2204, line: 67, baseType: !2245, size: 192)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2204, line: 47, size: 192, elements: !2246)
!2246 = !{!2247, !2248, !2249}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2245, file: !2204, line: 48, baseType: !1315, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2245, file: !2204, line: 49, baseType: !1315, size: 64, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2245, file: !2204, line: 50, baseType: !1315, size: 64, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2203, file: !2204, line: 150, baseType: !1981, size: 640, offset: 2112)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2203, file: !2204, line: 153, baseType: !2252, size: 256, offset: 2752)
!2252 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1922, size: 256, elements: !616)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2203, file: !2204, line: 159, baseType: !1922, size: 64, offset: 3008)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2203, file: !2204, line: 162, baseType: !327, size: 32, offset: 3072)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2203, file: !2204, line: 164, baseType: !2256, size: 64, offset: 3136)
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2204, line: 164, flags: DIFlagFwdDecl)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2203, file: !2204, line: 175, baseType: !2259, size: 32, offset: 3200)
!2259 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !949, line: 805, baseType: !2260)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !949, line: 798, size: 32, elements: !2261)
!2261 = !{!2262, !2263}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2260, file: !949, line: 803, baseType: !948, size: 32)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2260, file: !949, line: 804, baseType: !802, offset: 32)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2203, file: !2204, line: 176, baseType: !335, size: 64, offset: 3264)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2203, file: !2204, line: 176, baseType: !335, size: 64, offset: 3328)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2203, file: !2204, line: 176, baseType: !335, size: 64, offset: 3392)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2203, file: !2204, line: 176, baseType: !335, size: 64, offset: 3456)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2203, file: !2204, line: 177, baseType: !335, size: 64, offset: 3520)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2203, file: !2204, line: 178, baseType: !335, size: 64, offset: 3584)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2203, file: !2204, line: 179, baseType: !1969, size: 128, offset: 3648)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2203, file: !2204, line: 180, baseType: !685, size: 64, offset: 3776)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2203, file: !2204, line: 180, baseType: !685, size: 64, offset: 3840)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2203, file: !2204, line: 180, baseType: !685, size: 64, offset: 3904)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2203, file: !2204, line: 180, baseType: !685, size: 64, offset: 3968)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2203, file: !2204, line: 181, baseType: !685, size: 64, offset: 4032)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2203, file: !2204, line: 181, baseType: !685, size: 64, offset: 4096)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2203, file: !2204, line: 181, baseType: !685, size: 64, offset: 4160)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2203, file: !2204, line: 181, baseType: !685, size: 64, offset: 4224)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2203, file: !2204, line: 182, baseType: !685, size: 64, offset: 4288)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2203, file: !2204, line: 182, baseType: !685, size: 64, offset: 4352)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2203, file: !2204, line: 182, baseType: !685, size: 64, offset: 4416)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2203, file: !2204, line: 182, baseType: !685, size: 64, offset: 4480)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2203, file: !2204, line: 183, baseType: !685, size: 64, offset: 4544)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2203, file: !2204, line: 183, baseType: !685, size: 64, offset: 4608)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2203, file: !2204, line: 184, baseType: !2286, offset: 4672)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2287, line: 12, elements: !816)
!2287 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2203, file: !2204, line: 192, baseType: !337, size: 64, offset: 4672)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2203, file: !2204, line: 203, baseType: !2290, size: 2048, offset: 4736)
!2290 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2291, size: 2048, elements: !2184)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2292, line: 43, size: 128, elements: !2293)
!2292 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2293 = !{!2294, !2295}
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2291, file: !2292, line: 44, baseType: !885, size: 64)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2291, file: !2292, line: 45, baseType: !885, size: 64, offset: 64)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2203, file: !2204, line: 220, baseType: !524, size: 8, offset: 6784)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2203, file: !2204, line: 221, baseType: !1663, size: 16, offset: 6800)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2203, file: !2204, line: 222, baseType: !1663, size: 16, offset: 6816)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2203, file: !2204, line: 224, baseType: !1514, size: 64, offset: 6848)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2203, file: !2204, line: 227, baseType: !1631, size: 192, offset: 6912)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2203, file: !2204, line: 233, baseType: !1631, size: 192, offset: 7104)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1675, file: !1676, line: 970, baseType: !2303, size: 64, offset: 9280)
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2204, line: 20, size: 16576, elements: !2305)
!2305 = !{!2306, !2307, !2308, !2309}
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2304, file: !2204, line: 21, baseType: !802)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2304, file: !2204, line: 22, baseType: !472, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2304, file: !2204, line: 23, baseType: !1932, size: 128, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2304, file: !2204, line: 24, baseType: !2310, size: 16384, offset: 192)
!2310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2311, size: 16384, elements: !432)
!2311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2214, line: 49, size: 256, elements: !2312)
!2312 = !{!2313}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2311, file: !2214, line: 50, baseType: !2314, size: 256)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2214, line: 35, size: 256, elements: !2315)
!2315 = !{!2316, !2323, !2324, !2330}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2314, file: !2214, line: 37, baseType: !2317, size: 64)
!2317 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2318, line: 19, baseType: !2319)
!2318 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2318, line: 18, baseType: !2321)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{null, !327}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2314, file: !2214, line: 38, baseType: !685, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2314, file: !2214, line: 44, baseType: !2325, size: 64, offset: 128)
!2325 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2318, line: 22, baseType: !2326)
!2326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2327, size: 64)
!2327 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2318, line: 21, baseType: !2328)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{null}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2314, file: !2214, line: 46, baseType: !2218, size: 64, offset: 192)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1675, file: !1676, line: 971, baseType: !2218, size: 64, offset: 9344)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1675, file: !1676, line: 972, baseType: !2218, size: 64, offset: 9408)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1675, file: !1676, line: 974, baseType: !2218, size: 64, offset: 9472)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1675, file: !1676, line: 975, baseType: !2213, size: 192, offset: 9536)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1675, file: !1676, line: 976, baseType: !685, size: 64, offset: 9728)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1675, file: !1676, line: 977, baseType: !883, size: 64, offset: 9792)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1675, file: !1676, line: 978, baseType: !7, size: 32, offset: 9856)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1675, file: !1676, line: 980, baseType: !929, size: 64, offset: 9920)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1675, file: !1676, line: 989, baseType: !2340, size: 128, offset: 9984)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2341, line: 35, size: 128, elements: !2342)
!2341 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2342 = !{!2343, !2344, !2345}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2340, file: !2341, line: 36, baseType: !327, size: 32)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2340, file: !2341, line: 37, baseType: !477, size: 32, offset: 32)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2340, file: !2341, line: 38, baseType: !2346, size: 64, offset: 64)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2347, size: 64)
!2347 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2341, line: 23, flags: DIFlagFwdDecl)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1675, file: !1676, line: 992, baseType: !335, size: 64, offset: 10112)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1675, file: !1676, line: 993, baseType: !335, size: 64, offset: 10176)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1675, file: !1676, line: 996, baseType: !802, offset: 10240)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1675, file: !1676, line: 999, baseType: !1322, offset: 10240)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1675, file: !1676, line: 1001, baseType: !2353, size: 64, offset: 10240)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1676, line: 636, size: 64, elements: !2354)
!2354 = !{!2355}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2353, file: !1676, line: 637, baseType: !2356, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2353, size: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1675, file: !1676, line: 1005, baseType: !1294, size: 128, offset: 10304)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1675, file: !1676, line: 1007, baseType: !1674, size: 64, offset: 10432)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1675, file: !1676, line: 1009, baseType: !2360, size: 64, offset: 10496)
!2360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!2361 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1676, line: 1009, flags: DIFlagFwdDecl)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1675, file: !1676, line: 1043, baseType: !317, size: 64, offset: 10560)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1675, file: !1676, line: 1046, baseType: !2364, size: 64, offset: 10624)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1676, line: 41, flags: DIFlagFwdDecl)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1675, file: !1676, line: 1050, baseType: !2367, size: 64, offset: 10688)
!2367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2368, size: 64)
!2368 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1676, line: 42, flags: DIFlagFwdDecl)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1675, file: !1676, line: 1054, baseType: !2370, size: 64, offset: 10752)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1676, line: 55, flags: DIFlagFwdDecl)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1675, file: !1676, line: 1056, baseType: !2373, size: 64, offset: 10816)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2374 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1676, line: 40, flags: DIFlagFwdDecl)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1675, file: !1676, line: 1058, baseType: !2376, size: 64, offset: 10880)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2378, line: 99, size: 704, elements: !2379)
!2378 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2379 = !{!2380, !2381, !2382, !2383, !2384, !2385, !2386, !2405, !2406}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2377, file: !2378, line: 100, baseType: !1313, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2377, file: !2378, line: 101, baseType: !477, size: 32, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2377, file: !2378, line: 102, baseType: !477, size: 32, offset: 96)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2377, file: !2378, line: 105, baseType: !802, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2377, file: !2378, line: 107, baseType: !330, size: 16, offset: 128)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2377, file: !2378, line: 109, baseType: !1285, size: 128, offset: 192)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2377, file: !2378, line: 110, baseType: !2387, size: 64, offset: 320)
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2378, line: 73, size: 448, elements: !2389)
!2389 = !{!2390, !2393, !2394, !2399, !2404}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2388, file: !2378, line: 74, baseType: !2391, size: 64)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2378, line: 74, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2388, file: !2378, line: 75, baseType: !2376, size: 64, offset: 64)
!2394 = !DIDerivedType(tag: DW_TAG_member, scope: !2388, file: !2378, line: 83, baseType: !2395, size: 128, offset: 128)
!2395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2388, file: !2378, line: 83, size: 128, elements: !2396)
!2396 = !{!2397, !2398}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2395, file: !2378, line: 84, baseType: !774, size: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2395, file: !2378, line: 85, baseType: !1475, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, scope: !2388, file: !2378, line: 87, baseType: !2400, size: 128, offset: 256)
!2400 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2388, file: !2378, line: 87, size: 128, elements: !2401)
!2401 = !{!2402, !2403}
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2400, file: !2378, line: 88, baseType: !1185, size: 128)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2400, file: !2378, line: 89, baseType: !926, size: 128, align: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2388, file: !2378, line: 92, baseType: !7, size: 32, offset: 384)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2377, file: !2378, line: 111, baseType: !1181, size: 64, offset: 384)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2377, file: !2378, line: 113, baseType: !2407, size: 256, offset: 448)
!2407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2408, line: 102, size: 256, elements: !2409)
!2408 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2409 = !{!2410, !2411, !2412}
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2407, file: !2408, line: 103, baseType: !1313, size: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2407, file: !2408, line: 104, baseType: !774, size: 128, offset: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2407, file: !2408, line: 105, baseType: !2413, size: 64, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2408, line: 21, baseType: !2414)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2417}
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1675, file: !1676, line: 1061, baseType: !2419, size: 64, offset: 10944)
!2419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2420, size: 64)
!2420 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1676, line: 43, flags: DIFlagFwdDecl)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1675, file: !1676, line: 1064, baseType: !685, size: 64, offset: 11008)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1675, file: !1676, line: 1065, baseType: !2423, size: 64, offset: 11072)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2214, line: 14, baseType: !2425)
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2214, line: 12, size: 384, elements: !2426)
!2426 = !{!2427}
!2427 = !DIDerivedType(tag: DW_TAG_member, scope: !2425, file: !2214, line: 13, baseType: !2428, size: 384)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2425, file: !2214, line: 13, size: 384, elements: !2429)
!2429 = !{!2430, !2431, !2432, !2433}
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2428, file: !2214, line: 13, baseType: !327, size: 32)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2428, file: !2214, line: 13, baseType: !327, size: 32, offset: 32)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2428, file: !2214, line: 13, baseType: !327, size: 32, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2428, file: !2214, line: 13, baseType: !2434, size: 256, offset: 128)
!2434 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2435, line: 32, size: 256, elements: !2436)
!2435 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2436 = !{!2437, !2442, !2455, !2461, !2470, !2490, !2495}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2434, file: !2435, line: 37, baseType: !2438, size: 64)
!2438 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 34, size: 64, elements: !2439)
!2439 = !{!2440, !2441}
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2438, file: !2435, line: 35, baseType: !1911, size: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2438, file: !2435, line: 36, baseType: !994, size: 32, offset: 32)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2434, file: !2435, line: 45, baseType: !2443, size: 192)
!2443 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 40, size: 192, elements: !2444)
!2444 = !{!2445, !2447, !2448, !2454}
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2443, file: !2435, line: 41, baseType: !2446, size: 32)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !871, line: 95, baseType: !327)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2443, file: !2435, line: 42, baseType: !327, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2443, file: !2435, line: 43, baseType: !2449, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2435, line: 11, baseType: !2450)
!2450 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2435, line: 8, size: 64, elements: !2451)
!2451 = !{!2452, !2453}
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2450, file: !2435, line: 9, baseType: !327, size: 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2450, file: !2435, line: 10, baseType: !317, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2443, file: !2435, line: 44, baseType: !327, size: 32, offset: 128)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2434, file: !2435, line: 52, baseType: !2456, size: 128)
!2456 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 48, size: 128, elements: !2457)
!2457 = !{!2458, !2459, !2460}
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2456, file: !2435, line: 49, baseType: !1911, size: 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2456, file: !2435, line: 50, baseType: !994, size: 32, offset: 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2456, file: !2435, line: 51, baseType: !2449, size: 64, offset: 64)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2434, file: !2435, line: 61, baseType: !2462, size: 256)
!2462 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 55, size: 256, elements: !2463)
!2463 = !{!2464, !2465, !2466, !2467, !2469}
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2462, file: !2435, line: 56, baseType: !1911, size: 32)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2462, file: !2435, line: 57, baseType: !994, size: 32, offset: 32)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2462, file: !2435, line: 58, baseType: !327, size: 32, offset: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2462, file: !2435, line: 59, baseType: !2468, size: 64, offset: 128)
!2468 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !871, line: 94, baseType: !872)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2462, file: !2435, line: 60, baseType: !2468, size: 64, offset: 192)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2434, file: !2435, line: 95, baseType: !2471, size: 256)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 64, size: 256, elements: !2472)
!2472 = !{!2473, !2474}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2471, file: !2435, line: 65, baseType: !317, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, scope: !2471, file: !2435, line: 77, baseType: !2475, size: 192, offset: 64)
!2475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2471, file: !2435, line: 77, size: 192, elements: !2476)
!2476 = !{!2477, !2478, !2485}
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2475, file: !2435, line: 82, baseType: !1663, size: 16)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2475, file: !2435, line: 88, baseType: !2479, size: 192)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2475, file: !2435, line: 84, size: 192, elements: !2480)
!2480 = !{!2481, !2483, !2484}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2479, file: !2435, line: 85, baseType: !2482, size: 64)
!2482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 64, elements: !501)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2479, file: !2435, line: 86, baseType: !317, size: 64, offset: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2479, file: !2435, line: 87, baseType: !317, size: 64, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2475, file: !2435, line: 93, baseType: !2486, size: 96)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2475, file: !2435, line: 90, size: 96, elements: !2487)
!2487 = !{!2488, !2489}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2486, file: !2435, line: 91, baseType: !2482, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2486, file: !2435, line: 92, baseType: !332, size: 32, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2434, file: !2435, line: 101, baseType: !2491, size: 128)
!2491 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 98, size: 128, elements: !2492)
!2492 = !{!2493, !2494}
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2491, file: !2435, line: 99, baseType: !333, size: 64)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2491, file: !2435, line: 100, baseType: !327, size: 32, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2434, file: !2435, line: 108, baseType: !2496, size: 128)
!2496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2434, file: !2435, line: 104, size: 128, elements: !2497)
!2497 = !{!2498, !2499, !2500}
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2496, file: !2435, line: 105, baseType: !317, size: 64)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2496, file: !2435, line: 106, baseType: !327, size: 32, offset: 64)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2496, file: !2435, line: 107, baseType: !7, size: 32, offset: 96)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1675, file: !1676, line: 1067, baseType: !2286, offset: 11136)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1675, file: !1676, line: 1099, baseType: !2503, size: 64, offset: 11136)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1676, line: 56, flags: DIFlagFwdDecl)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1675, file: !1676, line: 1103, baseType: !774, size: 128, offset: 11200)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1675, file: !1676, line: 1104, baseType: !2507, size: 64, offset: 11328)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2508, size: 64)
!2508 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1676, line: 46, flags: DIFlagFwdDecl)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1675, file: !1676, line: 1105, baseType: !1631, size: 192, offset: 11392)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1675, file: !1676, line: 1106, baseType: !7, size: 32, offset: 11584)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1675, file: !1676, line: 1109, baseType: !2512, size: 128, offset: 11648)
!2512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2513, size: 128, elements: !2020)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1676, line: 51, flags: DIFlagFwdDecl)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1675, file: !1676, line: 1110, baseType: !1631, size: 192, offset: 11776)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1675, file: !1676, line: 1111, baseType: !774, size: 128, offset: 11968)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1675, file: !1676, line: 1173, baseType: !2518, size: 64, offset: 12096)
!2518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2519, size: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2520, line: 62, size: 256, align: 256, elements: !2521)
!2520 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2521 = !{!2522, !2523, !2524, !2529}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2519, file: !2520, line: 75, baseType: !332, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2519, file: !2520, line: 90, baseType: !332, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2519, file: !2520, line: 124, baseType: !2525, size: 64, offset: 64)
!2525 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2519, file: !2520, line: 109, size: 64, elements: !2526)
!2526 = !{!2527, !2528}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2525, file: !2520, line: 110, baseType: !336, size: 64)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2525, file: !2520, line: 112, baseType: !336, size: 64)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2519, file: !2520, line: 144, baseType: !332, size: 32, offset: 128)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1675, file: !1676, line: 1174, baseType: !331, size: 32, offset: 12160)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1675, file: !1676, line: 1179, baseType: !685, size: 64, offset: 12224)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1675, file: !1676, line: 1182, baseType: !2533, size: 128, offset: 12288)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1611, line: 76, size: 128, elements: !2534)
!2534 = !{!2535, !2540, !2541}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2533, file: !1611, line: 85, baseType: !2536, size: 64)
!2536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2537, line: 7, size: 64, elements: !2538)
!2537 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2538 = !{!2539}
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2536, file: !2537, line: 12, baseType: !1816, size: 64)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2533, file: !1611, line: 88, baseType: !524, size: 8, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2533, file: !1611, line: 95, baseType: !524, size: 8, offset: 72)
!2542 = !DIDerivedType(tag: DW_TAG_member, scope: !1675, file: !1676, line: 1184, baseType: !2543, size: 128, offset: 12416)
!2543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1675, file: !1676, line: 1184, size: 128, elements: !2544)
!2544 = !{!2545, !2546}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2543, file: !1676, line: 1185, baseType: !472, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2543, file: !1676, line: 1186, baseType: !926, size: 128, align: 64)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1675, file: !1676, line: 1190, baseType: !2548, size: 64, offset: 12544)
!2548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2549, size: 64)
!2549 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1676, line: 53, flags: DIFlagFwdDecl)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1675, file: !1676, line: 1192, baseType: !2551, size: 128, offset: 12608)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1611, line: 64, size: 128, elements: !2552)
!2552 = !{!2553, !2554, !2555}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2551, file: !1611, line: 65, baseType: !1267, size: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2551, file: !1611, line: 67, baseType: !332, size: 32, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2551, file: !1611, line: 68, baseType: !332, size: 32, offset: 96)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1675, file: !1676, line: 1206, baseType: !327, size: 32, offset: 12736)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1675, file: !1676, line: 1207, baseType: !327, size: 32, offset: 12768)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1675, file: !1676, line: 1209, baseType: !685, size: 64, offset: 12800)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1675, file: !1676, line: 1219, baseType: !335, size: 64, offset: 12864)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1675, file: !1676, line: 1220, baseType: !335, size: 64, offset: 12928)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1675, file: !1676, line: 1317, baseType: !327, size: 32, offset: 12992)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1675, file: !1676, line: 1319, baseType: !1674, size: 64, offset: 13056)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1675, file: !1676, line: 1322, baseType: !2564, size: 64, offset: 13120)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2566, line: 56, size: 512, elements: !2567)
!2566 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2567 = !{!2568, !2569, !2570, !2571, !2572, !2573, !2574, !2576}
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2565, file: !2566, line: 57, baseType: !2564, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2565, file: !2566, line: 58, baseType: !317, size: 64, offset: 64)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2565, file: !2566, line: 59, baseType: !685, size: 64, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2565, file: !2566, line: 60, baseType: !685, size: 64, offset: 192)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2565, file: !2566, line: 61, baseType: !1362, size: 64, offset: 256)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2565, file: !2566, line: 62, baseType: !7, size: 32, offset: 320)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2565, file: !2566, line: 63, baseType: !2575, size: 64, offset: 384)
!2575 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !324, line: 153, baseType: !335)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2565, file: !2566, line: 64, baseType: !2577, size: 64, offset: 448)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1675, file: !1676, line: 1326, baseType: !472, size: 32, offset: 13184)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1675, file: !1676, line: 1342, baseType: !317, size: 64, offset: 13248)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1675, file: !1676, line: 1343, baseType: !336, size: 64, offset: 13312)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1675, file: !1676, line: 1344, baseType: !335, size: 64, offset: 13376)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1675, file: !1676, line: 1345, baseType: !336, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1675, file: !1676, line: 1346, baseType: !336, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1675, file: !1676, line: 1347, baseType: !336, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1675, file: !1676, line: 1348, baseType: !926, size: 128, align: 64, offset: 13504)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1675, file: !1676, line: 1358, baseType: !2588, size: 34816, offset: 13824)
!2588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2589, line: 485, size: 34816, elements: !2590)
!2589 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2590 = !{!2591, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2620, !2621, !2622, !2623, !2624, !2625, !2628, !2629, !2630}
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2588, file: !2589, line: 487, baseType: !2592, size: 192)
!2592 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2593, size: 192, elements: !580)
!2593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2594, line: 16, size: 64, elements: !2595)
!2594 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2595 = !{!2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2593, file: !2594, line: 17, baseType: !328, size: 16)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2593, file: !2594, line: 18, baseType: !328, size: 16, offset: 16)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2593, file: !2594, line: 19, baseType: !328, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2593, file: !2594, line: 19, baseType: !328, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2593, file: !2594, line: 19, baseType: !328, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2593, file: !2594, line: 19, baseType: !328, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2593, file: !2594, line: 19, baseType: !328, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2593, file: !2594, line: 20, baseType: !328, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2593, file: !2594, line: 20, baseType: !328, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2593, file: !2594, line: 20, baseType: !328, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2593, file: !2594, line: 20, baseType: !328, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2593, file: !2594, line: 20, baseType: !328, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2593, file: !2594, line: 20, baseType: !328, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2588, file: !2589, line: 491, baseType: !685, size: 64, offset: 192)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2588, file: !2589, line: 495, baseType: !330, size: 16, offset: 256)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2588, file: !2589, line: 496, baseType: !330, size: 16, offset: 272)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2588, file: !2589, line: 497, baseType: !330, size: 16, offset: 288)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2588, file: !2589, line: 498, baseType: !330, size: 16, offset: 304)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2588, file: !2589, line: 502, baseType: !685, size: 64, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2588, file: !2589, line: 503, baseType: !685, size: 64, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2588, file: !2589, line: 514, baseType: !2617, size: 256, offset: 448)
!2617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2618, size: 256, elements: !616)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2589, line: 483, flags: DIFlagFwdDecl)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2588, file: !2589, line: 516, baseType: !685, size: 64, offset: 704)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2588, file: !2589, line: 518, baseType: !685, size: 64, offset: 768)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2588, file: !2589, line: 520, baseType: !685, size: 64, offset: 832)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2588, file: !2589, line: 521, baseType: !685, size: 64, offset: 896)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2588, file: !2589, line: 522, baseType: !685, size: 64, offset: 960)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2588, file: !2589, line: 528, baseType: !2626, size: 64, offset: 1024)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2589, line: 10, flags: DIFlagFwdDecl)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2588, file: !2589, line: 535, baseType: !685, size: 64, offset: 1088)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2588, file: !2589, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2588, file: !2589, line: 540, baseType: !2631, size: 33280, offset: 1536)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2632, line: 317, size: 33280, elements: !2633)
!2632 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2633 = !{!2634, !2635, !2636}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2631, file: !2632, line: 330, baseType: !7, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2631, file: !2632, line: 337, baseType: !685, size: 64, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2631, file: !2632, line: 348, baseType: !2637, size: 32768, offset: 512)
!2637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2632, line: 304, size: 32768, elements: !2638)
!2638 = !{!2639, !2654, !2693, !2743, !2756}
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2637, file: !2632, line: 305, baseType: !2640, size: 896)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2632, line: 12, size: 896, elements: !2641)
!2641 = !{!2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2653}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2640, file: !2632, line: 13, baseType: !331, size: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2640, file: !2632, line: 14, baseType: !331, size: 32, offset: 32)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2640, file: !2632, line: 15, baseType: !331, size: 32, offset: 64)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2640, file: !2632, line: 16, baseType: !331, size: 32, offset: 96)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2640, file: !2632, line: 17, baseType: !331, size: 32, offset: 128)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2640, file: !2632, line: 18, baseType: !331, size: 32, offset: 160)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2640, file: !2632, line: 19, baseType: !331, size: 32, offset: 192)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2640, file: !2632, line: 22, baseType: !2650, size: 640, offset: 224)
!2650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 640, elements: !2651)
!2651 = !{!2652}
!2652 = !DISubrange(count: 20)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2640, file: !2632, line: 25, baseType: !331, size: 32, offset: 864)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2637, file: !2632, line: 306, baseType: !2655, size: 4096, align: 128)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2632, line: 34, size: 4096, align: 128, elements: !2656)
!2656 = !{!2657, !2658, !2659, !2660, !2661, !2676, !2677, !2678, !2682, !2684, !2688}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2655, file: !2632, line: 35, baseType: !328, size: 16)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2655, file: !2632, line: 36, baseType: !328, size: 16, offset: 16)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2655, file: !2632, line: 37, baseType: !328, size: 16, offset: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2655, file: !2632, line: 38, baseType: !328, size: 16, offset: 48)
!2661 = !DIDerivedType(tag: DW_TAG_member, scope: !2655, file: !2632, line: 39, baseType: !2662, size: 128, offset: 64)
!2662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2655, file: !2632, line: 39, size: 128, elements: !2663)
!2663 = !{!2664, !2669}
!2664 = !DIDerivedType(tag: DW_TAG_member, scope: !2662, file: !2632, line: 40, baseType: !2665, size: 128)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2662, file: !2632, line: 40, size: 128, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2665, file: !2632, line: 41, baseType: !335, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2665, file: !2632, line: 42, baseType: !335, size: 64, offset: 64)
!2669 = !DIDerivedType(tag: DW_TAG_member, scope: !2662, file: !2632, line: 44, baseType: !2670, size: 128)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2662, file: !2632, line: 44, size: 128, elements: !2671)
!2671 = !{!2672, !2673, !2674, !2675}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2670, file: !2632, line: 45, baseType: !331, size: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2670, file: !2632, line: 46, baseType: !331, size: 32, offset: 32)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2670, file: !2632, line: 47, baseType: !331, size: 32, offset: 64)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2670, file: !2632, line: 48, baseType: !331, size: 32, offset: 96)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2655, file: !2632, line: 51, baseType: !331, size: 32, offset: 192)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2655, file: !2632, line: 52, baseType: !331, size: 32, offset: 224)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2655, file: !2632, line: 55, baseType: !2679, size: 1024, offset: 256)
!2679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 1024, elements: !2680)
!2680 = !{!2681}
!2681 = !DISubrange(count: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2655, file: !2632, line: 58, baseType: !2683, size: 2048, offset: 1280)
!2683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 2048, elements: !432)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2655, file: !2632, line: 60, baseType: !2685, size: 384, offset: 3328)
!2685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 384, elements: !2686)
!2686 = !{!2687}
!2687 = !DISubrange(count: 12)
!2688 = !DIDerivedType(tag: DW_TAG_member, scope: !2655, file: !2632, line: 62, baseType: !2689, size: 384, offset: 3712)
!2689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2655, file: !2632, line: 62, size: 384, elements: !2690)
!2690 = !{!2691, !2692}
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2689, file: !2632, line: 63, baseType: !2685, size: 384)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2689, file: !2632, line: 64, baseType: !2685, size: 384)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2637, file: !2632, line: 307, baseType: !2694, size: 1088)
!2694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2632, line: 79, size: 1088, elements: !2695)
!2695 = !{!2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2742}
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2694, file: !2632, line: 80, baseType: !331, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2694, file: !2632, line: 81, baseType: !331, size: 32, offset: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2694, file: !2632, line: 82, baseType: !331, size: 32, offset: 64)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2694, file: !2632, line: 83, baseType: !331, size: 32, offset: 96)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2694, file: !2632, line: 84, baseType: !331, size: 32, offset: 128)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2694, file: !2632, line: 85, baseType: !331, size: 32, offset: 160)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2694, file: !2632, line: 86, baseType: !331, size: 32, offset: 192)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2694, file: !2632, line: 88, baseType: !2650, size: 640, offset: 224)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2694, file: !2632, line: 89, baseType: !318, size: 8, offset: 864)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2694, file: !2632, line: 90, baseType: !318, size: 8, offset: 872)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2694, file: !2632, line: 91, baseType: !318, size: 8, offset: 880)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2694, file: !2632, line: 92, baseType: !318, size: 8, offset: 888)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2694, file: !2632, line: 93, baseType: !318, size: 8, offset: 896)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2694, file: !2632, line: 94, baseType: !318, size: 8, offset: 904)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2694, file: !2632, line: 95, baseType: !2711, size: 64, offset: 960)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2713, line: 11, size: 128, elements: !2714)
!2713 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2714 = !{!2715, !2716}
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2712, file: !2713, line: 12, baseType: !333, size: 64)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2712, file: !2713, line: 13, baseType: !2717, size: 64, offset: 64)
!2717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2718, size: 64)
!2718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2719, line: 56, size: 1344, elements: !2720)
!2719 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2720 = !{!2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2718, file: !2719, line: 61, baseType: !685, size: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2718, file: !2719, line: 62, baseType: !685, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2718, file: !2719, line: 63, baseType: !685, size: 64, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2718, file: !2719, line: 64, baseType: !685, size: 64, offset: 192)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2718, file: !2719, line: 65, baseType: !685, size: 64, offset: 256)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2718, file: !2719, line: 66, baseType: !685, size: 64, offset: 320)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2718, file: !2719, line: 68, baseType: !685, size: 64, offset: 384)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2718, file: !2719, line: 69, baseType: !685, size: 64, offset: 448)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2718, file: !2719, line: 70, baseType: !685, size: 64, offset: 512)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2718, file: !2719, line: 71, baseType: !685, size: 64, offset: 576)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2718, file: !2719, line: 72, baseType: !685, size: 64, offset: 640)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2718, file: !2719, line: 73, baseType: !685, size: 64, offset: 704)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2718, file: !2719, line: 74, baseType: !685, size: 64, offset: 768)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2718, file: !2719, line: 75, baseType: !685, size: 64, offset: 832)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2718, file: !2719, line: 76, baseType: !685, size: 64, offset: 896)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2718, file: !2719, line: 81, baseType: !685, size: 64, offset: 960)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2718, file: !2719, line: 83, baseType: !685, size: 64, offset: 1024)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2718, file: !2719, line: 84, baseType: !685, size: 64, offset: 1088)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2718, file: !2719, line: 85, baseType: !685, size: 64, offset: 1152)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2718, file: !2719, line: 86, baseType: !685, size: 64, offset: 1216)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2718, file: !2719, line: 87, baseType: !685, size: 64, offset: 1280)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2694, file: !2632, line: 96, baseType: !331, size: 32, offset: 1024)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2637, file: !2632, line: 308, baseType: !2744, size: 4608, align: 512)
!2744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2632, line: 289, size: 4608, align: 512, elements: !2745)
!2745 = !{!2746, !2747, !2754}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2744, file: !2632, line: 290, baseType: !2655, size: 4096, align: 128)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2744, file: !2632, line: 291, baseType: !2748, size: 512, offset: 4096)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2632, line: 268, size: 512, elements: !2749)
!2749 = !{!2750, !2751, !2752}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2748, file: !2632, line: 269, baseType: !335, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2748, file: !2632, line: 270, baseType: !335, size: 64, offset: 64)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2748, file: !2632, line: 271, baseType: !2753, size: 384, offset: 128)
!2753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 384, elements: !651)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2744, file: !2632, line: 292, baseType: !2755, offset: 4608)
!2755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, elements: !2172)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2637, file: !2632, line: 309, baseType: !2757, size: 32768)
!2757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 32768, elements: !2758)
!2758 = !{!2759}
!2759 = !DISubrange(count: 4096)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1671, file: !1269, line: 378, baseType: !2761, size: 64, offset: 64)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1667, file: !1269, line: 384, baseType: !1953, size: 192, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1518, file: !1269, line: 500, baseType: !802, offset: 6656)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1518, file: !1269, line: 501, baseType: !2765, size: 64, offset: 6656)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1269, line: 387, flags: DIFlagFwdDecl)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1518, file: !1269, line: 516, baseType: !2162, size: 64, offset: 6720)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1518, file: !1269, line: 519, baseType: !913, size: 64, offset: 6784)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1518, file: !1269, line: 521, baseType: !2770, size: 64, offset: 6848)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1269, line: 521, flags: DIFlagFwdDecl)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1518, file: !1269, line: 545, baseType: !477, size: 32, offset: 6912)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1518, file: !1269, line: 548, baseType: !524, size: 8, offset: 6944)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1518, file: !1269, line: 550, baseType: !2775, offset: 6952)
!2775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2776, line: 142, elements: !816)
!2776 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1518, file: !1269, line: 554, baseType: !2407, size: 256, offset: 6976)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1518, file: !1269, line: 557, baseType: !331, size: 32, offset: 7232)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1515, file: !1269, line: 565, baseType: !2780, offset: 7296)
!2780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !685, elements: !2781)
!2781 = !{!2782}
!2782 = !DISubrange(count: -1)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1511, file: !1269, line: 151, baseType: !477, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1504, file: !1269, line: 156, baseType: !802, offset: 256)
!2785 = !DIDerivedType(tag: DW_TAG_member, scope: !1273, file: !1269, line: 159, baseType: !2786, size: 128)
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1273, file: !1269, line: 159, size: 128, elements: !2787)
!2787 = !{!2788, !2791}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2786, file: !1269, line: 161, baseType: !2789, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !1269, line: 161, flags: DIFlagFwdDecl)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2786, file: !1269, line: 162, baseType: !317, size: 64, offset: 64)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1273, file: !1269, line: 176, baseType: !926, size: 128, align: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, scope: !1268, file: !1269, line: 179, baseType: !2794, size: 32, offset: 384)
!2794 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1268, file: !1269, line: 179, size: 32, elements: !2795)
!2795 = !{!2796, !2797, !2798, !2799}
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2794, file: !1269, line: 184, baseType: !477, size: 32)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2794, file: !1269, line: 192, baseType: !7, size: 32)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2794, file: !1269, line: 194, baseType: !7, size: 32)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2794, file: !1269, line: 195, baseType: !327, size: 32)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1268, file: !1269, line: 199, baseType: !477, size: 32, offset: 416)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1203, file: !208, line: 1964, baseType: !2802, size: 64, offset: 1344)
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = !DISubroutineType(types: !2804)
!2804 = !{!333, !1145, !2805}
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2806, size: 64)
!2806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2807, line: 12, size: 256, elements: !2808)
!2807 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2808 = !{!2809, !2810, !2811, !2812, !2813}
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2806, file: !2807, line: 13, baseType: !323, size: 32)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2806, file: !2807, line: 16, baseType: !327, size: 32, offset: 32)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2806, file: !2807, line: 23, baseType: !685, size: 64, offset: 64)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2806, file: !2807, line: 30, baseType: !685, size: 64, offset: 128)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2806, file: !2807, line: 33, baseType: !2814, size: 64, offset: 192)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1269, line: 27, flags: DIFlagFwdDecl)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1203, file: !208, line: 1966, baseType: !2802, size: 64, offset: 1408)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1146, file: !208, line: 1424, baseType: !2818, size: 64, offset: 448)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !202, line: 322, size: 704, elements: !2821)
!2821 = !{!2822, !2868, !2872, !2876, !2877, !2878, !2879, !2880, !2885, !2890, !2894}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2820, file: !202, line: 323, baseType: !2823, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!327, !2826}
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !202, line: 294, size: 1600, elements: !2828)
!2828 = !{!2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2853, !2854, !2855}
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2827, file: !202, line: 295, baseType: !1185, size: 128)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2827, file: !202, line: 296, baseType: !774, size: 128, offset: 128)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2827, file: !202, line: 297, baseType: !774, size: 128, offset: 256)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2827, file: !202, line: 298, baseType: !774, size: 128, offset: 384)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2827, file: !202, line: 299, baseType: !1631, size: 192, offset: 512)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2827, file: !202, line: 300, baseType: !802, offset: 704)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2827, file: !202, line: 301, baseType: !477, size: 32, offset: 704)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2827, file: !202, line: 302, baseType: !1145, size: 64, offset: 768)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2827, file: !202, line: 303, baseType: !2838, size: 64, offset: 832)
!2838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !202, line: 68, size: 64, elements: !2839)
!2839 = !{!2840, !2852}
!2840 = !DIDerivedType(tag: DW_TAG_member, scope: !2838, file: !202, line: 69, baseType: !2841, size: 32)
!2841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2838, file: !202, line: 69, size: 32, elements: !2842)
!2842 = !{!2843, !2844, !2845}
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2841, file: !202, line: 70, baseType: !988, size: 32)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2841, file: !202, line: 71, baseType: !996, size: 32)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2841, file: !202, line: 72, baseType: !2846, size: 32)
!2846 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2847, line: 24, baseType: !2848)
!2847 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2847, line: 22, size: 32, elements: !2849)
!2849 = !{!2850}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2848, file: !2847, line: 23, baseType: !2851, size: 32)
!2851 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2847, line: 20, baseType: !994)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2838, file: !202, line: 74, baseType: !201, size: 32, offset: 32)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2827, file: !202, line: 304, baseType: !1079, size: 64, offset: 896)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2827, file: !202, line: 305, baseType: !685, size: 64, offset: 960)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2827, file: !202, line: 306, baseType: !2856, size: 576, offset: 1024)
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !202, line: 205, size: 576, elements: !2857)
!2857 = !{!2858, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2856, file: !202, line: 206, baseType: !2859, size: 64)
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !202, line: 66, baseType: !615)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2856, file: !202, line: 207, baseType: !2859, size: 64, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2856, file: !202, line: 208, baseType: !2859, size: 64, offset: 128)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2856, file: !202, line: 209, baseType: !2859, size: 64, offset: 192)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2856, file: !202, line: 210, baseType: !2859, size: 64, offset: 256)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2856, file: !202, line: 211, baseType: !2859, size: 64, offset: 320)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2856, file: !202, line: 212, baseType: !2859, size: 64, offset: 384)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2856, file: !202, line: 213, baseType: !1086, size: 64, offset: 448)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2856, file: !202, line: 214, baseType: !1086, size: 64, offset: 512)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2820, file: !202, line: 324, baseType: !2869, size: 64, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!2826, !1145, !327}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2820, file: !202, line: 325, baseType: !2873, size: 64, offset: 128)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2826}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2820, file: !202, line: 326, baseType: !2823, size: 64, offset: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2820, file: !202, line: 327, baseType: !2823, size: 64, offset: 256)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2820, file: !202, line: 328, baseType: !2823, size: 64, offset: 320)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2820, file: !202, line: 329, baseType: !1231, size: 64, offset: 384)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2820, file: !202, line: 332, baseType: !2881, size: 64, offset: 448)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!2884, !982}
!2884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2820, file: !202, line: 333, baseType: !2886, size: 64, offset: 512)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!327, !982, !2889}
!2889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2820, file: !202, line: 335, baseType: !2891, size: 64, offset: 576)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{!327, !982, !2884}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2820, file: !202, line: 337, baseType: !2895, size: 64, offset: 640)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = !DISubroutineType(types: !2897)
!2897 = !{!327, !1145, !2898}
!2898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2838, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1146, file: !208, line: 1425, baseType: !2900, size: 64, offset: 512)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2902)
!2902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !202, line: 428, size: 704, elements: !2903)
!2903 = !{!2904, !2908, !2909, !2913, !2914, !2915, !2930, !2953, !2957, !2958, !2981}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2902, file: !202, line: 429, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!327, !1145, !327, !327, !1095}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2902, file: !202, line: 430, baseType: !1231, size: 64, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2902, file: !202, line: 431, baseType: !2910, size: 64, offset: 128)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = !DISubroutineType(types: !2912)
!2912 = !{!327, !1145, !7}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2902, file: !202, line: 432, baseType: !2910, size: 64, offset: 192)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2902, file: !202, line: 433, baseType: !1231, size: 64, offset: 256)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2902, file: !202, line: 434, baseType: !2916, size: 64, offset: 320)
!2916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2917, size: 64)
!2917 = !DISubroutineType(types: !2918)
!2918 = !{!327, !1145, !327, !2919}
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !202, line: 415, size: 256, elements: !2921)
!2921 = !{!2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929}
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2920, file: !202, line: 416, baseType: !327, size: 32)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2920, file: !202, line: 417, baseType: !7, size: 32, offset: 32)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2920, file: !202, line: 418, baseType: !7, size: 32, offset: 64)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2920, file: !202, line: 420, baseType: !7, size: 32, offset: 96)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2920, file: !202, line: 421, baseType: !7, size: 32, offset: 128)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2920, file: !202, line: 422, baseType: !7, size: 32, offset: 160)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2920, file: !202, line: 423, baseType: !7, size: 32, offset: 192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2920, file: !202, line: 424, baseType: !7, size: 32, offset: 224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2902, file: !202, line: 435, baseType: !2931, size: 64, offset: 384)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DISubroutineType(types: !2933)
!2933 = !{!327, !1145, !2838, !2934}
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !202, line: 343, size: 960, elements: !2936)
!2936 = !{!2937, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2935, file: !202, line: 344, baseType: !327, size: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2935, file: !202, line: 345, baseType: !335, size: 64, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2935, file: !202, line: 346, baseType: !335, size: 64, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2935, file: !202, line: 347, baseType: !335, size: 64, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2935, file: !202, line: 348, baseType: !335, size: 64, offset: 256)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2935, file: !202, line: 349, baseType: !335, size: 64, offset: 320)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2935, file: !202, line: 350, baseType: !335, size: 64, offset: 384)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2935, file: !202, line: 351, baseType: !1319, size: 64, offset: 448)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2935, file: !202, line: 353, baseType: !1319, size: 64, offset: 512)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2935, file: !202, line: 354, baseType: !327, size: 32, offset: 576)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2935, file: !202, line: 355, baseType: !327, size: 32, offset: 608)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2935, file: !202, line: 356, baseType: !335, size: 64, offset: 640)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2935, file: !202, line: 357, baseType: !335, size: 64, offset: 704)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2935, file: !202, line: 358, baseType: !335, size: 64, offset: 768)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2935, file: !202, line: 359, baseType: !1319, size: 64, offset: 832)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2935, file: !202, line: 360, baseType: !327, size: 32, offset: 896)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2902, file: !202, line: 436, baseType: !2954, size: 64, offset: 448)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DISubroutineType(types: !2956)
!2956 = !{!327, !1145, !2898, !2934}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2902, file: !202, line: 438, baseType: !2931, size: 64, offset: 512)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2902, file: !202, line: 439, baseType: !2959, size: 64, offset: 576)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!327, !1145, !2962}
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !202, line: 409, size: 1408, elements: !2964)
!2964 = !{!2965, !2966}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2963, file: !202, line: 410, baseType: !7, size: 32)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2963, file: !202, line: 411, baseType: !2967, size: 1344, offset: 64)
!2967 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2968, size: 1344, elements: !580)
!2968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !202, line: 395, size: 448, elements: !2969)
!2969 = !{!2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2980}
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2968, file: !202, line: 396, baseType: !7, size: 32)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2968, file: !202, line: 397, baseType: !7, size: 32, offset: 32)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2968, file: !202, line: 399, baseType: !7, size: 32, offset: 64)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2968, file: !202, line: 400, baseType: !7, size: 32, offset: 96)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2968, file: !202, line: 401, baseType: !7, size: 32, offset: 128)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2968, file: !202, line: 402, baseType: !7, size: 32, offset: 160)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2968, file: !202, line: 403, baseType: !7, size: 32, offset: 192)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2968, file: !202, line: 404, baseType: !337, size: 64, offset: 256)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2968, file: !202, line: 405, baseType: !2979, size: 64, offset: 320)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !324, line: 126, baseType: !335)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2968, file: !202, line: 406, baseType: !2979, size: 64, offset: 384)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2902, file: !202, line: 440, baseType: !2910, size: 64, offset: 640)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1146, file: !208, line: 1426, baseType: !2983, size: 64, offset: 576)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2985)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !208, line: 49, flags: DIFlagFwdDecl)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1146, file: !208, line: 1427, baseType: !685, size: 64, offset: 640)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1146, file: !208, line: 1428, baseType: !685, size: 64, offset: 704)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1146, file: !208, line: 1429, baseType: !685, size: 64, offset: 768)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1146, file: !208, line: 1430, baseType: !943, size: 64, offset: 832)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1146, file: !208, line: 1431, baseType: !1309, size: 256, offset: 896)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1146, file: !208, line: 1432, baseType: !327, size: 32, offset: 1152)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1146, file: !208, line: 1433, baseType: !477, size: 32, offset: 1184)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1146, file: !208, line: 1437, baseType: !2994, size: 64, offset: 1216)
!2994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2995, size: 64)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2997)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !208, line: 1437, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1146, file: !208, line: 1449, baseType: !2999, size: 64, offset: 1280)
!2999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !959, line: 34, size: 64, elements: !3000)
!3000 = !{!3001}
!3001 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2999, file: !959, line: 35, baseType: !962, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1146, file: !208, line: 1450, baseType: !774, size: 128, offset: 1344)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1146, file: !208, line: 1451, baseType: !3004, size: 64, offset: 1472)
!3004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3005, size: 64)
!3005 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !208, line: 699, flags: DIFlagFwdDecl)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1146, file: !208, line: 1452, baseType: !2373, size: 64, offset: 1536)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1146, file: !208, line: 1453, baseType: !3008, size: 64, offset: 1600)
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !208, line: 1453, flags: DIFlagFwdDecl)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1146, file: !208, line: 1454, baseType: !1185, size: 128, offset: 1664)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1146, file: !208, line: 1455, baseType: !7, size: 32, offset: 1792)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1146, file: !208, line: 1456, baseType: !3013, size: 2432, offset: 1856)
!3013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !202, line: 518, size: 2432, elements: !3014)
!3014 = !{!3015, !3016, !3017, !3019, !3051}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3013, file: !202, line: 519, baseType: !7, size: 32)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3013, file: !202, line: 520, baseType: !1309, size: 256, offset: 64)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3013, file: !202, line: 521, baseType: !3018, size: 192, offset: 320)
!3018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !982, size: 192, elements: !580)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3013, file: !202, line: 522, baseType: !3020, size: 1728, offset: 512)
!3020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3021, size: 1728, elements: !580)
!3021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !202, line: 222, size: 576, elements: !3022)
!3022 = !{!3023, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3050}
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3021, file: !202, line: 223, baseType: !3024, size: 64)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !202, line: 443, size: 256, elements: !3026)
!3026 = !{!3027, !3028, !3041, !3042}
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3025, file: !202, line: 444, baseType: !327, size: 32)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3025, file: !202, line: 445, baseType: !3029, size: 64, offset: 64)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3031)
!3031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !202, line: 310, size: 512, elements: !3032)
!3032 = !{!3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3031, file: !202, line: 311, baseType: !1231, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3031, file: !202, line: 312, baseType: !1231, size: 64, offset: 64)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3031, file: !202, line: 313, baseType: !1231, size: 64, offset: 128)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3031, file: !202, line: 314, baseType: !1231, size: 64, offset: 192)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3031, file: !202, line: 315, baseType: !2823, size: 64, offset: 256)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3031, file: !202, line: 316, baseType: !2823, size: 64, offset: 320)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3031, file: !202, line: 317, baseType: !2823, size: 64, offset: 384)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3031, file: !202, line: 318, baseType: !2895, size: 64, offset: 448)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3025, file: !202, line: 446, baseType: !350, size: 64, offset: 128)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3025, file: !202, line: 447, baseType: !3024, size: 64, offset: 192)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3021, file: !202, line: 224, baseType: !327, size: 32, offset: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3021, file: !202, line: 226, baseType: !774, size: 128, offset: 128)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3021, file: !202, line: 227, baseType: !685, size: 64, offset: 256)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3021, file: !202, line: 228, baseType: !7, size: 32, offset: 320)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3021, file: !202, line: 229, baseType: !7, size: 32, offset: 352)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3021, file: !202, line: 230, baseType: !2859, size: 64, offset: 384)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3021, file: !202, line: 231, baseType: !2859, size: 64, offset: 448)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3021, file: !202, line: 232, baseType: !317, size: 64, offset: 512)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3013, file: !202, line: 523, baseType: !3052, size: 192, offset: 2240)
!3052 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3029, size: 192, elements: !580)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1146, file: !208, line: 1458, baseType: !3054, size: 2112, offset: 4288)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !208, line: 1410, size: 2112, elements: !3055)
!3055 = !{!3056, !3057, !3058}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3054, file: !208, line: 1411, baseType: !327, size: 32)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3054, file: !208, line: 1412, baseType: !1932, size: 128, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3054, file: !208, line: 1413, baseType: !3059, size: 1920, offset: 192)
!3059 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3060, size: 1920, elements: !580)
!3060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3061, line: 12, size: 640, elements: !3062)
!3061 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3062 = !{!3063, !3071, !3072, !3077, !3078}
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3060, file: !3061, line: 13, baseType: !3064, size: 320)
!3064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3065, line: 17, size: 320, elements: !3066)
!3065 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3066 = !{!3067, !3068, !3069, !3070}
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3064, file: !3065, line: 18, baseType: !327, size: 32)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3064, file: !3065, line: 19, baseType: !327, size: 32, offset: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3064, file: !3065, line: 20, baseType: !1932, size: 128, offset: 64)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3064, file: !3065, line: 22, baseType: !926, size: 128, align: 64, offset: 192)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3060, file: !3061, line: 14, baseType: !399, size: 64, offset: 320)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3060, file: !3061, line: 15, baseType: !3073, size: 64, offset: 384)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3074, line: 16, size: 64, elements: !3075)
!3074 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3075 = !{!3076}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3073, file: !3074, line: 17, baseType: !1674, size: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3060, file: !3061, line: 16, baseType: !1932, size: 128, offset: 448)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3060, file: !3061, line: 17, baseType: !477, size: 32, offset: 576)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1146, file: !208, line: 1465, baseType: !317, size: 64, offset: 6400)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1146, file: !208, line: 1468, baseType: !331, size: 32, offset: 6464)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1146, file: !208, line: 1470, baseType: !1086, size: 64, offset: 6528)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1146, file: !208, line: 1471, baseType: !1086, size: 64, offset: 6592)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1146, file: !208, line: 1473, baseType: !332, size: 32, offset: 6656)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1146, file: !208, line: 1474, baseType: !3085, size: 64, offset: 6720)
!3085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3086, size: 64)
!3086 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !208, line: 603, flags: DIFlagFwdDecl)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1146, file: !208, line: 1477, baseType: !3088, size: 256, offset: 6784)
!3088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 256, elements: !2680)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1146, file: !208, line: 1478, baseType: !3090, size: 128, offset: 7040)
!3090 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3091, line: 18, baseType: !3092)
!3091 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3091, line: 16, size: 128, elements: !3093)
!3093 = !{!3094}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3092, file: !3091, line: 17, baseType: !3095, size: 128)
!3095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 128, elements: !2184)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1146, file: !208, line: 1480, baseType: !7, size: 32, offset: 7168)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1146, file: !208, line: 1481, baseType: !3098, size: 32, offset: 7200)
!3098 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !324, line: 150, baseType: !7)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1146, file: !208, line: 1487, baseType: !1631, size: 192, offset: 7232)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1146, file: !208, line: 1493, baseType: !346, size: 64, offset: 7424)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1146, file: !208, line: 1495, baseType: !3102, size: 64, offset: 7488)
!3102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3103, size: 64)
!3103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3104)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !941, line: 135, size: 1024, align: 512, elements: !3105)
!3105 = !{!3106, !3110, !3111, !3118, !3124, !3128, !3132, !3136, !3137, !3141, !3145, !3150, !3154}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3104, file: !941, line: 136, baseType: !3107, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!327, !943, !7}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3104, file: !941, line: 137, baseType: !3107, size: 64, offset: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3104, file: !941, line: 138, baseType: !3112, size: 64, offset: 128)
!3112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3113, size: 64)
!3113 = !DISubroutineType(types: !3114)
!3114 = !{!327, !3115, !3117}
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !944)
!3117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3104, file: !941, line: 139, baseType: !3119, size: 64, offset: 192)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = !DISubroutineType(types: !3121)
!3121 = !{!327, !3115, !7, !346, !3122}
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !967)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3104, file: !941, line: 141, baseType: !3125, size: 64, offset: 256)
!3125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3126, size: 64)
!3126 = !DISubroutineType(types: !3127)
!3127 = !{!327, !3115}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3104, file: !941, line: 142, baseType: !3129, size: 64, offset: 320)
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = !DISubroutineType(types: !3131)
!3131 = !{!327, !943}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3104, file: !941, line: 143, baseType: !3133, size: 64, offset: 384)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{null, !943}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3104, file: !941, line: 144, baseType: !3133, size: 64, offset: 448)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3104, file: !941, line: 145, baseType: !3138, size: 64, offset: 512)
!3138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3139, size: 64)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{null, !943, !982}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3104, file: !941, line: 146, baseType: !3142, size: 64, offset: 576)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!368, !943, !368, !327}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3104, file: !941, line: 147, baseType: !3146, size: 64, offset: 640)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!939, !3149}
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3104, file: !941, line: 148, baseType: !3151, size: 64, offset: 704)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{!327, !1095, !524}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3104, file: !941, line: 149, baseType: !3155, size: 64, offset: 768)
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DISubroutineType(types: !3157)
!3157 = !{!943, !943, !3158}
!3158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3159, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !983)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1146, file: !208, line: 1500, baseType: !327, size: 32, offset: 7552)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1146, file: !208, line: 1502, baseType: !3162, size: 448, offset: 7616)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2807, line: 60, size: 448, elements: !3163)
!3163 = !{!3164, !3169, !3170, !3171, !3172, !3173, !3174}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3162, file: !2807, line: 61, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!685, !3168, !2805}
!3168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3162, file: !2807, line: 63, baseType: !3165, size: 64, offset: 64)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3162, file: !2807, line: 66, baseType: !333, size: 64, offset: 128)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3162, file: !2807, line: 67, baseType: !327, size: 32, offset: 192)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3162, file: !2807, line: 68, baseType: !7, size: 32, offset: 224)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3162, file: !2807, line: 71, baseType: !774, size: 128, offset: 256)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3162, file: !2807, line: 77, baseType: !3175, size: 64, offset: 384)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1146, file: !208, line: 1505, baseType: !1313, size: 64, offset: 8064)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1146, file: !208, line: 1508, baseType: !1313, size: 64, offset: 8128)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1146, file: !208, line: 1511, baseType: !327, size: 32, offset: 8192)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1146, file: !208, line: 1514, baseType: !1449, size: 32, offset: 8224)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1146, file: !208, line: 1517, baseType: !3181, size: 64, offset: 8256)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2408, line: 18, flags: DIFlagFwdDecl)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1146, file: !208, line: 1518, baseType: !1181, size: 64, offset: 8320)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1146, file: !208, line: 1525, baseType: !2162, size: 64, offset: 8384)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1146, file: !208, line: 1532, baseType: !3186, size: 64, offset: 8448)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3187, line: 52, size: 64, elements: !3188)
!3187 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3188 = !{!3189}
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3186, file: !3187, line: 53, baseType: !3190, size: 64)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3187, line: 40, size: 256, elements: !3192)
!3192 = !{!3193, !3194, !3199}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3191, file: !3187, line: 42, baseType: !802)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3191, file: !3187, line: 44, baseType: !3195, size: 192)
!3195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3187, line: 28, size: 192, elements: !3196)
!3196 = !{!3197, !3198}
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3195, file: !3187, line: 29, baseType: !774, size: 128)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3195, file: !3187, line: 31, baseType: !333, size: 64, offset: 128)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3191, file: !3187, line: 49, baseType: !333, size: 64, offset: 192)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1146, file: !208, line: 1533, baseType: !3186, size: 64, offset: 8512)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1146, file: !208, line: 1534, baseType: !926, size: 128, align: 64, offset: 8576)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1146, file: !208, line: 1535, baseType: !2407, size: 256, offset: 8704)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1146, file: !208, line: 1537, baseType: !1631, size: 192, offset: 8960)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1146, file: !208, line: 1542, baseType: !327, size: 32, offset: 9152)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1146, file: !208, line: 1545, baseType: !802, offset: 9184)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1146, file: !208, line: 1546, baseType: !774, size: 128, offset: 9216)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1146, file: !208, line: 1548, baseType: !802, offset: 9344)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1146, file: !208, line: 1549, baseType: !774, size: 128, offset: 9344)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !983, file: !208, line: 624, baseType: !1280, size: 64, offset: 256)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !983, file: !208, line: 631, baseType: !685, size: 64, offset: 320)
!3211 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !208, line: 639, baseType: !3212, size: 32, offset: 384)
!3212 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !208, line: 639, size: 32, elements: !3213)
!3213 = !{!3214, !3216}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3212, file: !208, line: 640, baseType: !3215, size: 32)
!3215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3212, file: !208, line: 641, baseType: !7, size: 32)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !983, file: !208, line: 643, baseType: !1061, size: 32, offset: 416)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !983, file: !208, line: 644, baseType: !1079, size: 64, offset: 448)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !983, file: !208, line: 645, baseType: !1082, size: 128, offset: 512)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !983, file: !208, line: 646, baseType: !1082, size: 128, offset: 640)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !983, file: !208, line: 647, baseType: !1082, size: 128, offset: 768)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !983, file: !208, line: 648, baseType: !802, offset: 896)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !983, file: !208, line: 649, baseType: !330, size: 16, offset: 896)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !983, file: !208, line: 650, baseType: !318, size: 8, offset: 912)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !983, file: !208, line: 651, baseType: !318, size: 8, offset: 920)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !983, file: !208, line: 652, baseType: !2979, size: 64, offset: 960)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !983, file: !208, line: 659, baseType: !685, size: 64, offset: 1024)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !983, file: !208, line: 660, baseType: !1309, size: 256, offset: 1088)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !983, file: !208, line: 662, baseType: !685, size: 64, offset: 1344)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !983, file: !208, line: 663, baseType: !685, size: 64, offset: 1408)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !983, file: !208, line: 665, baseType: !1185, size: 128, offset: 1472)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !983, file: !208, line: 666, baseType: !774, size: 128, offset: 1600)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !983, file: !208, line: 675, baseType: !774, size: 128, offset: 1728)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !983, file: !208, line: 676, baseType: !774, size: 128, offset: 1856)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !983, file: !208, line: 677, baseType: !774, size: 128, offset: 1984)
!3236 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !208, line: 678, baseType: !3237, size: 128, offset: 2112)
!3237 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !208, line: 678, size: 128, elements: !3238)
!3238 = !{!3239, !3240}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3237, file: !208, line: 679, baseType: !1181, size: 64)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3237, file: !208, line: 680, baseType: !926, size: 128, align: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !983, file: !208, line: 682, baseType: !1315, size: 64, offset: 2240)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !983, file: !208, line: 683, baseType: !1315, size: 64, offset: 2304)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !983, file: !208, line: 684, baseType: !477, size: 32, offset: 2368)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !983, file: !208, line: 685, baseType: !477, size: 32, offset: 2400)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !983, file: !208, line: 686, baseType: !477, size: 32, offset: 2432)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !983, file: !208, line: 688, baseType: !477, size: 32, offset: 2464)
!3247 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !208, line: 690, baseType: !3248, size: 64, offset: 2496)
!3248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !208, line: 690, size: 64, elements: !3249)
!3249 = !{!3250, !3482}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3248, file: !208, line: 691, baseType: !3251, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3253)
!3253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !208, line: 1822, size: 2048, elements: !3254)
!3254 = !{!3255, !3256, !3260, !3265, !3269, !3270, !3271, !3275, !3288, !3289, !3306, !3310, !3311, !3315, !3316, !3320, !3325, !3326, !3330, !3334, !3442, !3446, !3447, !3451, !3452, !3456, !3460, !3465, !3469, !3473, !3477, !3481}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3253, file: !208, line: 1823, baseType: !350, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3253, file: !208, line: 1824, baseType: !3257, size: 64, offset: 64)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DISubroutineType(types: !3259)
!3259 = !{!1079, !913, !1079, !327}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3253, file: !208, line: 1825, baseType: !3261, size: 64, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3262, size: 64)
!3262 = !DISubroutineType(types: !3263)
!3263 = !{!869, !913, !368, !883, !3264}
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3253, file: !208, line: 1826, baseType: !3266, size: 64, offset: 192)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{!869, !913, !346, !883, !3264}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3253, file: !208, line: 1827, baseType: !1386, size: 64, offset: 256)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3253, file: !208, line: 1828, baseType: !1386, size: 64, offset: 320)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3253, file: !208, line: 1829, baseType: !3272, size: 64, offset: 384)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 64)
!3273 = !DISubroutineType(types: !3274)
!3274 = !{!327, !1389, !524}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3253, file: !208, line: 1830, baseType: !3276, size: 64, offset: 448)
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!327, !913, !3279}
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !208, line: 1776, size: 128, elements: !3281)
!3281 = !{!3282, !3287}
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3280, file: !208, line: 1777, baseType: !3283, size: 64)
!3283 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !208, line: 1773, baseType: !3284)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!327, !3279, !346, !327, !1079, !335, !7}
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3280, file: !208, line: 1778, baseType: !1079, size: 64, offset: 64)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3253, file: !208, line: 1831, baseType: !3276, size: 64, offset: 512)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3253, file: !208, line: 1832, baseType: !3290, size: 64, offset: 576)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!3293, !913, !3295}
!3293 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3294, line: 52, baseType: !7)
!3294 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3296, size: 64)
!3296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3297, line: 43, size: 128, elements: !3298)
!3297 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3298 = !{!3299, !3305}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3296, file: !3297, line: 44, baseType: !3300, size: 64)
!3300 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3297, line: 37, baseType: !3301)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{null, !913, !3304, !3295}
!3304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3296, file: !3297, line: 45, baseType: !3293, size: 32, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3253, file: !208, line: 1833, baseType: !3307, size: 64, offset: 640)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!333, !913, !7, !685}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3253, file: !208, line: 1834, baseType: !3307, size: 64, offset: 704)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3253, file: !208, line: 1835, baseType: !3312, size: 64, offset: 768)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!327, !913, !1521}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3253, file: !208, line: 1836, baseType: !685, size: 64, offset: 832)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3253, file: !208, line: 1837, baseType: !3317, size: 64, offset: 896)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DISubroutineType(types: !3319)
!3319 = !{!327, !982, !913}
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3253, file: !208, line: 1838, baseType: !3321, size: 64, offset: 960)
!3321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3322, size: 64)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!327, !913, !3324}
!3324 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !208, line: 1007, baseType: !317)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3253, file: !208, line: 1839, baseType: !3317, size: 64, offset: 1024)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3253, file: !208, line: 1840, baseType: !3327, size: 64, offset: 1088)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = !DISubroutineType(types: !3329)
!3329 = !{!327, !913, !1079, !1079, !327}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3253, file: !208, line: 1841, baseType: !3331, size: 64, offset: 1152)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!327, !327, !913, !327}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3253, file: !208, line: 1842, baseType: !3335, size: 64, offset: 1216)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DISubroutineType(types: !3337)
!3337 = !{!327, !913, !327, !3338}
!3338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3339, size: 64)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !208, line: 1062, size: 1664, elements: !3340)
!3340 = !{!3341, !3342, !3343, !3344, !3345, !3346, !3347, !3348, !3349, !3350, !3351, !3352, !3353, !3354, !3355, !3372, !3373, !3374, !3387, !3418}
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3339, file: !208, line: 1063, baseType: !3338, size: 64)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3339, file: !208, line: 1064, baseType: !774, size: 128, offset: 64)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3339, file: !208, line: 1065, baseType: !1185, size: 128, offset: 192)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3339, file: !208, line: 1066, baseType: !774, size: 128, offset: 320)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3339, file: !208, line: 1069, baseType: !774, size: 128, offset: 448)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3339, file: !208, line: 1072, baseType: !3324, size: 64, offset: 576)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3339, file: !208, line: 1073, baseType: !7, size: 32, offset: 640)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3339, file: !208, line: 1074, baseType: !322, size: 8, offset: 672)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3339, file: !208, line: 1075, baseType: !7, size: 32, offset: 704)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3339, file: !208, line: 1076, baseType: !327, size: 32, offset: 736)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3339, file: !208, line: 1077, baseType: !1932, size: 128, offset: 768)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3339, file: !208, line: 1078, baseType: !913, size: 64, offset: 896)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3339, file: !208, line: 1079, baseType: !1079, size: 64, offset: 960)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3339, file: !208, line: 1080, baseType: !1079, size: 64, offset: 1024)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3339, file: !208, line: 1082, baseType: !3356, size: 64, offset: 1088)
!3356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3357, size: 64)
!3357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !208, line: 1314, size: 320, elements: !3358)
!3358 = !{!3359, !3367, !3368, !3369, !3370, !3371}
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3357, file: !208, line: 1315, baseType: !3360)
!3360 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3361, line: 20, baseType: !3362)
!3361 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3361, line: 11, elements: !3363)
!3363 = !{!3364}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3362, file: !3361, line: 12, baseType: !3365)
!3365 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !814, line: 33, baseType: !3366)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !814, line: 31, elements: !816)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3357, file: !208, line: 1316, baseType: !327, size: 32)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3357, file: !208, line: 1317, baseType: !327, size: 32, offset: 32)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3357, file: !208, line: 1318, baseType: !3356, size: 64, offset: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3357, file: !208, line: 1319, baseType: !913, size: 64, offset: 128)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3357, file: !208, line: 1320, baseType: !926, size: 128, align: 64, offset: 192)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3339, file: !208, line: 1084, baseType: !685, size: 64, offset: 1152)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3339, file: !208, line: 1085, baseType: !685, size: 64, offset: 1216)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3339, file: !208, line: 1087, baseType: !3375, size: 64, offset: 1280)
!3375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3376, size: 64)
!3376 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3377)
!3377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !208, line: 1011, size: 128, elements: !3378)
!3378 = !{!3379, !3383}
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3377, file: !208, line: 1012, baseType: !3380, size: 64)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{null, !3338, !3338}
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3377, file: !208, line: 1013, baseType: !3384, size: 64, offset: 64)
!3384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3385, size: 64)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{null, !3338}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3339, file: !208, line: 1088, baseType: !3388, size: 64, offset: 1344)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3390)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !208, line: 1016, size: 512, elements: !3391)
!3391 = !{!3392, !3396, !3400, !3401, !3405, !3409, !3413, !3417}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3390, file: !208, line: 1017, baseType: !3393, size: 64)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!3324, !3324}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3390, file: !208, line: 1018, baseType: !3397, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{null, !3324}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3390, file: !208, line: 1019, baseType: !3384, size: 64, offset: 128)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3390, file: !208, line: 1020, baseType: !3402, size: 64, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!327, !3338, !327}
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3390, file: !208, line: 1021, baseType: !3406, size: 64, offset: 256)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!524, !3338}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3390, file: !208, line: 1022, baseType: !3410, size: 64, offset: 320)
!3410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3411, size: 64)
!3411 = !DISubroutineType(types: !3412)
!3412 = !{!327, !3338, !327, !777}
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3390, file: !208, line: 1023, baseType: !3414, size: 64, offset: 384)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{null, !3338, !1363}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3390, file: !208, line: 1024, baseType: !3406, size: 64, offset: 448)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3339, file: !208, line: 1097, baseType: !3419, size: 256, offset: 1408)
!3419 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3339, file: !208, line: 1089, size: 256, elements: !3420)
!3420 = !{!3421, !3430, !3436}
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3419, file: !208, line: 1090, baseType: !3422, size: 256)
!3422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3423, line: 10, size: 256, elements: !3424)
!3423 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3424 = !{!3425, !3426, !3429}
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3422, file: !3423, line: 11, baseType: !331, size: 32)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3422, file: !3423, line: 12, baseType: !3427, size: 64, offset: 64)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3423, line: 5, flags: DIFlagFwdDecl)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3422, file: !3423, line: 13, baseType: !774, size: 128, offset: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3419, file: !208, line: 1091, baseType: !3431, size: 64)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3423, line: 17, size: 64, elements: !3432)
!3432 = !{!3433}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3431, file: !3423, line: 18, baseType: !3434, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3423, line: 16, flags: DIFlagFwdDecl)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3419, file: !208, line: 1096, baseType: !3437, size: 192)
!3437 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3419, file: !208, line: 1092, size: 192, elements: !3438)
!3438 = !{!3439, !3440, !3441}
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3437, file: !208, line: 1093, baseType: !774, size: 128)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3437, file: !208, line: 1094, baseType: !327, size: 32, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3437, file: !208, line: 1095, baseType: !7, size: 32, offset: 160)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3253, file: !208, line: 1843, baseType: !3443, size: 64, offset: 1280)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!869, !913, !1267, !327, !883, !3264, !327}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3253, file: !208, line: 1844, baseType: !1561, size: 64, offset: 1344)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3253, file: !208, line: 1845, baseType: !3448, size: 64, offset: 1408)
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!327, !327}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3253, file: !208, line: 1846, baseType: !3335, size: 64, offset: 1472)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3253, file: !208, line: 1847, baseType: !3453, size: 64, offset: 1536)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!869, !2548, !913, !3264, !883, !7}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3253, file: !208, line: 1848, baseType: !3457, size: 64, offset: 1600)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!869, !913, !3264, !2548, !883, !7}
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3253, file: !208, line: 1849, baseType: !3461, size: 64, offset: 1664)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{!327, !913, !333, !3464, !1363}
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3338, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3253, file: !208, line: 1850, baseType: !3466, size: 64, offset: 1728)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DISubroutineType(types: !3468)
!3468 = !{!333, !913, !327, !1079, !1079}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3253, file: !208, line: 1852, baseType: !3470, size: 64, offset: 1792)
!3470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3471, size: 64)
!3471 = !DISubroutineType(types: !3472)
!3472 = !{null, !1257, !913}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3253, file: !208, line: 1856, baseType: !3474, size: 64, offset: 1856)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DISubroutineType(types: !3476)
!3476 = !{!869, !913, !1079, !913, !1079, !883, !7}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3253, file: !208, line: 1858, baseType: !3478, size: 64, offset: 1920)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!1079, !913, !1079, !913, !1079, !1079, !7}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3253, file: !208, line: 1861, baseType: !3327, size: 64, offset: 1984)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3248, file: !208, line: 692, baseType: !1210, size: 64)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !983, file: !208, line: 694, baseType: !3484, size: 64, offset: 2560)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !208, line: 1100, size: 384, elements: !3486)
!3486 = !{!3487, !3488, !3489, !3490}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3485, file: !208, line: 1101, baseType: !802)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3485, file: !208, line: 1102, baseType: !774, size: 128)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3485, file: !208, line: 1103, baseType: !774, size: 128, offset: 128)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3485, file: !208, line: 1104, baseType: !774, size: 128, offset: 256)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !983, file: !208, line: 695, baseType: !1281, size: 1216, align: 64, offset: 2624)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !983, file: !208, line: 696, baseType: !774, size: 128, offset: 3840)
!3493 = !DIDerivedType(tag: DW_TAG_member, scope: !983, file: !208, line: 697, baseType: !3494, size: 64, offset: 3968)
!3494 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !983, file: !208, line: 697, size: 64, elements: !3495)
!3495 = !{!3496, !3497, !3498, !3509, !3510}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3494, file: !208, line: 698, baseType: !2548, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3494, file: !208, line: 699, baseType: !3004, size: 64)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3494, file: !208, line: 700, baseType: !3499, size: 64)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3501, line: 14, size: 832, elements: !3502)
!3501 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3502 = !{!3503, !3504, !3505, !3506, !3507, !3508}
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3500, file: !3501, line: 15, baseType: !789, size: 512)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3500, file: !3501, line: 16, baseType: !350, size: 64, offset: 512)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3500, file: !3501, line: 17, baseType: !3251, size: 64, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3500, file: !3501, line: 18, baseType: !774, size: 128, offset: 640)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3500, file: !3501, line: 19, baseType: !1061, size: 32, offset: 768)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3500, file: !3501, line: 20, baseType: !7, size: 32, offset: 800)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3494, file: !208, line: 701, baseType: !368, size: 64)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3494, file: !208, line: 702, baseType: !7, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !983, file: !208, line: 705, baseType: !332, size: 32, offset: 4032)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !983, file: !208, line: 708, baseType: !332, size: 32, offset: 4064)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !983, file: !208, line: 709, baseType: !3085, size: 64, offset: 4096)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !983, file: !208, line: 720, baseType: !317, size: 64, offset: 4160)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !944, file: !941, line: 98, baseType: !3516, size: 256, offset: 448)
!3516 = !DICompositeType(tag: DW_TAG_array_type, baseType: !322, size: 256, elements: !2680)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !944, file: !941, line: 101, baseType: !3518, size: 32, offset: 704)
!3518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3519, line: 25, size: 32, elements: !3520)
!3519 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3520 = !{!3521}
!3521 = !DIDerivedType(tag: DW_TAG_member, scope: !3518, file: !3519, line: 26, baseType: !3522, size: 32)
!3522 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3518, file: !3519, line: 26, size: 32, elements: !3523)
!3523 = !{!3524}
!3524 = !DIDerivedType(tag: DW_TAG_member, scope: !3522, file: !3519, line: 30, baseType: !3525, size: 32)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3522, file: !3519, line: 30, size: 32, elements: !3526)
!3526 = !{!3527, !3528}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3525, file: !3519, line: 31, baseType: !802)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3525, file: !3519, line: 32, baseType: !327, size: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !944, file: !941, line: 102, baseType: !3102, size: 64, offset: 768)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !944, file: !941, line: 103, baseType: !1145, size: 64, offset: 832)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !944, file: !941, line: 104, baseType: !685, size: 64, offset: 896)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !944, file: !941, line: 105, baseType: !317, size: 64, offset: 960)
!3533 = !DIDerivedType(tag: DW_TAG_member, scope: !944, file: !941, line: 107, baseType: !3534, size: 128, offset: 1024)
!3534 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !944, file: !941, line: 107, size: 128, elements: !3535)
!3535 = !{!3536, !3537}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3534, file: !941, line: 108, baseType: !774, size: 128)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3534, file: !941, line: 109, baseType: !3304, size: 64)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !944, file: !941, line: 111, baseType: !774, size: 128, offset: 1152)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !944, file: !941, line: 112, baseType: !774, size: 128, offset: 1280)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !944, file: !941, line: 120, baseType: !3541, size: 128, offset: 1408)
!3541 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !944, file: !941, line: 116, size: 128, elements: !3542)
!3542 = !{!3543, !3544, !3545}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3541, file: !941, line: 117, baseType: !1185, size: 128)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3541, file: !941, line: 118, baseType: !958, size: 128)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3541, file: !941, line: 119, baseType: !926, size: 128, align: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !914, file: !208, line: 922, baseType: !982, size: 64, offset: 256)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !914, file: !208, line: 923, baseType: !3251, size: 64, offset: 320)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !914, file: !208, line: 929, baseType: !802, offset: 384)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !914, file: !208, line: 930, baseType: !207, size: 32, offset: 384)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !914, file: !208, line: 931, baseType: !1313, size: 64, offset: 448)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !914, file: !208, line: 932, baseType: !7, size: 32, offset: 512)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !914, file: !208, line: 933, baseType: !3098, size: 32, offset: 544)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !914, file: !208, line: 934, baseType: !1631, size: 192, offset: 576)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !914, file: !208, line: 935, baseType: !1079, size: 64, offset: 768)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !914, file: !208, line: 936, baseType: !3556, size: 192, offset: 832)
!3556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !208, line: 885, size: 192, elements: !3557)
!3557 = !{!3558, !3559, !3560, !3561, !3562, !3563}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3556, file: !208, line: 886, baseType: !3360)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3556, file: !208, line: 887, baseType: !1922, size: 64)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3556, file: !208, line: 888, baseType: !216, size: 32, offset: 64)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3556, file: !208, line: 889, baseType: !988, size: 32, offset: 96)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3556, file: !208, line: 889, baseType: !988, size: 32, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3556, file: !208, line: 890, baseType: !327, size: 32, offset: 160)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !914, file: !208, line: 937, baseType: !1998, size: 64, offset: 1024)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !914, file: !208, line: 938, baseType: !3566, size: 256, offset: 1088)
!3566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !208, line: 896, size: 256, elements: !3567)
!3567 = !{!3568, !3569, !3570, !3571, !3572, !3573}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3566, file: !208, line: 897, baseType: !685, size: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3566, file: !208, line: 898, baseType: !7, size: 32, offset: 64)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3566, file: !208, line: 899, baseType: !7, size: 32, offset: 96)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3566, file: !208, line: 902, baseType: !7, size: 32, offset: 128)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3566, file: !208, line: 903, baseType: !7, size: 32, offset: 160)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3566, file: !208, line: 904, baseType: !1079, size: 64, offset: 192)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !914, file: !208, line: 940, baseType: !335, size: 64, offset: 1344)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !914, file: !208, line: 945, baseType: !317, size: 64, offset: 1408)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !914, file: !208, line: 949, baseType: !774, size: 128, offset: 1472)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !914, file: !208, line: 950, baseType: !774, size: 128, offset: 1600)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !914, file: !208, line: 952, baseType: !1280, size: 64, offset: 1728)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !914, file: !208, line: 953, baseType: !1449, size: 32, offset: 1792)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !914, file: !208, line: 954, baseType: !1449, size: 32, offset: 1824)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !904, file: !863, line: 174, baseType: !910, size: 64, offset: 320)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !904, file: !863, line: 176, baseType: !3583, size: 64, offset: 384)
!3583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3584, size: 64)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!327, !913, !795, !903, !1521}
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !892, file: !863, line: 90, baseType: !887, size: 64, offset: 192)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !892, file: !863, line: 91, baseType: !3588, size: 64, offset: 256)
!3588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !853, file: !790, line: 143, baseType: !3590, size: 64, offset: 256)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!3593, !795}
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3595)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !225, line: 39, size: 384, elements: !3596)
!3596 = !{!3597, !3598, !3602, !3606, !3612, !3616}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3595, file: !225, line: 40, baseType: !224, size: 32)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3595, file: !225, line: 41, baseType: !3599, size: 64, offset: 64)
!3599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!3600 = !DISubroutineType(types: !3601)
!3601 = !{!524}
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3595, file: !225, line: 42, baseType: !3603, size: 64, offset: 128)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!317}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3595, file: !225, line: 43, baseType: !3607, size: 64, offset: 192)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!2577, !3610}
!3610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3611, size: 64)
!3611 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !225, line: 19, flags: DIFlagFwdDecl)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3595, file: !225, line: 44, baseType: !3613, size: 64, offset: 256)
!3613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3614, size: 64)
!3614 = !DISubroutineType(types: !3615)
!3615 = !{!2577}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3595, file: !225, line: 45, baseType: !370, size: 64, offset: 320)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !853, file: !790, line: 144, baseType: !3618, size: 64, offset: 320)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{!2577, !795}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !853, file: !790, line: 145, baseType: !3622, size: 64, offset: 384)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{null, !795, !3625, !3626}
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!3626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !789, file: !790, line: 70, baseType: !3628, size: 64, offset: 384)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1165, line: 123, size: 1024, elements: !3630)
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3759, !3760, !3761, !3762, !3763}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3629, file: !1165, line: 124, baseType: !477, size: 32)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3629, file: !1165, line: 125, baseType: !477, size: 32, offset: 32)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3629, file: !1165, line: 135, baseType: !3628, size: 64, offset: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3629, file: !1165, line: 136, baseType: !346, size: 64, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3629, file: !1165, line: 138, baseType: !1302, size: 192, align: 64, offset: 192)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3629, file: !1165, line: 140, baseType: !2577, size: 64, offset: 384)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3629, file: !1165, line: 141, baseType: !7, size: 32, offset: 448)
!3638 = !DIDerivedType(tag: DW_TAG_member, scope: !3629, file: !1165, line: 142, baseType: !3639, size: 256, offset: 512)
!3639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3629, file: !1165, line: 142, size: 256, elements: !3640)
!3640 = !{!3641, !3687, !3691}
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3639, file: !1165, line: 143, baseType: !3642, size: 192)
!3642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1165, line: 91, size: 192, elements: !3643)
!3643 = !{!3644, !3645, !3646}
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3642, file: !1165, line: 92, baseType: !685, size: 64)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3642, file: !1165, line: 94, baseType: !1298, size: 64, offset: 64)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3642, file: !1165, line: 100, baseType: !3647, size: 64, offset: 128)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1165, line: 180, size: 704, elements: !3649)
!3649 = !{!3650, !3651, !3652, !3659, !3660, !3661, !3685, !3686}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3648, file: !1165, line: 182, baseType: !3628, size: 64)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3648, file: !1165, line: 183, baseType: !7, size: 32, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3648, file: !1165, line: 186, baseType: !3653, size: 192, offset: 128)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3654, line: 19, size: 192, elements: !3655)
!3654 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3655 = !{!3656, !3657, !3658}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3653, file: !3654, line: 20, baseType: !1285, size: 128)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3653, file: !3654, line: 21, baseType: !7, size: 32, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3653, file: !3654, line: 22, baseType: !7, size: 32, offset: 160)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3648, file: !1165, line: 187, baseType: !331, size: 32, offset: 320)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3648, file: !1165, line: 188, baseType: !331, size: 32, offset: 352)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3648, file: !1165, line: 189, baseType: !3662, size: 64, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3663, size: 64)
!3663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1165, line: 168, size: 320, elements: !3664)
!3664 = !{!3665, !3669, !3673, !3677, !3681}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3663, file: !1165, line: 169, baseType: !3666, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3667, size: 64)
!3667 = !DISubroutineType(types: !3668)
!3668 = !{!327, !1257, !3647}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3663, file: !1165, line: 171, baseType: !3670, size: 64, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!327, !3628, !346, !878}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3663, file: !1165, line: 173, baseType: !3674, size: 64, offset: 128)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!327, !3628}
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3663, file: !1165, line: 174, baseType: !3678, size: 64, offset: 192)
!3678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3679, size: 64)
!3679 = !DISubroutineType(types: !3680)
!3680 = !{!327, !3628, !3628, !346}
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3663, file: !1165, line: 176, baseType: !3682, size: 64, offset: 256)
!3682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3683, size: 64)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!327, !1257, !3628, !3647}
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3648, file: !1165, line: 192, baseType: !774, size: 128, offset: 448)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3648, file: !1165, line: 194, baseType: !1932, size: 128, offset: 576)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3639, file: !1165, line: 144, baseType: !3688, size: 64)
!3688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1165, line: 103, size: 64, elements: !3689)
!3689 = !{!3690}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3688, file: !1165, line: 104, baseType: !3628, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3639, file: !1165, line: 145, baseType: !3692, size: 256)
!3692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1165, line: 107, size: 256, elements: !3693)
!3693 = !{!3694, !3754, !3757, !3758}
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3692, file: !1165, line: 108, baseType: !3695, size: 64)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3697)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1165, line: 217, size: 768, elements: !3698)
!3698 = !{!3699, !3719, !3723, !3727, !3731, !3735, !3739, !3743, !3744, !3745, !3746, !3750}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3697, file: !1165, line: 222, baseType: !3700, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3701, size: 64)
!3701 = !DISubroutineType(types: !3702)
!3702 = !{!327, !3703}
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1165, line: 197, size: 1088, elements: !3705)
!3705 = !{!3706, !3707, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3704, file: !1165, line: 199, baseType: !3628, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3704, file: !1165, line: 200, baseType: !913, size: 64, offset: 64)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3704, file: !1165, line: 201, baseType: !1257, size: 64, offset: 128)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3704, file: !1165, line: 202, baseType: !317, size: 64, offset: 192)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3704, file: !1165, line: 205, baseType: !1631, size: 192, offset: 256)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3704, file: !1165, line: 206, baseType: !1631, size: 192, offset: 448)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3704, file: !1165, line: 207, baseType: !327, size: 32, offset: 640)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3704, file: !1165, line: 208, baseType: !774, size: 128, offset: 704)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3704, file: !1165, line: 209, baseType: !368, size: 64, offset: 832)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3704, file: !1165, line: 211, baseType: !883, size: 64, offset: 896)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3704, file: !1165, line: 212, baseType: !524, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3704, file: !1165, line: 213, baseType: !524, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3704, file: !1165, line: 214, baseType: !1549, size: 64, offset: 1024)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3697, file: !1165, line: 223, baseType: !3720, size: 64, offset: 64)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = !DISubroutineType(types: !3722)
!3722 = !{null, !3703}
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3697, file: !1165, line: 236, baseType: !3724, size: 64, offset: 128)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DISubroutineType(types: !3726)
!3726 = !{!327, !1257, !317}
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3697, file: !1165, line: 238, baseType: !3728, size: 64, offset: 192)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DISubroutineType(types: !3730)
!3730 = !{!317, !1257, !3264}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3697, file: !1165, line: 239, baseType: !3732, size: 64, offset: 256)
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{!317, !1257, !317, !3264}
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3697, file: !1165, line: 240, baseType: !3736, size: 64, offset: 320)
!3736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3737, size: 64)
!3737 = !DISubroutineType(types: !3738)
!3738 = !{null, !1257, !317}
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3697, file: !1165, line: 242, baseType: !3740, size: 64, offset: 384)
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = !DISubroutineType(types: !3742)
!3742 = !{!869, !3703, !368, !883, !1079}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3697, file: !1165, line: 252, baseType: !883, size: 64, offset: 448)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3697, file: !1165, line: 259, baseType: !524, size: 8, offset: 512)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3697, file: !1165, line: 260, baseType: !3740, size: 64, offset: 576)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3697, file: !1165, line: 263, baseType: !3747, size: 64, offset: 640)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!3293, !3703, !3295}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3697, file: !1165, line: 266, baseType: !3751, size: 64, offset: 704)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!327, !3703, !1521}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3692, file: !1165, line: 109, baseType: !3755, size: 64, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1165, line: 31, flags: DIFlagFwdDecl)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3692, file: !1165, line: 110, baseType: !1079, size: 64, offset: 128)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3692, file: !1165, line: 111, baseType: !3628, size: 64, offset: 192)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3629, file: !1165, line: 148, baseType: !317, size: 64, offset: 768)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3629, file: !1165, line: 154, baseType: !335, size: 64, offset: 832)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3629, file: !1165, line: 156, baseType: !330, size: 16, offset: 896)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3629, file: !1165, line: 157, baseType: !878, size: 16, offset: 912)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3629, file: !1165, line: 158, baseType: !3764, size: 64, offset: 960)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1165, line: 32, flags: DIFlagFwdDecl)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !789, file: !790, line: 71, baseType: !468, size: 32, offset: 448)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !789, file: !790, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !789, file: !790, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !789, file: !790, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !789, file: !790, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !789, file: !790, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !786, file: !237, line: 463, baseType: !785, size: 64, offset: 512)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !786, file: !237, line: 465, baseType: !3774, size: 64, offset: 576)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !237, line: 36, flags: DIFlagFwdDecl)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !786, file: !237, line: 467, baseType: !346, size: 64, offset: 640)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !786, file: !237, line: 468, baseType: !3778, size: 64, offset: 704)
!3778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3779, size: 64)
!3779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3780)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !237, line: 87, size: 384, elements: !3781)
!3781 = !{!3782, !3783, !3784, !3788, !3793, !3797}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3780, file: !237, line: 88, baseType: !346, size: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3780, file: !237, line: 89, baseType: !889, size: 64, offset: 64)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3780, file: !237, line: 90, baseType: !3785, size: 64, offset: 128)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!327, !785, !838}
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3780, file: !237, line: 91, baseType: !3789, size: 64, offset: 192)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!368, !785, !3792, !3625, !3626}
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3780, file: !237, line: 93, baseType: !3794, size: 64, offset: 256)
!3794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3795, size: 64)
!3795 = !DISubroutineType(types: !3796)
!3796 = !{null, !785}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3780, file: !237, line: 95, baseType: !3798, size: 64, offset: 320)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3800)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !244, line: 278, size: 1472, elements: !3801)
!3801 = !{!3802, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3800, file: !244, line: 279, baseType: !3803, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DISubroutineType(types: !3805)
!3805 = !{!327, !785}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3800, file: !244, line: 280, baseType: !3794, size: 64, offset: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3800, file: !244, line: 281, baseType: !3803, size: 64, offset: 128)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3800, file: !244, line: 282, baseType: !3803, size: 64, offset: 192)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3800, file: !244, line: 283, baseType: !3803, size: 64, offset: 256)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3800, file: !244, line: 284, baseType: !3803, size: 64, offset: 320)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3800, file: !244, line: 285, baseType: !3803, size: 64, offset: 384)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3800, file: !244, line: 286, baseType: !3803, size: 64, offset: 448)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3800, file: !244, line: 287, baseType: !3803, size: 64, offset: 512)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3800, file: !244, line: 288, baseType: !3803, size: 64, offset: 576)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3800, file: !244, line: 289, baseType: !3803, size: 64, offset: 640)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3800, file: !244, line: 290, baseType: !3803, size: 64, offset: 704)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3800, file: !244, line: 291, baseType: !3803, size: 64, offset: 768)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3800, file: !244, line: 292, baseType: !3803, size: 64, offset: 832)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3800, file: !244, line: 293, baseType: !3803, size: 64, offset: 896)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3800, file: !244, line: 294, baseType: !3803, size: 64, offset: 960)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3800, file: !244, line: 295, baseType: !3803, size: 64, offset: 1024)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3800, file: !244, line: 296, baseType: !3803, size: 64, offset: 1088)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3800, file: !244, line: 297, baseType: !3803, size: 64, offset: 1152)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3800, file: !244, line: 298, baseType: !3803, size: 64, offset: 1216)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3800, file: !244, line: 299, baseType: !3803, size: 64, offset: 1280)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3800, file: !244, line: 300, baseType: !3803, size: 64, offset: 1344)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3800, file: !244, line: 301, baseType: !3803, size: 64, offset: 1408)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !786, file: !237, line: 470, baseType: !3829, size: 64, offset: 768)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3831, line: 82, size: 1408, elements: !3832)
!3831 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3832 = !{!3833, !3834, !3835, !3836, !3837, !3838, !3839, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3907, !3911, !3914, !3915}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3830, file: !3831, line: 83, baseType: !346, size: 64)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3830, file: !3831, line: 84, baseType: !346, size: 64, offset: 64)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3830, file: !3831, line: 85, baseType: !785, size: 64, offset: 128)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3830, file: !3831, line: 86, baseType: !889, size: 64, offset: 192)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3830, file: !3831, line: 87, baseType: !889, size: 64, offset: 256)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3830, file: !3831, line: 88, baseType: !889, size: 64, offset: 320)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3830, file: !3831, line: 90, baseType: !3840, size: 64, offset: 384)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!327, !785, !3843}
!3843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3844, size: 64)
!3844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !231, line: 95, size: 1152, elements: !3845)
!3845 = !{!3846, !3847, !3848, !3849, !3850, !3851, !3852, !3862, !3875, !3876, !3877, !3878, !3879, !3887, !3888, !3889, !3890, !3891, !3892}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3844, file: !231, line: 96, baseType: !346, size: 64)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3844, file: !231, line: 97, baseType: !3829, size: 64, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3844, file: !231, line: 99, baseType: !350, size: 64, offset: 128)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3844, file: !231, line: 100, baseType: !346, size: 64, offset: 192)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3844, file: !231, line: 102, baseType: !524, size: 8, offset: 256)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3844, file: !231, line: 103, baseType: !230, size: 32, offset: 288)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3844, file: !231, line: 105, baseType: !3853, size: 64, offset: 320)
!3853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3854, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3855)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3856, line: 262, size: 1600, elements: !3857)
!3856 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3857 = !{!3858, !3859, !3860, !3861}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3855, file: !3856, line: 263, baseType: !3088, size: 256)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3855, file: !3856, line: 264, baseType: !3088, size: 256, offset: 256)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3855, file: !3856, line: 265, baseType: !488, size: 1024, offset: 512)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3855, file: !3856, line: 266, baseType: !2577, size: 64, offset: 1536)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3844, file: !231, line: 106, baseType: !3863, size: 64, offset: 384)
!3863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3864, size: 64)
!3864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3865)
!3865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3856, line: 210, size: 256, elements: !3866)
!3866 = !{!3867, !3871, !3873, !3874}
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3865, file: !3856, line: 211, baseType: !3868, size: 72)
!3868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 72, elements: !3869)
!3869 = !{!3870}
!3870 = !DISubrange(count: 9)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3865, file: !3856, line: 212, baseType: !3872, size: 64, offset: 128)
!3872 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3856, line: 14, baseType: !685)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3865, file: !3856, line: 213, baseType: !332, size: 32, offset: 192)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3865, file: !3856, line: 214, baseType: !332, size: 32, offset: 224)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3844, file: !231, line: 108, baseType: !3803, size: 64, offset: 448)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3844, file: !231, line: 109, baseType: !3794, size: 64, offset: 512)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3844, file: !231, line: 110, baseType: !3803, size: 64, offset: 576)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3844, file: !231, line: 111, baseType: !3794, size: 64, offset: 640)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3844, file: !231, line: 112, baseType: !3880, size: 64, offset: 704)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DISubroutineType(types: !3882)
!3882 = !{!327, !785, !3883}
!3883 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !244, line: 52, baseType: !3884)
!3884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !244, line: 50, size: 32, elements: !3885)
!3885 = !{!3886}
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3884, file: !244, line: 51, baseType: !327, size: 32)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3844, file: !231, line: 113, baseType: !3803, size: 64, offset: 768)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3844, file: !231, line: 114, baseType: !889, size: 64, offset: 832)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3844, file: !231, line: 115, baseType: !889, size: 64, offset: 896)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3844, file: !231, line: 117, baseType: !3798, size: 64, offset: 960)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3844, file: !231, line: 118, baseType: !3794, size: 64, offset: 1024)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3844, file: !231, line: 120, baseType: !3893, size: 64, offset: 1088)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !231, line: 120, flags: DIFlagFwdDecl)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3830, file: !3831, line: 91, baseType: !3785, size: 64, offset: 448)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3830, file: !3831, line: 92, baseType: !3803, size: 64, offset: 512)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3830, file: !3831, line: 93, baseType: !3794, size: 64, offset: 576)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3830, file: !3831, line: 94, baseType: !3803, size: 64, offset: 640)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3830, file: !3831, line: 95, baseType: !3794, size: 64, offset: 704)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3830, file: !3831, line: 97, baseType: !3803, size: 64, offset: 768)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3830, file: !3831, line: 98, baseType: !3803, size: 64, offset: 832)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3830, file: !3831, line: 100, baseType: !3880, size: 64, offset: 896)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3830, file: !3831, line: 101, baseType: !3803, size: 64, offset: 960)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3830, file: !3831, line: 103, baseType: !3803, size: 64, offset: 1024)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3830, file: !3831, line: 105, baseType: !3803, size: 64, offset: 1088)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3830, file: !3831, line: 107, baseType: !3798, size: 64, offset: 1152)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3830, file: !3831, line: 109, baseType: !3908, size: 64, offset: 1216)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3910)
!3910 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3831, line: 109, flags: DIFlagFwdDecl)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3830, file: !3831, line: 111, baseType: !3912, size: 64, offset: 1280)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3831, line: 111, flags: DIFlagFwdDecl)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3830, file: !3831, line: 112, baseType: !1191, offset: 1344)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3830, file: !3831, line: 114, baseType: !524, size: 8, offset: 1344)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !786, file: !237, line: 471, baseType: !3843, size: 64, offset: 832)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !786, file: !237, line: 473, baseType: !317, size: 64, offset: 896)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !786, file: !237, line: 475, baseType: !317, size: 64, offset: 960)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !786, file: !237, line: 480, baseType: !1631, size: 192, offset: 1024)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !786, file: !237, line: 484, baseType: !3921, size: 576, offset: 1216)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !237, line: 361, size: 576, elements: !3922)
!3922 = !{!3923, !3924, !3925, !3926, !3927, !3928}
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3921, file: !237, line: 362, baseType: !774, size: 128)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3921, file: !237, line: 363, baseType: !774, size: 128, offset: 128)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3921, file: !237, line: 364, baseType: !774, size: 128, offset: 256)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3921, file: !237, line: 365, baseType: !774, size: 128, offset: 384)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3921, file: !237, line: 366, baseType: !524, size: 8, offset: 512)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3921, file: !237, line: 367, baseType: !236, size: 32, offset: 544)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !786, file: !237, line: 485, baseType: !3930, size: 2304, offset: 1792)
!3930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !244, line: 565, size: 2304, elements: !3931)
!3931 = !{!3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !3998, !3999, !4000, !4001, !4002, !4003, !4004, !4005, !4006, !4007, !4008, !4009, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4027, !4031}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3930, file: !244, line: 566, baseType: !3883, size: 32)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3930, file: !244, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3930, file: !244, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3930, file: !244, line: 569, baseType: !524, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3930, file: !244, line: 570, baseType: !524, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3930, file: !244, line: 571, baseType: !524, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3930, file: !244, line: 572, baseType: !524, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3930, file: !244, line: 573, baseType: !524, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3930, file: !244, line: 574, baseType: !524, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3930, file: !244, line: 575, baseType: !524, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3930, file: !244, line: 576, baseType: !524, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3930, file: !244, line: 577, baseType: !331, size: 32, offset: 64)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3930, file: !244, line: 578, baseType: !802, offset: 96)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3930, file: !244, line: 580, baseType: !774, size: 128, offset: 128)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3930, file: !244, line: 581, baseType: !1953, size: 192, offset: 256)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3930, file: !244, line: 582, baseType: !3948, size: 64, offset: 448)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3950, line: 43, size: 1472, elements: !3951)
!3950 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3951 = !{!3952, !3953, !3954, !3955, !3956, !3959, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3949, file: !3950, line: 44, baseType: !346, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3949, file: !3950, line: 45, baseType: !327, size: 32, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3949, file: !3950, line: 46, baseType: !774, size: 128, offset: 128)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3949, file: !3950, line: 47, baseType: !802, offset: 256)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3949, file: !3950, line: 48, baseType: !3957, size: 64, offset: 256)
!3957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3958, size: 64)
!3958 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !244, line: 533, flags: DIFlagFwdDecl)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3949, file: !3950, line: 49, baseType: !3960, size: 320, offset: 320)
!3960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3961, line: 11, size: 320, elements: !3962)
!3961 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3962 = !{!3963, !3964, !3965, !3970}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3960, file: !3961, line: 16, baseType: !1185, size: 128)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3960, file: !3961, line: 17, baseType: !685, size: 64, offset: 128)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3960, file: !3961, line: 18, baseType: !3966, size: 64, offset: 192)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{null, !3969}
!3969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3960, file: !3961, line: 19, baseType: !331, size: 32, offset: 256)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3949, file: !3950, line: 50, baseType: !685, size: 64, offset: 640)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3949, file: !3950, line: 51, baseType: !1753, size: 64, offset: 704)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3949, file: !3950, line: 52, baseType: !1753, size: 64, offset: 768)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3949, file: !3950, line: 53, baseType: !1753, size: 64, offset: 832)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3949, file: !3950, line: 54, baseType: !1753, size: 64, offset: 896)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3949, file: !3950, line: 55, baseType: !1753, size: 64, offset: 960)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3949, file: !3950, line: 56, baseType: !685, size: 64, offset: 1024)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3949, file: !3950, line: 57, baseType: !685, size: 64, offset: 1088)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3949, file: !3950, line: 58, baseType: !685, size: 64, offset: 1152)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3949, file: !3950, line: 59, baseType: !685, size: 64, offset: 1216)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3949, file: !3950, line: 60, baseType: !685, size: 64, offset: 1280)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3949, file: !3950, line: 61, baseType: !785, size: 64, offset: 1344)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3949, file: !3950, line: 62, baseType: !524, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3949, file: !3950, line: 63, baseType: !524, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3930, file: !244, line: 583, baseType: !524, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3930, file: !244, line: 584, baseType: !524, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3930, file: !244, line: 585, baseType: !524, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3930, file: !244, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3930, file: !244, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3930, file: !244, line: 592, baseType: !1745, size: 512, offset: 576)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3930, file: !244, line: 593, baseType: !335, size: 64, offset: 1088)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3930, file: !244, line: 594, baseType: !2407, size: 256, offset: 1152)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3930, file: !244, line: 595, baseType: !1932, size: 128, offset: 1408)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3930, file: !244, line: 596, baseType: !3957, size: 64, offset: 1536)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3930, file: !244, line: 597, baseType: !477, size: 32, offset: 1600)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3930, file: !244, line: 598, baseType: !477, size: 32, offset: 1632)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3930, file: !244, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3930, file: !244, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3930, file: !244, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3930, file: !244, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3930, file: !244, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3930, file: !244, line: 604, baseType: !524, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3930, file: !244, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3930, file: !244, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3930, file: !244, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3930, file: !244, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3930, file: !244, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4008 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3930, file: !244, line: 610, baseType: !7, size: 32, offset: 1696)
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3930, file: !244, line: 611, baseType: !243, size: 32, offset: 1728)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3930, file: !244, line: 612, baseType: !251, size: 32, offset: 1760)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3930, file: !244, line: 613, baseType: !327, size: 32, offset: 1792)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3930, file: !244, line: 614, baseType: !327, size: 32, offset: 1824)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3930, file: !244, line: 615, baseType: !335, size: 64, offset: 1856)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3930, file: !244, line: 616, baseType: !335, size: 64, offset: 1920)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3930, file: !244, line: 617, baseType: !335, size: 64, offset: 1984)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3930, file: !244, line: 618, baseType: !335, size: 64, offset: 2048)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3930, file: !244, line: 620, baseType: !4018, size: 64, offset: 2112)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !244, line: 536, size: 256, elements: !4020)
!4020 = !{!4021, !4022, !4023, !4024}
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4019, file: !244, line: 537, baseType: !802)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4019, file: !244, line: 538, baseType: !7, size: 32)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4019, file: !244, line: 540, baseType: !774, size: 128, offset: 64)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4019, file: !244, line: 543, baseType: !4025, size: 64, offset: 192)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !244, line: 534, flags: DIFlagFwdDecl)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3930, file: !244, line: 621, baseType: !4028, size: 64, offset: 2176)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{null, !785, !325}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3930, file: !244, line: 622, baseType: !4032, size: 64, offset: 2240)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !244, line: 622, flags: DIFlagFwdDecl)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !786, file: !237, line: 486, baseType: !4035, size: 64, offset: 4096)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !244, line: 642, size: 1792, elements: !4037)
!4037 = !{!4038, !4039, !4040, !4044, !4045, !4046}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4036, file: !244, line: 643, baseType: !3800, size: 1472)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4036, file: !244, line: 644, baseType: !3803, size: 64, offset: 1472)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4036, file: !244, line: 645, baseType: !4041, size: 64, offset: 1536)
!4041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4042 = !DISubroutineType(types: !4043)
!4043 = !{null, !785, !524}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4036, file: !244, line: 646, baseType: !3803, size: 64, offset: 1600)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4036, file: !244, line: 647, baseType: !3794, size: 64, offset: 1664)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4036, file: !244, line: 648, baseType: !3794, size: 64, offset: 1728)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !786, file: !237, line: 493, baseType: !4048, size: 64, offset: 4160)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !258, line: 162, size: 1088, elements: !4050)
!4050 = !{!4051, !4052, !4053, !4226, !4227, !4228, !4229, !4230, !4231, !4234, !4235, !4236, !4237, !4238, !4239, !4240}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4049, file: !258, line: 163, baseType: !774, size: 128)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4049, file: !258, line: 164, baseType: !346, size: 64, offset: 128)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4049, file: !258, line: 165, baseType: !4054, size: 64, offset: 192)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4056)
!4056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !258, line: 105, size: 640, elements: !4057)
!4057 = !{!4058, !4176, !4187, !4192, !4196, !4203, !4207, !4211, !4218, !4222}
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4056, file: !258, line: 106, baseType: !4059, size: 64)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!327, !4048, !4062, !257}
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4064, line: 51, size: 1344, elements: !4065)
!4064 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4065 = !{!4066, !4067, !4069, !4070, !4160, !4169, !4170, !4171, !4172, !4173, !4174, !4175}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4063, file: !4064, line: 52, baseType: !346, size: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4063, file: !4064, line: 53, baseType: !4068, size: 32, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4064, line: 28, baseType: !331)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4063, file: !4064, line: 54, baseType: !346, size: 64, offset: 128)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4063, file: !4064, line: 55, baseType: !4071, size: 192, offset: 192)
!4071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4072, line: 17, size: 192, elements: !4073)
!4072 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4073 = !{!4074, !4076, !4159}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4071, file: !4072, line: 18, baseType: !4075, size: 64)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4071, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4071, file: !4072, line: 19, baseType: !4077, size: 64, offset: 64)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4079)
!4079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4072, line: 110, size: 1152, elements: !4080)
!4080 = !{!4081, !4085, !4089, !4095, !4101, !4105, !4109, !4114, !4118, !4119, !4123, !4127, !4131, !4142, !4143, !4144, !4145, !4155}
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4079, file: !4072, line: 111, baseType: !4082, size: 64)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!4075, !4075}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4079, file: !4072, line: 112, baseType: !4086, size: 64, offset: 64)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{null, !4075}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4079, file: !4072, line: 113, baseType: !4090, size: 64, offset: 128)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!524, !4093}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4071)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4079, file: !4072, line: 114, baseType: !4096, size: 64, offset: 192)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!2577, !4093, !4099}
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4079, file: !4072, line: 116, baseType: !4102, size: 64, offset: 256)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DISubroutineType(types: !4104)
!4104 = !{!524, !4093, !346}
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4079, file: !4072, line: 118, baseType: !4106, size: 64, offset: 320)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = !DISubroutineType(types: !4108)
!4108 = !{!327, !4093, !346, !7, !317, !883}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4079, file: !4072, line: 123, baseType: !4110, size: 64, offset: 384)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DISubroutineType(types: !4112)
!4112 = !{!327, !4093, !346, !4113, !883}
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4079, file: !4072, line: 126, baseType: !4115, size: 64, offset: 448)
!4115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4116, size: 64)
!4116 = !DISubroutineType(types: !4117)
!4117 = !{!346, !4093}
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4079, file: !4072, line: 127, baseType: !4115, size: 64, offset: 512)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4079, file: !4072, line: 128, baseType: !4120, size: 64, offset: 576)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DISubroutineType(types: !4122)
!4122 = !{!4075, !4093}
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4079, file: !4072, line: 130, baseType: !4124, size: 64, offset: 640)
!4124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4125, size: 64)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!4075, !4093, !4075}
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4079, file: !4072, line: 133, baseType: !4128, size: 64, offset: 704)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!4075, !4093, !346}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4079, file: !4072, line: 135, baseType: !4132, size: 64, offset: 768)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!327, !4093, !346, !346, !7, !7, !4135}
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4072, line: 43, size: 640, elements: !4137)
!4137 = !{!4138, !4139, !4140}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4136, file: !4072, line: 44, baseType: !4075, size: 64)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4136, file: !4072, line: 45, baseType: !7, size: 32, offset: 64)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4136, file: !4072, line: 46, baseType: !4141, size: 512, offset: 128)
!4141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !335, size: 512, elements: !501)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4079, file: !4072, line: 140, baseType: !4124, size: 64, offset: 832)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4079, file: !4072, line: 143, baseType: !4120, size: 64, offset: 896)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4079, file: !4072, line: 145, baseType: !4082, size: 64, offset: 960)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4079, file: !4072, line: 146, baseType: !4146, size: 64, offset: 1024)
!4146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4147, size: 64)
!4147 = !DISubroutineType(types: !4148)
!4148 = !{!327, !4093, !4149}
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4072, line: 29, size: 128, elements: !4151)
!4151 = !{!4152, !4153, !4154}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4150, file: !4072, line: 30, baseType: !7, size: 32)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4150, file: !4072, line: 31, baseType: !7, size: 32, offset: 32)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4150, file: !4072, line: 32, baseType: !4093, size: 64, offset: 64)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4079, file: !4072, line: 148, baseType: !4156, size: 64, offset: 1088)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DISubroutineType(types: !4158)
!4158 = !{!327, !4093, !785}
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4071, file: !4072, line: 20, baseType: !785, size: 64, offset: 128)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4063, file: !4064, line: 57, baseType: !4161, size: 64, offset: 384)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4064, line: 31, size: 704, elements: !4163)
!4163 = !{!4164, !4165, !4166, !4167, !4168}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4162, file: !4064, line: 32, baseType: !368, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4162, file: !4064, line: 33, baseType: !327, size: 32, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4162, file: !4064, line: 34, baseType: !317, size: 64, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4162, file: !4064, line: 35, baseType: !4161, size: 64, offset: 192)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4162, file: !4064, line: 43, baseType: !904, size: 448, offset: 256)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4063, file: !4064, line: 58, baseType: !4161, size: 64, offset: 448)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4063, file: !4064, line: 59, baseType: !4062, size: 64, offset: 512)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4063, file: !4064, line: 60, baseType: !4062, size: 64, offset: 576)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4063, file: !4064, line: 61, baseType: !4062, size: 64, offset: 640)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4063, file: !4064, line: 63, baseType: !789, size: 512, offset: 704)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4063, file: !4064, line: 65, baseType: !685, size: 64, offset: 1216)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4063, file: !4064, line: 66, baseType: !317, size: 64, offset: 1280)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4056, file: !258, line: 108, baseType: !4177, size: 64, offset: 64)
!4177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4178, size: 64)
!4178 = !DISubroutineType(types: !4179)
!4179 = !{!327, !4048, !4180, !257}
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !258, line: 63, size: 640, elements: !4182)
!4182 = !{!4183, !4184, !4185}
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4181, file: !258, line: 64, baseType: !4075, size: 64)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4181, file: !258, line: 65, baseType: !327, size: 32, offset: 64)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4181, file: !258, line: 66, baseType: !4186, size: 512, offset: 96)
!4186 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 512, elements: !2184)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4056, file: !258, line: 110, baseType: !4188, size: 64, offset: 128)
!4188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4189, size: 64)
!4189 = !DISubroutineType(types: !4190)
!4190 = !{!327, !4048, !7, !4191}
!4191 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !324, line: 164, baseType: !685)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4056, file: !258, line: 111, baseType: !4193, size: 64, offset: 192)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{null, !4048, !7}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4056, file: !258, line: 112, baseType: !4197, size: 64, offset: 256)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!327, !4048, !4062, !4200, !7, !4202, !399}
!4200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4201, size: 64)
!4201 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !331)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4056, file: !258, line: 117, baseType: !4204, size: 64, offset: 320)
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DISubroutineType(types: !4206)
!4206 = !{!327, !4048, !7, !7, !317}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4056, file: !258, line: 119, baseType: !4208, size: 64, offset: 384)
!4208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4209, size: 64)
!4209 = !DISubroutineType(types: !4210)
!4210 = !{null, !4048, !7, !7}
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4056, file: !258, line: 121, baseType: !4212, size: 64, offset: 448)
!4212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4213, size: 64)
!4213 = !DISubroutineType(types: !4214)
!4214 = !{!327, !4048, !4215, !524}
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4217, line: 11, flags: DIFlagFwdDecl)
!4217 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4056, file: !258, line: 122, baseType: !4219, size: 64, offset: 512)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{null, !4048, !4215}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4056, file: !258, line: 123, baseType: !4223, size: 64, offset: 576)
!4223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4224, size: 64)
!4224 = !DISubroutineType(types: !4225)
!4225 = !{!327, !4048, !4180, !4202, !399}
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4049, file: !258, line: 166, baseType: !317, size: 64, offset: 256)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4049, file: !258, line: 167, baseType: !7, size: 32, offset: 320)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4049, file: !258, line: 168, baseType: !7, size: 32, offset: 352)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4049, file: !258, line: 171, baseType: !4075, size: 64, offset: 384)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4049, file: !258, line: 172, baseType: !257, size: 32, offset: 448)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4049, file: !258, line: 173, baseType: !4232, size: 64, offset: 512)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !258, line: 134, flags: DIFlagFwdDecl)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4049, file: !258, line: 175, baseType: !4048, size: 64, offset: 576)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4049, file: !258, line: 182, baseType: !4191, size: 64, offset: 640)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4049, file: !258, line: 183, baseType: !7, size: 32, offset: 704)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4049, file: !258, line: 184, baseType: !7, size: 32, offset: 736)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4049, file: !258, line: 185, baseType: !1285, size: 128, offset: 768)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4049, file: !258, line: 186, baseType: !1631, size: 192, offset: 896)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4049, file: !258, line: 187, baseType: !4241, offset: 1088)
!4241 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2781)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !786, file: !237, line: 499, baseType: !774, size: 128, offset: 4224)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !786, file: !237, line: 502, baseType: !4244, size: 64, offset: 4352)
!4244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4245, size: 64)
!4245 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4246)
!4246 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !237, line: 502, flags: DIFlagFwdDecl)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !786, file: !237, line: 504, baseType: !4248, size: 64, offset: 4416)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !786, file: !237, line: 505, baseType: !335, size: 64, offset: 4480)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !786, file: !237, line: 510, baseType: !335, size: 64, offset: 4544)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !786, file: !237, line: 511, baseType: !4252, size: 64, offset: 4608)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4254)
!4254 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !237, line: 511, flags: DIFlagFwdDecl)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !786, file: !237, line: 513, baseType: !4256, size: 64, offset: 4672)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !237, line: 288, size: 128, elements: !4258)
!4258 = !{!4259, !4260}
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4257, file: !237, line: 293, baseType: !7, size: 32)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4257, file: !237, line: 294, baseType: !685, size: 64, offset: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !786, file: !237, line: 515, baseType: !774, size: 128, offset: 4736)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !786, file: !237, line: 526, baseType: !4263, offset: 4864)
!4263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4264, line: 5, elements: !816)
!4264 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !786, file: !237, line: 528, baseType: !4062, size: 64, offset: 4864)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !786, file: !237, line: 529, baseType: !4075, size: 64, offset: 4928)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !786, file: !237, line: 534, baseType: !1061, size: 32, offset: 4992)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !786, file: !237, line: 535, baseType: !331, size: 32, offset: 5024)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !786, file: !237, line: 537, baseType: !802, offset: 5056)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !786, file: !237, line: 538, baseType: !774, size: 128, offset: 5056)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !786, file: !237, line: 540, baseType: !4272, size: 64, offset: 5184)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4274, line: 54, size: 960, elements: !4275)
!4274 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4275 = !{!4276, !4277, !4278, !4279, !4280, !4281, !4282, !4286, !4290, !4291, !4292, !4293, !4297, !4301, !4302}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4273, file: !4274, line: 55, baseType: !346, size: 64)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4273, file: !4274, line: 56, baseType: !350, size: 64, offset: 64)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4273, file: !4274, line: 58, baseType: !889, size: 64, offset: 128)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4273, file: !4274, line: 59, baseType: !889, size: 64, offset: 192)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4273, file: !4274, line: 60, baseType: !795, size: 64, offset: 256)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4273, file: !4274, line: 62, baseType: !3785, size: 64, offset: 320)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4273, file: !4274, line: 63, baseType: !4283, size: 64, offset: 384)
!4283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4284, size: 64)
!4284 = !DISubroutineType(types: !4285)
!4285 = !{!368, !785, !3792}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4273, file: !4274, line: 65, baseType: !4287, size: 64, offset: 448)
!4287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4288, size: 64)
!4288 = !DISubroutineType(types: !4289)
!4289 = !{null, !4272}
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4273, file: !4274, line: 66, baseType: !3794, size: 64, offset: 512)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4273, file: !4274, line: 68, baseType: !3803, size: 64, offset: 576)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4273, file: !4274, line: 70, baseType: !3593, size: 64, offset: 640)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4273, file: !4274, line: 71, baseType: !4294, size: 64, offset: 704)
!4294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4295, size: 64)
!4295 = !DISubroutineType(types: !4296)
!4296 = !{!2577, !785}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4273, file: !4274, line: 73, baseType: !4298, size: 64, offset: 768)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{null, !785, !3625, !3626}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4273, file: !4274, line: 75, baseType: !3798, size: 64, offset: 832)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4273, file: !4274, line: 77, baseType: !3912, size: 64, offset: 896)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !786, file: !237, line: 541, baseType: !889, size: 64, offset: 5248)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !786, file: !237, line: 543, baseType: !3794, size: 64, offset: 5312)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !786, file: !237, line: 544, baseType: !4306, size: 64, offset: 5376)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4307, size: 64)
!4307 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !237, line: 45, flags: DIFlagFwdDecl)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !786, file: !237, line: 545, baseType: !4309, size: 64, offset: 5440)
!4309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4310, size: 64)
!4310 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !237, line: 47, flags: DIFlagFwdDecl)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !786, file: !237, line: 547, baseType: !524, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !786, file: !237, line: 548, baseType: !524, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !786, file: !237, line: 549, baseType: !524, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !786, file: !237, line: 550, baseType: !524, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !770, file: !272, line: 111, baseType: !350, size: 64, offset: 576)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_shared", scope: !770, file: !272, line: 113, baseType: !327, size: 32, offset: 640)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_dvbdev", scope: !770, file: !272, line: 114, baseType: !4318, size: 64, offset: 704)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_device", file: !272, line: 157, size: 704, elements: !4320)
!4320 = !{!4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4330, !4331, !4335}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !4319, file: !272, line: 158, baseType: !774, size: 128)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4319, file: !272, line: 159, baseType: !3251, size: 64, offset: 128)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !4319, file: !272, line: 160, baseType: !769, size: 64, offset: 192)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4319, file: !272, line: 161, baseType: !271, size: 32, offset: 256)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4319, file: !272, line: 162, baseType: !327, size: 32, offset: 288)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4319, file: !272, line: 163, baseType: !331, size: 32, offset: 320)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !4319, file: !272, line: 167, baseType: !327, size: 32, offset: 352)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !4319, file: !272, line: 168, baseType: !327, size: 32, offset: 384)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !4319, file: !272, line: 169, baseType: !327, size: 32, offset: 416)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4319, file: !272, line: 171, baseType: !1932, size: 128, offset: 448)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_ioctl", scope: !4319, file: !272, line: 173, baseType: !4332, size: 64, offset: 576)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DISubroutineType(types: !4334)
!4334 = !{!327, !913, !7, !317}
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4319, file: !272, line: 187, baseType: !317, size: 64, offset: 640)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_lock", scope: !770, file: !272, line: 115, baseType: !1631, size: 192, offset: 768)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "demodulator_priv", scope: !465, file: !51, line: 690, baseType: !317, size: 64, offset: 6144)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_priv", scope: !465, file: !51, line: 691, baseType: !317, size: 64, offset: 6208)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "frontend_priv", scope: !465, file: !51, line: 692, baseType: !317, size: 64, offset: 6272)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "sec_priv", scope: !465, file: !51, line: 693, baseType: !317, size: 64, offset: 6336)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "analog_demod_priv", scope: !465, file: !51, line: 694, baseType: !317, size: 64, offset: 6400)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "dtv_property_cache", scope: !465, file: !51, line: 695, baseType: !547, size: 3648, offset: 6464)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !465, file: !51, line: 698, baseType: !4344, size: 64, offset: 10112)
!4344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4345, size: 64)
!4345 = !DISubroutineType(types: !4346)
!4346 = !{!327, !317, !327, !327, !327}
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !465, file: !51, line: 699, baseType: !327, size: 32, offset: 10176)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !465, file: !51, line: 700, baseType: !7, size: 32, offset: 10208)
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4350, size: 64)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !4351, line: 695, size: 7552, elements: !4352)
!4351 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4352 = !{!4353, !4354, !4355, !4392, !4393, !4407, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4424, !4425, !4426, !4427, !4459, !4470}
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4350, file: !4351, line: 696, baseType: !350, size: 64)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4350, file: !4351, line: 697, baseType: !7, size: 32, offset: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4350, file: !4351, line: 698, baseType: !4356, size: 64, offset: 128)
!4356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4357, size: 64)
!4357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4358)
!4358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !4351, line: 519, size: 320, elements: !4359)
!4359 = !{!4360, !4373, !4374, !4387, !4388}
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !4358, file: !4351, line: 529, baseType: !4361, size: 64)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{!327, !4349, !4364, !327}
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !4366, line: 69, size: 128, elements: !4367)
!4366 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4367 = !{!4368, !4369, !4370, !4371}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4365, file: !4366, line: 70, baseType: !329, size: 16)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4365, file: !4366, line: 71, baseType: !329, size: 16, offset: 16)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4365, file: !4366, line: 84, baseType: !329, size: 16, offset: 32)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4365, file: !4366, line: 85, baseType: !4372, size: 64, offset: 64)
!4372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !4358, file: !4351, line: 531, baseType: !4361, size: 64, offset: 64)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !4358, file: !4351, line: 533, baseType: !4375, size: 64, offset: 128)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!327, !4349, !328, !330, !348, !318, !327, !4378}
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !4366, line: 135, size: 272, elements: !4380)
!4380 = !{!4381, !4382, !4383}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !4379, file: !4366, line: 136, baseType: !320, size: 8)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !4379, file: !4366, line: 137, baseType: !329, size: 16)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4379, file: !4366, line: 138, baseType: !4384, size: 272)
!4384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !320, size: 272, elements: !4385)
!4385 = !{!4386}
!4386 = !DISubrange(count: 34)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !4358, file: !4351, line: 536, baseType: !4375, size: 64, offset: 192)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !4358, file: !4351, line: 541, baseType: !4389, size: 64, offset: 256)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!331, !4349}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !4350, file: !4351, line: 699, baseType: !317, size: 64, offset: 192)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !4350, file: !4351, line: 702, baseType: !4394, size: 64, offset: 256)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4396)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !4351, line: 557, size: 192, elements: !4397)
!4397 = !{!4398, !4402, !4406}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !4396, file: !4351, line: 558, baseType: !4399, size: 64)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DISubroutineType(types: !4401)
!4401 = !{null, !4349, !7}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !4396, file: !4351, line: 559, baseType: !4403, size: 64, offset: 64)
!4403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4404, size: 64)
!4404 = !DISubroutineType(types: !4405)
!4405 = !{!327, !4349, !7}
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !4396, file: !4351, line: 560, baseType: !4399, size: 64, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !4350, file: !4351, line: 703, baseType: !4408, size: 192, offset: 320)
!4408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !4409, line: 30, size: 192, elements: !4410)
!4409 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!4410 = !{!4411, !4412, !4413}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4408, file: !4409, line: 31, baseType: !1322)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4408, file: !4409, line: 32, baseType: !1294, size: 128)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4408, file: !4409, line: 33, baseType: !1674, size: 64, offset: 128)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !4350, file: !4351, line: 704, baseType: !4408, size: 192, offset: 512)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4350, file: !4351, line: 706, baseType: !327, size: 32, offset: 704)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4350, file: !4351, line: 707, baseType: !327, size: 32, offset: 736)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4350, file: !4351, line: 708, baseType: !786, size: 5568, offset: 768)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !4350, file: !4351, line: 709, baseType: !685, size: 64, offset: 6336)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4350, file: !4351, line: 713, baseType: !327, size: 32, offset: 6400)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4350, file: !4351, line: 714, baseType: !4421, size: 384, offset: 6432)
!4421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !348, size: 384, elements: !4422)
!4422 = !{!4423}
!4423 = !DISubrange(count: 48)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !4350, file: !4351, line: 715, baseType: !1953, size: 192, offset: 6848)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !4350, file: !4351, line: 717, baseType: !1631, size: 192, offset: 7040)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !4350, file: !4351, line: 718, baseType: !774, size: 128, offset: 7232)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !4350, file: !4351, line: 720, baseType: !4428, size: 64, offset: 7360)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !4351, line: 618, size: 832, elements: !4430)
!4430 = !{!4431, !4435, !4436, !4440, !4441, !4442, !4443, !4447, !4448, !4451, !4452, !4455, !4458}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !4429, file: !4351, line: 619, baseType: !4432, size: 64)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DISubroutineType(types: !4434)
!4434 = !{!327, !4349}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !4429, file: !4351, line: 621, baseType: !4432, size: 64, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !4429, file: !4351, line: 622, baseType: !4437, size: 64, offset: 128)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{null, !4349, !327}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !4429, file: !4351, line: 623, baseType: !4432, size: 64, offset: 192)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !4429, file: !4351, line: 624, baseType: !4437, size: 64, offset: 256)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !4429, file: !4351, line: 625, baseType: !4432, size: 64, offset: 320)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !4429, file: !4351, line: 627, baseType: !4444, size: 64, offset: 384)
!4444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4445, size: 64)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{null, !4349}
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !4429, file: !4351, line: 628, baseType: !4444, size: 64, offset: 448)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !4429, file: !4351, line: 631, baseType: !4449, size: 64, offset: 512)
!4449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4450, size: 64)
!4450 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !4351, line: 631, flags: DIFlagFwdDecl)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !4429, file: !4351, line: 632, baseType: !4449, size: 64, offset: 576)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !4429, file: !4351, line: 633, baseType: !4453, size: 64, offset: 640)
!4453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4454, size: 64)
!4454 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !4351, line: 633, flags: DIFlagFwdDecl)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !4429, file: !4351, line: 634, baseType: !4456, size: 64, offset: 704)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !4351, line: 634, flags: DIFlagFwdDecl)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !4429, file: !4351, line: 635, baseType: !4456, size: 64, offset: 768)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4350, file: !4351, line: 721, baseType: !4460, size: 64, offset: 7424)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4462)
!4462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !4351, line: 664, size: 192, elements: !4463)
!4463 = !{!4464, !4465, !4466, !4467, !4468, !4469}
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4462, file: !4351, line: 665, baseType: !335, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !4462, file: !4351, line: 666, baseType: !327, size: 32, offset: 64)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !4462, file: !4351, line: 667, baseType: !328, size: 16, offset: 96)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !4462, file: !4351, line: 668, baseType: !328, size: 16, offset: 112)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !4462, file: !4351, line: 669, baseType: !328, size: 16, offset: 128)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !4462, file: !4351, line: 670, baseType: !328, size: 16, offset: 144)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !4350, file: !4351, line: 723, baseType: !4048, size: 64, offset: 7488)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dib7000p_config", file: !4473, line: 7, size: 576, elements: !4474)
!4473 = !DIFile(filename: "drivers/media/dvb-frontends/dib7000p.h", directory: "/home/lizy2001/genbc/linux")
!4474 = !{!4475, !4476, !4477, !4478, !4482, !4483, !4522, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4552, !4553, !4554, !4555, !4556, !4557}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "output_mpeg2_in_188_bytes", scope: !4472, file: !4473, line: 8, baseType: !318, size: 8)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "hostbus_diversity", scope: !4472, file: !4473, line: 9, baseType: !318, size: 8, offset: 8)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_is_baseband", scope: !4472, file: !4473, line: 10, baseType: !318, size: 8, offset: 16)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "update_lna", scope: !4472, file: !4473, line: 11, baseType: !4479, size: 64, offset: 64)
!4479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4480, size: 64)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!327, !464, !328}
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "agc_config_count", scope: !4472, file: !4473, line: 13, baseType: !318, size: 8, offset: 128)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "agc", scope: !4472, file: !4473, line: 14, baseType: !4484, size: 64, offset: 192)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dibx000_agc_config", file: !284, line: 64, size: 384, elements: !4486)
!4486 = !{!4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4497, !4498, !4499, !4500, !4501, !4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "band_caps", scope: !4485, file: !284, line: 66, baseType: !318, size: 8)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4485, file: !284, line: 68, baseType: !328, size: 16, offset: 16)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "inv_gain", scope: !4485, file: !284, line: 70, baseType: !328, size: 16, offset: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "time_stabiliz", scope: !4485, file: !284, line: 71, baseType: !328, size: 16, offset: 48)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_level", scope: !4485, file: !284, line: 73, baseType: !318, size: 8, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "thlock", scope: !4485, file: !284, line: 74, baseType: !328, size: 16, offset: 80)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "wbd_inv", scope: !4485, file: !284, line: 76, baseType: !318, size: 8, offset: 96)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "wbd_ref", scope: !4485, file: !284, line: 77, baseType: !328, size: 16, offset: 112)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "wbd_sel", scope: !4485, file: !284, line: 78, baseType: !318, size: 8, offset: 128)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "wbd_alpha", scope: !4485, file: !284, line: 79, baseType: !318, size: 8, offset: 136)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_max", scope: !4485, file: !284, line: 81, baseType: !328, size: 16, offset: 144)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_min", scope: !4485, file: !284, line: 82, baseType: !328, size: 16, offset: 160)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "agc2_max", scope: !4485, file: !284, line: 83, baseType: !328, size: 16, offset: 176)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "agc2_min", scope: !4485, file: !284, line: 84, baseType: !328, size: 16, offset: 192)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_pt1", scope: !4485, file: !284, line: 86, baseType: !318, size: 8, offset: 208)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_pt2", scope: !4485, file: !284, line: 87, baseType: !318, size: 8, offset: 216)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_pt3", scope: !4485, file: !284, line: 88, baseType: !318, size: 8, offset: 224)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_slope1", scope: !4485, file: !284, line: 90, baseType: !318, size: 8, offset: 232)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "agc1_slope2", scope: !4485, file: !284, line: 91, baseType: !318, size: 8, offset: 240)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "agc2_pt1", scope: !4485, file: !284, line: 93, baseType: !318, size: 8, offset: 248)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "agc2_pt2", scope: !4485, file: !284, line: 94, baseType: !318, size: 8, offset: 256)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "agc2_slope1", scope: !4485, file: !284, line: 96, baseType: !318, size: 8, offset: 264)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "agc2_slope2", scope: !4485, file: !284, line: 97, baseType: !318, size: 8, offset: 272)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mant", scope: !4485, file: !284, line: 99, baseType: !318, size: 8, offset: 280)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_exp", scope: !4485, file: !284, line: 100, baseType: !318, size: 8, offset: 288)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "beta_mant", scope: !4485, file: !284, line: 102, baseType: !318, size: 8, offset: 296)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "beta_exp", scope: !4485, file: !284, line: 103, baseType: !318, size: 8, offset: 304)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "perform_agc_softsplit", scope: !4485, file: !284, line: 105, baseType: !318, size: 8, offset: 312)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4485, file: !284, line: 112, baseType: !4516, size: 64, offset: 320)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4485, file: !284, line: 107, size: 64, elements: !4517)
!4517 = !{!4518, !4519, !4520, !4521}
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !4516, file: !284, line: 108, baseType: !328, size: 16)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !4516, file: !284, line: 109, baseType: !328, size: 16, offset: 16)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "min_thres", scope: !4516, file: !284, line: 110, baseType: !328, size: 16, offset: 32)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "max_thres", scope: !4516, file: !284, line: 111, baseType: !328, size: 16, offset: 48)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "bw", scope: !4472, file: !4473, line: 15, baseType: !4523, size: 64, offset: 256)
!4523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4524, size: 64)
!4524 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dibx000_bandwidth_config", file: !284, line: 115, size: 256, elements: !4525)
!4525 = !{!4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541}
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4524, file: !284, line: 116, baseType: !331, size: 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "sampling", scope: !4524, file: !284, line: 117, baseType: !331, size: 32, offset: 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "pll_prediv", scope: !4524, file: !284, line: 119, baseType: !318, size: 8, offset: 64)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "pll_ratio", scope: !4524, file: !284, line: 120, baseType: !318, size: 8, offset: 72)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "pll_range", scope: !4524, file: !284, line: 121, baseType: !318, size: 8, offset: 80)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "pll_reset", scope: !4524, file: !284, line: 122, baseType: !318, size: 8, offset: 88)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "pll_bypass", scope: !4524, file: !284, line: 123, baseType: !318, size: 8, offset: 96)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "enable_refdiv", scope: !4524, file: !284, line: 125, baseType: !318, size: 8, offset: 104)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "bypclk_div", scope: !4524, file: !284, line: 126, baseType: !318, size: 8, offset: 112)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "IO_CLK_en_core", scope: !4524, file: !284, line: 127, baseType: !318, size: 8, offset: 120)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "ADClkSrc", scope: !4524, file: !284, line: 128, baseType: !318, size: 8, offset: 128)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !4524, file: !284, line: 129, baseType: !318, size: 8, offset: 136)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "sad_cfg", scope: !4524, file: !284, line: 131, baseType: !328, size: 16, offset: 144)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "ifreq", scope: !4524, file: !284, line: 133, baseType: !331, size: 32, offset: 160)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "timf", scope: !4524, file: !284, line: 134, baseType: !331, size: 32, offset: 192)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "xtal_hz", scope: !4524, file: !284, line: 136, baseType: !331, size: 32, offset: 224)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_dir", scope: !4472, file: !4473, line: 18, baseType: !328, size: 16, offset: 320)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_val", scope: !4472, file: !4473, line: 20, baseType: !328, size: 16, offset: 336)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_pwm_pos", scope: !4472, file: !4473, line: 26, baseType: !328, size: 16, offset: 352)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "pwm_freq_div", scope: !4472, file: !4473, line: 28, baseType: !328, size: 16, offset: 368)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "quartz_direct", scope: !4472, file: !4473, line: 30, baseType: !318, size: 8, offset: 384)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "spur_protect", scope: !4472, file: !4473, line: 32, baseType: !318, size: 8, offset: 392)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "agc_control", scope: !4472, file: !4473, line: 34, baseType: !4549, size: 64, offset: 448)
!4549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4550 = !DISubroutineType(types: !4551)
!4551 = !{!327, !464, !318}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "output_mode", scope: !4472, file: !4473, line: 36, baseType: !318, size: 8, offset: 512)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "disable_sample_and_hold", scope: !4472, file: !4473, line: 37, baseType: !318, size: 1, offset: 520, flags: DIFlagBitField, extraData: i64 520)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "enable_current_mirror", scope: !4472, file: !4473, line: 39, baseType: !318, size: 1, offset: 521, flags: DIFlagBitField, extraData: i64 520)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "diversity_delay", scope: !4472, file: !4473, line: 40, baseType: !328, size: 16, offset: 528)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "default_i2c_addr", scope: !4472, file: !4473, line: 42, baseType: !318, size: 8, offset: 544)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "enMpegOutput", scope: !4472, file: !4473, line: 43, baseType: !318, size: 1, offset: 552, flags: DIFlagBitField, extraData: i64 552)
!4558 = !DIGlobalVariableExpression(var: !4559, expr: !DIExpression())
!4559 = distinct !DIGlobalVariable(name: "dib7000p_ops", scope: !2, file: !3, line: 2827, type: !4560, isLocal: true, isDefinition: true)
!4560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!4561 = !DIGlobalVariableExpression(var: !4562, expr: !DIExpression())
!4562 = distinct !DIGlobalVariable(name: "notch", scope: !4563, file: !3, line: 1191, type: !4617, isLocal: true, isDefinition: true)
!4563 = distinct !DISubprogram(name: "dib7000p_spur_protect", scope: !3, file: !3, line: 1189, type: !4564, scopeLine: 1190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4564 = !DISubroutineType(types: !4565)
!4565 = !{null, !4566, !331, !331}
!4566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4567, size: 64)
!4567 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dib7000p_state", file: !3, line: 40, size: 54720, elements: !4568)
!4568 = !{!4569, !4570, !4571, !4572, !4573, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4608, !4610, !4611, !4612, !4613, !4614, !4615, !4616}
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "demod", scope: !4567, file: !3, line: 41, baseType: !465, size: 10240)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !4567, file: !3, line: 42, baseType: !4472, size: 576, offset: 10240)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_addr", scope: !4567, file: !3, line: 44, baseType: !318, size: 8, offset: 10816)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_adap", scope: !4567, file: !3, line: 45, baseType: !4349, size: 64, offset: 10880)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_master", scope: !4567, file: !3, line: 47, baseType: !4574, size: 35072, offset: 10944)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dibx000_i2c_master", file: !284, line: 12, size: 35072, elements: !4575)
!4575 = !{!4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4587, !4588, !4590}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "device_rev", scope: !4574, file: !284, line: 18, baseType: !328, size: 16)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "selected_interface", scope: !4574, file: !284, line: 20, baseType: !283, size: 32, offset: 32)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "gated_tuner_i2c_adap", scope: !4574, file: !284, line: 23, baseType: !4350, size: 7552, offset: 64)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "master_i2c_adap_gpio12", scope: !4574, file: !284, line: 24, baseType: !4350, size: 7552, offset: 7616)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "master_i2c_adap_gpio34", scope: !4574, file: !284, line: 25, baseType: !4350, size: 7552, offset: 15168)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "master_i2c_adap_gpio67", scope: !4574, file: !284, line: 26, baseType: !4350, size: 7552, offset: 22720)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_adap", scope: !4574, file: !284, line: 28, baseType: !4349, size: 64, offset: 30272)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_addr", scope: !4574, file: !284, line: 29, baseType: !318, size: 8, offset: 30336)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "base_reg", scope: !4574, file: !284, line: 31, baseType: !328, size: 16, offset: 30352)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4574, file: !284, line: 34, baseType: !4586, size: 4352, offset: 30400)
!4586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4365, size: 4352, elements: !4385)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_write_buffer", scope: !4574, file: !284, line: 35, baseType: !500, size: 64, offset: 34752)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_read_buffer", scope: !4574, file: !284, line: 36, baseType: !4589, size: 16, offset: 34816)
!4589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 16, elements: !2020)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_buffer_lock", scope: !4574, file: !284, line: 37, baseType: !1631, size: 192, offset: 34880)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "wbd_ref", scope: !4567, file: !3, line: 49, baseType: !328, size: 16, offset: 46016)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "current_band", scope: !4567, file: !3, line: 51, baseType: !318, size: 8, offset: 46032)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "current_bandwidth", scope: !4567, file: !3, line: 52, baseType: !331, size: 32, offset: 46048)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "current_agc", scope: !4567, file: !3, line: 53, baseType: !4484, size: 64, offset: 46080)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "timf", scope: !4567, file: !3, line: 54, baseType: !331, size: 32, offset: 46144)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "div_force_off", scope: !4567, file: !3, line: 56, baseType: !318, size: 1, offset: 46176, flags: DIFlagBitField, extraData: i64 46176)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "div_state", scope: !4567, file: !3, line: 57, baseType: !318, size: 1, offset: 46177, flags: DIFlagBitField, extraData: i64 46176)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "div_sync_wait", scope: !4567, file: !3, line: 58, baseType: !328, size: 16, offset: 46192)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "agc_state", scope: !4567, file: !3, line: 60, baseType: !318, size: 8, offset: 46208)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_dir", scope: !4567, file: !3, line: 62, baseType: !328, size: 16, offset: 46224)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "gpio_val", scope: !4567, file: !3, line: 63, baseType: !328, size: 16, offset: 46240)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "sfn_workaround_active", scope: !4567, file: !3, line: 65, baseType: !318, size: 1, offset: 46256, flags: DIFlagBitField, extraData: i64 46256)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4567, file: !3, line: 68, baseType: !328, size: 16, offset: 46272)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_enable", scope: !4567, file: !3, line: 70, baseType: !328, size: 16, offset: 46288)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "dib7090_tuner_adap", scope: !4567, file: !3, line: 71, baseType: !4350, size: 7552, offset: 46336)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4567, file: !3, line: 74, baseType: !4607, size: 256, offset: 53888)
!4607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4365, size: 256, elements: !2020)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_write_buffer", scope: !4567, file: !3, line: 75, baseType: !4609, size: 32, offset: 54144)
!4609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 32, elements: !616)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_read_buffer", scope: !4567, file: !3, line: 76, baseType: !4589, size: 16, offset: 54176)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_buffer_lock", scope: !4567, file: !3, line: 77, baseType: !1631, size: 192, offset: 54208)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "input_mode_mpeg", scope: !4567, file: !3, line: 79, baseType: !318, size: 8, offset: 54400)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "old_ucb", scope: !4567, file: !3, line: 82, baseType: !1319, size: 64, offset: 54464)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "per_jiffies_stats", scope: !4567, file: !3, line: 83, baseType: !685, size: 64, offset: 54528)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "ber_jiffies_stats", scope: !4567, file: !3, line: 84, baseType: !685, size: 64, offset: 54592)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "get_stats_time", scope: !4567, file: !3, line: 85, baseType: !685, size: 64, offset: 54656)
!4617 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1661, size: 128, elements: !501)
!4618 = !DIGlobalVariableExpression(var: !4619, expr: !DIExpression())
!4619 = distinct !DIGlobalVariable(name: "sine", scope: !4563, file: !3, line: 1192, type: !4620, isLocal: true, isDefinition: true)
!4620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !318, size: 2048, elements: !4621)
!4621 = !{!4622}
!4622 = !DISubrange(count: 256)
!4623 = !DIGlobalVariableExpression(var: !4624, expr: !DIExpression())
!4624 = distinct !DIGlobalVariable(name: "strength_to_db_table", scope: !2, file: !3, line: 1725, type: !4625, isLocal: true, isDefinition: true)
!4625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4626, size: 2112, elements: !4630)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linear_segments", file: !3, line: 1699, size: 64, elements: !4627)
!4627 = !{!4628, !4629}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4626, file: !3, line: 1700, baseType: !7, size: 32)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4626, file: !3, line: 1701, baseType: !327, size: 32, offset: 32)
!4630 = !{!4631}
!4631 = !DISubrange(count: 33)
!4632 = !DIGlobalVariableExpression(var: !4633, expr: !DIExpression())
!4633 = distinct !DIGlobalVariable(name: "dib7090_tuner_xfer_algo", scope: !2, file: !3, line: 2394, type: !4357, isLocal: true, isDefinition: true)
!4634 = !DIGlobalVariableExpression(var: !4635, expr: !DIExpression())
!4635 = distinct !DIGlobalVariable(name: "dib7000p_defaults", scope: !2, file: !3, line: 562, type: !4636, isLocal: true, isDefinition: true)
!4636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 1232, elements: !4637)
!4637 = !{!4638}
!4638 = !DISubrange(count: 77)
!4639 = !DIGlobalVariableExpression(var: !4640, expr: !DIExpression())
!4640 = distinct !DIGlobalVariable(name: "__key", scope: !4641, file: !3, line: 2094, type: !1191, isLocal: true, isDefinition: true)
!4641 = distinct !DISubprogram(name: "dib7000p_i2c_enumeration", scope: !3, file: !3, line: 2083, type: !4642, scopeLine: 2084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4642 = !DISubroutineType(types: !4643)
!4643 = !{!327, !4349, !327, !318, !4471}
!4644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !347, size: 120, elements: !4645)
!4645 = !{!4646}
!4646 = !DISubrange(count: 15)
!4647 = !{i32 7, !"Dwarf Version", i32 4}
!4648 = !{i32 2, !"Debug Info Version", i32 3}
!4649 = !{i32 1, !"wchar_size", i32 2}
!4650 = !{i32 1, !"Code Model", i32 2}
!4651 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4652 = distinct !DISubprogram(name: "dib7000p_attach", scope: !3, file: !3, line: 2801, type: !4653, scopeLine: 2802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4653 = !DISubroutineType(types: !4654)
!4654 = !{!317, !4655}
!4655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4656, size: 64)
!4656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dib7000p_ops", file: !4473, line: 48, size: 1024, elements: !4657)
!4657 = !{!4658, !4659, !4663, !4664, !4668, !4672, !4676, !4677, !4681, !4682, !4686, !4688, !4692, !4693, !4694, !4695}
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "set_wbd_ref", scope: !4656, file: !4473, line: 49, baseType: !4479, size: 64)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "get_agc_values", scope: !4656, file: !4473, line: 50, baseType: !4660, size: 64, offset: 64)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{!327, !464, !638, !638, !638, !638}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "set_agc1_min", scope: !4656, file: !4473, line: 52, baseType: !4479, size: 64, offset: 128)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "update_pll", scope: !4656, file: !4473, line: 53, baseType: !4665, size: 64, offset: 192)
!4665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4666, size: 64)
!4666 = !DISubroutineType(types: !4667)
!4667 = !{!327, !464, !4523}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "set_gpio", scope: !4656, file: !4473, line: 54, baseType: !4669, size: 64, offset: 256)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!327, !464, !318, !318, !318}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl_timf", scope: !4656, file: !4473, line: 55, baseType: !4673, size: 64, offset: 320)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!331, !464, !318, !331}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "dib7000pc_detection", scope: !4656, file: !4473, line: 56, baseType: !4432, size: 64, offset: 384)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "get_i2c_master", scope: !4656, file: !4473, line: 57, baseType: !4678, size: 64, offset: 448)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!4349, !464, !283, !327}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "pid_filter_ctrl", scope: !4656, file: !4473, line: 58, baseType: !4549, size: 64, offset: 512)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "pid_filter", scope: !4656, file: !4473, line: 59, baseType: !4683, size: 64, offset: 576)
!4683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4684, size: 64)
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!327, !464, !318, !328, !318}
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_enumeration", scope: !4656, file: !4473, line: 60, baseType: !4687, size: 64, offset: 640)
!4687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4642, size: 64)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "get_i2c_tuner", scope: !4656, file: !4473, line: 61, baseType: !4689, size: 64, offset: 704)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!4349, !464}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_sleep", scope: !4656, file: !4473, line: 62, baseType: !687, size: 64, offset: 768)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "get_adc_power", scope: !4656, file: !4473, line: 63, baseType: !510, size: 64, offset: 832)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "slave_reset", scope: !4656, file: !4473, line: 64, baseType: !510, size: 64, offset: 896)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !4656, file: !4473, line: 65, baseType: !4696, size: 64, offset: 960)
!4696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!4697 = !DILocalVariable(name: "ops", arg: 1, scope: !4652, file: !3, line: 2801, type: !4655)
!4698 = !DILocation(line: 2801, column: 44, scope: !4652)
!4699 = !DILocation(line: 2803, column: 7, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 2803, column: 6)
!4701 = !DILocation(line: 2803, column: 6, scope: !4652)
!4702 = !DILocation(line: 2804, column: 3, scope: !4700)
!4703 = !DILocation(line: 2806, column: 2, scope: !4652)
!4704 = !DILocation(line: 2806, column: 7, scope: !4652)
!4705 = !DILocation(line: 2806, column: 19, scope: !4652)
!4706 = !DILocation(line: 2807, column: 2, scope: !4652)
!4707 = !DILocation(line: 2807, column: 7, scope: !4652)
!4708 = !DILocation(line: 2807, column: 21, scope: !4652)
!4709 = !DILocation(line: 2808, column: 2, scope: !4652)
!4710 = !DILocation(line: 2808, column: 7, scope: !4652)
!4711 = !DILocation(line: 2808, column: 27, scope: !4652)
!4712 = !DILocation(line: 2809, column: 2, scope: !4652)
!4713 = !DILocation(line: 2809, column: 7, scope: !4652)
!4714 = !DILocation(line: 2809, column: 21, scope: !4652)
!4715 = !DILocation(line: 2810, column: 2, scope: !4652)
!4716 = !DILocation(line: 2810, column: 7, scope: !4652)
!4717 = !DILocation(line: 2810, column: 19, scope: !4652)
!4718 = !DILocation(line: 2811, column: 2, scope: !4652)
!4719 = !DILocation(line: 2811, column: 7, scope: !4652)
!4720 = !DILocation(line: 2811, column: 12, scope: !4652)
!4721 = !DILocation(line: 2812, column: 2, scope: !4652)
!4722 = !DILocation(line: 2812, column: 7, scope: !4652)
!4723 = !DILocation(line: 2812, column: 20, scope: !4652)
!4724 = !DILocation(line: 2813, column: 2, scope: !4652)
!4725 = !DILocation(line: 2813, column: 7, scope: !4652)
!4726 = !DILocation(line: 2813, column: 16, scope: !4652)
!4727 = !DILocation(line: 2814, column: 2, scope: !4652)
!4728 = !DILocation(line: 2814, column: 7, scope: !4652)
!4729 = !DILocation(line: 2814, column: 23, scope: !4652)
!4730 = !DILocation(line: 2815, column: 2, scope: !4652)
!4731 = !DILocation(line: 2815, column: 7, scope: !4652)
!4732 = !DILocation(line: 2815, column: 18, scope: !4652)
!4733 = !DILocation(line: 2816, column: 2, scope: !4652)
!4734 = !DILocation(line: 2816, column: 7, scope: !4652)
!4735 = !DILocation(line: 2816, column: 23, scope: !4652)
!4736 = !DILocation(line: 2817, column: 2, scope: !4652)
!4737 = !DILocation(line: 2817, column: 7, scope: !4652)
!4738 = !DILocation(line: 2817, column: 22, scope: !4652)
!4739 = !DILocation(line: 2818, column: 2, scope: !4652)
!4740 = !DILocation(line: 2818, column: 7, scope: !4652)
!4741 = !DILocation(line: 2818, column: 18, scope: !4652)
!4742 = !DILocation(line: 2819, column: 2, scope: !4652)
!4743 = !DILocation(line: 2819, column: 7, scope: !4652)
!4744 = !DILocation(line: 2819, column: 17, scope: !4652)
!4745 = !DILocation(line: 2820, column: 2, scope: !4652)
!4746 = !DILocation(line: 2820, column: 7, scope: !4652)
!4747 = !DILocation(line: 2820, column: 22, scope: !4652)
!4748 = !DILocation(line: 2821, column: 2, scope: !4652)
!4749 = !DILocation(line: 2821, column: 7, scope: !4652)
!4750 = !DILocation(line: 2821, column: 19, scope: !4652)
!4751 = !DILocation(line: 2823, column: 9, scope: !4652)
!4752 = !DILocation(line: 2823, column: 2, scope: !4652)
!4753 = !DILocation(line: 2824, column: 1, scope: !4652)
!4754 = distinct !DISubprogram(name: "dib7090_slave_reset", scope: !3, file: !3, line: 2724, type: !511, scopeLine: 2725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4755 = !DILocalVariable(name: "fe", arg: 1, scope: !4754, file: !3, line: 2724, type: !464)
!4756 = !DILocation(line: 2724, column: 53, scope: !4754)
!4757 = !DILocalVariable(name: "state", scope: !4754, file: !3, line: 2726, type: !4566)
!4758 = !DILocation(line: 2726, column: 25, scope: !4754)
!4759 = !DILocation(line: 2726, column: 33, scope: !4754)
!4760 = !DILocation(line: 2726, column: 37, scope: !4754)
!4761 = !DILocalVariable(name: "reg", scope: !4754, file: !3, line: 2727, type: !328)
!4762 = !DILocation(line: 2727, column: 6, scope: !4754)
!4763 = !DILocation(line: 2729, column: 27, scope: !4754)
!4764 = !DILocation(line: 2729, column: 8, scope: !4754)
!4765 = !DILocation(line: 2729, column: 6, scope: !4754)
!4766 = !DILocation(line: 2730, column: 22, scope: !4754)
!4767 = !DILocation(line: 2730, column: 35, scope: !4754)
!4768 = !DILocation(line: 2730, column: 39, scope: !4754)
!4769 = !DILocation(line: 2730, column: 2, scope: !4754)
!4770 = !DILocation(line: 2732, column: 22, scope: !4754)
!4771 = !DILocation(line: 2732, column: 2, scope: !4754)
!4772 = !DILocation(line: 2733, column: 2, scope: !4754)
!4773 = distinct !DISubprogram(name: "dib7090_get_adc_power", scope: !3, file: !3, line: 2719, type: !511, scopeLine: 2720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4774 = !DILocalVariable(name: "fe", arg: 1, scope: !4773, file: !3, line: 2719, type: !464)
!4775 = !DILocation(line: 2719, column: 55, scope: !4773)
!4776 = !DILocation(line: 2721, column: 32, scope: !4773)
!4777 = !DILocation(line: 2721, column: 9, scope: !4773)
!4778 = !DILocation(line: 2721, column: 2, scope: !4773)
!4779 = distinct !DISubprogram(name: "dib7000pc_detection", scope: !3, file: !3, line: 2012, type: !4433, scopeLine: 2013, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4780 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !4779, file: !3, line: 2012, type: !4349)
!4781 = !DILocation(line: 2012, column: 52, scope: !4779)
!4782 = !DILocalVariable(name: "tx", scope: !4779, file: !3, line: 2014, type: !744)
!4783 = !DILocation(line: 2014, column: 6, scope: !4779)
!4784 = !DILocalVariable(name: "rx", scope: !4779, file: !3, line: 2014, type: !744)
!4785 = !DILocation(line: 2014, column: 11, scope: !4779)
!4786 = !DILocalVariable(name: "msg", scope: !4779, file: !3, line: 2015, type: !4607)
!4787 = !DILocation(line: 2015, column: 17, scope: !4779)
!4788 = !DILocalVariable(name: "ret", scope: !4779, file: !3, line: 2019, type: !327)
!4789 = !DILocation(line: 2019, column: 6, scope: !4779)
!4790 = !DILocation(line: 2021, column: 7, scope: !4779)
!4791 = !DILocation(line: 2021, column: 5, scope: !4779)
!4792 = !DILocation(line: 2022, column: 7, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2022, column: 6)
!4794 = !DILocation(line: 2022, column: 6, scope: !4779)
!4795 = !DILocation(line: 2023, column: 3, scope: !4793)
!4796 = !DILocation(line: 2024, column: 7, scope: !4779)
!4797 = !DILocation(line: 2024, column: 5, scope: !4779)
!4798 = !DILocation(line: 2025, column: 7, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2025, column: 6)
!4800 = !DILocation(line: 2025, column: 6, scope: !4779)
!4801 = !DILocation(line: 2026, column: 7, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4799, file: !3, line: 2025, column: 11)
!4803 = !DILocation(line: 2027, column: 3, scope: !4802)
!4804 = !DILocation(line: 2030, column: 15, scope: !4779)
!4805 = !DILocation(line: 2030, column: 2, scope: !4779)
!4806 = !DILocation(line: 2030, column: 9, scope: !4779)
!4807 = !DILocation(line: 2030, column: 13, scope: !4779)
!4808 = !DILocation(line: 2031, column: 15, scope: !4779)
!4809 = !DILocation(line: 2031, column: 2, scope: !4779)
!4810 = !DILocation(line: 2031, column: 9, scope: !4779)
!4811 = !DILocation(line: 2031, column: 13, scope: !4779)
!4812 = !DILocation(line: 2033, column: 2, scope: !4779)
!4813 = !DILocation(line: 2033, column: 8, scope: !4779)
!4814 = !DILocation(line: 2034, column: 2, scope: !4779)
!4815 = !DILocation(line: 2034, column: 8, scope: !4779)
!4816 = !DILocation(line: 2036, column: 19, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2036, column: 6)
!4818 = !DILocation(line: 2036, column: 29, scope: !4817)
!4819 = !DILocation(line: 2036, column: 6, scope: !4817)
!4820 = !DILocation(line: 2036, column: 37, scope: !4817)
!4821 = !DILocation(line: 2036, column: 6, scope: !4779)
!4822 = !DILocation(line: 2037, column: 7, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 2037, column: 7)
!4824 = !DILocation(line: 2037, column: 13, scope: !4823)
!4825 = !DILocation(line: 2037, column: 21, scope: !4823)
!4826 = !DILocation(line: 2037, column: 24, scope: !4823)
!4827 = !DILocation(line: 2037, column: 30, scope: !4823)
!4828 = !DILocation(line: 2037, column: 7, scope: !4817)
!4829 = !DILocation(line: 2038, column: 4, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 2037, column: 39)
!4831 = !DILocation(line: 2038, column: 4, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 2038, column: 4)
!4833 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 2038, column: 4)
!4834 = !DILocation(line: 2038, column: 4, scope: !4833)
!4835 = !DILocation(line: 2039, column: 8, scope: !4830)
!4836 = !DILocation(line: 2040, column: 4, scope: !4830)
!4837 = !DILocation(line: 2037, column: 33, scope: !4823)
!4838 = !DILocation(line: 2043, column: 16, scope: !4779)
!4839 = !DILocation(line: 2043, column: 23, scope: !4779)
!4840 = !DILocation(line: 2043, column: 28, scope: !4779)
!4841 = !DILocation(line: 2043, column: 2, scope: !4779)
!4842 = !DILocation(line: 2043, column: 9, scope: !4779)
!4843 = !DILocation(line: 2043, column: 14, scope: !4779)
!4844 = !DILocation(line: 2045, column: 19, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2045, column: 6)
!4846 = !DILocation(line: 2045, column: 29, scope: !4845)
!4847 = !DILocation(line: 2045, column: 6, scope: !4845)
!4848 = !DILocation(line: 2045, column: 37, scope: !4845)
!4849 = !DILocation(line: 2045, column: 6, scope: !4779)
!4850 = !DILocation(line: 2046, column: 7, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4845, file: !3, line: 2046, column: 7)
!4852 = !DILocation(line: 2046, column: 13, scope: !4851)
!4853 = !DILocation(line: 2046, column: 21, scope: !4851)
!4854 = !DILocation(line: 2046, column: 24, scope: !4851)
!4855 = !DILocation(line: 2046, column: 30, scope: !4851)
!4856 = !DILocation(line: 2046, column: 7, scope: !4845)
!4857 = !DILocation(line: 2047, column: 4, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 2046, column: 39)
!4859 = !DILocation(line: 2047, column: 4, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4861, file: !3, line: 2047, column: 4)
!4861 = distinct !DILexicalBlock(scope: !4858, file: !3, line: 2047, column: 4)
!4862 = !DILocation(line: 2047, column: 4, scope: !4861)
!4863 = !DILocation(line: 2048, column: 8, scope: !4858)
!4864 = !DILocation(line: 2049, column: 4, scope: !4858)
!4865 = !DILocation(line: 2046, column: 33, scope: !4851)
!4866 = !DILocation(line: 2052, column: 2, scope: !4779)
!4867 = !DILocation(line: 2052, column: 2, scope: !4868)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 2052, column: 2)
!4869 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 2052, column: 2)
!4870 = !DILocation(line: 2052, column: 2, scope: !4869)
!4871 = !DILabel(scope: !4779, name: "out", file: !3, line: 2054)
!4872 = !DILocation(line: 2054, column: 1, scope: !4779)
!4873 = !DILocation(line: 2055, column: 8, scope: !4779)
!4874 = !DILocation(line: 2055, column: 2, scope: !4779)
!4875 = !DILabel(scope: !4779, name: "rx_memory_error", file: !3, line: 2056)
!4876 = !DILocation(line: 2056, column: 1, scope: !4779)
!4877 = !DILocation(line: 2057, column: 8, scope: !4779)
!4878 = !DILocation(line: 2057, column: 2, scope: !4779)
!4879 = !DILocation(line: 2058, column: 9, scope: !4779)
!4880 = !DILocation(line: 2058, column: 2, scope: !4779)
!4881 = !DILocation(line: 2059, column: 1, scope: !4779)
!4882 = distinct !DISubprogram(name: "dib7090_get_i2c_tuner", scope: !3, file: !3, line: 2399, type: !4690, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4883 = !DILocalVariable(name: "fe", arg: 1, scope: !4882, file: !3, line: 2399, type: !464)
!4884 = !DILocation(line: 2399, column: 71, scope: !4882)
!4885 = !DILocalVariable(name: "st", scope: !4882, file: !3, line: 2401, type: !4566)
!4886 = !DILocation(line: 2401, column: 25, scope: !4882)
!4887 = !DILocation(line: 2401, column: 30, scope: !4882)
!4888 = !DILocation(line: 2401, column: 34, scope: !4882)
!4889 = !DILocation(line: 2402, column: 10, scope: !4882)
!4890 = !DILocation(line: 2402, column: 14, scope: !4882)
!4891 = !DILocation(line: 2402, column: 2, scope: !4882)
!4892 = distinct !DISubprogram(name: "dib7090_tuner_sleep", scope: !3, file: !3, line: 2695, type: !688, scopeLine: 2696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!4893 = !DILocalVariable(name: "fe", arg: 1, scope: !4892, file: !3, line: 2695, type: !464)
!4894 = !DILocation(line: 2695, column: 53, scope: !4892)
!4895 = !DILocalVariable(name: "onoff", arg: 2, scope: !4892, file: !3, line: 2695, type: !327)
!4896 = !DILocation(line: 2695, column: 61, scope: !4892)
!4897 = !DILocalVariable(name: "state", scope: !4892, file: !3, line: 2697, type: !4566)
!4898 = !DILocation(line: 2697, column: 25, scope: !4892)
!4899 = !DILocation(line: 2697, column: 33, scope: !4892)
!4900 = !DILocation(line: 2697, column: 37, scope: !4892)
!4901 = !DILocalVariable(name: "en_cur_state", scope: !4892, file: !3, line: 2698, type: !328)
!4902 = !DILocation(line: 2698, column: 6, scope: !4892)
!4903 = !DILocation(line: 2700, column: 2, scope: !4892)
!4904 = !DILocation(line: 2700, column: 2, scope: !4905)
!4905 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 2700, column: 2)
!4906 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2700, column: 2)
!4907 = !DILocation(line: 2700, column: 2, scope: !4906)
!4908 = !DILocation(line: 2702, column: 36, scope: !4892)
!4909 = !DILocation(line: 2702, column: 17, scope: !4892)
!4910 = !DILocation(line: 2702, column: 15, scope: !4892)
!4911 = !DILocation(line: 2704, column: 6, scope: !4912)
!4912 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2704, column: 6)
!4913 = !DILocation(line: 2704, column: 19, scope: !4912)
!4914 = !DILocation(line: 2704, column: 6, scope: !4892)
!4915 = !DILocation(line: 2705, column: 25, scope: !4912)
!4916 = !DILocation(line: 2705, column: 3, scope: !4912)
!4917 = !DILocation(line: 2705, column: 10, scope: !4912)
!4918 = !DILocation(line: 2705, column: 23, scope: !4912)
!4919 = !DILocation(line: 2707, column: 6, scope: !4920)
!4920 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2707, column: 6)
!4921 = !DILocation(line: 2707, column: 6, scope: !4892)
!4922 = !DILocation(line: 2708, column: 16, scope: !4920)
!4923 = !DILocation(line: 2708, column: 3, scope: !4920)
!4924 = !DILocation(line: 2710, column: 7, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 2710, column: 7)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 2709, column: 7)
!4927 = !DILocation(line: 2710, column: 14, scope: !4925)
!4928 = !DILocation(line: 2710, column: 27, scope: !4925)
!4929 = !DILocation(line: 2710, column: 7, scope: !4926)
!4930 = !DILocation(line: 2711, column: 19, scope: !4925)
!4931 = !DILocation(line: 2711, column: 26, scope: !4925)
!4932 = !DILocation(line: 2711, column: 17, scope: !4925)
!4933 = !DILocation(line: 2711, column: 4, scope: !4925)
!4934 = !DILocation(line: 2714, column: 22, scope: !4892)
!4935 = !DILocation(line: 2714, column: 35, scope: !4892)
!4936 = !DILocation(line: 2714, column: 2, scope: !4892)
!4937 = !DILocation(line: 2716, column: 2, scope: !4892)
!4938 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !461, file: !3, line: 2737, type: !4349)
!4939 = !DILocation(line: 2737, column: 63, scope: !461)
!4940 = !DILocalVariable(name: "i2c_addr", arg: 2, scope: !461, file: !3, line: 2737, type: !318)
!4941 = !DILocation(line: 2737, column: 76, scope: !461)
!4942 = !DILocalVariable(name: "cfg", arg: 3, scope: !461, file: !3, line: 2737, type: !4471)
!4943 = !DILocation(line: 2737, column: 110, scope: !461)
!4944 = !DILocalVariable(name: "demod", scope: !461, file: !3, line: 2739, type: !464)
!4945 = !DILocation(line: 2739, column: 23, scope: !461)
!4946 = !DILocalVariable(name: "st", scope: !461, file: !3, line: 2740, type: !4566)
!4947 = !DILocation(line: 2740, column: 25, scope: !461)
!4948 = !DILocation(line: 2741, column: 7, scope: !461)
!4949 = !DILocation(line: 2741, column: 5, scope: !461)
!4950 = !DILocation(line: 2742, column: 6, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !461, file: !3, line: 2742, column: 6)
!4952 = !DILocation(line: 2742, column: 9, scope: !4951)
!4953 = !DILocation(line: 2742, column: 6, scope: !461)
!4954 = !DILocation(line: 2743, column: 3, scope: !4951)
!4955 = !DILocation(line: 2745, column: 10, scope: !461)
!4956 = !DILocation(line: 2745, column: 14, scope: !461)
!4957 = !DILocation(line: 2745, column: 2, scope: !461)
!4958 = !DILocation(line: 2745, column: 19, scope: !461)
!4959 = !DILocation(line: 2746, column: 17, scope: !461)
!4960 = !DILocation(line: 2746, column: 2, scope: !461)
!4961 = !DILocation(line: 2746, column: 6, scope: !461)
!4962 = !DILocation(line: 2746, column: 15, scope: !461)
!4963 = !DILocation(line: 2747, column: 17, scope: !461)
!4964 = !DILocation(line: 2747, column: 2, scope: !461)
!4965 = !DILocation(line: 2747, column: 6, scope: !461)
!4966 = !DILocation(line: 2747, column: 15, scope: !461)
!4967 = !DILocation(line: 2748, column: 17, scope: !461)
!4968 = !DILocation(line: 2748, column: 22, scope: !461)
!4969 = !DILocation(line: 2748, column: 2, scope: !461)
!4970 = !DILocation(line: 2748, column: 6, scope: !461)
!4971 = !DILocation(line: 2748, column: 15, scope: !461)
!4972 = !DILocation(line: 2749, column: 17, scope: !461)
!4973 = !DILocation(line: 2749, column: 22, scope: !461)
!4974 = !DILocation(line: 2749, column: 2, scope: !461)
!4975 = !DILocation(line: 2749, column: 6, scope: !461)
!4976 = !DILocation(line: 2749, column: 15, scope: !461)
!4977 = !DILocation(line: 2754, column: 7, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !461, file: !3, line: 2754, column: 6)
!4979 = !DILocation(line: 2754, column: 11, scope: !4978)
!4980 = !DILocation(line: 2754, column: 15, scope: !4978)
!4981 = !DILocation(line: 2754, column: 27, scope: !4978)
!4982 = !DILocation(line: 2754, column: 52, scope: !4978)
!4983 = !DILocation(line: 2754, column: 56, scope: !4978)
!4984 = !DILocation(line: 2754, column: 60, scope: !4978)
!4985 = !DILocation(line: 2754, column: 64, scope: !4978)
!4986 = !DILocation(line: 2754, column: 76, scope: !4978)
!4987 = !DILocation(line: 2754, column: 6, scope: !461)
!4988 = !DILocation(line: 2755, column: 3, scope: !4978)
!4989 = !DILocation(line: 2755, column: 7, scope: !4978)
!4990 = !DILocation(line: 2755, column: 11, scope: !4978)
!4991 = !DILocation(line: 2755, column: 23, scope: !4978)
!4992 = !DILocation(line: 2757, column: 11, scope: !461)
!4993 = !DILocation(line: 2757, column: 15, scope: !461)
!4994 = !DILocation(line: 2757, column: 8, scope: !461)
!4995 = !DILocation(line: 2758, column: 28, scope: !461)
!4996 = !DILocation(line: 2758, column: 2, scope: !461)
!4997 = !DILocation(line: 2758, column: 9, scope: !461)
!4998 = !DILocation(line: 2758, column: 26, scope: !461)
!4999 = !DILocation(line: 2759, column: 10, scope: !461)
!5000 = !DILocation(line: 2759, column: 14, scope: !461)
!5001 = !DILocation(line: 2759, column: 20, scope: !461)
!5002 = !DILocation(line: 2759, column: 2, scope: !461)
!5003 = !DILocation(line: 2760, column: 2, scope: !461)
!5004 = !DILocation(line: 2760, column: 2, scope: !5005)
!5005 = distinct !DILexicalBlock(scope: !461, file: !3, line: 2760, column: 2)
!5006 = !DILocation(line: 2762, column: 22, scope: !461)
!5007 = !DILocation(line: 2762, column: 2, scope: !461)
!5008 = !DILocation(line: 2764, column: 24, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !461, file: !3, line: 2764, column: 6)
!5010 = !DILocation(line: 2764, column: 6, scope: !5009)
!5011 = !DILocation(line: 2764, column: 28, scope: !5009)
!5012 = !DILocation(line: 2764, column: 6, scope: !461)
!5013 = !DILocation(line: 2765, column: 3, scope: !5009)
!5014 = !DILocation(line: 2767, column: 35, scope: !461)
!5015 = !DILocation(line: 2767, column: 16, scope: !461)
!5016 = !DILocation(line: 2767, column: 2, scope: !461)
!5017 = !DILocation(line: 2767, column: 6, scope: !461)
!5018 = !DILocation(line: 2767, column: 14, scope: !461)
!5019 = !DILocation(line: 2772, column: 51, scope: !461)
!5020 = !DILocation(line: 2772, column: 61, scope: !461)
!5021 = !DILocation(line: 2772, column: 65, scope: !461)
!5022 = !DILocation(line: 2772, column: 2, scope: !461)
!5023 = !DILocation(line: 2772, column: 6, scope: !461)
!5024 = !DILocation(line: 2772, column: 17, scope: !461)
!5025 = !DILocation(line: 2772, column: 38, scope: !461)
!5026 = !DILocation(line: 2772, column: 42, scope: !461)
!5027 = !DILocation(line: 2772, column: 49, scope: !461)
!5028 = !DILocation(line: 2774, column: 27, scope: !461)
!5029 = !DILocation(line: 2774, column: 31, scope: !461)
!5030 = !DILocation(line: 2774, column: 53, scope: !461)
!5031 = !DILocation(line: 2774, column: 57, scope: !461)
!5032 = !DILocation(line: 2774, column: 67, scope: !461)
!5033 = !DILocation(line: 2774, column: 71, scope: !461)
!5034 = !DILocation(line: 2774, column: 2, scope: !461)
!5035 = !DILocation(line: 2777, column: 10, scope: !461)
!5036 = !DILocation(line: 2777, column: 14, scope: !461)
!5037 = !DILocation(line: 2777, column: 33, scope: !461)
!5038 = !DILocation(line: 2777, column: 2, scope: !461)
!5039 = !DILocation(line: 2779, column: 2, scope: !461)
!5040 = !DILocation(line: 2779, column: 6, scope: !461)
!5041 = !DILocation(line: 2779, column: 25, scope: !461)
!5042 = !DILocation(line: 2779, column: 30, scope: !461)
!5043 = !DILocation(line: 2780, column: 2, scope: !461)
!5044 = !DILocation(line: 2780, column: 6, scope: !461)
!5045 = !DILocation(line: 2780, column: 25, scope: !461)
!5046 = !DILocation(line: 2780, column: 35, scope: !461)
!5047 = !DILocation(line: 2781, column: 38, scope: !461)
!5048 = !DILocation(line: 2781, column: 42, scope: !461)
!5049 = !DILocation(line: 2781, column: 52, scope: !461)
!5050 = !DILocation(line: 2781, column: 56, scope: !461)
!5051 = !DILocation(line: 2781, column: 2, scope: !461)
!5052 = !DILocation(line: 2781, column: 6, scope: !461)
!5053 = !DILocation(line: 2781, column: 25, scope: !461)
!5054 = !DILocation(line: 2781, column: 29, scope: !461)
!5055 = !DILocation(line: 2781, column: 36, scope: !461)
!5056 = !DILocation(line: 2782, column: 20, scope: !461)
!5057 = !DILocation(line: 2782, column: 24, scope: !461)
!5058 = !DILocation(line: 2782, column: 44, scope: !461)
!5059 = !DILocation(line: 2782, column: 2, scope: !461)
!5060 = !DILocation(line: 2783, column: 19, scope: !461)
!5061 = !DILocation(line: 2783, column: 23, scope: !461)
!5062 = !DILocation(line: 2783, column: 2, scope: !461)
!5063 = !DILocation(line: 2785, column: 23, scope: !461)
!5064 = !DILocation(line: 2785, column: 2, scope: !461)
!5065 = !DILocation(line: 2787, column: 23, scope: !461)
!5066 = !DILocation(line: 2787, column: 2, scope: !461)
!5067 = !DILocation(line: 2789, column: 6, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !461, file: !3, line: 2789, column: 6)
!5069 = !DILocation(line: 2789, column: 10, scope: !5068)
!5070 = !DILocation(line: 2789, column: 18, scope: !5068)
!5071 = !DILocation(line: 2789, column: 6, scope: !461)
!5072 = !DILocation(line: 2790, column: 27, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 2789, column: 30)
!5074 = !DILocation(line: 2790, column: 34, scope: !5073)
!5075 = !DILocation(line: 2790, column: 38, scope: !5073)
!5076 = !DILocation(line: 2790, column: 42, scope: !5073)
!5077 = !DILocation(line: 2790, column: 3, scope: !5073)
!5078 = !DILocation(line: 2791, column: 28, scope: !5073)
!5079 = !DILocation(line: 2791, column: 3, scope: !5073)
!5080 = !DILocation(line: 2792, column: 2, scope: !5073)
!5081 = !DILocation(line: 2794, column: 9, scope: !461)
!5082 = !DILocation(line: 2794, column: 2, scope: !461)
!5083 = !DILabel(scope: !461, name: "error", file: !3, line: 2796)
!5084 = !DILocation(line: 2796, column: 1, scope: !461)
!5085 = !DILocation(line: 2797, column: 8, scope: !461)
!5086 = !DILocation(line: 2797, column: 2, scope: !461)
!5087 = !DILocation(line: 2798, column: 2, scope: !461)
!5088 = !DILocation(line: 2799, column: 1, scope: !461)
!5089 = distinct !DISubprogram(name: "dib7000p_set_agc1_min", scope: !3, file: !3, line: 441, type: !4480, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5090 = !DILocalVariable(name: "fe", arg: 1, scope: !5089, file: !3, line: 441, type: !464)
!5091 = !DILocation(line: 441, column: 55, scope: !5089)
!5092 = !DILocalVariable(name: "v", arg: 2, scope: !5089, file: !3, line: 441, type: !328)
!5093 = !DILocation(line: 441, column: 63, scope: !5089)
!5094 = !DILocalVariable(name: "state", scope: !5089, file: !3, line: 443, type: !4566)
!5095 = !DILocation(line: 443, column: 25, scope: !5089)
!5096 = !DILocation(line: 443, column: 33, scope: !5089)
!5097 = !DILocation(line: 443, column: 37, scope: !5089)
!5098 = !DILocation(line: 444, column: 29, scope: !5089)
!5099 = !DILocation(line: 444, column: 42, scope: !5089)
!5100 = !DILocation(line: 444, column: 9, scope: !5089)
!5101 = !DILocation(line: 444, column: 2, scope: !5089)
!5102 = distinct !DISubprogram(name: "dib7000p_set_gpio", scope: !3, file: !3, line: 556, type: !4670, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5103 = !DILocalVariable(name: "demod", arg: 1, scope: !5102, file: !3, line: 556, type: !464)
!5104 = !DILocation(line: 556, column: 51, scope: !5102)
!5105 = !DILocalVariable(name: "num", arg: 2, scope: !5102, file: !3, line: 556, type: !318)
!5106 = !DILocation(line: 556, column: 61, scope: !5102)
!5107 = !DILocalVariable(name: "dir", arg: 3, scope: !5102, file: !3, line: 556, type: !318)
!5108 = !DILocation(line: 556, column: 69, scope: !5102)
!5109 = !DILocalVariable(name: "val", arg: 4, scope: !5102, file: !3, line: 556, type: !318)
!5110 = !DILocation(line: 556, column: 77, scope: !5102)
!5111 = !DILocalVariable(name: "state", scope: !5102, file: !3, line: 558, type: !4566)
!5112 = !DILocation(line: 558, column: 25, scope: !5102)
!5113 = !DILocation(line: 558, column: 33, scope: !5102)
!5114 = !DILocation(line: 558, column: 40, scope: !5102)
!5115 = !DILocation(line: 559, column: 27, scope: !5102)
!5116 = !DILocation(line: 559, column: 34, scope: !5102)
!5117 = !DILocation(line: 559, column: 39, scope: !5102)
!5118 = !DILocation(line: 559, column: 44, scope: !5102)
!5119 = !DILocation(line: 559, column: 9, scope: !5102)
!5120 = !DILocation(line: 559, column: 2, scope: !5102)
!5121 = !DILocalVariable(name: "i2c", arg: 1, scope: !4641, file: !3, line: 2083, type: !4349)
!5122 = !DILocation(line: 2083, column: 57, scope: !4641)
!5123 = !DILocalVariable(name: "no_of_demods", arg: 2, scope: !4641, file: !3, line: 2083, type: !327)
!5124 = !DILocation(line: 2083, column: 66, scope: !4641)
!5125 = !DILocalVariable(name: "default_addr", arg: 3, scope: !4641, file: !3, line: 2083, type: !318)
!5126 = !DILocation(line: 2083, column: 83, scope: !4641)
!5127 = !DILocalVariable(name: "cfg", arg: 4, scope: !4641, file: !3, line: 2083, type: !4471)
!5128 = !DILocation(line: 2083, column: 120, scope: !4641)
!5129 = !DILocalVariable(name: "dpst", scope: !4641, file: !3, line: 2085, type: !4566)
!5130 = !DILocation(line: 2085, column: 25, scope: !4641)
!5131 = !DILocalVariable(name: "k", scope: !4641, file: !3, line: 2086, type: !327)
!5132 = !DILocation(line: 2086, column: 6, scope: !4641)
!5133 = !DILocalVariable(name: "new_addr", scope: !4641, file: !3, line: 2087, type: !318)
!5134 = !DILocation(line: 2087, column: 5, scope: !4641)
!5135 = !DILocation(line: 2089, column: 9, scope: !4641)
!5136 = !DILocation(line: 2089, column: 7, scope: !4641)
!5137 = !DILocation(line: 2090, column: 7, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2090, column: 6)
!5139 = !DILocation(line: 2090, column: 6, scope: !4641)
!5140 = !DILocation(line: 2091, column: 3, scope: !5138)
!5141 = !DILocation(line: 2093, column: 19, scope: !4641)
!5142 = !DILocation(line: 2093, column: 2, scope: !4641)
!5143 = !DILocation(line: 2093, column: 8, scope: !4641)
!5144 = !DILocation(line: 2093, column: 17, scope: !4641)
!5145 = !DILocation(line: 2094, column: 2, scope: !4641)
!5146 = !DILocation(line: 2094, column: 2, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2094, column: 2)
!5148 = !DILocation(line: 2096, column: 11, scope: !5149)
!5149 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2096, column: 2)
!5150 = !DILocation(line: 2096, column: 24, scope: !5149)
!5151 = !DILocation(line: 2096, column: 9, scope: !5149)
!5152 = !DILocation(line: 2096, column: 7, scope: !5149)
!5153 = !DILocation(line: 2096, column: 29, scope: !5154)
!5154 = distinct !DILexicalBlock(scope: !5149, file: !3, line: 2096, column: 2)
!5155 = !DILocation(line: 2096, column: 31, scope: !5154)
!5156 = !DILocation(line: 2096, column: 2, scope: !5149)
!5157 = !DILocation(line: 2097, column: 3, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5154, file: !3, line: 2096, column: 42)
!5159 = !DILocation(line: 2097, column: 9, scope: !5158)
!5160 = !DILocation(line: 2097, column: 15, scope: !5158)
!5161 = !DILocation(line: 2097, column: 19, scope: !5158)
!5162 = !DILocation(line: 2100, column: 7, scope: !5163)
!5163 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2100, column: 7)
!5164 = !DILocation(line: 2100, column: 11, scope: !5163)
!5165 = !DILocation(line: 2100, column: 14, scope: !5163)
!5166 = !DILocation(line: 2100, column: 31, scope: !5163)
!5167 = !DILocation(line: 2100, column: 7, scope: !5158)
!5168 = !DILocation(line: 2101, column: 15, scope: !5163)
!5169 = !DILocation(line: 2101, column: 19, scope: !5163)
!5170 = !DILocation(line: 2101, column: 22, scope: !5163)
!5171 = !DILocation(line: 2101, column: 42, scope: !5163)
!5172 = !DILocation(line: 2101, column: 44, scope: !5163)
!5173 = !DILocation(line: 2101, column: 39, scope: !5163)
!5174 = !DILocation(line: 2101, column: 13, scope: !5163)
!5175 = !DILocation(line: 2101, column: 4, scope: !5163)
!5176 = !DILocation(line: 2103, column: 23, scope: !5163)
!5177 = !DILocation(line: 2103, column: 21, scope: !5163)
!5178 = !DILocation(line: 2103, column: 26, scope: !5163)
!5179 = !DILocation(line: 2103, column: 15, scope: !5163)
!5180 = !DILocation(line: 2103, column: 13, scope: !5163)
!5181 = !DILocation(line: 2104, column: 20, scope: !5158)
!5182 = !DILocation(line: 2104, column: 3, scope: !5158)
!5183 = !DILocation(line: 2104, column: 9, scope: !5158)
!5184 = !DILocation(line: 2104, column: 18, scope: !5158)
!5185 = !DILocation(line: 2105, column: 23, scope: !5158)
!5186 = !DILocation(line: 2105, column: 3, scope: !5158)
!5187 = !DILocation(line: 2106, column: 25, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2106, column: 7)
!5189 = !DILocation(line: 2106, column: 7, scope: !5188)
!5190 = !DILocation(line: 2106, column: 31, scope: !5188)
!5191 = !DILocation(line: 2106, column: 7, scope: !5158)
!5192 = !DILocation(line: 2107, column: 21, scope: !5193)
!5193 = distinct !DILexicalBlock(scope: !5188, file: !3, line: 2106, column: 37)
!5194 = !DILocation(line: 2107, column: 4, scope: !5193)
!5195 = !DILocation(line: 2107, column: 10, scope: !5193)
!5196 = !DILocation(line: 2107, column: 19, scope: !5193)
!5197 = !DILocation(line: 2108, column: 24, scope: !5193)
!5198 = !DILocation(line: 2108, column: 4, scope: !5193)
!5199 = !DILocation(line: 2109, column: 26, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5193, file: !3, line: 2109, column: 8)
!5201 = !DILocation(line: 2109, column: 8, scope: !5200)
!5202 = !DILocation(line: 2109, column: 32, scope: !5200)
!5203 = !DILocation(line: 2109, column: 8, scope: !5193)
!5204 = !DILocation(line: 2110, column: 5, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2109, column: 38)
!5206 = !DILocation(line: 2110, column: 5, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5208, file: !3, line: 2110, column: 5)
!5208 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 2110, column: 5)
!5209 = !DILocation(line: 2110, column: 5, scope: !5208)
!5210 = !DILocation(line: 2111, column: 11, scope: !5205)
!5211 = !DILocation(line: 2111, column: 5, scope: !5205)
!5212 = !DILocation(line: 2112, column: 5, scope: !5205)
!5213 = !DILocation(line: 2114, column: 3, scope: !5193)
!5214 = !DILocation(line: 2117, column: 28, scope: !5158)
!5215 = !DILocation(line: 2117, column: 3, scope: !5158)
!5216 = !DILocation(line: 2120, column: 23, scope: !5158)
!5217 = !DILocation(line: 2120, column: 36, scope: !5158)
!5218 = !DILocation(line: 2120, column: 45, scope: !5158)
!5219 = !DILocation(line: 2120, column: 51, scope: !5158)
!5220 = !DILocation(line: 2120, column: 35, scope: !5158)
!5221 = !DILocation(line: 2120, column: 3, scope: !5158)
!5222 = !DILocation(line: 2122, column: 3, scope: !5158)
!5223 = !DILocation(line: 2122, column: 3, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 2122, column: 3)
!5225 = distinct !DILexicalBlock(scope: !5158, file: !3, line: 2122, column: 3)
!5226 = !DILocation(line: 2122, column: 3, scope: !5225)
!5227 = !DILocation(line: 2123, column: 2, scope: !5158)
!5228 = !DILocation(line: 2096, column: 38, scope: !5154)
!5229 = !DILocation(line: 2096, column: 2, scope: !5154)
!5230 = distinct !{!5230, !5156, !5231}
!5231 = !DILocation(line: 2123, column: 2, scope: !5149)
!5232 = !DILocation(line: 2125, column: 9, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !4641, file: !3, line: 2125, column: 2)
!5234 = !DILocation(line: 2125, column: 7, scope: !5233)
!5235 = !DILocation(line: 2125, column: 14, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5233, file: !3, line: 2125, column: 2)
!5237 = !DILocation(line: 2125, column: 18, scope: !5236)
!5238 = !DILocation(line: 2125, column: 16, scope: !5236)
!5239 = !DILocation(line: 2125, column: 2, scope: !5233)
!5240 = !DILocation(line: 2126, column: 3, scope: !5241)
!5241 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 2125, column: 37)
!5242 = !DILocation(line: 2126, column: 9, scope: !5241)
!5243 = !DILocation(line: 2126, column: 15, scope: !5241)
!5244 = !DILocation(line: 2126, column: 19, scope: !5241)
!5245 = !DILocation(line: 2127, column: 7, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2127, column: 7)
!5247 = !DILocation(line: 2127, column: 11, scope: !5246)
!5248 = !DILocation(line: 2127, column: 14, scope: !5246)
!5249 = !DILocation(line: 2127, column: 31, scope: !5246)
!5250 = !DILocation(line: 2127, column: 7, scope: !5241)
!5251 = !DILocation(line: 2128, column: 22, scope: !5246)
!5252 = !DILocation(line: 2128, column: 26, scope: !5246)
!5253 = !DILocation(line: 2128, column: 29, scope: !5246)
!5254 = !DILocation(line: 2128, column: 48, scope: !5246)
!5255 = !DILocation(line: 2128, column: 46, scope: !5246)
!5256 = !DILocation(line: 2128, column: 51, scope: !5246)
!5257 = !DILocation(line: 2128, column: 21, scope: !5246)
!5258 = !DILocation(line: 2128, column: 4, scope: !5246)
!5259 = !DILocation(line: 2128, column: 10, scope: !5246)
!5260 = !DILocation(line: 2128, column: 19, scope: !5246)
!5261 = !DILocation(line: 2130, column: 29, scope: !5246)
!5262 = !DILocation(line: 2130, column: 27, scope: !5246)
!5263 = !DILocation(line: 2130, column: 32, scope: !5246)
!5264 = !DILocation(line: 2130, column: 21, scope: !5246)
!5265 = !DILocation(line: 2130, column: 4, scope: !5246)
!5266 = !DILocation(line: 2130, column: 10, scope: !5246)
!5267 = !DILocation(line: 2130, column: 19, scope: !5246)
!5268 = !DILocation(line: 2133, column: 23, scope: !5241)
!5269 = !DILocation(line: 2133, column: 35, scope: !5241)
!5270 = !DILocation(line: 2133, column: 41, scope: !5241)
!5271 = !DILocation(line: 2133, column: 50, scope: !5241)
!5272 = !DILocation(line: 2133, column: 3, scope: !5241)
!5273 = !DILocation(line: 2136, column: 28, scope: !5241)
!5274 = !DILocation(line: 2136, column: 3, scope: !5241)
!5275 = !DILocation(line: 2137, column: 2, scope: !5241)
!5276 = !DILocation(line: 2125, column: 33, scope: !5236)
!5277 = !DILocation(line: 2125, column: 2, scope: !5236)
!5278 = distinct !{!5278, !5239, !5279}
!5279 = !DILocation(line: 2137, column: 2, scope: !5233)
!5280 = !DILocation(line: 2139, column: 8, scope: !4641)
!5281 = !DILocation(line: 2139, column: 2, scope: !4641)
!5282 = !DILocation(line: 2140, column: 2, scope: !4641)
!5283 = !DILocation(line: 2141, column: 1, scope: !4641)
!5284 = distinct !DISubprogram(name: "dib7000p_pid_filter", scope: !3, file: !3, line: 2076, type: !4684, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5285 = !DILocalVariable(name: "fe", arg: 1, scope: !5284, file: !3, line: 2076, type: !464)
!5286 = !DILocation(line: 2076, column: 53, scope: !5284)
!5287 = !DILocalVariable(name: "id", arg: 2, scope: !5284, file: !3, line: 2076, type: !318)
!5288 = !DILocation(line: 2076, column: 60, scope: !5284)
!5289 = !DILocalVariable(name: "pid", arg: 3, scope: !5284, file: !3, line: 2076, type: !328)
!5290 = !DILocation(line: 2076, column: 68, scope: !5284)
!5291 = !DILocalVariable(name: "onoff", arg: 4, scope: !5284, file: !3, line: 2076, type: !318)
!5292 = !DILocation(line: 2076, column: 76, scope: !5284)
!5293 = !DILocalVariable(name: "state", scope: !5284, file: !3, line: 2078, type: !4566)
!5294 = !DILocation(line: 2078, column: 25, scope: !5284)
!5295 = !DILocation(line: 2078, column: 33, scope: !5284)
!5296 = !DILocation(line: 2078, column: 37, scope: !5284)
!5297 = !DILocation(line: 2079, column: 2, scope: !5284)
!5298 = !DILocation(line: 2079, column: 2, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5300, file: !3, line: 2079, column: 2)
!5300 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 2079, column: 2)
!5301 = !DILocation(line: 2079, column: 2, scope: !5300)
!5302 = !DILocation(line: 2080, column: 29, scope: !5284)
!5303 = !DILocation(line: 2080, column: 42, scope: !5284)
!5304 = !DILocation(line: 2080, column: 40, scope: !5284)
!5305 = !DILocation(line: 2080, column: 36, scope: !5284)
!5306 = !DILocation(line: 2080, column: 46, scope: !5284)
!5307 = !DILocation(line: 2080, column: 66, scope: !5284)
!5308 = !DILocation(line: 2080, column: 64, scope: !5284)
!5309 = !DILocation(line: 2080, column: 9, scope: !5284)
!5310 = !DILocation(line: 2080, column: 2, scope: !5284)
!5311 = distinct !DISubprogram(name: "dib7000p_pid_filter_ctrl", scope: !3, file: !3, line: 2067, type: !4550, scopeLine: 2068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5312 = !DILocalVariable(name: "fe", arg: 1, scope: !5311, file: !3, line: 2067, type: !464)
!5313 = !DILocation(line: 2067, column: 58, scope: !5311)
!5314 = !DILocalVariable(name: "onoff", arg: 2, scope: !5311, file: !3, line: 2067, type: !318)
!5315 = !DILocation(line: 2067, column: 65, scope: !5311)
!5316 = !DILocalVariable(name: "state", scope: !5311, file: !3, line: 2069, type: !4566)
!5317 = !DILocation(line: 2069, column: 25, scope: !5311)
!5318 = !DILocation(line: 2069, column: 33, scope: !5311)
!5319 = !DILocation(line: 2069, column: 37, scope: !5311)
!5320 = !DILocalVariable(name: "val", scope: !5311, file: !3, line: 2070, type: !328)
!5321 = !DILocation(line: 2070, column: 6, scope: !5311)
!5322 = !DILocation(line: 2070, column: 31, scope: !5311)
!5323 = !DILocation(line: 2070, column: 12, scope: !5311)
!5324 = !DILocation(line: 2070, column: 43, scope: !5311)
!5325 = !DILocation(line: 2071, column: 10, scope: !5311)
!5326 = !DILocation(line: 2071, column: 16, scope: !5311)
!5327 = !DILocation(line: 2071, column: 23, scope: !5311)
!5328 = !DILocation(line: 2071, column: 6, scope: !5311)
!5329 = !DILocation(line: 2072, column: 2, scope: !5311)
!5330 = !DILocation(line: 2072, column: 2, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 2072, column: 2)
!5332 = distinct !DILexicalBlock(scope: !5311, file: !3, line: 2072, column: 2)
!5333 = !DILocation(line: 2072, column: 2, scope: !5332)
!5334 = !DILocation(line: 2073, column: 29, scope: !5311)
!5335 = !DILocation(line: 2073, column: 41, scope: !5311)
!5336 = !DILocation(line: 2073, column: 9, scope: !5311)
!5337 = !DILocation(line: 2073, column: 2, scope: !5311)
!5338 = distinct !DISubprogram(name: "dib7000p_get_i2c_master", scope: !3, file: !3, line: 2061, type: !4679, scopeLine: 2062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5339 = !DILocalVariable(name: "demod", arg: 1, scope: !5338, file: !3, line: 2061, type: !464)
!5340 = !DILocation(line: 2061, column: 73, scope: !5338)
!5341 = !DILocalVariable(name: "intf", arg: 2, scope: !5338, file: !3, line: 2061, type: !283)
!5342 = !DILocation(line: 2061, column: 107, scope: !5338)
!5343 = !DILocalVariable(name: "gating", arg: 3, scope: !5338, file: !3, line: 2061, type: !327)
!5344 = !DILocation(line: 2061, column: 117, scope: !5338)
!5345 = !DILocalVariable(name: "st", scope: !5338, file: !3, line: 2063, type: !4566)
!5346 = !DILocation(line: 2063, column: 25, scope: !5338)
!5347 = !DILocation(line: 2063, column: 30, scope: !5338)
!5348 = !DILocation(line: 2063, column: 37, scope: !5338)
!5349 = !DILocation(line: 2064, column: 34, scope: !5338)
!5350 = !DILocation(line: 2064, column: 38, scope: !5338)
!5351 = !DILocation(line: 2064, column: 50, scope: !5338)
!5352 = !DILocation(line: 2064, column: 56, scope: !5338)
!5353 = !DILocation(line: 2064, column: 9, scope: !5338)
!5354 = !DILocation(line: 2064, column: 2, scope: !5338)
!5355 = distinct !DISubprogram(name: "dib7000p_update_pll", scope: !3, file: !3, line: 489, type: !4666, scopeLine: 490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5356 = !DILocalVariable(name: "fe", arg: 1, scope: !5355, file: !3, line: 489, type: !464)
!5357 = !DILocation(line: 489, column: 53, scope: !5355)
!5358 = !DILocalVariable(name: "bw", arg: 2, scope: !5355, file: !3, line: 489, type: !4523)
!5359 = !DILocation(line: 489, column: 90, scope: !5355)
!5360 = !DILocalVariable(name: "state", scope: !5355, file: !3, line: 491, type: !4566)
!5361 = !DILocation(line: 491, column: 25, scope: !5355)
!5362 = !DILocation(line: 491, column: 33, scope: !5355)
!5363 = !DILocation(line: 491, column: 37, scope: !5355)
!5364 = !DILocalVariable(name: "reg_1857", scope: !5355, file: !3, line: 492, type: !328)
!5365 = !DILocation(line: 492, column: 6, scope: !5355)
!5366 = !DILocalVariable(name: "reg_1856", scope: !5355, file: !3, line: 492, type: !328)
!5367 = !DILocation(line: 492, column: 16, scope: !5355)
!5368 = !DILocation(line: 492, column: 46, scope: !5355)
!5369 = !DILocation(line: 492, column: 27, scope: !5355)
!5370 = !DILocalVariable(name: "loopdiv", scope: !5355, file: !3, line: 493, type: !318)
!5371 = !DILocation(line: 493, column: 5, scope: !5355)
!5372 = !DILocalVariable(name: "prediv", scope: !5355, file: !3, line: 493, type: !318)
!5373 = !DILocation(line: 493, column: 14, scope: !5355)
!5374 = !DILocalVariable(name: "internal", scope: !5355, file: !3, line: 494, type: !331)
!5375 = !DILocation(line: 494, column: 6, scope: !5355)
!5376 = !DILocalVariable(name: "xtal", scope: !5355, file: !3, line: 494, type: !331)
!5377 = !DILocation(line: 494, column: 16, scope: !5355)
!5378 = !DILocation(line: 497, column: 11, scope: !5355)
!5379 = !DILocation(line: 497, column: 20, scope: !5355)
!5380 = !DILocation(line: 497, column: 9, scope: !5355)
!5381 = !DILocation(line: 498, column: 13, scope: !5355)
!5382 = !DILocation(line: 498, column: 22, scope: !5355)
!5383 = !DILocation(line: 498, column: 28, scope: !5355)
!5384 = !DILocation(line: 498, column: 12, scope: !5355)
!5385 = !DILocation(line: 498, column: 10, scope: !5355)
!5386 = !DILocation(line: 500, column: 7, scope: !5387)
!5387 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 500, column: 6)
!5388 = !DILocation(line: 500, column: 10, scope: !5387)
!5389 = !DILocation(line: 500, column: 19, scope: !5387)
!5390 = !DILocation(line: 500, column: 23, scope: !5387)
!5391 = !DILocation(line: 500, column: 27, scope: !5387)
!5392 = !DILocation(line: 500, column: 41, scope: !5387)
!5393 = !DILocation(line: 500, column: 38, scope: !5387)
!5394 = !DILocation(line: 500, column: 48, scope: !5387)
!5395 = !DILocation(line: 500, column: 51, scope: !5387)
!5396 = !DILocation(line: 500, column: 55, scope: !5387)
!5397 = !DILocation(line: 500, column: 68, scope: !5387)
!5398 = !DILocation(line: 500, column: 65, scope: !5387)
!5399 = !DILocation(line: 500, column: 6, scope: !5355)
!5400 = !DILocation(line: 501, column: 3, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5387, file: !3, line: 500, column: 78)
!5402 = !DILocation(line: 501, column: 3, scope: !5403)
!5403 = distinct !DILexicalBlock(scope: !5404, file: !3, line: 501, column: 3)
!5404 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 501, column: 3)
!5405 = !DILocation(line: 501, column: 3, scope: !5404)
!5406 = !DILocation(line: 502, column: 12, scope: !5401)
!5407 = !DILocation(line: 503, column: 33, scope: !5401)
!5408 = !DILocation(line: 503, column: 14, scope: !5401)
!5409 = !DILocation(line: 503, column: 12, scope: !5401)
!5410 = !DILocation(line: 504, column: 23, scope: !5401)
!5411 = !DILocation(line: 504, column: 36, scope: !5401)
!5412 = !DILocation(line: 504, column: 45, scope: !5401)
!5413 = !DILocation(line: 504, column: 3, scope: !5401)
!5414 = !DILocation(line: 506, column: 23, scope: !5401)
!5415 = !DILocation(line: 506, column: 36, scope: !5401)
!5416 = !DILocation(line: 506, column: 49, scope: !5401)
!5417 = !DILocation(line: 506, column: 53, scope: !5401)
!5418 = !DILocation(line: 506, column: 63, scope: !5401)
!5419 = !DILocation(line: 506, column: 71, scope: !5401)
!5420 = !DILocation(line: 506, column: 45, scope: !5401)
!5421 = !DILocation(line: 506, column: 80, scope: !5401)
!5422 = !DILocation(line: 506, column: 84, scope: !5401)
!5423 = !DILocation(line: 506, column: 95, scope: !5401)
!5424 = !DILocation(line: 506, column: 77, scope: !5401)
!5425 = !DILocation(line: 506, column: 3, scope: !5401)
!5426 = !DILocation(line: 509, column: 41, scope: !5401)
!5427 = !DILocation(line: 509, column: 14, scope: !5401)
!5428 = !DILocation(line: 509, column: 12, scope: !5401)
!5429 = !DILocation(line: 510, column: 11, scope: !5401)
!5430 = !DILocation(line: 510, column: 22, scope: !5401)
!5431 = !DILocation(line: 510, column: 20, scope: !5401)
!5432 = !DILocation(line: 510, column: 33, scope: !5401)
!5433 = !DILocation(line: 510, column: 31, scope: !5401)
!5434 = !DILocation(line: 510, column: 8, scope: !5401)
!5435 = !DILocation(line: 511, column: 22, scope: !5401)
!5436 = !DILocation(line: 511, column: 29, scope: !5401)
!5437 = !DILocation(line: 511, column: 33, scope: !5401)
!5438 = !DILocation(line: 511, column: 27, scope: !5401)
!5439 = !DILocation(line: 511, column: 19, scope: !5401)
!5440 = !DILocation(line: 511, column: 47, scope: !5401)
!5441 = !DILocation(line: 511, column: 51, scope: !5401)
!5442 = !DILocation(line: 511, column: 45, scope: !5401)
!5443 = !DILocation(line: 511, column: 12, scope: !5401)
!5444 = !DILocation(line: 512, column: 23, scope: !5401)
!5445 = !DILocation(line: 512, column: 42, scope: !5401)
!5446 = !DILocation(line: 512, column: 51, scope: !5401)
!5447 = !DILocation(line: 512, column: 58, scope: !5401)
!5448 = !DILocation(line: 512, column: 34, scope: !5401)
!5449 = !DILocation(line: 512, column: 3, scope: !5401)
!5450 = !DILocation(line: 513, column: 23, scope: !5401)
!5451 = !DILocation(line: 513, column: 41, scope: !5401)
!5452 = !DILocation(line: 513, column: 50, scope: !5401)
!5453 = !DILocation(line: 513, column: 34, scope: !5401)
!5454 = !DILocation(line: 513, column: 3, scope: !5401)
!5455 = !DILocation(line: 515, column: 23, scope: !5401)
!5456 = !DILocation(line: 515, column: 36, scope: !5401)
!5457 = !DILocation(line: 515, column: 45, scope: !5401)
!5458 = !DILocation(line: 515, column: 3, scope: !5401)
!5459 = !DILocation(line: 517, column: 3, scope: !5401)
!5460 = !DILocation(line: 517, column: 31, scope: !5401)
!5461 = !DILocation(line: 517, column: 12, scope: !5401)
!5462 = !DILocation(line: 517, column: 44, scope: !5401)
!5463 = !DILocation(line: 517, column: 51, scope: !5401)
!5464 = !DILocation(line: 517, column: 58, scope: !5401)
!5465 = !DILocation(line: 518, column: 4, scope: !5401)
!5466 = !DILocation(line: 518, column: 4, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 518, column: 4)
!5468 = distinct !DILexicalBlock(scope: !5401, file: !3, line: 518, column: 4)
!5469 = !DILocation(line: 518, column: 4, scope: !5468)
!5470 = distinct !{!5470, !5459, !5465}
!5471 = !DILocation(line: 520, column: 3, scope: !5401)
!5472 = !DILocation(line: 522, column: 2, scope: !5355)
!5473 = !DILocation(line: 523, column: 1, scope: !5355)
!5474 = distinct !DISubprogram(name: "dib7000p_ctrl_timf", scope: !3, file: !3, line: 954, type: !4674, scopeLine: 955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5475 = !DILocalVariable(name: "fe", arg: 1, scope: !5474, file: !3, line: 954, type: !464)
!5476 = !DILocation(line: 954, column: 52, scope: !5474)
!5477 = !DILocalVariable(name: "op", arg: 2, scope: !5474, file: !3, line: 954, type: !318)
!5478 = !DILocation(line: 954, column: 59, scope: !5474)
!5479 = !DILocalVariable(name: "timf", arg: 3, scope: !5474, file: !3, line: 954, type: !331)
!5480 = !DILocation(line: 954, column: 67, scope: !5474)
!5481 = !DILocalVariable(name: "state", scope: !5474, file: !3, line: 956, type: !4566)
!5482 = !DILocation(line: 956, column: 25, scope: !5474)
!5483 = !DILocation(line: 956, column: 33, scope: !5474)
!5484 = !DILocation(line: 956, column: 37, scope: !5474)
!5485 = !DILocation(line: 957, column: 10, scope: !5474)
!5486 = !DILocation(line: 957, column: 2, scope: !5474)
!5487 = !DILocation(line: 959, column: 17, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5474, file: !3, line: 957, column: 14)
!5489 = !DILocation(line: 959, column: 3, scope: !5488)
!5490 = !DILocation(line: 959, column: 10, scope: !5488)
!5491 = !DILocation(line: 959, column: 15, scope: !5488)
!5492 = !DILocation(line: 960, column: 3, scope: !5488)
!5493 = !DILocation(line: 962, column: 24, scope: !5488)
!5494 = !DILocation(line: 962, column: 3, scope: !5488)
!5495 = !DILocation(line: 963, column: 3, scope: !5488)
!5496 = !DILocation(line: 965, column: 3, scope: !5488)
!5497 = !DILocation(line: 967, column: 25, scope: !5474)
!5498 = !DILocation(line: 967, column: 32, scope: !5474)
!5499 = !DILocation(line: 967, column: 39, scope: !5474)
!5500 = !DILocation(line: 967, column: 2, scope: !5474)
!5501 = !DILocation(line: 968, column: 9, scope: !5474)
!5502 = !DILocation(line: 968, column: 16, scope: !5474)
!5503 = !DILocation(line: 968, column: 2, scope: !5474)
!5504 = distinct !DISubprogram(name: "dib7000p_get_agc_values", scope: !3, file: !3, line: 424, type: !4661, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5505 = !DILocalVariable(name: "fe", arg: 1, scope: !5504, file: !3, line: 424, type: !464)
!5506 = !DILocation(line: 424, column: 57, scope: !5504)
!5507 = !DILocalVariable(name: "agc_global", arg: 2, scope: !5504, file: !3, line: 425, type: !638)
!5508 = !DILocation(line: 425, column: 8, scope: !5504)
!5509 = !DILocalVariable(name: "agc1", arg: 3, scope: !5504, file: !3, line: 425, type: !638)
!5510 = !DILocation(line: 425, column: 25, scope: !5504)
!5511 = !DILocalVariable(name: "agc2", arg: 4, scope: !5504, file: !3, line: 425, type: !638)
!5512 = !DILocation(line: 425, column: 36, scope: !5504)
!5513 = !DILocalVariable(name: "wbd", arg: 5, scope: !5504, file: !3, line: 425, type: !638)
!5514 = !DILocation(line: 425, column: 47, scope: !5504)
!5515 = !DILocalVariable(name: "state", scope: !5504, file: !3, line: 427, type: !4566)
!5516 = !DILocation(line: 427, column: 25, scope: !5504)
!5517 = !DILocation(line: 427, column: 33, scope: !5504)
!5518 = !DILocation(line: 427, column: 37, scope: !5504)
!5519 = !DILocation(line: 429, column: 6, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 429, column: 6)
!5521 = !DILocation(line: 429, column: 17, scope: !5520)
!5522 = !DILocation(line: 429, column: 6, scope: !5504)
!5523 = !DILocation(line: 430, column: 36, scope: !5520)
!5524 = !DILocation(line: 430, column: 17, scope: !5520)
!5525 = !DILocation(line: 430, column: 4, scope: !5520)
!5526 = !DILocation(line: 430, column: 15, scope: !5520)
!5527 = !DILocation(line: 430, column: 3, scope: !5520)
!5528 = !DILocation(line: 431, column: 6, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 431, column: 6)
!5530 = !DILocation(line: 431, column: 11, scope: !5529)
!5531 = !DILocation(line: 431, column: 6, scope: !5504)
!5532 = !DILocation(line: 432, column: 30, scope: !5529)
!5533 = !DILocation(line: 432, column: 11, scope: !5529)
!5534 = !DILocation(line: 432, column: 4, scope: !5529)
!5535 = !DILocation(line: 432, column: 9, scope: !5529)
!5536 = !DILocation(line: 432, column: 3, scope: !5529)
!5537 = !DILocation(line: 433, column: 6, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 433, column: 6)
!5539 = !DILocation(line: 433, column: 11, scope: !5538)
!5540 = !DILocation(line: 433, column: 6, scope: !5504)
!5541 = !DILocation(line: 434, column: 30, scope: !5538)
!5542 = !DILocation(line: 434, column: 11, scope: !5538)
!5543 = !DILocation(line: 434, column: 4, scope: !5538)
!5544 = !DILocation(line: 434, column: 9, scope: !5538)
!5545 = !DILocation(line: 434, column: 3, scope: !5538)
!5546 = !DILocation(line: 435, column: 6, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 435, column: 6)
!5548 = !DILocation(line: 435, column: 10, scope: !5547)
!5549 = !DILocation(line: 435, column: 6, scope: !5504)
!5550 = !DILocation(line: 436, column: 29, scope: !5547)
!5551 = !DILocation(line: 436, column: 10, scope: !5547)
!5552 = !DILocation(line: 436, column: 4, scope: !5547)
!5553 = !DILocation(line: 436, column: 8, scope: !5547)
!5554 = !DILocation(line: 436, column: 3, scope: !5547)
!5555 = !DILocation(line: 438, column: 2, scope: !5504)
!5556 = distinct !DISubprogram(name: "dib7000p_set_wbd_ref", scope: !3, file: !3, line: 415, type: !4480, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5557 = !DILocalVariable(name: "demod", arg: 1, scope: !5556, file: !3, line: 415, type: !464)
!5558 = !DILocation(line: 415, column: 54, scope: !5556)
!5559 = !DILocalVariable(name: "value", arg: 2, scope: !5556, file: !3, line: 415, type: !328)
!5560 = !DILocation(line: 415, column: 65, scope: !5556)
!5561 = !DILocalVariable(name: "state", scope: !5556, file: !3, line: 417, type: !4566)
!5562 = !DILocation(line: 417, column: 25, scope: !5556)
!5563 = !DILocation(line: 417, column: 33, scope: !5556)
!5564 = !DILocation(line: 417, column: 40, scope: !5556)
!5565 = !DILocation(line: 418, column: 6, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 418, column: 6)
!5567 = !DILocation(line: 418, column: 12, scope: !5566)
!5568 = !DILocation(line: 418, column: 6, scope: !5556)
!5569 = !DILocation(line: 419, column: 9, scope: !5566)
!5570 = !DILocation(line: 419, column: 3, scope: !5566)
!5571 = !DILocation(line: 420, column: 19, scope: !5556)
!5572 = !DILocation(line: 420, column: 2, scope: !5556)
!5573 = !DILocation(line: 420, column: 9, scope: !5556)
!5574 = !DILocation(line: 420, column: 17, scope: !5556)
!5575 = !DILocation(line: 421, column: 29, scope: !5556)
!5576 = !DILocation(line: 421, column: 61, scope: !5556)
!5577 = !DILocation(line: 421, column: 42, scope: !5556)
!5578 = !DILocation(line: 421, column: 73, scope: !5556)
!5579 = !DILocation(line: 421, column: 85, scope: !5556)
!5580 = !DILocation(line: 421, column: 83, scope: !5556)
!5581 = !DILocation(line: 421, column: 41, scope: !5556)
!5582 = !DILocation(line: 421, column: 9, scope: !5556)
!5583 = !DILocation(line: 421, column: 2, scope: !5556)
!5584 = distinct !DISubprogram(name: "dib7000p_read_word", scope: !3, file: !3, line: 100, type: !5585, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!328, !4566, !328}
!5587 = !DILocalVariable(name: "state", arg: 1, scope: !5584, file: !3, line: 100, type: !4566)
!5588 = !DILocation(line: 100, column: 54, scope: !5584)
!5589 = !DILocalVariable(name: "reg", arg: 2, scope: !5584, file: !3, line: 100, type: !328)
!5590 = !DILocation(line: 100, column: 65, scope: !5584)
!5591 = !DILocalVariable(name: "ret", scope: !5584, file: !3, line: 102, type: !328)
!5592 = !DILocation(line: 102, column: 6, scope: !5584)
!5593 = !DILocation(line: 104, column: 32, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 104, column: 6)
!5595 = !DILocation(line: 104, column: 39, scope: !5594)
!5596 = !DILocation(line: 104, column: 6, scope: !5594)
!5597 = !DILocation(line: 104, column: 56, scope: !5594)
!5598 = !DILocation(line: 104, column: 6, scope: !5584)
!5599 = !DILocation(line: 105, column: 3, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 104, column: 61)
!5601 = !DILocation(line: 105, column: 3, scope: !5602)
!5602 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 105, column: 3)
!5603 = distinct !DILexicalBlock(scope: !5600, file: !3, line: 105, column: 3)
!5604 = !DILocation(line: 105, column: 3, scope: !5603)
!5605 = !DILocation(line: 106, column: 3, scope: !5600)
!5606 = !DILocation(line: 109, column: 31, scope: !5584)
!5607 = !DILocation(line: 109, column: 35, scope: !5584)
!5608 = !DILocation(line: 109, column: 2, scope: !5584)
!5609 = !DILocation(line: 109, column: 9, scope: !5584)
!5610 = !DILocation(line: 109, column: 29, scope: !5584)
!5611 = !DILocation(line: 110, column: 31, scope: !5584)
!5612 = !DILocation(line: 110, column: 35, scope: !5584)
!5613 = !DILocation(line: 110, column: 2, scope: !5584)
!5614 = !DILocation(line: 110, column: 9, scope: !5584)
!5615 = !DILocation(line: 110, column: 29, scope: !5584)
!5616 = !DILocation(line: 112, column: 9, scope: !5584)
!5617 = !DILocation(line: 112, column: 16, scope: !5584)
!5618 = !DILocation(line: 112, column: 2, scope: !5584)
!5619 = !DILocation(line: 113, column: 23, scope: !5584)
!5620 = !DILocation(line: 113, column: 30, scope: !5584)
!5621 = !DILocation(line: 113, column: 39, scope: !5584)
!5622 = !DILocation(line: 113, column: 2, scope: !5584)
!5623 = !DILocation(line: 113, column: 9, scope: !5584)
!5624 = !DILocation(line: 113, column: 16, scope: !5584)
!5625 = !DILocation(line: 113, column: 21, scope: !5584)
!5626 = !DILocation(line: 114, column: 2, scope: !5584)
!5627 = !DILocation(line: 114, column: 9, scope: !5584)
!5628 = !DILocation(line: 114, column: 16, scope: !5584)
!5629 = !DILocation(line: 114, column: 22, scope: !5584)
!5630 = !DILocation(line: 115, column: 22, scope: !5584)
!5631 = !DILocation(line: 115, column: 29, scope: !5584)
!5632 = !DILocation(line: 115, column: 2, scope: !5584)
!5633 = !DILocation(line: 115, column: 9, scope: !5584)
!5634 = !DILocation(line: 115, column: 16, scope: !5584)
!5635 = !DILocation(line: 115, column: 20, scope: !5584)
!5636 = !DILocation(line: 116, column: 2, scope: !5584)
!5637 = !DILocation(line: 116, column: 9, scope: !5584)
!5638 = !DILocation(line: 116, column: 16, scope: !5584)
!5639 = !DILocation(line: 116, column: 20, scope: !5584)
!5640 = !DILocation(line: 117, column: 23, scope: !5584)
!5641 = !DILocation(line: 117, column: 30, scope: !5584)
!5642 = !DILocation(line: 117, column: 39, scope: !5584)
!5643 = !DILocation(line: 117, column: 2, scope: !5584)
!5644 = !DILocation(line: 117, column: 9, scope: !5584)
!5645 = !DILocation(line: 117, column: 16, scope: !5584)
!5646 = !DILocation(line: 117, column: 21, scope: !5584)
!5647 = !DILocation(line: 118, column: 2, scope: !5584)
!5648 = !DILocation(line: 118, column: 9, scope: !5584)
!5649 = !DILocation(line: 118, column: 16, scope: !5584)
!5650 = !DILocation(line: 118, column: 22, scope: !5584)
!5651 = !DILocation(line: 119, column: 22, scope: !5584)
!5652 = !DILocation(line: 119, column: 29, scope: !5584)
!5653 = !DILocation(line: 119, column: 2, scope: !5584)
!5654 = !DILocation(line: 119, column: 9, scope: !5584)
!5655 = !DILocation(line: 119, column: 16, scope: !5584)
!5656 = !DILocation(line: 119, column: 20, scope: !5584)
!5657 = !DILocation(line: 120, column: 2, scope: !5584)
!5658 = !DILocation(line: 120, column: 9, scope: !5584)
!5659 = !DILocation(line: 120, column: 16, scope: !5584)
!5660 = !DILocation(line: 120, column: 20, scope: !5584)
!5661 = !DILocation(line: 122, column: 19, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5584, file: !3, line: 122, column: 6)
!5663 = !DILocation(line: 122, column: 26, scope: !5662)
!5664 = !DILocation(line: 122, column: 36, scope: !5662)
!5665 = !DILocation(line: 122, column: 43, scope: !5662)
!5666 = !DILocation(line: 122, column: 6, scope: !5662)
!5667 = !DILocation(line: 122, column: 51, scope: !5662)
!5668 = !DILocation(line: 122, column: 6, scope: !5584)
!5669 = !DILocation(line: 123, column: 3, scope: !5662)
!5670 = !DILocation(line: 123, column: 3, scope: !5671)
!5671 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 123, column: 3)
!5672 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 123, column: 3)
!5673 = !DILocation(line: 123, column: 3, scope: !5672)
!5674 = !DILocation(line: 125, column: 9, scope: !5584)
!5675 = !DILocation(line: 125, column: 16, scope: !5584)
!5676 = !DILocation(line: 125, column: 35, scope: !5584)
!5677 = !DILocation(line: 125, column: 43, scope: !5584)
!5678 = !DILocation(line: 125, column: 50, scope: !5584)
!5679 = !DILocation(line: 125, column: 41, scope: !5584)
!5680 = !DILocation(line: 125, column: 8, scope: !5584)
!5681 = !DILocation(line: 125, column: 6, scope: !5584)
!5682 = !DILocation(line: 126, column: 16, scope: !5584)
!5683 = !DILocation(line: 126, column: 23, scope: !5584)
!5684 = !DILocation(line: 126, column: 2, scope: !5584)
!5685 = !DILocation(line: 127, column: 9, scope: !5584)
!5686 = !DILocation(line: 127, column: 2, scope: !5584)
!5687 = !DILocation(line: 128, column: 1, scope: !5584)
!5688 = distinct !DISubprogram(name: "dib7000p_write_word", scope: !3, file: !3, line: 130, type: !5689, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5689 = !DISubroutineType(types: !5690)
!5690 = !{!327, !4566, !328, !328}
!5691 = !DILocalVariable(name: "state", arg: 1, scope: !5688, file: !3, line: 130, type: !4566)
!5692 = !DILocation(line: 130, column: 55, scope: !5688)
!5693 = !DILocalVariable(name: "reg", arg: 2, scope: !5688, file: !3, line: 130, type: !328)
!5694 = !DILocation(line: 130, column: 66, scope: !5688)
!5695 = !DILocalVariable(name: "val", arg: 3, scope: !5688, file: !3, line: 130, type: !328)
!5696 = !DILocation(line: 130, column: 75, scope: !5688)
!5697 = !DILocalVariable(name: "ret", scope: !5688, file: !3, line: 132, type: !327)
!5698 = !DILocation(line: 132, column: 6, scope: !5688)
!5699 = !DILocation(line: 134, column: 32, scope: !5700)
!5700 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 134, column: 6)
!5701 = !DILocation(line: 134, column: 39, scope: !5700)
!5702 = !DILocation(line: 134, column: 6, scope: !5700)
!5703 = !DILocation(line: 134, column: 56, scope: !5700)
!5704 = !DILocation(line: 134, column: 6, scope: !5688)
!5705 = !DILocation(line: 135, column: 3, scope: !5706)
!5706 = distinct !DILexicalBlock(scope: !5700, file: !3, line: 134, column: 61)
!5707 = !DILocation(line: 135, column: 3, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 135, column: 3)
!5709 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 135, column: 3)
!5710 = !DILocation(line: 135, column: 3, scope: !5709)
!5711 = !DILocation(line: 136, column: 3, scope: !5706)
!5712 = !DILocation(line: 139, column: 32, scope: !5688)
!5713 = !DILocation(line: 139, column: 36, scope: !5688)
!5714 = !DILocation(line: 139, column: 42, scope: !5688)
!5715 = !DILocation(line: 139, column: 31, scope: !5688)
!5716 = !DILocation(line: 139, column: 2, scope: !5688)
!5717 = !DILocation(line: 139, column: 9, scope: !5688)
!5718 = !DILocation(line: 139, column: 29, scope: !5688)
!5719 = !DILocation(line: 140, column: 31, scope: !5688)
!5720 = !DILocation(line: 140, column: 35, scope: !5688)
!5721 = !DILocation(line: 140, column: 2, scope: !5688)
!5722 = !DILocation(line: 140, column: 9, scope: !5688)
!5723 = !DILocation(line: 140, column: 29, scope: !5688)
!5724 = !DILocation(line: 141, column: 32, scope: !5688)
!5725 = !DILocation(line: 141, column: 36, scope: !5688)
!5726 = !DILocation(line: 141, column: 42, scope: !5688)
!5727 = !DILocation(line: 141, column: 31, scope: !5688)
!5728 = !DILocation(line: 141, column: 2, scope: !5688)
!5729 = !DILocation(line: 141, column: 9, scope: !5688)
!5730 = !DILocation(line: 141, column: 29, scope: !5688)
!5731 = !DILocation(line: 142, column: 31, scope: !5688)
!5732 = !DILocation(line: 142, column: 35, scope: !5688)
!5733 = !DILocation(line: 142, column: 2, scope: !5688)
!5734 = !DILocation(line: 142, column: 9, scope: !5688)
!5735 = !DILocation(line: 142, column: 29, scope: !5688)
!5736 = !DILocation(line: 144, column: 10, scope: !5688)
!5737 = !DILocation(line: 144, column: 17, scope: !5688)
!5738 = !DILocation(line: 144, column: 2, scope: !5688)
!5739 = !DILocation(line: 145, column: 23, scope: !5688)
!5740 = !DILocation(line: 145, column: 30, scope: !5688)
!5741 = !DILocation(line: 145, column: 39, scope: !5688)
!5742 = !DILocation(line: 145, column: 2, scope: !5688)
!5743 = !DILocation(line: 145, column: 9, scope: !5688)
!5744 = !DILocation(line: 145, column: 16, scope: !5688)
!5745 = !DILocation(line: 145, column: 21, scope: !5688)
!5746 = !DILocation(line: 146, column: 2, scope: !5688)
!5747 = !DILocation(line: 146, column: 9, scope: !5688)
!5748 = !DILocation(line: 146, column: 16, scope: !5688)
!5749 = !DILocation(line: 146, column: 22, scope: !5688)
!5750 = !DILocation(line: 147, column: 22, scope: !5688)
!5751 = !DILocation(line: 147, column: 29, scope: !5688)
!5752 = !DILocation(line: 147, column: 2, scope: !5688)
!5753 = !DILocation(line: 147, column: 9, scope: !5688)
!5754 = !DILocation(line: 147, column: 16, scope: !5688)
!5755 = !DILocation(line: 147, column: 20, scope: !5688)
!5756 = !DILocation(line: 148, column: 2, scope: !5688)
!5757 = !DILocation(line: 148, column: 9, scope: !5688)
!5758 = !DILocation(line: 148, column: 16, scope: !5688)
!5759 = !DILocation(line: 148, column: 20, scope: !5688)
!5760 = !DILocation(line: 150, column: 22, scope: !5688)
!5761 = !DILocation(line: 150, column: 29, scope: !5688)
!5762 = !DILocation(line: 150, column: 39, scope: !5688)
!5763 = !DILocation(line: 150, column: 46, scope: !5688)
!5764 = !DILocation(line: 150, column: 9, scope: !5688)
!5765 = !DILocation(line: 150, column: 54, scope: !5688)
!5766 = !DILocation(line: 150, column: 6, scope: !5688)
!5767 = !DILocation(line: 152, column: 16, scope: !5688)
!5768 = !DILocation(line: 152, column: 23, scope: !5688)
!5769 = !DILocation(line: 152, column: 2, scope: !5688)
!5770 = !DILocation(line: 153, column: 9, scope: !5688)
!5771 = !DILocation(line: 153, column: 2, scope: !5688)
!5772 = !DILocation(line: 154, column: 1, scope: !5688)
!5773 = distinct !DISubprogram(name: "dib7000p_get_adc_power", scope: !3, file: !3, line: 2147, type: !5774, scopeLine: 2148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5774 = !DISubroutineType(types: !5775)
!5775 = !{!325, !464}
!5776 = !DILocalVariable(name: "fe", arg: 1, scope: !5773, file: !3, line: 2147, type: !464)
!5777 = !DILocation(line: 2147, column: 56, scope: !5773)
!5778 = !DILocalVariable(name: "state", scope: !5773, file: !3, line: 2149, type: !4566)
!5779 = !DILocation(line: 2149, column: 25, scope: !5773)
!5780 = !DILocation(line: 2149, column: 33, scope: !5773)
!5781 = !DILocation(line: 2149, column: 37, scope: !5773)
!5782 = !DILocalVariable(name: "tmp_val", scope: !5773, file: !3, line: 2150, type: !331)
!5783 = !DILocation(line: 2150, column: 6, scope: !5773)
!5784 = !DILocalVariable(name: "exp", scope: !5773, file: !3, line: 2150, type: !331)
!5785 = !DILocation(line: 2150, column: 19, scope: !5773)
!5786 = !DILocalVariable(name: "mant", scope: !5773, file: !3, line: 2150, type: !331)
!5787 = !DILocation(line: 2150, column: 28, scope: !5773)
!5788 = !DILocalVariable(name: "pow_i", scope: !5773, file: !3, line: 2151, type: !325)
!5789 = !DILocation(line: 2151, column: 6, scope: !5773)
!5790 = !DILocalVariable(name: "buf", scope: !5773, file: !3, line: 2152, type: !5791)
!5791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 32, elements: !2020)
!5792 = !DILocation(line: 2152, column: 6, scope: !5773)
!5793 = !DILocalVariable(name: "ix", scope: !5773, file: !3, line: 2153, type: !318)
!5794 = !DILocation(line: 2153, column: 5, scope: !5773)
!5795 = !DILocation(line: 2155, column: 30, scope: !5773)
!5796 = !DILocation(line: 2155, column: 11, scope: !5773)
!5797 = !DILocation(line: 2155, column: 2, scope: !5773)
!5798 = !DILocation(line: 2155, column: 9, scope: !5773)
!5799 = !DILocation(line: 2156, column: 30, scope: !5773)
!5800 = !DILocation(line: 2156, column: 11, scope: !5773)
!5801 = !DILocation(line: 2156, column: 2, scope: !5773)
!5802 = !DILocation(line: 2156, column: 9, scope: !5773)
!5803 = !DILocation(line: 2157, column: 11, scope: !5773)
!5804 = !DILocation(line: 2157, column: 18, scope: !5773)
!5805 = !DILocation(line: 2157, column: 27, scope: !5773)
!5806 = !DILocation(line: 2157, column: 25, scope: !5773)
!5807 = !DILocation(line: 2157, column: 8, scope: !5773)
!5808 = !DILocation(line: 2158, column: 2, scope: !5773)
!5809 = !DILocation(line: 2158, column: 2, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5811, file: !3, line: 2158, column: 2)
!5811 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 2158, column: 2)
!5812 = !DILocation(line: 2158, column: 2, scope: !5811)
!5813 = !DILocation(line: 2160, column: 12, scope: !5773)
!5814 = !DILocation(line: 2160, column: 10, scope: !5773)
!5815 = !DILocation(line: 2161, column: 2, scope: !5773)
!5816 = !DILocation(line: 2161, column: 17, scope: !5773)
!5817 = !DILocation(line: 2162, column: 6, scope: !5773)
!5818 = distinct !{!5818, !5815, !5817}
!5819 = !DILocation(line: 2164, column: 10, scope: !5773)
!5820 = !DILocation(line: 2164, column: 16, scope: !5773)
!5821 = !DILocation(line: 2164, column: 31, scope: !5773)
!5822 = !DILocation(line: 2164, column: 28, scope: !5773)
!5823 = !DILocation(line: 2164, column: 23, scope: !5773)
!5824 = !DILocation(line: 2164, column: 7, scope: !5773)
!5825 = !DILocation(line: 2165, column: 2, scope: !5773)
!5826 = !DILocation(line: 2165, column: 2, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 2165, column: 2)
!5828 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 2165, column: 2)
!5829 = !DILocation(line: 2165, column: 2, scope: !5828)
!5830 = !DILocation(line: 2167, column: 14, scope: !5773)
!5831 = !DILocation(line: 2167, column: 19, scope: !5773)
!5832 = !DILocation(line: 2167, column: 27, scope: !5773)
!5833 = !DILocation(line: 2167, column: 7, scope: !5773)
!5834 = !DILocation(line: 2167, column: 5, scope: !5773)
!5835 = !DILocation(line: 2168, column: 2, scope: !5773)
!5836 = !DILocation(line: 2168, column: 2, scope: !5837)
!5837 = distinct !DILexicalBlock(scope: !5838, file: !3, line: 2168, column: 2)
!5838 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 2168, column: 2)
!5839 = !DILocation(line: 2168, column: 2, scope: !5838)
!5840 = !DILocation(line: 2170, column: 27, scope: !5773)
!5841 = !DILocation(line: 2170, column: 11, scope: !5773)
!5842 = !DILocation(line: 2170, column: 40, scope: !5773)
!5843 = !DILocation(line: 2170, column: 44, scope: !5773)
!5844 = !DILocation(line: 2170, column: 37, scope: !5773)
!5845 = !DILocation(line: 2170, column: 31, scope: !5773)
!5846 = !DILocation(line: 2170, column: 50, scope: !5773)
!5847 = !DILocation(line: 2170, column: 8, scope: !5773)
!5848 = !DILocation(line: 2171, column: 11, scope: !5773)
!5849 = !DILocation(line: 2171, column: 17, scope: !5773)
!5850 = !DILocation(line: 2171, column: 23, scope: !5773)
!5851 = !DILocation(line: 2171, column: 8, scope: !5773)
!5852 = !DILocation(line: 2172, column: 2, scope: !5773)
!5853 = !DILocation(line: 2172, column: 2, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !3, line: 2172, column: 2)
!5855 = distinct !DILexicalBlock(scope: !5773, file: !3, line: 2172, column: 2)
!5856 = !DILocation(line: 2172, column: 2, scope: !5855)
!5857 = !DILocation(line: 2174, column: 9, scope: !5773)
!5858 = !DILocation(line: 2174, column: 2, scope: !5773)
!5859 = distinct !DISubprogram(name: "kzalloc", scope: !291, file: !291, line: 662, type: !5860, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{!317, !883, !323}
!5862 = !DILocalVariable(name: "s", arg: 1, scope: !5863, file: !291, line: 445, type: !1475)
!5863 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !291, file: !291, line: 445, type: !5864, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5864 = !DISubroutineType(types: !5865)
!5865 = !{!317, !1475, !323, !883}
!5866 = !DILocation(line: 445, column: 72, scope: !5863, inlinedAt: !5867)
!5867 = distinct !DILocation(line: 552, column: 10, scope: !5868, inlinedAt: !5871)
!5868 = distinct !DILexicalBlock(scope: !5869, file: !291, line: 540, column: 34)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !291, line: 540, column: 6)
!5870 = distinct !DISubprogram(name: "kmalloc", scope: !291, file: !291, line: 538, type: !5860, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5871 = distinct !DILocation(line: 664, column: 9, scope: !5859)
!5872 = !DILocalVariable(name: "flags", arg: 2, scope: !5863, file: !291, line: 446, type: !323)
!5873 = !DILocation(line: 446, column: 9, scope: !5863, inlinedAt: !5867)
!5874 = !DILocalVariable(name: "size", arg: 3, scope: !5863, file: !291, line: 446, type: !883)
!5875 = !DILocation(line: 446, column: 23, scope: !5863, inlinedAt: !5867)
!5876 = !DILocalVariable(name: "ret", scope: !5863, file: !291, line: 448, type: !317)
!5877 = !DILocation(line: 448, column: 8, scope: !5863, inlinedAt: !5867)
!5878 = !DILocalVariable(name: "flags", arg: 1, scope: !5879, file: !291, line: 318, type: !323)
!5879 = distinct !DISubprogram(name: "kmalloc_type", scope: !291, file: !291, line: 318, type: !5880, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5880 = !DISubroutineType(types: !5881)
!5881 = !{!290, !323}
!5882 = !DILocation(line: 318, column: 67, scope: !5879, inlinedAt: !5883)
!5883 = distinct !DILocation(line: 553, column: 20, scope: !5868, inlinedAt: !5871)
!5884 = !DILocalVariable(name: "size", arg: 1, scope: !5885, file: !291, line: 346, type: !883)
!5885 = distinct !DISubprogram(name: "kmalloc_index", scope: !291, file: !291, line: 346, type: !5886, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{!7, !883}
!5888 = !DILocation(line: 346, column: 58, scope: !5885, inlinedAt: !5889)
!5889 = distinct !DILocation(line: 547, column: 11, scope: !5868, inlinedAt: !5871)
!5890 = !DILocalVariable(name: "size", arg: 1, scope: !5891, file: !291, line: 472, type: !883)
!5891 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !291, file: !291, line: 472, type: !5892, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5892 = !DISubroutineType(types: !5893)
!5893 = !{!317, !883, !323, !7}
!5894 = !DILocation(line: 472, column: 28, scope: !5891, inlinedAt: !5895)
!5895 = distinct !DILocation(line: 481, column: 9, scope: !5896, inlinedAt: !5897)
!5896 = distinct !DISubprogram(name: "kmalloc_large", scope: !291, file: !291, line: 478, type: !5860, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!5897 = distinct !DILocation(line: 545, column: 11, scope: !5898, inlinedAt: !5871)
!5898 = distinct !DILexicalBlock(scope: !5868, file: !291, line: 544, column: 7)
!5899 = !DILocalVariable(name: "flags", arg: 2, scope: !5891, file: !291, line: 472, type: !323)
!5900 = !DILocation(line: 472, column: 40, scope: !5891, inlinedAt: !5895)
!5901 = !DILocalVariable(name: "order", arg: 3, scope: !5891, file: !291, line: 472, type: !7)
!5902 = !DILocation(line: 472, column: 60, scope: !5891, inlinedAt: !5895)
!5903 = !DILocalVariable(name: "size", arg: 1, scope: !5896, file: !291, line: 478, type: !883)
!5904 = !DILocation(line: 478, column: 51, scope: !5896, inlinedAt: !5897)
!5905 = !DILocalVariable(name: "flags", arg: 2, scope: !5896, file: !291, line: 478, type: !323)
!5906 = !DILocation(line: 478, column: 63, scope: !5896, inlinedAt: !5897)
!5907 = !DILocalVariable(name: "order", scope: !5896, file: !291, line: 480, type: !7)
!5908 = !DILocation(line: 480, column: 15, scope: !5896, inlinedAt: !5897)
!5909 = !DILocalVariable(name: "size", arg: 1, scope: !5870, file: !291, line: 538, type: !883)
!5910 = !DILocation(line: 538, column: 45, scope: !5870, inlinedAt: !5871)
!5911 = !DILocalVariable(name: "flags", arg: 2, scope: !5870, file: !291, line: 538, type: !323)
!5912 = !DILocation(line: 538, column: 57, scope: !5870, inlinedAt: !5871)
!5913 = !DILocalVariable(name: "index", scope: !5868, file: !291, line: 542, type: !7)
!5914 = !DILocation(line: 542, column: 16, scope: !5868, inlinedAt: !5871)
!5915 = !DILocalVariable(name: "size", arg: 1, scope: !5859, file: !291, line: 662, type: !883)
!5916 = !DILocation(line: 662, column: 36, scope: !5859)
!5917 = !DILocalVariable(name: "flags", arg: 2, scope: !5859, file: !291, line: 662, type: !323)
!5918 = !DILocation(line: 662, column: 48, scope: !5859)
!5919 = !DILocation(line: 664, column: 17, scope: !5859)
!5920 = !DILocation(line: 664, column: 23, scope: !5859)
!5921 = !DILocation(line: 664, column: 29, scope: !5859)
!5922 = !DILocation(line: 540, column: 27, scope: !5869, inlinedAt: !5871)
!5923 = !DILocation(line: 540, column: 6, scope: !5869, inlinedAt: !5871)
!5924 = !DILocation(line: 540, column: 6, scope: !5870, inlinedAt: !5871)
!5925 = !DILocation(line: 544, column: 7, scope: !5898, inlinedAt: !5871)
!5926 = !DILocation(line: 544, column: 12, scope: !5898, inlinedAt: !5871)
!5927 = !DILocation(line: 544, column: 7, scope: !5868, inlinedAt: !5871)
!5928 = !DILocation(line: 545, column: 25, scope: !5898, inlinedAt: !5871)
!5929 = !DILocation(line: 545, column: 31, scope: !5898, inlinedAt: !5871)
!5930 = !DILocation(line: 480, column: 33, scope: !5896, inlinedAt: !5897)
!5931 = !DILocation(line: 480, column: 23, scope: !5896, inlinedAt: !5897)
!5932 = !DILocation(line: 481, column: 29, scope: !5896, inlinedAt: !5897)
!5933 = !DILocation(line: 481, column: 35, scope: !5896, inlinedAt: !5897)
!5934 = !DILocation(line: 481, column: 42, scope: !5896, inlinedAt: !5897)
!5935 = !DILocation(line: 474, column: 23, scope: !5891, inlinedAt: !5895)
!5936 = !DILocation(line: 474, column: 29, scope: !5891, inlinedAt: !5895)
!5937 = !DILocation(line: 474, column: 36, scope: !5891, inlinedAt: !5895)
!5938 = !DILocation(line: 474, column: 9, scope: !5891, inlinedAt: !5895)
!5939 = !DILocation(line: 545, column: 4, scope: !5898, inlinedAt: !5871)
!5940 = !DILocation(line: 547, column: 25, scope: !5868, inlinedAt: !5871)
!5941 = !DILocation(line: 348, column: 7, scope: !5942, inlinedAt: !5889)
!5942 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 348, column: 6)
!5943 = !DILocation(line: 348, column: 6, scope: !5885, inlinedAt: !5889)
!5944 = !DILocation(line: 349, column: 3, scope: !5942, inlinedAt: !5889)
!5945 = !DILocation(line: 351, column: 6, scope: !5946, inlinedAt: !5889)
!5946 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 351, column: 6)
!5947 = !DILocation(line: 351, column: 11, scope: !5946, inlinedAt: !5889)
!5948 = !DILocation(line: 351, column: 6, scope: !5885, inlinedAt: !5889)
!5949 = !DILocation(line: 352, column: 3, scope: !5946, inlinedAt: !5889)
!5950 = !DILocation(line: 354, column: 32, scope: !5951, inlinedAt: !5889)
!5951 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 354, column: 6)
!5952 = !DILocation(line: 354, column: 37, scope: !5951, inlinedAt: !5889)
!5953 = !DILocation(line: 354, column: 42, scope: !5951, inlinedAt: !5889)
!5954 = !DILocation(line: 354, column: 45, scope: !5951, inlinedAt: !5889)
!5955 = !DILocation(line: 354, column: 50, scope: !5951, inlinedAt: !5889)
!5956 = !DILocation(line: 354, column: 6, scope: !5885, inlinedAt: !5889)
!5957 = !DILocation(line: 355, column: 3, scope: !5951, inlinedAt: !5889)
!5958 = !DILocation(line: 356, column: 32, scope: !5959, inlinedAt: !5889)
!5959 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 356, column: 6)
!5960 = !DILocation(line: 356, column: 37, scope: !5959, inlinedAt: !5889)
!5961 = !DILocation(line: 356, column: 43, scope: !5959, inlinedAt: !5889)
!5962 = !DILocation(line: 356, column: 46, scope: !5959, inlinedAt: !5889)
!5963 = !DILocation(line: 356, column: 51, scope: !5959, inlinedAt: !5889)
!5964 = !DILocation(line: 356, column: 6, scope: !5885, inlinedAt: !5889)
!5965 = !DILocation(line: 357, column: 3, scope: !5959, inlinedAt: !5889)
!5966 = !DILocation(line: 358, column: 6, scope: !5967, inlinedAt: !5889)
!5967 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 358, column: 6)
!5968 = !DILocation(line: 358, column: 11, scope: !5967, inlinedAt: !5889)
!5969 = !DILocation(line: 358, column: 6, scope: !5885, inlinedAt: !5889)
!5970 = !DILocation(line: 358, column: 26, scope: !5967, inlinedAt: !5889)
!5971 = !DILocation(line: 359, column: 6, scope: !5972, inlinedAt: !5889)
!5972 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 359, column: 6)
!5973 = !DILocation(line: 359, column: 11, scope: !5972, inlinedAt: !5889)
!5974 = !DILocation(line: 359, column: 6, scope: !5885, inlinedAt: !5889)
!5975 = !DILocation(line: 359, column: 26, scope: !5972, inlinedAt: !5889)
!5976 = !DILocation(line: 360, column: 6, scope: !5977, inlinedAt: !5889)
!5977 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 360, column: 6)
!5978 = !DILocation(line: 360, column: 11, scope: !5977, inlinedAt: !5889)
!5979 = !DILocation(line: 360, column: 6, scope: !5885, inlinedAt: !5889)
!5980 = !DILocation(line: 360, column: 26, scope: !5977, inlinedAt: !5889)
!5981 = !DILocation(line: 361, column: 6, scope: !5982, inlinedAt: !5889)
!5982 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 361, column: 6)
!5983 = !DILocation(line: 361, column: 11, scope: !5982, inlinedAt: !5889)
!5984 = !DILocation(line: 361, column: 6, scope: !5885, inlinedAt: !5889)
!5985 = !DILocation(line: 361, column: 26, scope: !5982, inlinedAt: !5889)
!5986 = !DILocation(line: 362, column: 6, scope: !5987, inlinedAt: !5889)
!5987 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 362, column: 6)
!5988 = !DILocation(line: 362, column: 11, scope: !5987, inlinedAt: !5889)
!5989 = !DILocation(line: 362, column: 6, scope: !5885, inlinedAt: !5889)
!5990 = !DILocation(line: 362, column: 26, scope: !5987, inlinedAt: !5889)
!5991 = !DILocation(line: 363, column: 6, scope: !5992, inlinedAt: !5889)
!5992 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 363, column: 6)
!5993 = !DILocation(line: 363, column: 11, scope: !5992, inlinedAt: !5889)
!5994 = !DILocation(line: 363, column: 6, scope: !5885, inlinedAt: !5889)
!5995 = !DILocation(line: 363, column: 26, scope: !5992, inlinedAt: !5889)
!5996 = !DILocation(line: 364, column: 6, scope: !5997, inlinedAt: !5889)
!5997 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 364, column: 6)
!5998 = !DILocation(line: 364, column: 11, scope: !5997, inlinedAt: !5889)
!5999 = !DILocation(line: 364, column: 6, scope: !5885, inlinedAt: !5889)
!6000 = !DILocation(line: 364, column: 26, scope: !5997, inlinedAt: !5889)
!6001 = !DILocation(line: 365, column: 6, scope: !6002, inlinedAt: !5889)
!6002 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 365, column: 6)
!6003 = !DILocation(line: 365, column: 11, scope: !6002, inlinedAt: !5889)
!6004 = !DILocation(line: 365, column: 6, scope: !5885, inlinedAt: !5889)
!6005 = !DILocation(line: 365, column: 26, scope: !6002, inlinedAt: !5889)
!6006 = !DILocation(line: 366, column: 6, scope: !6007, inlinedAt: !5889)
!6007 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 366, column: 6)
!6008 = !DILocation(line: 366, column: 11, scope: !6007, inlinedAt: !5889)
!6009 = !DILocation(line: 366, column: 6, scope: !5885, inlinedAt: !5889)
!6010 = !DILocation(line: 366, column: 26, scope: !6007, inlinedAt: !5889)
!6011 = !DILocation(line: 367, column: 6, scope: !6012, inlinedAt: !5889)
!6012 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 367, column: 6)
!6013 = !DILocation(line: 367, column: 11, scope: !6012, inlinedAt: !5889)
!6014 = !DILocation(line: 367, column: 6, scope: !5885, inlinedAt: !5889)
!6015 = !DILocation(line: 367, column: 26, scope: !6012, inlinedAt: !5889)
!6016 = !DILocation(line: 368, column: 6, scope: !6017, inlinedAt: !5889)
!6017 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 368, column: 6)
!6018 = !DILocation(line: 368, column: 11, scope: !6017, inlinedAt: !5889)
!6019 = !DILocation(line: 368, column: 6, scope: !5885, inlinedAt: !5889)
!6020 = !DILocation(line: 368, column: 26, scope: !6017, inlinedAt: !5889)
!6021 = !DILocation(line: 369, column: 6, scope: !6022, inlinedAt: !5889)
!6022 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 369, column: 6)
!6023 = !DILocation(line: 369, column: 11, scope: !6022, inlinedAt: !5889)
!6024 = !DILocation(line: 369, column: 6, scope: !5885, inlinedAt: !5889)
!6025 = !DILocation(line: 369, column: 26, scope: !6022, inlinedAt: !5889)
!6026 = !DILocation(line: 370, column: 6, scope: !6027, inlinedAt: !5889)
!6027 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 370, column: 6)
!6028 = !DILocation(line: 370, column: 11, scope: !6027, inlinedAt: !5889)
!6029 = !DILocation(line: 370, column: 6, scope: !5885, inlinedAt: !5889)
!6030 = !DILocation(line: 370, column: 26, scope: !6027, inlinedAt: !5889)
!6031 = !DILocation(line: 371, column: 6, scope: !6032, inlinedAt: !5889)
!6032 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 371, column: 6)
!6033 = !DILocation(line: 371, column: 11, scope: !6032, inlinedAt: !5889)
!6034 = !DILocation(line: 371, column: 6, scope: !5885, inlinedAt: !5889)
!6035 = !DILocation(line: 371, column: 26, scope: !6032, inlinedAt: !5889)
!6036 = !DILocation(line: 372, column: 6, scope: !6037, inlinedAt: !5889)
!6037 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 372, column: 6)
!6038 = !DILocation(line: 372, column: 11, scope: !6037, inlinedAt: !5889)
!6039 = !DILocation(line: 372, column: 6, scope: !5885, inlinedAt: !5889)
!6040 = !DILocation(line: 372, column: 26, scope: !6037, inlinedAt: !5889)
!6041 = !DILocation(line: 373, column: 6, scope: !6042, inlinedAt: !5889)
!6042 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 373, column: 6)
!6043 = !DILocation(line: 373, column: 11, scope: !6042, inlinedAt: !5889)
!6044 = !DILocation(line: 373, column: 6, scope: !5885, inlinedAt: !5889)
!6045 = !DILocation(line: 373, column: 26, scope: !6042, inlinedAt: !5889)
!6046 = !DILocation(line: 374, column: 6, scope: !6047, inlinedAt: !5889)
!6047 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 374, column: 6)
!6048 = !DILocation(line: 374, column: 11, scope: !6047, inlinedAt: !5889)
!6049 = !DILocation(line: 374, column: 6, scope: !5885, inlinedAt: !5889)
!6050 = !DILocation(line: 374, column: 26, scope: !6047, inlinedAt: !5889)
!6051 = !DILocation(line: 375, column: 6, scope: !6052, inlinedAt: !5889)
!6052 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 375, column: 6)
!6053 = !DILocation(line: 375, column: 11, scope: !6052, inlinedAt: !5889)
!6054 = !DILocation(line: 375, column: 6, scope: !5885, inlinedAt: !5889)
!6055 = !DILocation(line: 375, column: 27, scope: !6052, inlinedAt: !5889)
!6056 = !DILocation(line: 376, column: 6, scope: !6057, inlinedAt: !5889)
!6057 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 376, column: 6)
!6058 = !DILocation(line: 376, column: 11, scope: !6057, inlinedAt: !5889)
!6059 = !DILocation(line: 376, column: 6, scope: !5885, inlinedAt: !5889)
!6060 = !DILocation(line: 376, column: 32, scope: !6057, inlinedAt: !5889)
!6061 = !DILocation(line: 377, column: 6, scope: !6062, inlinedAt: !5889)
!6062 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 377, column: 6)
!6063 = !DILocation(line: 377, column: 11, scope: !6062, inlinedAt: !5889)
!6064 = !DILocation(line: 377, column: 6, scope: !5885, inlinedAt: !5889)
!6065 = !DILocation(line: 377, column: 32, scope: !6062, inlinedAt: !5889)
!6066 = !DILocation(line: 378, column: 6, scope: !6067, inlinedAt: !5889)
!6067 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 378, column: 6)
!6068 = !DILocation(line: 378, column: 11, scope: !6067, inlinedAt: !5889)
!6069 = !DILocation(line: 378, column: 6, scope: !5885, inlinedAt: !5889)
!6070 = !DILocation(line: 378, column: 32, scope: !6067, inlinedAt: !5889)
!6071 = !DILocation(line: 379, column: 6, scope: !6072, inlinedAt: !5889)
!6072 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 379, column: 6)
!6073 = !DILocation(line: 379, column: 11, scope: !6072, inlinedAt: !5889)
!6074 = !DILocation(line: 379, column: 6, scope: !5885, inlinedAt: !5889)
!6075 = !DILocation(line: 379, column: 33, scope: !6072, inlinedAt: !5889)
!6076 = !DILocation(line: 380, column: 6, scope: !6077, inlinedAt: !5889)
!6077 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 380, column: 6)
!6078 = !DILocation(line: 380, column: 11, scope: !6077, inlinedAt: !5889)
!6079 = !DILocation(line: 380, column: 6, scope: !5885, inlinedAt: !5889)
!6080 = !DILocation(line: 380, column: 33, scope: !6077, inlinedAt: !5889)
!6081 = !DILocation(line: 381, column: 6, scope: !6082, inlinedAt: !5889)
!6082 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 381, column: 6)
!6083 = !DILocation(line: 381, column: 11, scope: !6082, inlinedAt: !5889)
!6084 = !DILocation(line: 381, column: 6, scope: !5885, inlinedAt: !5889)
!6085 = !DILocation(line: 381, column: 33, scope: !6082, inlinedAt: !5889)
!6086 = !DILocation(line: 382, column: 2, scope: !6087, inlinedAt: !5889)
!6087 = distinct !DILexicalBlock(scope: !6088, file: !291, line: 382, column: 2)
!6088 = distinct !DILexicalBlock(scope: !5885, file: !291, line: 382, column: 2)
!6089 = !{i32 -2144579410, i32 -2144579381, i32 -2144579335, i32 -2144579277, i32 -2144579223, i32 -2144579169, i32 -2144579114, i32 -2144579083}
!6090 = !DILocation(line: 382, column: 2, scope: !6091, inlinedAt: !5889)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !291, line: 382, column: 2)
!6092 = distinct !DILexicalBlock(scope: !6088, file: !291, line: 382, column: 2)
!6093 = !{i32 -2144578640, i32 -2144578633, i32 -2144578579, i32 -2144578548, i32 -2144578518}
!6094 = !DILocation(line: 382, column: 2, scope: !6092, inlinedAt: !5889)
!6095 = !DILocation(line: 386, column: 1, scope: !5885, inlinedAt: !5889)
!6096 = !DILocation(line: 547, column: 9, scope: !5868, inlinedAt: !5871)
!6097 = !DILocation(line: 549, column: 8, scope: !6098, inlinedAt: !5871)
!6098 = distinct !DILexicalBlock(scope: !5868, file: !291, line: 549, column: 7)
!6099 = !DILocation(line: 549, column: 7, scope: !5868, inlinedAt: !5871)
!6100 = !DILocation(line: 550, column: 4, scope: !6098, inlinedAt: !5871)
!6101 = !DILocation(line: 553, column: 33, scope: !5868, inlinedAt: !5871)
!6102 = !DILocation(line: 325, column: 6, scope: !6103, inlinedAt: !5883)
!6103 = distinct !DILexicalBlock(scope: !5879, file: !291, line: 325, column: 6)
!6104 = !DILocation(line: 325, column: 6, scope: !5879, inlinedAt: !5883)
!6105 = !DILocation(line: 326, column: 3, scope: !6103, inlinedAt: !5883)
!6106 = !DILocation(line: 332, column: 9, scope: !5879, inlinedAt: !5883)
!6107 = !DILocation(line: 332, column: 15, scope: !5879, inlinedAt: !5883)
!6108 = !DILocation(line: 332, column: 2, scope: !5879, inlinedAt: !5883)
!6109 = !DILocation(line: 336, column: 1, scope: !5879, inlinedAt: !5883)
!6110 = !DILocation(line: 553, column: 5, scope: !5868, inlinedAt: !5871)
!6111 = !DILocation(line: 553, column: 41, scope: !5868, inlinedAt: !5871)
!6112 = !DILocation(line: 554, column: 5, scope: !5868, inlinedAt: !5871)
!6113 = !DILocation(line: 554, column: 12, scope: !5868, inlinedAt: !5871)
!6114 = !DILocation(line: 448, column: 31, scope: !5863, inlinedAt: !5867)
!6115 = !DILocation(line: 448, column: 34, scope: !5863, inlinedAt: !5867)
!6116 = !DILocation(line: 448, column: 14, scope: !5863, inlinedAt: !5867)
!6117 = !DILocation(line: 450, column: 22, scope: !5863, inlinedAt: !5867)
!6118 = !DILocation(line: 450, column: 25, scope: !5863, inlinedAt: !5867)
!6119 = !DILocation(line: 450, column: 30, scope: !5863, inlinedAt: !5867)
!6120 = !DILocation(line: 450, column: 36, scope: !5863, inlinedAt: !5867)
!6121 = !DILocation(line: 450, column: 8, scope: !5863, inlinedAt: !5867)
!6122 = !DILocation(line: 450, column: 6, scope: !5863, inlinedAt: !5867)
!6123 = !DILocation(line: 451, column: 9, scope: !5863, inlinedAt: !5867)
!6124 = !DILocation(line: 552, column: 3, scope: !5868, inlinedAt: !5871)
!6125 = !DILocation(line: 557, column: 19, scope: !5870, inlinedAt: !5871)
!6126 = !DILocation(line: 557, column: 25, scope: !5870, inlinedAt: !5871)
!6127 = !DILocation(line: 557, column: 9, scope: !5870, inlinedAt: !5871)
!6128 = !DILocation(line: 557, column: 2, scope: !5870, inlinedAt: !5871)
!6129 = !DILocation(line: 558, column: 1, scope: !5870, inlinedAt: !5871)
!6130 = !DILocation(line: 664, column: 2, scope: !5859)
!6131 = distinct !DISubprogram(name: "get_order", scope: !6132, file: !6132, line: 29, type: !6133, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6132 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!6133 = !DISubroutineType(types: !6134)
!6134 = !{!327, !685}
!6135 = !DILocalVariable(name: "x", arg: 1, scope: !6136, file: !6137, line: 366, type: !336)
!6136 = distinct !DISubprogram(name: "fls64", scope: !6137, file: !6137, line: 366, type: !6138, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6137 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!6138 = !DISubroutineType(types: !6139)
!6139 = !{!327, !336}
!6140 = !DILocation(line: 366, column: 40, scope: !6136, inlinedAt: !6141)
!6141 = distinct !DILocation(line: 46, column: 9, scope: !6131)
!6142 = !DILocalVariable(name: "bitpos", scope: !6136, file: !6137, line: 368, type: !327)
!6143 = !DILocation(line: 368, column: 6, scope: !6136, inlinedAt: !6141)
!6144 = !DILocalVariable(name: "size", arg: 1, scope: !6131, file: !6132, line: 29, type: !685)
!6145 = !DILocation(line: 29, column: 63, scope: !6131)
!6146 = !DILocation(line: 31, column: 27, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6131, file: !6132, line: 31, column: 6)
!6148 = !DILocation(line: 31, column: 6, scope: !6147)
!6149 = !DILocation(line: 31, column: 6, scope: !6131)
!6150 = !DILocation(line: 32, column: 8, scope: !6151)
!6151 = distinct !DILexicalBlock(scope: !6152, file: !6132, line: 32, column: 7)
!6152 = distinct !DILexicalBlock(scope: !6147, file: !6132, line: 31, column: 34)
!6153 = !DILocation(line: 32, column: 7, scope: !6152)
!6154 = !DILocation(line: 33, column: 4, scope: !6151)
!6155 = !DILocation(line: 35, column: 7, scope: !6156)
!6156 = distinct !DILexicalBlock(scope: !6152, file: !6132, line: 35, column: 7)
!6157 = !DILocation(line: 35, column: 12, scope: !6156)
!6158 = !DILocation(line: 35, column: 7, scope: !6152)
!6159 = !DILocation(line: 36, column: 4, scope: !6156)
!6160 = !DILocation(line: 38, column: 10, scope: !6152)
!6161 = !DILocation(line: 38, column: 28, scope: !6152)
!6162 = !DILocation(line: 38, column: 41, scope: !6152)
!6163 = !DILocation(line: 38, column: 3, scope: !6152)
!6164 = !DILocation(line: 41, column: 6, scope: !6131)
!6165 = !DILocation(line: 42, column: 7, scope: !6131)
!6166 = !DILocation(line: 46, column: 15, scope: !6131)
!6167 = !DILocation(line: 374, column: 2, scope: !6136, inlinedAt: !6141)
!6168 = !DILocation(line: 376, column: 14, scope: !6136, inlinedAt: !6141)
!6169 = !{i32 314817}
!6170 = !DILocation(line: 377, column: 9, scope: !6136, inlinedAt: !6141)
!6171 = !DILocation(line: 377, column: 16, scope: !6136, inlinedAt: !6141)
!6172 = !DILocation(line: 46, column: 2, scope: !6131)
!6173 = !DILocation(line: 48, column: 1, scope: !6131)
!6174 = distinct !DISubprogram(name: "__ilog2_u64", scope: !6175, file: !6175, line: 30, type: !6176, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6175 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!6176 = !DISubroutineType(types: !6177)
!6177 = !{!327, !335}
!6178 = !DILocation(line: 366, column: 40, scope: !6136, inlinedAt: !6179)
!6179 = distinct !DILocation(line: 32, column: 9, scope: !6174)
!6180 = !DILocation(line: 368, column: 6, scope: !6136, inlinedAt: !6179)
!6181 = !DILocalVariable(name: "n", arg: 1, scope: !6174, file: !6175, line: 30, type: !335)
!6182 = !DILocation(line: 30, column: 21, scope: !6174)
!6183 = !DILocation(line: 32, column: 15, scope: !6174)
!6184 = !DILocation(line: 374, column: 2, scope: !6136, inlinedAt: !6179)
!6185 = !DILocation(line: 376, column: 14, scope: !6136, inlinedAt: !6179)
!6186 = !DILocation(line: 377, column: 9, scope: !6136, inlinedAt: !6179)
!6187 = !DILocation(line: 377, column: 16, scope: !6136, inlinedAt: !6179)
!6188 = !DILocation(line: 32, column: 18, scope: !6174)
!6189 = !DILocation(line: 32, column: 2, scope: !6174)
!6190 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !6191, file: !6191, line: 137, type: !6192, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6191 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!6192 = !DISubroutineType(types: !6193)
!6193 = !{!317, !1475, !2577, !883, !323}
!6194 = !DILocalVariable(name: "s", arg: 1, scope: !6190, file: !6191, line: 137, type: !1475)
!6195 = !DILocation(line: 137, column: 54, scope: !6190)
!6196 = !DILocalVariable(name: "object", arg: 2, scope: !6190, file: !6191, line: 137, type: !2577)
!6197 = !DILocation(line: 137, column: 69, scope: !6190)
!6198 = !DILocalVariable(name: "size", arg: 3, scope: !6190, file: !6191, line: 138, type: !883)
!6199 = !DILocation(line: 138, column: 12, scope: !6190)
!6200 = !DILocalVariable(name: "flags", arg: 4, scope: !6190, file: !6191, line: 138, type: !323)
!6201 = !DILocation(line: 138, column: 24, scope: !6190)
!6202 = !DILocation(line: 140, column: 17, scope: !6190)
!6203 = !DILocation(line: 140, column: 2, scope: !6190)
!6204 = distinct !DISubprogram(name: "dib7000p_identify", scope: !3, file: !3, line: 1403, type: !6205, scopeLine: 1404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6205 = !DISubroutineType(types: !6206)
!6206 = !{!327, !4566}
!6207 = !DILocalVariable(name: "st", arg: 1, scope: !6204, file: !3, line: 1403, type: !4566)
!6208 = !DILocation(line: 1403, column: 53, scope: !6204)
!6209 = !DILocalVariable(name: "value", scope: !6204, file: !3, line: 1405, type: !328)
!6210 = !DILocation(line: 1405, column: 6, scope: !6204)
!6211 = !DILocation(line: 1406, column: 2, scope: !6204)
!6212 = !DILocation(line: 1406, column: 2, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6214, file: !3, line: 1406, column: 2)
!6214 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1406, column: 2)
!6215 = !DILocation(line: 1406, column: 2, scope: !6214)
!6216 = !DILocation(line: 1408, column: 34, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1408, column: 6)
!6218 = !DILocation(line: 1408, column: 15, scope: !6217)
!6219 = !DILocation(line: 1408, column: 13, scope: !6217)
!6220 = !DILocation(line: 1408, column: 6, scope: !6217)
!6221 = !DILocation(line: 1408, column: 44, scope: !6217)
!6222 = !DILocation(line: 1408, column: 6, scope: !6204)
!6223 = !DILocation(line: 1409, column: 3, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 1408, column: 55)
!6225 = !DILocation(line: 1409, column: 3, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6227, file: !3, line: 1409, column: 3)
!6227 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 1409, column: 3)
!6228 = !DILocation(line: 1409, column: 3, scope: !6227)
!6229 = !DILocation(line: 1410, column: 3, scope: !6224)
!6230 = !DILocation(line: 1413, column: 34, scope: !6231)
!6231 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 1413, column: 6)
!6232 = !DILocation(line: 1413, column: 15, scope: !6231)
!6233 = !DILocation(line: 1413, column: 13, scope: !6231)
!6234 = !DILocation(line: 1413, column: 6, scope: !6231)
!6235 = !DILocation(line: 1413, column: 44, scope: !6231)
!6236 = !DILocation(line: 1413, column: 6, scope: !6204)
!6237 = !DILocation(line: 1414, column: 3, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6231, file: !3, line: 1413, column: 55)
!6239 = !DILocation(line: 1414, column: 3, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 1414, column: 3)
!6241 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 1414, column: 3)
!6242 = !DILocation(line: 1414, column: 3, scope: !6241)
!6243 = !DILocation(line: 1415, column: 3, scope: !6238)
!6244 = !DILocation(line: 1418, column: 2, scope: !6204)
!6245 = !DILocation(line: 1419, column: 1, scope: !6204)
!6246 = distinct !DISubprogram(name: "i2c_set_adapdata", scope: !4351, file: !4351, line: 732, type: !6247, scopeLine: 733, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !4349, !317}
!6249 = !DILocalVariable(name: "adap", arg: 1, scope: !6246, file: !4351, line: 732, type: !4349)
!6250 = !DILocation(line: 732, column: 57, scope: !6246)
!6251 = !DILocalVariable(name: "data", arg: 2, scope: !6246, file: !4351, line: 732, type: !317)
!6252 = !DILocation(line: 732, column: 69, scope: !6246)
!6253 = !DILocation(line: 734, column: 19, scope: !6246)
!6254 = !DILocation(line: 734, column: 25, scope: !6246)
!6255 = !DILocation(line: 734, column: 30, scope: !6246)
!6256 = !DILocation(line: 734, column: 2, scope: !6246)
!6257 = !DILocation(line: 735, column: 1, scope: !6246)
!6258 = distinct !DISubprogram(name: "dib7000p_demod_reset", scope: !3, file: !3, line: 647, type: !6205, scopeLine: 648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6259 = !DILocalVariable(name: "state", arg: 1, scope: !6258, file: !3, line: 647, type: !4566)
!6260 = !DILocation(line: 647, column: 56, scope: !6258)
!6261 = !DILocation(line: 649, column: 26, scope: !6258)
!6262 = !DILocation(line: 649, column: 2, scope: !6258)
!6263 = !DILocation(line: 651, column: 6, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 651, column: 6)
!6265 = !DILocation(line: 651, column: 13, scope: !6264)
!6266 = !DILocation(line: 651, column: 21, scope: !6264)
!6267 = !DILocation(line: 651, column: 6, scope: !6258)
!6268 = !DILocation(line: 652, column: 29, scope: !6264)
!6269 = !DILocation(line: 652, column: 36, scope: !6264)
!6270 = !DILocation(line: 652, column: 3, scope: !6264)
!6271 = !DILocation(line: 654, column: 25, scope: !6258)
!6272 = !DILocation(line: 654, column: 2, scope: !6258)
!6273 = !DILocation(line: 657, column: 22, scope: !6258)
!6274 = !DILocation(line: 657, column: 2, scope: !6258)
!6275 = !DILocation(line: 658, column: 22, scope: !6258)
!6276 = !DILocation(line: 658, column: 2, scope: !6258)
!6277 = !DILocation(line: 659, column: 22, scope: !6258)
!6278 = !DILocation(line: 659, column: 2, scope: !6258)
!6279 = !DILocation(line: 660, column: 22, scope: !6258)
!6280 = !DILocation(line: 660, column: 2, scope: !6258)
!6281 = !DILocation(line: 662, column: 22, scope: !6258)
!6282 = !DILocation(line: 662, column: 2, scope: !6258)
!6283 = !DILocation(line: 663, column: 22, scope: !6258)
!6284 = !DILocation(line: 663, column: 2, scope: !6258)
!6285 = !DILocation(line: 664, column: 22, scope: !6258)
!6286 = !DILocation(line: 664, column: 2, scope: !6258)
!6287 = !DILocation(line: 665, column: 22, scope: !6258)
!6288 = !DILocation(line: 665, column: 2, scope: !6258)
!6289 = !DILocation(line: 667, column: 6, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 667, column: 6)
!6291 = !DILocation(line: 667, column: 13, scope: !6290)
!6292 = !DILocation(line: 667, column: 21, scope: !6290)
!6293 = !DILocation(line: 667, column: 6, scope: !6258)
!6294 = !DILocation(line: 668, column: 23, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 667, column: 33)
!6296 = !DILocation(line: 668, column: 3, scope: !6295)
!6297 = !DILocation(line: 669, column: 23, scope: !6295)
!6298 = !DILocation(line: 669, column: 3, scope: !6295)
!6299 = !DILocation(line: 670, column: 2, scope: !6295)
!6300 = !DILocation(line: 673, column: 21, scope: !6258)
!6301 = !DILocation(line: 673, column: 2, scope: !6258)
!6302 = !DILocation(line: 675, column: 26, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 675, column: 6)
!6304 = !DILocation(line: 675, column: 6, scope: !6303)
!6305 = !DILocation(line: 675, column: 33, scope: !6303)
!6306 = !DILocation(line: 675, column: 6, scope: !6258)
!6307 = !DILocation(line: 676, column: 3, scope: !6303)
!6308 = !DILocation(line: 676, column: 3, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 676, column: 3)
!6310 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 676, column: 3)
!6311 = !DILocation(line: 676, column: 3, scope: !6310)
!6312 = !DILocation(line: 678, column: 6, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 678, column: 6)
!6314 = !DILocation(line: 678, column: 13, scope: !6313)
!6315 = !DILocation(line: 678, column: 21, scope: !6313)
!6316 = !DILocation(line: 678, column: 6, scope: !6258)
!6317 = !DILocation(line: 679, column: 23, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 678, column: 33)
!6319 = !DILocation(line: 679, column: 3, scope: !6318)
!6320 = !DILocation(line: 682, column: 23, scope: !6318)
!6321 = !DILocation(line: 682, column: 3, scope: !6318)
!6322 = !DILocation(line: 683, column: 23, scope: !6318)
!6323 = !DILocation(line: 683, column: 3, scope: !6318)
!6324 = !DILocation(line: 684, column: 23, scope: !6318)
!6325 = !DILocation(line: 684, column: 3, scope: !6318)
!6326 = !DILocation(line: 685, column: 23, scope: !6318)
!6327 = !DILocation(line: 685, column: 3, scope: !6318)
!6328 = !DILocation(line: 686, column: 2, scope: !6318)
!6329 = !DILocation(line: 687, column: 31, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 687, column: 6)
!6331 = !DILocation(line: 687, column: 6, scope: !6330)
!6332 = !DILocation(line: 687, column: 54, scope: !6330)
!6333 = !DILocation(line: 687, column: 6, scope: !6258)
!6334 = !DILocation(line: 688, column: 3, scope: !6330)
!6335 = !DILocation(line: 688, column: 3, scope: !6336)
!6336 = distinct !DILexicalBlock(scope: !6337, file: !3, line: 688, column: 3)
!6337 = distinct !DILexicalBlock(scope: !6330, file: !3, line: 688, column: 3)
!6338 = !DILocation(line: 688, column: 3, scope: !6337)
!6339 = !DILocation(line: 690, column: 25, scope: !6258)
!6340 = !DILocation(line: 690, column: 2, scope: !6258)
!6341 = !DILocation(line: 691, column: 21, scope: !6258)
!6342 = !DILocation(line: 691, column: 2, scope: !6258)
!6343 = !DILocation(line: 692, column: 25, scope: !6258)
!6344 = !DILocation(line: 692, column: 2, scope: !6258)
!6345 = !DILocation(line: 695, column: 22, scope: !6258)
!6346 = !DILocation(line: 695, column: 54, scope: !6258)
!6347 = !DILocation(line: 695, column: 35, scope: !6258)
!6348 = !DILocation(line: 695, column: 67, scope: !6258)
!6349 = !DILocation(line: 695, column: 2, scope: !6258)
!6350 = !DILocation(line: 697, column: 25, scope: !6258)
!6351 = !DILocation(line: 697, column: 2, scope: !6258)
!6352 = !DILocation(line: 699, column: 6, scope: !6353)
!6353 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 699, column: 6)
!6354 = !DILocation(line: 699, column: 13, scope: !6353)
!6355 = !DILocation(line: 699, column: 21, scope: !6353)
!6356 = !DILocation(line: 699, column: 6, scope: !6258)
!6357 = !DILocation(line: 700, column: 23, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 699, column: 33)
!6359 = !DILocation(line: 700, column: 3, scope: !6358)
!6360 = !DILocation(line: 701, column: 2, scope: !6358)
!6361 = !DILocation(line: 702, column: 7, scope: !6362)
!6362 = distinct !DILexicalBlock(scope: !6363, file: !3, line: 702, column: 7)
!6363 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 701, column: 9)
!6364 = !DILocation(line: 702, column: 14, scope: !6362)
!6365 = !DILocation(line: 702, column: 18, scope: !6362)
!6366 = !DILocation(line: 702, column: 7, scope: !6363)
!6367 = !DILocation(line: 703, column: 24, scope: !6362)
!6368 = !DILocation(line: 703, column: 4, scope: !6362)
!6369 = !DILocation(line: 705, column: 24, scope: !6362)
!6370 = !DILocation(line: 705, column: 4, scope: !6362)
!6371 = !DILocation(line: 708, column: 21, scope: !6258)
!6372 = !DILocation(line: 708, column: 2, scope: !6258)
!6373 = !DILocation(line: 709, column: 6, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6258, file: !3, line: 709, column: 6)
!6375 = !DILocation(line: 709, column: 13, scope: !6374)
!6376 = !DILocation(line: 709, column: 21, scope: !6374)
!6377 = !DILocation(line: 709, column: 6, scope: !6258)
!6378 = !DILocation(line: 710, column: 23, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 709, column: 33)
!6380 = !DILocation(line: 710, column: 3, scope: !6379)
!6381 = !DILocation(line: 711, column: 23, scope: !6379)
!6382 = !DILocation(line: 711, column: 3, scope: !6379)
!6383 = !DILocation(line: 712, column: 23, scope: !6379)
!6384 = !DILocation(line: 712, column: 3, scope: !6379)
!6385 = !DILocation(line: 713, column: 2, scope: !6379)
!6386 = !DILocation(line: 715, column: 26, scope: !6258)
!6387 = !DILocation(line: 715, column: 2, scope: !6258)
!6388 = !DILocation(line: 717, column: 2, scope: !6258)
!6389 = distinct !DISubprogram(name: "dib7000p_reset_stats", scope: !3, file: !3, line: 1664, type: !505, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6390 = !DILocalVariable(name: "demod", arg: 1, scope: !6389, file: !3, line: 1664, type: !464)
!6391 = !DILocation(line: 1664, column: 55, scope: !6389)
!6392 = !DILocalVariable(name: "state", scope: !6389, file: !3, line: 1666, type: !4566)
!6393 = !DILocation(line: 1666, column: 25, scope: !6389)
!6394 = !DILocation(line: 1666, column: 33, scope: !6389)
!6395 = !DILocation(line: 1666, column: 40, scope: !6389)
!6396 = !DILocalVariable(name: "c", scope: !6389, file: !3, line: 1667, type: !546)
!6397 = !DILocation(line: 1667, column: 34, scope: !6389)
!6398 = !DILocation(line: 1667, column: 39, scope: !6389)
!6399 = !DILocation(line: 1667, column: 46, scope: !6389)
!6400 = !DILocalVariable(name: "ucb", scope: !6389, file: !3, line: 1668, type: !331)
!6401 = !DILocation(line: 1668, column: 6, scope: !6389)
!6402 = !DILocation(line: 1670, column: 10, scope: !6389)
!6403 = !DILocation(line: 1670, column: 13, scope: !6389)
!6404 = !DILocation(line: 1670, column: 2, scope: !6389)
!6405 = !DILocation(line: 1671, column: 10, scope: !6389)
!6406 = !DILocation(line: 1671, column: 13, scope: !6389)
!6407 = !DILocation(line: 1671, column: 2, scope: !6389)
!6408 = !DILocation(line: 1672, column: 10, scope: !6389)
!6409 = !DILocation(line: 1672, column: 13, scope: !6389)
!6410 = !DILocation(line: 1672, column: 2, scope: !6389)
!6411 = !DILocation(line: 1673, column: 10, scope: !6389)
!6412 = !DILocation(line: 1673, column: 13, scope: !6389)
!6413 = !DILocation(line: 1673, column: 2, scope: !6389)
!6414 = !DILocation(line: 1674, column: 10, scope: !6389)
!6415 = !DILocation(line: 1674, column: 13, scope: !6389)
!6416 = !DILocation(line: 1674, column: 2, scope: !6389)
!6417 = !DILocation(line: 1676, column: 2, scope: !6389)
!6418 = !DILocation(line: 1676, column: 5, scope: !6389)
!6419 = !DILocation(line: 1676, column: 14, scope: !6389)
!6420 = !DILocation(line: 1676, column: 18, scope: !6389)
!6421 = !DILocation(line: 1677, column: 2, scope: !6389)
!6422 = !DILocation(line: 1677, column: 5, scope: !6389)
!6423 = !DILocation(line: 1677, column: 9, scope: !6389)
!6424 = !DILocation(line: 1677, column: 13, scope: !6389)
!6425 = !DILocation(line: 1678, column: 2, scope: !6389)
!6426 = !DILocation(line: 1678, column: 5, scope: !6389)
!6427 = !DILocation(line: 1678, column: 17, scope: !6389)
!6428 = !DILocation(line: 1678, column: 21, scope: !6389)
!6429 = !DILocation(line: 1679, column: 2, scope: !6389)
!6430 = !DILocation(line: 1679, column: 5, scope: !6389)
!6431 = !DILocation(line: 1679, column: 17, scope: !6389)
!6432 = !DILocation(line: 1679, column: 21, scope: !6389)
!6433 = !DILocation(line: 1680, column: 2, scope: !6389)
!6434 = !DILocation(line: 1680, column: 5, scope: !6389)
!6435 = !DILocation(line: 1680, column: 20, scope: !6389)
!6436 = !DILocation(line: 1680, column: 24, scope: !6389)
!6437 = !DILocation(line: 1681, column: 2, scope: !6389)
!6438 = !DILocation(line: 1681, column: 5, scope: !6389)
!6439 = !DILocation(line: 1681, column: 20, scope: !6389)
!6440 = !DILocation(line: 1681, column: 24, scope: !6389)
!6441 = !DILocation(line: 1683, column: 2, scope: !6389)
!6442 = !DILocation(line: 1683, column: 5, scope: !6389)
!6443 = !DILocation(line: 1683, column: 14, scope: !6389)
!6444 = !DILocation(line: 1683, column: 22, scope: !6389)
!6445 = !DILocation(line: 1683, column: 28, scope: !6389)
!6446 = !DILocation(line: 1684, column: 2, scope: !6389)
!6447 = !DILocation(line: 1684, column: 5, scope: !6389)
!6448 = !DILocation(line: 1684, column: 14, scope: !6389)
!6449 = !DILocation(line: 1684, column: 22, scope: !6389)
!6450 = !DILocation(line: 1684, column: 29, scope: !6389)
!6451 = !DILocation(line: 1686, column: 2, scope: !6389)
!6452 = !DILocation(line: 1686, column: 5, scope: !6389)
!6453 = !DILocation(line: 1686, column: 9, scope: !6389)
!6454 = !DILocation(line: 1686, column: 17, scope: !6389)
!6455 = !DILocation(line: 1686, column: 23, scope: !6389)
!6456 = !DILocation(line: 1687, column: 2, scope: !6389)
!6457 = !DILocation(line: 1687, column: 5, scope: !6389)
!6458 = !DILocation(line: 1687, column: 17, scope: !6389)
!6459 = !DILocation(line: 1687, column: 25, scope: !6389)
!6460 = !DILocation(line: 1687, column: 31, scope: !6389)
!6461 = !DILocation(line: 1688, column: 2, scope: !6389)
!6462 = !DILocation(line: 1688, column: 5, scope: !6389)
!6463 = !DILocation(line: 1688, column: 17, scope: !6389)
!6464 = !DILocation(line: 1688, column: 25, scope: !6389)
!6465 = !DILocation(line: 1688, column: 31, scope: !6389)
!6466 = !DILocation(line: 1689, column: 2, scope: !6389)
!6467 = !DILocation(line: 1689, column: 5, scope: !6389)
!6468 = !DILocation(line: 1689, column: 20, scope: !6389)
!6469 = !DILocation(line: 1689, column: 28, scope: !6389)
!6470 = !DILocation(line: 1689, column: 34, scope: !6389)
!6471 = !DILocation(line: 1690, column: 2, scope: !6389)
!6472 = !DILocation(line: 1690, column: 5, scope: !6389)
!6473 = !DILocation(line: 1690, column: 20, scope: !6389)
!6474 = !DILocation(line: 1690, column: 28, scope: !6389)
!6475 = !DILocation(line: 1690, column: 34, scope: !6389)
!6476 = !DILocation(line: 1692, column: 27, scope: !6389)
!6477 = !DILocation(line: 1692, column: 2, scope: !6389)
!6478 = !DILocation(line: 1694, column: 19, scope: !6389)
!6479 = !DILocation(line: 1694, column: 2, scope: !6389)
!6480 = !DILocation(line: 1694, column: 9, scope: !6389)
!6481 = !DILocation(line: 1694, column: 17, scope: !6389)
!6482 = !DILocation(line: 1695, column: 2, scope: !6389)
!6483 = !DILocation(line: 1695, column: 9, scope: !6389)
!6484 = !DILocation(line: 1695, column: 27, scope: !6389)
!6485 = !DILocation(line: 1696, column: 2, scope: !6389)
!6486 = !DILocation(line: 1696, column: 9, scope: !6389)
!6487 = !DILocation(line: 1696, column: 27, scope: !6389)
!6488 = !DILocation(line: 1697, column: 1, scope: !6389)
!6489 = distinct !DISubprogram(name: "dib7090_set_output_mode", scope: !3, file: !3, line: 2613, type: !688, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6490 = !DILocalVariable(name: "fe", arg: 1, scope: !6489, file: !3, line: 2613, type: !464)
!6491 = !DILocation(line: 2613, column: 57, scope: !6489)
!6492 = !DILocalVariable(name: "mode", arg: 2, scope: !6489, file: !3, line: 2613, type: !327)
!6493 = !DILocation(line: 2613, column: 65, scope: !6489)
!6494 = !DILocalVariable(name: "state", scope: !6489, file: !3, line: 2615, type: !4566)
!6495 = !DILocation(line: 2615, column: 25, scope: !6489)
!6496 = !DILocation(line: 2615, column: 33, scope: !6489)
!6497 = !DILocation(line: 2615, column: 37, scope: !6489)
!6498 = !DILocalVariable(name: "outreg", scope: !6489, file: !3, line: 2617, type: !328)
!6499 = !DILocation(line: 2617, column: 6, scope: !6489)
!6500 = !DILocalVariable(name: "smo_mode", scope: !6489, file: !3, line: 2617, type: !328)
!6501 = !DILocation(line: 2617, column: 14, scope: !6489)
!6502 = !DILocalVariable(name: "fifo_threshold", scope: !6489, file: !3, line: 2617, type: !328)
!6503 = !DILocation(line: 2617, column: 24, scope: !6489)
!6504 = !DILocalVariable(name: "prefer_mpeg_mux_use", scope: !6489, file: !3, line: 2618, type: !318)
!6505 = !DILocation(line: 2618, column: 5, scope: !6489)
!6506 = !DILocalVariable(name: "ret", scope: !6489, file: !3, line: 2619, type: !327)
!6507 = !DILocation(line: 2619, column: 6, scope: !6489)
!6508 = !DILocation(line: 2621, column: 25, scope: !6489)
!6509 = !DILocation(line: 2621, column: 2, scope: !6489)
!6510 = !DILocation(line: 2623, column: 17, scope: !6489)
!6511 = !DILocation(line: 2624, column: 33, scope: !6489)
!6512 = !DILocation(line: 2624, column: 14, scope: !6489)
!6513 = !DILocation(line: 2624, column: 45, scope: !6489)
!6514 = !DILocation(line: 2624, column: 55, scope: !6489)
!6515 = !DILocation(line: 2624, column: 13, scope: !6489)
!6516 = !DILocation(line: 2624, column: 11, scope: !6489)
!6517 = !DILocation(line: 2625, column: 30, scope: !6489)
!6518 = !DILocation(line: 2625, column: 11, scope: !6489)
!6519 = !DILocation(line: 2625, column: 43, scope: !6489)
!6520 = !DILocation(line: 2625, column: 9, scope: !6489)
!6521 = !DILocation(line: 2627, column: 10, scope: !6489)
!6522 = !DILocation(line: 2627, column: 2, scope: !6489)
!6523 = !DILocation(line: 2629, column: 10, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2627, column: 16)
!6525 = !DILocation(line: 2630, column: 3, scope: !6524)
!6526 = !DILocation(line: 2633, column: 7, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2633, column: 7)
!6528 = !DILocation(line: 2633, column: 7, scope: !6524)
!6529 = !DILocation(line: 2634, column: 4, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2633, column: 28)
!6531 = !DILocation(line: 2634, column: 4, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6533, file: !3, line: 2634, column: 4)
!6533 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 2634, column: 4)
!6534 = !DILocation(line: 2634, column: 4, scope: !6533)
!6535 = !DILocation(line: 2635, column: 26, scope: !6530)
!6536 = !DILocation(line: 2635, column: 4, scope: !6530)
!6537 = !DILocation(line: 2636, column: 26, scope: !6530)
!6538 = !DILocation(line: 2636, column: 4, scope: !6530)
!6539 = !DILocation(line: 2637, column: 3, scope: !6530)
!6540 = !DILocation(line: 2638, column: 4, scope: !6541)
!6541 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2637, column: 10)
!6542 = !DILocation(line: 2638, column: 4, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 2638, column: 4)
!6544 = distinct !DILexicalBlock(scope: !6541, file: !3, line: 2638, column: 4)
!6545 = !DILocation(line: 2638, column: 4, scope: !6544)
!6546 = !DILocation(line: 2639, column: 26, scope: !6541)
!6547 = !DILocation(line: 2639, column: 4, scope: !6541)
!6548 = !DILocation(line: 2640, column: 11, scope: !6541)
!6549 = !DILocation(line: 2642, column: 3, scope: !6524)
!6550 = !DILocation(line: 2645, column: 7, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2645, column: 7)
!6552 = !DILocation(line: 2645, column: 7, scope: !6524)
!6553 = !DILocation(line: 2646, column: 4, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 2645, column: 28)
!6555 = !DILocation(line: 2646, column: 4, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 2646, column: 4)
!6557 = distinct !DILexicalBlock(scope: !6554, file: !3, line: 2646, column: 4)
!6558 = !DILocation(line: 2646, column: 4, scope: !6557)
!6559 = !DILocation(line: 2647, column: 26, scope: !6554)
!6560 = !DILocation(line: 2647, column: 4, scope: !6554)
!6561 = !DILocation(line: 2648, column: 26, scope: !6554)
!6562 = !DILocation(line: 2648, column: 4, scope: !6554)
!6563 = !DILocation(line: 2649, column: 3, scope: !6554)
!6564 = !DILocation(line: 2650, column: 4, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 2649, column: 10)
!6566 = !DILocation(line: 2650, column: 4, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 2650, column: 4)
!6568 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 2650, column: 4)
!6569 = !DILocation(line: 2650, column: 4, scope: !6568)
!6570 = !DILocation(line: 2651, column: 26, scope: !6565)
!6571 = !DILocation(line: 2651, column: 4, scope: !6565)
!6572 = !DILocation(line: 2652, column: 11, scope: !6565)
!6573 = !DILocation(line: 2654, column: 3, scope: !6524)
!6574 = !DILocation(line: 2657, column: 3, scope: !6524)
!6575 = !DILocation(line: 2657, column: 3, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 2657, column: 3)
!6577 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2657, column: 3)
!6578 = !DILocation(line: 2657, column: 3, scope: !6577)
!6579 = !DILocation(line: 2658, column: 25, scope: !6524)
!6580 = !DILocation(line: 2658, column: 3, scope: !6524)
!6581 = !DILocation(line: 2659, column: 10, scope: !6524)
!6582 = !DILocation(line: 2660, column: 3, scope: !6524)
!6583 = !DILocation(line: 2663, column: 3, scope: !6524)
!6584 = !DILocation(line: 2663, column: 3, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6586, file: !3, line: 2663, column: 3)
!6586 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2663, column: 3)
!6587 = !DILocation(line: 2663, column: 3, scope: !6586)
!6588 = !DILocation(line: 2664, column: 25, scope: !6524)
!6589 = !DILocation(line: 2664, column: 3, scope: !6524)
!6590 = !DILocation(line: 2665, column: 10, scope: !6524)
!6591 = !DILocation(line: 2666, column: 12, scope: !6524)
!6592 = !DILocation(line: 2667, column: 18, scope: !6524)
!6593 = !DILocation(line: 2668, column: 3, scope: !6524)
!6594 = !DILocation(line: 2671, column: 3, scope: !6524)
!6595 = !DILocation(line: 2671, column: 3, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 2671, column: 3)
!6597 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2671, column: 3)
!6598 = !DILocation(line: 2671, column: 3, scope: !6597)
!6599 = !DILocation(line: 2672, column: 23, scope: !6524)
!6600 = !DILocation(line: 2672, column: 3, scope: !6524)
!6601 = !DILocation(line: 2673, column: 25, scope: !6524)
!6602 = !DILocation(line: 2673, column: 3, scope: !6524)
!6603 = !DILocation(line: 2674, column: 3, scope: !6524)
!6604 = !DILocation(line: 2677, column: 3, scope: !6524)
!6605 = !DILocation(line: 2677, column: 3, scope: !6606)
!6606 = distinct !DILexicalBlock(scope: !6607, file: !3, line: 2677, column: 3)
!6607 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 2677, column: 3)
!6608 = !DILocation(line: 2677, column: 3, scope: !6607)
!6609 = !DILocation(line: 2678, column: 23, scope: !6524)
!6610 = !DILocation(line: 2678, column: 3, scope: !6524)
!6611 = !DILocation(line: 2679, column: 25, scope: !6524)
!6612 = !DILocation(line: 2679, column: 3, scope: !6524)
!6613 = !DILocation(line: 2680, column: 3, scope: !6524)
!6614 = !DILocation(line: 2682, column: 6, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2682, column: 6)
!6616 = !DILocation(line: 2682, column: 11, scope: !6615)
!6617 = !DILocation(line: 2682, column: 6, scope: !6489)
!6618 = !DILocation(line: 2683, column: 10, scope: !6615)
!6619 = !DILocation(line: 2683, column: 3, scope: !6615)
!6620 = !DILocation(line: 2685, column: 6, scope: !6621)
!6621 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 2685, column: 6)
!6622 = !DILocation(line: 2685, column: 13, scope: !6621)
!6623 = !DILocation(line: 2685, column: 17, scope: !6621)
!6624 = !DILocation(line: 2685, column: 6, scope: !6489)
!6625 = !DILocation(line: 2686, column: 12, scope: !6621)
!6626 = !DILocation(line: 2686, column: 3, scope: !6621)
!6627 = !DILocation(line: 2688, column: 29, scope: !6489)
!6628 = !DILocation(line: 2688, column: 41, scope: !6489)
!6629 = !DILocation(line: 2688, column: 9, scope: !6489)
!6630 = !DILocation(line: 2688, column: 6, scope: !6489)
!6631 = !DILocation(line: 2689, column: 29, scope: !6489)
!6632 = !DILocation(line: 2689, column: 41, scope: !6489)
!6633 = !DILocation(line: 2689, column: 9, scope: !6489)
!6634 = !DILocation(line: 2689, column: 6, scope: !6489)
!6635 = !DILocation(line: 2690, column: 29, scope: !6489)
!6636 = !DILocation(line: 2690, column: 42, scope: !6489)
!6637 = !DILocation(line: 2690, column: 9, scope: !6489)
!6638 = !DILocation(line: 2690, column: 6, scope: !6489)
!6639 = !DILocation(line: 2692, column: 9, scope: !6489)
!6640 = !DILocation(line: 2692, column: 2, scope: !6489)
!6641 = distinct !DISubprogram(name: "dib7090_set_diversity_in", scope: !3, file: !3, line: 2580, type: !688, scopeLine: 2581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6642 = !DILocalVariable(name: "fe", arg: 1, scope: !6641, file: !3, line: 2580, type: !464)
!6643 = !DILocation(line: 2580, column: 58, scope: !6641)
!6644 = !DILocalVariable(name: "onoff", arg: 2, scope: !6641, file: !3, line: 2580, type: !327)
!6645 = !DILocation(line: 2580, column: 66, scope: !6641)
!6646 = !DILocalVariable(name: "state", scope: !6641, file: !3, line: 2582, type: !4566)
!6647 = !DILocation(line: 2582, column: 25, scope: !6641)
!6648 = !DILocation(line: 2582, column: 33, scope: !6641)
!6649 = !DILocation(line: 2582, column: 37, scope: !6641)
!6650 = !DILocalVariable(name: "reg_1287", scope: !6641, file: !3, line: 2583, type: !328)
!6651 = !DILocation(line: 2583, column: 6, scope: !6641)
!6652 = !DILocation(line: 2585, column: 10, scope: !6641)
!6653 = !DILocation(line: 2585, column: 2, scope: !6641)
!6654 = !DILocation(line: 2587, column: 4, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 2585, column: 17)
!6656 = !DILocation(line: 2587, column: 4, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2587, column: 4)
!6658 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2587, column: 4)
!6659 = !DILocation(line: 2587, column: 4, scope: !6658)
!6660 = !DILocation(line: 2588, column: 22, scope: !6655)
!6661 = !DILocation(line: 2588, column: 4, scope: !6655)
!6662 = !DILocation(line: 2592, column: 34, scope: !6655)
!6663 = !DILocation(line: 2592, column: 15, scope: !6655)
!6664 = !DILocation(line: 2592, column: 13, scope: !6655)
!6665 = !DILocation(line: 2594, column: 9, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2594, column: 8)
!6667 = !DILocation(line: 2594, column: 18, scope: !6666)
!6668 = !DILocation(line: 2594, column: 25, scope: !6666)
!6669 = !DILocation(line: 2594, column: 8, scope: !6655)
!6670 = !DILocation(line: 2596, column: 14, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 2594, column: 31)
!6672 = !DILocation(line: 2597, column: 25, scope: !6671)
!6673 = !DILocation(line: 2597, column: 38, scope: !6671)
!6674 = !DILocation(line: 2597, column: 5, scope: !6671)
!6675 = !DILocation(line: 2598, column: 4, scope: !6671)
!6676 = !DILocation(line: 2599, column: 4, scope: !6655)
!6677 = !DILocation(line: 2599, column: 11, scope: !6655)
!6678 = !DILocation(line: 2599, column: 27, scope: !6655)
!6679 = !DILocation(line: 2600, column: 4, scope: !6655)
!6680 = !DILocation(line: 2603, column: 4, scope: !6655)
!6681 = !DILocation(line: 2603, column: 4, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 2603, column: 4)
!6683 = distinct !DILexicalBlock(scope: !6655, file: !3, line: 2603, column: 4)
!6684 = !DILocation(line: 2603, column: 4, scope: !6683)
!6685 = !DILocation(line: 2604, column: 22, scope: !6655)
!6686 = !DILocation(line: 2604, column: 4, scope: !6655)
!6687 = !DILocation(line: 2605, column: 4, scope: !6655)
!6688 = !DILocation(line: 2605, column: 11, scope: !6655)
!6689 = !DILocation(line: 2605, column: 27, scope: !6655)
!6690 = !DILocation(line: 2606, column: 4, scope: !6655)
!6691 = !DILocation(line: 2609, column: 29, scope: !6641)
!6692 = !DILocation(line: 2609, column: 36, scope: !6641)
!6693 = !DILocation(line: 2609, column: 43, scope: !6641)
!6694 = !DILocation(line: 2609, column: 2, scope: !6641)
!6695 = !DILocation(line: 2610, column: 2, scope: !6641)
!6696 = distinct !DISubprogram(name: "dib7000p_release", scope: !3, file: !3, line: 2004, type: !505, scopeLine: 2005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6697 = !DILocalVariable(name: "demod", arg: 1, scope: !6696, file: !3, line: 2004, type: !464)
!6698 = !DILocation(line: 2004, column: 51, scope: !6696)
!6699 = !DILocalVariable(name: "st", scope: !6696, file: !3, line: 2006, type: !4566)
!6700 = !DILocation(line: 2006, column: 25, scope: !6696)
!6701 = !DILocation(line: 2006, column: 30, scope: !6696)
!6702 = !DILocation(line: 2006, column: 37, scope: !6696)
!6703 = !DILocation(line: 2007, column: 27, scope: !6696)
!6704 = !DILocation(line: 2007, column: 31, scope: !6696)
!6705 = !DILocation(line: 2007, column: 2, scope: !6696)
!6706 = !DILocation(line: 2008, column: 19, scope: !6696)
!6707 = !DILocation(line: 2008, column: 23, scope: !6696)
!6708 = !DILocation(line: 2008, column: 2, scope: !6696)
!6709 = !DILocation(line: 2009, column: 8, scope: !6696)
!6710 = !DILocation(line: 2009, column: 2, scope: !6696)
!6711 = !DILocation(line: 2010, column: 1, scope: !6696)
!6712 = distinct !DISubprogram(name: "dib7000p_wakeup", scope: !3, file: !3, line: 1385, type: !511, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6713 = !DILocalVariable(name: "demod", arg: 1, scope: !6712, file: !3, line: 1385, type: !464)
!6714 = !DILocation(line: 1385, column: 49, scope: !6712)
!6715 = !DILocalVariable(name: "state", scope: !6712, file: !3, line: 1387, type: !4566)
!6716 = !DILocation(line: 1387, column: 25, scope: !6712)
!6717 = !DILocation(line: 1387, column: 33, scope: !6712)
!6718 = !DILocation(line: 1387, column: 40, scope: !6712)
!6719 = !DILocation(line: 1388, column: 26, scope: !6712)
!6720 = !DILocation(line: 1388, column: 2, scope: !6712)
!6721 = !DILocation(line: 1389, column: 25, scope: !6712)
!6722 = !DILocation(line: 1389, column: 2, scope: !6712)
!6723 = !DILocation(line: 1390, column: 6, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 1390, column: 6)
!6725 = !DILocation(line: 1390, column: 13, scope: !6724)
!6726 = !DILocation(line: 1390, column: 21, scope: !6724)
!6727 = !DILocation(line: 1390, column: 6, scope: !6712)
!6728 = !DILocation(line: 1391, column: 22, scope: !6724)
!6729 = !DILocation(line: 1391, column: 3, scope: !6724)
!6730 = !DILocation(line: 1392, column: 2, scope: !6712)
!6731 = distinct !DISubprogram(name: "dib7000p_sleep", scope: !3, file: !3, line: 1395, type: !511, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6732 = !DILocalVariable(name: "demod", arg: 1, scope: !6731, file: !3, line: 1395, type: !464)
!6733 = !DILocation(line: 1395, column: 48, scope: !6731)
!6734 = !DILocalVariable(name: "state", scope: !6731, file: !3, line: 1397, type: !4566)
!6735 = !DILocation(line: 1397, column: 25, scope: !6731)
!6736 = !DILocation(line: 1397, column: 33, scope: !6731)
!6737 = !DILocation(line: 1397, column: 40, scope: !6731)
!6738 = !DILocation(line: 1398, column: 6, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6731, file: !3, line: 1398, column: 6)
!6740 = !DILocation(line: 1398, column: 13, scope: !6739)
!6741 = !DILocation(line: 1398, column: 21, scope: !6739)
!6742 = !DILocation(line: 1398, column: 6, scope: !6731)
!6743 = !DILocation(line: 1399, column: 34, scope: !6739)
!6744 = !DILocation(line: 1399, column: 10, scope: !6739)
!6745 = !DILocation(line: 1399, column: 3, scope: !6739)
!6746 = !DILocation(line: 1400, column: 34, scope: !6731)
!6747 = !DILocation(line: 1400, column: 9, scope: !6731)
!6748 = !DILocation(line: 1400, column: 83, scope: !6731)
!6749 = !DILocation(line: 1400, column: 59, scope: !6731)
!6750 = !DILocation(line: 1400, column: 57, scope: !6731)
!6751 = !DILocation(line: 1400, column: 2, scope: !6731)
!6752 = !DILocation(line: 1401, column: 1, scope: !6731)
!6753 = distinct !DISubprogram(name: "dib7000p_set_frontend", scope: !3, file: !3, line: 1517, type: !511, scopeLine: 1518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6754 = !DILocalVariable(name: "fe", arg: 1, scope: !6753, file: !3, line: 1517, type: !464)
!6755 = !DILocation(line: 1517, column: 55, scope: !6753)
!6756 = !DILocalVariable(name: "fep", scope: !6753, file: !3, line: 1519, type: !546)
!6757 = !DILocation(line: 1519, column: 34, scope: !6753)
!6758 = !DILocation(line: 1519, column: 41, scope: !6753)
!6759 = !DILocation(line: 1519, column: 45, scope: !6753)
!6760 = !DILocalVariable(name: "state", scope: !6753, file: !3, line: 1520, type: !4566)
!6761 = !DILocation(line: 1520, column: 25, scope: !6753)
!6762 = !DILocation(line: 1520, column: 33, scope: !6753)
!6763 = !DILocation(line: 1520, column: 37, scope: !6753)
!6764 = !DILocalVariable(name: "time", scope: !6753, file: !3, line: 1521, type: !327)
!6765 = !DILocation(line: 1521, column: 6, scope: !6753)
!6766 = !DILocalVariable(name: "ret", scope: !6753, file: !3, line: 1521, type: !327)
!6767 = !DILocation(line: 1521, column: 12, scope: !6753)
!6768 = !DILocation(line: 1523, column: 6, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1523, column: 6)
!6770 = !DILocation(line: 1523, column: 13, scope: !6769)
!6771 = !DILocation(line: 1523, column: 21, scope: !6769)
!6772 = !DILocation(line: 1523, column: 6, scope: !6753)
!6773 = !DILocation(line: 1524, column: 28, scope: !6769)
!6774 = !DILocation(line: 1524, column: 3, scope: !6769)
!6775 = !DILocation(line: 1526, column: 28, scope: !6769)
!6776 = !DILocation(line: 1526, column: 3, scope: !6769)
!6777 = !DILocation(line: 1529, column: 33, scope: !6753)
!6778 = !DILocation(line: 1529, column: 2, scope: !6753)
!6779 = !DILocation(line: 1529, column: 9, scope: !6753)
!6780 = !DILocation(line: 1529, column: 31, scope: !6753)
!6781 = !DILocation(line: 1531, column: 6, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1531, column: 6)
!6783 = !DILocation(line: 1531, column: 10, scope: !6782)
!6784 = !DILocation(line: 1531, column: 14, scope: !6782)
!6785 = !DILocation(line: 1531, column: 24, scope: !6782)
!6786 = !DILocation(line: 1531, column: 6, scope: !6753)
!6787 = !DILocation(line: 1532, column: 3, scope: !6782)
!6788 = !DILocation(line: 1532, column: 7, scope: !6782)
!6789 = !DILocation(line: 1532, column: 11, scope: !6782)
!6790 = !DILocation(line: 1532, column: 21, scope: !6782)
!6791 = !DILocation(line: 1532, column: 32, scope: !6782)
!6792 = !DILocation(line: 1535, column: 2, scope: !6753)
!6793 = !DILocation(line: 1535, column: 9, scope: !6753)
!6794 = !DILocation(line: 1535, column: 19, scope: !6753)
!6795 = !DILocation(line: 1536, column: 2, scope: !6753)
!6796 = !DILocation(line: 1537, column: 31, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1536, column: 5)
!6798 = !DILocation(line: 1537, column: 10, scope: !6797)
!6799 = !DILocation(line: 1537, column: 8, scope: !6797)
!6800 = !DILocation(line: 1538, column: 7, scope: !6801)
!6801 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 1538, column: 7)
!6802 = !DILocation(line: 1538, column: 12, scope: !6801)
!6803 = !DILocation(line: 1538, column: 7, scope: !6797)
!6804 = !DILocation(line: 1539, column: 11, scope: !6801)
!6805 = !DILocation(line: 1539, column: 4, scope: !6801)
!6806 = !DILocation(line: 1540, column: 2, scope: !6797)
!6807 = !DILocation(line: 1540, column: 11, scope: !6753)
!6808 = !DILocation(line: 1540, column: 16, scope: !6753)
!6809 = distinct !{!6809, !6795, !6810}
!6810 = !DILocation(line: 1540, column: 21, scope: !6753)
!6811 = !DILocation(line: 1542, column: 6, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1542, column: 6)
!6813 = !DILocation(line: 1542, column: 11, scope: !6812)
!6814 = !DILocation(line: 1542, column: 29, scope: !6812)
!6815 = !DILocation(line: 1542, column: 55, scope: !6812)
!6816 = !DILocation(line: 1543, column: 3, scope: !6812)
!6817 = !DILocation(line: 1543, column: 8, scope: !6812)
!6818 = !DILocation(line: 1543, column: 23, scope: !6812)
!6819 = !DILocation(line: 1543, column: 46, scope: !6812)
!6820 = !DILocation(line: 1543, column: 49, scope: !6812)
!6821 = !DILocation(line: 1543, column: 54, scope: !6812)
!6822 = !DILocation(line: 1543, column: 65, scope: !6812)
!6823 = !DILocation(line: 1543, column: 77, scope: !6812)
!6824 = !DILocation(line: 1543, column: 80, scope: !6812)
!6825 = !DILocation(line: 1543, column: 85, scope: !6812)
!6826 = !DILocation(line: 1543, column: 98, scope: !6812)
!6827 = !DILocation(line: 1542, column: 6, scope: !6753)
!6828 = !DILocalVariable(name: "i", scope: !6829, file: !3, line: 1544, type: !327)
!6829 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 1543, column: 111)
!6830 = !DILocation(line: 1544, column: 7, scope: !6829)
!6831 = !DILocalVariable(name: "found", scope: !6829, file: !3, line: 1544, type: !327)
!6832 = !DILocation(line: 1544, column: 16, scope: !6829)
!6833 = !DILocation(line: 1546, column: 29, scope: !6829)
!6834 = !DILocation(line: 1546, column: 3, scope: !6829)
!6835 = !DILocation(line: 1547, column: 3, scope: !6829)
!6836 = !DILocation(line: 1548, column: 4, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1547, column: 6)
!6838 = !DILocation(line: 1549, column: 39, scope: !6837)
!6839 = !DILocation(line: 1549, column: 12, scope: !6837)
!6840 = !DILocation(line: 1549, column: 10, scope: !6837)
!6841 = !DILocation(line: 1550, column: 3, scope: !6837)
!6842 = !DILocation(line: 1550, column: 12, scope: !6829)
!6843 = !DILocation(line: 1550, column: 18, scope: !6829)
!6844 = !DILocation(line: 1550, column: 23, scope: !6829)
!6845 = !DILocation(line: 1550, column: 27, scope: !6829)
!6846 = !DILocation(line: 0, scope: !6829)
!6847 = distinct !{!6847, !6835, !6848}
!6848 = !DILocation(line: 1550, column: 29, scope: !6829)
!6849 = !DILocation(line: 1552, column: 3, scope: !6829)
!6850 = !DILocation(line: 1552, column: 3, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6852, file: !3, line: 1552, column: 3)
!6852 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1552, column: 3)
!6853 = !DILocation(line: 1552, column: 3, scope: !6852)
!6854 = !DILocation(line: 1553, column: 7, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1553, column: 7)
!6856 = !DILocation(line: 1553, column: 13, scope: !6855)
!6857 = !DILocation(line: 1553, column: 18, scope: !6855)
!6858 = !DILocation(line: 1553, column: 21, scope: !6855)
!6859 = !DILocation(line: 1553, column: 27, scope: !6855)
!6860 = !DILocation(line: 1553, column: 7, scope: !6829)
!6861 = !DILocation(line: 1554, column: 4, scope: !6855)
!6862 = !DILocation(line: 1556, column: 25, scope: !6829)
!6863 = !DILocation(line: 1556, column: 29, scope: !6829)
!6864 = !DILocation(line: 1556, column: 3, scope: !6829)
!6865 = !DILocation(line: 1557, column: 2, scope: !6829)
!6866 = !DILocation(line: 1559, column: 22, scope: !6753)
!6867 = !DILocation(line: 1559, column: 8, scope: !6753)
!6868 = !DILocation(line: 1559, column: 6, scope: !6753)
!6869 = !DILocation(line: 1562, column: 6, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 1562, column: 6)
!6871 = !DILocation(line: 1562, column: 13, scope: !6870)
!6872 = !DILocation(line: 1562, column: 21, scope: !6870)
!6873 = !DILocation(line: 1562, column: 6, scope: !6753)
!6874 = !DILocation(line: 1563, column: 27, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1562, column: 33)
!6876 = !DILocation(line: 1563, column: 31, scope: !6875)
!6877 = !DILocation(line: 1563, column: 38, scope: !6875)
!6878 = !DILocation(line: 1563, column: 42, scope: !6875)
!6879 = !DILocation(line: 1563, column: 3, scope: !6875)
!6880 = !DILocation(line: 1564, column: 7, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1564, column: 7)
!6882 = !DILocation(line: 1564, column: 14, scope: !6881)
!6883 = !DILocation(line: 1564, column: 18, scope: !6881)
!6884 = !DILocation(line: 1564, column: 31, scope: !6881)
!6885 = !DILocation(line: 1564, column: 7, scope: !6875)
!6886 = !DILocation(line: 1565, column: 24, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6881, file: !3, line: 1564, column: 37)
!6888 = !DILocation(line: 1565, column: 4, scope: !6887)
!6889 = !DILocation(line: 1566, column: 26, scope: !6887)
!6890 = !DILocation(line: 1566, column: 4, scope: !6887)
!6891 = !DILocation(line: 1567, column: 3, scope: !6887)
!6892 = !DILocation(line: 1568, column: 2, scope: !6875)
!6893 = !DILocation(line: 1569, column: 28, scope: !6870)
!6894 = !DILocation(line: 1569, column: 35, scope: !6870)
!6895 = !DILocation(line: 1569, column: 42, scope: !6870)
!6896 = !DILocation(line: 1569, column: 46, scope: !6870)
!6897 = !DILocation(line: 1569, column: 3, scope: !6870)
!6898 = !DILocation(line: 1571, column: 9, scope: !6753)
!6899 = !DILocation(line: 1571, column: 2, scope: !6753)
!6900 = !DILocation(line: 1572, column: 1, scope: !6753)
!6901 = distinct !DISubprogram(name: "dib7000p_fe_get_tune_settings", scope: !3, file: !3, line: 1998, type: !534, scopeLine: 1999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6902 = !DILocalVariable(name: "fe", arg: 1, scope: !6901, file: !3, line: 1998, type: !464)
!6903 = !DILocation(line: 1998, column: 63, scope: !6901)
!6904 = !DILocalVariable(name: "tune", arg: 2, scope: !6901, file: !3, line: 1998, type: !536)
!6905 = !DILocation(line: 1998, column: 102, scope: !6901)
!6906 = !DILocation(line: 2000, column: 2, scope: !6901)
!6907 = !DILocation(line: 2000, column: 8, scope: !6901)
!6908 = !DILocation(line: 2000, column: 21, scope: !6901)
!6909 = !DILocation(line: 2001, column: 2, scope: !6901)
!6910 = distinct !DISubprogram(name: "dib7000p_get_frontend", scope: !3, file: !3, line: 1421, type: !544, scopeLine: 1423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!6911 = !DILocalVariable(name: "fe", arg: 1, scope: !6910, file: !3, line: 1421, type: !464)
!6912 = !DILocation(line: 1421, column: 55, scope: !6910)
!6913 = !DILocalVariable(name: "fep", arg: 2, scope: !6910, file: !3, line: 1422, type: !546)
!6914 = !DILocation(line: 1422, column: 38, scope: !6910)
!6915 = !DILocalVariable(name: "state", scope: !6910, file: !3, line: 1424, type: !4566)
!6916 = !DILocation(line: 1424, column: 25, scope: !6910)
!6917 = !DILocation(line: 1424, column: 33, scope: !6910)
!6918 = !DILocation(line: 1424, column: 37, scope: !6910)
!6919 = !DILocalVariable(name: "tps", scope: !6910, file: !3, line: 1425, type: !328)
!6920 = !DILocation(line: 1425, column: 6, scope: !6910)
!6921 = !DILocation(line: 1425, column: 31, scope: !6910)
!6922 = !DILocation(line: 1425, column: 12, scope: !6910)
!6923 = !DILocation(line: 1427, column: 2, scope: !6910)
!6924 = !DILocation(line: 1427, column: 7, scope: !6910)
!6925 = !DILocation(line: 1427, column: 17, scope: !6910)
!6926 = !DILocation(line: 1429, column: 22, scope: !6910)
!6927 = !DILocation(line: 1429, column: 2, scope: !6910)
!6928 = !DILocation(line: 1429, column: 7, scope: !6910)
!6929 = !DILocation(line: 1429, column: 20, scope: !6910)
!6930 = !DILocation(line: 1431, column: 11, scope: !6910)
!6931 = !DILocation(line: 1431, column: 15, scope: !6910)
!6932 = !DILocation(line: 1431, column: 21, scope: !6910)
!6933 = !DILocation(line: 1431, column: 2, scope: !6910)
!6934 = !DILocation(line: 1433, column: 3, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1431, column: 28)
!6936 = !DILocation(line: 1433, column: 8, scope: !6935)
!6937 = !DILocation(line: 1433, column: 26, scope: !6935)
!6938 = !DILocation(line: 1434, column: 3, scope: !6935)
!6939 = !DILocation(line: 1436, column: 3, scope: !6935)
!6940 = !DILocation(line: 1436, column: 8, scope: !6935)
!6941 = !DILocation(line: 1436, column: 26, scope: !6935)
!6942 = !DILocation(line: 1437, column: 3, scope: !6935)
!6943 = !DILocation(line: 1441, column: 10, scope: !6910)
!6944 = !DILocation(line: 1441, column: 14, scope: !6910)
!6945 = !DILocation(line: 1441, column: 2, scope: !6910)
!6946 = !DILocation(line: 1443, column: 3, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1441, column: 21)
!6948 = !DILocation(line: 1443, column: 8, scope: !6947)
!6949 = !DILocation(line: 1443, column: 23, scope: !6947)
!6950 = !DILocation(line: 1444, column: 3, scope: !6947)
!6951 = !DILocation(line: 1446, column: 3, scope: !6947)
!6952 = !DILocation(line: 1446, column: 8, scope: !6947)
!6953 = !DILocation(line: 1446, column: 23, scope: !6947)
!6954 = !DILocation(line: 1447, column: 3, scope: !6947)
!6955 = !DILocation(line: 1449, column: 3, scope: !6947)
!6956 = !DILocation(line: 1449, column: 8, scope: !6947)
!6957 = !DILocation(line: 1449, column: 23, scope: !6947)
!6958 = !DILocation(line: 1450, column: 3, scope: !6947)
!6959 = !DILocation(line: 1452, column: 3, scope: !6947)
!6960 = !DILocation(line: 1452, column: 8, scope: !6947)
!6961 = !DILocation(line: 1452, column: 23, scope: !6947)
!6962 = !DILocation(line: 1453, column: 3, scope: !6947)
!6963 = !DILocation(line: 1456, column: 11, scope: !6910)
!6964 = !DILocation(line: 1456, column: 15, scope: !6910)
!6965 = !DILocation(line: 1456, column: 22, scope: !6910)
!6966 = !DILocation(line: 1456, column: 2, scope: !6910)
!6967 = !DILocation(line: 1458, column: 3, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1456, column: 29)
!6969 = !DILocation(line: 1458, column: 8, scope: !6968)
!6970 = !DILocation(line: 1458, column: 19, scope: !6968)
!6971 = !DILocation(line: 1459, column: 3, scope: !6968)
!6972 = !DILocation(line: 1461, column: 3, scope: !6968)
!6973 = !DILocation(line: 1461, column: 8, scope: !6968)
!6974 = !DILocation(line: 1461, column: 19, scope: !6968)
!6975 = !DILocation(line: 1462, column: 3, scope: !6968)
!6976 = !DILocation(line: 1465, column: 3, scope: !6968)
!6977 = !DILocation(line: 1465, column: 8, scope: !6968)
!6978 = !DILocation(line: 1465, column: 19, scope: !6968)
!6979 = !DILocation(line: 1466, column: 3, scope: !6968)
!6980 = !DILocation(line: 1472, column: 2, scope: !6910)
!6981 = !DILocation(line: 1472, column: 7, scope: !6910)
!6982 = !DILocation(line: 1472, column: 17, scope: !6910)
!6983 = !DILocation(line: 1473, column: 11, scope: !6910)
!6984 = !DILocation(line: 1473, column: 15, scope: !6910)
!6985 = !DILocation(line: 1473, column: 21, scope: !6910)
!6986 = !DILocation(line: 1473, column: 2, scope: !6910)
!6987 = !DILocation(line: 1475, column: 3, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1473, column: 28)
!6989 = !DILocation(line: 1475, column: 8, scope: !6988)
!6990 = !DILocation(line: 1475, column: 21, scope: !6988)
!6991 = !DILocation(line: 1476, column: 3, scope: !6988)
!6992 = !DILocation(line: 1478, column: 3, scope: !6988)
!6993 = !DILocation(line: 1478, column: 8, scope: !6988)
!6994 = !DILocation(line: 1478, column: 21, scope: !6988)
!6995 = !DILocation(line: 1479, column: 3, scope: !6988)
!6996 = !DILocation(line: 1481, column: 3, scope: !6988)
!6997 = !DILocation(line: 1481, column: 8, scope: !6988)
!6998 = !DILocation(line: 1481, column: 21, scope: !6988)
!6999 = !DILocation(line: 1482, column: 3, scope: !6988)
!7000 = !DILocation(line: 1484, column: 3, scope: !6988)
!7001 = !DILocation(line: 1484, column: 8, scope: !6988)
!7002 = !DILocation(line: 1484, column: 21, scope: !6988)
!7003 = !DILocation(line: 1485, column: 3, scope: !6988)
!7004 = !DILocation(line: 1488, column: 3, scope: !6988)
!7005 = !DILocation(line: 1488, column: 8, scope: !6988)
!7006 = !DILocation(line: 1488, column: 21, scope: !6988)
!7007 = !DILocation(line: 1489, column: 3, scope: !6988)
!7008 = !DILocation(line: 1493, column: 11, scope: !6910)
!7009 = !DILocation(line: 1493, column: 15, scope: !6910)
!7010 = !DILocation(line: 1493, column: 21, scope: !6910)
!7011 = !DILocation(line: 1493, column: 2, scope: !6910)
!7012 = !DILocation(line: 1495, column: 3, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 1493, column: 28)
!7014 = !DILocation(line: 1495, column: 8, scope: !7013)
!7015 = !DILocation(line: 1495, column: 21, scope: !7013)
!7016 = !DILocation(line: 1496, column: 3, scope: !7013)
!7017 = !DILocation(line: 1498, column: 3, scope: !7013)
!7018 = !DILocation(line: 1498, column: 8, scope: !7013)
!7019 = !DILocation(line: 1498, column: 21, scope: !7013)
!7020 = !DILocation(line: 1499, column: 3, scope: !7013)
!7021 = !DILocation(line: 1501, column: 3, scope: !7013)
!7022 = !DILocation(line: 1501, column: 8, scope: !7013)
!7023 = !DILocation(line: 1501, column: 21, scope: !7013)
!7024 = !DILocation(line: 1502, column: 3, scope: !7013)
!7025 = !DILocation(line: 1504, column: 3, scope: !7013)
!7026 = !DILocation(line: 1504, column: 8, scope: !7013)
!7027 = !DILocation(line: 1504, column: 21, scope: !7013)
!7028 = !DILocation(line: 1505, column: 3, scope: !7013)
!7029 = !DILocation(line: 1508, column: 3, scope: !7013)
!7030 = !DILocation(line: 1508, column: 8, scope: !7013)
!7031 = !DILocation(line: 1508, column: 21, scope: !7013)
!7032 = !DILocation(line: 1509, column: 3, scope: !7013)
!7033 = !DILocation(line: 1514, column: 2, scope: !6910)
!7034 = distinct !DISubprogram(name: "dib7000p_read_status", scope: !3, file: !3, line: 1576, type: !627, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7035 = !DILocalVariable(name: "fe", arg: 1, scope: !7034, file: !3, line: 1576, type: !464)
!7036 = !DILocation(line: 1576, column: 54, scope: !7034)
!7037 = !DILocalVariable(name: "stat", arg: 2, scope: !7034, file: !3, line: 1576, type: !526)
!7038 = !DILocation(line: 1576, column: 74, scope: !7034)
!7039 = !DILocalVariable(name: "state", scope: !7034, file: !3, line: 1578, type: !4566)
!7040 = !DILocation(line: 1578, column: 25, scope: !7034)
!7041 = !DILocation(line: 1578, column: 33, scope: !7034)
!7042 = !DILocation(line: 1578, column: 37, scope: !7034)
!7043 = !DILocalVariable(name: "lock", scope: !7034, file: !3, line: 1579, type: !328)
!7044 = !DILocation(line: 1579, column: 6, scope: !7034)
!7045 = !DILocation(line: 1579, column: 32, scope: !7034)
!7046 = !DILocation(line: 1579, column: 13, scope: !7034)
!7047 = !DILocation(line: 1581, column: 3, scope: !7034)
!7048 = !DILocation(line: 1581, column: 8, scope: !7034)
!7049 = !DILocation(line: 1583, column: 6, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1583, column: 6)
!7051 = !DILocation(line: 1583, column: 11, scope: !7050)
!7052 = !DILocation(line: 1583, column: 6, scope: !7034)
!7053 = !DILocation(line: 1584, column: 4, scope: !7050)
!7054 = !DILocation(line: 1584, column: 9, scope: !7050)
!7055 = !DILocation(line: 1584, column: 3, scope: !7050)
!7056 = !DILocation(line: 1585, column: 6, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1585, column: 6)
!7058 = !DILocation(line: 1585, column: 11, scope: !7057)
!7059 = !DILocation(line: 1585, column: 6, scope: !7034)
!7060 = !DILocation(line: 1586, column: 4, scope: !7057)
!7061 = !DILocation(line: 1586, column: 9, scope: !7057)
!7062 = !DILocation(line: 1586, column: 3, scope: !7057)
!7063 = !DILocation(line: 1587, column: 6, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1587, column: 6)
!7065 = !DILocation(line: 1587, column: 11, scope: !7064)
!7066 = !DILocation(line: 1587, column: 6, scope: !7034)
!7067 = !DILocation(line: 1588, column: 4, scope: !7064)
!7068 = !DILocation(line: 1588, column: 9, scope: !7064)
!7069 = !DILocation(line: 1588, column: 3, scope: !7064)
!7070 = !DILocation(line: 1589, column: 6, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1589, column: 6)
!7072 = !DILocation(line: 1589, column: 11, scope: !7071)
!7073 = !DILocation(line: 1589, column: 6, scope: !7034)
!7074 = !DILocation(line: 1590, column: 4, scope: !7071)
!7075 = !DILocation(line: 1590, column: 9, scope: !7071)
!7076 = !DILocation(line: 1590, column: 3, scope: !7071)
!7077 = !DILocation(line: 1591, column: 7, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1591, column: 6)
!7079 = !DILocation(line: 1591, column: 12, scope: !7078)
!7080 = !DILocation(line: 1591, column: 22, scope: !7078)
!7081 = !DILocation(line: 1591, column: 6, scope: !7034)
!7082 = !DILocation(line: 1592, column: 4, scope: !7078)
!7083 = !DILocation(line: 1592, column: 9, scope: !7078)
!7084 = !DILocation(line: 1592, column: 3, scope: !7078)
!7085 = !DILocation(line: 1594, column: 21, scope: !7034)
!7086 = !DILocation(line: 1594, column: 26, scope: !7034)
!7087 = !DILocation(line: 1594, column: 25, scope: !7034)
!7088 = !DILocation(line: 1594, column: 2, scope: !7034)
!7089 = !DILocation(line: 1596, column: 2, scope: !7034)
!7090 = distinct !DISubprogram(name: "dib7000p_read_ber", scope: !3, file: !3, line: 1599, type: !631, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7091 = !DILocalVariable(name: "fe", arg: 1, scope: !7090, file: !3, line: 1599, type: !464)
!7092 = !DILocation(line: 1599, column: 51, scope: !7090)
!7093 = !DILocalVariable(name: "ber", arg: 2, scope: !7090, file: !3, line: 1599, type: !633)
!7094 = !DILocation(line: 1599, column: 61, scope: !7090)
!7095 = !DILocalVariable(name: "state", scope: !7090, file: !3, line: 1601, type: !4566)
!7096 = !DILocation(line: 1601, column: 25, scope: !7090)
!7097 = !DILocation(line: 1601, column: 33, scope: !7090)
!7098 = !DILocation(line: 1601, column: 37, scope: !7090)
!7099 = !DILocation(line: 1602, column: 29, scope: !7090)
!7100 = !DILocation(line: 1602, column: 10, scope: !7090)
!7101 = !DILocation(line: 1602, column: 41, scope: !7090)
!7102 = !DILocation(line: 1602, column: 69, scope: !7090)
!7103 = !DILocation(line: 1602, column: 50, scope: !7090)
!7104 = !DILocation(line: 1602, column: 48, scope: !7090)
!7105 = !DILocation(line: 1602, column: 3, scope: !7090)
!7106 = !DILocation(line: 1602, column: 7, scope: !7090)
!7107 = !DILocation(line: 1603, column: 2, scope: !7090)
!7108 = distinct !DISubprogram(name: "dib7000p_read_signal_strength", scope: !3, file: !3, line: 1613, type: !636, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7109 = !DILocalVariable(name: "fe", arg: 1, scope: !7108, file: !3, line: 1613, type: !464)
!7110 = !DILocation(line: 1613, column: 63, scope: !7108)
!7111 = !DILocalVariable(name: "strength", arg: 2, scope: !7108, file: !3, line: 1613, type: !638)
!7112 = !DILocation(line: 1613, column: 73, scope: !7108)
!7113 = !DILocalVariable(name: "state", scope: !7108, file: !3, line: 1615, type: !4566)
!7114 = !DILocation(line: 1615, column: 25, scope: !7108)
!7115 = !DILocation(line: 1615, column: 33, scope: !7108)
!7116 = !DILocation(line: 1615, column: 37, scope: !7108)
!7117 = !DILocalVariable(name: "val", scope: !7108, file: !3, line: 1616, type: !328)
!7118 = !DILocation(line: 1616, column: 6, scope: !7108)
!7119 = !DILocation(line: 1616, column: 31, scope: !7108)
!7120 = !DILocation(line: 1616, column: 12, scope: !7108)
!7121 = !DILocation(line: 1617, column: 22, scope: !7108)
!7122 = !DILocation(line: 1617, column: 20, scope: !7108)
!7123 = !DILocation(line: 1617, column: 14, scope: !7108)
!7124 = !DILocation(line: 1617, column: 3, scope: !7108)
!7125 = !DILocation(line: 1617, column: 12, scope: !7108)
!7126 = !DILocation(line: 1618, column: 2, scope: !7108)
!7127 = distinct !DISubprogram(name: "dib7000p_read_snr", scope: !3, file: !3, line: 1654, type: !636, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7128 = !DILocalVariable(name: "fe", arg: 1, scope: !7127, file: !3, line: 1654, type: !464)
!7129 = !DILocation(line: 1654, column: 51, scope: !7127)
!7130 = !DILocalVariable(name: "snr", arg: 2, scope: !7127, file: !3, line: 1654, type: !638)
!7131 = !DILocation(line: 1654, column: 60, scope: !7127)
!7132 = !DILocalVariable(name: "result", scope: !7127, file: !3, line: 1656, type: !331)
!7133 = !DILocation(line: 1656, column: 6, scope: !7127)
!7134 = !DILocation(line: 1658, column: 28, scope: !7127)
!7135 = !DILocation(line: 1658, column: 11, scope: !7127)
!7136 = !DILocation(line: 1658, column: 9, scope: !7127)
!7137 = !DILocation(line: 1660, column: 9, scope: !7127)
!7138 = !DILocation(line: 1660, column: 16, scope: !7127)
!7139 = !DILocation(line: 1660, column: 3, scope: !7127)
!7140 = !DILocation(line: 1660, column: 7, scope: !7127)
!7141 = !DILocation(line: 1661, column: 2, scope: !7127)
!7142 = distinct !DISubprogram(name: "dib7000p_read_unc_blocks", scope: !3, file: !3, line: 1606, type: !631, scopeLine: 1607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7143 = !DILocalVariable(name: "fe", arg: 1, scope: !7142, file: !3, line: 1606, type: !464)
!7144 = !DILocation(line: 1606, column: 58, scope: !7142)
!7145 = !DILocalVariable(name: "unc", arg: 2, scope: !7142, file: !3, line: 1606, type: !633)
!7146 = !DILocation(line: 1606, column: 68, scope: !7142)
!7147 = !DILocalVariable(name: "state", scope: !7142, file: !3, line: 1608, type: !4566)
!7148 = !DILocation(line: 1608, column: 25, scope: !7142)
!7149 = !DILocation(line: 1608, column: 33, scope: !7142)
!7150 = !DILocation(line: 1608, column: 37, scope: !7142)
!7151 = !DILocation(line: 1609, column: 28, scope: !7142)
!7152 = !DILocation(line: 1609, column: 9, scope: !7142)
!7153 = !DILocation(line: 1609, column: 3, scope: !7142)
!7154 = !DILocation(line: 1609, column: 7, scope: !7142)
!7155 = !DILocation(line: 1610, column: 2, scope: !7142)
!7156 = distinct !DISubprogram(name: "dib7000p_set_power_mode", scope: !3, file: !3, line: 251, type: !7157, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7157 = !DISubroutineType(types: !7158)
!7158 = !{!327, !4566, !297}
!7159 = !DILocalVariable(name: "state", arg: 1, scope: !7156, file: !3, line: 251, type: !4566)
!7160 = !DILocation(line: 251, column: 59, scope: !7156)
!7161 = !DILocalVariable(name: "mode", arg: 2, scope: !7156, file: !3, line: 251, type: !297)
!7162 = !DILocation(line: 251, column: 91, scope: !7156)
!7163 = !DILocalVariable(name: "reg_774", scope: !7156, file: !3, line: 254, type: !328)
!7164 = !DILocation(line: 254, column: 6, scope: !7156)
!7165 = !DILocalVariable(name: "reg_775", scope: !7156, file: !3, line: 254, type: !328)
!7166 = !DILocation(line: 254, column: 24, scope: !7156)
!7167 = !DILocalVariable(name: "reg_776", scope: !7156, file: !3, line: 254, type: !328)
!7168 = !DILocation(line: 254, column: 42, scope: !7156)
!7169 = !DILocalVariable(name: "reg_899", scope: !7156, file: !3, line: 254, type: !328)
!7170 = !DILocation(line: 254, column: 60, scope: !7156)
!7171 = !DILocalVariable(name: "reg_1280", scope: !7156, file: !3, line: 254, type: !328)
!7172 = !DILocation(line: 254, column: 78, scope: !7156)
!7173 = !DILocation(line: 254, column: 120, scope: !7156)
!7174 = !DILocation(line: 254, column: 101, scope: !7156)
!7175 = !DILocation(line: 254, column: 133, scope: !7156)
!7176 = !DILocation(line: 254, column: 98, scope: !7156)
!7177 = !DILocation(line: 254, column: 89, scope: !7156)
!7178 = !DILocation(line: 257, column: 10, scope: !7156)
!7179 = !DILocation(line: 257, column: 2, scope: !7156)
!7180 = !DILocation(line: 260, column: 11, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 257, column: 16)
!7182 = !DILocation(line: 261, column: 11, scope: !7181)
!7183 = !DILocation(line: 262, column: 11, scope: !7181)
!7184 = !DILocation(line: 263, column: 11, scope: !7181)
!7185 = !DILocation(line: 264, column: 7, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 264, column: 7)
!7187 = !DILocation(line: 264, column: 14, scope: !7186)
!7188 = !DILocation(line: 264, column: 22, scope: !7186)
!7189 = !DILocation(line: 264, column: 7, scope: !7181)
!7190 = !DILocation(line: 265, column: 13, scope: !7186)
!7191 = !DILocation(line: 265, column: 4, scope: !7186)
!7192 = !DILocation(line: 267, column: 13, scope: !7186)
!7193 = !DILocation(line: 268, column: 3, scope: !7181)
!7194 = !DILocation(line: 272, column: 11, scope: !7181)
!7195 = !DILocation(line: 274, column: 11, scope: !7181)
!7196 = !DILocation(line: 276, column: 7, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 276, column: 7)
!7198 = !DILocation(line: 276, column: 14, scope: !7197)
!7199 = !DILocation(line: 276, column: 22, scope: !7197)
!7200 = !DILocation(line: 276, column: 7, scope: !7181)
!7201 = !DILocation(line: 277, column: 13, scope: !7197)
!7202 = !DILocation(line: 277, column: 4, scope: !7197)
!7203 = !DILocation(line: 278, column: 12, scope: !7181)
!7204 = !DILocation(line: 278, column: 3, scope: !7181)
!7205 = !DILocation(line: 283, column: 7, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7181, file: !3, line: 283, column: 7)
!7207 = !DILocation(line: 283, column: 14, scope: !7206)
!7208 = !DILocation(line: 283, column: 22, scope: !7206)
!7209 = !DILocation(line: 283, column: 7, scope: !7181)
!7210 = !DILocation(line: 284, column: 13, scope: !7206)
!7211 = !DILocation(line: 284, column: 4, scope: !7206)
!7212 = !DILocation(line: 286, column: 13, scope: !7206)
!7213 = !DILocation(line: 287, column: 3, scope: !7181)
!7214 = !DILocation(line: 292, column: 22, scope: !7156)
!7215 = !DILocation(line: 292, column: 34, scope: !7156)
!7216 = !DILocation(line: 292, column: 2, scope: !7156)
!7217 = !DILocation(line: 293, column: 22, scope: !7156)
!7218 = !DILocation(line: 293, column: 34, scope: !7156)
!7219 = !DILocation(line: 293, column: 2, scope: !7156)
!7220 = !DILocation(line: 294, column: 22, scope: !7156)
!7221 = !DILocation(line: 294, column: 34, scope: !7156)
!7222 = !DILocation(line: 294, column: 2, scope: !7156)
!7223 = !DILocation(line: 295, column: 22, scope: !7156)
!7224 = !DILocation(line: 295, column: 35, scope: !7156)
!7225 = !DILocation(line: 295, column: 2, scope: !7156)
!7226 = !DILocation(line: 296, column: 6, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 296, column: 6)
!7228 = !DILocation(line: 296, column: 13, scope: !7227)
!7229 = !DILocation(line: 296, column: 21, scope: !7227)
!7230 = !DILocation(line: 296, column: 6, scope: !7156)
!7231 = !DILocation(line: 297, column: 23, scope: !7227)
!7232 = !DILocation(line: 297, column: 35, scope: !7227)
!7233 = !DILocation(line: 297, column: 3, scope: !7227)
!7234 = !DILocation(line: 299, column: 2, scope: !7156)
!7235 = distinct !DISubprogram(name: "dib7000p_set_adc_state", scope: !3, file: !3, line: 302, type: !7236, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{null, !4566, !302}
!7238 = !DILocalVariable(name: "state", arg: 1, scope: !7235, file: !3, line: 302, type: !4566)
!7239 = !DILocation(line: 302, column: 59, scope: !7235)
!7240 = !DILocalVariable(name: "no", arg: 2, scope: !7235, file: !3, line: 302, type: !302)
!7241 = !DILocation(line: 302, column: 90, scope: !7235)
!7242 = !DILocalVariable(name: "reg_908", scope: !7235, file: !3, line: 304, type: !328)
!7243 = !DILocation(line: 304, column: 6, scope: !7235)
!7244 = !DILocalVariable(name: "reg_909", scope: !7235, file: !3, line: 304, type: !328)
!7245 = !DILocation(line: 304, column: 19, scope: !7235)
!7246 = !DILocalVariable(name: "reg", scope: !7235, file: !3, line: 305, type: !328)
!7247 = !DILocation(line: 305, column: 6, scope: !7235)
!7248 = !DILocation(line: 307, column: 6, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 307, column: 6)
!7250 = !DILocation(line: 307, column: 13, scope: !7249)
!7251 = !DILocation(line: 307, column: 21, scope: !7249)
!7252 = !DILocation(line: 307, column: 6, scope: !7235)
!7253 = !DILocation(line: 308, column: 32, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 307, column: 33)
!7255 = !DILocation(line: 308, column: 13, scope: !7254)
!7256 = !DILocation(line: 308, column: 11, scope: !7254)
!7257 = !DILocation(line: 309, column: 32, scope: !7254)
!7258 = !DILocation(line: 309, column: 13, scope: !7254)
!7259 = !DILocation(line: 309, column: 11, scope: !7254)
!7260 = !DILocation(line: 310, column: 2, scope: !7254)
!7261 = !DILocation(line: 312, column: 10, scope: !7235)
!7262 = !DILocation(line: 312, column: 2, scope: !7235)
!7263 = !DILocation(line: 314, column: 7, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 314, column: 7)
!7265 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 312, column: 14)
!7266 = !DILocation(line: 314, column: 14, scope: !7264)
!7267 = !DILocation(line: 314, column: 22, scope: !7264)
!7268 = !DILocation(line: 314, column: 7, scope: !7265)
!7269 = !DILocation(line: 315, column: 29, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 314, column: 34)
!7271 = !DILocation(line: 315, column: 10, scope: !7270)
!7272 = !DILocation(line: 315, column: 8, scope: !7270)
!7273 = !DILocation(line: 317, column: 24, scope: !7270)
!7274 = !DILocation(line: 317, column: 37, scope: !7270)
!7275 = !DILocation(line: 317, column: 41, scope: !7270)
!7276 = !DILocation(line: 317, column: 52, scope: !7270)
!7277 = !DILocation(line: 317, column: 4, scope: !7270)
!7278 = !DILocation(line: 319, column: 29, scope: !7270)
!7279 = !DILocation(line: 319, column: 10, scope: !7270)
!7280 = !DILocation(line: 319, column: 8, scope: !7270)
!7281 = !DILocation(line: 320, column: 4, scope: !7270)
!7282 = !DILocation(line: 321, column: 24, scope: !7270)
!7283 = !DILocation(line: 321, column: 37, scope: !7270)
!7284 = !DILocation(line: 321, column: 41, scope: !7270)
!7285 = !DILocation(line: 321, column: 4, scope: !7270)
!7286 = !DILocation(line: 323, column: 29, scope: !7270)
!7287 = !DILocation(line: 323, column: 10, scope: !7270)
!7288 = !DILocation(line: 323, column: 40, scope: !7270)
!7289 = !DILocation(line: 323, column: 8, scope: !7270)
!7290 = !DILocation(line: 324, column: 24, scope: !7270)
!7291 = !DILocation(line: 324, column: 35, scope: !7270)
!7292 = !DILocation(line: 324, column: 39, scope: !7270)
!7293 = !DILocation(line: 324, column: 51, scope: !7270)
!7294 = !DILocation(line: 324, column: 63, scope: !7270)
!7295 = !DILocation(line: 324, column: 4, scope: !7270)
!7296 = !DILocation(line: 325, column: 3, scope: !7270)
!7297 = !DILocation(line: 326, column: 12, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7264, file: !3, line: 325, column: 10)
!7299 = !DILocation(line: 327, column: 24, scope: !7298)
!7300 = !DILocation(line: 327, column: 36, scope: !7298)
!7301 = !DILocation(line: 327, column: 4, scope: !7298)
!7302 = !DILocation(line: 328, column: 12, scope: !7298)
!7303 = !DILocation(line: 330, column: 3, scope: !7265)
!7304 = !DILocation(line: 333, column: 7, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7265, file: !3, line: 333, column: 7)
!7306 = !DILocation(line: 333, column: 14, scope: !7305)
!7307 = !DILocation(line: 333, column: 22, scope: !7305)
!7308 = !DILocation(line: 333, column: 7, scope: !7265)
!7309 = !DILocation(line: 334, column: 29, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 333, column: 34)
!7311 = !DILocation(line: 334, column: 10, scope: !7310)
!7312 = !DILocation(line: 334, column: 8, scope: !7310)
!7313 = !DILocation(line: 335, column: 24, scope: !7310)
!7314 = !DILocation(line: 335, column: 38, scope: !7310)
!7315 = !DILocation(line: 335, column: 42, scope: !7310)
!7316 = !DILocation(line: 335, column: 55, scope: !7310)
!7317 = !DILocation(line: 335, column: 37, scope: !7310)
!7318 = !DILocation(line: 335, column: 4, scope: !7310)
!7319 = !DILocation(line: 336, column: 3, scope: !7310)
!7320 = !DILocation(line: 337, column: 12, scope: !7305)
!7321 = !DILocation(line: 338, column: 3, scope: !7265)
!7322 = !DILocation(line: 341, column: 11, scope: !7265)
!7323 = !DILocation(line: 342, column: 11, scope: !7265)
!7324 = !DILocation(line: 343, column: 3, scope: !7265)
!7325 = !DILocation(line: 346, column: 11, scope: !7265)
!7326 = !DILocation(line: 347, column: 11, scope: !7265)
!7327 = !DILocation(line: 348, column: 3, scope: !7265)
!7328 = !DILocation(line: 351, column: 11, scope: !7265)
!7329 = !DILocation(line: 352, column: 3, scope: !7265)
!7330 = !DILocation(line: 355, column: 11, scope: !7265)
!7331 = !DILocation(line: 356, column: 3, scope: !7265)
!7332 = !DILocation(line: 359, column: 3, scope: !7265)
!7333 = !DILocation(line: 364, column: 14, scope: !7235)
!7334 = !DILocation(line: 364, column: 21, scope: !7235)
!7335 = !DILocation(line: 364, column: 25, scope: !7235)
!7336 = !DILocation(line: 364, column: 49, scope: !7235)
!7337 = !DILocation(line: 364, column: 54, scope: !7235)
!7338 = !DILocation(line: 364, column: 10, scope: !7235)
!7339 = !DILocation(line: 365, column: 14, scope: !7235)
!7340 = !DILocation(line: 365, column: 21, scope: !7235)
!7341 = !DILocation(line: 365, column: 25, scope: !7235)
!7342 = !DILocation(line: 365, column: 47, scope: !7235)
!7343 = !DILocation(line: 365, column: 52, scope: !7235)
!7344 = !DILocation(line: 365, column: 10, scope: !7235)
!7345 = !DILocation(line: 367, column: 6, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 367, column: 6)
!7347 = !DILocation(line: 367, column: 13, scope: !7346)
!7348 = !DILocation(line: 367, column: 21, scope: !7346)
!7349 = !DILocation(line: 367, column: 6, scope: !7235)
!7350 = !DILocation(line: 368, column: 23, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7346, file: !3, line: 367, column: 33)
!7352 = !DILocation(line: 368, column: 35, scope: !7351)
!7353 = !DILocation(line: 368, column: 3, scope: !7351)
!7354 = !DILocation(line: 369, column: 23, scope: !7351)
!7355 = !DILocation(line: 369, column: 35, scope: !7351)
!7356 = !DILocation(line: 369, column: 3, scope: !7351)
!7357 = !DILocation(line: 370, column: 2, scope: !7351)
!7358 = !DILocation(line: 371, column: 1, scope: !7235)
!7359 = distinct !DISubprogram(name: "dib7000p_sad_calib", scope: !3, file: !3, line: 396, type: !6205, scopeLine: 397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7360 = !DILocalVariable(name: "state", arg: 1, scope: !7359, file: !3, line: 396, type: !4566)
!7361 = !DILocation(line: 396, column: 54, scope: !7359)
!7362 = !DILocation(line: 399, column: 22, scope: !7359)
!7363 = !DILocation(line: 399, column: 2, scope: !7359)
!7364 = !DILocation(line: 401, column: 6, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7359, file: !3, line: 401, column: 6)
!7366 = !DILocation(line: 401, column: 13, scope: !7365)
!7367 = !DILocation(line: 401, column: 21, scope: !7365)
!7368 = !DILocation(line: 401, column: 6, scope: !7359)
!7369 = !DILocation(line: 402, column: 23, scope: !7365)
!7370 = !DILocation(line: 402, column: 3, scope: !7365)
!7371 = !DILocation(line: 404, column: 23, scope: !7365)
!7372 = !DILocation(line: 404, column: 3, scope: !7365)
!7373 = !DILocation(line: 407, column: 22, scope: !7359)
!7374 = !DILocation(line: 407, column: 2, scope: !7359)
!7375 = !DILocation(line: 408, column: 22, scope: !7359)
!7376 = !DILocation(line: 408, column: 2, scope: !7359)
!7377 = !DILocation(line: 410, column: 2, scope: !7359)
!7378 = !DILocation(line: 412, column: 2, scope: !7359)
!7379 = distinct !DISubprogram(name: "dib7000p_set_output_mode", scope: !3, file: !3, line: 172, type: !7380, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7380 = !DISubroutineType(types: !7381)
!7381 = !{!327, !4566, !327}
!7382 = !DILocalVariable(name: "state", arg: 1, scope: !7379, file: !3, line: 172, type: !4566)
!7383 = !DILocation(line: 172, column: 60, scope: !7379)
!7384 = !DILocalVariable(name: "mode", arg: 2, scope: !7379, file: !3, line: 172, type: !327)
!7385 = !DILocation(line: 172, column: 71, scope: !7379)
!7386 = !DILocalVariable(name: "ret", scope: !7379, file: !3, line: 174, type: !327)
!7387 = !DILocation(line: 174, column: 6, scope: !7379)
!7388 = !DILocalVariable(name: "outreg", scope: !7379, file: !3, line: 175, type: !328)
!7389 = !DILocation(line: 175, column: 6, scope: !7379)
!7390 = !DILocalVariable(name: "fifo_threshold", scope: !7379, file: !3, line: 175, type: !328)
!7391 = !DILocation(line: 175, column: 14, scope: !7379)
!7392 = !DILocalVariable(name: "smo_mode", scope: !7379, file: !3, line: 175, type: !328)
!7393 = !DILocation(line: 175, column: 30, scope: !7379)
!7394 = !DILocation(line: 177, column: 9, scope: !7379)
!7395 = !DILocation(line: 178, column: 17, scope: !7379)
!7396 = !DILocation(line: 179, column: 33, scope: !7379)
!7397 = !DILocation(line: 179, column: 14, scope: !7379)
!7398 = !DILocation(line: 179, column: 45, scope: !7379)
!7399 = !DILocation(line: 179, column: 55, scope: !7379)
!7400 = !DILocation(line: 179, column: 13, scope: !7379)
!7401 = !DILocation(line: 179, column: 11, scope: !7379)
!7402 = !DILocation(line: 181, column: 2, scope: !7379)
!7403 = !DILocation(line: 181, column: 2, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7405, file: !3, line: 181, column: 2)
!7405 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 181, column: 2)
!7406 = !DILocation(line: 181, column: 2, scope: !7405)
!7407 = !DILocation(line: 183, column: 10, scope: !7379)
!7408 = !DILocation(line: 183, column: 2, scope: !7379)
!7409 = !DILocation(line: 185, column: 10, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 183, column: 16)
!7411 = !DILocation(line: 186, column: 3, scope: !7410)
!7412 = !DILocation(line: 188, column: 10, scope: !7410)
!7413 = !DILocation(line: 189, column: 3, scope: !7410)
!7414 = !DILocation(line: 191, column: 10, scope: !7410)
!7415 = !DILocation(line: 192, column: 3, scope: !7410)
!7416 = !DILocation(line: 194, column: 7, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 194, column: 7)
!7418 = !DILocation(line: 194, column: 14, scope: !7417)
!7419 = !DILocation(line: 194, column: 18, scope: !7417)
!7420 = !DILocation(line: 194, column: 7, scope: !7410)
!7421 = !DILocation(line: 195, column: 11, scope: !7417)
!7422 = !DILocation(line: 195, column: 4, scope: !7417)
!7423 = !DILocation(line: 197, column: 11, scope: !7417)
!7424 = !DILocation(line: 198, column: 3, scope: !7410)
!7425 = !DILocation(line: 200, column: 12, scope: !7410)
!7426 = !DILocation(line: 201, column: 18, scope: !7410)
!7427 = !DILocation(line: 202, column: 10, scope: !7410)
!7428 = !DILocation(line: 203, column: 3, scope: !7410)
!7429 = !DILocation(line: 205, column: 10, scope: !7410)
!7430 = !DILocation(line: 206, column: 3, scope: !7410)
!7431 = !DILocation(line: 208, column: 10, scope: !7410)
!7432 = !DILocation(line: 209, column: 3, scope: !7410)
!7433 = !DILocation(line: 211, column: 3, scope: !7410)
!7434 = !DILocation(line: 211, column: 3, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 211, column: 3)
!7436 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 211, column: 3)
!7437 = !DILocation(line: 211, column: 3, scope: !7436)
!7438 = !DILocation(line: 212, column: 3, scope: !7410)
!7439 = !DILocation(line: 215, column: 6, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 215, column: 6)
!7441 = !DILocation(line: 215, column: 13, scope: !7440)
!7442 = !DILocation(line: 215, column: 17, scope: !7440)
!7443 = !DILocation(line: 215, column: 6, scope: !7379)
!7444 = !DILocation(line: 216, column: 12, scope: !7440)
!7445 = !DILocation(line: 216, column: 3, scope: !7440)
!7446 = !DILocation(line: 218, column: 29, scope: !7379)
!7447 = !DILocation(line: 218, column: 41, scope: !7379)
!7448 = !DILocation(line: 218, column: 9, scope: !7379)
!7449 = !DILocation(line: 218, column: 6, scope: !7379)
!7450 = !DILocation(line: 219, column: 29, scope: !7379)
!7451 = !DILocation(line: 219, column: 41, scope: !7379)
!7452 = !DILocation(line: 219, column: 9, scope: !7379)
!7453 = !DILocation(line: 219, column: 6, scope: !7379)
!7454 = !DILocation(line: 220, column: 6, scope: !7455)
!7455 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 220, column: 6)
!7456 = !DILocation(line: 220, column: 13, scope: !7455)
!7457 = !DILocation(line: 220, column: 21, scope: !7455)
!7458 = !DILocation(line: 220, column: 6, scope: !7379)
!7459 = !DILocation(line: 221, column: 30, scope: !7455)
!7460 = !DILocation(line: 221, column: 43, scope: !7455)
!7461 = !DILocation(line: 221, column: 10, scope: !7455)
!7462 = !DILocation(line: 221, column: 7, scope: !7455)
!7463 = !DILocation(line: 221, column: 3, scope: !7455)
!7464 = !DILocation(line: 223, column: 9, scope: !7379)
!7465 = !DILocation(line: 223, column: 2, scope: !7379)
!7466 = distinct !DISubprogram(name: "dib7000p_agc_startup", scope: !3, file: !3, line: 837, type: !511, scopeLine: 838, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7467 = !DILocalVariable(name: "demod", arg: 1, scope: !7466, file: !3, line: 837, type: !464)
!7468 = !DILocation(line: 837, column: 54, scope: !7466)
!7469 = !DILocalVariable(name: "ch", scope: !7466, file: !3, line: 839, type: !546)
!7470 = !DILocation(line: 839, column: 34, scope: !7466)
!7471 = !DILocation(line: 839, column: 40, scope: !7466)
!7472 = !DILocation(line: 839, column: 47, scope: !7466)
!7473 = !DILocalVariable(name: "state", scope: !7466, file: !3, line: 840, type: !4566)
!7474 = !DILocation(line: 840, column: 25, scope: !7466)
!7475 = !DILocation(line: 840, column: 33, scope: !7466)
!7476 = !DILocation(line: 840, column: 40, scope: !7466)
!7477 = !DILocalVariable(name: "ret", scope: !7466, file: !3, line: 841, type: !327)
!7478 = !DILocation(line: 841, column: 6, scope: !7466)
!7479 = !DILocalVariable(name: "agc_state", scope: !7466, file: !3, line: 842, type: !744)
!7480 = !DILocation(line: 842, column: 6, scope: !7466)
!7481 = !DILocation(line: 842, column: 19, scope: !7466)
!7482 = !DILocation(line: 842, column: 26, scope: !7466)
!7483 = !DILocalVariable(name: "agc_split", scope: !7466, file: !3, line: 843, type: !318)
!7484 = !DILocation(line: 843, column: 5, scope: !7466)
!7485 = !DILocalVariable(name: "reg", scope: !7466, file: !3, line: 844, type: !328)
!7486 = !DILocation(line: 844, column: 6, scope: !7466)
!7487 = !DILocalVariable(name: "upd_demod_gain_period", scope: !7466, file: !3, line: 845, type: !331)
!7488 = !DILocation(line: 845, column: 6, scope: !7466)
!7489 = !DILocalVariable(name: "frequency_offset", scope: !7466, file: !3, line: 846, type: !325)
!7490 = !DILocation(line: 846, column: 6, scope: !7466)
!7491 = !DILocation(line: 848, column: 10, scope: !7466)
!7492 = !DILocation(line: 848, column: 17, scope: !7466)
!7493 = !DILocation(line: 848, column: 2, scope: !7466)
!7494 = !DILocation(line: 850, column: 27, scope: !7495)
!7495 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 848, column: 28)
!7496 = !DILocation(line: 850, column: 3, scope: !7495)
!7497 = !DILocation(line: 851, column: 7, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 851, column: 7)
!7499 = !DILocation(line: 851, column: 14, scope: !7498)
!7500 = !DILocation(line: 851, column: 22, scope: !7498)
!7501 = !DILocation(line: 851, column: 7, scope: !7495)
!7502 = !DILocation(line: 852, column: 29, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 851, column: 34)
!7504 = !DILocation(line: 852, column: 10, scope: !7503)
!7505 = !DILocation(line: 852, column: 43, scope: !7503)
!7506 = !DILocation(line: 852, column: 8, scope: !7503)
!7507 = !DILocation(line: 853, column: 24, scope: !7503)
!7508 = !DILocation(line: 853, column: 38, scope: !7503)
!7509 = !DILocation(line: 853, column: 60, scope: !7503)
!7510 = !DILocation(line: 853, column: 4, scope: !7503)
!7511 = !DILocation(line: 854, column: 24, scope: !7503)
!7512 = !DILocation(line: 854, column: 38, scope: !7503)
!7513 = !DILocation(line: 854, column: 42, scope: !7503)
!7514 = !DILocation(line: 854, column: 58, scope: !7503)
!7515 = !DILocation(line: 854, column: 80, scope: !7503)
!7516 = !DILocation(line: 854, column: 87, scope: !7503)
!7517 = !DILocation(line: 854, column: 54, scope: !7503)
!7518 = !DILocation(line: 854, column: 4, scope: !7503)
!7519 = !DILocation(line: 857, column: 29, scope: !7503)
!7520 = !DILocation(line: 857, column: 10, scope: !7503)
!7521 = !DILocation(line: 857, column: 8, scope: !7503)
!7522 = !DILocation(line: 858, column: 24, scope: !7503)
!7523 = !DILocation(line: 858, column: 39, scope: !7503)
!7524 = !DILocation(line: 858, column: 43, scope: !7503)
!7525 = !DILocation(line: 858, column: 52, scope: !7503)
!7526 = !DILocation(line: 858, column: 38, scope: !7503)
!7527 = !DILocation(line: 858, column: 4, scope: !7503)
!7528 = !DILocation(line: 859, column: 3, scope: !7503)
!7529 = !DILocation(line: 860, column: 27, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 859, column: 10)
!7531 = !DILocation(line: 860, column: 4, scope: !7530)
!7532 = !DILocation(line: 861, column: 25, scope: !7530)
!7533 = !DILocation(line: 861, column: 4, scope: !7530)
!7534 = !DILocation(line: 864, column: 31, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 864, column: 7)
!7536 = !DILocation(line: 864, column: 38, scope: !7535)
!7537 = !DILocation(line: 864, column: 7, scope: !7535)
!7538 = !DILocation(line: 864, column: 79, scope: !7535)
!7539 = !DILocation(line: 864, column: 7, scope: !7495)
!7540 = !DILocation(line: 865, column: 4, scope: !7535)
!7541 = !DILocation(line: 867, column: 7, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 867, column: 7)
!7543 = !DILocation(line: 867, column: 14, scope: !7542)
!7544 = !DILocation(line: 867, column: 18, scope: !7542)
!7545 = !DILocation(line: 867, column: 28, scope: !7542)
!7546 = !DILocation(line: 867, column: 7, scope: !7495)
!7547 = !DILocalVariable(name: "frequency_tuner", scope: !7548, file: !3, line: 868, type: !331)
!7548 = distinct !DILexicalBlock(scope: !7542, file: !3, line: 867, column: 43)
!7549 = !DILocation(line: 868, column: 8, scope: !7548)
!7550 = !DILocation(line: 870, column: 4, scope: !7548)
!7551 = !DILocation(line: 870, column: 11, scope: !7548)
!7552 = !DILocation(line: 870, column: 15, scope: !7548)
!7553 = !DILocation(line: 870, column: 25, scope: !7548)
!7554 = !DILocation(line: 870, column: 39, scope: !7548)
!7555 = !DILocation(line: 871, column: 28, scope: !7548)
!7556 = !DILocation(line: 871, column: 44, scope: !7548)
!7557 = !DILocation(line: 871, column: 53, scope: !7548)
!7558 = !DILocation(line: 871, column: 57, scope: !7548)
!7559 = !DILocation(line: 871, column: 67, scope: !7548)
!7560 = !DILocation(line: 871, column: 51, scope: !7548)
!7561 = !DILocation(line: 871, column: 21, scope: !7548)
!7562 = !DILocation(line: 872, column: 3, scope: !7548)
!7563 = !DILocation(line: 874, column: 24, scope: !7564)
!7564 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 874, column: 7)
!7565 = !DILocation(line: 874, column: 31, scope: !7564)
!7566 = !DILocation(line: 874, column: 7, scope: !7564)
!7567 = !DILocation(line: 874, column: 49, scope: !7564)
!7568 = !DILocation(line: 874, column: 7, scope: !7495)
!7569 = !DILocation(line: 875, column: 4, scope: !7564)
!7570 = !DILocation(line: 877, column: 7, scope: !7495)
!7571 = !DILocation(line: 878, column: 5, scope: !7495)
!7572 = !DILocation(line: 878, column: 15, scope: !7495)
!7573 = !DILocation(line: 879, column: 3, scope: !7495)
!7574 = !DILocation(line: 882, column: 7, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 882, column: 7)
!7576 = !DILocation(line: 882, column: 14, scope: !7575)
!7577 = !DILocation(line: 882, column: 18, scope: !7575)
!7578 = !DILocation(line: 882, column: 7, scope: !7495)
!7579 = !DILocation(line: 883, column: 4, scope: !7575)
!7580 = !DILocation(line: 883, column: 11, scope: !7575)
!7581 = !DILocation(line: 883, column: 15, scope: !7575)
!7582 = !DILocation(line: 883, column: 28, scope: !7575)
!7583 = !DILocation(line: 883, column: 35, scope: !7575)
!7584 = !DILocation(line: 885, column: 23, scope: !7495)
!7585 = !DILocation(line: 885, column: 3, scope: !7495)
!7586 = !DILocation(line: 886, column: 8, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 886, column: 7)
!7588 = !DILocation(line: 886, column: 15, scope: !7587)
!7589 = !DILocation(line: 886, column: 28, scope: !7587)
!7590 = !DILocation(line: 886, column: 7, scope: !7495)
!7591 = !DILocation(line: 889, column: 24, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 886, column: 51)
!7593 = !DILocation(line: 889, column: 37, scope: !7592)
!7594 = !DILocation(line: 889, column: 44, scope: !7592)
!7595 = !DILocation(line: 889, column: 57, scope: !7592)
!7596 = !DILocation(line: 889, column: 65, scope: !7592)
!7597 = !DILocation(line: 889, column: 75, scope: !7592)
!7598 = !DILocation(line: 889, column: 82, scope: !7592)
!7599 = !DILocation(line: 889, column: 95, scope: !7592)
!7600 = !DILocation(line: 889, column: 105, scope: !7592)
!7601 = !DILocation(line: 889, column: 72, scope: !7592)
!7602 = !DILocation(line: 889, column: 111, scope: !7592)
!7603 = !DILocation(line: 889, column: 36, scope: !7592)
!7604 = !DILocation(line: 889, column: 4, scope: !7592)
!7605 = !DILocation(line: 890, column: 6, scope: !7592)
!7606 = !DILocation(line: 890, column: 16, scope: !7592)
!7607 = !DILocation(line: 891, column: 8, scope: !7592)
!7608 = !DILocation(line: 892, column: 3, scope: !7592)
!7609 = !DILocation(line: 894, column: 6, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 892, column: 10)
!7611 = !DILocation(line: 894, column: 17, scope: !7610)
!7612 = !DILocation(line: 896, column: 8, scope: !7610)
!7613 = !DILocation(line: 899, column: 24, scope: !7495)
!7614 = !DILocation(line: 899, column: 3, scope: !7495)
!7615 = !DILocation(line: 900, column: 3, scope: !7495)
!7616 = !DILocation(line: 903, column: 23, scope: !7495)
!7617 = !DILocation(line: 903, column: 34, scope: !7495)
!7618 = !DILocation(line: 903, column: 41, scope: !7495)
!7619 = !DILocation(line: 903, column: 54, scope: !7495)
!7620 = !DILocation(line: 903, column: 60, scope: !7495)
!7621 = !DILocation(line: 903, column: 3, scope: !7495)
!7622 = !DILocation(line: 904, column: 23, scope: !7495)
!7623 = !DILocation(line: 904, column: 36, scope: !7495)
!7624 = !DILocation(line: 904, column: 43, scope: !7495)
!7625 = !DILocation(line: 904, column: 56, scope: !7495)
!7626 = !DILocation(line: 904, column: 64, scope: !7495)
!7627 = !DILocation(line: 904, column: 71, scope: !7495)
!7628 = !DILocation(line: 904, column: 35, scope: !7495)
!7629 = !DILocation(line: 904, column: 3, scope: !7495)
!7630 = !DILocation(line: 905, column: 5, scope: !7495)
!7631 = !DILocation(line: 905, column: 15, scope: !7495)
!7632 = !DILocation(line: 906, column: 7, scope: !7495)
!7633 = !DILocation(line: 907, column: 3, scope: !7495)
!7634 = !DILocation(line: 910, column: 39, scope: !7495)
!7635 = !DILocation(line: 910, column: 20, scope: !7495)
!7636 = !DILocation(line: 910, column: 15, scope: !7495)
!7637 = !DILocation(line: 910, column: 13, scope: !7495)
!7638 = !DILocation(line: 911, column: 23, scope: !7495)
!7639 = !DILocation(line: 911, column: 53, scope: !7495)
!7640 = !DILocation(line: 911, column: 34, scope: !7495)
!7641 = !DILocation(line: 911, column: 3, scope: !7495)
!7642 = !DILocation(line: 913, column: 23, scope: !7495)
!7643 = !DILocation(line: 913, column: 34, scope: !7495)
!7644 = !DILocation(line: 913, column: 41, scope: !7495)
!7645 = !DILocation(line: 913, column: 54, scope: !7495)
!7646 = !DILocation(line: 913, column: 3, scope: !7495)
!7647 = !DILocation(line: 914, column: 23, scope: !7495)
!7648 = !DILocation(line: 914, column: 36, scope: !7495)
!7649 = !DILocation(line: 914, column: 43, scope: !7495)
!7650 = !DILocation(line: 914, column: 56, scope: !7495)
!7651 = !DILocation(line: 914, column: 64, scope: !7495)
!7652 = !DILocation(line: 914, column: 74, scope: !7495)
!7653 = !DILocation(line: 914, column: 81, scope: !7495)
!7654 = !DILocation(line: 914, column: 94, scope: !7495)
!7655 = !DILocation(line: 914, column: 104, scope: !7495)
!7656 = !DILocation(line: 914, column: 71, scope: !7495)
!7657 = !DILocation(line: 914, column: 112, scope: !7495)
!7658 = !DILocation(line: 914, column: 110, scope: !7495)
!7659 = !DILocation(line: 914, column: 35, scope: !7495)
!7660 = !DILocation(line: 914, column: 3, scope: !7495)
!7661 = !DILocation(line: 916, column: 24, scope: !7495)
!7662 = !DILocation(line: 916, column: 3, scope: !7495)
!7663 = !DILocation(line: 918, column: 3, scope: !7495)
!7664 = !DILocation(line: 918, column: 3, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 918, column: 3)
!7666 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 918, column: 3)
!7667 = !DILocation(line: 918, column: 3, scope: !7666)
!7668 = !DILocation(line: 920, column: 5, scope: !7495)
!7669 = !DILocation(line: 920, column: 15, scope: !7495)
!7670 = !DILocation(line: 921, column: 7, scope: !7495)
!7671 = !DILocation(line: 922, column: 3, scope: !7495)
!7672 = !DILocation(line: 925, column: 7, scope: !7495)
!7673 = !DILocation(line: 927, column: 27, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 927, column: 7)
!7675 = !DILocation(line: 927, column: 7, scope: !7674)
!7676 = !DILocation(line: 927, column: 7, scope: !7495)
!7677 = !DILocation(line: 928, column: 8, scope: !7674)
!7678 = !DILocation(line: 928, column: 4, scope: !7674)
!7679 = !DILocation(line: 930, column: 6, scope: !7674)
!7680 = !DILocation(line: 930, column: 16, scope: !7674)
!7681 = !DILocation(line: 931, column: 3, scope: !7495)
!7682 = !DILocation(line: 934, column: 7, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7495, file: !3, line: 934, column: 7)
!7684 = !DILocation(line: 934, column: 14, scope: !7683)
!7685 = !DILocation(line: 934, column: 18, scope: !7683)
!7686 = !DILocation(line: 934, column: 7, scope: !7495)
!7687 = !DILocation(line: 935, column: 4, scope: !7683)
!7688 = !DILocation(line: 935, column: 11, scope: !7683)
!7689 = !DILocation(line: 935, column: 15, scope: !7683)
!7690 = !DILocation(line: 935, column: 28, scope: !7683)
!7691 = !DILocation(line: 935, column: 35, scope: !7683)
!7692 = !DILocation(line: 936, column: 5, scope: !7495)
!7693 = !DILocation(line: 936, column: 15, scope: !7495)
!7694 = !DILocation(line: 937, column: 3, scope: !7495)
!7695 = !DILocation(line: 939, column: 3, scope: !7495)
!7696 = !DILocation(line: 941, column: 9, scope: !7466)
!7697 = !DILocation(line: 941, column: 2, scope: !7466)
!7698 = !DILocation(line: 942, column: 1, scope: !7466)
!7699 = distinct !DISubprogram(name: "dib7000p_autosearch_start", scope: !3, file: !3, line: 1130, type: !511, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7700 = !DILocalVariable(name: "demod", arg: 1, scope: !7699, file: !3, line: 1130, type: !464)
!7701 = !DILocation(line: 1130, column: 59, scope: !7699)
!7702 = !DILocalVariable(name: "ch", scope: !7699, file: !3, line: 1132, type: !546)
!7703 = !DILocation(line: 1132, column: 34, scope: !7699)
!7704 = !DILocation(line: 1132, column: 40, scope: !7699)
!7705 = !DILocation(line: 1132, column: 47, scope: !7699)
!7706 = !DILocalVariable(name: "state", scope: !7699, file: !3, line: 1133, type: !4566)
!7707 = !DILocation(line: 1133, column: 25, scope: !7699)
!7708 = !DILocation(line: 1133, column: 33, scope: !7699)
!7709 = !DILocation(line: 1133, column: 40, scope: !7699)
!7710 = !DILocalVariable(name: "schan", scope: !7699, file: !3, line: 1134, type: !547)
!7711 = !DILocation(line: 1134, column: 33, scope: !7699)
!7712 = !DILocalVariable(name: "value", scope: !7699, file: !3, line: 1135, type: !331)
!7713 = !DILocation(line: 1135, column: 6, scope: !7699)
!7714 = !DILocalVariable(name: "factor", scope: !7699, file: !3, line: 1135, type: !331)
!7715 = !DILocation(line: 1135, column: 13, scope: !7699)
!7716 = !DILocalVariable(name: "internal", scope: !7699, file: !3, line: 1136, type: !331)
!7717 = !DILocation(line: 1136, column: 6, scope: !7699)
!7718 = !DILocation(line: 1136, column: 44, scope: !7699)
!7719 = !DILocation(line: 1136, column: 17, scope: !7699)
!7720 = !DILocation(line: 1138, column: 11, scope: !7699)
!7721 = !DILocation(line: 1138, column: 10, scope: !7699)
!7722 = !DILocation(line: 1139, column: 8, scope: !7699)
!7723 = !DILocation(line: 1139, column: 19, scope: !7699)
!7724 = !DILocation(line: 1140, column: 8, scope: !7699)
!7725 = !DILocation(line: 1140, column: 23, scope: !7699)
!7726 = !DILocation(line: 1141, column: 8, scope: !7699)
!7727 = !DILocation(line: 1141, column: 26, scope: !7699)
!7728 = !DILocation(line: 1142, column: 8, scope: !7699)
!7729 = !DILocation(line: 1142, column: 21, scope: !7699)
!7730 = !DILocation(line: 1143, column: 8, scope: !7699)
!7731 = !DILocation(line: 1143, column: 21, scope: !7699)
!7732 = !DILocation(line: 1144, column: 8, scope: !7699)
!7733 = !DILocation(line: 1144, column: 18, scope: !7699)
!7734 = !DILocation(line: 1146, column: 23, scope: !7699)
!7735 = !DILocation(line: 1146, column: 2, scope: !7699)
!7736 = !DILocation(line: 1148, column: 11, scope: !7699)
!7737 = !DILocation(line: 1148, column: 9, scope: !7699)
!7738 = !DILocation(line: 1149, column: 6, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7699, file: !3, line: 1149, column: 6)
!7740 = !DILocation(line: 1149, column: 13, scope: !7739)
!7741 = !DILocation(line: 1149, column: 6, scope: !7699)
!7742 = !DILocation(line: 1150, column: 7, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 1150, column: 7)
!7744 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 1149, column: 22)
!7745 = !DILocation(line: 1150, column: 14, scope: !7743)
!7746 = !DILocation(line: 1150, column: 22, scope: !7743)
!7747 = !DILocation(line: 1150, column: 7, scope: !7744)
!7748 = !DILocation(line: 1151, column: 11, scope: !7743)
!7749 = !DILocation(line: 1151, column: 4, scope: !7743)
!7750 = !DILocation(line: 1153, column: 11, scope: !7743)
!7751 = !DILocation(line: 1154, column: 2, scope: !7744)
!7752 = !DILocation(line: 1155, column: 10, scope: !7739)
!7753 = !DILocation(line: 1157, column: 15, scope: !7699)
!7754 = !DILocation(line: 1157, column: 13, scope: !7699)
!7755 = !DILocation(line: 1157, column: 26, scope: !7699)
!7756 = !DILocation(line: 1157, column: 24, scope: !7699)
!7757 = !DILocation(line: 1157, column: 8, scope: !7699)
!7758 = !DILocation(line: 1158, column: 22, scope: !7699)
!7759 = !DILocation(line: 1158, column: 40, scope: !7699)
!7760 = !DILocation(line: 1158, column: 46, scope: !7699)
!7761 = !DILocation(line: 1158, column: 53, scope: !7699)
!7762 = !DILocation(line: 1158, column: 32, scope: !7699)
!7763 = !DILocation(line: 1158, column: 2, scope: !7699)
!7764 = !DILocation(line: 1159, column: 22, scope: !7699)
!7765 = !DILocation(line: 1159, column: 39, scope: !7699)
!7766 = !DILocation(line: 1159, column: 45, scope: !7699)
!7767 = !DILocation(line: 1159, column: 32, scope: !7699)
!7768 = !DILocation(line: 1159, column: 2, scope: !7699)
!7769 = !DILocation(line: 1160, column: 16, scope: !7699)
!7770 = !DILocation(line: 1160, column: 14, scope: !7699)
!7771 = !DILocation(line: 1160, column: 27, scope: !7699)
!7772 = !DILocation(line: 1160, column: 25, scope: !7699)
!7773 = !DILocation(line: 1160, column: 8, scope: !7699)
!7774 = !DILocation(line: 1161, column: 22, scope: !7699)
!7775 = !DILocation(line: 1161, column: 40, scope: !7699)
!7776 = !DILocation(line: 1161, column: 46, scope: !7699)
!7777 = !DILocation(line: 1161, column: 53, scope: !7699)
!7778 = !DILocation(line: 1161, column: 32, scope: !7699)
!7779 = !DILocation(line: 1161, column: 2, scope: !7699)
!7780 = !DILocation(line: 1162, column: 22, scope: !7699)
!7781 = !DILocation(line: 1162, column: 39, scope: !7699)
!7782 = !DILocation(line: 1162, column: 45, scope: !7699)
!7783 = !DILocation(line: 1162, column: 32, scope: !7699)
!7784 = !DILocation(line: 1162, column: 2, scope: !7699)
!7785 = !DILocation(line: 1163, column: 16, scope: !7699)
!7786 = !DILocation(line: 1163, column: 14, scope: !7699)
!7787 = !DILocation(line: 1163, column: 27, scope: !7699)
!7788 = !DILocation(line: 1163, column: 25, scope: !7699)
!7789 = !DILocation(line: 1163, column: 8, scope: !7699)
!7790 = !DILocation(line: 1164, column: 22, scope: !7699)
!7791 = !DILocation(line: 1164, column: 41, scope: !7699)
!7792 = !DILocation(line: 1164, column: 47, scope: !7699)
!7793 = !DILocation(line: 1164, column: 54, scope: !7699)
!7794 = !DILocation(line: 1164, column: 33, scope: !7699)
!7795 = !DILocation(line: 1164, column: 2, scope: !7699)
!7796 = !DILocation(line: 1165, column: 22, scope: !7699)
!7797 = !DILocation(line: 1165, column: 40, scope: !7699)
!7798 = !DILocation(line: 1165, column: 46, scope: !7699)
!7799 = !DILocation(line: 1165, column: 33, scope: !7699)
!7800 = !DILocation(line: 1165, column: 2, scope: !7699)
!7801 = !DILocation(line: 1167, column: 29, scope: !7699)
!7802 = !DILocation(line: 1167, column: 10, scope: !7699)
!7803 = !DILocation(line: 1167, column: 8, scope: !7699)
!7804 = !DILocation(line: 1168, column: 22, scope: !7699)
!7805 = !DILocation(line: 1168, column: 50, scope: !7699)
!7806 = !DILocation(line: 1168, column: 48, scope: !7699)
!7807 = !DILocation(line: 1168, column: 32, scope: !7699)
!7808 = !DILocation(line: 1168, column: 2, scope: !7699)
!7809 = !DILocation(line: 1169, column: 21, scope: !7699)
!7810 = !DILocation(line: 1169, column: 2, scope: !7699)
!7811 = !DILocation(line: 1170, column: 22, scope: !7699)
!7812 = !DILocation(line: 1170, column: 38, scope: !7699)
!7813 = !DILocation(line: 1170, column: 32, scope: !7699)
!7814 = !DILocation(line: 1170, column: 2, scope: !7699)
!7815 = !DILocation(line: 1172, column: 2, scope: !7699)
!7816 = distinct !DISubprogram(name: "dib7000p_autosearch_is_irq", scope: !3, file: !3, line: 1175, type: !511, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7817 = !DILocalVariable(name: "demod", arg: 1, scope: !7816, file: !3, line: 1175, type: !464)
!7818 = !DILocation(line: 1175, column: 60, scope: !7816)
!7819 = !DILocalVariable(name: "state", scope: !7816, file: !3, line: 1177, type: !4566)
!7820 = !DILocation(line: 1177, column: 25, scope: !7816)
!7821 = !DILocation(line: 1177, column: 33, scope: !7816)
!7822 = !DILocation(line: 1177, column: 40, scope: !7816)
!7823 = !DILocalVariable(name: "irq_pending", scope: !7816, file: !3, line: 1178, type: !328)
!7824 = !DILocation(line: 1178, column: 6, scope: !7816)
!7825 = !DILocation(line: 1178, column: 39, scope: !7816)
!7826 = !DILocation(line: 1178, column: 20, scope: !7816)
!7827 = !DILocation(line: 1180, column: 6, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1180, column: 6)
!7829 = !DILocation(line: 1180, column: 18, scope: !7828)
!7830 = !DILocation(line: 1180, column: 6, scope: !7816)
!7831 = !DILocation(line: 1181, column: 3, scope: !7828)
!7832 = !DILocation(line: 1183, column: 6, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1183, column: 6)
!7834 = !DILocation(line: 1183, column: 18, scope: !7833)
!7835 = !DILocation(line: 1183, column: 6, scope: !7816)
!7836 = !DILocation(line: 1184, column: 3, scope: !7833)
!7837 = !DILocation(line: 1186, column: 2, scope: !7816)
!7838 = !DILocation(line: 1187, column: 1, scope: !7816)
!7839 = distinct !DISubprogram(name: "dib7000p_tune", scope: !3, file: !3, line: 1277, type: !511, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!7840 = !DILocalVariable(name: "demod", arg: 1, scope: !7839, file: !3, line: 1277, type: !464)
!7841 = !DILocation(line: 1277, column: 47, scope: !7839)
!7842 = !DILocalVariable(name: "ch", scope: !7839, file: !3, line: 1279, type: !546)
!7843 = !DILocation(line: 1279, column: 34, scope: !7839)
!7844 = !DILocation(line: 1279, column: 40, scope: !7839)
!7845 = !DILocation(line: 1279, column: 47, scope: !7839)
!7846 = !DILocalVariable(name: "state", scope: !7839, file: !3, line: 1280, type: !4566)
!7847 = !DILocation(line: 1280, column: 25, scope: !7839)
!7848 = !DILocation(line: 1280, column: 33, scope: !7839)
!7849 = !DILocation(line: 1280, column: 40, scope: !7839)
!7850 = !DILocalVariable(name: "tmp", scope: !7839, file: !3, line: 1281, type: !328)
!7851 = !DILocation(line: 1281, column: 6, scope: !7839)
!7852 = !DILocation(line: 1283, column: 6, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1283, column: 6)
!7854 = !DILocation(line: 1283, column: 9, scope: !7853)
!7855 = !DILocation(line: 1283, column: 6, scope: !7839)
!7856 = !DILocation(line: 1284, column: 24, scope: !7853)
!7857 = !DILocation(line: 1284, column: 31, scope: !7853)
!7858 = !DILocation(line: 1284, column: 3, scope: !7853)
!7859 = !DILocation(line: 1286, column: 3, scope: !7853)
!7860 = !DILocation(line: 1289, column: 22, scope: !7839)
!7861 = !DILocation(line: 1289, column: 2, scope: !7839)
!7862 = !DILocation(line: 1290, column: 22, scope: !7839)
!7863 = !DILocation(line: 1290, column: 2, scope: !7839)
!7864 = !DILocation(line: 1291, column: 2, scope: !7839)
!7865 = !DILocation(line: 1294, column: 6, scope: !7839)
!7866 = !DILocation(line: 1295, column: 6, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1295, column: 6)
!7868 = !DILocation(line: 1295, column: 13, scope: !7867)
!7869 = !DILocation(line: 1295, column: 6, scope: !7839)
!7870 = !DILocation(line: 1296, column: 3, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 1295, column: 36)
!7872 = !DILocation(line: 1296, column: 3, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 1296, column: 3)
!7874 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 1296, column: 3)
!7875 = !DILocation(line: 1296, column: 3, scope: !7874)
!7876 = !DILocation(line: 1297, column: 7, scope: !7871)
!7877 = !DILocation(line: 1298, column: 23, scope: !7871)
!7878 = !DILocation(line: 1298, column: 3, scope: !7871)
!7879 = !DILocation(line: 1299, column: 2, scope: !7871)
!7880 = !DILocation(line: 1300, column: 23, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 1299, column: 9)
!7882 = !DILocation(line: 1300, column: 3, scope: !7881)
!7883 = !DILocation(line: 1302, column: 22, scope: !7839)
!7884 = !DILocation(line: 1302, column: 33, scope: !7839)
!7885 = !DILocation(line: 1302, column: 2, scope: !7839)
!7886 = !DILocation(line: 1305, column: 6, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1305, column: 6)
!7888 = !DILocation(line: 1305, column: 13, scope: !7887)
!7889 = !DILocation(line: 1305, column: 18, scope: !7887)
!7890 = !DILocation(line: 1305, column: 6, scope: !7839)
!7891 = !DILocation(line: 1306, column: 3, scope: !7887)
!7892 = !DILocation(line: 1311, column: 6, scope: !7839)
!7893 = !DILocation(line: 1312, column: 10, scope: !7839)
!7894 = !DILocation(line: 1312, column: 14, scope: !7839)
!7895 = !DILocation(line: 1312, column: 2, scope: !7839)
!7896 = !DILocation(line: 1314, column: 7, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1312, column: 33)
!7898 = !DILocation(line: 1315, column: 3, scope: !7897)
!7899 = !DILocation(line: 1317, column: 7, scope: !7897)
!7900 = !DILocation(line: 1318, column: 3, scope: !7897)
!7901 = !DILocation(line: 1321, column: 7, scope: !7897)
!7902 = !DILocation(line: 1322, column: 3, scope: !7897)
!7903 = !DILocation(line: 1324, column: 22, scope: !7839)
!7904 = !DILocation(line: 1324, column: 33, scope: !7839)
!7905 = !DILocation(line: 1324, column: 2, scope: !7839)
!7906 = !DILocation(line: 1327, column: 6, scope: !7839)
!7907 = !DILocation(line: 1328, column: 10, scope: !7839)
!7908 = !DILocation(line: 1328, column: 14, scope: !7839)
!7909 = !DILocation(line: 1328, column: 2, scope: !7839)
!7910 = !DILocation(line: 1330, column: 7, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1328, column: 33)
!7912 = !DILocation(line: 1331, column: 3, scope: !7911)
!7913 = !DILocation(line: 1333, column: 7, scope: !7911)
!7914 = !DILocation(line: 1334, column: 3, scope: !7911)
!7915 = !DILocation(line: 1337, column: 7, scope: !7911)
!7916 = !DILocation(line: 1338, column: 3, scope: !7911)
!7917 = !DILocation(line: 1340, column: 22, scope: !7839)
!7918 = !DILocation(line: 1340, column: 33, scope: !7839)
!7919 = !DILocation(line: 1340, column: 2, scope: !7839)
!7920 = !DILocation(line: 1343, column: 6, scope: !7839)
!7921 = !DILocation(line: 1344, column: 10, scope: !7839)
!7922 = !DILocation(line: 1344, column: 14, scope: !7839)
!7923 = !DILocation(line: 1344, column: 2, scope: !7839)
!7924 = !DILocation(line: 1346, column: 7, scope: !7925)
!7925 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1344, column: 33)
!7926 = !DILocation(line: 1347, column: 3, scope: !7925)
!7927 = !DILocation(line: 1349, column: 7, scope: !7925)
!7928 = !DILocation(line: 1350, column: 3, scope: !7925)
!7929 = !DILocation(line: 1353, column: 7, scope: !7925)
!7930 = !DILocation(line: 1354, column: 3, scope: !7925)
!7931 = !DILocation(line: 1356, column: 22, scope: !7839)
!7932 = !DILocation(line: 1356, column: 33, scope: !7839)
!7933 = !DILocation(line: 1356, column: 2, scope: !7839)
!7934 = !DILocation(line: 1358, column: 27, scope: !7839)
!7935 = !DILocation(line: 1358, column: 8, scope: !7839)
!7936 = !DILocation(line: 1358, column: 6, scope: !7839)
!7937 = !DILocation(line: 1359, column: 9, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1359, column: 6)
!7939 = !DILocation(line: 1359, column: 13, scope: !7938)
!7940 = !DILocation(line: 1359, column: 19, scope: !7938)
!7941 = !DILocation(line: 1359, column: 6, scope: !7839)
!7942 = !DILocation(line: 1361, column: 28, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7938, file: !3, line: 1359, column: 27)
!7944 = !DILocation(line: 1361, column: 9, scope: !7943)
!7945 = !DILocation(line: 1361, column: 7, scope: !7943)
!7946 = !DILocation(line: 1362, column: 23, scope: !7943)
!7947 = !DILocation(line: 1362, column: 35, scope: !7943)
!7948 = !DILocation(line: 1362, column: 39, scope: !7943)
!7949 = !DILocation(line: 1362, column: 3, scope: !7943)
!7950 = !DILocation(line: 1363, column: 23, scope: !7943)
!7951 = !DILocation(line: 1363, column: 35, scope: !7943)
!7952 = !DILocation(line: 1363, column: 3, scope: !7943)
!7953 = !DILocation(line: 1364, column: 3, scope: !7943)
!7954 = !DILocation(line: 1365, column: 28, scope: !7943)
!7955 = !DILocation(line: 1365, column: 9, scope: !7943)
!7956 = !DILocation(line: 1365, column: 7, scope: !7943)
!7957 = !DILocation(line: 1366, column: 2, scope: !7943)
!7958 = !DILocation(line: 1368, column: 7, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1368, column: 6)
!7960 = !DILocation(line: 1368, column: 11, scope: !7959)
!7961 = !DILocation(line: 1368, column: 17, scope: !7959)
!7962 = !DILocation(line: 1368, column: 6, scope: !7839)
!7963 = !DILocation(line: 1369, column: 24, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 1368, column: 24)
!7965 = !DILocation(line: 1369, column: 3, scope: !7964)
!7966 = !DILocation(line: 1371, column: 28, scope: !7964)
!7967 = !DILocation(line: 1371, column: 9, scope: !7964)
!7968 = !DILocation(line: 1371, column: 7, scope: !7964)
!7969 = !DILocation(line: 1372, column: 23, scope: !7964)
!7970 = !DILocation(line: 1372, column: 35, scope: !7964)
!7971 = !DILocation(line: 1372, column: 39, scope: !7964)
!7972 = !DILocation(line: 1372, column: 61, scope: !7964)
!7973 = !DILocation(line: 1372, column: 65, scope: !7964)
!7974 = !DILocation(line: 1372, column: 72, scope: !7964)
!7975 = !DILocation(line: 1372, column: 79, scope: !7964)
!7976 = !DILocation(line: 1372, column: 84, scope: !7964)
!7977 = !DILocation(line: 1372, column: 55, scope: !7964)
!7978 = !DILocation(line: 1372, column: 34, scope: !7964)
!7979 = !DILocation(line: 1372, column: 3, scope: !7964)
!7980 = !DILocation(line: 1373, column: 2, scope: !7964)
!7981 = !DILocation(line: 1375, column: 6, scope: !7982)
!7982 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 1375, column: 6)
!7983 = !DILocation(line: 1375, column: 13, scope: !7982)
!7984 = !DILocation(line: 1375, column: 17, scope: !7982)
!7985 = !DILocation(line: 1375, column: 6, scope: !7839)
!7986 = !DILocation(line: 1376, column: 25, scope: !7982)
!7987 = !DILocation(line: 1376, column: 32, scope: !7982)
!7988 = !DILocation(line: 1376, column: 36, scope: !7982)
!7989 = !DILocation(line: 1376, column: 46, scope: !7982)
!7990 = !DILocation(line: 1376, column: 54, scope: !7982)
!7991 = !DILocation(line: 1376, column: 3, scope: !7982)
!7992 = !DILocation(line: 1378, column: 25, scope: !7839)
!7993 = !DILocation(line: 1378, column: 32, scope: !7839)
!7994 = !DILocation(line: 1378, column: 2, scope: !7839)
!7995 = !DILocation(line: 1380, column: 23, scope: !7839)
!7996 = !DILocation(line: 1380, column: 2, scope: !7839)
!7997 = !DILocation(line: 1382, column: 2, scope: !7839)
!7998 = !DILocation(line: 1383, column: 1, scope: !7839)
!7999 = distinct !DISubprogram(name: "dib7090_setDibTxMux", scope: !3, file: !3, line: 2529, type: !8000, scopeLine: 2530, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8000 = !DISubroutineType(types: !8001)
!8001 = !{null, !4566, !327}
!8002 = !DILocalVariable(name: "state", arg: 1, scope: !7999, file: !3, line: 2529, type: !4566)
!8003 = !DILocation(line: 2529, column: 56, scope: !7999)
!8004 = !DILocalVariable(name: "mode", arg: 2, scope: !7999, file: !3, line: 2529, type: !327)
!8005 = !DILocation(line: 2529, column: 67, scope: !7999)
!8006 = !DILocalVariable(name: "reg_1288", scope: !7999, file: !3, line: 2531, type: !328)
!8007 = !DILocation(line: 2531, column: 6, scope: !7999)
!8008 = !DILocation(line: 2531, column: 36, scope: !7999)
!8009 = !DILocation(line: 2531, column: 17, scope: !7999)
!8010 = !DILocation(line: 2531, column: 49, scope: !7999)
!8011 = !DILocation(line: 2533, column: 10, scope: !7999)
!8012 = !DILocation(line: 2533, column: 2, scope: !7999)
!8013 = !DILocation(line: 2535, column: 4, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 2533, column: 16)
!8015 = !DILocation(line: 2535, column: 4, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 2535, column: 4)
!8017 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 2535, column: 4)
!8018 = !DILocation(line: 2535, column: 4, scope: !8017)
!8019 = !DILocation(line: 2536, column: 22, scope: !8014)
!8020 = !DILocation(line: 2536, column: 4, scope: !8014)
!8021 = !DILocation(line: 2537, column: 13, scope: !8014)
!8022 = !DILocation(line: 2538, column: 4, scope: !8014)
!8023 = !DILocation(line: 2540, column: 4, scope: !8014)
!8024 = !DILocation(line: 2540, column: 4, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 2540, column: 4)
!8026 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 2540, column: 4)
!8027 = !DILocation(line: 2540, column: 4, scope: !8026)
!8028 = !DILocation(line: 2541, column: 22, scope: !8014)
!8029 = !DILocation(line: 2541, column: 4, scope: !8014)
!8030 = !DILocation(line: 2542, column: 13, scope: !8014)
!8031 = !DILocation(line: 2543, column: 4, scope: !8014)
!8032 = !DILocation(line: 2545, column: 4, scope: !8014)
!8033 = !DILocation(line: 2545, column: 4, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8035, file: !3, line: 2545, column: 4)
!8035 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 2545, column: 4)
!8036 = !DILocation(line: 2545, column: 4, scope: !8035)
!8037 = !DILocation(line: 2546, column: 22, scope: !8014)
!8038 = !DILocation(line: 2546, column: 4, scope: !8014)
!8039 = !DILocation(line: 2547, column: 13, scope: !8014)
!8040 = !DILocation(line: 2548, column: 4, scope: !8014)
!8041 = !DILocation(line: 2550, column: 4, scope: !8014)
!8042 = !DILocation(line: 2552, column: 22, scope: !7999)
!8043 = !DILocation(line: 2552, column: 35, scope: !7999)
!8044 = !DILocation(line: 2552, column: 2, scope: !7999)
!8045 = !DILocation(line: 2553, column: 1, scope: !7999)
!8046 = distinct !DISubprogram(name: "dib7090_setHostBusMux", scope: !3, file: !3, line: 2555, type: !8000, scopeLine: 2556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8047 = !DILocalVariable(name: "state", arg: 1, scope: !8046, file: !3, line: 2555, type: !4566)
!8048 = !DILocation(line: 2555, column: 58, scope: !8046)
!8049 = !DILocalVariable(name: "mode", arg: 2, scope: !8046, file: !3, line: 2555, type: !327)
!8050 = !DILocation(line: 2555, column: 69, scope: !8046)
!8051 = !DILocalVariable(name: "reg_1288", scope: !8046, file: !3, line: 2557, type: !328)
!8052 = !DILocation(line: 2557, column: 6, scope: !8046)
!8053 = !DILocation(line: 2557, column: 36, scope: !8046)
!8054 = !DILocation(line: 2557, column: 17, scope: !8046)
!8055 = !DILocation(line: 2557, column: 49, scope: !8046)
!8056 = !DILocation(line: 2559, column: 10, scope: !8046)
!8057 = !DILocation(line: 2559, column: 2, scope: !8046)
!8058 = !DILocation(line: 2561, column: 4, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8046, file: !3, line: 2559, column: 16)
!8060 = !DILocation(line: 2561, column: 4, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 2561, column: 4)
!8062 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2561, column: 4)
!8063 = !DILocation(line: 2561, column: 4, scope: !8062)
!8064 = !DILocation(line: 2562, column: 22, scope: !8059)
!8065 = !DILocation(line: 2562, column: 4, scope: !8059)
!8066 = !DILocation(line: 2563, column: 13, scope: !8059)
!8067 = !DILocation(line: 2564, column: 4, scope: !8059)
!8068 = !DILocation(line: 2566, column: 4, scope: !8059)
!8069 = !DILocation(line: 2566, column: 4, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8071, file: !3, line: 2566, column: 4)
!8071 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2566, column: 4)
!8072 = !DILocation(line: 2566, column: 4, scope: !8071)
!8073 = !DILocation(line: 2567, column: 22, scope: !8059)
!8074 = !DILocation(line: 2567, column: 4, scope: !8059)
!8075 = !DILocation(line: 2568, column: 13, scope: !8059)
!8076 = !DILocation(line: 2569, column: 4, scope: !8059)
!8077 = !DILocation(line: 2571, column: 4, scope: !8059)
!8078 = !DILocation(line: 2571, column: 4, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8080, file: !3, line: 2571, column: 4)
!8080 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2571, column: 4)
!8081 = !DILocation(line: 2571, column: 4, scope: !8080)
!8082 = !DILocation(line: 2572, column: 13, scope: !8059)
!8083 = !DILocation(line: 2573, column: 4, scope: !8059)
!8084 = !DILocation(line: 2575, column: 4, scope: !8059)
!8085 = !DILocation(line: 2577, column: 22, scope: !8046)
!8086 = !DILocation(line: 2577, column: 35, scope: !8046)
!8087 = !DILocation(line: 2577, column: 2, scope: !8046)
!8088 = !DILocation(line: 2578, column: 1, scope: !8046)
!8089 = distinct !DISubprogram(name: "dib7000p_pll_clk_cfg", scope: !3, file: !3, line: 720, type: !8090, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8090 = !DISubroutineType(types: !8091)
!8091 = !{null, !4566}
!8092 = !DILocalVariable(name: "state", arg: 1, scope: !8089, file: !3, line: 720, type: !4566)
!8093 = !DILocation(line: 720, column: 57, scope: !8089)
!8094 = !DILocalVariable(name: "tmp", scope: !8089, file: !3, line: 722, type: !328)
!8095 = !DILocation(line: 722, column: 6, scope: !8089)
!8096 = !DILocation(line: 723, column: 27, scope: !8089)
!8097 = !DILocation(line: 723, column: 8, scope: !8089)
!8098 = !DILocation(line: 723, column: 6, scope: !8089)
!8099 = !DILocation(line: 724, column: 22, scope: !8089)
!8100 = !DILocation(line: 724, column: 35, scope: !8089)
!8101 = !DILocation(line: 724, column: 39, scope: !8089)
!8102 = !DILocation(line: 724, column: 34, scope: !8089)
!8103 = !DILocation(line: 724, column: 2, scope: !8089)
!8104 = !DILocation(line: 725, column: 27, scope: !8089)
!8105 = !DILocation(line: 725, column: 8, scope: !8089)
!8106 = !DILocation(line: 725, column: 6, scope: !8089)
!8107 = !DILocation(line: 726, column: 22, scope: !8089)
!8108 = !DILocation(line: 726, column: 35, scope: !8089)
!8109 = !DILocation(line: 726, column: 39, scope: !8089)
!8110 = !DILocation(line: 726, column: 49, scope: !8089)
!8111 = !DILocation(line: 726, column: 34, scope: !8089)
!8112 = !DILocation(line: 726, column: 2, scope: !8089)
!8113 = !DILocation(line: 727, column: 1, scope: !8089)
!8114 = distinct !DISubprogram(name: "dib7000p_set_agc_config", scope: !3, file: !3, line: 751, type: !8115, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{!327, !4566, !318}
!8117 = !DILocalVariable(name: "state", arg: 1, scope: !8114, file: !3, line: 751, type: !4566)
!8118 = !DILocation(line: 751, column: 59, scope: !8114)
!8119 = !DILocalVariable(name: "band", arg: 2, scope: !8114, file: !3, line: 751, type: !318)
!8120 = !DILocation(line: 751, column: 69, scope: !8114)
!8121 = !DILocalVariable(name: "agc", scope: !8114, file: !3, line: 753, type: !4484)
!8122 = !DILocation(line: 753, column: 29, scope: !8114)
!8123 = !DILocalVariable(name: "i", scope: !8114, file: !3, line: 754, type: !327)
!8124 = !DILocation(line: 754, column: 6, scope: !8114)
!8125 = !DILocation(line: 755, column: 6, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 755, column: 6)
!8127 = !DILocation(line: 755, column: 13, scope: !8126)
!8128 = !DILocation(line: 755, column: 29, scope: !8126)
!8129 = !DILocation(line: 755, column: 26, scope: !8126)
!8130 = !DILocation(line: 755, column: 34, scope: !8126)
!8131 = !DILocation(line: 755, column: 37, scope: !8126)
!8132 = !DILocation(line: 755, column: 44, scope: !8126)
!8133 = !DILocation(line: 755, column: 56, scope: !8126)
!8134 = !DILocation(line: 755, column: 6, scope: !8114)
!8135 = !DILocation(line: 756, column: 3, scope: !8126)
!8136 = !DILocation(line: 757, column: 24, scope: !8114)
!8137 = !DILocation(line: 757, column: 2, scope: !8114)
!8138 = !DILocation(line: 757, column: 9, scope: !8114)
!8139 = !DILocation(line: 757, column: 22, scope: !8114)
!8140 = !DILocation(line: 759, column: 9, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 759, column: 2)
!8142 = !DILocation(line: 759, column: 7, scope: !8141)
!8143 = !DILocation(line: 759, column: 14, scope: !8144)
!8144 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 759, column: 2)
!8145 = !DILocation(line: 759, column: 18, scope: !8144)
!8146 = !DILocation(line: 759, column: 25, scope: !8144)
!8147 = !DILocation(line: 759, column: 29, scope: !8144)
!8148 = !DILocation(line: 759, column: 16, scope: !8144)
!8149 = !DILocation(line: 759, column: 2, scope: !8141)
!8150 = !DILocation(line: 760, column: 7, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 760, column: 7)
!8152 = !DILocation(line: 760, column: 14, scope: !8151)
!8153 = !DILocation(line: 760, column: 18, scope: !8151)
!8154 = !DILocation(line: 760, column: 22, scope: !8151)
!8155 = !DILocation(line: 760, column: 25, scope: !8151)
!8156 = !DILocation(line: 760, column: 37, scope: !8151)
!8157 = !DILocation(line: 760, column: 35, scope: !8151)
!8158 = !DILocation(line: 760, column: 7, scope: !8144)
!8159 = !DILocation(line: 761, column: 11, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 760, column: 43)
!8161 = !DILocation(line: 761, column: 18, scope: !8160)
!8162 = !DILocation(line: 761, column: 22, scope: !8160)
!8163 = !DILocation(line: 761, column: 26, scope: !8160)
!8164 = !DILocation(line: 761, column: 8, scope: !8160)
!8165 = !DILocation(line: 762, column: 4, scope: !8160)
!8166 = !DILocation(line: 759, column: 48, scope: !8144)
!8167 = !DILocation(line: 759, column: 2, scope: !8144)
!8168 = distinct !{!8168, !8149, !8169}
!8169 = !DILocation(line: 763, column: 3, scope: !8141)
!8170 = !DILocation(line: 765, column: 6, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 765, column: 6)
!8172 = !DILocation(line: 765, column: 10, scope: !8171)
!8173 = !DILocation(line: 765, column: 6, scope: !8114)
!8174 = !DILocation(line: 766, column: 3, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 765, column: 19)
!8176 = !DILocation(line: 766, column: 3, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 766, column: 3)
!8178 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 766, column: 3)
!8179 = !DILocation(line: 766, column: 3, scope: !8178)
!8180 = !DILocation(line: 767, column: 3, scope: !8175)
!8181 = !DILocation(line: 770, column: 23, scope: !8114)
!8182 = !DILocation(line: 770, column: 2, scope: !8114)
!8183 = !DILocation(line: 770, column: 9, scope: !8114)
!8184 = !DILocation(line: 770, column: 21, scope: !8114)
!8185 = !DILocation(line: 773, column: 22, scope: !8114)
!8186 = !DILocation(line: 773, column: 33, scope: !8114)
!8187 = !DILocation(line: 773, column: 38, scope: !8114)
!8188 = !DILocation(line: 773, column: 2, scope: !8114)
!8189 = !DILocation(line: 774, column: 22, scope: !8114)
!8190 = !DILocation(line: 774, column: 33, scope: !8114)
!8191 = !DILocation(line: 774, column: 38, scope: !8114)
!8192 = !DILocation(line: 774, column: 2, scope: !8114)
!8193 = !DILocation(line: 775, column: 22, scope: !8114)
!8194 = !DILocation(line: 775, column: 33, scope: !8114)
!8195 = !DILocation(line: 775, column: 38, scope: !8114)
!8196 = !DILocation(line: 775, column: 2, scope: !8114)
!8197 = !DILocation(line: 776, column: 22, scope: !8114)
!8198 = !DILocation(line: 776, column: 35, scope: !8114)
!8199 = !DILocation(line: 776, column: 40, scope: !8114)
!8200 = !DILocation(line: 776, column: 52, scope: !8114)
!8201 = !DILocation(line: 776, column: 61, scope: !8114)
!8202 = !DILocation(line: 776, column: 66, scope: !8114)
!8203 = !DILocation(line: 776, column: 59, scope: !8114)
!8204 = !DILocation(line: 776, column: 34, scope: !8114)
!8205 = !DILocation(line: 776, column: 2, scope: !8114)
!8206 = !DILocation(line: 779, column: 22, scope: !8114)
!8207 = !DILocation(line: 779, column: 35, scope: !8114)
!8208 = !DILocation(line: 779, column: 40, scope: !8114)
!8209 = !DILocation(line: 779, column: 51, scope: !8114)
!8210 = !DILocation(line: 779, column: 59, scope: !8114)
!8211 = !DILocation(line: 779, column: 64, scope: !8114)
!8212 = !DILocation(line: 779, column: 57, scope: !8114)
!8213 = !DILocation(line: 779, column: 34, scope: !8114)
!8214 = !DILocation(line: 779, column: 2, scope: !8114)
!8215 = !DILocation(line: 780, column: 22, scope: !8114)
!8216 = !DILocation(line: 780, column: 35, scope: !8114)
!8217 = !DILocation(line: 780, column: 40, scope: !8114)
!8218 = !DILocation(line: 780, column: 50, scope: !8114)
!8219 = !DILocation(line: 780, column: 58, scope: !8114)
!8220 = !DILocation(line: 780, column: 63, scope: !8114)
!8221 = !DILocation(line: 780, column: 56, scope: !8114)
!8222 = !DILocation(line: 780, column: 34, scope: !8114)
!8223 = !DILocation(line: 780, column: 2, scope: !8114)
!8224 = !DILocation(line: 783, column: 2, scope: !8114)
!8225 = !DILocation(line: 783, column: 2, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8227, file: !3, line: 783, column: 2)
!8227 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 783, column: 2)
!8228 = !DILocation(line: 783, column: 2, scope: !8227)
!8229 = !DILocation(line: 786, column: 6, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8114, file: !3, line: 786, column: 6)
!8231 = !DILocation(line: 786, column: 13, scope: !8230)
!8232 = !DILocation(line: 786, column: 21, scope: !8230)
!8233 = !DILocation(line: 786, column: 6, scope: !8114)
!8234 = !DILocation(line: 787, column: 23, scope: !8230)
!8235 = !DILocation(line: 787, column: 36, scope: !8230)
!8236 = !DILocation(line: 787, column: 41, scope: !8230)
!8237 = !DILocation(line: 787, column: 49, scope: !8230)
!8238 = !DILocation(line: 787, column: 58, scope: !8230)
!8239 = !DILocation(line: 787, column: 65, scope: !8230)
!8240 = !DILocation(line: 787, column: 56, scope: !8230)
!8241 = !DILocation(line: 787, column: 35, scope: !8230)
!8242 = !DILocation(line: 787, column: 3, scope: !8230)
!8243 = !DILocation(line: 789, column: 23, scope: !8230)
!8244 = !DILocation(line: 789, column: 36, scope: !8230)
!8245 = !DILocation(line: 789, column: 41, scope: !8230)
!8246 = !DILocation(line: 789, column: 49, scope: !8230)
!8247 = !DILocation(line: 789, column: 58, scope: !8230)
!8248 = !DILocation(line: 789, column: 63, scope: !8230)
!8249 = !DILocation(line: 789, column: 56, scope: !8230)
!8250 = !DILocation(line: 789, column: 35, scope: !8230)
!8251 = !DILocation(line: 789, column: 3, scope: !8230)
!8252 = !DILocation(line: 791, column: 22, scope: !8114)
!8253 = !DILocation(line: 791, column: 35, scope: !8114)
!8254 = !DILocation(line: 791, column: 40, scope: !8114)
!8255 = !DILocation(line: 791, column: 48, scope: !8114)
!8256 = !DILocation(line: 791, column: 58, scope: !8114)
!8257 = !DILocation(line: 791, column: 63, scope: !8114)
!8258 = !DILocation(line: 791, column: 73, scope: !8114)
!8259 = !DILocation(line: 791, column: 55, scope: !8114)
!8260 = !DILocation(line: 791, column: 82, scope: !8114)
!8261 = !DILocation(line: 791, column: 87, scope: !8114)
!8262 = !DILocation(line: 791, column: 109, scope: !8114)
!8263 = !DILocation(line: 791, column: 79, scope: !8114)
!8264 = !DILocation(line: 791, column: 34, scope: !8114)
!8265 = !DILocation(line: 791, column: 2, scope: !8114)
!8266 = !DILocation(line: 793, column: 22, scope: !8114)
!8267 = !DILocation(line: 793, column: 34, scope: !8114)
!8268 = !DILocation(line: 793, column: 39, scope: !8114)
!8269 = !DILocation(line: 793, column: 2, scope: !8114)
!8270 = !DILocation(line: 794, column: 22, scope: !8114)
!8271 = !DILocation(line: 794, column: 34, scope: !8114)
!8272 = !DILocation(line: 794, column: 39, scope: !8114)
!8273 = !DILocation(line: 794, column: 2, scope: !8114)
!8274 = !DILocation(line: 795, column: 22, scope: !8114)
!8275 = !DILocation(line: 795, column: 34, scope: !8114)
!8276 = !DILocation(line: 795, column: 39, scope: !8114)
!8277 = !DILocation(line: 795, column: 2, scope: !8114)
!8278 = !DILocation(line: 796, column: 22, scope: !8114)
!8279 = !DILocation(line: 796, column: 34, scope: !8114)
!8280 = !DILocation(line: 796, column: 39, scope: !8114)
!8281 = !DILocation(line: 796, column: 2, scope: !8114)
!8282 = !DILocation(line: 797, column: 22, scope: !8114)
!8283 = !DILocation(line: 797, column: 35, scope: !8114)
!8284 = !DILocation(line: 797, column: 40, scope: !8114)
!8285 = !DILocation(line: 797, column: 49, scope: !8114)
!8286 = !DILocation(line: 797, column: 57, scope: !8114)
!8287 = !DILocation(line: 797, column: 62, scope: !8114)
!8288 = !DILocation(line: 797, column: 55, scope: !8114)
!8289 = !DILocation(line: 797, column: 34, scope: !8114)
!8290 = !DILocation(line: 797, column: 2, scope: !8114)
!8291 = !DILocation(line: 798, column: 22, scope: !8114)
!8292 = !DILocation(line: 798, column: 34, scope: !8114)
!8293 = !DILocation(line: 798, column: 39, scope: !8114)
!8294 = !DILocation(line: 798, column: 2, scope: !8114)
!8295 = !DILocation(line: 799, column: 22, scope: !8114)
!8296 = !DILocation(line: 799, column: 35, scope: !8114)
!8297 = !DILocation(line: 799, column: 40, scope: !8114)
!8298 = !DILocation(line: 799, column: 52, scope: !8114)
!8299 = !DILocation(line: 799, column: 60, scope: !8114)
!8300 = !DILocation(line: 799, column: 65, scope: !8114)
!8301 = !DILocation(line: 799, column: 58, scope: !8114)
!8302 = !DILocation(line: 799, column: 34, scope: !8114)
!8303 = !DILocation(line: 799, column: 2, scope: !8114)
!8304 = !DILocation(line: 800, column: 22, scope: !8114)
!8305 = !DILocation(line: 800, column: 35, scope: !8114)
!8306 = !DILocation(line: 800, column: 40, scope: !8114)
!8307 = !DILocation(line: 800, column: 49, scope: !8114)
!8308 = !DILocation(line: 800, column: 57, scope: !8114)
!8309 = !DILocation(line: 800, column: 62, scope: !8114)
!8310 = !DILocation(line: 800, column: 55, scope: !8114)
!8311 = !DILocation(line: 800, column: 34, scope: !8114)
!8312 = !DILocation(line: 800, column: 2, scope: !8114)
!8313 = !DILocation(line: 801, column: 22, scope: !8114)
!8314 = !DILocation(line: 801, column: 35, scope: !8114)
!8315 = !DILocation(line: 801, column: 40, scope: !8114)
!8316 = !DILocation(line: 801, column: 52, scope: !8114)
!8317 = !DILocation(line: 801, column: 60, scope: !8114)
!8318 = !DILocation(line: 801, column: 65, scope: !8114)
!8319 = !DILocation(line: 801, column: 58, scope: !8114)
!8320 = !DILocation(line: 801, column: 34, scope: !8114)
!8321 = !DILocation(line: 801, column: 2, scope: !8114)
!8322 = !DILocation(line: 802, column: 2, scope: !8114)
!8323 = !DILocation(line: 803, column: 1, scope: !8114)
!8324 = distinct !DISubprogram(name: "dib7000p_set_dds", scope: !3, file: !3, line: 805, type: !8325, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8325 = !DISubroutineType(types: !8326)
!8326 = !{!327, !4566, !325}
!8327 = !DILocalVariable(name: "state", arg: 1, scope: !8324, file: !3, line: 805, type: !4566)
!8328 = !DILocation(line: 805, column: 52, scope: !8324)
!8329 = !DILocalVariable(name: "offset_khz", arg: 2, scope: !8324, file: !3, line: 805, type: !325)
!8330 = !DILocation(line: 805, column: 63, scope: !8324)
!8331 = !DILocalVariable(name: "internal", scope: !8324, file: !3, line: 807, type: !331)
!8332 = !DILocation(line: 807, column: 6, scope: !8324)
!8333 = !DILocation(line: 807, column: 44, scope: !8324)
!8334 = !DILocation(line: 807, column: 17, scope: !8324)
!8335 = !DILocalVariable(name: "unit_khz_dds_val", scope: !8324, file: !3, line: 808, type: !325)
!8336 = !DILocation(line: 808, column: 6, scope: !8324)
!8337 = !DILocalVariable(name: "abs_offset_khz", scope: !8324, file: !3, line: 809, type: !331)
!8338 = !DILocation(line: 809, column: 6, scope: !8324)
!8339 = !DILocalVariable(name: "__x", scope: !8340, file: !3, line: 809, type: !327)
!8340 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 809, column: 23)
!8341 = !DILocation(line: 809, column: 23, scope: !8340)
!8342 = !DILocalVariable(name: "dds", scope: !8324, file: !3, line: 810, type: !331)
!8343 = !DILocation(line: 810, column: 6, scope: !8324)
!8344 = !DILocation(line: 810, column: 12, scope: !8324)
!8345 = !DILocation(line: 810, column: 19, scope: !8324)
!8346 = !DILocation(line: 810, column: 23, scope: !8324)
!8347 = !DILocation(line: 810, column: 27, scope: !8324)
!8348 = !DILocation(line: 810, column: 33, scope: !8324)
!8349 = !DILocalVariable(name: "invert", scope: !8324, file: !3, line: 811, type: !318)
!8350 = !DILocation(line: 811, column: 5, scope: !8324)
!8351 = !DILocation(line: 811, column: 17, scope: !8324)
!8352 = !DILocation(line: 811, column: 24, scope: !8324)
!8353 = !DILocation(line: 811, column: 28, scope: !8324)
!8354 = !DILocation(line: 811, column: 32, scope: !8324)
!8355 = !DILocation(line: 811, column: 38, scope: !8324)
!8356 = !DILocation(line: 811, column: 15, scope: !8324)
!8357 = !DILocation(line: 811, column: 14, scope: !8324)
!8358 = !DILocation(line: 812, column: 6, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 812, column: 6)
!8360 = !DILocation(line: 812, column: 15, scope: !8359)
!8361 = !DILocation(line: 812, column: 6, scope: !8324)
!8362 = !DILocation(line: 813, column: 3, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 812, column: 21)
!8364 = !DILocation(line: 814, column: 3, scope: !8363)
!8365 = !DILocation(line: 817, column: 33, scope: !8324)
!8366 = !DILocation(line: 817, column: 30, scope: !8324)
!8367 = !DILocation(line: 817, column: 19, scope: !8324)
!8368 = !DILocation(line: 819, column: 2, scope: !8324)
!8369 = !DILocation(line: 819, column: 2, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8371, file: !3, line: 819, column: 2)
!8371 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 819, column: 2)
!8372 = !DILocation(line: 819, column: 2, scope: !8371)
!8373 = !DILocation(line: 821, column: 6, scope: !8374)
!8374 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 821, column: 6)
!8375 = !DILocation(line: 821, column: 17, scope: !8374)
!8376 = !DILocation(line: 821, column: 6, scope: !8324)
!8377 = !DILocation(line: 822, column: 20, scope: !8374)
!8378 = !DILocation(line: 822, column: 3, scope: !8374)
!8379 = !DILocation(line: 825, column: 6, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 825, column: 6)
!8381 = !DILocation(line: 825, column: 6, scope: !8324)
!8382 = !DILocation(line: 826, column: 11, scope: !8380)
!8383 = !DILocation(line: 826, column: 28, scope: !8380)
!8384 = !DILocation(line: 826, column: 26, scope: !8380)
!8385 = !DILocation(line: 826, column: 7, scope: !8380)
!8386 = !DILocation(line: 826, column: 3, scope: !8380)
!8387 = !DILocation(line: 828, column: 11, scope: !8380)
!8388 = !DILocation(line: 828, column: 28, scope: !8380)
!8389 = !DILocation(line: 828, column: 26, scope: !8380)
!8390 = !DILocation(line: 828, column: 7, scope: !8380)
!8391 = !DILocation(line: 830, column: 6, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 830, column: 6)
!8393 = !DILocation(line: 830, column: 25, scope: !8392)
!8394 = !DILocation(line: 830, column: 34, scope: !8392)
!8395 = !DILocation(line: 830, column: 21, scope: !8392)
!8396 = !DILocation(line: 830, column: 6, scope: !8324)
!8397 = !DILocation(line: 831, column: 23, scope: !8398)
!8398 = distinct !DILexicalBlock(scope: !8392, file: !3, line: 830, column: 40)
!8399 = !DILocation(line: 831, column: 43, scope: !8398)
!8400 = !DILocation(line: 831, column: 47, scope: !8398)
!8401 = !DILocation(line: 831, column: 54, scope: !8398)
!8402 = !DILocation(line: 831, column: 78, scope: !8398)
!8403 = !DILocation(line: 831, column: 85, scope: !8398)
!8404 = !DILocation(line: 831, column: 75, scope: !8398)
!8405 = !DILocation(line: 831, column: 34, scope: !8398)
!8406 = !DILocation(line: 831, column: 3, scope: !8398)
!8407 = !DILocation(line: 832, column: 23, scope: !8398)
!8408 = !DILocation(line: 832, column: 41, scope: !8398)
!8409 = !DILocation(line: 832, column: 45, scope: !8398)
!8410 = !DILocation(line: 832, column: 34, scope: !8398)
!8411 = !DILocation(line: 832, column: 3, scope: !8398)
!8412 = !DILocation(line: 833, column: 2, scope: !8398)
!8413 = !DILocation(line: 834, column: 2, scope: !8324)
!8414 = !DILocation(line: 835, column: 1, scope: !8324)
!8415 = distinct !DISubprogram(name: "dib7000p_restart_agc", scope: !3, file: !3, line: 729, type: !8090, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8416 = !DILocalVariable(name: "state", arg: 1, scope: !8415, file: !3, line: 729, type: !4566)
!8417 = !DILocation(line: 729, column: 57, scope: !8415)
!8418 = !DILocation(line: 732, column: 22, scope: !8415)
!8419 = !DILocation(line: 732, column: 2, scope: !8415)
!8420 = !DILocation(line: 733, column: 22, scope: !8415)
!8421 = !DILocation(line: 733, column: 2, scope: !8415)
!8422 = !DILocation(line: 734, column: 1, scope: !8415)
!8423 = distinct !DISubprogram(name: "dib7000p_update_lna", scope: !3, file: !3, line: 736, type: !6205, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8424 = !DILocalVariable(name: "state", arg: 1, scope: !8423, file: !3, line: 736, type: !4566)
!8425 = !DILocation(line: 736, column: 55, scope: !8423)
!8426 = !DILocalVariable(name: "dyn_gain", scope: !8423, file: !3, line: 738, type: !328)
!8427 = !DILocation(line: 738, column: 6, scope: !8423)
!8428 = !DILocation(line: 740, column: 6, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8423, file: !3, line: 740, column: 6)
!8430 = !DILocation(line: 740, column: 13, scope: !8429)
!8431 = !DILocation(line: 740, column: 17, scope: !8429)
!8432 = !DILocation(line: 740, column: 6, scope: !8423)
!8433 = !DILocation(line: 741, column: 33, scope: !8434)
!8434 = distinct !DILexicalBlock(scope: !8429, file: !3, line: 740, column: 29)
!8435 = !DILocation(line: 741, column: 14, scope: !8434)
!8436 = !DILocation(line: 741, column: 12, scope: !8434)
!8437 = !DILocation(line: 742, column: 7, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8434, file: !3, line: 742, column: 7)
!8439 = !DILocation(line: 742, column: 14, scope: !8438)
!8440 = !DILocation(line: 742, column: 18, scope: !8438)
!8441 = !DILocation(line: 742, column: 30, scope: !8438)
!8442 = !DILocation(line: 742, column: 37, scope: !8438)
!8443 = !DILocation(line: 742, column: 44, scope: !8438)
!8444 = !DILocation(line: 742, column: 7, scope: !8434)
!8445 = !DILocation(line: 743, column: 25, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 742, column: 55)
!8447 = !DILocation(line: 743, column: 4, scope: !8446)
!8448 = !DILocation(line: 744, column: 4, scope: !8446)
!8449 = !DILocation(line: 746, column: 2, scope: !8434)
!8450 = !DILocation(line: 748, column: 2, scope: !8423)
!8451 = !DILocation(line: 749, column: 1, scope: !8423)
!8452 = distinct !DISubprogram(name: "dib7000p_get_internal_freq", scope: !3, file: !3, line: 480, type: !8453, scopeLine: 481, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{!331, !4566}
!8455 = !DILocalVariable(name: "state", arg: 1, scope: !8452, file: !3, line: 480, type: !4566)
!8456 = !DILocation(line: 480, column: 62, scope: !8452)
!8457 = !DILocalVariable(name: "internal", scope: !8452, file: !3, line: 482, type: !331)
!8458 = !DILocation(line: 482, column: 6, scope: !8452)
!8459 = !DILocation(line: 482, column: 42, scope: !8452)
!8460 = !DILocation(line: 482, column: 23, scope: !8452)
!8461 = !DILocation(line: 482, column: 17, scope: !8452)
!8462 = !DILocation(line: 482, column: 53, scope: !8452)
!8463 = !DILocation(line: 483, column: 39, scope: !8452)
!8464 = !DILocation(line: 483, column: 20, scope: !8452)
!8465 = !DILocation(line: 483, column: 14, scope: !8452)
!8466 = !DILocation(line: 483, column: 11, scope: !8452)
!8467 = !DILocation(line: 484, column: 11, scope: !8452)
!8468 = !DILocation(line: 486, column: 9, scope: !8452)
!8469 = !DILocation(line: 486, column: 2, scope: !8452)
!8470 = distinct !DISubprogram(name: "dib7000p_set_channel", scope: !3, file: !3, line: 971, type: !8471, scopeLine: 973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8471 = !DISubroutineType(types: !8472)
!8472 = !{null, !4566, !546, !318}
!8473 = !DILocalVariable(name: "state", arg: 1, scope: !8470, file: !3, line: 971, type: !4566)
!8474 = !DILocation(line: 971, column: 57, scope: !8470)
!8475 = !DILocalVariable(name: "ch", arg: 2, scope: !8470, file: !3, line: 972, type: !546)
!8476 = !DILocation(line: 972, column: 38, scope: !8470)
!8477 = !DILocalVariable(name: "seq", arg: 3, scope: !8470, file: !3, line: 972, type: !318)
!8478 = !DILocation(line: 972, column: 45, scope: !8470)
!8479 = !DILocalVariable(name: "value", scope: !8470, file: !3, line: 974, type: !328)
!8480 = !DILocation(line: 974, column: 6, scope: !8470)
!8481 = !DILocalVariable(name: "est", scope: !8470, file: !3, line: 974, type: !8482)
!8482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 64, elements: !616)
!8483 = !DILocation(line: 974, column: 13, scope: !8470)
!8484 = !DILocation(line: 976, column: 25, scope: !8470)
!8485 = !DILocation(line: 976, column: 32, scope: !8470)
!8486 = !DILocation(line: 976, column: 2, scope: !8470)
!8487 = !DILocation(line: 979, column: 8, scope: !8470)
!8488 = !DILocation(line: 980, column: 10, scope: !8470)
!8489 = !DILocation(line: 980, column: 14, scope: !8470)
!8490 = !DILocation(line: 980, column: 2, scope: !8470)
!8491 = !DILocation(line: 982, column: 9, scope: !8492)
!8492 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 980, column: 33)
!8493 = !DILocation(line: 983, column: 3, scope: !8492)
!8494 = !DILocation(line: 985, column: 9, scope: !8492)
!8495 = !DILocation(line: 986, column: 3, scope: !8492)
!8496 = !DILocation(line: 989, column: 9, scope: !8492)
!8497 = !DILocation(line: 990, column: 3, scope: !8492)
!8498 = !DILocation(line: 992, column: 10, scope: !8470)
!8499 = !DILocation(line: 992, column: 14, scope: !8470)
!8500 = !DILocation(line: 992, column: 2, scope: !8470)
!8501 = !DILocation(line: 994, column: 9, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 992, column: 30)
!8503 = !DILocation(line: 995, column: 3, scope: !8502)
!8504 = !DILocation(line: 997, column: 9, scope: !8502)
!8505 = !DILocation(line: 998, column: 3, scope: !8502)
!8506 = !DILocation(line: 1000, column: 9, scope: !8502)
!8507 = !DILocation(line: 1001, column: 3, scope: !8502)
!8508 = !DILocation(line: 1004, column: 9, scope: !8502)
!8509 = !DILocation(line: 1005, column: 3, scope: !8502)
!8510 = !DILocation(line: 1007, column: 10, scope: !8470)
!8511 = !DILocation(line: 1007, column: 14, scope: !8470)
!8512 = !DILocation(line: 1007, column: 2, scope: !8470)
!8513 = !DILocation(line: 1009, column: 9, scope: !8514)
!8514 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1007, column: 26)
!8515 = !DILocation(line: 1010, column: 3, scope: !8514)
!8516 = !DILocation(line: 1012, column: 9, scope: !8514)
!8517 = !DILocation(line: 1013, column: 3, scope: !8514)
!8518 = !DILocation(line: 1016, column: 9, scope: !8514)
!8519 = !DILocation(line: 1017, column: 3, scope: !8514)
!8520 = !DILocation(line: 1028, column: 9, scope: !8470)
!8521 = !DILocation(line: 1031, column: 22, scope: !8470)
!8522 = !DILocation(line: 1031, column: 32, scope: !8470)
!8523 = !DILocation(line: 1031, column: 2, scope: !8470)
!8524 = !DILocation(line: 1032, column: 22, scope: !8470)
!8525 = !DILocation(line: 1032, column: 33, scope: !8470)
!8526 = !DILocation(line: 1032, column: 37, scope: !8470)
!8527 = !DILocation(line: 1032, column: 43, scope: !8470)
!8528 = !DILocation(line: 1032, column: 32, scope: !8470)
!8529 = !DILocation(line: 1032, column: 2, scope: !8470)
!8530 = !DILocation(line: 1035, column: 8, scope: !8470)
!8531 = !DILocation(line: 1037, column: 9, scope: !8532)
!8532 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1036, column: 6)
!8533 = !DILocation(line: 1038, column: 6, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1038, column: 6)
!8535 = !DILocation(line: 1038, column: 10, scope: !8534)
!8536 = !DILocation(line: 1038, column: 20, scope: !8534)
!8537 = !DILocation(line: 1038, column: 6, scope: !8470)
!8538 = !DILocation(line: 1039, column: 9, scope: !8534)
!8539 = !DILocation(line: 1039, column: 3, scope: !8534)
!8540 = !DILocation(line: 1041, column: 9, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1040, column: 6)
!8542 = !DILocation(line: 1042, column: 11, scope: !8470)
!8543 = !DILocation(line: 1042, column: 15, scope: !8470)
!8544 = !DILocation(line: 1042, column: 25, scope: !8470)
!8545 = !DILocation(line: 1042, column: 30, scope: !8470)
!8546 = !DILocation(line: 1042, column: 10, scope: !8470)
!8547 = !DILocation(line: 1042, column: 43, scope: !8470)
!8548 = !DILocation(line: 1042, column: 47, scope: !8470)
!8549 = !DILocation(line: 1042, column: 62, scope: !8470)
!8550 = !DILocation(line: 1042, column: 66, scope: !8470)
!8551 = !DILocation(line: 1042, column: 2, scope: !8470)
!8552 = !DILocation(line: 1044, column: 9, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1042, column: 80)
!8554 = !DILocation(line: 1045, column: 3, scope: !8553)
!8555 = !DILocation(line: 1047, column: 9, scope: !8553)
!8556 = !DILocation(line: 1048, column: 3, scope: !8553)
!8557 = !DILocation(line: 1050, column: 9, scope: !8553)
!8558 = !DILocation(line: 1051, column: 3, scope: !8553)
!8559 = !DILocation(line: 1053, column: 9, scope: !8553)
!8560 = !DILocation(line: 1054, column: 3, scope: !8553)
!8561 = !DILocation(line: 1057, column: 9, scope: !8553)
!8562 = !DILocation(line: 1058, column: 3, scope: !8553)
!8563 = !DILocation(line: 1060, column: 22, scope: !8470)
!8564 = !DILocation(line: 1060, column: 34, scope: !8470)
!8565 = !DILocation(line: 1060, column: 2, scope: !8470)
!8566 = !DILocation(line: 1063, column: 22, scope: !8470)
!8567 = !DILocation(line: 1063, column: 2, scope: !8470)
!8568 = !DILocation(line: 1064, column: 22, scope: !8470)
!8569 = !DILocation(line: 1064, column: 2, scope: !8470)
!8570 = !DILocation(line: 1065, column: 22, scope: !8470)
!8571 = !DILocation(line: 1065, column: 2, scope: !8470)
!8572 = !DILocation(line: 1066, column: 22, scope: !8470)
!8573 = !DILocation(line: 1066, column: 2, scope: !8470)
!8574 = !DILocation(line: 1069, column: 10, scope: !8470)
!8575 = !DILocation(line: 1069, column: 14, scope: !8470)
!8576 = !DILocation(line: 1069, column: 2, scope: !8470)
!8577 = !DILocation(line: 1071, column: 9, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1069, column: 33)
!8579 = !DILocation(line: 1072, column: 3, scope: !8578)
!8580 = !DILocation(line: 1074, column: 9, scope: !8578)
!8581 = !DILocation(line: 1075, column: 3, scope: !8578)
!8582 = !DILocation(line: 1078, column: 9, scope: !8578)
!8583 = !DILocation(line: 1079, column: 3, scope: !8578)
!8584 = !DILocation(line: 1081, column: 10, scope: !8470)
!8585 = !DILocation(line: 1081, column: 14, scope: !8470)
!8586 = !DILocation(line: 1081, column: 2, scope: !8470)
!8587 = !DILocation(line: 1083, column: 9, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1081, column: 30)
!8589 = !DILocation(line: 1084, column: 3, scope: !8588)
!8590 = !DILocation(line: 1086, column: 9, scope: !8588)
!8591 = !DILocation(line: 1087, column: 3, scope: !8588)
!8592 = !DILocation(line: 1089, column: 9, scope: !8588)
!8593 = !DILocation(line: 1090, column: 3, scope: !8588)
!8594 = !DILocation(line: 1093, column: 9, scope: !8588)
!8595 = !DILocation(line: 1094, column: 3, scope: !8588)
!8596 = !DILocation(line: 1096, column: 6, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1096, column: 6)
!8598 = !DILocation(line: 1096, column: 13, scope: !8597)
!8599 = !DILocation(line: 1096, column: 17, scope: !8597)
!8600 = !DILocation(line: 1096, column: 33, scope: !8597)
!8601 = !DILocation(line: 1096, column: 6, scope: !8470)
!8602 = !DILocation(line: 1097, column: 27, scope: !8597)
!8603 = !DILocation(line: 1097, column: 33, scope: !8597)
!8604 = !DILocation(line: 1097, column: 38, scope: !8597)
!8605 = !DILocation(line: 1097, column: 42, scope: !8597)
!8606 = !DILocation(line: 1097, column: 26, scope: !8597)
!8607 = !DILocation(line: 1097, column: 3, scope: !8597)
!8608 = !DILocation(line: 1097, column: 10, scope: !8597)
!8609 = !DILocation(line: 1097, column: 24, scope: !8597)
!8610 = !DILocation(line: 1099, column: 27, scope: !8597)
!8611 = !DILocation(line: 1099, column: 33, scope: !8597)
!8612 = !DILocation(line: 1099, column: 38, scope: !8597)
!8613 = !DILocation(line: 1099, column: 44, scope: !8597)
!8614 = !DILocation(line: 1099, column: 51, scope: !8597)
!8615 = !DILocation(line: 1099, column: 55, scope: !8597)
!8616 = !DILocation(line: 1099, column: 42, scope: !8597)
!8617 = !DILocation(line: 1099, column: 26, scope: !8597)
!8618 = !DILocation(line: 1099, column: 3, scope: !8597)
!8619 = !DILocation(line: 1099, column: 10, scope: !8597)
!8620 = !DILocation(line: 1099, column: 24, scope: !8597)
!8621 = !DILocation(line: 1102, column: 2, scope: !8470)
!8622 = !DILocation(line: 1102, column: 9, scope: !8470)
!8623 = !DILocation(line: 1102, column: 23, scope: !8470)
!8624 = !DILocation(line: 1103, column: 29, scope: !8470)
!8625 = !DILocation(line: 1103, column: 36, scope: !8470)
!8626 = !DILocation(line: 1103, column: 43, scope: !8470)
!8627 = !DILocation(line: 1103, column: 50, scope: !8470)
!8628 = !DILocation(line: 1103, column: 2, scope: !8470)
!8629 = !DILocation(line: 1106, column: 10, scope: !8470)
!8630 = !DILocation(line: 1106, column: 14, scope: !8470)
!8631 = !DILocation(line: 1106, column: 2, scope: !8470)
!8632 = !DILocation(line: 1108, column: 3, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1106, column: 26)
!8634 = !DILocation(line: 1108, column: 10, scope: !8633)
!8635 = !DILocation(line: 1109, column: 3, scope: !8633)
!8636 = !DILocation(line: 1109, column: 10, scope: !8633)
!8637 = !DILocation(line: 1110, column: 3, scope: !8633)
!8638 = !DILocation(line: 1110, column: 10, scope: !8633)
!8639 = !DILocation(line: 1111, column: 3, scope: !8633)
!8640 = !DILocation(line: 1111, column: 10, scope: !8633)
!8641 = !DILocation(line: 1112, column: 3, scope: !8633)
!8642 = !DILocation(line: 1114, column: 3, scope: !8633)
!8643 = !DILocation(line: 1114, column: 10, scope: !8633)
!8644 = !DILocation(line: 1115, column: 3, scope: !8633)
!8645 = !DILocation(line: 1115, column: 10, scope: !8633)
!8646 = !DILocation(line: 1116, column: 3, scope: !8633)
!8647 = !DILocation(line: 1116, column: 10, scope: !8633)
!8648 = !DILocation(line: 1117, column: 3, scope: !8633)
!8649 = !DILocation(line: 1117, column: 10, scope: !8633)
!8650 = !DILocation(line: 1118, column: 3, scope: !8633)
!8651 = !DILocation(line: 1120, column: 3, scope: !8633)
!8652 = !DILocation(line: 1120, column: 10, scope: !8633)
!8653 = !DILocation(line: 1121, column: 3, scope: !8633)
!8654 = !DILocation(line: 1121, column: 10, scope: !8633)
!8655 = !DILocation(line: 1122, column: 3, scope: !8633)
!8656 = !DILocation(line: 1122, column: 10, scope: !8633)
!8657 = !DILocation(line: 1123, column: 3, scope: !8633)
!8658 = !DILocation(line: 1123, column: 10, scope: !8633)
!8659 = !DILocation(line: 1124, column: 3, scope: !8633)
!8660 = !DILocation(line: 1126, column: 13, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8470, file: !3, line: 1126, column: 2)
!8662 = !DILocation(line: 1126, column: 7, scope: !8661)
!8663 = !DILocation(line: 1126, column: 18, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 1126, column: 2)
!8665 = !DILocation(line: 1126, column: 24, scope: !8664)
!8666 = !DILocation(line: 1126, column: 2, scope: !8661)
!8667 = !DILocation(line: 1127, column: 23, scope: !8664)
!8668 = !DILocation(line: 1127, column: 36, scope: !8664)
!8669 = !DILocation(line: 1127, column: 34, scope: !8664)
!8670 = !DILocation(line: 1127, column: 30, scope: !8664)
!8671 = !DILocation(line: 1127, column: 47, scope: !8664)
!8672 = !DILocation(line: 1127, column: 43, scope: !8664)
!8673 = !DILocation(line: 1127, column: 3, scope: !8664)
!8674 = !DILocation(line: 1126, column: 34, scope: !8664)
!8675 = !DILocation(line: 1126, column: 2, scope: !8664)
!8676 = distinct !{!8676, !8666, !8677}
!8677 = !DILocation(line: 1127, column: 53, scope: !8661)
!8678 = !DILocation(line: 1128, column: 1, scope: !8470)
!8679 = distinct !DISubprogram(name: "dib7000p_set_bandwidth", scope: !3, file: !3, line: 373, type: !8680, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8680 = !DISubroutineType(types: !8681)
!8681 = !{!327, !4566, !331}
!8682 = !DILocalVariable(name: "state", arg: 1, scope: !8679, file: !3, line: 373, type: !4566)
!8683 = !DILocation(line: 373, column: 58, scope: !8679)
!8684 = !DILocalVariable(name: "bw", arg: 2, scope: !8679, file: !3, line: 373, type: !331)
!8685 = !DILocation(line: 373, column: 69, scope: !8679)
!8686 = !DILocalVariable(name: "timf", scope: !8679, file: !3, line: 375, type: !331)
!8687 = !DILocation(line: 375, column: 6, scope: !8679)
!8688 = !DILocation(line: 378, column: 29, scope: !8679)
!8689 = !DILocation(line: 378, column: 2, scope: !8679)
!8690 = !DILocation(line: 378, column: 9, scope: !8679)
!8691 = !DILocation(line: 378, column: 27, scope: !8679)
!8692 = !DILocation(line: 380, column: 6, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8679, file: !3, line: 380, column: 6)
!8694 = !DILocation(line: 380, column: 13, scope: !8693)
!8695 = !DILocation(line: 380, column: 18, scope: !8693)
!8696 = !DILocation(line: 380, column: 6, scope: !8679)
!8697 = !DILocation(line: 381, column: 3, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 380, column: 24)
!8699 = !DILocation(line: 381, column: 3, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 381, column: 3)
!8701 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 381, column: 3)
!8702 = !DILocation(line: 381, column: 3, scope: !8701)
!8703 = !DILocation(line: 382, column: 10, scope: !8698)
!8704 = !DILocation(line: 382, column: 17, scope: !8698)
!8705 = !DILocation(line: 382, column: 21, scope: !8698)
!8706 = !DILocation(line: 382, column: 25, scope: !8698)
!8707 = !DILocation(line: 382, column: 8, scope: !8698)
!8708 = !DILocation(line: 383, column: 2, scope: !8698)
!8709 = !DILocation(line: 384, column: 3, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 383, column: 9)
!8711 = !DILocation(line: 384, column: 3, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 384, column: 3)
!8713 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 384, column: 3)
!8714 = !DILocation(line: 384, column: 3, scope: !8713)
!8715 = !DILocation(line: 385, column: 10, scope: !8710)
!8716 = !DILocation(line: 385, column: 17, scope: !8710)
!8717 = !DILocation(line: 385, column: 8, scope: !8710)
!8718 = !DILocation(line: 388, column: 9, scope: !8679)
!8719 = !DILocation(line: 388, column: 17, scope: !8679)
!8720 = !DILocation(line: 388, column: 20, scope: !8679)
!8721 = !DILocation(line: 388, column: 14, scope: !8679)
!8722 = !DILocation(line: 388, column: 26, scope: !8679)
!8723 = !DILocation(line: 388, column: 7, scope: !8679)
!8724 = !DILocation(line: 390, column: 22, scope: !8679)
!8725 = !DILocation(line: 390, column: 41, scope: !8679)
!8726 = !DILocation(line: 390, column: 46, scope: !8679)
!8727 = !DILocation(line: 390, column: 53, scope: !8679)
!8728 = !DILocation(line: 390, column: 33, scope: !8679)
!8729 = !DILocation(line: 390, column: 2, scope: !8679)
!8730 = !DILocation(line: 391, column: 22, scope: !8679)
!8731 = !DILocation(line: 391, column: 41, scope: !8679)
!8732 = !DILocation(line: 391, column: 47, scope: !8679)
!8733 = !DILocation(line: 391, column: 33, scope: !8679)
!8734 = !DILocation(line: 391, column: 2, scope: !8679)
!8735 = !DILocation(line: 393, column: 2, scope: !8679)
!8736 = distinct !DISubprogram(name: "dib7000p_set_diversity_in", scope: !3, file: !3, line: 226, type: !688, scopeLine: 227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8737 = !DILocalVariable(name: "demod", arg: 1, scope: !8736, file: !3, line: 226, type: !464)
!8738 = !DILocation(line: 226, column: 59, scope: !8736)
!8739 = !DILocalVariable(name: "onoff", arg: 2, scope: !8736, file: !3, line: 226, type: !327)
!8740 = !DILocation(line: 226, column: 70, scope: !8736)
!8741 = !DILocalVariable(name: "state", scope: !8736, file: !3, line: 228, type: !4566)
!8742 = !DILocation(line: 228, column: 25, scope: !8736)
!8743 = !DILocation(line: 228, column: 33, scope: !8736)
!8744 = !DILocation(line: 228, column: 40, scope: !8736)
!8745 = !DILocation(line: 230, column: 6, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 230, column: 6)
!8747 = !DILocation(line: 230, column: 13, scope: !8746)
!8748 = !DILocation(line: 230, column: 6, scope: !8736)
!8749 = !DILocation(line: 231, column: 3, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8746, file: !3, line: 230, column: 28)
!8751 = !DILocation(line: 231, column: 3, scope: !8752)
!8752 = distinct !DILexicalBlock(scope: !8753, file: !3, line: 231, column: 3)
!8753 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 231, column: 3)
!8754 = !DILocation(line: 231, column: 3, scope: !8753)
!8755 = !DILocation(line: 232, column: 9, scope: !8750)
!8756 = !DILocation(line: 233, column: 23, scope: !8750)
!8757 = !DILocation(line: 233, column: 3, scope: !8750)
!8758 = !DILocation(line: 234, column: 2, scope: !8750)
!8759 = !DILocation(line: 235, column: 23, scope: !8746)
!8760 = !DILocation(line: 235, column: 36, scope: !8746)
!8761 = !DILocation(line: 235, column: 43, scope: !8746)
!8762 = !DILocation(line: 235, column: 57, scope: !8746)
!8763 = !DILocation(line: 235, column: 63, scope: !8746)
!8764 = !DILocation(line: 235, column: 74, scope: !8746)
!8765 = !DILocation(line: 235, column: 35, scope: !8746)
!8766 = !DILocation(line: 235, column: 3, scope: !8746)
!8767 = !DILocation(line: 237, column: 26, scope: !8736)
!8768 = !DILocation(line: 237, column: 21, scope: !8736)
!8769 = !DILocation(line: 237, column: 2, scope: !8736)
!8770 = !DILocation(line: 237, column: 9, scope: !8736)
!8771 = !DILocation(line: 237, column: 19, scope: !8736)
!8772 = !DILocation(line: 239, column: 6, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 239, column: 6)
!8774 = !DILocation(line: 239, column: 6, scope: !8736)
!8775 = !DILocation(line: 240, column: 23, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 239, column: 13)
!8777 = !DILocation(line: 240, column: 3, scope: !8776)
!8778 = !DILocation(line: 241, column: 23, scope: !8776)
!8779 = !DILocation(line: 241, column: 3, scope: !8776)
!8780 = !DILocation(line: 243, column: 2, scope: !8776)
!8781 = !DILocation(line: 244, column: 23, scope: !8782)
!8782 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 243, column: 9)
!8783 = !DILocation(line: 244, column: 3, scope: !8782)
!8784 = !DILocation(line: 245, column: 23, scope: !8782)
!8785 = !DILocation(line: 245, column: 3, scope: !8782)
!8786 = !DILocation(line: 248, column: 2, scope: !8736)
!8787 = distinct !DISubprogram(name: "dib7000p_update_timf", scope: !3, file: !3, line: 944, type: !8090, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!8788 = !DILocalVariable(name: "state", arg: 1, scope: !8787, file: !3, line: 944, type: !4566)
!8789 = !DILocation(line: 944, column: 57, scope: !8787)
!8790 = !DILocalVariable(name: "timf", scope: !8787, file: !3, line: 946, type: !331)
!8791 = !DILocation(line: 946, column: 6, scope: !8787)
!8792 = !DILocation(line: 946, column: 33, scope: !8787)
!8793 = !DILocation(line: 946, column: 14, scope: !8787)
!8794 = !DILocation(line: 946, column: 45, scope: !8787)
!8795 = !DILocation(line: 946, column: 73, scope: !8787)
!8796 = !DILocation(line: 946, column: 54, scope: !8787)
!8797 = !DILocation(line: 946, column: 52, scope: !8787)
!8798 = !DILocation(line: 947, column: 16, scope: !8787)
!8799 = !DILocation(line: 947, column: 21, scope: !8787)
!8800 = !DILocation(line: 947, column: 30, scope: !8787)
!8801 = !DILocation(line: 947, column: 37, scope: !8787)
!8802 = !DILocation(line: 947, column: 55, scope: !8787)
!8803 = !DILocation(line: 947, column: 27, scope: !8787)
!8804 = !DILocation(line: 947, column: 2, scope: !8787)
!8805 = !DILocation(line: 947, column: 9, scope: !8787)
!8806 = !DILocation(line: 947, column: 14, scope: !8787)
!8807 = !DILocation(line: 948, column: 22, scope: !8787)
!8808 = !DILocation(line: 948, column: 40, scope: !8787)
!8809 = !DILocation(line: 948, column: 45, scope: !8787)
!8810 = !DILocation(line: 948, column: 33, scope: !8787)
!8811 = !DILocation(line: 948, column: 2, scope: !8787)
!8812 = !DILocation(line: 949, column: 22, scope: !8787)
!8813 = !DILocation(line: 949, column: 40, scope: !8787)
!8814 = !DILocation(line: 949, column: 45, scope: !8787)
!8815 = !DILocation(line: 949, column: 33, scope: !8787)
!8816 = !DILocation(line: 949, column: 2, scope: !8787)
!8817 = !DILocation(line: 950, column: 2, scope: !8787)
!8818 = !DILocation(line: 950, column: 2, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 950, column: 2)
!8820 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 950, column: 2)
!8821 = !DILocation(line: 950, column: 2, scope: !8820)
!8822 = !DILocation(line: 952, column: 1, scope: !8787)
!8823 = !DILocalVariable(name: "state", arg: 1, scope: !4563, file: !3, line: 1189, type: !4566)
!8824 = !DILocation(line: 1189, column: 58, scope: !4563)
!8825 = !DILocalVariable(name: "rf_khz", arg: 2, scope: !4563, file: !3, line: 1189, type: !331)
!8826 = !DILocation(line: 1189, column: 69, scope: !4563)
!8827 = !DILocalVariable(name: "bw", arg: 3, scope: !4563, file: !3, line: 1189, type: !331)
!8828 = !DILocation(line: 1189, column: 81, scope: !4563)
!8829 = !DILocalVariable(name: "xtal", scope: !4563, file: !3, line: 1211, type: !331)
!8830 = !DILocation(line: 1211, column: 6, scope: !4563)
!8831 = !DILocation(line: 1211, column: 13, scope: !4563)
!8832 = !DILocation(line: 1211, column: 20, scope: !4563)
!8833 = !DILocation(line: 1211, column: 24, scope: !4563)
!8834 = !DILocation(line: 1211, column: 28, scope: !4563)
!8835 = !DILocation(line: 1211, column: 36, scope: !4563)
!8836 = !DILocalVariable(name: "f_rel", scope: !4563, file: !3, line: 1212, type: !327)
!8837 = !DILocation(line: 1212, column: 6, scope: !4563)
!8838 = !DILocalVariable(name: "__x", scope: !8839, file: !3, line: 1212, type: !331)
!8839 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 1212, column: 14)
!8840 = !DILocation(line: 1212, column: 14, scope: !8839)
!8841 = !DILocalVariable(name: "__d", scope: !8839, file: !3, line: 1212, type: !331)
!8842 = !DILocation(line: 1212, column: 48, scope: !4563)
!8843 = !DILocation(line: 1212, column: 46, scope: !4563)
!8844 = !DILocation(line: 1212, column: 55, scope: !4563)
!8845 = !DILocation(line: 1212, column: 53, scope: !4563)
!8846 = !DILocalVariable(name: "k", scope: !4563, file: !3, line: 1213, type: !327)
!8847 = !DILocation(line: 1213, column: 6, scope: !4563)
!8848 = !DILocalVariable(name: "coef_re", scope: !4563, file: !3, line: 1214, type: !8849)
!8849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !327, size: 256, elements: !501)
!8850 = !DILocation(line: 1214, column: 6, scope: !4563)
!8851 = !DILocalVariable(name: "coef_im", scope: !4563, file: !3, line: 1214, type: !8849)
!8852 = !DILocation(line: 1214, column: 18, scope: !4563)
!8853 = !DILocalVariable(name: "bw_khz", scope: !4563, file: !3, line: 1215, type: !327)
!8854 = !DILocation(line: 1215, column: 6, scope: !4563)
!8855 = !DILocation(line: 1215, column: 15, scope: !4563)
!8856 = !DILocalVariable(name: "pha", scope: !4563, file: !3, line: 1216, type: !331)
!8857 = !DILocation(line: 1216, column: 6, scope: !4563)
!8858 = !DILocation(line: 1218, column: 2, scope: !4563)
!8859 = !DILocation(line: 1218, column: 2, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 1218, column: 2)
!8861 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 1218, column: 2)
!8862 = !DILocation(line: 1218, column: 2, scope: !8861)
!8863 = !DILocation(line: 1220, column: 6, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 1220, column: 6)
!8865 = !DILocation(line: 1220, column: 15, scope: !8864)
!8866 = !DILocation(line: 1220, column: 14, scope: !8864)
!8867 = !DILocation(line: 1220, column: 22, scope: !8864)
!8868 = !DILocation(line: 1220, column: 12, scope: !8864)
!8869 = !DILocation(line: 1220, column: 26, scope: !8864)
!8870 = !DILocation(line: 1220, column: 29, scope: !8864)
!8871 = !DILocation(line: 1220, column: 37, scope: !8864)
!8872 = !DILocation(line: 1220, column: 44, scope: !8864)
!8873 = !DILocation(line: 1220, column: 35, scope: !8864)
!8874 = !DILocation(line: 1220, column: 6, scope: !4563)
!8875 = !DILocation(line: 1221, column: 3, scope: !8864)
!8876 = !DILocation(line: 1223, column: 9, scope: !4563)
!8877 = !DILocation(line: 1225, column: 22, scope: !4563)
!8878 = !DILocation(line: 1225, column: 2, scope: !4563)
!8879 = !DILocation(line: 1227, column: 9, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !4563, file: !3, line: 1227, column: 2)
!8881 = !DILocation(line: 1227, column: 7, scope: !8880)
!8882 = !DILocation(line: 1227, column: 14, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8880, file: !3, line: 1227, column: 2)
!8884 = !DILocation(line: 1227, column: 16, scope: !8883)
!8885 = !DILocation(line: 1227, column: 2, scope: !8880)
!8886 = !DILocation(line: 1228, column: 11, scope: !8887)
!8887 = distinct !DILexicalBlock(scope: !8883, file: !3, line: 1227, column: 26)
!8888 = !DILocation(line: 1228, column: 20, scope: !8887)
!8889 = !DILocation(line: 1228, column: 22, scope: !8887)
!8890 = !DILocation(line: 1228, column: 17, scope: !8887)
!8891 = !DILocation(line: 1228, column: 27, scope: !8887)
!8892 = !DILocation(line: 1228, column: 33, scope: !8887)
!8893 = !DILocation(line: 1228, column: 40, scope: !8887)
!8894 = !DILocation(line: 1228, column: 38, scope: !8887)
!8895 = !DILocation(line: 1228, column: 48, scope: !8887)
!8896 = !DILocation(line: 1228, column: 56, scope: !8887)
!8897 = !DILocation(line: 1228, column: 7, scope: !8887)
!8898 = !DILocation(line: 1230, column: 7, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1230, column: 7)
!8900 = !DILocation(line: 1230, column: 11, scope: !8899)
!8901 = !DILocation(line: 1230, column: 7, scope: !8887)
!8902 = !DILocation(line: 1231, column: 12, scope: !8903)
!8903 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 1230, column: 17)
!8904 = !DILocation(line: 1231, column: 4, scope: !8903)
!8905 = !DILocation(line: 1231, column: 15, scope: !8903)
!8906 = !DILocation(line: 1232, column: 12, scope: !8903)
!8907 = !DILocation(line: 1232, column: 4, scope: !8903)
!8908 = !DILocation(line: 1232, column: 15, scope: !8903)
!8909 = !DILocation(line: 1233, column: 3, scope: !8903)
!8910 = !DILocation(line: 1233, column: 14, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 1233, column: 14)
!8912 = !DILocation(line: 1233, column: 18, scope: !8911)
!8913 = !DILocation(line: 1233, column: 14, scope: !8899)
!8914 = !DILocation(line: 1234, column: 29, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 1233, column: 25)
!8916 = !DILocation(line: 1234, column: 33, scope: !8915)
!8917 = !DILocation(line: 1234, column: 26, scope: !8915)
!8918 = !DILocation(line: 1234, column: 17, scope: !8915)
!8919 = !DILocation(line: 1234, column: 12, scope: !8915)
!8920 = !DILocation(line: 1234, column: 4, scope: !8915)
!8921 = !DILocation(line: 1234, column: 15, scope: !8915)
!8922 = !DILocation(line: 1235, column: 22, scope: !8915)
!8923 = !DILocation(line: 1235, column: 26, scope: !8915)
!8924 = !DILocation(line: 1235, column: 17, scope: !8915)
!8925 = !DILocation(line: 1235, column: 12, scope: !8915)
!8926 = !DILocation(line: 1235, column: 4, scope: !8915)
!8927 = !DILocation(line: 1235, column: 15, scope: !8915)
!8928 = !DILocation(line: 1236, column: 3, scope: !8915)
!8929 = !DILocation(line: 1236, column: 14, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8911, file: !3, line: 1236, column: 14)
!8931 = !DILocation(line: 1236, column: 18, scope: !8930)
!8932 = !DILocation(line: 1236, column: 14, scope: !8911)
!8933 = !DILocation(line: 1237, column: 12, scope: !8934)
!8934 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1236, column: 26)
!8935 = !DILocation(line: 1237, column: 4, scope: !8934)
!8936 = !DILocation(line: 1237, column: 15, scope: !8934)
!8937 = !DILocation(line: 1238, column: 12, scope: !8934)
!8938 = !DILocation(line: 1238, column: 4, scope: !8934)
!8939 = !DILocation(line: 1238, column: 15, scope: !8934)
!8940 = !DILocation(line: 1239, column: 3, scope: !8934)
!8941 = !DILocation(line: 1239, column: 14, scope: !8942)
!8942 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 1239, column: 14)
!8943 = !DILocation(line: 1239, column: 18, scope: !8942)
!8944 = !DILocation(line: 1239, column: 14, scope: !8930)
!8945 = !DILocation(line: 1240, column: 23, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1239, column: 25)
!8947 = !DILocation(line: 1240, column: 27, scope: !8946)
!8948 = !DILocation(line: 1240, column: 18, scope: !8946)
!8949 = !DILocation(line: 1240, column: 17, scope: !8946)
!8950 = !DILocation(line: 1240, column: 12, scope: !8946)
!8951 = !DILocation(line: 1240, column: 4, scope: !8946)
!8952 = !DILocation(line: 1240, column: 15, scope: !8946)
!8953 = !DILocation(line: 1241, column: 29, scope: !8946)
!8954 = !DILocation(line: 1241, column: 33, scope: !8946)
!8955 = !DILocation(line: 1241, column: 26, scope: !8946)
!8956 = !DILocation(line: 1241, column: 17, scope: !8946)
!8957 = !DILocation(line: 1241, column: 12, scope: !8946)
!8958 = !DILocation(line: 1241, column: 4, scope: !8946)
!8959 = !DILocation(line: 1241, column: 15, scope: !8946)
!8960 = !DILocation(line: 1242, column: 3, scope: !8946)
!8961 = !DILocation(line: 1242, column: 14, scope: !8962)
!8962 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1242, column: 14)
!8963 = !DILocation(line: 1242, column: 18, scope: !8962)
!8964 = !DILocation(line: 1242, column: 14, scope: !8942)
!8965 = !DILocation(line: 1243, column: 12, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1242, column: 26)
!8967 = !DILocation(line: 1243, column: 4, scope: !8966)
!8968 = !DILocation(line: 1243, column: 15, scope: !8966)
!8969 = !DILocation(line: 1244, column: 12, scope: !8966)
!8970 = !DILocation(line: 1244, column: 4, scope: !8966)
!8971 = !DILocation(line: 1244, column: 15, scope: !8966)
!8972 = !DILocation(line: 1245, column: 3, scope: !8966)
!8973 = !DILocation(line: 1245, column: 14, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8962, file: !3, line: 1245, column: 14)
!8975 = !DILocation(line: 1245, column: 18, scope: !8974)
!8976 = !DILocation(line: 1245, column: 14, scope: !8962)
!8977 = !DILocation(line: 1246, column: 30, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 1245, column: 25)
!8979 = !DILocation(line: 1246, column: 34, scope: !8978)
!8980 = !DILocation(line: 1246, column: 27, scope: !8978)
!8981 = !DILocation(line: 1246, column: 18, scope: !8978)
!8982 = !DILocation(line: 1246, column: 17, scope: !8978)
!8983 = !DILocation(line: 1246, column: 12, scope: !8978)
!8984 = !DILocation(line: 1246, column: 4, scope: !8978)
!8985 = !DILocation(line: 1246, column: 15, scope: !8978)
!8986 = !DILocation(line: 1247, column: 23, scope: !8978)
!8987 = !DILocation(line: 1247, column: 27, scope: !8978)
!8988 = !DILocation(line: 1247, column: 18, scope: !8978)
!8989 = !DILocation(line: 1247, column: 17, scope: !8978)
!8990 = !DILocation(line: 1247, column: 12, scope: !8978)
!8991 = !DILocation(line: 1247, column: 4, scope: !8978)
!8992 = !DILocation(line: 1247, column: 15, scope: !8978)
!8993 = !DILocation(line: 1248, column: 3, scope: !8978)
!8994 = !DILocation(line: 1248, column: 14, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8974, file: !3, line: 1248, column: 14)
!8996 = !DILocation(line: 1248, column: 18, scope: !8995)
!8997 = !DILocation(line: 1248, column: 14, scope: !8974)
!8998 = !DILocation(line: 1249, column: 12, scope: !8999)
!8999 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 1248, column: 26)
!9000 = !DILocation(line: 1249, column: 4, scope: !8999)
!9001 = !DILocation(line: 1249, column: 15, scope: !8999)
!9002 = !DILocation(line: 1250, column: 12, scope: !8999)
!9003 = !DILocation(line: 1250, column: 4, scope: !8999)
!9004 = !DILocation(line: 1250, column: 15, scope: !8999)
!9005 = !DILocation(line: 1251, column: 3, scope: !8999)
!9006 = !DILocation(line: 1252, column: 22, scope: !9007)
!9007 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 1251, column: 10)
!9008 = !DILocation(line: 1252, column: 26, scope: !9007)
!9009 = !DILocation(line: 1252, column: 17, scope: !9007)
!9010 = !DILocation(line: 1252, column: 12, scope: !9007)
!9011 = !DILocation(line: 1252, column: 4, scope: !9007)
!9012 = !DILocation(line: 1252, column: 15, scope: !9007)
!9013 = !DILocation(line: 1253, column: 30, scope: !9007)
!9014 = !DILocation(line: 1253, column: 34, scope: !9007)
!9015 = !DILocation(line: 1253, column: 27, scope: !9007)
!9016 = !DILocation(line: 1253, column: 18, scope: !9007)
!9017 = !DILocation(line: 1253, column: 17, scope: !9007)
!9018 = !DILocation(line: 1253, column: 12, scope: !9007)
!9019 = !DILocation(line: 1253, column: 4, scope: !9007)
!9020 = !DILocation(line: 1253, column: 15, scope: !9007)
!9021 = !DILocation(line: 1256, column: 23, scope: !8887)
!9022 = !DILocation(line: 1256, column: 17, scope: !8887)
!9023 = !DILocation(line: 1256, column: 11, scope: !8887)
!9024 = !DILocation(line: 1256, column: 3, scope: !8887)
!9025 = !DILocation(line: 1256, column: 14, scope: !8887)
!9026 = !DILocation(line: 1257, column: 11, scope: !8887)
!9027 = !DILocation(line: 1257, column: 3, scope: !8887)
!9028 = !DILocation(line: 1257, column: 14, scope: !8887)
!9029 = !DILocation(line: 1258, column: 15, scope: !9030)
!9030 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1258, column: 7)
!9031 = !DILocation(line: 1258, column: 7, scope: !9030)
!9032 = !DILocation(line: 1258, column: 18, scope: !9030)
!9033 = !DILocation(line: 1258, column: 7, scope: !8887)
!9034 = !DILocation(line: 1259, column: 12, scope: !9030)
!9035 = !DILocation(line: 1259, column: 4, scope: !9030)
!9036 = !DILocation(line: 1259, column: 15, scope: !9030)
!9037 = !DILocation(line: 1260, column: 11, scope: !8887)
!9038 = !DILocation(line: 1260, column: 3, scope: !8887)
!9039 = !DILocation(line: 1260, column: 14, scope: !8887)
!9040 = !DILocation(line: 1262, column: 23, scope: !8887)
!9041 = !DILocation(line: 1262, column: 17, scope: !8887)
!9042 = !DILocation(line: 1262, column: 11, scope: !8887)
!9043 = !DILocation(line: 1262, column: 3, scope: !8887)
!9044 = !DILocation(line: 1262, column: 14, scope: !8887)
!9045 = !DILocation(line: 1263, column: 11, scope: !8887)
!9046 = !DILocation(line: 1263, column: 3, scope: !8887)
!9047 = !DILocation(line: 1263, column: 14, scope: !8887)
!9048 = !DILocation(line: 1264, column: 15, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1264, column: 7)
!9050 = !DILocation(line: 1264, column: 7, scope: !9049)
!9051 = !DILocation(line: 1264, column: 18, scope: !9049)
!9052 = !DILocation(line: 1264, column: 7, scope: !8887)
!9053 = !DILocation(line: 1265, column: 12, scope: !9049)
!9054 = !DILocation(line: 1265, column: 4, scope: !9049)
!9055 = !DILocation(line: 1265, column: 15, scope: !9049)
!9056 = !DILocation(line: 1266, column: 11, scope: !8887)
!9057 = !DILocation(line: 1266, column: 3, scope: !8887)
!9058 = !DILocation(line: 1266, column: 14, scope: !8887)
!9059 = !DILocation(line: 1268, column: 3, scope: !8887)
!9060 = !DILocation(line: 1268, column: 3, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 1268, column: 3)
!9062 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 1268, column: 3)
!9063 = !DILocation(line: 1268, column: 3, scope: !9062)
!9064 = !DILocation(line: 1270, column: 23, scope: !8887)
!9065 = !DILocation(line: 1270, column: 48, scope: !8887)
!9066 = !DILocation(line: 1270, column: 50, scope: !8887)
!9067 = !DILocation(line: 1270, column: 45, scope: !8887)
!9068 = !DILocation(line: 1270, column: 68, scope: !8887)
!9069 = !DILocation(line: 1270, column: 60, scope: !8887)
!9070 = !DILocation(line: 1270, column: 71, scope: !8887)
!9071 = !DILocation(line: 1270, column: 57, scope: !8887)
!9072 = !DILocation(line: 1270, column: 35, scope: !8887)
!9073 = !DILocation(line: 1270, column: 3, scope: !8887)
!9074 = !DILocation(line: 1271, column: 23, scope: !8887)
!9075 = !DILocation(line: 1271, column: 43, scope: !8887)
!9076 = !DILocation(line: 1271, column: 35, scope: !8887)
!9077 = !DILocation(line: 1271, column: 46, scope: !8887)
!9078 = !DILocation(line: 1271, column: 3, scope: !8887)
!9079 = !DILocation(line: 1272, column: 23, scope: !8887)
!9080 = !DILocation(line: 1272, column: 48, scope: !8887)
!9081 = !DILocation(line: 1272, column: 50, scope: !8887)
!9082 = !DILocation(line: 1272, column: 45, scope: !8887)
!9083 = !DILocation(line: 1272, column: 68, scope: !8887)
!9084 = !DILocation(line: 1272, column: 60, scope: !8887)
!9085 = !DILocation(line: 1272, column: 71, scope: !8887)
!9086 = !DILocation(line: 1272, column: 57, scope: !8887)
!9087 = !DILocation(line: 1272, column: 35, scope: !8887)
!9088 = !DILocation(line: 1272, column: 3, scope: !8887)
!9089 = !DILocation(line: 1273, column: 2, scope: !8887)
!9090 = !DILocation(line: 1227, column: 22, scope: !8883)
!9091 = !DILocation(line: 1227, column: 2, scope: !8883)
!9092 = distinct !{!9092, !8885, !9093}
!9093 = !DILocation(line: 1273, column: 2, scope: !8880)
!9094 = !DILocation(line: 1274, column: 22, scope: !4563)
!9095 = !DILocation(line: 1274, column: 2, scope: !4563)
!9096 = !DILocation(line: 1275, column: 1, scope: !4563)
!9097 = distinct !DISubprogram(name: "dib7090_cfg_DibTx", scope: !3, file: !3, line: 2455, type: !9098, scopeLine: 2456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9098 = !DISubroutineType(types: !9099)
!9099 = !{!327, !4566, !331, !331, !331, !331, !331, !331}
!9100 = !DILocalVariable(name: "state", arg: 1, scope: !9097, file: !3, line: 2455, type: !4566)
!9101 = !DILocation(line: 2455, column: 53, scope: !9097)
!9102 = !DILocalVariable(name: "P_Kin", arg: 2, scope: !9097, file: !3, line: 2455, type: !331)
!9103 = !DILocation(line: 2455, column: 64, scope: !9097)
!9104 = !DILocalVariable(name: "P_Kout", arg: 3, scope: !9097, file: !3, line: 2455, type: !331)
!9105 = !DILocation(line: 2455, column: 75, scope: !9097)
!9106 = !DILocalVariable(name: "insertExtSynchro", arg: 4, scope: !9097, file: !3, line: 2455, type: !331)
!9107 = !DILocation(line: 2455, column: 87, scope: !9097)
!9108 = !DILocalVariable(name: "synchroMode", arg: 5, scope: !9097, file: !3, line: 2455, type: !331)
!9109 = !DILocation(line: 2455, column: 109, scope: !9097)
!9110 = !DILocalVariable(name: "syncWord", arg: 6, scope: !9097, file: !3, line: 2455, type: !331)
!9111 = !DILocation(line: 2455, column: 126, scope: !9097)
!9112 = !DILocalVariable(name: "syncSize", arg: 7, scope: !9097, file: !3, line: 2455, type: !331)
!9113 = !DILocation(line: 2455, column: 140, scope: !9097)
!9114 = !DILocation(line: 2457, column: 2, scope: !9097)
!9115 = !DILocation(line: 2457, column: 2, scope: !9116)
!9116 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2457, column: 2)
!9117 = distinct !DILexicalBlock(scope: !9097, file: !3, line: 2457, column: 2)
!9118 = !DILocation(line: 2457, column: 2, scope: !9117)
!9119 = !DILocation(line: 2459, column: 22, scope: !9097)
!9120 = !DILocation(line: 2459, column: 2, scope: !9097)
!9121 = !DILocation(line: 2460, column: 22, scope: !9097)
!9122 = !DILocation(line: 2460, column: 35, scope: !9097)
!9123 = !DILocation(line: 2460, column: 2, scope: !9097)
!9124 = !DILocation(line: 2461, column: 22, scope: !9097)
!9125 = !DILocation(line: 2461, column: 35, scope: !9097)
!9126 = !DILocation(line: 2461, column: 2, scope: !9097)
!9127 = !DILocation(line: 2462, column: 22, scope: !9097)
!9128 = !DILocation(line: 2462, column: 35, scope: !9097)
!9129 = !DILocation(line: 2462, column: 2, scope: !9097)
!9130 = !DILocation(line: 2463, column: 22, scope: !9097)
!9131 = !DILocation(line: 2463, column: 35, scope: !9097)
!9132 = !DILocation(line: 2463, column: 2, scope: !9097)
!9133 = !DILocation(line: 2464, column: 22, scope: !9097)
!9134 = !DILocation(line: 2464, column: 36, scope: !9097)
!9135 = !DILocation(line: 2464, column: 45, scope: !9097)
!9136 = !DILocation(line: 2464, column: 52, scope: !9097)
!9137 = !DILocation(line: 2464, column: 35, scope: !9097)
!9138 = !DILocation(line: 2464, column: 2, scope: !9097)
!9139 = !DILocation(line: 2465, column: 22, scope: !9097)
!9140 = !DILocation(line: 2465, column: 35, scope: !9097)
!9141 = !DILocation(line: 2465, column: 44, scope: !9097)
!9142 = !DILocation(line: 2465, column: 2, scope: !9097)
!9143 = !DILocation(line: 2466, column: 22, scope: !9097)
!9144 = !DILocation(line: 2466, column: 35, scope: !9097)
!9145 = !DILocation(line: 2466, column: 2, scope: !9097)
!9146 = !DILocation(line: 2467, column: 22, scope: !9097)
!9147 = !DILocation(line: 2467, column: 2, scope: !9097)
!9148 = !DILocation(line: 2469, column: 2, scope: !9097)
!9149 = distinct !DISubprogram(name: "dib7090_enMpegMux", scope: !3, file: !3, line: 2495, type: !8000, scopeLine: 2496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9150 = !DILocalVariable(name: "state", arg: 1, scope: !9149, file: !3, line: 2495, type: !4566)
!9151 = !DILocation(line: 2495, column: 54, scope: !9149)
!9152 = !DILocalVariable(name: "onoff", arg: 2, scope: !9149, file: !3, line: 2495, type: !327)
!9153 = !DILocation(line: 2495, column: 65, scope: !9149)
!9154 = !DILocalVariable(name: "reg_1287", scope: !9149, file: !3, line: 2497, type: !328)
!9155 = !DILocation(line: 2497, column: 6, scope: !9149)
!9156 = !DILocation(line: 2497, column: 36, scope: !9149)
!9157 = !DILocation(line: 2497, column: 17, scope: !9149)
!9158 = !DILocation(line: 2499, column: 10, scope: !9149)
!9159 = !DILocation(line: 2499, column: 2, scope: !9149)
!9160 = !DILocation(line: 2501, column: 13, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 2499, column: 17)
!9162 = !DILocation(line: 2502, column: 4, scope: !9161)
!9163 = !DILocation(line: 2504, column: 13, scope: !9161)
!9164 = !DILocation(line: 2505, column: 4, scope: !9161)
!9165 = !DILocation(line: 2508, column: 22, scope: !9149)
!9166 = !DILocation(line: 2508, column: 35, scope: !9149)
!9167 = !DILocation(line: 2508, column: 2, scope: !9149)
!9168 = !DILocation(line: 2509, column: 1, scope: !9149)
!9169 = distinct !DISubprogram(name: "dib7000p_get_stats", scope: !3, file: !3, line: 1896, type: !9170, scopeLine: 1897, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!327, !464, !40}
!9172 = !DILocalVariable(name: "m", arg: 1, scope: !9173, file: !9174, line: 363, type: !3215)
!9173 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !9174, file: !9174, line: 363, type: !9175, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9174 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!9175 = !DISubroutineType(types: !9176)
!9176 = !{!685, !3215}
!9177 = !DILocation(line: 363, column: 74, scope: !9173, inlinedAt: !9178)
!9178 = distinct !DILocation(line: 1968, column: 40, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 1966, column: 53)
!9180 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 1966, column: 6)
!9181 = !DILocation(line: 363, column: 74, scope: !9173, inlinedAt: !9182)
!9182 = distinct !DILocation(line: 1931, column: 40, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1930, column: 53)
!9184 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 1930, column: 6)
!9185 = !DILocalVariable(name: "demod", arg: 1, scope: !9169, file: !3, line: 1896, type: !464)
!9186 = !DILocation(line: 1896, column: 52, scope: !9169)
!9187 = !DILocalVariable(name: "stat", arg: 2, scope: !9169, file: !3, line: 1896, type: !40)
!9188 = !DILocation(line: 1896, column: 74, scope: !9169)
!9189 = !DILocalVariable(name: "state", scope: !9169, file: !3, line: 1898, type: !4566)
!9190 = !DILocation(line: 1898, column: 25, scope: !9169)
!9191 = !DILocation(line: 1898, column: 33, scope: !9169)
!9192 = !DILocation(line: 1898, column: 40, scope: !9169)
!9193 = !DILocalVariable(name: "c", scope: !9169, file: !3, line: 1899, type: !546)
!9194 = !DILocation(line: 1899, column: 34, scope: !9169)
!9195 = !DILocation(line: 1899, column: 39, scope: !9169)
!9196 = !DILocation(line: 1899, column: 46, scope: !9169)
!9197 = !DILocalVariable(name: "show_per_stats", scope: !9169, file: !3, line: 1900, type: !327)
!9198 = !DILocation(line: 1900, column: 6, scope: !9169)
!9199 = !DILocalVariable(name: "time_us", scope: !9169, file: !3, line: 1901, type: !331)
!9200 = !DILocation(line: 1901, column: 6, scope: !9169)
!9201 = !DILocalVariable(name: "val", scope: !9169, file: !3, line: 1901, type: !331)
!9202 = !DILocation(line: 1901, column: 19, scope: !9169)
!9203 = !DILocalVariable(name: "snr", scope: !9169, file: !3, line: 1901, type: !331)
!9204 = !DILocation(line: 1901, column: 24, scope: !9169)
!9205 = !DILocalVariable(name: "blocks", scope: !9169, file: !3, line: 1902, type: !335)
!9206 = !DILocation(line: 1902, column: 6, scope: !9169)
!9207 = !DILocalVariable(name: "ucb", scope: !9169, file: !3, line: 1902, type: !335)
!9208 = !DILocation(line: 1902, column: 14, scope: !9169)
!9209 = !DILocalVariable(name: "db", scope: !9169, file: !3, line: 1903, type: !325)
!9210 = !DILocation(line: 1903, column: 6, scope: !9169)
!9211 = !DILocalVariable(name: "strength", scope: !9169, file: !3, line: 1904, type: !328)
!9212 = !DILocation(line: 1904, column: 6, scope: !9169)
!9213 = !DILocation(line: 1907, column: 32, scope: !9169)
!9214 = !DILocation(line: 1907, column: 2, scope: !9169)
!9215 = !DILocation(line: 1908, column: 8, scope: !9169)
!9216 = !DILocation(line: 1908, column: 6, scope: !9169)
!9217 = !DILocation(line: 1909, column: 25, scope: !9169)
!9218 = !DILocation(line: 1909, column: 7, scope: !9169)
!9219 = !DILocation(line: 1911, column: 45, scope: !9169)
!9220 = !DILocation(line: 1909, column: 5, scope: !9169)
!9221 = !DILocation(line: 1912, column: 31, scope: !9169)
!9222 = !DILocation(line: 1912, column: 2, scope: !9169)
!9223 = !DILocation(line: 1912, column: 5, scope: !9169)
!9224 = !DILocation(line: 1912, column: 14, scope: !9169)
!9225 = !DILocation(line: 1912, column: 22, scope: !9169)
!9226 = !DILocation(line: 1912, column: 29, scope: !9169)
!9227 = !DILocation(line: 1915, column: 8, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 1915, column: 6)
!9229 = !DILocation(line: 1915, column: 13, scope: !9228)
!9230 = !DILocation(line: 1915, column: 6, scope: !9169)
!9231 = !DILocation(line: 1916, column: 3, scope: !9232)
!9232 = distinct !DILexicalBlock(scope: !9228, file: !3, line: 1915, column: 29)
!9233 = !DILocation(line: 1916, column: 6, scope: !9232)
!9234 = !DILocation(line: 1916, column: 10, scope: !9232)
!9235 = !DILocation(line: 1916, column: 14, scope: !9232)
!9236 = !DILocation(line: 1917, column: 3, scope: !9232)
!9237 = !DILocation(line: 1917, column: 6, scope: !9232)
!9238 = !DILocation(line: 1917, column: 18, scope: !9232)
!9239 = !DILocation(line: 1917, column: 22, scope: !9232)
!9240 = !DILocation(line: 1918, column: 3, scope: !9232)
!9241 = !DILocation(line: 1918, column: 6, scope: !9232)
!9242 = !DILocation(line: 1918, column: 18, scope: !9232)
!9243 = !DILocation(line: 1918, column: 22, scope: !9232)
!9244 = !DILocation(line: 1919, column: 3, scope: !9232)
!9245 = !DILocation(line: 1919, column: 6, scope: !9232)
!9246 = !DILocation(line: 1919, column: 21, scope: !9232)
!9247 = !DILocation(line: 1919, column: 25, scope: !9232)
!9248 = !DILocation(line: 1920, column: 3, scope: !9232)
!9249 = !DILocation(line: 1920, column: 6, scope: !9232)
!9250 = !DILocation(line: 1920, column: 21, scope: !9232)
!9251 = !DILocation(line: 1920, column: 25, scope: !9232)
!9252 = !DILocation(line: 1921, column: 3, scope: !9232)
!9253 = !DILocation(line: 1921, column: 6, scope: !9232)
!9254 = !DILocation(line: 1921, column: 10, scope: !9232)
!9255 = !DILocation(line: 1921, column: 18, scope: !9232)
!9256 = !DILocation(line: 1921, column: 24, scope: !9232)
!9257 = !DILocation(line: 1922, column: 3, scope: !9232)
!9258 = !DILocation(line: 1922, column: 6, scope: !9232)
!9259 = !DILocation(line: 1922, column: 21, scope: !9232)
!9260 = !DILocation(line: 1922, column: 29, scope: !9232)
!9261 = !DILocation(line: 1922, column: 35, scope: !9232)
!9262 = !DILocation(line: 1923, column: 3, scope: !9232)
!9263 = !DILocation(line: 1923, column: 6, scope: !9232)
!9264 = !DILocation(line: 1923, column: 21, scope: !9232)
!9265 = !DILocation(line: 1923, column: 29, scope: !9232)
!9266 = !DILocation(line: 1923, column: 35, scope: !9232)
!9267 = !DILocation(line: 1924, column: 3, scope: !9232)
!9268 = !DILocation(line: 1924, column: 6, scope: !9232)
!9269 = !DILocation(line: 1924, column: 18, scope: !9232)
!9270 = !DILocation(line: 1924, column: 26, scope: !9232)
!9271 = !DILocation(line: 1924, column: 32, scope: !9232)
!9272 = !DILocation(line: 1925, column: 3, scope: !9232)
!9273 = !DILocation(line: 1925, column: 6, scope: !9232)
!9274 = !DILocation(line: 1925, column: 18, scope: !9232)
!9275 = !DILocation(line: 1925, column: 26, scope: !9232)
!9276 = !DILocation(line: 1925, column: 32, scope: !9232)
!9277 = !DILocation(line: 1926, column: 3, scope: !9232)
!9278 = !DILocation(line: 1930, column: 6, scope: !9184)
!9279 = !DILocation(line: 1930, column: 6, scope: !9169)
!9280 = !DILocation(line: 1931, column: 30, scope: !9183)
!9281 = !DILocation(line: 365, column: 27, scope: !9282, inlinedAt: !9182)
!9282 = distinct !DILexicalBlock(scope: !9173, file: !9174, line: 365, column: 6)
!9283 = !DILocation(line: 365, column: 6, scope: !9282, inlinedAt: !9182)
!9284 = !DILocation(line: 365, column: 6, scope: !9173, inlinedAt: !9182)
!9285 = !DILocation(line: 366, column: 12, scope: !9286, inlinedAt: !9182)
!9286 = distinct !DILexicalBlock(scope: !9287, file: !9174, line: 366, column: 7)
!9287 = distinct !DILexicalBlock(scope: !9282, file: !9174, line: 365, column: 31)
!9288 = !DILocation(line: 366, column: 14, scope: !9286, inlinedAt: !9182)
!9289 = !DILocation(line: 366, column: 7, scope: !9287, inlinedAt: !9182)
!9290 = !DILocation(line: 367, column: 4, scope: !9286, inlinedAt: !9182)
!9291 = !DILocation(line: 368, column: 28, scope: !9287, inlinedAt: !9182)
!9292 = !DILocation(line: 368, column: 10, scope: !9287, inlinedAt: !9182)
!9293 = !DILocation(line: 368, column: 3, scope: !9287, inlinedAt: !9182)
!9294 = !DILocation(line: 370, column: 29, scope: !9295, inlinedAt: !9182)
!9295 = distinct !DILexicalBlock(scope: !9282, file: !9174, line: 369, column: 9)
!9296 = !DILocation(line: 370, column: 10, scope: !9295, inlinedAt: !9182)
!9297 = !DILocation(line: 370, column: 3, scope: !9295, inlinedAt: !9182)
!9298 = !DILocation(line: 372, column: 1, scope: !9173, inlinedAt: !9182)
!9299 = !DILocation(line: 1931, column: 38, scope: !9183)
!9300 = !DILocation(line: 1931, column: 3, scope: !9183)
!9301 = !DILocation(line: 1931, column: 10, scope: !9183)
!9302 = !DILocation(line: 1931, column: 28, scope: !9183)
!9303 = !DILocation(line: 1934, column: 26, scope: !9183)
!9304 = !DILocation(line: 1934, column: 9, scope: !9183)
!9305 = !DILocation(line: 1934, column: 7, scope: !9183)
!9306 = !DILocation(line: 1935, column: 7, scope: !9307)
!9307 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 1935, column: 7)
!9308 = !DILocation(line: 1935, column: 7, scope: !9183)
!9309 = !DILocation(line: 1936, column: 19, scope: !9307)
!9310 = !DILocation(line: 1936, column: 17, scope: !9307)
!9311 = !DILocation(line: 1936, column: 24, scope: !9307)
!9312 = !DILocation(line: 1936, column: 10, scope: !9307)
!9313 = !DILocation(line: 1936, column: 8, scope: !9307)
!9314 = !DILocation(line: 1936, column: 4, scope: !9307)
!9315 = !DILocation(line: 1938, column: 8, scope: !9307)
!9316 = !DILocation(line: 1939, column: 27, scope: !9183)
!9317 = !DILocation(line: 1939, column: 3, scope: !9183)
!9318 = !DILocation(line: 1939, column: 6, scope: !9183)
!9319 = !DILocation(line: 1939, column: 10, scope: !9183)
!9320 = !DILocation(line: 1939, column: 18, scope: !9183)
!9321 = !DILocation(line: 1939, column: 25, scope: !9183)
!9322 = !DILocation(line: 1940, column: 3, scope: !9183)
!9323 = !DILocation(line: 1940, column: 6, scope: !9183)
!9324 = !DILocation(line: 1940, column: 10, scope: !9183)
!9325 = !DILocation(line: 1940, column: 18, scope: !9183)
!9326 = !DILocation(line: 1940, column: 24, scope: !9183)
!9327 = !DILocation(line: 1943, column: 28, scope: !9183)
!9328 = !DILocation(line: 1943, column: 3, scope: !9183)
!9329 = !DILocation(line: 1944, column: 9, scope: !9183)
!9330 = !DILocation(line: 1944, column: 15, scope: !9183)
!9331 = !DILocation(line: 1944, column: 22, scope: !9183)
!9332 = !DILocation(line: 1944, column: 13, scope: !9183)
!9333 = !DILocation(line: 1944, column: 7, scope: !9183)
!9334 = !DILocation(line: 1945, column: 7, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 1945, column: 7)
!9336 = !DILocation(line: 1945, column: 13, scope: !9335)
!9337 = !DILocation(line: 1945, column: 20, scope: !9335)
!9338 = !DILocation(line: 1945, column: 11, scope: !9335)
!9339 = !DILocation(line: 1945, column: 7, scope: !9183)
!9340 = !DILocation(line: 1946, column: 8, scope: !9335)
!9341 = !DILocation(line: 1946, column: 4, scope: !9335)
!9342 = !DILocation(line: 1948, column: 3, scope: !9183)
!9343 = !DILocation(line: 1948, column: 6, scope: !9183)
!9344 = !DILocation(line: 1948, column: 18, scope: !9183)
!9345 = !DILocation(line: 1948, column: 26, scope: !9183)
!9346 = !DILocation(line: 1948, column: 32, scope: !9183)
!9347 = !DILocation(line: 1949, column: 35, scope: !9183)
!9348 = !DILocation(line: 1949, column: 3, scope: !9183)
!9349 = !DILocation(line: 1949, column: 6, scope: !9183)
!9350 = !DILocation(line: 1949, column: 18, scope: !9183)
!9351 = !DILocation(line: 1949, column: 26, scope: !9183)
!9352 = !DILocation(line: 1949, column: 33, scope: !9183)
!9353 = !DILocation(line: 1952, column: 8, scope: !9354)
!9354 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 1952, column: 7)
!9355 = !DILocation(line: 1952, column: 7, scope: !9183)
!9356 = !DILocation(line: 1953, column: 35, scope: !9354)
!9357 = !DILocation(line: 1953, column: 14, scope: !9354)
!9358 = !DILocation(line: 1953, column: 12, scope: !9354)
!9359 = !DILocation(line: 1953, column: 4, scope: !9354)
!9360 = !DILocation(line: 1955, column: 7, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 1955, column: 7)
!9362 = !DILocation(line: 1955, column: 7, scope: !9183)
!9363 = !DILocation(line: 1956, column: 11, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 1955, column: 16)
!9365 = !DILocalVariable(name: "__base", scope: !9366, file: !3, line: 1957, type: !1105)
!9366 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 1957, column: 4)
!9367 = !DILocation(line: 1957, column: 4, scope: !9366)
!9368 = !DILocalVariable(name: "__rem", scope: !9366, file: !3, line: 1957, type: !1105)
!9369 = !DILocation(line: 1958, column: 4, scope: !9364)
!9370 = !DILocation(line: 1958, column: 7, scope: !9364)
!9371 = !DILocation(line: 1958, column: 19, scope: !9364)
!9372 = !DILocation(line: 1958, column: 27, scope: !9364)
!9373 = !DILocation(line: 1958, column: 33, scope: !9364)
!9374 = !DILocation(line: 1959, column: 37, scope: !9364)
!9375 = !DILocation(line: 1959, column: 4, scope: !9364)
!9376 = !DILocation(line: 1959, column: 7, scope: !9364)
!9377 = !DILocation(line: 1959, column: 19, scope: !9364)
!9378 = !DILocation(line: 1959, column: 27, scope: !9364)
!9379 = !DILocation(line: 1959, column: 34, scope: !9364)
!9380 = !DILocation(line: 1960, column: 3, scope: !9364)
!9381 = !DILocation(line: 1962, column: 18, scope: !9183)
!9382 = !DILocation(line: 1963, column: 2, scope: !9183)
!9383 = !DILocation(line: 1966, column: 6, scope: !9180)
!9384 = !DILocation(line: 1966, column: 6, scope: !9169)
!9385 = !DILocation(line: 1967, column: 34, scope: !9179)
!9386 = !DILocation(line: 1967, column: 13, scope: !9179)
!9387 = !DILocation(line: 1967, column: 11, scope: !9179)
!9388 = !DILocation(line: 1968, column: 30, scope: !9179)
!9389 = !DILocation(line: 1968, column: 58, scope: !9179)
!9390 = !DILocation(line: 1968, column: 66, scope: !9179)
!9391 = !DILocation(line: 1968, column: 73, scope: !9179)
!9392 = !DILocation(line: 365, column: 27, scope: !9282, inlinedAt: !9178)
!9393 = !DILocation(line: 365, column: 6, scope: !9282, inlinedAt: !9178)
!9394 = !DILocation(line: 365, column: 6, scope: !9173, inlinedAt: !9178)
!9395 = !DILocation(line: 366, column: 12, scope: !9286, inlinedAt: !9178)
!9396 = !DILocation(line: 366, column: 14, scope: !9286, inlinedAt: !9178)
!9397 = !DILocation(line: 366, column: 7, scope: !9287, inlinedAt: !9178)
!9398 = !DILocation(line: 367, column: 4, scope: !9286, inlinedAt: !9178)
!9399 = !DILocation(line: 368, column: 28, scope: !9287, inlinedAt: !9178)
!9400 = !DILocation(line: 368, column: 10, scope: !9287, inlinedAt: !9178)
!9401 = !DILocation(line: 368, column: 3, scope: !9287, inlinedAt: !9178)
!9402 = !DILocation(line: 370, column: 29, scope: !9295, inlinedAt: !9178)
!9403 = !DILocation(line: 370, column: 10, scope: !9295, inlinedAt: !9178)
!9404 = !DILocation(line: 370, column: 3, scope: !9295, inlinedAt: !9178)
!9405 = !DILocation(line: 372, column: 1, scope: !9173, inlinedAt: !9178)
!9406 = !DILocation(line: 1968, column: 38, scope: !9179)
!9407 = !DILocation(line: 1968, column: 3, scope: !9179)
!9408 = !DILocation(line: 1968, column: 10, scope: !9179)
!9409 = !DILocation(line: 1968, column: 28, scope: !9179)
!9410 = !DILocation(line: 1970, column: 3, scope: !9179)
!9411 = !DILocation(line: 1970, column: 3, scope: !9412)
!9412 = distinct !DILexicalBlock(scope: !9413, file: !3, line: 1970, column: 3)
!9413 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 1970, column: 3)
!9414 = !DILocation(line: 1970, column: 3, scope: !9413)
!9415 = !DILocation(line: 1972, column: 21, scope: !9179)
!9416 = !DILocation(line: 1972, column: 3, scope: !9179)
!9417 = !DILocation(line: 1973, column: 3, scope: !9179)
!9418 = !DILocation(line: 1973, column: 6, scope: !9179)
!9419 = !DILocation(line: 1973, column: 21, scope: !9179)
!9420 = !DILocation(line: 1973, column: 29, scope: !9179)
!9421 = !DILocation(line: 1973, column: 35, scope: !9179)
!9422 = !DILocation(line: 1974, column: 39, scope: !9179)
!9423 = !DILocation(line: 1974, column: 3, scope: !9179)
!9424 = !DILocation(line: 1974, column: 6, scope: !9179)
!9425 = !DILocation(line: 1974, column: 21, scope: !9179)
!9426 = !DILocation(line: 1974, column: 29, scope: !9179)
!9427 = !DILocation(line: 1974, column: 36, scope: !9179)
!9428 = !DILocation(line: 1976, column: 3, scope: !9179)
!9429 = !DILocation(line: 1976, column: 6, scope: !9179)
!9430 = !DILocation(line: 1976, column: 21, scope: !9179)
!9431 = !DILocation(line: 1976, column: 29, scope: !9179)
!9432 = !DILocation(line: 1976, column: 35, scope: !9179)
!9433 = !DILocation(line: 1977, column: 3, scope: !9179)
!9434 = !DILocation(line: 1977, column: 6, scope: !9179)
!9435 = !DILocation(line: 1977, column: 21, scope: !9179)
!9436 = !DILocation(line: 1977, column: 29, scope: !9179)
!9437 = !DILocation(line: 1977, column: 36, scope: !9179)
!9438 = !DILocation(line: 1978, column: 2, scope: !9179)
!9439 = !DILocation(line: 1981, column: 6, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 1981, column: 6)
!9441 = !DILocation(line: 1981, column: 6, scope: !9169)
!9442 = !DILocation(line: 1982, column: 28, scope: !9443)
!9443 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1981, column: 22)
!9444 = !DILocation(line: 1982, column: 3, scope: !9443)
!9445 = !DILocation(line: 1984, column: 3, scope: !9443)
!9446 = !DILocation(line: 1984, column: 6, scope: !9443)
!9447 = !DILocation(line: 1984, column: 18, scope: !9443)
!9448 = !DILocation(line: 1984, column: 26, scope: !9443)
!9449 = !DILocation(line: 1984, column: 32, scope: !9443)
!9450 = !DILocation(line: 1985, column: 36, scope: !9443)
!9451 = !DILocation(line: 1985, column: 3, scope: !9443)
!9452 = !DILocation(line: 1985, column: 6, scope: !9443)
!9453 = !DILocation(line: 1985, column: 18, scope: !9443)
!9454 = !DILocation(line: 1985, column: 26, scope: !9443)
!9455 = !DILocation(line: 1985, column: 33, scope: !9443)
!9456 = !DILocation(line: 1987, column: 34, scope: !9443)
!9457 = !DILocation(line: 1987, column: 13, scope: !9443)
!9458 = !DILocation(line: 1987, column: 11, scope: !9443)
!9459 = !DILocation(line: 1988, column: 7, scope: !9460)
!9460 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 1988, column: 7)
!9461 = !DILocation(line: 1988, column: 7, scope: !9443)
!9462 = !DILocation(line: 1989, column: 11, scope: !9463)
!9463 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 1988, column: 16)
!9464 = !DILocalVariable(name: "__base", scope: !9465, file: !3, line: 1990, type: !1105)
!9465 = distinct !DILexicalBlock(scope: !9463, file: !3, line: 1990, column: 4)
!9466 = !DILocation(line: 1990, column: 4, scope: !9465)
!9467 = !DILocalVariable(name: "__rem", scope: !9465, file: !3, line: 1990, type: !1105)
!9468 = !DILocation(line: 1991, column: 4, scope: !9463)
!9469 = !DILocation(line: 1991, column: 7, scope: !9463)
!9470 = !DILocation(line: 1991, column: 19, scope: !9463)
!9471 = !DILocation(line: 1991, column: 27, scope: !9463)
!9472 = !DILocation(line: 1991, column: 33, scope: !9463)
!9473 = !DILocation(line: 1992, column: 37, scope: !9463)
!9474 = !DILocation(line: 1992, column: 4, scope: !9463)
!9475 = !DILocation(line: 1992, column: 7, scope: !9463)
!9476 = !DILocation(line: 1992, column: 19, scope: !9463)
!9477 = !DILocation(line: 1992, column: 27, scope: !9463)
!9478 = !DILocation(line: 1992, column: 34, scope: !9463)
!9479 = !DILocation(line: 1993, column: 3, scope: !9463)
!9480 = !DILocation(line: 1994, column: 2, scope: !9443)
!9481 = !DILocation(line: 1995, column: 2, scope: !9169)
!9482 = !DILocation(line: 1996, column: 1, scope: !9169)
!9483 = distinct !DISubprogram(name: "interpolate_value", scope: !3, file: !3, line: 1762, type: !9484, scopeLine: 1764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9484 = !DISubroutineType(types: !9485)
!9485 = !{!331, !331, !9486, !7}
!9486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!9487 = !DILocalVariable(name: "value", arg: 1, scope: !9483, file: !3, line: 1762, type: !331)
!9488 = !DILocation(line: 1762, column: 34, scope: !9483)
!9489 = !DILocalVariable(name: "segments", arg: 2, scope: !9483, file: !3, line: 1762, type: !9486)
!9490 = !DILocation(line: 1762, column: 65, scope: !9483)
!9491 = !DILocalVariable(name: "len", arg: 3, scope: !9483, file: !3, line: 1763, type: !7)
!9492 = !DILocation(line: 1763, column: 18, scope: !9483)
!9493 = !DILocalVariable(name: "tmp64", scope: !9483, file: !3, line: 1765, type: !335)
!9494 = !DILocation(line: 1765, column: 6, scope: !9483)
!9495 = !DILocalVariable(name: "dx", scope: !9483, file: !3, line: 1766, type: !331)
!9496 = !DILocation(line: 1766, column: 6, scope: !9483)
!9497 = !DILocalVariable(name: "dy", scope: !9483, file: !3, line: 1767, type: !325)
!9498 = !DILocation(line: 1767, column: 6, scope: !9483)
!9499 = !DILocalVariable(name: "i", scope: !9483, file: !3, line: 1768, type: !327)
!9500 = !DILocation(line: 1768, column: 6, scope: !9483)
!9501 = !DILocalVariable(name: "ret", scope: !9483, file: !3, line: 1768, type: !327)
!9502 = !DILocation(line: 1768, column: 9, scope: !9483)
!9503 = !DILocation(line: 1770, column: 6, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 1770, column: 6)
!9505 = !DILocation(line: 1770, column: 15, scope: !9504)
!9506 = !DILocation(line: 1770, column: 27, scope: !9504)
!9507 = !DILocation(line: 1770, column: 12, scope: !9504)
!9508 = !DILocation(line: 1770, column: 6, scope: !9483)
!9509 = !DILocation(line: 1771, column: 10, scope: !9504)
!9510 = !DILocation(line: 1771, column: 22, scope: !9504)
!9511 = !DILocation(line: 1771, column: 3, scope: !9504)
!9512 = !DILocation(line: 1772, column: 6, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 1772, column: 6)
!9514 = !DILocation(line: 1772, column: 14, scope: !9513)
!9515 = !DILocation(line: 1772, column: 23, scope: !9513)
!9516 = !DILocation(line: 1772, column: 26, scope: !9513)
!9517 = !DILocation(line: 1772, column: 30, scope: !9513)
!9518 = !DILocation(line: 1772, column: 12, scope: !9513)
!9519 = !DILocation(line: 1772, column: 6, scope: !9483)
!9520 = !DILocation(line: 1773, column: 10, scope: !9513)
!9521 = !DILocation(line: 1773, column: 19, scope: !9513)
!9522 = !DILocation(line: 1773, column: 22, scope: !9513)
!9523 = !DILocation(line: 1773, column: 26, scope: !9513)
!9524 = !DILocation(line: 1773, column: 3, scope: !9513)
!9525 = !DILocation(line: 1775, column: 9, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 1775, column: 2)
!9527 = !DILocation(line: 1775, column: 7, scope: !9526)
!9528 = !DILocation(line: 1775, column: 14, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 1775, column: 2)
!9530 = !DILocation(line: 1775, column: 18, scope: !9529)
!9531 = !DILocation(line: 1775, column: 22, scope: !9529)
!9532 = !DILocation(line: 1775, column: 16, scope: !9529)
!9533 = !DILocation(line: 1775, column: 2, scope: !9526)
!9534 = !DILocation(line: 1777, column: 7, scope: !9535)
!9535 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1777, column: 7)
!9536 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 1775, column: 32)
!9537 = !DILocation(line: 1777, column: 16, scope: !9535)
!9538 = !DILocation(line: 1777, column: 25, scope: !9535)
!9539 = !DILocation(line: 1777, column: 28, scope: !9535)
!9540 = !DILocation(line: 1777, column: 13, scope: !9535)
!9541 = !DILocation(line: 1777, column: 7, scope: !9536)
!9542 = !DILocation(line: 1778, column: 11, scope: !9535)
!9543 = !DILocation(line: 1778, column: 20, scope: !9535)
!9544 = !DILocation(line: 1778, column: 23, scope: !9535)
!9545 = !DILocation(line: 1778, column: 4, scope: !9535)
!9546 = !DILocation(line: 1779, column: 7, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1779, column: 7)
!9548 = !DILocation(line: 1779, column: 15, scope: !9547)
!9549 = !DILocation(line: 1779, column: 24, scope: !9547)
!9550 = !DILocation(line: 1779, column: 27, scope: !9547)
!9551 = !DILocation(line: 1779, column: 13, scope: !9547)
!9552 = !DILocation(line: 1779, column: 7, scope: !9536)
!9553 = !DILocation(line: 1780, column: 4, scope: !9547)
!9554 = !DILocation(line: 1781, column: 2, scope: !9536)
!9555 = !DILocation(line: 1775, column: 28, scope: !9529)
!9556 = !DILocation(line: 1775, column: 2, scope: !9529)
!9557 = distinct !{!9557, !9533, !9558}
!9558 = !DILocation(line: 1781, column: 2, scope: !9526)
!9559 = !DILocation(line: 1784, column: 7, scope: !9483)
!9560 = !DILocation(line: 1784, column: 16, scope: !9483)
!9561 = !DILocation(line: 1784, column: 18, scope: !9483)
!9562 = !DILocation(line: 1784, column: 23, scope: !9483)
!9563 = !DILocation(line: 1784, column: 27, scope: !9483)
!9564 = !DILocation(line: 1784, column: 36, scope: !9483)
!9565 = !DILocation(line: 1784, column: 39, scope: !9483)
!9566 = !DILocation(line: 1784, column: 25, scope: !9483)
!9567 = !DILocation(line: 1784, column: 5, scope: !9483)
!9568 = !DILocation(line: 1785, column: 7, scope: !9483)
!9569 = !DILocation(line: 1785, column: 16, scope: !9483)
!9570 = !DILocation(line: 1785, column: 18, scope: !9483)
!9571 = !DILocation(line: 1785, column: 23, scope: !9483)
!9572 = !DILocation(line: 1785, column: 27, scope: !9483)
!9573 = !DILocation(line: 1785, column: 36, scope: !9483)
!9574 = !DILocation(line: 1785, column: 39, scope: !9483)
!9575 = !DILocation(line: 1785, column: 25, scope: !9483)
!9576 = !DILocation(line: 1785, column: 5, scope: !9483)
!9577 = !DILocation(line: 1787, column: 10, scope: !9483)
!9578 = !DILocation(line: 1787, column: 18, scope: !9483)
!9579 = !DILocation(line: 1787, column: 27, scope: !9483)
!9580 = !DILocation(line: 1787, column: 30, scope: !9483)
!9581 = !DILocation(line: 1787, column: 16, scope: !9483)
!9582 = !DILocation(line: 1787, column: 8, scope: !9483)
!9583 = !DILocation(line: 1788, column: 11, scope: !9483)
!9584 = !DILocation(line: 1788, column: 8, scope: !9483)
!9585 = !DILocalVariable(name: "__base", scope: !9586, file: !3, line: 1789, type: !1105)
!9586 = distinct !DILexicalBlock(scope: !9483, file: !3, line: 1789, column: 2)
!9587 = !DILocation(line: 1789, column: 2, scope: !9586)
!9588 = !DILocalVariable(name: "__rem", scope: !9586, file: !3, line: 1789, type: !1105)
!9589 = !DILocation(line: 1790, column: 8, scope: !9483)
!9590 = !DILocation(line: 1790, column: 17, scope: !9483)
!9591 = !DILocation(line: 1790, column: 20, scope: !9483)
!9592 = !DILocation(line: 1790, column: 24, scope: !9483)
!9593 = !DILocation(line: 1790, column: 22, scope: !9483)
!9594 = !DILocation(line: 1790, column: 6, scope: !9483)
!9595 = !DILocation(line: 1792, column: 9, scope: !9483)
!9596 = !DILocation(line: 1792, column: 2, scope: !9483)
!9597 = !DILocation(line: 1793, column: 1, scope: !9483)
!9598 = distinct !DISubprogram(name: "dib7000p_get_snr", scope: !3, file: !3, line: 1621, type: !9599, scopeLine: 1622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9599 = !DISubroutineType(types: !9600)
!9600 = !{!331, !464}
!9601 = !DILocalVariable(name: "fe", arg: 1, scope: !9598, file: !3, line: 1621, type: !464)
!9602 = !DILocation(line: 1621, column: 50, scope: !9598)
!9603 = !DILocalVariable(name: "state", scope: !9598, file: !3, line: 1623, type: !4566)
!9604 = !DILocation(line: 1623, column: 25, scope: !9598)
!9605 = !DILocation(line: 1623, column: 33, scope: !9598)
!9606 = !DILocation(line: 1623, column: 37, scope: !9598)
!9607 = !DILocalVariable(name: "val", scope: !9598, file: !3, line: 1624, type: !328)
!9608 = !DILocation(line: 1624, column: 6, scope: !9598)
!9609 = !DILocalVariable(name: "signal_mant", scope: !9598, file: !3, line: 1625, type: !325)
!9610 = !DILocation(line: 1625, column: 6, scope: !9598)
!9611 = !DILocalVariable(name: "signal_exp", scope: !9598, file: !3, line: 1625, type: !325)
!9612 = !DILocation(line: 1625, column: 19, scope: !9598)
!9613 = !DILocalVariable(name: "noise_mant", scope: !9598, file: !3, line: 1625, type: !325)
!9614 = !DILocation(line: 1625, column: 31, scope: !9598)
!9615 = !DILocalVariable(name: "noise_exp", scope: !9598, file: !3, line: 1625, type: !325)
!9616 = !DILocation(line: 1625, column: 43, scope: !9598)
!9617 = !DILocalVariable(name: "result", scope: !9598, file: !3, line: 1626, type: !331)
!9618 = !DILocation(line: 1626, column: 6, scope: !9598)
!9619 = !DILocation(line: 1628, column: 27, scope: !9598)
!9620 = !DILocation(line: 1628, column: 8, scope: !9598)
!9621 = !DILocation(line: 1628, column: 6, scope: !9598)
!9622 = !DILocation(line: 1629, column: 16, scope: !9598)
!9623 = !DILocation(line: 1629, column: 20, scope: !9598)
!9624 = !DILocation(line: 1629, column: 26, scope: !9598)
!9625 = !DILocation(line: 1629, column: 13, scope: !9598)
!9626 = !DILocation(line: 1630, column: 16, scope: !9598)
!9627 = !DILocation(line: 1630, column: 20, scope: !9598)
!9628 = !DILocation(line: 1630, column: 27, scope: !9598)
!9629 = !DILocation(line: 1630, column: 12, scope: !9598)
!9630 = !DILocation(line: 1631, column: 27, scope: !9598)
!9631 = !DILocation(line: 1631, column: 8, scope: !9598)
!9632 = !DILocation(line: 1631, column: 6, scope: !9598)
!9633 = !DILocation(line: 1632, column: 17, scope: !9598)
!9634 = !DILocation(line: 1632, column: 21, scope: !9598)
!9635 = !DILocation(line: 1632, column: 28, scope: !9598)
!9636 = !DILocation(line: 1632, column: 12, scope: !9598)
!9637 = !DILocation(line: 1633, column: 7, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 1633, column: 6)
!9639 = !DILocation(line: 1633, column: 17, scope: !9638)
!9640 = !DILocation(line: 1633, column: 25, scope: !9638)
!9641 = !DILocation(line: 1633, column: 6, scope: !9598)
!9642 = !DILocation(line: 1634, column: 13, scope: !9638)
!9643 = !DILocation(line: 1634, column: 3, scope: !9638)
!9644 = !DILocation(line: 1636, column: 17, scope: !9598)
!9645 = !DILocation(line: 1636, column: 21, scope: !9598)
!9646 = !DILocation(line: 1636, column: 27, scope: !9598)
!9647 = !DILocation(line: 1636, column: 14, scope: !9598)
!9648 = !DILocation(line: 1637, column: 16, scope: !9598)
!9649 = !DILocation(line: 1637, column: 20, scope: !9598)
!9650 = !DILocation(line: 1637, column: 13, scope: !9598)
!9651 = !DILocation(line: 1638, column: 7, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 1638, column: 6)
!9653 = !DILocation(line: 1638, column: 18, scope: !9652)
!9654 = !DILocation(line: 1638, column: 26, scope: !9652)
!9655 = !DILocation(line: 1638, column: 6, scope: !9598)
!9656 = !DILocation(line: 1639, column: 14, scope: !9652)
!9657 = !DILocation(line: 1639, column: 3, scope: !9652)
!9658 = !DILocation(line: 1641, column: 6, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 1641, column: 6)
!9660 = !DILocation(line: 1641, column: 18, scope: !9659)
!9661 = !DILocation(line: 1641, column: 6, scope: !9598)
!9662 = !DILocation(line: 1642, column: 12, scope: !9659)
!9663 = !DILocation(line: 1642, column: 24, scope: !9659)
!9664 = !DILocation(line: 1642, column: 31, scope: !9659)
!9665 = !DILocation(line: 1642, column: 29, scope: !9659)
!9666 = !DILocation(line: 1642, column: 58, scope: !9659)
!9667 = !DILocation(line: 1642, column: 49, scope: !9659)
!9668 = !DILocation(line: 1642, column: 47, scope: !9659)
!9669 = !DILocation(line: 1642, column: 42, scope: !9659)
!9670 = !DILocation(line: 1642, column: 10, scope: !9659)
!9671 = !DILocation(line: 1642, column: 3, scope: !9659)
!9672 = !DILocation(line: 1644, column: 12, scope: !9659)
!9673 = !DILocation(line: 1644, column: 24, scope: !9659)
!9674 = !DILocation(line: 1644, column: 31, scope: !9659)
!9675 = !DILocation(line: 1644, column: 29, scope: !9659)
!9676 = !DILocation(line: 1644, column: 42, scope: !9659)
!9677 = !DILocation(line: 1644, column: 10, scope: !9659)
!9678 = !DILocation(line: 1646, column: 6, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9598, file: !3, line: 1646, column: 6)
!9680 = !DILocation(line: 1646, column: 17, scope: !9679)
!9681 = !DILocation(line: 1646, column: 6, scope: !9598)
!9682 = !DILocation(line: 1647, column: 13, scope: !9679)
!9683 = !DILocation(line: 1647, column: 25, scope: !9679)
!9684 = !DILocation(line: 1647, column: 32, scope: !9679)
!9685 = !DILocation(line: 1647, column: 30, scope: !9679)
!9686 = !DILocation(line: 1647, column: 58, scope: !9679)
!9687 = !DILocation(line: 1647, column: 49, scope: !9679)
!9688 = !DILocation(line: 1647, column: 47, scope: !9679)
!9689 = !DILocation(line: 1647, column: 42, scope: !9679)
!9690 = !DILocation(line: 1647, column: 10, scope: !9679)
!9691 = !DILocation(line: 1647, column: 3, scope: !9679)
!9692 = !DILocation(line: 1649, column: 13, scope: !9679)
!9693 = !DILocation(line: 1649, column: 25, scope: !9679)
!9694 = !DILocation(line: 1649, column: 32, scope: !9679)
!9695 = !DILocation(line: 1649, column: 30, scope: !9679)
!9696 = !DILocation(line: 1649, column: 42, scope: !9679)
!9697 = !DILocation(line: 1649, column: 10, scope: !9679)
!9698 = !DILocation(line: 1651, column: 9, scope: !9598)
!9699 = !DILocation(line: 1651, column: 2, scope: !9598)
!9700 = distinct !DISubprogram(name: "dib7000p_get_time_us", scope: !3, file: !3, line: 1796, type: !9599, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9701 = !DILocalVariable(name: "demod", arg: 1, scope: !9700, file: !3, line: 1796, type: !464)
!9702 = !DILocation(line: 1796, column: 54, scope: !9700)
!9703 = !DILocalVariable(name: "c", scope: !9700, file: !3, line: 1798, type: !546)
!9704 = !DILocation(line: 1798, column: 34, scope: !9700)
!9705 = !DILocation(line: 1798, column: 39, scope: !9700)
!9706 = !DILocation(line: 1798, column: 46, scope: !9700)
!9707 = !DILocalVariable(name: "time_us", scope: !9700, file: !3, line: 1799, type: !335)
!9708 = !DILocation(line: 1799, column: 6, scope: !9700)
!9709 = !DILocalVariable(name: "tmp64", scope: !9700, file: !3, line: 1799, type: !335)
!9710 = !DILocation(line: 1799, column: 15, scope: !9700)
!9711 = !DILocalVariable(name: "tmp", scope: !9700, file: !3, line: 1800, type: !331)
!9712 = !DILocation(line: 1800, column: 6, scope: !9700)
!9713 = !DILocalVariable(name: "denom", scope: !9700, file: !3, line: 1800, type: !331)
!9714 = !DILocation(line: 1800, column: 11, scope: !9700)
!9715 = !DILocalVariable(name: "guard", scope: !9700, file: !3, line: 1801, type: !327)
!9716 = !DILocation(line: 1801, column: 6, scope: !9700)
!9717 = !DILocalVariable(name: "rate_num", scope: !9700, file: !3, line: 1801, type: !327)
!9718 = !DILocation(line: 1801, column: 13, scope: !9700)
!9719 = !DILocalVariable(name: "rate_denum", scope: !9700, file: !3, line: 1801, type: !327)
!9720 = !DILocation(line: 1801, column: 23, scope: !9700)
!9721 = !DILocalVariable(name: "bits_per_symbol", scope: !9700, file: !3, line: 1801, type: !327)
!9722 = !DILocation(line: 1801, column: 39, scope: !9700)
!9723 = !DILocalVariable(name: "interleaving", scope: !9700, file: !3, line: 1802, type: !327)
!9724 = !DILocation(line: 1802, column: 6, scope: !9700)
!9725 = !DILocalVariable(name: "fft_div", scope: !9700, file: !3, line: 1802, type: !327)
!9726 = !DILocation(line: 1802, column: 24, scope: !9700)
!9727 = !DILocation(line: 1804, column: 10, scope: !9700)
!9728 = !DILocation(line: 1804, column: 13, scope: !9700)
!9729 = !DILocation(line: 1804, column: 2, scope: !9700)
!9730 = !DILocation(line: 1806, column: 9, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1804, column: 29)
!9732 = !DILocation(line: 1807, column: 3, scope: !9731)
!9733 = !DILocation(line: 1809, column: 9, scope: !9731)
!9734 = !DILocation(line: 1810, column: 3, scope: !9731)
!9735 = !DILocation(line: 1812, column: 9, scope: !9731)
!9736 = !DILocation(line: 1813, column: 3, scope: !9731)
!9737 = !DILocation(line: 1816, column: 9, scope: !9731)
!9738 = !DILocation(line: 1817, column: 3, scope: !9731)
!9739 = !DILocation(line: 1820, column: 10, scope: !9700)
!9740 = !DILocation(line: 1820, column: 13, scope: !9700)
!9741 = !DILocation(line: 1820, column: 2, scope: !9700)
!9742 = !DILocation(line: 1822, column: 11, scope: !9743)
!9743 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1820, column: 32)
!9744 = !DILocation(line: 1823, column: 3, scope: !9743)
!9745 = !DILocation(line: 1825, column: 11, scope: !9743)
!9746 = !DILocation(line: 1826, column: 3, scope: !9743)
!9747 = !DILocation(line: 1829, column: 11, scope: !9743)
!9748 = !DILocation(line: 1830, column: 3, scope: !9743)
!9749 = !DILocation(line: 1833, column: 10, scope: !9700)
!9750 = !DILocation(line: 1833, column: 13, scope: !9700)
!9751 = !DILocation(line: 1833, column: 2, scope: !9700)
!9752 = !DILocation(line: 1836, column: 19, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1833, column: 25)
!9754 = !DILocation(line: 1837, column: 3, scope: !9753)
!9755 = !DILocation(line: 1839, column: 19, scope: !9753)
!9756 = !DILocation(line: 1840, column: 3, scope: !9753)
!9757 = !DILocation(line: 1843, column: 19, scope: !9753)
!9758 = !DILocation(line: 1844, column: 3, scope: !9753)
!9759 = !DILocation(line: 1847, column: 11, scope: !9700)
!9760 = !DILocation(line: 1847, column: 14, scope: !9700)
!9761 = !DILocation(line: 1847, column: 24, scope: !9700)
!9762 = !DILocation(line: 1847, column: 29, scope: !9700)
!9763 = !DILocation(line: 1847, column: 10, scope: !9700)
!9764 = !DILocation(line: 1847, column: 42, scope: !9700)
!9765 = !DILocation(line: 1847, column: 45, scope: !9700)
!9766 = !DILocation(line: 1847, column: 60, scope: !9700)
!9767 = !DILocation(line: 1847, column: 63, scope: !9700)
!9768 = !DILocation(line: 1847, column: 2, scope: !9700)
!9769 = !DILocation(line: 1849, column: 12, scope: !9770)
!9770 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1847, column: 77)
!9771 = !DILocation(line: 1850, column: 14, scope: !9770)
!9772 = !DILocation(line: 1851, column: 3, scope: !9770)
!9773 = !DILocation(line: 1853, column: 12, scope: !9770)
!9774 = !DILocation(line: 1854, column: 14, scope: !9770)
!9775 = !DILocation(line: 1855, column: 3, scope: !9770)
!9776 = !DILocation(line: 1857, column: 12, scope: !9770)
!9777 = !DILocation(line: 1858, column: 14, scope: !9770)
!9778 = !DILocation(line: 1859, column: 3, scope: !9770)
!9779 = !DILocation(line: 1861, column: 12, scope: !9770)
!9780 = !DILocation(line: 1862, column: 14, scope: !9770)
!9781 = !DILocation(line: 1863, column: 3, scope: !9770)
!9782 = !DILocation(line: 1866, column: 12, scope: !9770)
!9783 = !DILocation(line: 1867, column: 14, scope: !9770)
!9784 = !DILocation(line: 1868, column: 3, scope: !9770)
!9785 = !DILocation(line: 1871, column: 10, scope: !9700)
!9786 = !DILocation(line: 1871, column: 28, scope: !9700)
!9787 = !DILocation(line: 1871, column: 26, scope: !9700)
!9788 = !DILocation(line: 1871, column: 39, scope: !9700)
!9789 = !DILocation(line: 1871, column: 37, scope: !9700)
!9790 = !DILocation(line: 1871, column: 47, scope: !9700)
!9791 = !DILocation(line: 1871, column: 8, scope: !9700)
!9792 = !DILocation(line: 1879, column: 7, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1879, column: 6)
!9794 = !DILocation(line: 1879, column: 6, scope: !9700)
!9795 = !DILocation(line: 1880, column: 3, scope: !9793)
!9796 = !DILocation(line: 1883, column: 12, scope: !9700)
!9797 = !DILocation(line: 1883, column: 23, scope: !9700)
!9798 = !DILocation(line: 1883, column: 10, scope: !9700)
!9799 = !DILocation(line: 1884, column: 10, scope: !9700)
!9800 = !DILocation(line: 1884, column: 8, scope: !9700)
!9801 = !DILocalVariable(name: "__base", scope: !9802, file: !3, line: 1885, type: !1105)
!9802 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1885, column: 2)
!9803 = !DILocation(line: 1885, column: 2, scope: !9802)
!9804 = !DILocalVariable(name: "__rem", scope: !9802, file: !3, line: 1885, type: !1105)
!9805 = !DILocation(line: 1886, column: 12, scope: !9700)
!9806 = !DILocation(line: 1886, column: 22, scope: !9700)
!9807 = !DILocation(line: 1886, column: 20, scope: !9700)
!9808 = !DILocation(line: 1886, column: 10, scope: !9700)
!9809 = !DILocation(line: 1887, column: 13, scope: !9700)
!9810 = !DILocation(line: 1887, column: 19, scope: !9700)
!9811 = !DILocation(line: 1887, column: 10, scope: !9700)
!9812 = !DILocalVariable(name: "__base", scope: !9813, file: !3, line: 1888, type: !1105)
!9813 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 1888, column: 2)
!9814 = !DILocation(line: 1888, column: 2, scope: !9813)
!9815 = !DILocalVariable(name: "__rem", scope: !9813, file: !3, line: 1888, type: !1105)
!9816 = !DILocation(line: 1890, column: 20, scope: !9700)
!9817 = !DILocation(line: 1890, column: 18, scope: !9700)
!9818 = !DILocation(line: 1890, column: 6, scope: !9700)
!9819 = !DILocation(line: 1891, column: 13, scope: !9700)
!9820 = !DILocation(line: 1891, column: 19, scope: !9700)
!9821 = !DILocation(line: 1891, column: 25, scope: !9700)
!9822 = !DILocation(line: 1891, column: 23, scope: !9700)
!9823 = !DILocation(line: 1891, column: 17, scope: !9700)
!9824 = !DILocation(line: 1891, column: 10, scope: !9700)
!9825 = !DILocation(line: 1893, column: 9, scope: !9700)
!9826 = !DILocation(line: 1893, column: 2, scope: !9700)
!9827 = !DILocation(line: 1894, column: 1, scope: !9700)
!9828 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !9174, file: !9174, line: 308, type: !9175, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9829 = !DILocalVariable(name: "m", arg: 1, scope: !9828, file: !9174, line: 308, type: !3215)
!9830 = !DILocation(line: 308, column: 66, scope: !9828)
!9831 = !DILocation(line: 310, column: 10, scope: !9828)
!9832 = !DILocation(line: 310, column: 12, scope: !9828)
!9833 = !DILocation(line: 310, column: 34, scope: !9828)
!9834 = !DILocation(line: 310, column: 39, scope: !9828)
!9835 = !DILocation(line: 310, column: 2, scope: !9828)
!9836 = distinct !DISubprogram(name: "dib7090_tuner_xfer", scope: !3, file: !3, line: 2274, type: !4362, scopeLine: 2275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9837 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !9836, file: !3, line: 2274, type: !4349)
!9838 = !DILocation(line: 2274, column: 51, scope: !9836)
!9839 = !DILocalVariable(name: "msg", arg: 2, scope: !9836, file: !3, line: 2274, type: !4364)
!9840 = !DILocation(line: 2274, column: 76, scope: !9836)
!9841 = !DILocalVariable(name: "num", arg: 3, scope: !9836, file: !3, line: 2274, type: !327)
!9842 = !DILocation(line: 2274, column: 87, scope: !9836)
!9843 = !DILocalVariable(name: "state", scope: !9836, file: !3, line: 2276, type: !4566)
!9844 = !DILocation(line: 2276, column: 25, scope: !9836)
!9845 = !DILocation(line: 2276, column: 50, scope: !9836)
!9846 = !DILocation(line: 2276, column: 33, scope: !9836)
!9847 = !DILocalVariable(name: "apb_address", scope: !9836, file: !3, line: 2278, type: !328)
!9848 = !DILocation(line: 2278, column: 6, scope: !9836)
!9849 = !DILocalVariable(name: "word", scope: !9836, file: !3, line: 2278, type: !328)
!9850 = !DILocation(line: 2278, column: 23, scope: !9836)
!9851 = !DILocalVariable(name: "i", scope: !9836, file: !3, line: 2279, type: !327)
!9852 = !DILocation(line: 2279, column: 6, scope: !9836)
!9853 = !DILocation(line: 2280, column: 10, scope: !9836)
!9854 = !DILocation(line: 2280, column: 17, scope: !9836)
!9855 = !DILocation(line: 2280, column: 2, scope: !9836)
!9856 = !DILocation(line: 2282, column: 15, scope: !9857)
!9857 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 2280, column: 25)
!9858 = !DILocation(line: 2283, column: 3, scope: !9857)
!9859 = !DILocation(line: 2285, column: 15, scope: !9857)
!9860 = !DILocation(line: 2286, column: 3, scope: !9857)
!9861 = !DILocation(line: 2288, column: 15, scope: !9857)
!9862 = !DILocation(line: 2289, column: 3, scope: !9857)
!9863 = !DILocation(line: 2291, column: 15, scope: !9857)
!9864 = !DILocation(line: 2292, column: 3, scope: !9857)
!9865 = !DILocation(line: 2294, column: 15, scope: !9857)
!9866 = !DILocation(line: 2295, column: 3, scope: !9857)
!9867 = !DILocation(line: 2297, column: 15, scope: !9857)
!9868 = !DILocation(line: 2298, column: 3, scope: !9857)
!9869 = !DILocation(line: 2300, column: 15, scope: !9857)
!9870 = !DILocation(line: 2301, column: 3, scope: !9857)
!9871 = !DILocation(line: 2303, column: 15, scope: !9857)
!9872 = !DILocation(line: 2304, column: 3, scope: !9857)
!9873 = !DILocation(line: 2306, column: 15, scope: !9857)
!9874 = !DILocation(line: 2307, column: 3, scope: !9857)
!9875 = !DILocation(line: 2309, column: 15, scope: !9857)
!9876 = !DILocation(line: 2310, column: 3, scope: !9857)
!9877 = !DILocation(line: 2312, column: 15, scope: !9857)
!9878 = !DILocation(line: 2313, column: 3, scope: !9857)
!9879 = !DILocation(line: 2315, column: 15, scope: !9857)
!9880 = !DILocation(line: 2316, column: 3, scope: !9857)
!9881 = !DILocation(line: 2318, column: 15, scope: !9857)
!9882 = !DILocation(line: 2319, column: 3, scope: !9857)
!9883 = !DILocation(line: 2321, column: 15, scope: !9857)
!9884 = !DILocation(line: 2322, column: 3, scope: !9857)
!9885 = !DILocation(line: 2324, column: 15, scope: !9857)
!9886 = !DILocation(line: 2325, column: 3, scope: !9857)
!9887 = !DILocation(line: 2327, column: 15, scope: !9857)
!9888 = !DILocation(line: 2328, column: 3, scope: !9857)
!9889 = !DILocation(line: 2330, column: 15, scope: !9857)
!9890 = !DILocation(line: 2331, column: 3, scope: !9857)
!9891 = !DILocation(line: 2333, column: 15, scope: !9857)
!9892 = !DILocation(line: 2334, column: 3, scope: !9857)
!9893 = !DILocation(line: 2336, column: 15, scope: !9857)
!9894 = !DILocation(line: 2337, column: 3, scope: !9857)
!9895 = !DILocation(line: 2339, column: 15, scope: !9857)
!9896 = !DILocation(line: 2340, column: 3, scope: !9857)
!9897 = !DILocation(line: 2342, column: 15, scope: !9857)
!9898 = !DILocation(line: 2343, column: 3, scope: !9857)
!9899 = !DILocation(line: 2345, column: 15, scope: !9857)
!9900 = !DILocation(line: 2346, column: 3, scope: !9857)
!9901 = !DILocation(line: 2348, column: 15, scope: !9857)
!9902 = !DILocation(line: 2349, column: 3, scope: !9857)
!9903 = !DILocation(line: 2351, column: 15, scope: !9857)
!9904 = !DILocation(line: 2352, column: 3, scope: !9857)
!9905 = !DILocation(line: 2354, column: 15, scope: !9857)
!9906 = !DILocation(line: 2355, column: 3, scope: !9857)
!9907 = !DILocation(line: 2357, column: 15, scope: !9857)
!9908 = !DILocation(line: 2358, column: 3, scope: !9857)
!9909 = !DILocation(line: 2360, column: 15, scope: !9857)
!9910 = !DILocation(line: 2361, column: 3, scope: !9857)
!9911 = !DILocation(line: 2363, column: 15, scope: !9857)
!9912 = !DILocation(line: 2364, column: 3, scope: !9857)
!9913 = !DILocation(line: 2366, column: 28, scope: !9857)
!9914 = !DILocation(line: 2366, column: 9, scope: !9857)
!9915 = !DILocation(line: 2366, column: 39, scope: !9857)
!9916 = !DILocation(line: 2366, column: 46, scope: !9857)
!9917 = !DILocation(line: 2366, column: 5, scope: !9857)
!9918 = !DILocation(line: 2367, column: 29, scope: !9857)
!9919 = !DILocation(line: 2367, column: 42, scope: !9857)
!9920 = !DILocation(line: 2367, column: 40, scope: !9857)
!9921 = !DILocation(line: 2367, column: 36, scope: !9857)
!9922 = !DILocation(line: 2367, column: 10, scope: !9857)
!9923 = !DILocation(line: 2367, column: 8, scope: !9857)
!9924 = !DILocation(line: 2368, column: 20, scope: !9857)
!9925 = !DILocation(line: 2368, column: 25, scope: !9857)
!9926 = !DILocation(line: 2368, column: 31, scope: !9857)
!9927 = !DILocation(line: 2368, column: 19, scope: !9857)
!9928 = !DILocation(line: 2368, column: 3, scope: !9857)
!9929 = !DILocation(line: 2368, column: 10, scope: !9857)
!9930 = !DILocation(line: 2368, column: 17, scope: !9857)
!9931 = !DILocation(line: 2369, column: 20, scope: !9857)
!9932 = !DILocation(line: 2369, column: 19, scope: !9857)
!9933 = !DILocation(line: 2369, column: 26, scope: !9857)
!9934 = !DILocation(line: 2369, column: 3, scope: !9857)
!9935 = !DILocation(line: 2369, column: 10, scope: !9857)
!9936 = !DILocation(line: 2369, column: 17, scope: !9857)
!9937 = !DILocation(line: 2370, column: 10, scope: !9857)
!9938 = !DILocation(line: 2370, column: 3, scope: !9857)
!9939 = !DILocation(line: 2372, column: 7, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9857, file: !3, line: 2372, column: 7)
!9941 = !DILocation(line: 2372, column: 11, scope: !9940)
!9942 = !DILocation(line: 2372, column: 7, scope: !9857)
!9943 = !DILocation(line: 2373, column: 19, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 2372, column: 17)
!9945 = !DILocation(line: 2373, column: 26, scope: !9944)
!9946 = !DILocation(line: 2373, column: 33, scope: !9944)
!9947 = !DILocation(line: 2373, column: 41, scope: !9944)
!9948 = !DILocation(line: 2373, column: 48, scope: !9944)
!9949 = !DILocation(line: 2373, column: 39, scope: !9944)
!9950 = !DILocation(line: 2373, column: 11, scope: !9944)
!9951 = !DILocation(line: 2373, column: 9, scope: !9944)
!9952 = !DILocation(line: 2374, column: 9, scope: !9944)
!9953 = !DILocation(line: 2375, column: 31, scope: !9944)
!9954 = !DILocation(line: 2375, column: 12, scope: !9944)
!9955 = !DILocation(line: 2375, column: 42, scope: !9944)
!9956 = !DILocation(line: 2375, column: 59, scope: !9944)
!9957 = !DILocation(line: 2375, column: 64, scope: !9944)
!9958 = !DILocation(line: 2375, column: 56, scope: !9944)
!9959 = !DILocation(line: 2375, column: 11, scope: !9944)
!9960 = !DILocation(line: 2375, column: 9, scope: !9944)
!9961 = !DILocation(line: 2376, column: 24, scope: !9944)
!9962 = !DILocation(line: 2376, column: 35, scope: !9944)
!9963 = !DILocation(line: 2376, column: 4, scope: !9944)
!9964 = !DILocation(line: 2377, column: 11, scope: !9944)
!9965 = !DILocation(line: 2377, column: 4, scope: !9944)
!9966 = !DILocation(line: 2379, column: 2, scope: !9857)
!9967 = !DILocation(line: 2381, column: 6, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9836, file: !3, line: 2381, column: 6)
!9969 = !DILocation(line: 2381, column: 18, scope: !9968)
!9970 = !DILocation(line: 2381, column: 6, scope: !9836)
!9971 = !DILocation(line: 2382, column: 29, scope: !9968)
!9972 = !DILocation(line: 2382, column: 39, scope: !9968)
!9973 = !DILocation(line: 2382, column: 44, scope: !9968)
!9974 = !DILocation(line: 2382, column: 49, scope: !9968)
!9975 = !DILocation(line: 2382, column: 10, scope: !9968)
!9976 = !DILocation(line: 2382, column: 3, scope: !9968)
!9977 = !DILocation(line: 2384, column: 33, scope: !9968)
!9978 = !DILocation(line: 2384, column: 43, scope: !9968)
!9979 = !DILocation(line: 2384, column: 48, scope: !9968)
!9980 = !DILocation(line: 2384, column: 10, scope: !9968)
!9981 = !DILocation(line: 2384, column: 3, scope: !9968)
!9982 = !DILocation(line: 2387, column: 1, scope: !9836)
!9983 = distinct !DISubprogram(name: "dib7000p_i2c_func", scope: !3, file: !3, line: 2389, type: !4390, scopeLine: 2390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9984 = !DILocalVariable(name: "adapter", arg: 1, scope: !9983, file: !3, line: 2389, type: !4349)
!9985 = !DILocation(line: 2389, column: 50, scope: !9983)
!9986 = !DILocation(line: 2391, column: 2, scope: !9983)
!9987 = distinct !DISubprogram(name: "i2c_get_adapdata", scope: !4351, file: !4351, line: 727, type: !9988, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!317, !9990}
!9990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9991, size: 64)
!9991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4350)
!9992 = !DILocalVariable(name: "adap", arg: 1, scope: !9987, file: !4351, line: 727, type: !9990)
!9993 = !DILocation(line: 727, column: 64, scope: !9987)
!9994 = !DILocation(line: 729, column: 26, scope: !9987)
!9995 = !DILocation(line: 729, column: 32, scope: !9987)
!9996 = !DILocation(line: 729, column: 9, scope: !9987)
!9997 = !DILocation(line: 729, column: 2, scope: !9987)
!9998 = distinct !DISubprogram(name: "dib7090p_rw_on_apb", scope: !3, file: !3, line: 2257, type: !9999, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!9999 = !DISubroutineType(types: !10000)
!10000 = !{!327, !4349, !4364, !327, !328}
!10001 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !9998, file: !3, line: 2257, type: !4349)
!10002 = !DILocation(line: 2257, column: 51, scope: !9998)
!10003 = !DILocalVariable(name: "msg", arg: 2, scope: !9998, file: !3, line: 2258, type: !4364)
!10004 = !DILocation(line: 2258, column: 18, scope: !9998)
!10005 = !DILocalVariable(name: "num", arg: 3, scope: !9998, file: !3, line: 2258, type: !327)
!10006 = !DILocation(line: 2258, column: 29, scope: !9998)
!10007 = !DILocalVariable(name: "apb_address", arg: 4, scope: !9998, file: !3, line: 2258, type: !328)
!10008 = !DILocation(line: 2258, column: 38, scope: !9998)
!10009 = !DILocalVariable(name: "state", scope: !9998, file: !3, line: 2260, type: !4566)
!10010 = !DILocation(line: 2260, column: 25, scope: !9998)
!10011 = !DILocation(line: 2260, column: 50, scope: !9998)
!10012 = !DILocation(line: 2260, column: 33, scope: !9998)
!10013 = !DILocalVariable(name: "word", scope: !9998, file: !3, line: 2261, type: !328)
!10014 = !DILocation(line: 2261, column: 6, scope: !9998)
!10015 = !DILocation(line: 2263, column: 6, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !9998, file: !3, line: 2263, column: 6)
!10017 = !DILocation(line: 2263, column: 10, scope: !10016)
!10018 = !DILocation(line: 2263, column: 6, scope: !9998)
!10019 = !DILocation(line: 2264, column: 23, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2263, column: 16)
!10021 = !DILocation(line: 2264, column: 30, scope: !10020)
!10022 = !DILocation(line: 2264, column: 45, scope: !10020)
!10023 = !DILocation(line: 2264, column: 52, scope: !10020)
!10024 = !DILocation(line: 2264, column: 59, scope: !10020)
!10025 = !DILocation(line: 2264, column: 68, scope: !10020)
!10026 = !DILocation(line: 2264, column: 75, scope: !10020)
!10027 = !DILocation(line: 2264, column: 67, scope: !10020)
!10028 = !DILocation(line: 2264, column: 65, scope: !10020)
!10029 = !DILocation(line: 2264, column: 43, scope: !10020)
!10030 = !DILocation(line: 2264, column: 3, scope: !10020)
!10031 = !DILocation(line: 2265, column: 2, scope: !10020)
!10032 = !DILocation(line: 2266, column: 29, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 2265, column: 9)
!10034 = !DILocation(line: 2266, column: 36, scope: !10033)
!10035 = !DILocation(line: 2266, column: 10, scope: !10033)
!10036 = !DILocation(line: 2266, column: 8, scope: !10033)
!10037 = !DILocation(line: 2267, column: 20, scope: !10033)
!10038 = !DILocation(line: 2267, column: 25, scope: !10033)
!10039 = !DILocation(line: 2267, column: 31, scope: !10033)
!10040 = !DILocation(line: 2267, column: 19, scope: !10033)
!10041 = !DILocation(line: 2267, column: 3, scope: !10033)
!10042 = !DILocation(line: 2267, column: 10, scope: !10033)
!10043 = !DILocation(line: 2267, column: 17, scope: !10033)
!10044 = !DILocation(line: 2268, column: 20, scope: !10033)
!10045 = !DILocation(line: 2268, column: 19, scope: !10033)
!10046 = !DILocation(line: 2268, column: 26, scope: !10033)
!10047 = !DILocation(line: 2268, column: 3, scope: !10033)
!10048 = !DILocation(line: 2268, column: 10, scope: !10033)
!10049 = !DILocation(line: 2268, column: 17, scope: !10033)
!10050 = !DILocation(line: 2271, column: 9, scope: !9998)
!10051 = !DILocation(line: 2271, column: 2, scope: !9998)
!10052 = distinct !DISubprogram(name: "w7090p_tuner_rw_serpar", scope: !3, file: !3, line: 2245, type: !4362, scopeLine: 2246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10053 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !10052, file: !3, line: 2245, type: !4349)
!10054 = !DILocation(line: 2245, column: 55, scope: !10052)
!10055 = !DILocalVariable(name: "msg", arg: 2, scope: !10052, file: !3, line: 2245, type: !4364)
!10056 = !DILocation(line: 2245, column: 80, scope: !10052)
!10057 = !DILocalVariable(name: "num", arg: 3, scope: !10052, file: !3, line: 2245, type: !327)
!10058 = !DILocation(line: 2245, column: 91, scope: !10052)
!10059 = !DILocation(line: 2247, column: 33, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10052, file: !3, line: 2247, column: 6)
!10061 = !DILocation(line: 2247, column: 6, scope: !10060)
!10062 = !DILocation(line: 2247, column: 41, scope: !10060)
!10063 = !DILocation(line: 2247, column: 6, scope: !10052)
!10064 = !DILocation(line: 2248, column: 7, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 2248, column: 7)
!10066 = distinct !DILexicalBlock(scope: !10060, file: !3, line: 2247, column: 47)
!10067 = !DILocation(line: 2248, column: 11, scope: !10065)
!10068 = !DILocation(line: 2248, column: 7, scope: !10066)
!10069 = !DILocation(line: 2249, column: 37, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 2248, column: 17)
!10071 = !DILocation(line: 2249, column: 47, scope: !10070)
!10072 = !DILocation(line: 2249, column: 11, scope: !10070)
!10073 = !DILocation(line: 2249, column: 4, scope: !10070)
!10074 = !DILocation(line: 2251, column: 36, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 2250, column: 10)
!10076 = !DILocation(line: 2251, column: 46, scope: !10075)
!10077 = !DILocation(line: 2251, column: 11, scope: !10075)
!10078 = !DILocation(line: 2251, column: 4, scope: !10075)
!10079 = !DILocation(line: 2254, column: 9, scope: !10052)
!10080 = !DILocation(line: 2254, column: 2, scope: !10052)
!10081 = !DILocation(line: 2255, column: 1, scope: !10052)
!10082 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !237, file: !237, line: 655, type: !10083, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10083 = !DISubroutineType(types: !10084)
!10084 = !{!317, !4099}
!10085 = !DILocalVariable(name: "dev", arg: 1, scope: !10082, file: !237, line: 655, type: !4099)
!10086 = !DILocation(line: 655, column: 58, scope: !10082)
!10087 = !DILocation(line: 657, column: 9, scope: !10082)
!10088 = !DILocation(line: 657, column: 14, scope: !10082)
!10089 = !DILocation(line: 657, column: 2, scope: !10082)
!10090 = distinct !DISubprogram(name: "map_addr_to_serpar_number", scope: !3, file: !3, line: 2177, type: !10091, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10091 = !DISubroutineType(types: !10092)
!10092 = !{!327, !4364}
!10093 = !DILocalVariable(name: "msg", arg: 1, scope: !10090, file: !3, line: 2177, type: !4364)
!10094 = !DILocation(line: 2177, column: 54, scope: !10090)
!10095 = !DILocation(line: 2179, column: 7, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10090, file: !3, line: 2179, column: 6)
!10097 = !DILocation(line: 2179, column: 12, scope: !10096)
!10098 = !DILocation(line: 2179, column: 19, scope: !10096)
!10099 = !DILocation(line: 2179, column: 6, scope: !10090)
!10100 = !DILocation(line: 2180, column: 3, scope: !10096)
!10101 = !DILocation(line: 2180, column: 8, scope: !10096)
!10102 = !DILocation(line: 2180, column: 15, scope: !10096)
!10103 = !DILocation(line: 2181, column: 11, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 2181, column: 11)
!10105 = !DILocation(line: 2181, column: 16, scope: !10104)
!10106 = !DILocation(line: 2181, column: 23, scope: !10104)
!10107 = !DILocation(line: 2181, column: 11, scope: !10096)
!10108 = !DILocation(line: 2182, column: 3, scope: !10104)
!10109 = !DILocation(line: 2182, column: 8, scope: !10104)
!10110 = !DILocation(line: 2182, column: 15, scope: !10104)
!10111 = !DILocation(line: 2183, column: 11, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 2183, column: 11)
!10113 = !DILocation(line: 2183, column: 16, scope: !10112)
!10114 = !DILocation(line: 2183, column: 23, scope: !10112)
!10115 = !DILocation(line: 2183, column: 11, scope: !10104)
!10116 = !DILocation(line: 2184, column: 3, scope: !10112)
!10117 = !DILocation(line: 2184, column: 8, scope: !10112)
!10118 = !DILocation(line: 2184, column: 15, scope: !10112)
!10119 = !DILocation(line: 2185, column: 11, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10112, file: !3, line: 2185, column: 11)
!10121 = !DILocation(line: 2185, column: 16, scope: !10120)
!10122 = !DILocation(line: 2185, column: 23, scope: !10120)
!10123 = !DILocation(line: 2185, column: 11, scope: !10112)
!10124 = !DILocation(line: 2186, column: 3, scope: !10120)
!10125 = !DILocation(line: 2186, column: 8, scope: !10120)
!10126 = !DILocation(line: 2186, column: 15, scope: !10120)
!10127 = !DILocation(line: 2187, column: 11, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10120, file: !3, line: 2187, column: 11)
!10129 = !DILocation(line: 2187, column: 16, scope: !10128)
!10130 = !DILocation(line: 2187, column: 23, scope: !10128)
!10131 = !DILocation(line: 2187, column: 29, scope: !10128)
!10132 = !DILocation(line: 2187, column: 32, scope: !10128)
!10133 = !DILocation(line: 2187, column: 37, scope: !10128)
!10134 = !DILocation(line: 2187, column: 44, scope: !10128)
!10135 = !DILocation(line: 2187, column: 11, scope: !10120)
!10136 = !DILocation(line: 2188, column: 3, scope: !10128)
!10137 = !DILocation(line: 2188, column: 8, scope: !10128)
!10138 = !DILocation(line: 2188, column: 15, scope: !10128)
!10139 = !DILocation(line: 2189, column: 11, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 2189, column: 11)
!10141 = !DILocation(line: 2189, column: 16, scope: !10140)
!10142 = !DILocation(line: 2189, column: 23, scope: !10140)
!10143 = !DILocation(line: 2189, column: 11, scope: !10128)
!10144 = !DILocation(line: 2190, column: 3, scope: !10140)
!10145 = !DILocation(line: 2190, column: 8, scope: !10140)
!10146 = !DILocation(line: 2190, column: 15, scope: !10140)
!10147 = !DILocation(line: 2192, column: 3, scope: !10140)
!10148 = !DILocation(line: 2193, column: 2, scope: !10090)
!10149 = !DILocation(line: 2194, column: 1, scope: !10090)
!10150 = distinct !DISubprogram(name: "w7090p_tuner_write_serpar", scope: !3, file: !3, line: 2196, type: !4362, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10151 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !10150, file: !3, line: 2196, type: !4349)
!10152 = !DILocation(line: 2196, column: 58, scope: !10150)
!10153 = !DILocalVariable(name: "msg", arg: 2, scope: !10150, file: !3, line: 2196, type: !4364)
!10154 = !DILocation(line: 2196, column: 83, scope: !10150)
!10155 = !DILocalVariable(name: "num", arg: 3, scope: !10150, file: !3, line: 2196, type: !327)
!10156 = !DILocation(line: 2196, column: 94, scope: !10150)
!10157 = !DILocalVariable(name: "state", scope: !10150, file: !3, line: 2198, type: !4566)
!10158 = !DILocation(line: 2198, column: 25, scope: !10150)
!10159 = !DILocation(line: 2198, column: 50, scope: !10150)
!10160 = !DILocation(line: 2198, column: 33, scope: !10150)
!10161 = !DILocalVariable(name: "n_overflow", scope: !10150, file: !3, line: 2199, type: !318)
!10162 = !DILocation(line: 2199, column: 5, scope: !10150)
!10163 = !DILocalVariable(name: "i", scope: !10150, file: !3, line: 2200, type: !328)
!10164 = !DILocation(line: 2200, column: 6, scope: !10150)
!10165 = !DILocalVariable(name: "serpar_num", scope: !10150, file: !3, line: 2201, type: !328)
!10166 = !DILocation(line: 2201, column: 6, scope: !10150)
!10167 = !DILocation(line: 2201, column: 19, scope: !10150)
!10168 = !DILocation(line: 2201, column: 26, scope: !10150)
!10169 = !DILocation(line: 2203, column: 2, scope: !10150)
!10170 = !DILocation(line: 2203, column: 9, scope: !10150)
!10171 = !DILocation(line: 2203, column: 20, scope: !10150)
!10172 = !DILocation(line: 2203, column: 25, scope: !10150)
!10173 = !DILocation(line: 2203, column: 28, scope: !10150)
!10174 = !DILocation(line: 0, scope: !10150)
!10175 = !DILocation(line: 2204, column: 36, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 2203, column: 31)
!10177 = !DILocation(line: 2204, column: 17, scope: !10176)
!10178 = !DILocation(line: 2204, column: 49, scope: !10176)
!10179 = !DILocation(line: 2204, column: 55, scope: !10176)
!10180 = !DILocation(line: 2204, column: 16, scope: !10176)
!10181 = !DILocation(line: 2204, column: 14, scope: !10176)
!10182 = !DILocation(line: 2205, column: 4, scope: !10176)
!10183 = !DILocation(line: 2206, column: 7, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10176, file: !3, line: 2206, column: 7)
!10185 = !DILocation(line: 2206, column: 9, scope: !10184)
!10186 = !DILocation(line: 2206, column: 7, scope: !10176)
!10187 = !DILocation(line: 2207, column: 4, scope: !10184)
!10188 = !DILocation(line: 2207, column: 4, scope: !10189)
!10189 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 2207, column: 4)
!10190 = distinct !DILexicalBlock(scope: !10184, file: !3, line: 2207, column: 4)
!10191 = !DILocation(line: 2207, column: 4, scope: !10190)
!10192 = distinct !{!10192, !10169, !10193}
!10193 = !DILocation(line: 2208, column: 2, scope: !10150)
!10194 = !DILocation(line: 2209, column: 22, scope: !10150)
!10195 = !DILocation(line: 2209, column: 47, scope: !10150)
!10196 = !DILocation(line: 2209, column: 58, scope: !10150)
!10197 = !DILocation(line: 2209, column: 44, scope: !10150)
!10198 = !DILocation(line: 2209, column: 35, scope: !10150)
!10199 = !DILocation(line: 2209, column: 2, scope: !10150)
!10200 = !DILocation(line: 2210, column: 22, scope: !10150)
!10201 = !DILocation(line: 2210, column: 36, scope: !10150)
!10202 = !DILocation(line: 2210, column: 43, scope: !10150)
!10203 = !DILocation(line: 2210, column: 50, scope: !10150)
!10204 = !DILocation(line: 2210, column: 58, scope: !10150)
!10205 = !DILocation(line: 2210, column: 65, scope: !10150)
!10206 = !DILocation(line: 2210, column: 56, scope: !10150)
!10207 = !DILocation(line: 2210, column: 35, scope: !10150)
!10208 = !DILocation(line: 2210, column: 2, scope: !10150)
!10209 = !DILocation(line: 2212, column: 9, scope: !10150)
!10210 = !DILocation(line: 2212, column: 2, scope: !10150)
!10211 = distinct !DISubprogram(name: "w7090p_tuner_read_serpar", scope: !3, file: !3, line: 2215, type: !4362, scopeLine: 2216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10212 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !10211, file: !3, line: 2215, type: !4349)
!10213 = !DILocation(line: 2215, column: 57, scope: !10211)
!10214 = !DILocalVariable(name: "msg", arg: 2, scope: !10211, file: !3, line: 2215, type: !4364)
!10215 = !DILocation(line: 2215, column: 82, scope: !10211)
!10216 = !DILocalVariable(name: "num", arg: 3, scope: !10211, file: !3, line: 2215, type: !327)
!10217 = !DILocation(line: 2215, column: 93, scope: !10211)
!10218 = !DILocalVariable(name: "state", scope: !10211, file: !3, line: 2217, type: !4566)
!10219 = !DILocation(line: 2217, column: 25, scope: !10211)
!10220 = !DILocation(line: 2217, column: 50, scope: !10211)
!10221 = !DILocation(line: 2217, column: 33, scope: !10211)
!10222 = !DILocalVariable(name: "n_overflow", scope: !10211, file: !3, line: 2218, type: !318)
!10223 = !DILocation(line: 2218, column: 5, scope: !10211)
!10224 = !DILocalVariable(name: "n_empty", scope: !10211, file: !3, line: 2218, type: !318)
!10225 = !DILocation(line: 2218, column: 21, scope: !10211)
!10226 = !DILocalVariable(name: "i", scope: !10211, file: !3, line: 2219, type: !328)
!10227 = !DILocation(line: 2219, column: 6, scope: !10211)
!10228 = !DILocalVariable(name: "serpar_num", scope: !10211, file: !3, line: 2220, type: !328)
!10229 = !DILocation(line: 2220, column: 6, scope: !10211)
!10230 = !DILocation(line: 2220, column: 19, scope: !10211)
!10231 = !DILocation(line: 2220, column: 26, scope: !10211)
!10232 = !DILocalVariable(name: "read_word", scope: !10211, file: !3, line: 2221, type: !328)
!10233 = !DILocation(line: 2221, column: 6, scope: !10211)
!10234 = !DILocation(line: 2223, column: 2, scope: !10211)
!10235 = !DILocation(line: 2223, column: 9, scope: !10211)
!10236 = !DILocation(line: 2223, column: 20, scope: !10211)
!10237 = !DILocation(line: 2223, column: 25, scope: !10211)
!10238 = !DILocation(line: 2223, column: 28, scope: !10211)
!10239 = !DILocation(line: 0, scope: !10211)
!10240 = !DILocation(line: 2224, column: 36, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 2223, column: 31)
!10242 = !DILocation(line: 2224, column: 17, scope: !10241)
!10243 = !DILocation(line: 2224, column: 49, scope: !10241)
!10244 = !DILocation(line: 2224, column: 55, scope: !10241)
!10245 = !DILocation(line: 2224, column: 16, scope: !10241)
!10246 = !DILocation(line: 2224, column: 14, scope: !10241)
!10247 = !DILocation(line: 2225, column: 4, scope: !10241)
!10248 = !DILocation(line: 2226, column: 7, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 2226, column: 7)
!10250 = !DILocation(line: 2226, column: 9, scope: !10249)
!10251 = !DILocation(line: 2226, column: 7, scope: !10241)
!10252 = !DILocation(line: 2227, column: 4, scope: !10249)
!10253 = !DILocation(line: 2227, column: 4, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 2227, column: 4)
!10255 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 2227, column: 4)
!10256 = !DILocation(line: 2227, column: 4, scope: !10255)
!10257 = distinct !{!10257, !10234, !10258}
!10258 = !DILocation(line: 2228, column: 2, scope: !10211)
!10259 = !DILocation(line: 2229, column: 22, scope: !10211)
!10260 = !DILocation(line: 2229, column: 47, scope: !10211)
!10261 = !DILocation(line: 2229, column: 58, scope: !10211)
!10262 = !DILocation(line: 2229, column: 44, scope: !10211)
!10263 = !DILocation(line: 2229, column: 35, scope: !10211)
!10264 = !DILocation(line: 2229, column: 2, scope: !10211)
!10265 = !DILocation(line: 2231, column: 4, scope: !10211)
!10266 = !DILocation(line: 2232, column: 2, scope: !10211)
!10267 = !DILocation(line: 2232, column: 9, scope: !10211)
!10268 = !DILocation(line: 2232, column: 17, scope: !10211)
!10269 = !DILocation(line: 2232, column: 22, scope: !10211)
!10270 = !DILocation(line: 2232, column: 25, scope: !10211)
!10271 = !DILocation(line: 2233, column: 32, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10211, file: !3, line: 2232, column: 28)
!10273 = !DILocation(line: 2233, column: 13, scope: !10272)
!10274 = !DILocation(line: 2233, column: 45, scope: !10272)
!10275 = !DILocation(line: 2233, column: 11, scope: !10272)
!10276 = !DILocation(line: 2234, column: 4, scope: !10272)
!10277 = !DILocation(line: 2235, column: 7, scope: !10278)
!10278 = distinct !DILexicalBlock(scope: !10272, file: !3, line: 2235, column: 7)
!10279 = !DILocation(line: 2235, column: 9, scope: !10278)
!10280 = !DILocation(line: 2235, column: 7, scope: !10272)
!10281 = !DILocation(line: 2236, column: 4, scope: !10278)
!10282 = !DILocation(line: 2236, column: 4, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 2236, column: 4)
!10284 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 2236, column: 4)
!10285 = !DILocation(line: 2236, column: 4, scope: !10284)
!10286 = distinct !{!10286, !10266, !10287}
!10287 = !DILocation(line: 2237, column: 2, scope: !10211)
!10288 = !DILocation(line: 2238, column: 33, scope: !10211)
!10289 = !DILocation(line: 2238, column: 14, scope: !10211)
!10290 = !DILocation(line: 2238, column: 12, scope: !10211)
!10291 = !DILocation(line: 2239, column: 19, scope: !10211)
!10292 = !DILocation(line: 2239, column: 29, scope: !10211)
!10293 = !DILocation(line: 2239, column: 35, scope: !10211)
!10294 = !DILocation(line: 2239, column: 18, scope: !10211)
!10295 = !DILocation(line: 2239, column: 2, scope: !10211)
!10296 = !DILocation(line: 2239, column: 9, scope: !10211)
!10297 = !DILocation(line: 2239, column: 16, scope: !10211)
!10298 = !DILocation(line: 2240, column: 19, scope: !10211)
!10299 = !DILocation(line: 2240, column: 18, scope: !10211)
!10300 = !DILocation(line: 2240, column: 30, scope: !10211)
!10301 = !DILocation(line: 2240, column: 2, scope: !10211)
!10302 = !DILocation(line: 2240, column: 9, scope: !10211)
!10303 = !DILocation(line: 2240, column: 16, scope: !10211)
!10304 = !DILocation(line: 2242, column: 9, scope: !10211)
!10305 = !DILocation(line: 2242, column: 2, scope: !10211)
!10306 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !237, file: !237, line: 660, type: !10307, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10307 = !DISubroutineType(types: !10308)
!10308 = !{null, !785, !317}
!10309 = !DILocalVariable(name: "dev", arg: 1, scope: !10306, file: !237, line: 660, type: !785)
!10310 = !DILocation(line: 660, column: 51, scope: !10306)
!10311 = !DILocalVariable(name: "data", arg: 2, scope: !10306, file: !237, line: 660, type: !317)
!10312 = !DILocation(line: 660, column: 62, scope: !10306)
!10313 = !DILocation(line: 662, column: 21, scope: !10306)
!10314 = !DILocation(line: 662, column: 2, scope: !10306)
!10315 = !DILocation(line: 662, column: 7, scope: !10306)
!10316 = !DILocation(line: 662, column: 19, scope: !10306)
!10317 = !DILocation(line: 663, column: 1, scope: !10306)
!10318 = distinct !DISubprogram(name: "dib7000p_reset_pll", scope: !3, file: !3, line: 447, type: !8090, scopeLine: 448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10319 = !DILocalVariable(name: "state", arg: 1, scope: !10318, file: !3, line: 447, type: !4566)
!10320 = !DILocation(line: 447, column: 55, scope: !10318)
!10321 = !DILocalVariable(name: "bw", scope: !10318, file: !3, line: 449, type: !4523)
!10322 = !DILocation(line: 449, column: 35, scope: !10318)
!10323 = !DILocation(line: 449, column: 41, scope: !10318)
!10324 = !DILocation(line: 449, column: 48, scope: !10318)
!10325 = !DILocation(line: 449, column: 52, scope: !10318)
!10326 = !DILocalVariable(name: "clk_cfg0", scope: !10318, file: !3, line: 450, type: !328)
!10327 = !DILocation(line: 450, column: 6, scope: !10318)
!10328 = !DILocation(line: 452, column: 6, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 452, column: 6)
!10330 = !DILocation(line: 452, column: 13, scope: !10329)
!10331 = !DILocation(line: 452, column: 21, scope: !10329)
!10332 = !DILocation(line: 452, column: 6, scope: !10318)
!10333 = !DILocation(line: 453, column: 23, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 452, column: 33)
!10335 = !DILocation(line: 453, column: 38, scope: !10334)
!10336 = !DILocation(line: 453, column: 42, scope: !10334)
!10337 = !DILocation(line: 453, column: 37, scope: !10334)
!10338 = !DILocation(line: 453, column: 52, scope: !10334)
!10339 = !DILocation(line: 453, column: 62, scope: !10334)
!10340 = !DILocation(line: 453, column: 66, scope: !10334)
!10341 = !DILocation(line: 453, column: 76, scope: !10334)
!10342 = !DILocation(line: 453, column: 59, scope: !10334)
!10343 = !DILocation(line: 453, column: 86, scope: !10334)
!10344 = !DILocation(line: 453, column: 90, scope: !10334)
!10345 = !DILocation(line: 453, column: 100, scope: !10334)
!10346 = !DILocation(line: 453, column: 83, scope: !10334)
!10347 = !DILocation(line: 453, column: 109, scope: !10334)
!10348 = !DILocation(line: 453, column: 113, scope: !10334)
!10349 = !DILocation(line: 453, column: 108, scope: !10334)
!10350 = !DILocation(line: 453, column: 106, scope: !10334)
!10351 = !DILocation(line: 453, column: 36, scope: !10334)
!10352 = !DILocation(line: 453, column: 3, scope: !10334)
!10353 = !DILocation(line: 455, column: 3, scope: !10334)
!10354 = !DILocation(line: 455, column: 31, scope: !10334)
!10355 = !DILocation(line: 455, column: 12, scope: !10334)
!10356 = !DILocation(line: 455, column: 44, scope: !10334)
!10357 = !DILocation(line: 455, column: 51, scope: !10334)
!10358 = !DILocation(line: 455, column: 58, scope: !10334)
!10359 = distinct !{!10359, !10353, !10360}
!10360 = !DILocation(line: 456, column: 4, scope: !10334)
!10361 = !DILocation(line: 458, column: 23, scope: !10334)
!10362 = !DILocation(line: 458, column: 55, scope: !10334)
!10363 = !DILocation(line: 458, column: 36, scope: !10334)
!10364 = !DILocation(line: 458, column: 72, scope: !10334)
!10365 = !DILocation(line: 458, column: 76, scope: !10334)
!10366 = !DILocation(line: 458, column: 71, scope: !10334)
!10367 = !DILocation(line: 458, column: 87, scope: !10334)
!10368 = !DILocation(line: 458, column: 68, scope: !10334)
!10369 = !DILocation(line: 458, column: 3, scope: !10334)
!10370 = !DILocation(line: 459, column: 2, scope: !10334)
!10371 = !DILocation(line: 461, column: 28, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10329, file: !3, line: 459, column: 9)
!10373 = !DILocation(line: 461, column: 32, scope: !10372)
!10374 = !DILocation(line: 461, column: 42, scope: !10372)
!10375 = !DILocation(line: 461, column: 50, scope: !10372)
!10376 = !DILocation(line: 461, column: 24, scope: !10372)
!10377 = !DILocation(line: 462, column: 5, scope: !10372)
!10378 = !DILocation(line: 462, column: 9, scope: !10372)
!10379 = !DILocation(line: 462, column: 16, scope: !10372)
!10380 = !DILocation(line: 461, column: 56, scope: !10372)
!10381 = !DILocation(line: 462, column: 25, scope: !10372)
!10382 = !DILocation(line: 462, column: 29, scope: !10372)
!10383 = !DILocation(line: 462, column: 38, scope: !10372)
!10384 = !DILocation(line: 462, column: 22, scope: !10372)
!10385 = !DILocation(line: 462, column: 47, scope: !10372)
!10386 = !DILocation(line: 462, column: 51, scope: !10372)
!10387 = !DILocation(line: 462, column: 66, scope: !10372)
!10388 = !DILocation(line: 462, column: 44, scope: !10372)
!10389 = !DILocation(line: 462, column: 75, scope: !10372)
!10390 = !DILocation(line: 462, column: 79, scope: !10372)
!10391 = !DILocation(line: 462, column: 90, scope: !10372)
!10392 = !DILocation(line: 462, column: 72, scope: !10372)
!10393 = !DILocation(line: 462, column: 99, scope: !10372)
!10394 = !DILocation(line: 462, column: 103, scope: !10372)
!10395 = !DILocation(line: 462, column: 117, scope: !10372)
!10396 = !DILocation(line: 462, column: 96, scope: !10372)
!10397 = !DILocation(line: 461, column: 14, scope: !10372)
!10398 = !DILocation(line: 461, column: 12, scope: !10372)
!10399 = !DILocation(line: 464, column: 23, scope: !10372)
!10400 = !DILocation(line: 464, column: 35, scope: !10372)
!10401 = !DILocation(line: 464, column: 3, scope: !10372)
!10402 = !DILocation(line: 467, column: 23, scope: !10372)
!10403 = !DILocation(line: 467, column: 36, scope: !10372)
!10404 = !DILocation(line: 467, column: 40, scope: !10372)
!10405 = !DILocation(line: 467, column: 51, scope: !10372)
!10406 = !DILocation(line: 467, column: 62, scope: !10372)
!10407 = !DILocation(line: 467, column: 66, scope: !10372)
!10408 = !DILocation(line: 467, column: 76, scope: !10372)
!10409 = !DILocation(line: 467, column: 82, scope: !10372)
!10410 = !DILocation(line: 467, column: 89, scope: !10372)
!10411 = !DILocation(line: 467, column: 57, scope: !10372)
!10412 = !DILocation(line: 467, column: 98, scope: !10372)
!10413 = !DILocation(line: 467, column: 102, scope: !10372)
!10414 = !DILocation(line: 467, column: 112, scope: !10372)
!10415 = !DILocation(line: 467, column: 95, scope: !10372)
!10416 = !DILocation(line: 467, column: 120, scope: !10372)
!10417 = !DILocation(line: 467, column: 124, scope: !10372)
!10418 = !DILocation(line: 467, column: 118, scope: !10372)
!10419 = !DILocation(line: 467, column: 35, scope: !10372)
!10420 = !DILocation(line: 467, column: 3, scope: !10372)
!10421 = !DILocation(line: 468, column: 15, scope: !10372)
!10422 = !DILocation(line: 468, column: 19, scope: !10372)
!10423 = !DILocation(line: 468, column: 30, scope: !10372)
!10424 = !DILocation(line: 468, column: 40, scope: !10372)
!10425 = !DILocation(line: 468, column: 49, scope: !10372)
!10426 = !DILocation(line: 468, column: 37, scope: !10372)
!10427 = !DILocation(line: 468, column: 14, scope: !10372)
!10428 = !DILocation(line: 468, column: 12, scope: !10372)
!10429 = !DILocation(line: 469, column: 23, scope: !10372)
!10430 = !DILocation(line: 469, column: 35, scope: !10372)
!10431 = !DILocation(line: 469, column: 3, scope: !10372)
!10432 = !DILocation(line: 472, column: 22, scope: !10318)
!10433 = !DILocation(line: 472, column: 42, scope: !10318)
!10434 = !DILocation(line: 472, column: 46, scope: !10318)
!10435 = !DILocation(line: 472, column: 55, scope: !10318)
!10436 = !DILocation(line: 472, column: 63, scope: !10318)
!10437 = !DILocation(line: 472, column: 70, scope: !10318)
!10438 = !DILocation(line: 472, column: 33, scope: !10318)
!10439 = !DILocation(line: 472, column: 2, scope: !10318)
!10440 = !DILocation(line: 473, column: 22, scope: !10318)
!10441 = !DILocation(line: 473, column: 41, scope: !10318)
!10442 = !DILocation(line: 473, column: 45, scope: !10318)
!10443 = !DILocation(line: 473, column: 54, scope: !10318)
!10444 = !DILocation(line: 473, column: 62, scope: !10318)
!10445 = !DILocation(line: 473, column: 33, scope: !10318)
!10446 = !DILocation(line: 473, column: 2, scope: !10318)
!10447 = !DILocation(line: 474, column: 22, scope: !10318)
!10448 = !DILocation(line: 474, column: 41, scope: !10318)
!10449 = !DILocation(line: 474, column: 45, scope: !10318)
!10450 = !DILocation(line: 474, column: 51, scope: !10318)
!10451 = !DILocation(line: 474, column: 58, scope: !10318)
!10452 = !DILocation(line: 474, column: 33, scope: !10318)
!10453 = !DILocation(line: 474, column: 2, scope: !10318)
!10454 = !DILocation(line: 475, column: 22, scope: !10318)
!10455 = !DILocation(line: 475, column: 41, scope: !10318)
!10456 = !DILocation(line: 475, column: 45, scope: !10318)
!10457 = !DILocation(line: 475, column: 52, scope: !10318)
!10458 = !DILocation(line: 475, column: 33, scope: !10318)
!10459 = !DILocation(line: 475, column: 2, scope: !10318)
!10460 = !DILocation(line: 477, column: 22, scope: !10318)
!10461 = !DILocation(line: 477, column: 33, scope: !10318)
!10462 = !DILocation(line: 477, column: 37, scope: !10318)
!10463 = !DILocation(line: 477, column: 2, scope: !10318)
!10464 = !DILocation(line: 478, column: 1, scope: !10318)
!10465 = distinct !DISubprogram(name: "dib7000p_reset_gpio", scope: !3, file: !3, line: 525, type: !6205, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10466 = !DILocalVariable(name: "st", arg: 1, scope: !10465, file: !3, line: 525, type: !4566)
!10467 = !DILocation(line: 525, column: 55, scope: !10465)
!10468 = !DILocation(line: 528, column: 2, scope: !10465)
!10469 = !DILocation(line: 528, column: 2, scope: !10470)
!10470 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 528, column: 2)
!10471 = distinct !DILexicalBlock(scope: !10465, file: !3, line: 528, column: 2)
!10472 = !DILocation(line: 528, column: 2, scope: !10471)
!10473 = !DILocation(line: 530, column: 22, scope: !10465)
!10474 = !DILocation(line: 530, column: 32, scope: !10465)
!10475 = !DILocation(line: 530, column: 36, scope: !10465)
!10476 = !DILocation(line: 530, column: 2, scope: !10465)
!10477 = !DILocation(line: 531, column: 22, scope: !10465)
!10478 = !DILocation(line: 531, column: 32, scope: !10465)
!10479 = !DILocation(line: 531, column: 36, scope: !10465)
!10480 = !DILocation(line: 531, column: 2, scope: !10465)
!10481 = !DILocation(line: 535, column: 22, scope: !10465)
!10482 = !DILocation(line: 535, column: 32, scope: !10465)
!10483 = !DILocation(line: 535, column: 36, scope: !10465)
!10484 = !DILocation(line: 535, column: 40, scope: !10465)
!10485 = !DILocation(line: 535, column: 2, scope: !10465)
!10486 = !DILocation(line: 537, column: 22, scope: !10465)
!10487 = !DILocation(line: 537, column: 32, scope: !10465)
!10488 = !DILocation(line: 537, column: 36, scope: !10465)
!10489 = !DILocation(line: 537, column: 40, scope: !10465)
!10490 = !DILocation(line: 537, column: 2, scope: !10465)
!10491 = !DILocation(line: 538, column: 2, scope: !10465)
!10492 = distinct !DISubprogram(name: "dib7000p_write_tab", scope: !3, file: !3, line: 156, type: !10493, scopeLine: 157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10493 = !DISubroutineType(types: !10494)
!10494 = !{null, !4566, !638}
!10495 = !DILocalVariable(name: "state", arg: 1, scope: !10492, file: !3, line: 156, type: !4566)
!10496 = !DILocation(line: 156, column: 55, scope: !10492)
!10497 = !DILocalVariable(name: "buf", arg: 2, scope: !10492, file: !3, line: 156, type: !638)
!10498 = !DILocation(line: 156, column: 68, scope: !10492)
!10499 = !DILocalVariable(name: "l", scope: !10492, file: !3, line: 158, type: !328)
!10500 = !DILocation(line: 158, column: 6, scope: !10492)
!10501 = !DILocalVariable(name: "r", scope: !10492, file: !3, line: 158, type: !328)
!10502 = !DILocation(line: 158, column: 13, scope: !10492)
!10503 = !DILocalVariable(name: "n", scope: !10492, file: !3, line: 158, type: !638)
!10504 = !DILocation(line: 158, column: 17, scope: !10492)
!10505 = !DILocation(line: 159, column: 6, scope: !10492)
!10506 = !DILocation(line: 159, column: 4, scope: !10492)
!10507 = !DILocation(line: 160, column: 8, scope: !10492)
!10508 = !DILocation(line: 160, column: 6, scope: !10492)
!10509 = !DILocation(line: 160, column: 4, scope: !10492)
!10510 = !DILocation(line: 161, column: 2, scope: !10492)
!10511 = !DILocation(line: 161, column: 9, scope: !10492)
!10512 = !DILocation(line: 162, column: 9, scope: !10513)
!10513 = distinct !DILexicalBlock(scope: !10492, file: !3, line: 161, column: 12)
!10514 = !DILocation(line: 162, column: 7, scope: !10513)
!10515 = !DILocation(line: 162, column: 5, scope: !10513)
!10516 = !DILocation(line: 164, column: 3, scope: !10513)
!10517 = !DILocation(line: 165, column: 24, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10513, file: !3, line: 164, column: 6)
!10519 = !DILocation(line: 165, column: 31, scope: !10518)
!10520 = !DILocation(line: 165, column: 36, scope: !10518)
!10521 = !DILocation(line: 165, column: 34, scope: !10518)
!10522 = !DILocation(line: 165, column: 4, scope: !10518)
!10523 = !DILocation(line: 166, column: 5, scope: !10518)
!10524 = !DILocation(line: 167, column: 3, scope: !10518)
!10525 = !DILocation(line: 167, column: 12, scope: !10513)
!10526 = distinct !{!10526, !10516, !10527}
!10527 = !DILocation(line: 167, column: 15, scope: !10513)
!10528 = !DILocation(line: 168, column: 9, scope: !10513)
!10529 = !DILocation(line: 168, column: 7, scope: !10513)
!10530 = !DILocation(line: 168, column: 5, scope: !10513)
!10531 = distinct !{!10531, !10510, !10532}
!10532 = !DILocation(line: 169, column: 2, scope: !10492)
!10533 = !DILocation(line: 170, column: 1, scope: !10492)
!10534 = distinct !DISubprogram(name: "dib7090_host_bus_drive", scope: !3, file: !3, line: 2405, type: !8115, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10535 = !DILocalVariable(name: "state", arg: 1, scope: !10534, file: !3, line: 2405, type: !4566)
!10536 = !DILocation(line: 2405, column: 58, scope: !10534)
!10537 = !DILocalVariable(name: "drive", arg: 2, scope: !10534, file: !3, line: 2405, type: !318)
!10538 = !DILocation(line: 2405, column: 68, scope: !10534)
!10539 = !DILocalVariable(name: "reg", scope: !10534, file: !3, line: 2407, type: !328)
!10540 = !DILocation(line: 2407, column: 6, scope: !10534)
!10541 = !DILocation(line: 2410, column: 27, scope: !10534)
!10542 = !DILocation(line: 2410, column: 8, scope: !10534)
!10543 = !DILocation(line: 2410, column: 40, scope: !10534)
!10544 = !DILocation(line: 2410, column: 6, scope: !10534)
!10545 = !DILocation(line: 2411, column: 10, scope: !10534)
!10546 = !DILocation(line: 2411, column: 16, scope: !10534)
!10547 = !DILocation(line: 2411, column: 26, scope: !10534)
!10548 = !DILocation(line: 2411, column: 32, scope: !10534)
!10549 = !DILocation(line: 2411, column: 23, scope: !10534)
!10550 = !DILocation(line: 2411, column: 40, scope: !10534)
!10551 = !DILocation(line: 2411, column: 38, scope: !10534)
!10552 = !DILocation(line: 2411, column: 6, scope: !10534)
!10553 = !DILocation(line: 2412, column: 22, scope: !10534)
!10554 = !DILocation(line: 2412, column: 35, scope: !10534)
!10555 = !DILocation(line: 2412, column: 2, scope: !10534)
!10556 = !DILocation(line: 2415, column: 27, scope: !10534)
!10557 = !DILocation(line: 2415, column: 8, scope: !10534)
!10558 = !DILocation(line: 2415, column: 40, scope: !10534)
!10559 = !DILocation(line: 2415, column: 6, scope: !10534)
!10560 = !DILocation(line: 2416, column: 10, scope: !10534)
!10561 = !DILocation(line: 2416, column: 16, scope: !10534)
!10562 = !DILocation(line: 2416, column: 25, scope: !10534)
!10563 = !DILocation(line: 2416, column: 31, scope: !10534)
!10564 = !DILocation(line: 2416, column: 22, scope: !10534)
!10565 = !DILocation(line: 2416, column: 6, scope: !10534)
!10566 = !DILocation(line: 2417, column: 22, scope: !10534)
!10567 = !DILocation(line: 2417, column: 35, scope: !10534)
!10568 = !DILocation(line: 2417, column: 2, scope: !10534)
!10569 = !DILocation(line: 2420, column: 27, scope: !10534)
!10570 = !DILocation(line: 2420, column: 8, scope: !10534)
!10571 = !DILocation(line: 2420, column: 40, scope: !10534)
!10572 = !DILocation(line: 2420, column: 6, scope: !10534)
!10573 = !DILocation(line: 2421, column: 10, scope: !10534)
!10574 = !DILocation(line: 2421, column: 16, scope: !10534)
!10575 = !DILocation(line: 2421, column: 26, scope: !10534)
!10576 = !DILocation(line: 2421, column: 32, scope: !10534)
!10577 = !DILocation(line: 2421, column: 23, scope: !10534)
!10578 = !DILocation(line: 2421, column: 40, scope: !10534)
!10579 = !DILocation(line: 2421, column: 38, scope: !10534)
!10580 = !DILocation(line: 2421, column: 6, scope: !10534)
!10581 = !DILocation(line: 2422, column: 22, scope: !10534)
!10582 = !DILocation(line: 2422, column: 35, scope: !10534)
!10583 = !DILocation(line: 2422, column: 2, scope: !10534)
!10584 = !DILocation(line: 2425, column: 27, scope: !10534)
!10585 = !DILocation(line: 2425, column: 8, scope: !10534)
!10586 = !DILocation(line: 2425, column: 40, scope: !10534)
!10587 = !DILocation(line: 2425, column: 6, scope: !10534)
!10588 = !DILocation(line: 2426, column: 10, scope: !10534)
!10589 = !DILocation(line: 2426, column: 16, scope: !10534)
!10590 = !DILocation(line: 2426, column: 25, scope: !10534)
!10591 = !DILocation(line: 2426, column: 31, scope: !10534)
!10592 = !DILocation(line: 2426, column: 22, scope: !10534)
!10593 = !DILocation(line: 2426, column: 6, scope: !10534)
!10594 = !DILocation(line: 2427, column: 22, scope: !10534)
!10595 = !DILocation(line: 2427, column: 35, scope: !10534)
!10596 = !DILocation(line: 2427, column: 2, scope: !10534)
!10597 = !DILocation(line: 2430, column: 27, scope: !10534)
!10598 = !DILocation(line: 2430, column: 8, scope: !10534)
!10599 = !DILocation(line: 2430, column: 40, scope: !10534)
!10600 = !DILocation(line: 2430, column: 6, scope: !10534)
!10601 = !DILocation(line: 2431, column: 10, scope: !10534)
!10602 = !DILocation(line: 2431, column: 16, scope: !10534)
!10603 = !DILocation(line: 2431, column: 26, scope: !10534)
!10604 = !DILocation(line: 2431, column: 32, scope: !10534)
!10605 = !DILocation(line: 2431, column: 23, scope: !10534)
!10606 = !DILocation(line: 2431, column: 40, scope: !10534)
!10607 = !DILocation(line: 2431, column: 38, scope: !10534)
!10608 = !DILocation(line: 2431, column: 6, scope: !10534)
!10609 = !DILocation(line: 2432, column: 22, scope: !10534)
!10610 = !DILocation(line: 2432, column: 35, scope: !10534)
!10611 = !DILocation(line: 2432, column: 2, scope: !10534)
!10612 = !DILocation(line: 2434, column: 2, scope: !10534)
!10613 = distinct !DISubprogram(name: "dib7090_configMpegMux", scope: !3, file: !3, line: 2511, type: !10614, scopeLine: 2513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10614 = !DISubroutineType(types: !10615)
!10615 = !{null, !4566, !328, !328, !328}
!10616 = !DILocalVariable(name: "state", arg: 1, scope: !10613, file: !3, line: 2511, type: !4566)
!10617 = !DILocation(line: 2511, column: 58, scope: !10613)
!10618 = !DILocalVariable(name: "pulseWidth", arg: 2, scope: !10613, file: !3, line: 2512, type: !328)
!10619 = !DILocation(line: 2512, column: 7, scope: !10613)
!10620 = !DILocalVariable(name: "enSerialMode", arg: 3, scope: !10613, file: !3, line: 2512, type: !328)
!10621 = !DILocation(line: 2512, column: 23, scope: !10613)
!10622 = !DILocalVariable(name: "enSerialClkDiv2", arg: 4, scope: !10613, file: !3, line: 2512, type: !328)
!10623 = !DILocation(line: 2512, column: 41, scope: !10613)
!10624 = !DILocation(line: 2514, column: 2, scope: !10613)
!10625 = !DILocation(line: 2514, column: 2, scope: !10626)
!10626 = distinct !DILexicalBlock(scope: !10627, file: !3, line: 2514, column: 2)
!10627 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 2514, column: 2)
!10628 = !DILocation(line: 2514, column: 2, scope: !10627)
!10629 = !DILocation(line: 2516, column: 20, scope: !10613)
!10630 = !DILocation(line: 2516, column: 2, scope: !10613)
!10631 = !DILocation(line: 2519, column: 7, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10613, file: !3, line: 2519, column: 6)
!10633 = !DILocation(line: 2519, column: 20, scope: !10632)
!10634 = !DILocation(line: 2519, column: 26, scope: !10632)
!10635 = !DILocation(line: 2519, column: 30, scope: !10632)
!10636 = !DILocation(line: 2519, column: 37, scope: !10632)
!10637 = !DILocation(line: 2519, column: 53, scope: !10632)
!10638 = !DILocation(line: 2519, column: 6, scope: !10613)
!10639 = !DILocation(line: 2520, column: 19, scope: !10632)
!10640 = !DILocation(line: 2520, column: 3, scope: !10632)
!10641 = !DILocation(line: 2522, column: 22, scope: !10613)
!10642 = !DILocation(line: 2522, column: 37, scope: !10613)
!10643 = !DILocation(line: 2522, column: 48, scope: !10613)
!10644 = !DILocation(line: 2522, column: 56, scope: !10613)
!10645 = !DILocation(line: 2523, column: 8, scope: !10613)
!10646 = !DILocation(line: 2523, column: 21, scope: !10613)
!10647 = !DILocation(line: 2523, column: 28, scope: !10613)
!10648 = !DILocation(line: 2523, column: 4, scope: !10613)
!10649 = !DILocation(line: 2524, column: 7, scope: !10613)
!10650 = !DILocation(line: 2524, column: 23, scope: !10613)
!10651 = !DILocation(line: 2524, column: 4, scope: !10613)
!10652 = !DILocation(line: 2522, column: 35, scope: !10613)
!10653 = !DILocation(line: 2522, column: 2, scope: !10613)
!10654 = !DILocation(line: 2526, column: 20, scope: !10613)
!10655 = !DILocation(line: 2526, column: 2, scope: !10613)
!10656 = !DILocation(line: 2527, column: 1, scope: !10613)
!10657 = distinct !DISubprogram(name: "dib7090_cfg_DibRx", scope: !3, file: !3, line: 2472, type: !10658, scopeLine: 2474, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{!327, !4566, !331, !331, !331, !331, !331, !331, !331}
!10660 = !DILocalVariable(name: "state", arg: 1, scope: !10657, file: !3, line: 2472, type: !4566)
!10661 = !DILocation(line: 2472, column: 53, scope: !10657)
!10662 = !DILocalVariable(name: "P_Kin", arg: 2, scope: !10657, file: !3, line: 2472, type: !331)
!10663 = !DILocation(line: 2472, column: 64, scope: !10657)
!10664 = !DILocalVariable(name: "P_Kout", arg: 3, scope: !10657, file: !3, line: 2472, type: !331)
!10665 = !DILocation(line: 2472, column: 75, scope: !10657)
!10666 = !DILocalVariable(name: "synchroMode", arg: 4, scope: !10657, file: !3, line: 2472, type: !331)
!10667 = !DILocation(line: 2472, column: 87, scope: !10657)
!10668 = !DILocalVariable(name: "insertExtSynchro", arg: 5, scope: !10657, file: !3, line: 2472, type: !331)
!10669 = !DILocation(line: 2472, column: 104, scope: !10657)
!10670 = !DILocalVariable(name: "syncWord", arg: 6, scope: !10657, file: !3, line: 2472, type: !331)
!10671 = !DILocation(line: 2472, column: 126, scope: !10657)
!10672 = !DILocalVariable(name: "syncSize", arg: 7, scope: !10657, file: !3, line: 2472, type: !331)
!10673 = !DILocation(line: 2472, column: 140, scope: !10657)
!10674 = !DILocalVariable(name: "dataOutRate", arg: 8, scope: !10657, file: !3, line: 2473, type: !331)
!10675 = !DILocation(line: 2473, column: 7, scope: !10657)
!10676 = !DILocalVariable(name: "syncFreq", scope: !10657, file: !3, line: 2475, type: !331)
!10677 = !DILocation(line: 2475, column: 6, scope: !10657)
!10678 = !DILocation(line: 2477, column: 2, scope: !10657)
!10679 = !DILocation(line: 2477, column: 2, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 2477, column: 2)
!10681 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 2477, column: 2)
!10682 = !DILocation(line: 2477, column: 2, scope: !10681)
!10683 = !DILocation(line: 2478, column: 7, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 2478, column: 6)
!10685 = !DILocation(line: 2478, column: 13, scope: !10684)
!10686 = !DILocation(line: 2478, column: 19, scope: !10684)
!10687 = !DILocation(line: 2478, column: 23, scope: !10684)
!10688 = !DILocation(line: 2478, column: 30, scope: !10684)
!10689 = !DILocation(line: 2478, column: 6, scope: !10657)
!10690 = !DILocation(line: 2479, column: 35, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10684, file: !3, line: 2478, column: 37)
!10692 = !DILocation(line: 2479, column: 42, scope: !10691)
!10693 = !DILocation(line: 2479, column: 50, scope: !10691)
!10694 = !DILocation(line: 2479, column: 68, scope: !10691)
!10695 = !DILocation(line: 2479, column: 14, scope: !10691)
!10696 = !DILocation(line: 2479, column: 12, scope: !10691)
!10697 = !DILocation(line: 2480, column: 23, scope: !10691)
!10698 = !DILocation(line: 2480, column: 36, scope: !10691)
!10699 = !DILocation(line: 2480, column: 3, scope: !10691)
!10700 = !DILocation(line: 2481, column: 2, scope: !10691)
!10701 = !DILocation(line: 2482, column: 22, scope: !10657)
!10702 = !DILocation(line: 2482, column: 2, scope: !10657)
!10703 = !DILocation(line: 2483, column: 22, scope: !10657)
!10704 = !DILocation(line: 2483, column: 35, scope: !10657)
!10705 = !DILocation(line: 2483, column: 2, scope: !10657)
!10706 = !DILocation(line: 2484, column: 22, scope: !10657)
!10707 = !DILocation(line: 2484, column: 35, scope: !10657)
!10708 = !DILocation(line: 2484, column: 2, scope: !10657)
!10709 = !DILocation(line: 2485, column: 22, scope: !10657)
!10710 = !DILocation(line: 2485, column: 35, scope: !10657)
!10711 = !DILocation(line: 2485, column: 2, scope: !10657)
!10712 = !DILocation(line: 2486, column: 22, scope: !10657)
!10713 = !DILocation(line: 2486, column: 36, scope: !10657)
!10714 = !DILocation(line: 2486, column: 45, scope: !10657)
!10715 = !DILocation(line: 2486, column: 52, scope: !10657)
!10716 = !DILocation(line: 2486, column: 35, scope: !10657)
!10717 = !DILocation(line: 2486, column: 2, scope: !10657)
!10718 = !DILocation(line: 2487, column: 22, scope: !10657)
!10719 = !DILocation(line: 2487, column: 35, scope: !10657)
!10720 = !DILocation(line: 2487, column: 44, scope: !10657)
!10721 = !DILocation(line: 2487, column: 2, scope: !10657)
!10722 = !DILocation(line: 2488, column: 22, scope: !10657)
!10723 = !DILocation(line: 2488, column: 35, scope: !10657)
!10724 = !DILocation(line: 2488, column: 2, scope: !10657)
!10725 = !DILocation(line: 2489, column: 22, scope: !10657)
!10726 = !DILocation(line: 2489, column: 35, scope: !10657)
!10727 = !DILocation(line: 2489, column: 2, scope: !10657)
!10728 = !DILocation(line: 2490, column: 22, scope: !10657)
!10729 = !DILocation(line: 2490, column: 2, scope: !10657)
!10730 = !DILocation(line: 2492, column: 2, scope: !10657)
!10731 = distinct !DISubprogram(name: "dib7090_calcSyncFreq", scope: !3, file: !3, line: 2437, type: !10732, scopeLine: 2438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10732 = !DISubroutineType(types: !10733)
!10733 = !{!331, !331, !331, !331, !331}
!10734 = !DILocalVariable(name: "P_Kin", arg: 1, scope: !10731, file: !3, line: 2437, type: !331)
!10735 = !DILocation(line: 2437, column: 37, scope: !10731)
!10736 = !DILocalVariable(name: "P_Kout", arg: 2, scope: !10731, file: !3, line: 2437, type: !331)
!10737 = !DILocation(line: 2437, column: 48, scope: !10731)
!10738 = !DILocalVariable(name: "insertExtSynchro", arg: 3, scope: !10731, file: !3, line: 2437, type: !331)
!10739 = !DILocation(line: 2437, column: 60, scope: !10731)
!10740 = !DILocalVariable(name: "syncSize", arg: 4, scope: !10731, file: !3, line: 2437, type: !331)
!10741 = !DILocation(line: 2437, column: 82, scope: !10731)
!10742 = !DILocalVariable(name: "quantif", scope: !10731, file: !3, line: 2439, type: !331)
!10743 = !DILocation(line: 2439, column: 6, scope: !10731)
!10744 = !DILocalVariable(name: "nom", scope: !10731, file: !3, line: 2440, type: !331)
!10745 = !DILocation(line: 2440, column: 6, scope: !10731)
!10746 = !DILocation(line: 2440, column: 13, scope: !10731)
!10747 = !DILocation(line: 2440, column: 32, scope: !10731)
!10748 = !DILocation(line: 2440, column: 30, scope: !10731)
!10749 = !DILocation(line: 2440, column: 40, scope: !10731)
!10750 = !DILocation(line: 2440, column: 38, scope: !10731)
!10751 = !DILocalVariable(name: "denom", scope: !10731, file: !3, line: 2441, type: !331)
!10752 = !DILocation(line: 2441, column: 6, scope: !10731)
!10753 = !DILocation(line: 2441, column: 14, scope: !10731)
!10754 = !DILocalVariable(name: "syncFreq", scope: !10731, file: !3, line: 2442, type: !331)
!10755 = !DILocation(line: 2442, column: 6, scope: !10731)
!10756 = !DILocation(line: 2442, column: 19, scope: !10731)
!10757 = !DILocation(line: 2442, column: 26, scope: !10731)
!10758 = !DILocation(line: 2442, column: 23, scope: !10731)
!10759 = !DILocation(line: 2442, column: 37, scope: !10731)
!10760 = !DILocation(line: 2442, column: 35, scope: !10731)
!10761 = !DILocation(line: 2444, column: 7, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 2444, column: 6)
!10763 = !DILocation(line: 2444, column: 25, scope: !10762)
!10764 = !DILocation(line: 2444, column: 22, scope: !10762)
!10765 = !DILocation(line: 2444, column: 34, scope: !10762)
!10766 = !DILocation(line: 2444, column: 16, scope: !10762)
!10767 = !DILocation(line: 2444, column: 40, scope: !10762)
!10768 = !DILocation(line: 2444, column: 6, scope: !10731)
!10769 = !DILocation(line: 2445, column: 15, scope: !10762)
!10770 = !DILocation(line: 2445, column: 27, scope: !10762)
!10771 = !DILocation(line: 2445, column: 24, scope: !10762)
!10772 = !DILocation(line: 2445, column: 36, scope: !10762)
!10773 = !DILocation(line: 2445, column: 12, scope: !10762)
!10774 = !DILocation(line: 2445, column: 3, scope: !10762)
!10775 = !DILocation(line: 2447, column: 15, scope: !10762)
!10776 = !DILocation(line: 2447, column: 27, scope: !10762)
!10777 = !DILocation(line: 2447, column: 24, scope: !10762)
!10778 = !DILocation(line: 2447, column: 12, scope: !10762)
!10779 = !DILocation(line: 2449, column: 6, scope: !10780)
!10780 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 2449, column: 6)
!10781 = !DILocation(line: 2449, column: 15, scope: !10780)
!10782 = !DILocation(line: 2449, column: 6, scope: !10731)
!10783 = !DILocation(line: 2450, column: 14, scope: !10780)
!10784 = !DILocation(line: 2450, column: 23, scope: !10780)
!10785 = !DILocation(line: 2450, column: 12, scope: !10780)
!10786 = !DILocation(line: 2450, column: 3, scope: !10780)
!10787 = !DILocation(line: 2452, column: 9, scope: !10731)
!10788 = !DILocation(line: 2452, column: 2, scope: !10731)
!10789 = distinct !DISubprogram(name: "dib7000p_cfg_gpio", scope: !3, file: !3, line: 541, type: !10790, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !816)
!10790 = !DISubroutineType(types: !10791)
!10791 = !{!327, !4566, !318, !318, !318}
!10792 = !DILocalVariable(name: "st", arg: 1, scope: !10789, file: !3, line: 541, type: !4566)
!10793 = !DILocation(line: 541, column: 53, scope: !10789)
!10794 = !DILocalVariable(name: "num", arg: 2, scope: !10789, file: !3, line: 541, type: !318)
!10795 = !DILocation(line: 541, column: 60, scope: !10789)
!10796 = !DILocalVariable(name: "dir", arg: 3, scope: !10789, file: !3, line: 541, type: !318)
!10797 = !DILocation(line: 541, column: 68, scope: !10789)
!10798 = !DILocalVariable(name: "val", arg: 4, scope: !10789, file: !3, line: 541, type: !318)
!10799 = !DILocation(line: 541, column: 76, scope: !10789)
!10800 = !DILocation(line: 543, column: 36, scope: !10789)
!10801 = !DILocation(line: 543, column: 17, scope: !10789)
!10802 = !DILocation(line: 543, column: 2, scope: !10789)
!10803 = !DILocation(line: 543, column: 6, scope: !10789)
!10804 = !DILocation(line: 543, column: 15, scope: !10789)
!10805 = !DILocation(line: 544, column: 25, scope: !10789)
!10806 = !DILocation(line: 544, column: 22, scope: !10789)
!10807 = !DILocation(line: 544, column: 18, scope: !10789)
!10808 = !DILocation(line: 544, column: 2, scope: !10789)
!10809 = !DILocation(line: 544, column: 6, scope: !10789)
!10810 = !DILocation(line: 544, column: 15, scope: !10789)
!10811 = !DILocation(line: 545, column: 19, scope: !10789)
!10812 = !DILocation(line: 545, column: 23, scope: !10789)
!10813 = !DILocation(line: 545, column: 33, scope: !10789)
!10814 = !DILocation(line: 545, column: 30, scope: !10789)
!10815 = !DILocation(line: 545, column: 2, scope: !10789)
!10816 = !DILocation(line: 545, column: 6, scope: !10789)
!10817 = !DILocation(line: 545, column: 15, scope: !10789)
!10818 = !DILocation(line: 546, column: 22, scope: !10789)
!10819 = !DILocation(line: 546, column: 32, scope: !10789)
!10820 = !DILocation(line: 546, column: 36, scope: !10789)
!10821 = !DILocation(line: 546, column: 2, scope: !10789)
!10822 = !DILocation(line: 548, column: 36, scope: !10789)
!10823 = !DILocation(line: 548, column: 17, scope: !10789)
!10824 = !DILocation(line: 548, column: 2, scope: !10789)
!10825 = !DILocation(line: 548, column: 6, scope: !10789)
!10826 = !DILocation(line: 548, column: 15, scope: !10789)
!10827 = !DILocation(line: 549, column: 25, scope: !10789)
!10828 = !DILocation(line: 549, column: 22, scope: !10789)
!10829 = !DILocation(line: 549, column: 18, scope: !10789)
!10830 = !DILocation(line: 549, column: 2, scope: !10789)
!10831 = !DILocation(line: 549, column: 6, scope: !10789)
!10832 = !DILocation(line: 549, column: 15, scope: !10789)
!10833 = !DILocation(line: 550, column: 19, scope: !10789)
!10834 = !DILocation(line: 550, column: 23, scope: !10789)
!10835 = !DILocation(line: 550, column: 34, scope: !10789)
!10836 = !DILocation(line: 550, column: 31, scope: !10789)
!10837 = !DILocation(line: 550, column: 2, scope: !10789)
!10838 = !DILocation(line: 550, column: 6, scope: !10789)
!10839 = !DILocation(line: 550, column: 15, scope: !10789)
!10840 = !DILocation(line: 551, column: 22, scope: !10789)
!10841 = !DILocation(line: 551, column: 32, scope: !10789)
!10842 = !DILocation(line: 551, column: 36, scope: !10789)
!10843 = !DILocation(line: 551, column: 2, scope: !10789)
!10844 = !DILocation(line: 553, column: 2, scope: !10789)
