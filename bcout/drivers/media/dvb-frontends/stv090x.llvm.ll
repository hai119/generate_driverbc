; ModuleID = '../bcout/drivers/media/dvb-frontends/stv090x.llvm.bc'
source_filename = "drivers/media/dvb-frontends/stv090x.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall6.init\22, \22a\22\09"
module asm "__initcall_stv090x_driver_init6:\09\09\09"
module asm ".long\09stv090x_driver_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.dvb_frontend_ops = type { %struct.dvb_frontend_internal_info, [8 x i8], void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)*, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)*, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i64)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, %struct.dvb_tuner_ops, %struct.analog_demod_ops }
%struct.dvb_frontend_internal_info = type { [128 x i8], i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.dvb_frontend = type { %struct.kref, %struct.dvb_frontend_ops, %struct.dvb_adapter*, i8*, i8*, i8*, i8*, i8*, %struct.dtv_frontend_properties, i32 (i8*, i32, i32, i32)*, i32, i32 }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.dvb_adapter = type { i32, %struct.list_head, %struct.list_head, i8*, [6 x i8], i8*, %struct.device*, %struct.module*, i32, %struct.dvb_device*, %struct.mutex }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.66, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.66 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.1, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.1 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.64, %struct.list_head, %struct.list_head, %union.anon.65 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.2, i8* }
%union.anon.2 = type { i64 }
%struct.lockref = type { %union.anon.62 }
%union.anon.62 = type { %struct.anon.63 }
%struct.anon.63 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.4, %union.anon.54, %struct.atomic_t, [8 x i8] }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.54 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.55, i32 }
%union.anon.55 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.64 = type { %struct.list_head }
%union.anon.65 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.56, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.57, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.58, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.61, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.56 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.57 = type { %struct.callback_head }
%union.anon.58 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.7 }
%union.anon.7 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.61 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.59 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.59 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type opaque
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.spinlock = type { %union.anon.6 }
%union.anon.6 = type { %struct.raw_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.dvb_device = type { %struct.list_head, %struct.file_operations*, %struct.dvb_adapter*, i32, i32, i32, i32, i32, i32, %struct.wait_queue_head, i32 (%struct.file*, i32, i8*)*, i8* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.dtv_frontend_properties = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, [3 x %struct.anon], i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats, %struct.dtv_fe_stats }
%struct.anon = type { i8, i32, i32, i8 }
%struct.dtv_fe_stats = type { i8, [4 x %struct.dtv_stats] }
%struct.dtv_stats = type <{ i8, %union.anon.0 }>
%union.anon.0 = type { i64 }
%struct.dvb_frontend_tune_settings = type { i32, i32, i32 }
%struct.dvb_diseqc_master_cmd = type { [6 x i8], i8 }
%struct.dvb_diseqc_slave_reply = type { [4 x i8], i8, i32 }
%struct.dvb_tuner_ops = type { %struct.dvb_tuner_info, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i8*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i8*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)* }
%struct.dvb_tuner_info = type { [128 x i8], i32, i32, i32, i32, i32, i32 }
%struct.analog_parameters = type { i32, i32, i32, i64 }
%struct.analog_demod_ops = type { %struct.analog_demod_info, void (%struct.dvb_frontend*, %struct.analog_parameters*)*, i32 (%struct.dvb_frontend*, i16*)*, i32 (%struct.dvb_frontend*, i32*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, void (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i8*)* }
%struct.analog_demod_info = type { i8* }
%struct.i2c_driver = type { i32, i32 (%struct.i2c_client*, %struct.i2c_device_id*)*, i32 (%struct.i2c_client*)*, i32 (%struct.i2c_client*)*, void (%struct.i2c_client*)*, void (%struct.i2c_client*, i32, i32)*, i32 (%struct.i2c_client*, i32, i8*)*, %struct.device_driver, %struct.i2c_device_id*, i32 (%struct.i2c_client*, %struct.i2c_board_info*)*, i16*, %struct.list_head }
%struct.i2c_client = type { i16, i16, [20 x i8], %struct.i2c_adapter*, %struct.device, i32, i32, %struct.list_head }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.i2c_device_id = type { [20 x i8], i64 }
%struct.i2c_board_info = type { [20 x i8], i16, i16, i8*, i8*, %struct.device_node*, %struct.fwnode_handle*, %struct.property_entry*, %struct.resource*, i32, i32 }
%struct.property_entry = type { i8*, i64, i8, i32, %union.anon.67 }
%union.anon.67 = type { i8* }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.kmem_cache = type opaque
%struct.stv090x_dev = type { %struct.stv090x_internal*, %struct.stv090x_dev* }
%struct.stv090x_internal = type { %struct.i2c_adapter*, i8, %struct.mutex, %struct.mutex, i32, i32, i32 }
%struct.stv090x_tab = type { i32, i32 }
%struct.stv090x_long_frame_crloop = type { i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.stv090x_short_frame_crloop = type { i32, i8, i8, i8, i8, i8 }
%struct.stv090x_reg = type { i16, i8 }
%struct.stv090x_config = type { i32, i32, i32, i32, i32, i8, i8, i8, i32, i32, i8, i32, i8, i32, i32, i8, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32*)*, void (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i8, i8, i8, i8)*, %struct.dvb_frontend* (%struct.i2c_client*)* }
%struct.stv090x_state = type { i32, i32, i32, %struct.stv090x_internal*, %struct.i2c_adapter*, %struct.stv090x_config*, %struct.dvb_frontend, i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@__param_str_verbose = internal constant [16 x i8] c"stv090x.verbose\00", align 16, !dbg !0
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@verbose = internal global i32 0, align 4, !dbg !556
@__param_verbose = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_verbose, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @verbose to i8*) } }, section "__param", align 8, !dbg !451
@__UNIQUE_ID_verbosetype220 = internal constant [29 x i8] c"stv090x.parmtype=verbose:int\00", section ".modinfo", align 1, !dbg !517
@stv090x_ops = internal constant %struct.dvb_frontend_ops { %struct.dvb_frontend_internal_info { [128 x i8] c"STV090x Multistandard\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 950000000, i32 -2144967296, i32 0, i32 0, i32 1000000, i32 45000000, i32 0, i32 268436993 }, [8 x i8] c"\05\06\04\00\00\00\00\00", void (%struct.dvb_frontend*)* null, void (%struct.dvb_frontend*)* @stv090x_release, void (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @stv090x_init, i32 (%struct.dvb_frontend*)* @stv090x_sleep, i32 (%struct.dvb_frontend*, i8*, i32)* null, i32 (%struct.dvb_frontend*, i1, i32, i32*, i32*)* null, i32 (%struct.dvb_frontend*)* @stv090x_frontend_algo, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_frontend_tune_settings*)* null, i32 (%struct.dvb_frontend*, %struct.dtv_frontend_properties*)* null, i32 (%struct.dvb_frontend*, i32*)* @stv090x_read_status, i32 (%struct.dvb_frontend*, i32*)* @stv090x_read_per, i32 (%struct.dvb_frontend*, i16*)* @stv090x_read_signal_strength, i32 (%struct.dvb_frontend*, i16*)* @stv090x_read_cnr, i32 (%struct.dvb_frontend*, i32*)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_master_cmd*)* @stv090x_send_diseqc_msg, i32 (%struct.dvb_frontend*, %struct.dvb_diseqc_slave_reply*)* @stv090x_recv_slave_reply, i32 (%struct.dvb_frontend*, i32)* @stv090x_send_diseqc_burst, i32 (%struct.dvb_frontend*, i32)* @stv090x_set_tone, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i64)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*, i32)* null, i32 (%struct.dvb_frontend*)* null, i32 (%struct.dvb_frontend*)* @stv090x_search, %struct.dvb_tuner_ops zeroinitializer, %struct.analog_demod_ops zeroinitializer }, align 8, !dbg !558
@__UNIQUE_ID___addressable_stv090x_driver_init221 = internal global i8* bitcast (i32 ()* @stv090x_driver_init to i8*), section ".discard.addressable", align 8, !dbg !522
@stv090x_driver = internal global %struct.i2c_driver { i32 0, i32 (%struct.i2c_client*, %struct.i2c_device_id*)* @stv090x_probe, i32 (%struct.i2c_client*)* @stv090x_remove, i32 (%struct.i2c_client*)* null, void (%struct.i2c_client*)* null, void (%struct.i2c_client*, i32, i32)* null, i32 (%struct.i2c_client*, i32, i8*)* null, %struct.device_driver { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), %struct.bus_type* null, %struct.module* null, i8* null, i8 1, i32 0, %struct.of_device_id* null, %struct.acpi_device_id* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, %struct.attribute_group** null, %struct.attribute_group** null, %struct.dev_pm_ops* null, void (%struct.device*)* null, %struct.driver_private* null }, %struct.i2c_device_id* getelementptr inbounds ([2 x %struct.i2c_device_id], [2 x %struct.i2c_device_id]* @stv090x_id_table, i32 0, i32 0), i32 (%struct.i2c_client*, %struct.i2c_board_info*)* null, i16* null, %struct.list_head zeroinitializer }, align 8, !dbg !4763
@__exitcall_stv090x_driver_exit = internal global void ()* @stv090x_driver_exit, section ".exitcall.exit", align 8, !dbg !524
@__UNIQUE_ID_verbose222 = internal constant [41 x i8] c"stv090x.parm=verbose:Set Verbosity level\00", section ".modinfo", align 1, !dbg !531
@__UNIQUE_ID_author223 = internal constant [28 x i8] c"stv090x.author=Manu Abraham\00", section ".modinfo", align 1, !dbg !536
@__UNIQUE_ID_description224 = internal constant [57 x i8] c"stv090x.description=STV090x Multi-Std Broadcast frontend\00", section ".modinfo", align 1, !dbg !541
@__UNIQUE_ID_file225 = internal constant [49 x i8] c"stv090x.file=drivers/media/dvb-frontends/stv090x\00", section ".modinfo", align 1, !dbg !546
@__UNIQUE_ID_license226 = internal constant [20 x i8] c"stv090x.license=GPL\00", section ".modinfo", align 1, !dbg !551
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"\013%s: Actually removing\0A\00", align 1
@__func__.stv090x_release = private unnamed_addr constant [16 x i8] c"stv090x_release\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"\015%s: Actually removing\0A\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"\016%s: Actually removing\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"\017%s: Actually removing\0A\00", align 1
@stv090x_first_dev = internal global %struct.stv090x_dev* null, align 8, !dbg !4448
@.str.5 = private unnamed_addr constant [27 x i8] c"\013%s: Error waking device\0A\00", align 1
@__func__.stv090x_init = private unnamed_addr constant [13 x i8] c"stv090x_init\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"\015%s: Error waking device\0A\00", align 1
@.str.7 = private unnamed_addr constant [27 x i8] c"\016%s: Error waking device\0A\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"\017%s: Error waking device\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"\013%s: I/O error\0A\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"\015%s: I/O error\0A\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"\016%s: I/O error\0A\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"\017%s: I/O error\0A\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"\013%s: Enable Gate\0A\00", align 1
@__func__.stv090x_i2c_gate_ctrl = private unnamed_addr constant [22 x i8] c"stv090x_i2c_gate_ctrl\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"\015%s: Enable Gate\0A\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"\016%s: Enable Gate\0A\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"\017%s: Enable Gate\0A\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"\013%s: Disable Gate\0A\00", align 1
@.str.18 = private unnamed_addr constant [20 x i8] c"\015%s: Disable Gate\0A\00", align 1
@.str.19 = private unnamed_addr constant [20 x i8] c"\016%s: Disable Gate\0A\00", align 1
@.str.20 = private unnamed_addr constant [20 x i8] c"\017%s: Disable Gate\0A\00", align 1
@__func__.stv090x_set_mclk = private unnamed_addr constant [17 x i8] c"stv090x_set_mclk\00", align 1
@.str.21 = private unnamed_addr constant [43 x i8] c"\014%s: i2c wr reg=%04x: len=%d is too big!\0A\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"stv090x\00", align 1
@.str.23 = private unnamed_addr constant [25 x i8] c"\013%s: %s [0x%04x]: %*ph\0A\00", align 1
@__func__.stv090x_write_regs = private unnamed_addr constant [19 x i8] c"stv090x_write_regs\00", align 1
@.str.24 = private unnamed_addr constant [25 x i8] c"\015%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.25 = private unnamed_addr constant [25 x i8] c"\016%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"\017%s: %s [0x%04x]: %*ph\0A\00", align 1
@.str.27 = private unnamed_addr constant [60 x i8] c"\013%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.28 = private unnamed_addr constant [60 x i8] c"\015%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.29 = private unnamed_addr constant [60 x i8] c"\016%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [60 x i8] c"\017%s: Reg=[0x%04x], Data=[0x%02x ...], Count=%u, Status=%d\0A\00", align 1
@.str.31 = private unnamed_addr constant [32 x i8] c"\013%s: Wake %s(%d) from standby\0A\00", align 1
@__func__.stv090x_wakeup = private unnamed_addr constant [15 x i8] c"stv090x_wakeup\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"STV0900\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"STV0903\00", align 1
@.str.34 = private unnamed_addr constant [32 x i8] c"\015%s: Wake %s(%d) from standby\0A\00", align 1
@.str.35 = private unnamed_addr constant [32 x i8] c"\016%s: Wake %s(%d) from standby\0A\00", align 1
@.str.36 = private unnamed_addr constant [32 x i8] c"\017%s: Wake %s(%d) from standby\0A\00", align 1
@.str.37 = private unnamed_addr constant [26 x i8] c"\013%s: Wrong demodulator!\0A\00", align 1
@.str.38 = private unnamed_addr constant [26 x i8] c"\015%s: Wrong demodulator!\0A\00", align 1
@.str.39 = private unnamed_addr constant [26 x i8] c"\016%s: Wrong demodulator!\0A\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"\017%s: Wrong demodulator!\0A\00", align 1
@__func__.stv090x_ldpc_mode = private unnamed_addr constant [18 x i8] c"stv090x_ldpc_mode\00", align 1
@__func__.stv090x_stop_modcod = private unnamed_addr constant [20 x i8] c"stv090x_stop_modcod\00", align 1
@__func__.stv090x_activate_modcod_single = private unnamed_addr constant [31 x i8] c"stv090x_activate_modcod_single\00", align 1
@.str.41 = private unnamed_addr constant [43 x i8] c"\013%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@__func__.stv090x_read_reg = private unnamed_addr constant [17 x i8] c"stv090x_read_reg\00", align 1
@.str.42 = private unnamed_addr constant [43 x i8] c"\015%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@.str.43 = private unnamed_addr constant [43 x i8] c"\016%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@.str.44 = private unnamed_addr constant [43 x i8] c"\017%s: Read error, Reg=[0x%02x], Status=%d\0A\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"\013%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@.str.46 = private unnamed_addr constant [31 x i8] c"\015%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@.str.47 = private unnamed_addr constant [31 x i8] c"\016%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@.str.48 = private unnamed_addr constant [31 x i8] c"\017%s: Reg=[0x%02x], data=%02x\0A\00", align 1
@__func__.stv0900_set_tspath = private unnamed_addr constant [19 x i8] c"stv0900_set_tspath\00", align 1
@__func__.stv0903_set_tspath = private unnamed_addr constant [19 x i8] c"stv0903_set_tspath\00", align 1
@.str.49 = private unnamed_addr constant [27 x i8] c"\013%s: Set %s(%d) to sleep\0A\00", align 1
@__func__.stv090x_sleep = private unnamed_addr constant [14 x i8] c"stv090x_sleep\00", align 1
@.str.50 = private unnamed_addr constant [27 x i8] c"\015%s: Set %s(%d) to sleep\0A\00", align 1
@.str.51 = private unnamed_addr constant [27 x i8] c"\016%s: Set %s(%d) to sleep\0A\00", align 1
@.str.52 = private unnamed_addr constant [27 x i8] c"\017%s: Set %s(%d) to sleep\0A\00", align 1
@.str.53 = private unnamed_addr constant [39 x i8] c"\013%s: Status: Unlocked (Searching ..)\0A\00", align 1
@__func__.stv090x_read_status = private unnamed_addr constant [20 x i8] c"stv090x_read_status\00", align 1
@.str.54 = private unnamed_addr constant [39 x i8] c"\015%s: Status: Unlocked (Searching ..)\0A\00", align 1
@.str.55 = private unnamed_addr constant [39 x i8] c"\016%s: Status: Unlocked (Searching ..)\0A\00", align 1
@.str.56 = private unnamed_addr constant [39 x i8] c"\017%s: Status: Unlocked (Searching ..)\0A\00", align 1
@.str.57 = private unnamed_addr constant [31 x i8] c"\013%s: Delivery system: DVB-S2\0A\00", align 1
@.str.58 = private unnamed_addr constant [31 x i8] c"\015%s: Delivery system: DVB-S2\0A\00", align 1
@.str.59 = private unnamed_addr constant [31 x i8] c"\016%s: Delivery system: DVB-S2\0A\00", align 1
@.str.60 = private unnamed_addr constant [31 x i8] c"\017%s: Delivery system: DVB-S2\0A\00", align 1
@.str.61 = private unnamed_addr constant [30 x i8] c"\013%s: Delivery system: DVB-S\0A\00", align 1
@.str.62 = private unnamed_addr constant [30 x i8] c"\015%s: Delivery system: DVB-S\0A\00", align 1
@.str.63 = private unnamed_addr constant [30 x i8] c"\016%s: Delivery system: DVB-S\0A\00", align 1
@.str.64 = private unnamed_addr constant [30 x i8] c"\017%s: Delivery system: DVB-S\0A\00", align 1
@__func__.stv090x_read_per = private unnamed_addr constant [17 x i8] c"stv090x_read_per\00", align 1
@stv090x_rf_tab = internal constant [14 x %struct.stv090x_tab] [%struct.stv090x_tab { i32 -5, i32 51873 }, %struct.stv090x_tab { i32 -10, i32 49705 }, %struct.stv090x_tab { i32 -15, i32 47880 }, %struct.stv090x_tab { i32 -20, i32 46268 }, %struct.stv090x_tab { i32 -25, i32 44378 }, %struct.stv090x_tab { i32 -30, i32 41624 }, %struct.stv090x_tab { i32 -35, i32 39080 }, %struct.stv090x_tab { i32 -40, i32 33673 }, %struct.stv090x_tab { i32 -45, i32 22974 }, %struct.stv090x_tab { i32 -50, i32 14868 }, %struct.stv090x_tab { i32 -55, i32 11537 }, %struct.stv090x_tab { i32 -60, i32 8461 }, %struct.stv090x_tab { i32 -65, i32 41295 }, %struct.stv090x_tab { i32 -70, i32 1962 }], align 16, !dbg !4586
@stv090x_s2cn_tab = internal constant [55 x %struct.stv090x_tab] [%struct.stv090x_tab { i32 -30, i32 13348 }, %struct.stv090x_tab { i32 -20, i32 12640 }, %struct.stv090x_tab { i32 -10, i32 11883 }, %struct.stv090x_tab { i32 0, i32 11101 }, %struct.stv090x_tab { i32 5, i32 10718 }, %struct.stv090x_tab { i32 10, i32 10339 }, %struct.stv090x_tab { i32 15, i32 9947 }, %struct.stv090x_tab { i32 20, i32 9552 }, %struct.stv090x_tab { i32 25, i32 9183 }, %struct.stv090x_tab { i32 30, i32 8799 }, %struct.stv090x_tab { i32 35, i32 8422 }, %struct.stv090x_tab { i32 40, i32 8062 }, %struct.stv090x_tab { i32 45, i32 7707 }, %struct.stv090x_tab { i32 50, i32 7353 }, %struct.stv090x_tab { i32 55, i32 7025 }, %struct.stv090x_tab { i32 60, i32 6684 }, %struct.stv090x_tab { i32 65, i32 6331 }, %struct.stv090x_tab { i32 70, i32 6036 }, %struct.stv090x_tab { i32 75, i32 5727 }, %struct.stv090x_tab { i32 80, i32 5437 }, %struct.stv090x_tab { i32 85, i32 5164 }, %struct.stv090x_tab { i32 90, i32 4902 }, %struct.stv090x_tab { i32 95, i32 4653 }, %struct.stv090x_tab { i32 100, i32 4408 }, %struct.stv090x_tab { i32 105, i32 4187 }, %struct.stv090x_tab { i32 110, i32 3961 }, %struct.stv090x_tab { i32 115, i32 3751 }, %struct.stv090x_tab { i32 120, i32 3558 }, %struct.stv090x_tab { i32 125, i32 3368 }, %struct.stv090x_tab { i32 130, i32 3191 }, %struct.stv090x_tab { i32 135, i32 3017 }, %struct.stv090x_tab { i32 140, i32 2862 }, %struct.stv090x_tab { i32 145, i32 2710 }, %struct.stv090x_tab { i32 150, i32 2565 }, %struct.stv090x_tab { i32 160, i32 2300 }, %struct.stv090x_tab { i32 170, i32 2058 }, %struct.stv090x_tab { i32 180, i32 1849 }, %struct.stv090x_tab { i32 190, i32 1663 }, %struct.stv090x_tab { i32 200, i32 1495 }, %struct.stv090x_tab { i32 210, i32 1349 }, %struct.stv090x_tab { i32 220, i32 1222 }, %struct.stv090x_tab { i32 230, i32 1110 }, %struct.stv090x_tab { i32 240, i32 1011 }, %struct.stv090x_tab { i32 250, i32 925 }, %struct.stv090x_tab { i32 260, i32 853 }, %struct.stv090x_tab { i32 270, i32 789 }, %struct.stv090x_tab { i32 280, i32 734 }, %struct.stv090x_tab { i32 290, i32 690 }, %struct.stv090x_tab { i32 300, i32 650 }, %struct.stv090x_tab { i32 310, i32 619 }, %struct.stv090x_tab { i32 320, i32 593 }, %struct.stv090x_tab { i32 330, i32 571 }, %struct.stv090x_tab { i32 400, i32 498 }, %struct.stv090x_tab { i32 450, i32 484 }, %struct.stv090x_tab { i32 500, i32 481 }], align 16, !dbg !4596
@stv090x_s1cn_tab = internal constant [52 x %struct.stv090x_tab] [%struct.stv090x_tab { i32 0, i32 8917 }, %struct.stv090x_tab { i32 5, i32 8801 }, %struct.stv090x_tab { i32 10, i32 8667 }, %struct.stv090x_tab { i32 15, i32 8522 }, %struct.stv090x_tab { i32 20, i32 8355 }, %struct.stv090x_tab { i32 25, i32 8175 }, %struct.stv090x_tab { i32 30, i32 7979 }, %struct.stv090x_tab { i32 35, i32 7763 }, %struct.stv090x_tab { i32 40, i32 7530 }, %struct.stv090x_tab { i32 45, i32 7282 }, %struct.stv090x_tab { i32 50, i32 7026 }, %struct.stv090x_tab { i32 55, i32 6781 }, %struct.stv090x_tab { i32 60, i32 6514 }, %struct.stv090x_tab { i32 65, i32 6241 }, %struct.stv090x_tab { i32 70, i32 5965 }, %struct.stv090x_tab { i32 75, i32 5690 }, %struct.stv090x_tab { i32 80, i32 5424 }, %struct.stv090x_tab { i32 85, i32 5161 }, %struct.stv090x_tab { i32 90, i32 4902 }, %struct.stv090x_tab { i32 95, i32 4654 }, %struct.stv090x_tab { i32 100, i32 4417 }, %struct.stv090x_tab { i32 105, i32 4186 }, %struct.stv090x_tab { i32 110, i32 3968 }, %struct.stv090x_tab { i32 115, i32 3757 }, %struct.stv090x_tab { i32 120, i32 3558 }, %struct.stv090x_tab { i32 125, i32 3366 }, %struct.stv090x_tab { i32 130, i32 3185 }, %struct.stv090x_tab { i32 135, i32 3012 }, %struct.stv090x_tab { i32 140, i32 2850 }, %struct.stv090x_tab { i32 145, i32 2698 }, %struct.stv090x_tab { i32 150, i32 2550 }, %struct.stv090x_tab { i32 160, i32 2283 }, %struct.stv090x_tab { i32 170, i32 2042 }, %struct.stv090x_tab { i32 180, i32 1827 }, %struct.stv090x_tab { i32 190, i32 1636 }, %struct.stv090x_tab { i32 200, i32 1466 }, %struct.stv090x_tab { i32 210, i32 1315 }, %struct.stv090x_tab { i32 220, i32 1181 }, %struct.stv090x_tab { i32 230, i32 1064 }, %struct.stv090x_tab { i32 240, i32 960 }, %struct.stv090x_tab { i32 250, i32 869 }, %struct.stv090x_tab { i32 260, i32 792 }, %struct.stv090x_tab { i32 270, i32 724 }, %struct.stv090x_tab { i32 280, i32 665 }, %struct.stv090x_tab { i32 290, i32 616 }, %struct.stv090x_tab { i32 300, i32 573 }, %struct.stv090x_tab { i32 310, i32 537 }, %struct.stv090x_tab { i32 320, i32 507 }, %struct.stv090x_tab { i32 330, i32 483 }, %struct.stv090x_tab { i32 400, i32 398 }, %struct.stv090x_tab { i32 450, i32 381 }, %struct.stv090x_tab { i32 500, i32 377 }], align 16, !dbg !4601
@__func__.stv090x_send_diseqc_msg = private unnamed_addr constant [24 x i8] c"stv090x_send_diseqc_msg\00", align 1
@__func__.stv090x_send_diseqc_burst = private unnamed_addr constant [26 x i8] c"stv090x_send_diseqc_burst\00", align 1
@__func__.stv090x_set_tone = private unnamed_addr constant [17 x i8] c"stv090x_set_tone\00", align 1
@.str.65 = private unnamed_addr constant [28 x i8] c"\013%s: Search range: 10 MHz\0A\00", align 1
@__func__.stv090x_search = private unnamed_addr constant [15 x i8] c"stv090x_search\00", align 1
@.str.66 = private unnamed_addr constant [28 x i8] c"\015%s: Search range: 10 MHz\0A\00", align 1
@.str.67 = private unnamed_addr constant [28 x i8] c"\016%s: Search range: 10 MHz\0A\00", align 1
@.str.68 = private unnamed_addr constant [28 x i8] c"\017%s: Search range: 10 MHz\0A\00", align 1
@.str.69 = private unnamed_addr constant [27 x i8] c"\013%s: Search range: 5 MHz\0A\00", align 1
@.str.70 = private unnamed_addr constant [27 x i8] c"\015%s: Search range: 5 MHz\0A\00", align 1
@.str.71 = private unnamed_addr constant [27 x i8] c"\016%s: Search range: 5 MHz\0A\00", align 1
@.str.72 = private unnamed_addr constant [27 x i8] c"\017%s: Search range: 5 MHz\0A\00", align 1
@.str.73 = private unnamed_addr constant [23 x i8] c"\013%s: Search success!\0A\00", align 1
@.str.74 = private unnamed_addr constant [23 x i8] c"\015%s: Search success!\0A\00", align 1
@.str.75 = private unnamed_addr constant [23 x i8] c"\016%s: Search success!\0A\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"\017%s: Search success!\0A\00", align 1
@.str.77 = private unnamed_addr constant [22 x i8] c"\013%s: Search failed!\0A\00", align 1
@.str.78 = private unnamed_addr constant [22 x i8] c"\015%s: Search failed!\0A\00", align 1
@.str.79 = private unnamed_addr constant [22 x i8] c"\016%s: Search failed!\0A\00", align 1
@.str.80 = private unnamed_addr constant [22 x i8] c"\017%s: Search failed!\0A\00", align 1
@.str.81 = private unnamed_addr constant [28 x i8] c"\013%s: Set Gold PLS code %d\0A\00", align 1
@__func__.stv090x_set_pls = private unnamed_addr constant [16 x i8] c"stv090x_set_pls\00", align 1
@.str.82 = private unnamed_addr constant [28 x i8] c"\015%s: Set Gold PLS code %d\0A\00", align 1
@.str.83 = private unnamed_addr constant [28 x i8] c"\016%s: Set Gold PLS code %d\0A\00", align 1
@.str.84 = private unnamed_addr constant [28 x i8] c"\017%s: Set Gold PLS code %d\0A\00", align 1
@.str.85 = private unnamed_addr constant [29 x i8] c"\013%s: Disable MIS filtering\0A\00", align 1
@__func__.stv090x_set_mis = private unnamed_addr constant [16 x i8] c"stv090x_set_mis\00", align 1
@.str.86 = private unnamed_addr constant [29 x i8] c"\015%s: Disable MIS filtering\0A\00", align 1
@.str.87 = private unnamed_addr constant [29 x i8] c"\016%s: Disable MIS filtering\0A\00", align 1
@.str.88 = private unnamed_addr constant [29 x i8] c"\017%s: Disable MIS filtering\0A\00", align 1
@.str.89 = private unnamed_addr constant [33 x i8] c"\013%s: Enable MIS filtering - %d\0A\00", align 1
@.str.90 = private unnamed_addr constant [33 x i8] c"\015%s: Enable MIS filtering - %d\0A\00", align 1
@.str.91 = private unnamed_addr constant [33 x i8] c"\016%s: Enable MIS filtering - %d\0A\00", align 1
@.str.92 = private unnamed_addr constant [33 x i8] c"\017%s: Enable MIS filtering - %d\0A\00", align 1
@.str.93 = private unnamed_addr constant [26 x i8] c"\013%s: Tuner phase locked\0A\00", align 1
@__func__.stv090x_algo = private unnamed_addr constant [13 x i8] c"stv090x_algo\00", align 1
@.str.94 = private unnamed_addr constant [26 x i8] c"\015%s: Tuner phase locked\0A\00", align 1
@.str.95 = private unnamed_addr constant [26 x i8] c"\016%s: Tuner phase locked\0A\00", align 1
@.str.96 = private unnamed_addr constant [26 x i8] c"\017%s: Tuner phase locked\0A\00", align 1
@.str.97 = private unnamed_addr constant [22 x i8] c"\013%s: Tuner unlocked\0A\00", align 1
@.str.98 = private unnamed_addr constant [22 x i8] c"\015%s: Tuner unlocked\0A\00", align 1
@.str.99 = private unnamed_addr constant [22 x i8] c"\016%s: Tuner unlocked\0A\00", align 1
@.str.100 = private unnamed_addr constant [22 x i8] c"\017%s: Tuner unlocked\0A\00", align 1
@.str.101 = private unnamed_addr constant [34 x i8] c"\013%s: No Signal: POWER_IQ=0x%02x\0A\00", align 1
@.str.102 = private unnamed_addr constant [34 x i8] c"\015%s: No Signal: POWER_IQ=0x%02x\0A\00", align 1
@.str.103 = private unnamed_addr constant [34 x i8] c"\016%s: No Signal: POWER_IQ=0x%02x\0A\00", align 1
@.str.104 = private unnamed_addr constant [34 x i8] c"\017%s: No Signal: POWER_IQ=0x%02x\0A\00", align 1
@.str.105 = private unnamed_addr constant [20 x i8] c"\013%s: Blind Search\0A\00", align 1
@__func__.stv090x_get_lock_tmg = private unnamed_addr constant [21 x i8] c"stv090x_get_lock_tmg\00", align 1
@.str.106 = private unnamed_addr constant [20 x i8] c"\015%s: Blind Search\0A\00", align 1
@.str.107 = private unnamed_addr constant [20 x i8] c"\016%s: Blind Search\0A\00", align 1
@.str.108 = private unnamed_addr constant [20 x i8] c"\017%s: Blind Search\0A\00", align 1
@.str.109 = private unnamed_addr constant [21 x i8] c"\013%s: Normal Search\0A\00", align 1
@.str.110 = private unnamed_addr constant [21 x i8] c"\015%s: Normal Search\0A\00", align 1
@.str.111 = private unnamed_addr constant [21 x i8] c"\016%s: Normal Search\0A\00", align 1
@.str.112 = private unnamed_addr constant [21 x i8] c"\017%s: Normal Search\0A\00", align 1
@__func__.stv090x_set_srate = private unnamed_addr constant [18 x i8] c"stv090x_set_srate\00", align 1
@__func__.stv090x_set_max_srate = private unnamed_addr constant [22 x i8] c"stv090x_set_max_srate\00", align 1
@__func__.stv090x_set_min_srate = private unnamed_addr constant [22 x i8] c"stv090x_set_min_srate\00", align 1
@__func__.stv090x_delivery_search = private unnamed_addr constant [24 x i8] c"stv090x_delivery_search\00", align 1
@__func__.stv090x_vitclk_ctl = private unnamed_addr constant [19 x i8] c"stv090x_vitclk_ctl\00", align 1
@__func__.stv090x_dvbs_track_crl = private unnamed_addr constant [23 x i8] c"stv090x_dvbs_track_crl\00", align 1
@__func__.stv090x_set_vit_thacq = private unnamed_addr constant [22 x i8] c"stv090x_set_vit_thacq\00", align 1
@__func__.stv090x_set_viterbi = private unnamed_addr constant [20 x i8] c"stv090x_set_viterbi\00", align 1
@__func__.stv090x_activate_modcod = private unnamed_addr constant [24 x i8] c"stv090x_activate_modcod\00", align 1
@__func__.stv090x_set_vit_thtracq = private unnamed_addr constant [24 x i8] c"stv090x_set_vit_thtracq\00", align 1
@__func__.stv090x_start_search = private unnamed_addr constant [21 x i8] c"stv090x_start_search\00", align 1
@__func__.stv090x_blind_search = private unnamed_addr constant [21 x i8] c"stv090x_blind_search\00", align 1
@__func__.stv090x_get_agc2_min_level = private unnamed_addr constant [27 x i8] c"stv090x_get_agc2_min_level\00", align 1
@__func__.stv090x_srate_srch_coarse = private unnamed_addr constant [26 x i8] c"stv090x_srate_srch_coarse\00", align 1
@__func__.stv090x_srate_srch_fine = private unnamed_addr constant [24 x i8] c"stv090x_srate_srch_fine\00", align 1
@__func__.stv090x_get_coldlock = private unnamed_addr constant [21 x i8] c"stv090x_get_coldlock\00", align 1
@.str.113 = private unnamed_addr constant [32 x i8] c"\013%s: Demodulator searching ..\0A\00", align 1
@__func__.stv090x_get_dmdlock = private unnamed_addr constant [20 x i8] c"stv090x_get_dmdlock\00", align 1
@.str.114 = private unnamed_addr constant [32 x i8] c"\015%s: Demodulator searching ..\0A\00", align 1
@.str.115 = private unnamed_addr constant [32 x i8] c"\016%s: Demodulator searching ..\0A\00", align 1
@.str.116 = private unnamed_addr constant [32 x i8] c"\017%s: Demodulator searching ..\0A\00", align 1
@.str.117 = private unnamed_addr constant [33 x i8] c"\013%s: Demodulator acquired LOCK\0A\00", align 1
@.str.118 = private unnamed_addr constant [33 x i8] c"\015%s: Demodulator acquired LOCK\0A\00", align 1
@.str.119 = private unnamed_addr constant [33 x i8] c"\016%s: Demodulator acquired LOCK\0A\00", align 1
@.str.120 = private unnamed_addr constant [33 x i8] c"\017%s: Demodulator acquired LOCK\0A\00", align 1
@__func__.stv090x_chk_tmg = private unnamed_addr constant [16 x i8] c"stv090x_chk_tmg\00", align 1
@__func__.stv090x_sw_algo = private unnamed_addr constant [16 x i8] c"stv090x_sw_algo\00", align 1
@__func__.stv090x_search_car_loop = private unnamed_addr constant [24 x i8] c"stv090x_search_car_loop\00", align 1
@__func__.stv090x_get_sig_params = private unnamed_addr constant [23 x i8] c"stv090x_get_sig_params\00", align 1
@__func__.stv090x_optimize_track = private unnamed_addr constant [23 x i8] c"stv090x_optimize_track\00", align 1
@stv090x_s2_crl_cut20 = internal global [14 x %struct.stv090x_long_frame_crloop] [%struct.stv090x_long_frame_crloop { i32 4, i8 31, i8 63, i8 30, i8 63, i8 61, i8 31, i8 61, i8 62, i8 61, i8 30 }, %struct.stv090x_long_frame_crloop { i32 5, i8 47, i8 63, i8 46, i8 47, i8 61, i8 15, i8 14, i8 46, i8 61, i8 14 }, %struct.stv090x_long_frame_crloop { i32 6, i8 47, i8 63, i8 46, i8 47, i8 14, i8 15, i8 14, i8 30, i8 61, i8 61 }, %struct.stv090x_long_frame_crloop { i32 7, i8 63, i8 63, i8 62, i8 31, i8 14, i8 62, i8 14, i8 30, i8 61, i8 61 }, %struct.stv090x_long_frame_crloop { i32 8, i8 63, i8 63, i8 62, i8 31, i8 14, i8 62, i8 14, i8 30, i8 61, i8 61 }, %struct.stv090x_long_frame_crloop { i32 9, i8 63, i8 63, i8 62, i8 31, i8 14, i8 62, i8 14, i8 30, i8 61, i8 61 }, %struct.stv090x_long_frame_crloop { i32 10, i8 63, i8 63, i8 62, i8 31, i8 30, i8 62, i8 14, i8 30, i8 61, i8 61 }, %struct.stv090x_long_frame_crloop { i32 11, i8 63, i8 63, i8 62, i8 31, i8 30, i8 62, i8 14, i8 30, i8 61, i8 61 }, %struct.stv090x_long_frame_crloop { i32 12, i8 60, i8 62, i8 28, i8 46, i8 12, i8 30, i8 43, i8 45, i8 27, i8 29 }, %struct.stv090x_long_frame_crloop { i32 13, i8 29, i8 62, i8 60, i8 46, i8 44, i8 30, i8 12, i8 45, i8 43, i8 29 }, %struct.stv090x_long_frame_crloop { i32 14, i8 14, i8 62, i8 61, i8 46, i8 13, i8 30, i8 44, i8 45, i8 12, i8 29 }, %struct.stv090x_long_frame_crloop { i32 15, i8 46, i8 62, i8 30, i8 46, i8 45, i8 30, i8 60, i8 45, i8 44, i8 29 }, %struct.stv090x_long_frame_crloop { i32 16, i8 62, i8 62, i8 30, i8 46, i8 61, i8 30, i8 13, i8 45, i8 60, i8 29 }, %struct.stv090x_long_frame_crloop { i32 17, i8 62, i8 62, i8 30, i8 46, i8 61, i8 30, i8 29, i8 45, i8 13, i8 29 }], align 16, !dbg !4606
@stv090x_s2_lowqpsk_crl_cut20 = internal global [3 x %struct.stv090x_long_frame_crloop] [%struct.stv090x_long_frame_crloop { i32 1, i8 15, i8 63, i8 14, i8 63, i8 45, i8 47, i8 45, i8 31, i8 61, i8 62 }, %struct.stv090x_long_frame_crloop { i32 2, i8 15, i8 63, i8 14, i8 63, i8 45, i8 47, i8 61, i8 15, i8 61, i8 46 }, %struct.stv090x_long_frame_crloop { i32 3, i8 31, i8 63, i8 30, i8 63, i8 61, i8 31, i8 61, i8 62, i8 61, i8 46 }], align 16, !dbg !4622
@stv090x_s2_apsk_crl_cut20 = internal global [11 x %struct.stv090x_long_frame_crloop] [%struct.stv090x_long_frame_crloop { i32 18, i8 12, i8 12, i8 12, i8 12, i8 29, i8 12, i8 60, i8 12, i8 44, i8 12 }, %struct.stv090x_long_frame_crloop { i32 19, i8 12, i8 12, i8 12, i8 12, i8 14, i8 12, i8 45, i8 12, i8 29, i8 12 }, %struct.stv090x_long_frame_crloop { i32 20, i8 12, i8 12, i8 12, i8 12, i8 30, i8 12, i8 61, i8 12, i8 45, i8 12 }, %struct.stv090x_long_frame_crloop { i32 21, i8 12, i8 12, i8 12, i8 12, i8 30, i8 12, i8 61, i8 12, i8 45, i8 12 }, %struct.stv090x_long_frame_crloop { i32 22, i8 12, i8 12, i8 12, i8 12, i8 46, i8 12, i8 14, i8 12, i8 61, i8 12 }, %struct.stv090x_long_frame_crloop { i32 23, i8 12, i8 12, i8 12, i8 12, i8 46, i8 12, i8 14, i8 12, i8 61, i8 12 }, %struct.stv090x_long_frame_crloop { i32 24, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12 }, %struct.stv090x_long_frame_crloop { i32 25, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12 }, %struct.stv090x_long_frame_crloop { i32 26, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12 }, %struct.stv090x_long_frame_crloop { i32 27, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12 }, %struct.stv090x_long_frame_crloop { i32 28, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12, i8 12 }], align 16, !dbg !4625
@stv090x_s2_crl_cut30 = internal global [14 x %struct.stv090x_long_frame_crloop] [%struct.stv090x_long_frame_crloop { i32 4, i8 60, i8 44, i8 12, i8 44, i8 27, i8 44, i8 27, i8 28, i8 11, i8 59 }, %struct.stv090x_long_frame_crloop { i32 5, i8 13, i8 13, i8 12, i8 13, i8 27, i8 60, i8 27, i8 28, i8 11, i8 59 }, %struct.stv090x_long_frame_crloop { i32 6, i8 29, i8 13, i8 12, i8 29, i8 43, i8 60, i8 27, i8 28, i8 11, i8 59 }, %struct.stv090x_long_frame_crloop { i32 7, i8 29, i8 29, i8 12, i8 29, i8 43, i8 60, i8 27, i8 28, i8 11, i8 59 }, %struct.stv090x_long_frame_crloop { i32 8, i8 45, i8 29, i8 28, i8 29, i8 43, i8 60, i8 43, i8 12, i8 27, i8 59 }, %struct.stv090x_long_frame_crloop { i32 9, i8 45, i8 29, i8 28, i8 29, i8 43, i8 60, i8 43, i8 12, i8 27, i8 59 }, %struct.stv090x_long_frame_crloop { i32 10, i8 61, i8 45, i8 28, i8 29, i8 59, i8 60, i8 43, i8 12, i8 27, i8 59 }, %struct.stv090x_long_frame_crloop { i32 11, i8 61, i8 45, i8 28, i8 29, i8 59, i8 60, i8 43, i8 12, i8 27, i8 59 }, %struct.stv090x_long_frame_crloop { i32 12, i8 57, i8 41, i8 57, i8 25, i8 25, i8 25, i8 25, i8 25, i8 9, i8 25 }, %struct.stv090x_long_frame_crloop { i32 13, i8 42, i8 57, i8 26, i8 10, i8 57, i8 10, i8 41, i8 57, i8 41, i8 10 }, %struct.stv090x_long_frame_crloop { i32 14, i8 43, i8 58, i8 27, i8 27, i8 58, i8 27, i8 26, i8 11, i8 26, i8 58 }, %struct.stv090x_long_frame_crloop { i32 15, i8 12, i8 27, i8 59, i8 59, i8 27, i8 59, i8 58, i8 59, i8 58, i8 27 }, %struct.stv090x_long_frame_crloop { i32 16, i8 13, i8 60, i8 44, i8 44, i8 43, i8 12, i8 11, i8 59, i8 11, i8 27 }, %struct.stv090x_long_frame_crloop { i32 17, i8 13, i8 13, i8 44, i8 60, i8 59, i8 28, i8 11, i8 59, i8 11, i8 27 }], align 16, !dbg !4630
@stv090x_s2_lowqpsk_crl_cut30 = internal global [3 x %struct.stv090x_long_frame_crloop] [%struct.stv090x_long_frame_crloop { i32 1, i8 12, i8 60, i8 11, i8 60, i8 42, i8 44, i8 42, i8 28, i8 58, i8 59 }, %struct.stv090x_long_frame_crloop { i32 2, i8 12, i8 60, i8 11, i8 60, i8 42, i8 44, i8 58, i8 12, i8 58, i8 43 }, %struct.stv090x_long_frame_crloop { i32 3, i8 28, i8 60, i8 27, i8 60, i8 58, i8 28, i8 58, i8 59, i8 58, i8 43 }], align 16, !dbg !4632
@stv090x_s2_apsk_crl_cut30 = internal global [11 x %struct.stv090x_long_frame_crloop] [%struct.stv090x_long_frame_crloop { i32 18, i8 10, i8 10, i8 10, i8 10, i8 26, i8 10, i8 58, i8 10, i8 42, i8 10 }, %struct.stv090x_long_frame_crloop { i32 19, i8 10, i8 10, i8 10, i8 10, i8 11, i8 10, i8 59, i8 10, i8 27, i8 10 }, %struct.stv090x_long_frame_crloop { i32 20, i8 10, i8 10, i8 10, i8 10, i8 27, i8 10, i8 59, i8 10, i8 43, i8 10 }, %struct.stv090x_long_frame_crloop { i32 21, i8 10, i8 10, i8 10, i8 10, i8 27, i8 10, i8 59, i8 10, i8 43, i8 10 }, %struct.stv090x_long_frame_crloop { i32 22, i8 10, i8 10, i8 10, i8 10, i8 43, i8 10, i8 12, i8 10, i8 59, i8 10 }, %struct.stv090x_long_frame_crloop { i32 23, i8 10, i8 10, i8 10, i8 10, i8 43, i8 10, i8 12, i8 10, i8 59, i8 10 }, %struct.stv090x_long_frame_crloop { i32 24, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10 }, %struct.stv090x_long_frame_crloop { i32 25, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10 }, %struct.stv090x_long_frame_crloop { i32 26, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10 }, %struct.stv090x_long_frame_crloop { i32 27, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10 }, %struct.stv090x_long_frame_crloop { i32 28, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10, i8 10 }], align 16, !dbg !4634
@stv090x_s2_short_crl_cut30 = internal global [4 x %struct.stv090x_short_frame_crloop] [%struct.stv090x_short_frame_crloop { i32 0, i8 44, i8 43, i8 11, i8 11, i8 58 }, %struct.stv090x_short_frame_crloop { i32 1, i8 59, i8 11, i8 42, i8 10, i8 57 }, %struct.stv090x_short_frame_crloop { i32 2, i8 27, i8 27, i8 27, i8 58, i8 42 }, %struct.stv090x_short_frame_crloop { i32 3, i8 27, i8 27, i8 27, i8 58, i8 42 }], align 16, !dbg !4636
@stv090x_s2_short_crl_cut20 = internal global [4 x %struct.stv090x_short_frame_crloop] [%struct.stv090x_short_frame_crloop { i32 0, i8 47, i8 46, i8 14, i8 14, i8 61 }, %struct.stv090x_short_frame_crloop { i32 1, i8 62, i8 14, i8 45, i8 13, i8 60 }, %struct.stv090x_short_frame_crloop { i32 2, i8 30, i8 30, i8 30, i8 61, i8 45 }, %struct.stv090x_short_frame_crloop { i32 3, i8 30, i8 30, i8 30, i8 61, i8 45 }], align 16, !dbg !4647
@__func__.stv090x_set_s2rolloff = private unnamed_addr constant [22 x i8] c"stv090x_set_s2rolloff\00", align 1
@.str.121 = private unnamed_addr constant [17 x i8] c"\013%s: No Signal\0A\00", align 1
@__func__.stv090x_chk_signal = private unnamed_addr constant [19 x i8] c"stv090x_chk_signal\00", align 1
@.str.122 = private unnamed_addr constant [17 x i8] c"\015%s: No Signal\0A\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"\016%s: No Signal\0A\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"\017%s: No Signal\0A\00", align 1
@.str.125 = private unnamed_addr constant [20 x i8] c"\013%s: Found Signal\0A\00", align 1
@.str.126 = private unnamed_addr constant [20 x i8] c"\015%s: Found Signal\0A\00", align 1
@.str.127 = private unnamed_addr constant [20 x i8] c"\016%s: Found Signal\0A\00", align 1
@.str.128 = private unnamed_addr constant [20 x i8] c"\017%s: Found Signal\0A\00", align 1
@.str.129 = private unnamed_addr constant [33 x i8] c"\013%s: Found Internal Structure!\0A\00", align 1
@__func__.stv090x_setup_compound = private unnamed_addr constant [23 x i8] c"stv090x_setup_compound\00", align 1
@.str.130 = private unnamed_addr constant [33 x i8] c"\015%s: Found Internal Structure!\0A\00", align 1
@.str.131 = private unnamed_addr constant [33 x i8] c"\016%s: Found Internal Structure!\0A\00", align 1
@.str.132 = private unnamed_addr constant [33 x i8] c"\017%s: Found Internal Structure!\0A\00", align 1
@.str.133 = private unnamed_addr constant [38 x i8] c"\013%s: Create New Internal Structure!\0A\00", align 1
@.str.134 = private unnamed_addr constant [38 x i8] c"\015%s: Create New Internal Structure!\0A\00", align 1
@.str.135 = private unnamed_addr constant [38 x i8] c"\016%s: Create New Internal Structure!\0A\00", align 1
@.str.136 = private unnamed_addr constant [38 x i8] c"\017%s: Create New Internal Structure!\0A\00", align 1
@stv090x_setup_compound.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4649
@.str.137 = private unnamed_addr constant [29 x i8] c"&state->internal->demod_lock\00", align 1
@stv090x_setup_compound.__key.138 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4739
@.str.139 = private unnamed_addr constant [29 x i8] c"&state->internal->tuner_lock\00", align 1
@.str.140 = private unnamed_addr constant [31 x i8] c"\013%s: Error setting up device\0A\00", align 1
@.str.141 = private unnamed_addr constant [31 x i8] c"\015%s: Error setting up device\0A\00", align 1
@.str.142 = private unnamed_addr constant [31 x i8] c"\016%s: Error setting up device\0A\00", align 1
@.str.143 = private unnamed_addr constant [31 x i8] c"\017%s: Error setting up device\0A\00", align 1
@.str.144 = private unnamed_addr constant [45 x i8] c"\013%s: Probing %s demodulator(%d) Cut=0x%02x\0A\00", align 1
@.str.145 = private unnamed_addr constant [45 x i8] c"\015%s: Probing %s demodulator(%d) Cut=0x%02x\0A\00", align 1
@.str.146 = private unnamed_addr constant [45 x i8] c"\016%s: Probing %s demodulator(%d) Cut=0x%02x\0A\00", align 1
@.str.147 = private unnamed_addr constant [45 x i8] c"\017%s: Probing %s demodulator(%d) Cut=0x%02x\0A\00", align 1
@.str.148 = private unnamed_addr constant [28 x i8] c"\013%s: Initializing STV0900\0A\00", align 1
@__func__.stv090x_setup = private unnamed_addr constant [14 x i8] c"stv090x_setup\00", align 1
@.str.149 = private unnamed_addr constant [28 x i8] c"\015%s: Initializing STV0900\0A\00", align 1
@.str.150 = private unnamed_addr constant [28 x i8] c"\016%s: Initializing STV0900\0A\00", align 1
@.str.151 = private unnamed_addr constant [28 x i8] c"\017%s: Initializing STV0900\0A\00", align 1
@stv0900_initval = internal global [161 x %struct.stv090x_reg] [%struct.stv090x_reg { i16 -3812, i8 0 }, %struct.stv090x_reg { i16 -3811, i8 -1 }, %struct.stv090x_reg { i16 -3758, i8 17 }, %struct.stv090x_reg { i16 -3754, i8 19 }, %struct.stv090x_reg { i16 -2448, i8 20 }, %struct.stv090x_reg { i16 -3615, i8 33 }, %struct.stv090x_reg { i16 -3613, i8 33 }, %struct.stv090x_reg { i16 -3696, i8 34 }, %struct.stv090x_reg { i16 -3687, i8 -64 }, %struct.stv090x_reg { i16 -3686, i8 -64 }, %struct.stv090x_reg { i16 -3695, i8 0 }, %struct.stv090x_reg { i16 -3564, i8 -7 }, %struct.stv090x_reg { i16 -3568, i8 8 }, %struct.stv090x_reg { i16 -3554, i8 -60 }, %struct.stv090x_reg { i16 -3523, i8 -19 }, %struct.stv090x_reg { i16 -3521, i8 -48 }, %struct.stv090x_reg { i16 -3520, i8 -72 }, %struct.stv090x_reg { i16 -3504, i8 -46 }, %struct.stv090x_reg { i16 -3501, i8 32 }, %struct.stv090x_reg { i16 -2992, i8 -46 }, %struct.stv090x_reg { i16 -3500, i8 0 }, %struct.stv090x_reg { i16 -3168, i8 -120 }, %struct.stv090x_reg { i16 -3166, i8 58 }, %struct.stv090x_reg { i16 -3160, i8 0 }, %struct.stv090x_reg { i16 -3150, i8 16 }, %struct.stv090x_reg { i16 -3176, i8 53 }, %struct.stv090x_reg { i16 -3172, i8 -63 }, %struct.stv090x_reg { i16 -3519, i8 -8 }, %struct.stv090x_reg { i16 -3583, i8 28 }, %struct.stv090x_reg { i16 -3561, i8 32 }, %struct.stv090x_reg { i16 -3552, i8 112 }, %struct.stv090x_reg { i16 -3551, i8 -120 }, %struct.stv090x_reg { i16 -3540, i8 91 }, %struct.stv090x_reg { i16 -3539, i8 56 }, %struct.stv090x_reg { i16 -3528, i8 -28 }, %struct.stv090x_reg { i16 -3527, i8 26 }, %struct.stv090x_reg { i16 -3526, i8 9 }, %struct.stv090x_reg { i16 -3522, i8 8 }, %struct.stv090x_reg { i16 -3496, i8 -63 }, %struct.stv090x_reg { i16 -3499, i8 -16 }, %struct.stv090x_reg { i16 -3498, i8 112 }, %struct.stv090x_reg { i16 -3495, i8 88 }, %struct.stv090x_reg { i16 -3494, i8 1 }, %struct.stv090x_reg { i16 -3440, i8 38 }, %struct.stv090x_reg { i16 -3428, i8 -122 }, %struct.stv090x_reg { i16 -3427, i8 -122 }, %struct.stv090x_reg { i16 -3328, i8 119 }, %struct.stv090x_reg { i16 -3327, i8 -123 }, %struct.stv090x_reg { i16 -3326, i8 119 }, %struct.stv090x_reg { i16 -3212, i8 32 }, %struct.stv090x_reg { i16 -3563, i8 59 }, %struct.stv090x_reg { i16 -3408, i8 -1 }, %struct.stv090x_reg { i16 -3407, i8 -1 }, %struct.stv090x_reg { i16 -3406, i8 -1 }, %struct.stv090x_reg { i16 -3405, i8 -1 }, %struct.stv090x_reg { i16 -3404, i8 -1 }, %struct.stv090x_reg { i16 -3403, i8 -1 }, %struct.stv090x_reg { i16 -3402, i8 -1 }, %struct.stv090x_reg { i16 -3401, i8 -52 }, %struct.stv090x_reg { i16 -3400, i8 -52 }, %struct.stv090x_reg { i16 -3399, i8 -52 }, %struct.stv090x_reg { i16 -3398, i8 -52 }, %struct.stv090x_reg { i16 -3397, i8 -52 }, %struct.stv090x_reg { i16 -3396, i8 -52 }, %struct.stv090x_reg { i16 -3395, i8 -52 }, %struct.stv090x_reg { i16 -3394, i8 -52 }, %struct.stv090x_reg { i16 -3393, i8 -49 }, %struct.stv090x_reg { i16 -3680, i8 34 }, %struct.stv090x_reg { i16 -3671, i8 -64 }, %struct.stv090x_reg { i16 -3670, i8 -64 }, %struct.stv090x_reg { i16 -3679, i8 0 }, %struct.stv090x_reg { i16 -3052, i8 -7 }, %struct.stv090x_reg { i16 -3056, i8 8 }, %struct.stv090x_reg { i16 -3042, i8 -60 }, %struct.stv090x_reg { i16 -3049, i8 32 }, %struct.stv090x_reg { i16 -3011, i8 -19 }, %struct.stv090x_reg { i16 -3009, i8 -48 }, %struct.stv090x_reg { i16 -3008, i8 -72 }, %struct.stv090x_reg { i16 -2992, i8 -46 }, %struct.stv090x_reg { i16 -2989, i8 32 }, %struct.stv090x_reg { i16 -2988, i8 0 }, %struct.stv090x_reg { i16 -2987, i8 -16 }, %struct.stv090x_reg { i16 -2986, i8 112 }, %struct.stv090x_reg { i16 -2700, i8 32 }, %struct.stv090x_reg { i16 -2656, i8 -120 }, %struct.stv090x_reg { i16 -2654, i8 58 }, %struct.stv090x_reg { i16 -2648, i8 0 }, %struct.stv090x_reg { i16 -2638, i8 16 }, %struct.stv090x_reg { i16 -2664, i8 53 }, %struct.stv090x_reg { i16 -2660, i8 -63 }, %struct.stv090x_reg { i16 -3007, i8 -8 }, %struct.stv090x_reg { i16 -3071, i8 28 }, %struct.stv090x_reg { i16 -3040, i8 112 }, %struct.stv090x_reg { i16 -3039, i8 -120 }, %struct.stv090x_reg { i16 -3028, i8 91 }, %struct.stv090x_reg { i16 -3027, i8 56 }, %struct.stv090x_reg { i16 -3016, i8 -28 }, %struct.stv090x_reg { i16 -3015, i8 26 }, %struct.stv090x_reg { i16 -3014, i8 9 }, %struct.stv090x_reg { i16 -3010, i8 8 }, %struct.stv090x_reg { i16 -2984, i8 -63 }, %struct.stv090x_reg { i16 -2983, i8 88 }, %struct.stv090x_reg { i16 -2982, i8 1 }, %struct.stv090x_reg { i16 -2928, i8 38 }, %struct.stv090x_reg { i16 -2916, i8 -122 }, %struct.stv090x_reg { i16 -2915, i8 -122 }, %struct.stv090x_reg { i16 -2816, i8 119 }, %struct.stv090x_reg { i16 -2815, i8 -123 }, %struct.stv090x_reg { i16 -2814, i8 119 }, %struct.stv090x_reg { i16 -3051, i8 59 }, %struct.stv090x_reg { i16 -2896, i8 -1 }, %struct.stv090x_reg { i16 -2895, i8 -1 }, %struct.stv090x_reg { i16 -2894, i8 -1 }, %struct.stv090x_reg { i16 -2893, i8 -1 }, %struct.stv090x_reg { i16 -2892, i8 -1 }, %struct.stv090x_reg { i16 -2891, i8 -1 }, %struct.stv090x_reg { i16 -2890, i8 -1 }, %struct.stv090x_reg { i16 -2889, i8 -52 }, %struct.stv090x_reg { i16 -2888, i8 -52 }, %struct.stv090x_reg { i16 -2887, i8 -52 }, %struct.stv090x_reg { i16 -2886, i8 -52 }, %struct.stv090x_reg { i16 -2885, i8 -52 }, %struct.stv090x_reg { i16 -2884, i8 -52 }, %struct.stv090x_reg { i16 -2883, i8 -52 }, %struct.stv090x_reg { i16 -2882, i8 -52 }, %struct.stv090x_reg { i16 -2881, i8 -49 }, %struct.stv090x_reg { i16 -1402, i8 29 }, %struct.stv090x_reg { i16 -1533, i8 55 }, %struct.stv090x_reg { i16 -1532, i8 41 }, %struct.stv090x_reg { i16 -1531, i8 55 }, %struct.stv090x_reg { i16 -1530, i8 51 }, %struct.stv090x_reg { i16 -1529, i8 49 }, %struct.stv090x_reg { i16 -1528, i8 47 }, %struct.stv090x_reg { i16 -1527, i8 57 }, %struct.stv090x_reg { i16 -1526, i8 58 }, %struct.stv090x_reg { i16 -1525, i8 41 }, %struct.stv090x_reg { i16 -1524, i8 55 }, %struct.stv090x_reg { i16 -1523, i8 51 }, %struct.stv090x_reg { i16 -1522, i8 47 }, %struct.stv090x_reg { i16 -1521, i8 57 }, %struct.stv090x_reg { i16 -1520, i8 58 }, %struct.stv090x_reg { i16 -1473, i8 4 }, %struct.stv090x_reg { i16 -1469, i8 12 }, %struct.stv090x_reg { i16 -1468, i8 15 }, %struct.stv090x_reg { i16 -1467, i8 17 }, %struct.stv090x_reg { i16 -1466, i8 20 }, %struct.stv090x_reg { i16 -1465, i8 23 }, %struct.stv090x_reg { i16 -1464, i8 25 }, %struct.stv090x_reg { i16 -1463, i8 32 }, %struct.stv090x_reg { i16 -1462, i8 33 }, %struct.stv090x_reg { i16 -1461, i8 13 }, %struct.stv090x_reg { i16 -1460, i8 15 }, %struct.stv090x_reg { i16 -1459, i8 19 }, %struct.stv090x_reg { i16 -1458, i8 26 }, %struct.stv090x_reg { i16 -1457, i8 31 }, %struct.stv090x_reg { i16 -1456, i8 33 }, %struct.stv090x_reg { i16 -2560, i8 32 }, %struct.stv090x_reg { i16 -2765, i8 1 }, %struct.stv090x_reg { i16 -3277, i8 1 }, %struct.stv090x_reg { i16 -2756, i8 47 }, %struct.stv090x_reg { i16 -3268, i8 47 }], align 16, !dbg !4741
@stv0900_cut20_val = internal global [32 x %struct.stv090x_reg] [%struct.stv090x_reg { i16 -3554, i8 -24 }, %struct.stv090x_reg { i16 -3553, i8 16 }, %struct.stv090x_reg { i16 -3523, i8 56 }, %struct.stv090x_reg { i16 -3522, i8 32 }, %struct.stv090x_reg { i16 -3496, i8 90 }, %struct.stv090x_reg { i16 -3328, i8 6 }, %struct.stv090x_reg { i16 -3327, i8 0 }, %struct.stv090x_reg { i16 -3326, i8 4 }, %struct.stv090x_reg { i16 -3583, i8 12 }, %struct.stv090x_reg { i16 -3042, i8 -24 }, %struct.stv090x_reg { i16 -3041, i8 16 }, %struct.stv090x_reg { i16 -3011, i8 56 }, %struct.stv090x_reg { i16 -3010, i8 32 }, %struct.stv090x_reg { i16 -2984, i8 90 }, %struct.stv090x_reg { i16 -2816, i8 6 }, %struct.stv090x_reg { i16 -2815, i8 0 }, %struct.stv090x_reg { i16 -2814, i8 4 }, %struct.stv090x_reg { i16 -3071, i8 12 }, %struct.stv090x_reg { i16 -1469, i8 33 }, %struct.stv090x_reg { i16 -1468, i8 33 }, %struct.stv090x_reg { i16 -1467, i8 32 }, %struct.stv090x_reg { i16 -1466, i8 31 }, %struct.stv090x_reg { i16 -1465, i8 30 }, %struct.stv090x_reg { i16 -1464, i8 30 }, %struct.stv090x_reg { i16 -1463, i8 29 }, %struct.stv090x_reg { i16 -1462, i8 27 }, %struct.stv090x_reg { i16 -1461, i8 32 }, %struct.stv090x_reg { i16 -1460, i8 32 }, %struct.stv090x_reg { i16 -1459, i8 32 }, %struct.stv090x_reg { i16 -1458, i8 32 }, %struct.stv090x_reg { i16 -1457, i8 32 }, %struct.stv090x_reg { i16 -1456, i8 33 }], align 16, !dbg !4750
@.str.152 = private unnamed_addr constant [28 x i8] c"\013%s: Initializing STV0903\0A\00", align 1
@.str.153 = private unnamed_addr constant [28 x i8] c"\015%s: Initializing STV0903\0A\00", align 1
@.str.154 = private unnamed_addr constant [28 x i8] c"\016%s: Initializing STV0903\0A\00", align 1
@.str.155 = private unnamed_addr constant [28 x i8] c"\017%s: Initializing STV0903\0A\00", align 1
@stv0903_initval = internal global [99 x %struct.stv090x_reg] [%struct.stv090x_reg { i16 -3812, i8 0 }, %struct.stv090x_reg { i16 -3758, i8 17 }, %struct.stv090x_reg { i16 -3646, i8 72 }, %struct.stv090x_reg { i16 -3645, i8 20 }, %struct.stv090x_reg { i16 -3616, i8 39 }, %struct.stv090x_reg { i16 -3615, i8 33 }, %struct.stv090x_reg { i16 -3680, i8 34 }, %struct.stv090x_reg { i16 -3671, i8 -64 }, %struct.stv090x_reg { i16 -3670, i8 -64 }, %struct.stv090x_reg { i16 -3679, i8 0 }, %struct.stv090x_reg { i16 -3052, i8 -7 }, %struct.stv090x_reg { i16 -3056, i8 8 }, %struct.stv090x_reg { i16 -3042, i8 -60 }, %struct.stv090x_reg { i16 -3011, i8 -19 }, %struct.stv090x_reg { i16 -2847, i8 -126 }, %struct.stv090x_reg { i16 -3009, i8 -48 }, %struct.stv090x_reg { i16 -3008, i8 -72 }, %struct.stv090x_reg { i16 -2992, i8 -46 }, %struct.stv090x_reg { i16 -2989, i8 32 }, %struct.stv090x_reg { i16 -2988, i8 0 }, %struct.stv090x_reg { i16 -2987, i8 -16 }, %struct.stv090x_reg { i16 -2986, i8 112 }, %struct.stv090x_reg { i16 -2700, i8 32 }, %struct.stv090x_reg { i16 -2656, i8 -120 }, %struct.stv090x_reg { i16 -2654, i8 58 }, %struct.stv090x_reg { i16 -2648, i8 0 }, %struct.stv090x_reg { i16 -2638, i8 16 }, %struct.stv090x_reg { i16 -2664, i8 53 }, %struct.stv090x_reg { i16 -2660, i8 -63 }, %struct.stv090x_reg { i16 -3007, i8 -8 }, %struct.stv090x_reg { i16 -3071, i8 28 }, %struct.stv090x_reg { i16 -3049, i8 32 }, %struct.stv090x_reg { i16 -3040, i8 112 }, %struct.stv090x_reg { i16 -3039, i8 -120 }, %struct.stv090x_reg { i16 -3028, i8 91 }, %struct.stv090x_reg { i16 -3027, i8 56 }, %struct.stv090x_reg { i16 -3016, i8 -28 }, %struct.stv090x_reg { i16 -3015, i8 26 }, %struct.stv090x_reg { i16 -3014, i8 9 }, %struct.stv090x_reg { i16 -3010, i8 8 }, %struct.stv090x_reg { i16 -2984, i8 -63 }, %struct.stv090x_reg { i16 -2983, i8 88 }, %struct.stv090x_reg { i16 -2982, i8 1 }, %struct.stv090x_reg { i16 -2928, i8 38 }, %struct.stv090x_reg { i16 -2916, i8 -122 }, %struct.stv090x_reg { i16 -2915, i8 -122 }, %struct.stv090x_reg { i16 -2816, i8 119 }, %struct.stv090x_reg { i16 -2815, i8 -123 }, %struct.stv090x_reg { i16 -2814, i8 119 }, %struct.stv090x_reg { i16 -3051, i8 59 }, %struct.stv090x_reg { i16 -2896, i8 -1 }, %struct.stv090x_reg { i16 -2895, i8 -1 }, %struct.stv090x_reg { i16 -2894, i8 -1 }, %struct.stv090x_reg { i16 -2893, i8 -1 }, %struct.stv090x_reg { i16 -2892, i8 -1 }, %struct.stv090x_reg { i16 -2891, i8 -1 }, %struct.stv090x_reg { i16 -2890, i8 -1 }, %struct.stv090x_reg { i16 -2889, i8 -52 }, %struct.stv090x_reg { i16 -2888, i8 -52 }, %struct.stv090x_reg { i16 -2887, i8 -52 }, %struct.stv090x_reg { i16 -2886, i8 -52 }, %struct.stv090x_reg { i16 -2885, i8 -52 }, %struct.stv090x_reg { i16 -2884, i8 -52 }, %struct.stv090x_reg { i16 -2883, i8 -52 }, %struct.stv090x_reg { i16 -2882, i8 -52 }, %struct.stv090x_reg { i16 -2881, i8 -49 }, %struct.stv090x_reg { i16 -1402, i8 28 }, %struct.stv090x_reg { i16 -1533, i8 55 }, %struct.stv090x_reg { i16 -1532, i8 41 }, %struct.stv090x_reg { i16 -1531, i8 55 }, %struct.stv090x_reg { i16 -1530, i8 51 }, %struct.stv090x_reg { i16 -1529, i8 49 }, %struct.stv090x_reg { i16 -1528, i8 47 }, %struct.stv090x_reg { i16 -1527, i8 57 }, %struct.stv090x_reg { i16 -1526, i8 58 }, %struct.stv090x_reg { i16 -1525, i8 41 }, %struct.stv090x_reg { i16 -1524, i8 55 }, %struct.stv090x_reg { i16 -1523, i8 51 }, %struct.stv090x_reg { i16 -1522, i8 47 }, %struct.stv090x_reg { i16 -1521, i8 57 }, %struct.stv090x_reg { i16 -1520, i8 58 }, %struct.stv090x_reg { i16 -1473, i8 4 }, %struct.stv090x_reg { i16 -1469, i8 12 }, %struct.stv090x_reg { i16 -1468, i8 15 }, %struct.stv090x_reg { i16 -1467, i8 17 }, %struct.stv090x_reg { i16 -1466, i8 20 }, %struct.stv090x_reg { i16 -1465, i8 23 }, %struct.stv090x_reg { i16 -1464, i8 25 }, %struct.stv090x_reg { i16 -1463, i8 32 }, %struct.stv090x_reg { i16 -1462, i8 33 }, %struct.stv090x_reg { i16 -1461, i8 13 }, %struct.stv090x_reg { i16 -1460, i8 15 }, %struct.stv090x_reg { i16 -1459, i8 19 }, %struct.stv090x_reg { i16 -1458, i8 26 }, %struct.stv090x_reg { i16 -1457, i8 31 }, %struct.stv090x_reg { i16 -1456, i8 33 }, %struct.stv090x_reg { i16 -2560, i8 32 }, %struct.stv090x_reg { i16 -2765, i8 1 }, %struct.stv090x_reg { i16 -2756, i8 47 }], align 16, !dbg !4753
@stv0903_cut20_val = internal global [23 x %struct.stv090x_reg] [%struct.stv090x_reg { i16 -3042, i8 -24 }, %struct.stv090x_reg { i16 -3041, i8 16 }, %struct.stv090x_reg { i16 -3011, i8 56 }, %struct.stv090x_reg { i16 -3010, i8 32 }, %struct.stv090x_reg { i16 -2984, i8 90 }, %struct.stv090x_reg { i16 -2816, i8 6 }, %struct.stv090x_reg { i16 -2815, i8 0 }, %struct.stv090x_reg { i16 -2814, i8 4 }, %struct.stv090x_reg { i16 -3071, i8 12 }, %struct.stv090x_reg { i16 -1469, i8 33 }, %struct.stv090x_reg { i16 -1468, i8 33 }, %struct.stv090x_reg { i16 -1467, i8 32 }, %struct.stv090x_reg { i16 -1466, i8 31 }, %struct.stv090x_reg { i16 -1465, i8 30 }, %struct.stv090x_reg { i16 -1464, i8 30 }, %struct.stv090x_reg { i16 -1463, i8 29 }, %struct.stv090x_reg { i16 -1462, i8 27 }, %struct.stv090x_reg { i16 -1461, i8 32 }, %struct.stv090x_reg { i16 -1460, i8 32 }, %struct.stv090x_reg { i16 -1459, i8 32 }, %struct.stv090x_reg { i16 -1458, i8 32 }, %struct.stv090x_reg { i16 -1457, i8 32 }, %struct.stv090x_reg { i16 -1456, i8 33 }], align 16, !dbg !4758
@.str.156 = private unnamed_addr constant [33 x i8] c"\013%s: Setting up initial values\0A\00", align 1
@.str.157 = private unnamed_addr constant [33 x i8] c"\015%s: Setting up initial values\0A\00", align 1
@.str.158 = private unnamed_addr constant [33 x i8] c"\016%s: Setting up initial values\0A\00", align 1
@.str.159 = private unnamed_addr constant [33 x i8] c"\017%s: Setting up initial values\0A\00", align 1
@.str.160 = private unnamed_addr constant [41 x i8] c"\013%s: Setting up Cut 2.0 initial values\0A\00", align 1
@.str.161 = private unnamed_addr constant [41 x i8] c"\015%s: Setting up Cut 2.0 initial values\0A\00", align 1
@.str.162 = private unnamed_addr constant [41 x i8] c"\016%s: Setting up Cut 2.0 initial values\0A\00", align 1
@.str.163 = private unnamed_addr constant [41 x i8] c"\017%s: Setting up Cut 2.0 initial values\0A\00", align 1
@.str.164 = private unnamed_addr constant [39 x i8] c"\013%s: ERROR: Unsupported Cut: 0x%02x!\0A\00", align 1
@.str.165 = private unnamed_addr constant [39 x i8] c"\015%s: ERROR: Unsupported Cut: 0x%02x!\0A\00", align 1
@.str.166 = private unnamed_addr constant [39 x i8] c"\016%s: ERROR: Unsupported Cut: 0x%02x!\0A\00", align 1
@.str.167 = private unnamed_addr constant [39 x i8] c"\017%s: ERROR: Unsupported Cut: 0x%02x!\0A\00", align 1
@.str.168 = private unnamed_addr constant [54 x i8] c"\013%s: INFO: Cut: 0x%02x probably incomplete support!\0A\00", align 1
@.str.169 = private unnamed_addr constant [54 x i8] c"\015%s: INFO: Cut: 0x%02x probably incomplete support!\0A\00", align 1
@.str.170 = private unnamed_addr constant [54 x i8] c"\016%s: INFO: Cut: 0x%02x probably incomplete support!\0A\00", align 1
@.str.171 = private unnamed_addr constant [54 x i8] c"\017%s: INFO: Cut: 0x%02x probably incomplete support!\0A\00", align 1
@stv090x_id_table = internal constant [2 x %struct.i2c_device_id] [%struct.i2c_device_id { [20 x i8] c"stv090x\00\00\00\00\00\00\00\00\00\00\00\00\00", i64 0 }, %struct.i2c_device_id zeroinitializer], align 16, !dbg !4858
@llvm.used = appending global [10 x i8*] [i8* bitcast (%struct.kernel_param* @__param_verbose to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_verbosetype220, i32 0, i32 0), i8* bitcast (i8** @__UNIQUE_ID___addressable_stv090x_driver_init221 to i8*), i8* bitcast (void ()* @stv090x_driver_exit to i8*), i8* bitcast (void ()** @__exitcall_stv090x_driver_exit to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_verbose222, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_author223, i32 0, i32 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__UNIQUE_ID_description224, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_file225, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_license226, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.dvb_frontend* @stv090x_attach(%struct.stv090x_config* %config, %struct.i2c_adapter* %i2c, i32 %demod) #0 !dbg !4867 {
entry:
  %retval = alloca %struct.dvb_frontend*, align 8
  %config.addr = alloca %struct.stv090x_config*, align 8
  %i2c.addr = alloca %struct.i2c_adapter*, align 8
  %demod.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %state = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_config* %config, %struct.stv090x_config** %config.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config.addr, metadata !4870, metadata !DIExpression()), !dbg !4871
  store %struct.i2c_adapter* %i2c, %struct.i2c_adapter** %i2c.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c.addr, metadata !4872, metadata !DIExpression()), !dbg !4873
  store i32 %demod, i32* %demod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %demod.addr, metadata !4874, metadata !DIExpression()), !dbg !4875
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4876, metadata !DIExpression()), !dbg !4877
  store i32 0, i32* %ret, align 4, !dbg !4877
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !4878, metadata !DIExpression()), !dbg !4879
  store %struct.stv090x_state* null, %struct.stv090x_state** %state, align 8, !dbg !4879
  %call = call i8* @kzalloc(i64 1392, i32 3264) #9, !dbg !4880
  %0 = bitcast i8* %call to %struct.stv090x_state*, !dbg !4880
  store %struct.stv090x_state* %0, %struct.stv090x_state** %state, align 8, !dbg !4881
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4882
  %tobool = icmp ne %struct.stv090x_state* %1, null, !dbg !4882
  br i1 %tobool, label %if.end, label %if.then, !dbg !4884

if.then:                                          ; preds = %entry
  br label %error, !dbg !4885

if.end:                                           ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4886
  %verbose = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 7, !dbg !4887
  store i32* @verbose, i32** %verbose, align 8, !dbg !4888
  %3 = load %struct.stv090x_config*, %struct.stv090x_config** %config.addr, align 8, !dbg !4889
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4890
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 5, !dbg !4891
  store %struct.stv090x_config* %3, %struct.stv090x_config** %config1, align 8, !dbg !4892
  %5 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c.addr, align 8, !dbg !4893
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4894
  %i2c2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 4, !dbg !4895
  store %struct.i2c_adapter* %5, %struct.i2c_adapter** %i2c2, align 8, !dbg !4896
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4897
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 6, !dbg !4898
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 1, !dbg !4899
  %8 = bitcast %struct.dvb_frontend_ops* %ops to i8*, !dbg !4900
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @stv090x_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !4900
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4901
  %10 = bitcast %struct.stv090x_state* %9 to i8*, !dbg !4901
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4902
  %frontend3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 6, !dbg !4903
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend3, i32 0, i32 3, !dbg !4904
  store i8* %10, i8** %demodulator_priv, align 8, !dbg !4905
  %12 = load i32, i32* %demod.addr, align 4, !dbg !4906
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4907
  %demod4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 1, !dbg !4908
  store i32 %12, i32* %demod4, align 4, !dbg !4909
  %14 = load %struct.stv090x_config*, %struct.stv090x_config** %config.addr, align 8, !dbg !4910
  %demod_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %14, i32 0, i32 1, !dbg !4911
  %15 = load i32, i32* %demod_mode, align 4, !dbg !4911
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4912
  %demod_mode5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 2, !dbg !4913
  store i32 %15, i32* %demod_mode5, align 8, !dbg !4914
  %17 = load %struct.stv090x_config*, %struct.stv090x_config** %config.addr, align 8, !dbg !4915
  %device = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %17, i32 0, i32 0, !dbg !4916
  %18 = load i32, i32* %device, align 8, !dbg !4916
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4917
  %device6 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 0, !dbg !4918
  store i32 %18, i32* %device6, align 8, !dbg !4919
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4920
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 15, !dbg !4921
  store i32 0, i32* %rolloff, align 4, !dbg !4922
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4923
  %call7 = call i32 @stv090x_setup_compound(%struct.stv090x_state* %21) #9, !dbg !4924
  store i32 %call7, i32* %ret, align 4, !dbg !4925
  %22 = load i32, i32* %ret, align 4, !dbg !4926
  %tobool8 = icmp ne i32 %22, 0, !dbg !4926
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !4928

if.then9:                                         ; preds = %if.end
  br label %error, !dbg !4929

if.end10:                                         ; preds = %if.end
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4930
  %frontend11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %23, i32 0, i32 6, !dbg !4931
  store %struct.dvb_frontend* %frontend11, %struct.dvb_frontend** %retval, align 8, !dbg !4932
  br label %return, !dbg !4932

error:                                            ; preds = %if.then9, %if.then
  call void @llvm.dbg.label(metadata !4933), !dbg !4934
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !4935
  %25 = bitcast %struct.stv090x_state* %24 to i8*, !dbg !4935
  call void @kfree(i8* %25) #9, !dbg !4936
  store %struct.dvb_frontend* null, %struct.dvb_frontend** %retval, align 8, !dbg !4937
  br label %return, !dbg !4937

return:                                           ; preds = %error, %if.end10
  %26 = load %struct.dvb_frontend*, %struct.dvb_frontend** %retval, align 8, !dbg !4938
  ret %struct.dvb_frontend* %26, !dbg !4938
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !4939 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4942, metadata !DIExpression()), !dbg !4946
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4952, metadata !DIExpression()), !dbg !4953
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4954, metadata !DIExpression()), !dbg !4955
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4956, metadata !DIExpression()), !dbg !4957
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4958, metadata !DIExpression()), !dbg !4962
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4964, metadata !DIExpression()), !dbg !4968
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4970, metadata !DIExpression()), !dbg !4974
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4979, metadata !DIExpression()), !dbg !4980
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4981, metadata !DIExpression()), !dbg !4982
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4983, metadata !DIExpression()), !dbg !4984
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4985, metadata !DIExpression()), !dbg !4986
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4987, metadata !DIExpression()), !dbg !4988
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4989, metadata !DIExpression()), !dbg !4990
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4991, metadata !DIExpression()), !dbg !4992
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4993, metadata !DIExpression()), !dbg !4994
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !4995, metadata !DIExpression()), !dbg !4996
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !4997, metadata !DIExpression()), !dbg !4998
  %0 = load i64, i64* %size.addr, align 8, !dbg !4999
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5000
  %or = or i32 %1, 256, !dbg !5001
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5002
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #10, !dbg !5003
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5004

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5005
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5006
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5007

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5008
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5009
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5010
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !5011
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !4988
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5012
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5013
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5014
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5015
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5016
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5017
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !5018
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5018
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5018
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5018
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5018
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5019
  br label %kmalloc.exit, !dbg !5019

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5020
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5021
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5021
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5023

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5024
  br label %kmalloc_index.exit.i, !dbg !5024

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5025
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5027
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5028

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5029
  br label %kmalloc_index.exit.i, !dbg !5029

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5030
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5032
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5033

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5034
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5035
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5036

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5037
  br label %kmalloc_index.exit.i, !dbg !5037

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5038
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5040
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5041

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5042
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5043
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5044

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5045
  br label %kmalloc_index.exit.i, !dbg !5045

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5046
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5048
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5049

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5050
  br label %kmalloc_index.exit.i, !dbg !5050

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5051
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5053
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5054

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5055
  br label %kmalloc_index.exit.i, !dbg !5055

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5056
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5058
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5059

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5060
  br label %kmalloc_index.exit.i, !dbg !5060

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5061
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5063
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5064

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5065
  br label %kmalloc_index.exit.i, !dbg !5065

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5066
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5068
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5069

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5070
  br label %kmalloc_index.exit.i, !dbg !5070

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5071
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5073
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5074

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5075
  br label %kmalloc_index.exit.i, !dbg !5075

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5076
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5078
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5079

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5080
  br label %kmalloc_index.exit.i, !dbg !5080

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5081
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5083
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5084

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5085
  br label %kmalloc_index.exit.i, !dbg !5085

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5086
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5088
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5089

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5090
  br label %kmalloc_index.exit.i, !dbg !5090

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5091
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5093
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5094

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5095
  br label %kmalloc_index.exit.i, !dbg !5095

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5096
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5098
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5099

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5100
  br label %kmalloc_index.exit.i, !dbg !5100

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5101
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5103
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5104

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5105
  br label %kmalloc_index.exit.i, !dbg !5105

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5106
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5108
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5109

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5110
  br label %kmalloc_index.exit.i, !dbg !5110

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5111
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5113
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5114

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5115
  br label %kmalloc_index.exit.i, !dbg !5115

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5116
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5118
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5119

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5120
  br label %kmalloc_index.exit.i, !dbg !5120

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5121
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5123
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5124

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5125
  br label %kmalloc_index.exit.i, !dbg !5125

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5126
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5128
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5129

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5130
  br label %kmalloc_index.exit.i, !dbg !5130

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5131
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5133
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5134

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5135
  br label %kmalloc_index.exit.i, !dbg !5135

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5136
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5138
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5139

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5140
  br label %kmalloc_index.exit.i, !dbg !5140

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5141
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5143
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5144

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5145
  br label %kmalloc_index.exit.i, !dbg !5145

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5146
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5148
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5149

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5150
  br label %kmalloc_index.exit.i, !dbg !5150

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5151
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5153
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5154

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5155
  br label %kmalloc_index.exit.i, !dbg !5155

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5156
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5158
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5159

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5160
  br label %kmalloc_index.exit.i, !dbg !5160

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5161
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5163
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5164

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5165
  br label %kmalloc_index.exit.i, !dbg !5165

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5166, !srcloc !5169
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !5170, !srcloc !5173
  unreachable, !dbg !5174

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5175
  store i32 %45, i32* %index.i, align 4, !dbg !5176
  %46 = load i32, i32* %index.i, align 4, !dbg !5177
  %tobool.i = icmp ne i32 %46, 0, !dbg !5177
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5179

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5180
  br label %kmalloc.exit, !dbg !5180

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5181
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5182
  %and.i.i = and i32 %48, 17, !dbg !5182
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5182
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5182
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5182
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5182
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5184

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5185
  br label %kmalloc_type.exit.i, !dbg !5185

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5186
  %and2.i.i = and i32 %49, 1, !dbg !5187
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5186
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5186
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5186
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5188
  br label %kmalloc_type.exit.i, !dbg !5188

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5189
  %idxprom.i = zext i32 %51 to i64, !dbg !5190
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5190
  %52 = load i32, i32* %index.i, align 4, !dbg !5191
  %idxprom6.i = zext i32 %52 to i64, !dbg !5190
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5190
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5190
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5192
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5193
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5194
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5195
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !5196
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5196
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5196
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5196
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5196
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !4957
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5197
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5198
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5199
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5200
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !5201
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5202
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5203
  store i8* %62, i8** %retval.i, align 8, !dbg !5204
  br label %kmalloc.exit, !dbg !5204

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5205
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5206
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !5207
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5207
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5207
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5207
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5207
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5208
  br label %kmalloc.exit, !dbg !5208

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5209
  ret i8* %65, !dbg !5210
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_setup_compound(%struct.stv090x_state* %state) #0 !dbg !4651 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4942, metadata !DIExpression()), !dbg !5211
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4952, metadata !DIExpression()), !dbg !5216
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4954, metadata !DIExpression()), !dbg !5217
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4956, metadata !DIExpression()), !dbg !5218
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4958, metadata !DIExpression()), !dbg !5219
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4964, metadata !DIExpression()), !dbg !5221
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4970, metadata !DIExpression()), !dbg !5223
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4979, metadata !DIExpression()), !dbg !5226
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4981, metadata !DIExpression()), !dbg !5227
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4983, metadata !DIExpression()), !dbg !5228
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4985, metadata !DIExpression()), !dbg !5229
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4987, metadata !DIExpression()), !dbg !5230
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4989, metadata !DIExpression()), !dbg !5231
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4991, metadata !DIExpression()), !dbg !5232
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4993, metadata !DIExpression()), !dbg !5233
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %temp_int = alloca %struct.stv090x_dev*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !5234, metadata !DIExpression()), !dbg !5235
  call void @llvm.dbg.declare(metadata %struct.stv090x_dev** %temp_int, metadata !5236, metadata !DIExpression()), !dbg !5237
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5238
  %i2c = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 4, !dbg !5239
  %1 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !5239
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5240
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 5, !dbg !5241
  %3 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5241
  %address = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %3, i32 0, i32 5, !dbg !5242
  %4 = load i8, i8* %address, align 4, !dbg !5242
  %call = call %struct.stv090x_dev* @find_dev(%struct.i2c_adapter* %1, i8 zeroext %4) #9, !dbg !5243
  store %struct.stv090x_dev* %call, %struct.stv090x_dev** %temp_int, align 8, !dbg !5244
  %5 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_int, align 8, !dbg !5245
  %tobool = icmp ne %struct.stv090x_dev* %5, null, !dbg !5245
  br i1 %tobool, label %land.lhs.true, label %if.else28, !dbg !5246

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5247
  %demod_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 2, !dbg !5248
  %7 = load i32, i32* %demod_mode, align 8, !dbg !5248
  %cmp = icmp eq i32 %7, 0, !dbg !5249
  br i1 %cmp, label %if.then, label %if.else28, !dbg !5250

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_int, align 8, !dbg !5251
  %internal = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %8, i32 0, i32 0, !dbg !5253
  %9 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !5253
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5254
  %internal1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 3, !dbg !5255
  store %struct.stv090x_internal* %9, %struct.stv090x_internal** %internal1, align 8, !dbg !5256
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5257
  %internal2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 3, !dbg !5258
  %12 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal2, align 8, !dbg !5258
  %num_used = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %12, i32 0, i32 6, !dbg !5259
  %13 = load i32, i32* %num_used, align 8, !dbg !5260
  %inc = add i32 %13, 1, !dbg !5260
  store i32 %inc, i32* %num_used, align 8, !dbg !5260
  br label %do.body, !dbg !5261

do.body:                                          ; preds = %if.then
  %14 = load i32, i32* @verbose, align 4, !dbg !5262
  %cmp3 = icmp ugt i32 %14, 0, !dbg !5262
  br i1 %cmp3, label %land.lhs.true4, label %if.else, !dbg !5262

land.lhs.true4:                                   ; preds = %do.body
  %15 = load i32, i32* @verbose, align 4, !dbg !5262
  %cmp5 = icmp ugt i32 %15, 2, !dbg !5262
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !5267

if.then6:                                         ; preds = %land.lhs.true4
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.129, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5262
  br label %if.end27, !dbg !5262

if.else:                                          ; preds = %land.lhs.true4, %do.body
  %16 = load i32, i32* @verbose, align 4, !dbg !5268
  %cmp8 = icmp ugt i32 %16, 1, !dbg !5268
  br i1 %cmp8, label %land.lhs.true9, label %if.else13, !dbg !5268

land.lhs.true9:                                   ; preds = %if.else
  %17 = load i32, i32* @verbose, align 4, !dbg !5268
  %cmp10 = icmp ugt i32 %17, 2, !dbg !5268
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !5262

if.then11:                                        ; preds = %land.lhs.true9
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5268
  br label %if.end26, !dbg !5268

if.else13:                                        ; preds = %land.lhs.true9, %if.else
  %18 = load i32, i32* @verbose, align 4, !dbg !5270
  %cmp14 = icmp ugt i32 %18, 2, !dbg !5270
  br i1 %cmp14, label %land.lhs.true15, label %if.else19, !dbg !5270

land.lhs.true15:                                  ; preds = %if.else13
  %19 = load i32, i32* @verbose, align 4, !dbg !5270
  %cmp16 = icmp ugt i32 %19, 2, !dbg !5270
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !5268

if.then17:                                        ; preds = %land.lhs.true15
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.131, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5270
  br label %if.end25, !dbg !5270

if.else19:                                        ; preds = %land.lhs.true15, %if.else13
  %20 = load i32, i32* @verbose, align 4, !dbg !5272
  %cmp20 = icmp ugt i32 %20, 3, !dbg !5272
  br i1 %cmp20, label %land.lhs.true21, label %if.end, !dbg !5272

land.lhs.true21:                                  ; preds = %if.else19
  %21 = load i32, i32* @verbose, align 4, !dbg !5272
  %cmp22 = icmp ugt i32 %21, 2, !dbg !5272
  br i1 %cmp22, label %if.then23, label %if.end, !dbg !5270

if.then23:                                        ; preds = %land.lhs.true21
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5272
  br label %if.end, !dbg !5272

if.end:                                           ; preds = %if.then23, %land.lhs.true21, %if.else19
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then17
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then11
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then6
  br label %do.end, !dbg !5274

do.end:                                           ; preds = %if.end27
  br label %if.end118, !dbg !5275

if.else28:                                        ; preds = %land.lhs.true, %entry
  store i64 80, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %22 = load i64, i64* %size.addr.i, align 8, !dbg !5276
  %23 = call i1 @llvm.is.constant.i64(i64 %22) #10, !dbg !5277
  br i1 %23, label %if.then.i, label %if.end9.i, !dbg !5278

if.then.i:                                        ; preds = %if.else28
  %24 = load i64, i64* %size.addr.i, align 8, !dbg !5279
  %cmp.i = icmp ugt i64 %24, 8192, !dbg !5280
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5281

if.then1.i:                                       ; preds = %if.then.i
  %25 = load i64, i64* %size.addr.i, align 8, !dbg !5282
  %26 = load i32, i32* %flags.addr.i, align 4, !dbg !5283
  store i64 %25, i64* %size.addr.i.i, align 8
  store i32 %26, i32* %flags.addr.i.i, align 4
  %27 = load i64, i64* %size.addr.i.i, align 8, !dbg !5284
  %call.i.i = call i32 @get_order(i64 %27) #11, !dbg !5285
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5230
  %28 = load i64, i64* %size.addr.i.i, align 8, !dbg !5286
  %29 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5287
  %30 = load i32, i32* %order.i.i, align 4, !dbg !5288
  store i64 %28, i64* %size.addr.i.i.i, align 8
  store i32 %29, i32* %flags.addr.i.i.i, align 4
  store i32 %30, i32* %order.addr.i.i.i, align 4
  %31 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5289
  %32 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5290
  %33 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5291
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %31, i32 %32, i32 %33) #12, !dbg !5292
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5292
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5292
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5292
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !5292
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5293
  br label %kmalloc.exit, !dbg !5293

if.end.i:                                         ; preds = %if.then.i
  %34 = load i64, i64* %size.addr.i, align 8, !dbg !5294
  store i64 %34, i64* %size.addr.i11.i, align 8
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5295
  %tobool.i.i = icmp ne i64 %35, 0, !dbg !5295
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5296

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5297
  br label %kmalloc_index.exit.i, !dbg !5297

if.end.i.i:                                       ; preds = %if.end.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5298
  %cmp.i.i = icmp ule i64 %36, 8, !dbg !5299
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5300

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5301
  br label %kmalloc_index.exit.i, !dbg !5301

if.end2.i.i:                                      ; preds = %if.end.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5302
  %cmp3.i.i = icmp ugt i64 %37, 64, !dbg !5303
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5304

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5305
  %cmp4.i.i = icmp ule i64 %38, 96, !dbg !5306
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5307

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5308
  br label %kmalloc_index.exit.i, !dbg !5308

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5309
  %cmp7.i.i = icmp ugt i64 %39, 128, !dbg !5310
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5311

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5312
  %cmp9.i.i = icmp ule i64 %40, 192, !dbg !5313
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5314

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5315
  br label %kmalloc_index.exit.i, !dbg !5315

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5316
  %cmp12.i.i = icmp ule i64 %41, 8, !dbg !5317
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5318

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5319
  br label %kmalloc_index.exit.i, !dbg !5319

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5320
  %cmp15.i.i = icmp ule i64 %42, 16, !dbg !5321
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5322

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5323
  br label %kmalloc_index.exit.i, !dbg !5323

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5324
  %cmp18.i.i = icmp ule i64 %43, 32, !dbg !5325
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5326

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5327
  br label %kmalloc_index.exit.i, !dbg !5327

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5328
  %cmp21.i.i = icmp ule i64 %44, 64, !dbg !5329
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5330

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5331
  br label %kmalloc_index.exit.i, !dbg !5331

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5332
  %cmp24.i.i = icmp ule i64 %45, 128, !dbg !5333
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5334

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5335
  br label %kmalloc_index.exit.i, !dbg !5335

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5336
  %cmp27.i.i = icmp ule i64 %46, 256, !dbg !5337
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5338

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5339
  br label %kmalloc_index.exit.i, !dbg !5339

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5340
  %cmp30.i.i = icmp ule i64 %47, 512, !dbg !5341
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5342

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5343
  br label %kmalloc_index.exit.i, !dbg !5343

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5344
  %cmp33.i.i = icmp ule i64 %48, 1024, !dbg !5345
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5346

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5347
  br label %kmalloc_index.exit.i, !dbg !5347

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5348
  %cmp36.i.i = icmp ule i64 %49, 2048, !dbg !5349
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5350

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5351
  br label %kmalloc_index.exit.i, !dbg !5351

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5352
  %cmp39.i.i = icmp ule i64 %50, 4096, !dbg !5353
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5354

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5355
  br label %kmalloc_index.exit.i, !dbg !5355

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5356
  %cmp42.i.i = icmp ule i64 %51, 8192, !dbg !5357
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5358

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5359
  br label %kmalloc_index.exit.i, !dbg !5359

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5360
  %cmp45.i.i = icmp ule i64 %52, 16384, !dbg !5361
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5362

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5363
  br label %kmalloc_index.exit.i, !dbg !5363

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5364
  %cmp48.i.i = icmp ule i64 %53, 32768, !dbg !5365
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5366

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5367
  br label %kmalloc_index.exit.i, !dbg !5367

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5368
  %cmp51.i.i = icmp ule i64 %54, 65536, !dbg !5369
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5370

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5371
  br label %kmalloc_index.exit.i, !dbg !5371

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5372
  %cmp54.i.i = icmp ule i64 %55, 131072, !dbg !5373
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5374

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5375
  br label %kmalloc_index.exit.i, !dbg !5375

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5376
  %cmp57.i.i = icmp ule i64 %56, 262144, !dbg !5377
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5378

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5379
  br label %kmalloc_index.exit.i, !dbg !5379

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5380
  %cmp60.i.i = icmp ule i64 %57, 524288, !dbg !5381
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5382

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5383
  br label %kmalloc_index.exit.i, !dbg !5383

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5384
  %cmp63.i.i = icmp ule i64 %58, 1048576, !dbg !5385
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5386

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5387
  br label %kmalloc_index.exit.i, !dbg !5387

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %59 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5388
  %cmp66.i.i = icmp ule i64 %59, 2097152, !dbg !5389
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5390

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5391
  br label %kmalloc_index.exit.i, !dbg !5391

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %60 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5392
  %cmp69.i.i = icmp ule i64 %60, 4194304, !dbg !5393
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5394

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5395
  br label %kmalloc_index.exit.i, !dbg !5395

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %61 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5396
  %cmp72.i.i = icmp ule i64 %61, 8388608, !dbg !5397
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5398

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5399
  br label %kmalloc_index.exit.i, !dbg !5399

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %62 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5400
  %cmp75.i.i = icmp ule i64 %62, 16777216, !dbg !5401
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5402

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5403
  br label %kmalloc_index.exit.i, !dbg !5403

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %63 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5404
  %cmp78.i.i = icmp ule i64 %63, 33554432, !dbg !5405
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5406

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5407
  br label %kmalloc_index.exit.i, !dbg !5407

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %64 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5408
  %cmp81.i.i = icmp ule i64 %64, 67108864, !dbg !5409
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5410

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5411
  br label %kmalloc_index.exit.i, !dbg !5411

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !5412, !srcloc !5169
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !5413, !srcloc !5173
  unreachable, !dbg !5414

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %65 = load i32, i32* %retval.i.i, align 4, !dbg !5415
  store i32 %65, i32* %index.i, align 4, !dbg !5416
  %66 = load i32, i32* %index.i, align 4, !dbg !5417
  %tobool.i = icmp ne i32 %66, 0, !dbg !5417
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5418

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5419
  br label %kmalloc.exit, !dbg !5419

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %67 = load i32, i32* %flags.addr.i, align 4, !dbg !5420
  store i32 %67, i32* %flags.addr.i13.i, align 4
  %68 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5421
  %and.i.i = and i32 %68, 17, !dbg !5421
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5421
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5421
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5421
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5421
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5422

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5423
  br label %kmalloc_type.exit.i, !dbg !5423

if.end.i16.i:                                     ; preds = %if.end4.i
  %69 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5424
  %and2.i.i = and i32 %69, 1, !dbg !5425
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5424
  %70 = zext i1 %tobool3.i.i to i64, !dbg !5424
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5424
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5426
  br label %kmalloc_type.exit.i, !dbg !5426

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %71 = load i32, i32* %retval.i12.i, align 4, !dbg !5427
  %idxprom.i = zext i32 %71 to i64, !dbg !5428
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5428
  %72 = load i32, i32* %index.i, align 4, !dbg !5429
  %idxprom6.i = zext i32 %72 to i64, !dbg !5428
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5428
  %73 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5428
  %74 = load i32, i32* %flags.addr.i, align 4, !dbg !5430
  %75 = load i64, i64* %size.addr.i, align 8, !dbg !5431
  store %struct.kmem_cache* %73, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %74, i32* %flags.addr.i17.i, align 4
  store i64 %75, i64* %size.addr.i18.i, align 8
  %76 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5432
  %77 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5433
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %76, i32 %77) #12, !dbg !5434
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5434
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5434
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5434
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !5434
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5218
  %78 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5435
  %79 = load i8*, i8** %ret.i.i, align 8, !dbg !5436
  %80 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5437
  %81 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5438
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %78, i8* %79, i64 %80, i32 %81) #12, !dbg !5439
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5440
  %82 = load i8*, i8** %ret.i.i, align 8, !dbg !5441
  store i8* %82, i8** %retval.i, align 8, !dbg !5442
  br label %kmalloc.exit, !dbg !5442

if.end9.i:                                        ; preds = %if.else28
  %83 = load i64, i64* %size.addr.i, align 8, !dbg !5443
  %84 = load i32, i32* %flags.addr.i, align 4, !dbg !5444
  %call10.i = call noalias i8* @__kmalloc(i64 %83, i32 %84) #12, !dbg !5445
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5445
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5445
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5445
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !5445
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5446
  br label %kmalloc.exit, !dbg !5446

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %85 = load i8*, i8** %retval.i, align 8, !dbg !5447
  %86 = bitcast i8* %85 to %struct.stv090x_internal*, !dbg !5448
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5449
  %internal30 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %87, i32 0, i32 3, !dbg !5450
  store %struct.stv090x_internal* %86, %struct.stv090x_internal** %internal30, align 8, !dbg !5451
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5452
  %internal31 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %88, i32 0, i32 3, !dbg !5454
  %89 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal31, align 8, !dbg !5454
  %tobool32 = icmp ne %struct.stv090x_internal* %89, null, !dbg !5452
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !5455

if.then33:                                        ; preds = %kmalloc.exit
  br label %error, !dbg !5456

if.end34:                                         ; preds = %kmalloc.exit
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5457
  %internal35 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %90, i32 0, i32 3, !dbg !5458
  %91 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal35, align 8, !dbg !5458
  %call36 = call %struct.stv090x_dev* @append_internal(%struct.stv090x_internal* %91) #9, !dbg !5459
  store %struct.stv090x_dev* %call36, %struct.stv090x_dev** %temp_int, align 8, !dbg !5460
  %92 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_int, align 8, !dbg !5461
  %tobool37 = icmp ne %struct.stv090x_dev* %92, null, !dbg !5461
  br i1 %tobool37, label %if.end40, label %if.then38, !dbg !5463

if.then38:                                        ; preds = %if.end34
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5464
  %internal39 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %93, i32 0, i32 3, !dbg !5466
  %94 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal39, align 8, !dbg !5466
  %95 = bitcast %struct.stv090x_internal* %94 to i8*, !dbg !5464
  call void @kfree(i8* %95) #9, !dbg !5467
  br label %error, !dbg !5468

if.end40:                                         ; preds = %if.end34
  %96 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5469
  %internal41 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %96, i32 0, i32 3, !dbg !5470
  %97 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal41, align 8, !dbg !5470
  %num_used42 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %97, i32 0, i32 6, !dbg !5471
  store i32 1, i32* %num_used42, align 8, !dbg !5472
  %98 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5473
  %internal43 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %98, i32 0, i32 3, !dbg !5474
  %99 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal43, align 8, !dbg !5474
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %99, i32 0, i32 4, !dbg !5475
  store i32 0, i32* %mclk, align 8, !dbg !5476
  %100 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5477
  %internal44 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %100, i32 0, i32 3, !dbg !5478
  %101 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal44, align 8, !dbg !5478
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %101, i32 0, i32 5, !dbg !5479
  store i32 0, i32* %dev_ver, align 4, !dbg !5480
  %102 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5481
  %i2c45 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %102, i32 0, i32 4, !dbg !5482
  %103 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c45, align 8, !dbg !5482
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5483
  %internal46 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %104, i32 0, i32 3, !dbg !5484
  %105 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal46, align 8, !dbg !5484
  %i2c_adap = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %105, i32 0, i32 0, !dbg !5485
  store %struct.i2c_adapter* %103, %struct.i2c_adapter** %i2c_adap, align 8, !dbg !5486
  %106 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5487
  %config47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %106, i32 0, i32 5, !dbg !5488
  %107 = load %struct.stv090x_config*, %struct.stv090x_config** %config47, align 8, !dbg !5488
  %address48 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %107, i32 0, i32 5, !dbg !5489
  %108 = load i8, i8* %address48, align 4, !dbg !5489
  %109 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5490
  %internal49 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %109, i32 0, i32 3, !dbg !5491
  %110 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal49, align 8, !dbg !5491
  %i2c_addr = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %110, i32 0, i32 1, !dbg !5492
  store i8 %108, i8* %i2c_addr, align 8, !dbg !5493
  br label %do.body50, !dbg !5494

do.body50:                                        ; preds = %if.end40
  %111 = load i32, i32* @verbose, align 4, !dbg !5495
  %cmp51 = icmp ugt i32 %111, 0, !dbg !5495
  br i1 %cmp51, label %land.lhs.true52, label %if.else56, !dbg !5495

land.lhs.true52:                                  ; preds = %do.body50
  %112 = load i32, i32* @verbose, align 4, !dbg !5495
  %cmp53 = icmp ugt i32 %112, 2, !dbg !5495
  br i1 %cmp53, label %if.then54, label %if.else56, !dbg !5500

if.then54:                                        ; preds = %land.lhs.true52
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.133, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5495
  br label %if.end77, !dbg !5495

if.else56:                                        ; preds = %land.lhs.true52, %do.body50
  %113 = load i32, i32* @verbose, align 4, !dbg !5501
  %cmp57 = icmp ugt i32 %113, 1, !dbg !5501
  br i1 %cmp57, label %land.lhs.true58, label %if.else62, !dbg !5501

land.lhs.true58:                                  ; preds = %if.else56
  %114 = load i32, i32* @verbose, align 4, !dbg !5501
  %cmp59 = icmp ugt i32 %114, 2, !dbg !5501
  br i1 %cmp59, label %if.then60, label %if.else62, !dbg !5495

if.then60:                                        ; preds = %land.lhs.true58
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.134, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5501
  br label %if.end76, !dbg !5501

if.else62:                                        ; preds = %land.lhs.true58, %if.else56
  %115 = load i32, i32* @verbose, align 4, !dbg !5503
  %cmp63 = icmp ugt i32 %115, 2, !dbg !5503
  br i1 %cmp63, label %land.lhs.true64, label %if.else68, !dbg !5503

land.lhs.true64:                                  ; preds = %if.else62
  %116 = load i32, i32* @verbose, align 4, !dbg !5503
  %cmp65 = icmp ugt i32 %116, 2, !dbg !5503
  br i1 %cmp65, label %if.then66, label %if.else68, !dbg !5501

if.then66:                                        ; preds = %land.lhs.true64
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5503
  br label %if.end75, !dbg !5503

if.else68:                                        ; preds = %land.lhs.true64, %if.else62
  %117 = load i32, i32* @verbose, align 4, !dbg !5505
  %cmp69 = icmp ugt i32 %117, 3, !dbg !5505
  br i1 %cmp69, label %land.lhs.true70, label %if.end74, !dbg !5505

land.lhs.true70:                                  ; preds = %if.else68
  %118 = load i32, i32* @verbose, align 4, !dbg !5505
  %cmp71 = icmp ugt i32 %118, 2, !dbg !5505
  br i1 %cmp71, label %if.then72, label %if.end74, !dbg !5503

if.then72:                                        ; preds = %land.lhs.true70
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.136, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5505
  br label %if.end74, !dbg !5505

if.end74:                                         ; preds = %if.then72, %land.lhs.true70, %if.else68
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then66
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then60
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then54
  br label %do.end78, !dbg !5507

do.end78:                                         ; preds = %if.end77
  br label %do.body79, !dbg !5508

do.body79:                                        ; preds = %do.end78
  %119 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5509
  %internal80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %119, i32 0, i32 3, !dbg !5509
  %120 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal80, align 8, !dbg !5509
  %demod_lock = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %120, i32 0, i32 2, !dbg !5509
  call void @__mutex_init(%struct.mutex* %demod_lock, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.137, i64 0, i64 0), %struct.lock_class_key* @stv090x_setup_compound.__key) #9, !dbg !5509
  br label %do.end81, !dbg !5509

do.end81:                                         ; preds = %do.body79
  br label %do.body82, !dbg !5511

do.body82:                                        ; preds = %do.end81
  %121 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5512
  %internal83 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %121, i32 0, i32 3, !dbg !5512
  %122 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal83, align 8, !dbg !5512
  %tuner_lock = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %122, i32 0, i32 3, !dbg !5512
  call void @__mutex_init(%struct.mutex* %tuner_lock, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.139, i64 0, i64 0), %struct.lock_class_key* @stv090x_setup_compound.__key.138) #9, !dbg !5512
  br label %do.end84, !dbg !5512

do.end84:                                         ; preds = %do.body82
  %123 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5514
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %123, i32 0, i32 6, !dbg !5516
  %call85 = call i32 @stv090x_setup(%struct.dvb_frontend* %frontend) #9, !dbg !5517
  %cmp86 = icmp slt i32 %call85, 0, !dbg !5518
  br i1 %cmp86, label %if.then87, label %if.end117, !dbg !5519

if.then87:                                        ; preds = %do.end84
  br label %do.body88, !dbg !5520

do.body88:                                        ; preds = %if.then87
  %124 = load i32, i32* @verbose, align 4, !dbg !5522
  %cmp89 = icmp ugt i32 %124, 0, !dbg !5522
  br i1 %cmp89, label %land.lhs.true90, label %if.else94, !dbg !5522

land.lhs.true90:                                  ; preds = %do.body88
  %125 = load i32, i32* @verbose, align 4, !dbg !5522
  %cmp91 = icmp ugt i32 %125, 0, !dbg !5522
  br i1 %cmp91, label %if.then92, label %if.else94, !dbg !5527

if.then92:                                        ; preds = %land.lhs.true90
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.140, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5522
  br label %if.end115, !dbg !5522

if.else94:                                        ; preds = %land.lhs.true90, %do.body88
  %126 = load i32, i32* @verbose, align 4, !dbg !5528
  %cmp95 = icmp ugt i32 %126, 1, !dbg !5528
  br i1 %cmp95, label %land.lhs.true96, label %if.else100, !dbg !5528

land.lhs.true96:                                  ; preds = %if.else94
  %127 = load i32, i32* @verbose, align 4, !dbg !5528
  %cmp97 = icmp ugt i32 %127, 0, !dbg !5528
  br i1 %cmp97, label %if.then98, label %if.else100, !dbg !5522

if.then98:                                        ; preds = %land.lhs.true96
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.141, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5528
  br label %if.end114, !dbg !5528

if.else100:                                       ; preds = %land.lhs.true96, %if.else94
  %128 = load i32, i32* @verbose, align 4, !dbg !5530
  %cmp101 = icmp ugt i32 %128, 2, !dbg !5530
  br i1 %cmp101, label %land.lhs.true102, label %if.else106, !dbg !5530

land.lhs.true102:                                 ; preds = %if.else100
  %129 = load i32, i32* @verbose, align 4, !dbg !5530
  %cmp103 = icmp ugt i32 %129, 0, !dbg !5530
  br i1 %cmp103, label %if.then104, label %if.else106, !dbg !5528

if.then104:                                       ; preds = %land.lhs.true102
  %call105 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.142, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5530
  br label %if.end113, !dbg !5530

if.else106:                                       ; preds = %land.lhs.true102, %if.else100
  %130 = load i32, i32* @verbose, align 4, !dbg !5532
  %cmp107 = icmp ugt i32 %130, 3, !dbg !5532
  br i1 %cmp107, label %land.lhs.true108, label %if.end112, !dbg !5532

land.lhs.true108:                                 ; preds = %if.else106
  %131 = load i32, i32* @verbose, align 4, !dbg !5532
  %cmp109 = icmp ugt i32 %131, 0, !dbg !5532
  br i1 %cmp109, label %if.then110, label %if.end112, !dbg !5530

if.then110:                                       ; preds = %land.lhs.true108
  %call111 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.143, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0)) #13, !dbg !5532
  br label %if.end112, !dbg !5532

if.end112:                                        ; preds = %if.then110, %land.lhs.true108, %if.else106
  br label %if.end113

if.end113:                                        ; preds = %if.end112, %if.then104
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.then98
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then92
  br label %do.end116, !dbg !5534

do.end116:                                        ; preds = %if.end115
  br label %err_remove, !dbg !5535

if.end117:                                        ; preds = %do.end84
  br label %if.end118

if.end118:                                        ; preds = %if.end117, %do.end
  %132 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5536
  %internal119 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %132, i32 0, i32 3, !dbg !5538
  %133 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal119, align 8, !dbg !5538
  %dev_ver120 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %133, i32 0, i32 5, !dbg !5539
  %134 = load i32, i32* %dev_ver120, align 4, !dbg !5539
  %cmp121 = icmp uge i32 %134, 48, !dbg !5540
  br i1 %cmp121, label %if.then122, label %if.end124, !dbg !5541

if.then122:                                       ; preds = %if.end118
  %135 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5542
  %frontend123 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %135, i32 0, i32 6, !dbg !5543
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend123, i32 0, i32 1, !dbg !5544
  %info = getelementptr inbounds %struct.dvb_frontend_ops, %struct.dvb_frontend_ops* %ops, i32 0, i32 0, !dbg !5545
  %caps = getelementptr inbounds %struct.dvb_frontend_internal_info, %struct.dvb_frontend_internal_info* %info, i32 0, i32 8, !dbg !5546
  %136 = load i32, i32* %caps, align 4, !dbg !5547
  %or = or i32 %136, 67108864, !dbg !5547
  store i32 %or, i32* %caps, align 4, !dbg !5547
  br label %if.end124, !dbg !5542

if.end124:                                        ; preds = %if.then122, %if.end118
  %137 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5548
  %config125 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %137, i32 0, i32 5, !dbg !5550
  %138 = load %struct.stv090x_config*, %struct.stv090x_config** %config125, align 8, !dbg !5550
  %diseqc_envelope_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %138, i32 0, i32 15, !dbg !5551
  %139 = load i8, i8* %diseqc_envelope_mode, align 4, !dbg !5551
  %tobool126 = trunc i8 %139 to i1, !dbg !5551
  br i1 %tobool126, label %if.then127, label %if.end130, !dbg !5552

if.then127:                                       ; preds = %if.end124
  %140 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5553
  %frontend128 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %140, i32 0, i32 6, !dbg !5554
  %call129 = call i32 @stv090x_send_diseqc_burst(%struct.dvb_frontend* %frontend128, i32 0) #9, !dbg !5555
  br label %if.end130, !dbg !5555

if.end130:                                        ; preds = %if.then127, %if.end124
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5556
  %config131 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %141, i32 0, i32 5, !dbg !5557
  %142 = load %struct.stv090x_config*, %struct.stv090x_config** %config131, align 8, !dbg !5557
  %set_gpio = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %142, i32 0, i32 28, !dbg !5558
  store i32 (%struct.dvb_frontend*, i8, i8, i8, i8)* @stv090x_set_gpio, i32 (%struct.dvb_frontend*, i8, i8, i8, i8)** %set_gpio, align 8, !dbg !5559
  br label %do.body132, !dbg !5560

do.body132:                                       ; preds = %if.end130
  %143 = load i32, i32* @verbose, align 4, !dbg !5561
  %cmp133 = icmp ugt i32 %143, 0, !dbg !5561
  br i1 %cmp133, label %land.lhs.true134, label %if.else142, !dbg !5561

land.lhs.true134:                                 ; preds = %do.body132
  %144 = load i32, i32* @verbose, align 4, !dbg !5561
  %cmp135 = icmp ugt i32 %144, 0, !dbg !5561
  br i1 %cmp135, label %if.then136, label %if.else142, !dbg !5566

if.then136:                                       ; preds = %land.lhs.true134
  %145 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5561
  %device = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %145, i32 0, i32 0, !dbg !5561
  %146 = load i32, i32* %device, align 8, !dbg !5561
  %cmp137 = icmp eq i32 %146, 1, !dbg !5561
  %147 = zext i1 %cmp137 to i64, !dbg !5561
  %cond = select i1 %cmp137, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5561
  %148 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5561
  %config138 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %148, i32 0, i32 5, !dbg !5561
  %149 = load %struct.stv090x_config*, %struct.stv090x_config** %config138, align 8, !dbg !5561
  %demod = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %149, i32 0, i32 3, !dbg !5561
  %150 = load i32, i32* %demod, align 4, !dbg !5561
  %151 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5561
  %internal139 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %151, i32 0, i32 3, !dbg !5561
  %152 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal139, align 8, !dbg !5561
  %dev_ver140 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %152, i32 0, i32 5, !dbg !5561
  %153 = load i32, i32* %dev_ver140, align 4, !dbg !5561
  %call141 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.144, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0), i8* %cond, i32 %150, i32 %153) #13, !dbg !5561
  br label %if.end184, !dbg !5561

if.else142:                                       ; preds = %land.lhs.true134, %do.body132
  %154 = load i32, i32* @verbose, align 4, !dbg !5567
  %cmp143 = icmp ugt i32 %154, 1, !dbg !5567
  br i1 %cmp143, label %land.lhs.true144, label %if.else155, !dbg !5567

land.lhs.true144:                                 ; preds = %if.else142
  %155 = load i32, i32* @verbose, align 4, !dbg !5567
  %cmp145 = icmp ugt i32 %155, 0, !dbg !5567
  br i1 %cmp145, label %if.then146, label %if.else155, !dbg !5561

if.then146:                                       ; preds = %land.lhs.true144
  %156 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5567
  %device147 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %156, i32 0, i32 0, !dbg !5567
  %157 = load i32, i32* %device147, align 8, !dbg !5567
  %cmp148 = icmp eq i32 %157, 1, !dbg !5567
  %158 = zext i1 %cmp148 to i64, !dbg !5567
  %cond149 = select i1 %cmp148, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5567
  %159 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5567
  %config150 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %159, i32 0, i32 5, !dbg !5567
  %160 = load %struct.stv090x_config*, %struct.stv090x_config** %config150, align 8, !dbg !5567
  %demod151 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %160, i32 0, i32 3, !dbg !5567
  %161 = load i32, i32* %demod151, align 4, !dbg !5567
  %162 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5567
  %internal152 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %162, i32 0, i32 3, !dbg !5567
  %163 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal152, align 8, !dbg !5567
  %dev_ver153 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %163, i32 0, i32 5, !dbg !5567
  %164 = load i32, i32* %dev_ver153, align 4, !dbg !5567
  %call154 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0), i8* %cond149, i32 %161, i32 %164) #13, !dbg !5567
  br label %if.end183, !dbg !5567

if.else155:                                       ; preds = %land.lhs.true144, %if.else142
  %165 = load i32, i32* @verbose, align 4, !dbg !5569
  %cmp156 = icmp ugt i32 %165, 2, !dbg !5569
  br i1 %cmp156, label %land.lhs.true157, label %if.else168, !dbg !5569

land.lhs.true157:                                 ; preds = %if.else155
  %166 = load i32, i32* @verbose, align 4, !dbg !5569
  %cmp158 = icmp ugt i32 %166, 0, !dbg !5569
  br i1 %cmp158, label %if.then159, label %if.else168, !dbg !5567

if.then159:                                       ; preds = %land.lhs.true157
  %167 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5569
  %device160 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %167, i32 0, i32 0, !dbg !5569
  %168 = load i32, i32* %device160, align 8, !dbg !5569
  %cmp161 = icmp eq i32 %168, 1, !dbg !5569
  %169 = zext i1 %cmp161 to i64, !dbg !5569
  %cond162 = select i1 %cmp161, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5569
  %170 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5569
  %config163 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %170, i32 0, i32 5, !dbg !5569
  %171 = load %struct.stv090x_config*, %struct.stv090x_config** %config163, align 8, !dbg !5569
  %demod164 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %171, i32 0, i32 3, !dbg !5569
  %172 = load i32, i32* %demod164, align 4, !dbg !5569
  %173 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5569
  %internal165 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %173, i32 0, i32 3, !dbg !5569
  %174 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal165, align 8, !dbg !5569
  %dev_ver166 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %174, i32 0, i32 5, !dbg !5569
  %175 = load i32, i32* %dev_ver166, align 4, !dbg !5569
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.146, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0), i8* %cond162, i32 %172, i32 %175) #13, !dbg !5569
  br label %if.end182, !dbg !5569

if.else168:                                       ; preds = %land.lhs.true157, %if.else155
  %176 = load i32, i32* @verbose, align 4, !dbg !5571
  %cmp169 = icmp ugt i32 %176, 3, !dbg !5571
  br i1 %cmp169, label %land.lhs.true170, label %if.end181, !dbg !5571

land.lhs.true170:                                 ; preds = %if.else168
  %177 = load i32, i32* @verbose, align 4, !dbg !5571
  %cmp171 = icmp ugt i32 %177, 0, !dbg !5571
  br i1 %cmp171, label %if.then172, label %if.end181, !dbg !5569

if.then172:                                       ; preds = %land.lhs.true170
  %178 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5571
  %device173 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %178, i32 0, i32 0, !dbg !5571
  %179 = load i32, i32* %device173, align 8, !dbg !5571
  %cmp174 = icmp eq i32 %179, 1, !dbg !5571
  %180 = zext i1 %cmp174 to i64, !dbg !5571
  %cond175 = select i1 %cmp174, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5571
  %181 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5571
  %config176 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %181, i32 0, i32 5, !dbg !5571
  %182 = load %struct.stv090x_config*, %struct.stv090x_config** %config176, align 8, !dbg !5571
  %demod177 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %182, i32 0, i32 3, !dbg !5571
  %183 = load i32, i32* %demod177, align 4, !dbg !5571
  %184 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5571
  %internal178 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %184, i32 0, i32 3, !dbg !5571
  %185 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal178, align 8, !dbg !5571
  %dev_ver179 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %185, i32 0, i32 5, !dbg !5571
  %186 = load i32, i32* %dev_ver179, align 4, !dbg !5571
  %call180 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_setup_compound, i64 0, i64 0), i8* %cond175, i32 %183, i32 %186) #13, !dbg !5571
  br label %if.end181, !dbg !5571

if.end181:                                        ; preds = %if.then172, %land.lhs.true170, %if.else168
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then159
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then146
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then136
  br label %do.end185, !dbg !5573

do.end185:                                        ; preds = %if.end184
  store i32 0, i32* %retval, align 4, !dbg !5574
  br label %return, !dbg !5574

error:                                            ; preds = %if.then38, %if.then33
  call void @llvm.dbg.label(metadata !5575), !dbg !5576
  store i32 -12, i32* %retval, align 4, !dbg !5577
  br label %return, !dbg !5577

err_remove:                                       ; preds = %do.end116
  call void @llvm.dbg.label(metadata !5578), !dbg !5579
  %187 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5580
  %internal186 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %187, i32 0, i32 3, !dbg !5581
  %188 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal186, align 8, !dbg !5581
  call void @remove_dev(%struct.stv090x_internal* %188) #9, !dbg !5582
  %189 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !5583
  %internal187 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %189, i32 0, i32 3, !dbg !5584
  %190 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal187, align 8, !dbg !5584
  %191 = bitcast %struct.stv090x_internal* %190 to i8*, !dbg !5583
  call void @kfree(i8* %191) #9, !dbg !5585
  store i32 -19, i32* %retval, align 4, !dbg !5586
  br label %return, !dbg !5586

return:                                           ; preds = %err_remove, %error, %do.end185
  %192 = load i32, i32* %retval, align 4, !dbg !5587
  ret i32 %192, !dbg !5587
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_driver_init() #4 section ".init.text" !dbg !5588 {
entry:
  %call = call i32 @i2c_register_driver(%struct.module* null, %struct.i2c_driver* @stv090x_driver) #9, !dbg !5591
  ret i32 %call, !dbg !5591
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal void @stv090x_driver_exit() #4 section ".exit.text" !dbg !5592 {
entry:
  call void @i2c_del_driver(%struct.i2c_driver* @stv090x_driver) #9, !dbg !5593
  ret void, !dbg !5593
}

; Function Attrs: noredzone
declare dso_local void @i2c_del_driver(%struct.i2c_driver*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !5594 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5598, metadata !DIExpression()), !dbg !5603
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5605, metadata !DIExpression()), !dbg !5606
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5607, metadata !DIExpression()), !dbg !5608
  %0 = load i64, i64* %size.addr, align 8, !dbg !5609
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !5611
  br i1 %1, label %if.then, label %if.end447, !dbg !5612

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !5613
  %tobool = icmp ne i64 %2, 0, !dbg !5613
  br i1 %tobool, label %if.end, label %if.then1, !dbg !5616

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !5617
  br label %return, !dbg !5617

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !5618
  %cmp = icmp ult i64 %3, 4096, !dbg !5620
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5621

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5622
  br label %return, !dbg !5622

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub = sub i64 %4, 1, !dbg !5623
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !5623
  br i1 %5, label %cond.true, label %cond.false442, !dbg !5623

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub4 = sub i64 %6, 1, !dbg !5623
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !5623
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !5623

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub6 = sub i64 %8, 1, !dbg !5623
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !5623
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !5623

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !5623

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub9 = sub i64 %9, 1, !dbg !5623
  %and = and i64 %sub9, -9223372036854775808, !dbg !5623
  %tobool10 = icmp ne i64 %and, 0, !dbg !5623
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !5623

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !5623

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub13 = sub i64 %10, 1, !dbg !5623
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !5623
  %tobool15 = icmp ne i64 %and14, 0, !dbg !5623
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !5623

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !5623

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub18 = sub i64 %11, 1, !dbg !5623
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !5623
  %tobool20 = icmp ne i64 %and19, 0, !dbg !5623
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !5623

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !5623

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub23 = sub i64 %12, 1, !dbg !5623
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !5623
  %tobool25 = icmp ne i64 %and24, 0, !dbg !5623
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !5623

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !5623

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub28 = sub i64 %13, 1, !dbg !5623
  %and29 = and i64 %sub28, 576460752303423488, !dbg !5623
  %tobool30 = icmp ne i64 %and29, 0, !dbg !5623
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !5623

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !5623

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub33 = sub i64 %14, 1, !dbg !5623
  %and34 = and i64 %sub33, 288230376151711744, !dbg !5623
  %tobool35 = icmp ne i64 %and34, 0, !dbg !5623
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !5623

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !5623

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub38 = sub i64 %15, 1, !dbg !5623
  %and39 = and i64 %sub38, 144115188075855872, !dbg !5623
  %tobool40 = icmp ne i64 %and39, 0, !dbg !5623
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !5623

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !5623

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub43 = sub i64 %16, 1, !dbg !5623
  %and44 = and i64 %sub43, 72057594037927936, !dbg !5623
  %tobool45 = icmp ne i64 %and44, 0, !dbg !5623
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !5623

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !5623

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub48 = sub i64 %17, 1, !dbg !5623
  %and49 = and i64 %sub48, 36028797018963968, !dbg !5623
  %tobool50 = icmp ne i64 %and49, 0, !dbg !5623
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !5623

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !5623

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub53 = sub i64 %18, 1, !dbg !5623
  %and54 = and i64 %sub53, 18014398509481984, !dbg !5623
  %tobool55 = icmp ne i64 %and54, 0, !dbg !5623
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !5623

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !5623

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub58 = sub i64 %19, 1, !dbg !5623
  %and59 = and i64 %sub58, 9007199254740992, !dbg !5623
  %tobool60 = icmp ne i64 %and59, 0, !dbg !5623
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !5623

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !5623

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub63 = sub i64 %20, 1, !dbg !5623
  %and64 = and i64 %sub63, 4503599627370496, !dbg !5623
  %tobool65 = icmp ne i64 %and64, 0, !dbg !5623
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !5623

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !5623

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub68 = sub i64 %21, 1, !dbg !5623
  %and69 = and i64 %sub68, 2251799813685248, !dbg !5623
  %tobool70 = icmp ne i64 %and69, 0, !dbg !5623
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !5623

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !5623

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub73 = sub i64 %22, 1, !dbg !5623
  %and74 = and i64 %sub73, 1125899906842624, !dbg !5623
  %tobool75 = icmp ne i64 %and74, 0, !dbg !5623
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !5623

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !5623

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub78 = sub i64 %23, 1, !dbg !5623
  %and79 = and i64 %sub78, 562949953421312, !dbg !5623
  %tobool80 = icmp ne i64 %and79, 0, !dbg !5623
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !5623

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !5623

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub83 = sub i64 %24, 1, !dbg !5623
  %and84 = and i64 %sub83, 281474976710656, !dbg !5623
  %tobool85 = icmp ne i64 %and84, 0, !dbg !5623
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !5623

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !5623

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub88 = sub i64 %25, 1, !dbg !5623
  %and89 = and i64 %sub88, 140737488355328, !dbg !5623
  %tobool90 = icmp ne i64 %and89, 0, !dbg !5623
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !5623

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !5623

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub93 = sub i64 %26, 1, !dbg !5623
  %and94 = and i64 %sub93, 70368744177664, !dbg !5623
  %tobool95 = icmp ne i64 %and94, 0, !dbg !5623
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !5623

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !5623

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub98 = sub i64 %27, 1, !dbg !5623
  %and99 = and i64 %sub98, 35184372088832, !dbg !5623
  %tobool100 = icmp ne i64 %and99, 0, !dbg !5623
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !5623

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !5623

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub103 = sub i64 %28, 1, !dbg !5623
  %and104 = and i64 %sub103, 17592186044416, !dbg !5623
  %tobool105 = icmp ne i64 %and104, 0, !dbg !5623
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !5623

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !5623

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub108 = sub i64 %29, 1, !dbg !5623
  %and109 = and i64 %sub108, 8796093022208, !dbg !5623
  %tobool110 = icmp ne i64 %and109, 0, !dbg !5623
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !5623

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !5623

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub113 = sub i64 %30, 1, !dbg !5623
  %and114 = and i64 %sub113, 4398046511104, !dbg !5623
  %tobool115 = icmp ne i64 %and114, 0, !dbg !5623
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !5623

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !5623

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub118 = sub i64 %31, 1, !dbg !5623
  %and119 = and i64 %sub118, 2199023255552, !dbg !5623
  %tobool120 = icmp ne i64 %and119, 0, !dbg !5623
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !5623

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !5623

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub123 = sub i64 %32, 1, !dbg !5623
  %and124 = and i64 %sub123, 1099511627776, !dbg !5623
  %tobool125 = icmp ne i64 %and124, 0, !dbg !5623
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !5623

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !5623

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub128 = sub i64 %33, 1, !dbg !5623
  %and129 = and i64 %sub128, 549755813888, !dbg !5623
  %tobool130 = icmp ne i64 %and129, 0, !dbg !5623
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !5623

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !5623

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub133 = sub i64 %34, 1, !dbg !5623
  %and134 = and i64 %sub133, 274877906944, !dbg !5623
  %tobool135 = icmp ne i64 %and134, 0, !dbg !5623
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !5623

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !5623

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub138 = sub i64 %35, 1, !dbg !5623
  %and139 = and i64 %sub138, 137438953472, !dbg !5623
  %tobool140 = icmp ne i64 %and139, 0, !dbg !5623
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !5623

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !5623

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub143 = sub i64 %36, 1, !dbg !5623
  %and144 = and i64 %sub143, 68719476736, !dbg !5623
  %tobool145 = icmp ne i64 %and144, 0, !dbg !5623
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !5623

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !5623

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub148 = sub i64 %37, 1, !dbg !5623
  %and149 = and i64 %sub148, 34359738368, !dbg !5623
  %tobool150 = icmp ne i64 %and149, 0, !dbg !5623
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !5623

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !5623

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub153 = sub i64 %38, 1, !dbg !5623
  %and154 = and i64 %sub153, 17179869184, !dbg !5623
  %tobool155 = icmp ne i64 %and154, 0, !dbg !5623
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !5623

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !5623

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub158 = sub i64 %39, 1, !dbg !5623
  %and159 = and i64 %sub158, 8589934592, !dbg !5623
  %tobool160 = icmp ne i64 %and159, 0, !dbg !5623
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !5623

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !5623

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub163 = sub i64 %40, 1, !dbg !5623
  %and164 = and i64 %sub163, 4294967296, !dbg !5623
  %tobool165 = icmp ne i64 %and164, 0, !dbg !5623
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !5623

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !5623

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub168 = sub i64 %41, 1, !dbg !5623
  %and169 = and i64 %sub168, 2147483648, !dbg !5623
  %tobool170 = icmp ne i64 %and169, 0, !dbg !5623
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !5623

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !5623

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub173 = sub i64 %42, 1, !dbg !5623
  %and174 = and i64 %sub173, 1073741824, !dbg !5623
  %tobool175 = icmp ne i64 %and174, 0, !dbg !5623
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !5623

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !5623

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub178 = sub i64 %43, 1, !dbg !5623
  %and179 = and i64 %sub178, 536870912, !dbg !5623
  %tobool180 = icmp ne i64 %and179, 0, !dbg !5623
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !5623

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !5623

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub183 = sub i64 %44, 1, !dbg !5623
  %and184 = and i64 %sub183, 268435456, !dbg !5623
  %tobool185 = icmp ne i64 %and184, 0, !dbg !5623
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !5623

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !5623

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub188 = sub i64 %45, 1, !dbg !5623
  %and189 = and i64 %sub188, 134217728, !dbg !5623
  %tobool190 = icmp ne i64 %and189, 0, !dbg !5623
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !5623

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !5623

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub193 = sub i64 %46, 1, !dbg !5623
  %and194 = and i64 %sub193, 67108864, !dbg !5623
  %tobool195 = icmp ne i64 %and194, 0, !dbg !5623
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !5623

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !5623

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub198 = sub i64 %47, 1, !dbg !5623
  %and199 = and i64 %sub198, 33554432, !dbg !5623
  %tobool200 = icmp ne i64 %and199, 0, !dbg !5623
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !5623

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !5623

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub203 = sub i64 %48, 1, !dbg !5623
  %and204 = and i64 %sub203, 16777216, !dbg !5623
  %tobool205 = icmp ne i64 %and204, 0, !dbg !5623
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !5623

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !5623

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub208 = sub i64 %49, 1, !dbg !5623
  %and209 = and i64 %sub208, 8388608, !dbg !5623
  %tobool210 = icmp ne i64 %and209, 0, !dbg !5623
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !5623

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !5623

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub213 = sub i64 %50, 1, !dbg !5623
  %and214 = and i64 %sub213, 4194304, !dbg !5623
  %tobool215 = icmp ne i64 %and214, 0, !dbg !5623
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !5623

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !5623

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub218 = sub i64 %51, 1, !dbg !5623
  %and219 = and i64 %sub218, 2097152, !dbg !5623
  %tobool220 = icmp ne i64 %and219, 0, !dbg !5623
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !5623

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !5623

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub223 = sub i64 %52, 1, !dbg !5623
  %and224 = and i64 %sub223, 1048576, !dbg !5623
  %tobool225 = icmp ne i64 %and224, 0, !dbg !5623
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !5623

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !5623

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub228 = sub i64 %53, 1, !dbg !5623
  %and229 = and i64 %sub228, 524288, !dbg !5623
  %tobool230 = icmp ne i64 %and229, 0, !dbg !5623
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !5623

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !5623

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub233 = sub i64 %54, 1, !dbg !5623
  %and234 = and i64 %sub233, 262144, !dbg !5623
  %tobool235 = icmp ne i64 %and234, 0, !dbg !5623
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !5623

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !5623

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub238 = sub i64 %55, 1, !dbg !5623
  %and239 = and i64 %sub238, 131072, !dbg !5623
  %tobool240 = icmp ne i64 %and239, 0, !dbg !5623
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !5623

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !5623

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub243 = sub i64 %56, 1, !dbg !5623
  %and244 = and i64 %sub243, 65536, !dbg !5623
  %tobool245 = icmp ne i64 %and244, 0, !dbg !5623
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !5623

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !5623

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub248 = sub i64 %57, 1, !dbg !5623
  %and249 = and i64 %sub248, 32768, !dbg !5623
  %tobool250 = icmp ne i64 %and249, 0, !dbg !5623
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !5623

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !5623

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub253 = sub i64 %58, 1, !dbg !5623
  %and254 = and i64 %sub253, 16384, !dbg !5623
  %tobool255 = icmp ne i64 %and254, 0, !dbg !5623
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !5623

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !5623

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub258 = sub i64 %59, 1, !dbg !5623
  %and259 = and i64 %sub258, 8192, !dbg !5623
  %tobool260 = icmp ne i64 %and259, 0, !dbg !5623
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !5623

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !5623

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub263 = sub i64 %60, 1, !dbg !5623
  %and264 = and i64 %sub263, 4096, !dbg !5623
  %tobool265 = icmp ne i64 %and264, 0, !dbg !5623
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !5623

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !5623

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub268 = sub i64 %61, 1, !dbg !5623
  %and269 = and i64 %sub268, 2048, !dbg !5623
  %tobool270 = icmp ne i64 %and269, 0, !dbg !5623
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !5623

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !5623

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub273 = sub i64 %62, 1, !dbg !5623
  %and274 = and i64 %sub273, 1024, !dbg !5623
  %tobool275 = icmp ne i64 %and274, 0, !dbg !5623
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !5623

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !5623

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub278 = sub i64 %63, 1, !dbg !5623
  %and279 = and i64 %sub278, 512, !dbg !5623
  %tobool280 = icmp ne i64 %and279, 0, !dbg !5623
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !5623

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !5623

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub283 = sub i64 %64, 1, !dbg !5623
  %and284 = and i64 %sub283, 256, !dbg !5623
  %tobool285 = icmp ne i64 %and284, 0, !dbg !5623
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !5623

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !5623

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub288 = sub i64 %65, 1, !dbg !5623
  %and289 = and i64 %sub288, 128, !dbg !5623
  %tobool290 = icmp ne i64 %and289, 0, !dbg !5623
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !5623

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !5623

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub293 = sub i64 %66, 1, !dbg !5623
  %and294 = and i64 %sub293, 64, !dbg !5623
  %tobool295 = icmp ne i64 %and294, 0, !dbg !5623
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !5623

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !5623

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub298 = sub i64 %67, 1, !dbg !5623
  %and299 = and i64 %sub298, 32, !dbg !5623
  %tobool300 = icmp ne i64 %and299, 0, !dbg !5623
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !5623

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !5623

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub303 = sub i64 %68, 1, !dbg !5623
  %and304 = and i64 %sub303, 16, !dbg !5623
  %tobool305 = icmp ne i64 %and304, 0, !dbg !5623
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !5623

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !5623

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub308 = sub i64 %69, 1, !dbg !5623
  %and309 = and i64 %sub308, 8, !dbg !5623
  %tobool310 = icmp ne i64 %and309, 0, !dbg !5623
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !5623

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !5623

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub313 = sub i64 %70, 1, !dbg !5623
  %and314 = and i64 %sub313, 4, !dbg !5623
  %tobool315 = icmp ne i64 %and314, 0, !dbg !5623
  %71 = zext i1 %tobool315 to i64, !dbg !5623
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !5623
  br label %cond.end, !dbg !5623

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !5623
  br label %cond.end317, !dbg !5623

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !5623
  br label %cond.end319, !dbg !5623

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !5623
  br label %cond.end321, !dbg !5623

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !5623
  br label %cond.end323, !dbg !5623

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !5623
  br label %cond.end325, !dbg !5623

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !5623
  br label %cond.end327, !dbg !5623

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !5623
  br label %cond.end329, !dbg !5623

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !5623
  br label %cond.end331, !dbg !5623

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !5623
  br label %cond.end333, !dbg !5623

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !5623
  br label %cond.end335, !dbg !5623

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !5623
  br label %cond.end337, !dbg !5623

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !5623
  br label %cond.end339, !dbg !5623

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !5623
  br label %cond.end341, !dbg !5623

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !5623
  br label %cond.end343, !dbg !5623

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !5623
  br label %cond.end345, !dbg !5623

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !5623
  br label %cond.end347, !dbg !5623

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !5623
  br label %cond.end349, !dbg !5623

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !5623
  br label %cond.end351, !dbg !5623

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !5623
  br label %cond.end353, !dbg !5623

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !5623
  br label %cond.end355, !dbg !5623

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !5623
  br label %cond.end357, !dbg !5623

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !5623
  br label %cond.end359, !dbg !5623

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !5623
  br label %cond.end361, !dbg !5623

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !5623
  br label %cond.end363, !dbg !5623

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !5623
  br label %cond.end365, !dbg !5623

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !5623
  br label %cond.end367, !dbg !5623

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !5623
  br label %cond.end369, !dbg !5623

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !5623
  br label %cond.end371, !dbg !5623

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !5623
  br label %cond.end373, !dbg !5623

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !5623
  br label %cond.end375, !dbg !5623

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !5623
  br label %cond.end377, !dbg !5623

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !5623
  br label %cond.end379, !dbg !5623

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !5623
  br label %cond.end381, !dbg !5623

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !5623
  br label %cond.end383, !dbg !5623

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !5623
  br label %cond.end385, !dbg !5623

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !5623
  br label %cond.end387, !dbg !5623

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !5623
  br label %cond.end389, !dbg !5623

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !5623
  br label %cond.end391, !dbg !5623

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !5623
  br label %cond.end393, !dbg !5623

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !5623
  br label %cond.end395, !dbg !5623

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !5623
  br label %cond.end397, !dbg !5623

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !5623
  br label %cond.end399, !dbg !5623

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !5623
  br label %cond.end401, !dbg !5623

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !5623
  br label %cond.end403, !dbg !5623

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !5623
  br label %cond.end405, !dbg !5623

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !5623
  br label %cond.end407, !dbg !5623

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !5623
  br label %cond.end409, !dbg !5623

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !5623
  br label %cond.end411, !dbg !5623

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !5623
  br label %cond.end413, !dbg !5623

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !5623
  br label %cond.end415, !dbg !5623

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !5623
  br label %cond.end417, !dbg !5623

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !5623
  br label %cond.end419, !dbg !5623

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !5623
  br label %cond.end421, !dbg !5623

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !5623
  br label %cond.end423, !dbg !5623

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !5623
  br label %cond.end425, !dbg !5623

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !5623
  br label %cond.end427, !dbg !5623

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !5623
  br label %cond.end429, !dbg !5623

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !5623
  br label %cond.end431, !dbg !5623

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !5623
  br label %cond.end433, !dbg !5623

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !5623
  br label %cond.end435, !dbg !5623

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !5623
  br label %cond.end437, !dbg !5623

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !5623
  br label %cond.end440, !dbg !5623

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !5623

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !5623
  br label %cond.end444, !dbg !5623

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !5623
  %sub443 = sub i64 %72, 1, !dbg !5623
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !5623
  br label %cond.end444, !dbg !5623

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !5623
  %sub446 = sub i32 %cond445, 12, !dbg !5624
  %add = add i32 %sub446, 1, !dbg !5625
  store i32 %add, i32* %retval, align 4, !dbg !5626
  br label %return, !dbg !5626

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !5627
  %dec = add i64 %73, -1, !dbg !5627
  store i64 %dec, i64* %size.addr, align 8, !dbg !5627
  %74 = load i64, i64* %size.addr, align 8, !dbg !5628
  %shr = lshr i64 %74, 12, !dbg !5628
  store i64 %shr, i64* %size.addr, align 8, !dbg !5628
  %75 = load i64, i64* %size.addr, align 8, !dbg !5629
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5606
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !5630
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !5631
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !5630, !srcloc !5632
  store i32 %78, i32* %bitpos.i, align 4, !dbg !5630
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !5633
  %add.i = add i32 %79, 1, !dbg !5634
  store i32 %add.i, i32* %retval, align 4, !dbg !5635
  br label %return, !dbg !5635

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !5636
  ret i32 %80, !dbg !5636
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !5637 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !5598, metadata !DIExpression()), !dbg !5641
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !5605, metadata !DIExpression()), !dbg !5643
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !5644, metadata !DIExpression()), !dbg !5645
  %0 = load i64, i64* %n.addr, align 8, !dbg !5646
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !5643
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !5647
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !5648
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !5647, !srcloc !5632
  store i32 %3, i32* %bitpos.i, align 4, !dbg !5647
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !5649
  %add.i = add i32 %4, 1, !dbg !5650
  %sub = sub i32 %add.i, 1, !dbg !5651
  ret i32 %sub, !dbg !5652
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !5653 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !5657, metadata !DIExpression()), !dbg !5658
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !5659, metadata !DIExpression()), !dbg !5660
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5661, metadata !DIExpression()), !dbg !5662
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5663, metadata !DIExpression()), !dbg !5664
  %0 = load i8*, i8** %object.addr, align 8, !dbg !5665
  ret i8* %0, !dbg !5666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stv090x_release(%struct.dvb_frontend* %fe) #0 !dbg !5667 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5668, metadata !DIExpression()), !dbg !5669
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !5670, metadata !DIExpression()), !dbg !5671
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5672
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5673
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5673
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !5672
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !5671
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5674
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 3, !dbg !5675
  %4 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !5675
  %num_used = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %4, i32 0, i32 6, !dbg !5676
  %5 = load i32, i32* %num_used, align 8, !dbg !5677
  %dec = add i32 %5, -1, !dbg !5677
  store i32 %dec, i32* %num_used, align 8, !dbg !5677
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5678
  %internal1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 3, !dbg !5680
  %7 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal1, align 8, !dbg !5680
  %num_used2 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %7, i32 0, i32 6, !dbg !5681
  %8 = load i32, i32* %num_used2, align 8, !dbg !5681
  %cmp = icmp sle i32 %8, 0, !dbg !5682
  br i1 %cmp, label %if.then, label %if.end28, !dbg !5683

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !5684

do.body:                                          ; preds = %if.then
  %9 = load i32, i32* @verbose, align 4, !dbg !5686
  %cmp3 = icmp ugt i32 %9, 0, !dbg !5686
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !5686

land.lhs.true:                                    ; preds = %do.body
  %10 = load i32, i32* @verbose, align 4, !dbg !5686
  %cmp4 = icmp ugt i32 %10, 0, !dbg !5686
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !5691

if.then5:                                         ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_release, i64 0, i64 0)) #13, !dbg !5686
  br label %if.end25, !dbg !5686

if.else:                                          ; preds = %land.lhs.true, %do.body
  %11 = load i32, i32* @verbose, align 4, !dbg !5692
  %cmp6 = icmp ugt i32 %11, 1, !dbg !5692
  br i1 %cmp6, label %land.lhs.true7, label %if.else11, !dbg !5692

land.lhs.true7:                                   ; preds = %if.else
  %12 = load i32, i32* @verbose, align 4, !dbg !5692
  %cmp8 = icmp ugt i32 %12, 0, !dbg !5692
  br i1 %cmp8, label %if.then9, label %if.else11, !dbg !5686

if.then9:                                         ; preds = %land.lhs.true7
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_release, i64 0, i64 0)) #13, !dbg !5692
  br label %if.end24, !dbg !5692

if.else11:                                        ; preds = %land.lhs.true7, %if.else
  %13 = load i32, i32* @verbose, align 4, !dbg !5694
  %cmp12 = icmp ugt i32 %13, 2, !dbg !5694
  br i1 %cmp12, label %land.lhs.true13, label %if.else17, !dbg !5694

land.lhs.true13:                                  ; preds = %if.else11
  %14 = load i32, i32* @verbose, align 4, !dbg !5694
  %cmp14 = icmp ugt i32 %14, 0, !dbg !5694
  br i1 %cmp14, label %if.then15, label %if.else17, !dbg !5692

if.then15:                                        ; preds = %land.lhs.true13
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_release, i64 0, i64 0)) #13, !dbg !5694
  br label %if.end23, !dbg !5694

if.else17:                                        ; preds = %land.lhs.true13, %if.else11
  %15 = load i32, i32* @verbose, align 4, !dbg !5696
  %cmp18 = icmp ugt i32 %15, 3, !dbg !5696
  br i1 %cmp18, label %land.lhs.true19, label %if.end, !dbg !5696

land.lhs.true19:                                  ; preds = %if.else17
  %16 = load i32, i32* @verbose, align 4, !dbg !5696
  %cmp20 = icmp ugt i32 %16, 0, !dbg !5696
  br i1 %cmp20, label %if.then21, label %if.end, !dbg !5694

if.then21:                                        ; preds = %land.lhs.true19
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_release, i64 0, i64 0)) #13, !dbg !5696
  br label %if.end, !dbg !5696

if.end:                                           ; preds = %if.then21, %land.lhs.true19, %if.else17
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then15
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then9
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then5
  br label %do.end, !dbg !5698

do.end:                                           ; preds = %if.end25
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5699
  %internal26 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 3, !dbg !5700
  %18 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal26, align 8, !dbg !5700
  call void @remove_dev(%struct.stv090x_internal* %18) #9, !dbg !5701
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5702
  %internal27 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 3, !dbg !5703
  %20 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal27, align 8, !dbg !5703
  %21 = bitcast %struct.stv090x_internal* %20 to i8*, !dbg !5702
  call void @kfree(i8* %21) #9, !dbg !5704
  br label %if.end28, !dbg !5705

if.end28:                                         ; preds = %do.end, %entry
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5706
  %23 = bitcast %struct.stv090x_state* %22 to i8*, !dbg !5706
  call void @kfree(i8* %23) #9, !dbg !5707
  ret void, !dbg !5708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_init(%struct.dvb_frontend* %fe) #0 !dbg !5709 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %config = alloca %struct.stv090x_config*, align 8
  %reg = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5710, metadata !DIExpression()), !dbg !5711
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !5712, metadata !DIExpression()), !dbg !5713
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5714
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5715
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5715
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !5714
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !5713
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !5716, metadata !DIExpression()), !dbg !5719
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5720
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 5, !dbg !5721
  %4 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !5721
  store %struct.stv090x_config* %4, %struct.stv090x_config** %config, align 8, !dbg !5719
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !5722, metadata !DIExpression()), !dbg !5723
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5724
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 3, !dbg !5726
  %6 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !5726
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %6, i32 0, i32 4, !dbg !5727
  %7 = load i32, i32* %mclk, align 8, !dbg !5727
  %cmp = icmp eq i32 %7, 0, !dbg !5728
  br i1 %cmp, label %if.then, label %if.end22, !dbg !5729

if.then:                                          ; preds = %entry
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5730
  %call = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %8, i32 1) #9, !dbg !5733
  %cmp2 = icmp slt i32 %call, 0, !dbg !5734
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !5735

if.then3:                                         ; preds = %if.then
  br label %err, !dbg !5736

if.end:                                           ; preds = %if.then
  %9 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5737
  %tuner_init = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %9, i32 0, i32 16, !dbg !5739
  %10 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %tuner_init, align 8, !dbg !5739
  %tobool = icmp ne i32 (%struct.dvb_frontend*)* %10, null, !dbg !5737
  br i1 %tobool, label %if.then4, label %if.end10, !dbg !5740

if.then4:                                         ; preds = %if.end
  %11 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5741
  %tuner_init5 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %11, i32 0, i32 16, !dbg !5744
  %12 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %tuner_init5, align 8, !dbg !5744
  %13 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5745
  %call6 = call i32 %12(%struct.dvb_frontend* %13) #9, !dbg !5741
  %cmp7 = icmp slt i32 %call6, 0, !dbg !5746
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !5747

if.then8:                                         ; preds = %if.then4
  br label %err_gateoff, !dbg !5748

if.end9:                                          ; preds = %if.then4
  br label %if.end10, !dbg !5749

if.end10:                                         ; preds = %if.end9, %if.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5750
  %call11 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %14, i32 0) #9, !dbg !5752
  %cmp12 = icmp slt i32 %call11, 0, !dbg !5753
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !5754

if.then13:                                        ; preds = %if.end10
  br label %err, !dbg !5755

if.end14:                                         ; preds = %if.end10
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5756
  %16 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5757
  %xtal = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %16, i32 0, i32 4, !dbg !5758
  %17 = load i32, i32* %xtal, align 8, !dbg !5758
  %call15 = call i32 @stv090x_set_mclk(%struct.stv090x_state* %15, i32 135000000, i32 %17) #9, !dbg !5759
  call void @msleep(i32 5) #9, !dbg !5760
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5761
  %19 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5763
  %clk_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %19, i32 0, i32 2, !dbg !5764
  %20 = load i32, i32* %clk_mode, align 8, !dbg !5764
  %or = or i32 32, %20, !dbg !5765
  %conv = trunc i32 %or to i8, !dbg !5766
  %call16 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 61878, i8 zeroext %conv) #9, !dbg !5767
  %cmp17 = icmp slt i32 %call16, 0, !dbg !5768
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5769

if.then19:                                        ; preds = %if.end14
  br label %err, !dbg !5770

if.end20:                                         ; preds = %if.end14
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5771
  %call21 = call i32 @stv090x_get_mclk(%struct.stv090x_state* %21) #9, !dbg !5772
  br label %if.end22, !dbg !5773

if.end22:                                         ; preds = %if.end20, %entry
  %22 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5774
  %call23 = call i32 @stv090x_wakeup(%struct.dvb_frontend* %22) #9, !dbg !5776
  %cmp24 = icmp slt i32 %call23, 0, !dbg !5777
  br i1 %cmp24, label %if.then26, label %if.end60, !dbg !5778

if.then26:                                        ; preds = %if.end22
  br label %do.body, !dbg !5779

do.body:                                          ; preds = %if.then26
  %23 = load i32, i32* @verbose, align 4, !dbg !5781
  %cmp27 = icmp ugt i32 %23, 0, !dbg !5781
  br i1 %cmp27, label %land.lhs.true, label %if.else, !dbg !5781

land.lhs.true:                                    ; preds = %do.body
  %24 = load i32, i32* @verbose, align 4, !dbg !5781
  %cmp29 = icmp ugt i32 %24, 0, !dbg !5781
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !5786

if.then31:                                        ; preds = %land.lhs.true
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5781
  br label %if.end59, !dbg !5781

if.else:                                          ; preds = %land.lhs.true, %do.body
  %25 = load i32, i32* @verbose, align 4, !dbg !5787
  %cmp33 = icmp ugt i32 %25, 1, !dbg !5787
  br i1 %cmp33, label %land.lhs.true35, label %if.else40, !dbg !5787

land.lhs.true35:                                  ; preds = %if.else
  %26 = load i32, i32* @verbose, align 4, !dbg !5787
  %cmp36 = icmp ugt i32 %26, 0, !dbg !5787
  br i1 %cmp36, label %if.then38, label %if.else40, !dbg !5781

if.then38:                                        ; preds = %land.lhs.true35
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5787
  br label %if.end58, !dbg !5787

if.else40:                                        ; preds = %land.lhs.true35, %if.else
  %27 = load i32, i32* @verbose, align 4, !dbg !5789
  %cmp41 = icmp ugt i32 %27, 2, !dbg !5789
  br i1 %cmp41, label %land.lhs.true43, label %if.else48, !dbg !5789

land.lhs.true43:                                  ; preds = %if.else40
  %28 = load i32, i32* @verbose, align 4, !dbg !5789
  %cmp44 = icmp ugt i32 %28, 0, !dbg !5789
  br i1 %cmp44, label %if.then46, label %if.else48, !dbg !5787

if.then46:                                        ; preds = %land.lhs.true43
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5789
  br label %if.end57, !dbg !5789

if.else48:                                        ; preds = %land.lhs.true43, %if.else40
  %29 = load i32, i32* @verbose, align 4, !dbg !5791
  %cmp49 = icmp ugt i32 %29, 3, !dbg !5791
  br i1 %cmp49, label %land.lhs.true51, label %if.end56, !dbg !5791

land.lhs.true51:                                  ; preds = %if.else48
  %30 = load i32, i32* @verbose, align 4, !dbg !5791
  %cmp52 = icmp ugt i32 %30, 0, !dbg !5791
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !5789

if.then54:                                        ; preds = %land.lhs.true51
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5791
  br label %if.end56, !dbg !5791

if.end56:                                         ; preds = %if.then54, %land.lhs.true51, %if.else48
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.then46
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then38
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then31
  br label %do.end, !dbg !5793

do.end:                                           ; preds = %if.end59
  br label %err, !dbg !5794

if.end60:                                         ; preds = %if.end22
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5795
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5797
  %demod_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 2, !dbg !5798
  %33 = load i32, i32* %demod_mode, align 8, !dbg !5798
  %call61 = call i32 @stv090x_ldpc_mode(%struct.stv090x_state* %31, i32 %33) #9, !dbg !5799
  %cmp62 = icmp slt i32 %call61, 0, !dbg !5800
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5801

if.then64:                                        ; preds = %if.end60
  br label %err, !dbg !5802

if.end65:                                         ; preds = %if.end60
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5803
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %34, i32 0, i32 1, !dbg !5803
  %35 = load i32, i32* %demod, align 4, !dbg !5803
  %cmp66 = icmp eq i32 %35, 2, !dbg !5803
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !5803

cond.true:                                        ; preds = %if.end65
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5803
  %call68 = call i32 @stv090x_read_reg(%struct.stv090x_state* %36, i32 62177) #9, !dbg !5803
  br label %cond.end, !dbg !5803

cond.false:                                       ; preds = %if.end65
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5803
  %call69 = call i32 @stv090x_read_reg(%struct.stv090x_state* %37, i32 62689) #9, !dbg !5803
  br label %cond.end, !dbg !5803

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call68, %cond.true ], [ %call69, %cond.false ], !dbg !5803
  store i32 %cond, i32* %reg, align 4, !dbg !5804
  %38 = load i32, i32* %reg, align 4, !dbg !5805
  %and = and i32 %38, -129, !dbg !5805
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5805
  %inversion = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 16, !dbg !5805
  %40 = load i32, i32* %inversion, align 8, !dbg !5805
  %shl = shl i32 %40, 7, !dbg !5805
  %or70 = or i32 %and, %shl, !dbg !5805
  store i32 %or70, i32* %reg, align 4, !dbg !5805
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5806
  %demod71 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %41, i32 0, i32 1, !dbg !5806
  %42 = load i32, i32* %demod71, align 4, !dbg !5806
  %cmp72 = icmp eq i32 %42, 2, !dbg !5806
  br i1 %cmp72, label %cond.true74, label %cond.false77, !dbg !5806

cond.true74:                                      ; preds = %cond.end
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5806
  %44 = load i32, i32* %reg, align 4, !dbg !5806
  %conv75 = trunc i32 %44 to i8, !dbg !5806
  %call76 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62177, i8 zeroext %conv75) #9, !dbg !5806
  br label %cond.end80, !dbg !5806

cond.false77:                                     ; preds = %cond.end
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5806
  %46 = load i32, i32* %reg, align 4, !dbg !5806
  %conv78 = trunc i32 %46 to i8, !dbg !5806
  %call79 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62689, i8 zeroext %conv78) #9, !dbg !5806
  br label %cond.end80, !dbg !5806

cond.end80:                                       ; preds = %cond.false77, %cond.true74
  %cond81 = phi i32 [ %call76, %cond.true74 ], [ %call79, %cond.false77 ], !dbg !5806
  %cmp82 = icmp slt i32 %cond81, 0, !dbg !5808
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !5809

if.then84:                                        ; preds = %cond.end80
  br label %err, !dbg !5810

if.end85:                                         ; preds = %cond.end80
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5811
  %demod86 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %47, i32 0, i32 1, !dbg !5811
  %48 = load i32, i32* %demod86, align 4, !dbg !5811
  %cmp87 = icmp eq i32 %48, 2, !dbg !5811
  br i1 %cmp87, label %cond.true89, label %cond.false91, !dbg !5811

cond.true89:                                      ; preds = %if.end85
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5811
  %call90 = call i32 @stv090x_read_reg(%struct.stv090x_state* %49, i32 61968) #9, !dbg !5811
  br label %cond.end93, !dbg !5811

cond.false91:                                     ; preds = %if.end85
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5811
  %call92 = call i32 @stv090x_read_reg(%struct.stv090x_state* %50, i32 62480) #9, !dbg !5811
  br label %cond.end93, !dbg !5811

cond.end93:                                       ; preds = %cond.false91, %cond.true89
  %cond94 = phi i32 [ %call90, %cond.true89 ], [ %call92, %cond.false91 ], !dbg !5811
  store i32 %cond94, i32* %reg, align 4, !dbg !5812
  %51 = load i32, i32* %reg, align 4, !dbg !5813
  %and95 = and i32 %51, -4, !dbg !5813
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5813
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 15, !dbg !5813
  %53 = load i32, i32* %rolloff, align 4, !dbg !5813
  %shl96 = shl i32 %53, 0, !dbg !5813
  %or97 = or i32 %and95, %shl96, !dbg !5813
  store i32 %or97, i32* %reg, align 4, !dbg !5813
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5814
  %demod98 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 1, !dbg !5814
  %55 = load i32, i32* %demod98, align 4, !dbg !5814
  %cmp99 = icmp eq i32 %55, 2, !dbg !5814
  br i1 %cmp99, label %cond.true101, label %cond.false104, !dbg !5814

cond.true101:                                     ; preds = %cond.end93
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5814
  %57 = load i32, i32* %reg, align 4, !dbg !5814
  %conv102 = trunc i32 %57 to i8, !dbg !5814
  %call103 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 61968, i8 zeroext %conv102) #9, !dbg !5814
  br label %cond.end107, !dbg !5814

cond.false104:                                    ; preds = %cond.end93
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5814
  %59 = load i32, i32* %reg, align 4, !dbg !5814
  %conv105 = trunc i32 %59 to i8, !dbg !5814
  %call106 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62480, i8 zeroext %conv105) #9, !dbg !5814
  br label %cond.end107, !dbg !5814

cond.end107:                                      ; preds = %cond.false104, %cond.true101
  %cond108 = phi i32 [ %call103, %cond.true101 ], [ %call106, %cond.false104 ], !dbg !5814
  %cmp109 = icmp slt i32 %cond108, 0, !dbg !5816
  br i1 %cmp109, label %if.then111, label %if.end112, !dbg !5817

if.then111:                                       ; preds = %cond.end107
  br label %err, !dbg !5818

if.end112:                                        ; preds = %cond.end107
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5819
  %call113 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %60, i32 1) #9, !dbg !5821
  %cmp114 = icmp slt i32 %call113, 0, !dbg !5822
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !5823

if.then116:                                       ; preds = %if.end112
  br label %err, !dbg !5824

if.end117:                                        ; preds = %if.end112
  %61 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5825
  %tuner_set_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %61, i32 0, i32 18, !dbg !5827
  %62 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_mode, align 8, !dbg !5827
  %tobool118 = icmp ne i32 (%struct.dvb_frontend*, i32)* %62, null, !dbg !5825
  br i1 %tobool118, label %if.then119, label %if.end126, !dbg !5828

if.then119:                                       ; preds = %if.end117
  %63 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5829
  %tuner_set_mode120 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %63, i32 0, i32 18, !dbg !5832
  %64 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_mode120, align 8, !dbg !5832
  %65 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5833
  %call121 = call i32 %64(%struct.dvb_frontend* %65, i32 2) #9, !dbg !5829
  %cmp122 = icmp slt i32 %call121, 0, !dbg !5834
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !5835

if.then124:                                       ; preds = %if.then119
  br label %err_gateoff, !dbg !5836

if.end125:                                        ; preds = %if.then119
  br label %if.end126, !dbg !5837

if.end126:                                        ; preds = %if.end125, %if.end117
  %66 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5838
  %tuner_init127 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %66, i32 0, i32 16, !dbg !5840
  %67 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %tuner_init127, align 8, !dbg !5840
  %tobool128 = icmp ne i32 (%struct.dvb_frontend*)* %67, null, !dbg !5838
  br i1 %tobool128, label %if.then129, label %if.end136, !dbg !5841

if.then129:                                       ; preds = %if.end126
  %68 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5842
  %tuner_init130 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %68, i32 0, i32 16, !dbg !5845
  %69 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %tuner_init130, align 8, !dbg !5845
  %70 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5846
  %call131 = call i32 %69(%struct.dvb_frontend* %70) #9, !dbg !5842
  %cmp132 = icmp slt i32 %call131, 0, !dbg !5847
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !5848

if.then134:                                       ; preds = %if.then129
  br label %err_gateoff, !dbg !5849

if.end135:                                        ; preds = %if.then129
  br label %if.end136, !dbg !5850

if.end136:                                        ; preds = %if.end135, %if.end126
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5851
  %call137 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %71, i32 0) #9, !dbg !5853
  %cmp138 = icmp slt i32 %call137, 0, !dbg !5854
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !5855

if.then140:                                       ; preds = %if.end136
  br label %err, !dbg !5856

if.end141:                                        ; preds = %if.end136
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5857
  %device = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %72, i32 0, i32 0, !dbg !5859
  %73 = load i32, i32* %device, align 8, !dbg !5859
  %cmp142 = icmp eq i32 %73, 1, !dbg !5860
  br i1 %cmp142, label %if.then144, label %if.else150, !dbg !5861

if.then144:                                       ; preds = %if.end141
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5862
  %call145 = call i32 @stv0900_set_tspath(%struct.stv090x_state* %74) #9, !dbg !5865
  %cmp146 = icmp slt i32 %call145, 0, !dbg !5866
  br i1 %cmp146, label %if.then148, label %if.end149, !dbg !5867

if.then148:                                       ; preds = %if.then144
  br label %err, !dbg !5868

if.end149:                                        ; preds = %if.then144
  br label %if.end156, !dbg !5869

if.else150:                                       ; preds = %if.end141
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5870
  %call151 = call i32 @stv0903_set_tspath(%struct.stv090x_state* %75) #9, !dbg !5873
  %cmp152 = icmp slt i32 %call151, 0, !dbg !5874
  br i1 %cmp152, label %if.then154, label %if.end155, !dbg !5875

if.then154:                                       ; preds = %if.else150
  br label %err, !dbg !5876

if.end155:                                        ; preds = %if.else150
  br label %if.end156

if.end156:                                        ; preds = %if.end155, %if.end149
  store i32 0, i32* %retval, align 4, !dbg !5877
  br label %return, !dbg !5877

err_gateoff:                                      ; preds = %if.then134, %if.then124, %if.then8
  call void @llvm.dbg.label(metadata !5878), !dbg !5879
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5880
  %call157 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %76, i32 0) #9, !dbg !5881
  br label %err, !dbg !5881

err:                                              ; preds = %err_gateoff, %if.then154, %if.then148, %if.then140, %if.then116, %if.then111, %if.then84, %if.then64, %do.end, %if.then19, %if.then13, %if.then3
  call void @llvm.dbg.label(metadata !5882), !dbg !5883
  br label %do.body158, !dbg !5884

do.body158:                                       ; preds = %err
  %77 = load i32, i32* @verbose, align 4, !dbg !5885
  %cmp159 = icmp ugt i32 %77, 0, !dbg !5885
  br i1 %cmp159, label %land.lhs.true161, label %if.else166, !dbg !5885

land.lhs.true161:                                 ; preds = %do.body158
  %78 = load i32, i32* @verbose, align 4, !dbg !5885
  %cmp162 = icmp ugt i32 %78, 0, !dbg !5885
  br i1 %cmp162, label %if.then164, label %if.else166, !dbg !5890

if.then164:                                       ; preds = %land.lhs.true161
  %call165 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5885
  br label %if.end193, !dbg !5885

if.else166:                                       ; preds = %land.lhs.true161, %do.body158
  %79 = load i32, i32* @verbose, align 4, !dbg !5891
  %cmp167 = icmp ugt i32 %79, 1, !dbg !5891
  br i1 %cmp167, label %land.lhs.true169, label %if.else174, !dbg !5891

land.lhs.true169:                                 ; preds = %if.else166
  %80 = load i32, i32* @verbose, align 4, !dbg !5891
  %cmp170 = icmp ugt i32 %80, 0, !dbg !5891
  br i1 %cmp170, label %if.then172, label %if.else174, !dbg !5885

if.then172:                                       ; preds = %land.lhs.true169
  %call173 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5891
  br label %if.end192, !dbg !5891

if.else174:                                       ; preds = %land.lhs.true169, %if.else166
  %81 = load i32, i32* @verbose, align 4, !dbg !5893
  %cmp175 = icmp ugt i32 %81, 2, !dbg !5893
  br i1 %cmp175, label %land.lhs.true177, label %if.else182, !dbg !5893

land.lhs.true177:                                 ; preds = %if.else174
  %82 = load i32, i32* @verbose, align 4, !dbg !5893
  %cmp178 = icmp ugt i32 %82, 0, !dbg !5893
  br i1 %cmp178, label %if.then180, label %if.else182, !dbg !5891

if.then180:                                       ; preds = %land.lhs.true177
  %call181 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5893
  br label %if.end191, !dbg !5893

if.else182:                                       ; preds = %land.lhs.true177, %if.else174
  %83 = load i32, i32* @verbose, align 4, !dbg !5895
  %cmp183 = icmp ugt i32 %83, 3, !dbg !5895
  br i1 %cmp183, label %land.lhs.true185, label %if.end190, !dbg !5895

land.lhs.true185:                                 ; preds = %if.else182
  %84 = load i32, i32* @verbose, align 4, !dbg !5895
  %cmp186 = icmp ugt i32 %84, 0, !dbg !5895
  br i1 %cmp186, label %if.then188, label %if.end190, !dbg !5893

if.then188:                                       ; preds = %land.lhs.true185
  %call189 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_init, i64 0, i64 0)) #13, !dbg !5895
  br label %if.end190, !dbg !5895

if.end190:                                        ; preds = %if.then188, %land.lhs.true185, %if.else182
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then180
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then172
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then164
  br label %do.end194, !dbg !5897

do.end194:                                        ; preds = %if.end193
  store i32 -1, i32* %retval, align 4, !dbg !5898
  br label %return, !dbg !5898

return:                                           ; preds = %do.end194, %if.end156
  %85 = load i32, i32* %retval, align 4, !dbg !5899
  ret i32 %85, !dbg !5899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_sleep(%struct.dvb_frontend* %fe) #0 !dbg !5900 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %full_standby = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !5903, metadata !DIExpression()), !dbg !5904
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5905
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !5906
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !5906
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !5905
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !5904
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !5907, metadata !DIExpression()), !dbg !5908
  call void @llvm.dbg.declare(metadata i8* %full_standby, metadata !5909, metadata !DIExpression()), !dbg !5910
  store i8 0, i8* %full_standby, align 1, !dbg !5910
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5911
  %call = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %3, i32 1) #9, !dbg !5913
  %cmp = icmp slt i32 %call, 0, !dbg !5914
  br i1 %cmp, label %if.then, label %if.end, !dbg !5915

if.then:                                          ; preds = %entry
  br label %err, !dbg !5916

if.end:                                           ; preds = %entry
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5917
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 5, !dbg !5919
  %5 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !5919
  %tuner_sleep = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %5, i32 0, i32 17, !dbg !5920
  %6 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %tuner_sleep, align 8, !dbg !5920
  %tobool = icmp ne i32 (%struct.dvb_frontend*)* %6, null, !dbg !5917
  br i1 %tobool, label %if.then1, label %if.end8, !dbg !5921

if.then1:                                         ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5922
  %config2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 5, !dbg !5925
  %8 = load %struct.stv090x_config*, %struct.stv090x_config** %config2, align 8, !dbg !5925
  %tuner_sleep3 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %8, i32 0, i32 17, !dbg !5926
  %9 = load i32 (%struct.dvb_frontend*)*, i32 (%struct.dvb_frontend*)** %tuner_sleep3, align 8, !dbg !5926
  %10 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !5927
  %call4 = call i32 %9(%struct.dvb_frontend* %10) #9, !dbg !5922
  %cmp5 = icmp slt i32 %call4, 0, !dbg !5928
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5929

if.then6:                                         ; preds = %if.then1
  br label %err_gateoff, !dbg !5930

if.end7:                                          ; preds = %if.then1
  br label %if.end8, !dbg !5931

if.end8:                                          ; preds = %if.end7, %if.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5932
  %call9 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %11, i32 0) #9, !dbg !5934
  %cmp10 = icmp slt i32 %call9, 0, !dbg !5935
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5936

if.then11:                                        ; preds = %if.end8
  br label %err, !dbg !5937

if.end12:                                         ; preds = %if.end8
  br label %do.body, !dbg !5938

do.body:                                          ; preds = %if.end12
  %12 = load i32, i32* @verbose, align 4, !dbg !5939
  %cmp13 = icmp ugt i32 %12, 0, !dbg !5939
  br i1 %cmp13, label %land.lhs.true, label %if.else, !dbg !5939

land.lhs.true:                                    ; preds = %do.body
  %13 = load i32, i32* @verbose, align 4, !dbg !5939
  %cmp14 = icmp ugt i32 %13, 3, !dbg !5939
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !5944

if.then15:                                        ; preds = %land.lhs.true
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5939
  %device = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 0, !dbg !5939
  %15 = load i32, i32* %device, align 8, !dbg !5939
  %cmp16 = icmp eq i32 %15, 1, !dbg !5939
  %16 = zext i1 %cmp16 to i64, !dbg !5939
  %cond = select i1 %cmp16, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5939
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5939
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !5939
  %18 = load i32, i32* %demod, align 4, !dbg !5939
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0), i8* %cond, i32 %18) #13, !dbg !5939
  br label %if.end50, !dbg !5939

if.else:                                          ; preds = %land.lhs.true, %do.body
  %19 = load i32, i32* @verbose, align 4, !dbg !5945
  %cmp18 = icmp ugt i32 %19, 1, !dbg !5945
  br i1 %cmp18, label %land.lhs.true19, label %if.else27, !dbg !5945

land.lhs.true19:                                  ; preds = %if.else
  %20 = load i32, i32* @verbose, align 4, !dbg !5945
  %cmp20 = icmp ugt i32 %20, 3, !dbg !5945
  br i1 %cmp20, label %if.then21, label %if.else27, !dbg !5939

if.then21:                                        ; preds = %land.lhs.true19
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5945
  %device22 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 0, !dbg !5945
  %22 = load i32, i32* %device22, align 8, !dbg !5945
  %cmp23 = icmp eq i32 %22, 1, !dbg !5945
  %23 = zext i1 %cmp23 to i64, !dbg !5945
  %cond24 = select i1 %cmp23, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5945
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5945
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !5945
  %25 = load i32, i32* %demod25, align 4, !dbg !5945
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0), i8* %cond24, i32 %25) #13, !dbg !5945
  br label %if.end49, !dbg !5945

if.else27:                                        ; preds = %land.lhs.true19, %if.else
  %26 = load i32, i32* @verbose, align 4, !dbg !5947
  %cmp28 = icmp ugt i32 %26, 2, !dbg !5947
  br i1 %cmp28, label %land.lhs.true29, label %if.else37, !dbg !5947

land.lhs.true29:                                  ; preds = %if.else27
  %27 = load i32, i32* @verbose, align 4, !dbg !5947
  %cmp30 = icmp ugt i32 %27, 3, !dbg !5947
  br i1 %cmp30, label %if.then31, label %if.else37, !dbg !5945

if.then31:                                        ; preds = %land.lhs.true29
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5947
  %device32 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 0, !dbg !5947
  %29 = load i32, i32* %device32, align 8, !dbg !5947
  %cmp33 = icmp eq i32 %29, 1, !dbg !5947
  %30 = zext i1 %cmp33 to i64, !dbg !5947
  %cond34 = select i1 %cmp33, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5947
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5947
  %demod35 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 1, !dbg !5947
  %32 = load i32, i32* %demod35, align 4, !dbg !5947
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0), i8* %cond34, i32 %32) #13, !dbg !5947
  br label %if.end48, !dbg !5947

if.else37:                                        ; preds = %land.lhs.true29, %if.else27
  %33 = load i32, i32* @verbose, align 4, !dbg !5949
  %cmp38 = icmp ugt i32 %33, 3, !dbg !5949
  br i1 %cmp38, label %land.lhs.true39, label %if.end47, !dbg !5949

land.lhs.true39:                                  ; preds = %if.else37
  %34 = load i32, i32* @verbose, align 4, !dbg !5949
  %cmp40 = icmp ugt i32 %34, 3, !dbg !5949
  br i1 %cmp40, label %if.then41, label %if.end47, !dbg !5947

if.then41:                                        ; preds = %land.lhs.true39
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5949
  %device42 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 0, !dbg !5949
  %36 = load i32, i32* %device42, align 8, !dbg !5949
  %cmp43 = icmp eq i32 %36, 1, !dbg !5949
  %37 = zext i1 %cmp43 to i64, !dbg !5949
  %cond44 = select i1 %cmp43, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !5949
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5949
  %demod45 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 1, !dbg !5949
  %39 = load i32, i32* %demod45, align 4, !dbg !5949
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0), i8* %cond44, i32 %39) #13, !dbg !5949
  br label %if.end47, !dbg !5949

if.end47:                                         ; preds = %if.then41, %land.lhs.true39, %if.else37
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then31
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then21
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then15
  br label %do.end, !dbg !5951

do.end:                                           ; preds = %if.end50
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5952
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 3, !dbg !5953
  %41 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !5953
  %demod_lock = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %41, i32 0, i32 2, !dbg !5954
  call void @mutex_lock(%struct.mutex* %demod_lock) #9, !dbg !5955
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5956
  %demod51 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 1, !dbg !5957
  %43 = load i32, i32* %demod51, align 4, !dbg !5957
  switch i32 %43, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb103
  ], !dbg !5958

sw.bb:                                            ; preds = %do.end
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5959
  %call52 = call i32 @stv090x_read_reg(%struct.stv090x_state* %44, i32 61920) #9, !dbg !5961
  store i32 %call52, i32* %reg, align 4, !dbg !5962
  %45 = load i32, i32* %reg, align 4, !dbg !5963
  %and = and i32 %45, -3, !dbg !5963
  store i32 %and, i32* %reg, align 4, !dbg !5963
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5964
  %47 = load i32, i32* %reg, align 4, !dbg !5966
  %conv = trunc i32 %47 to i8, !dbg !5966
  %call53 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 61920, i8 zeroext %conv) #9, !dbg !5967
  %cmp54 = icmp slt i32 %call53, 0, !dbg !5968
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !5969

if.then56:                                        ; preds = %sw.bb
  br label %err_unlock, !dbg !5970

if.end57:                                         ; preds = %sw.bb
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5971
  %call58 = call i32 @stv090x_read_reg(%struct.stv090x_state* %48, i32 61921) #9, !dbg !5972
  store i32 %call58, i32* %reg, align 4, !dbg !5973
  %49 = load i32, i32* %reg, align 4, !dbg !5974
  %and59 = and i32 %49, -33, !dbg !5974
  store i32 %and59, i32* %reg, align 4, !dbg !5974
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5975
  %51 = load i32, i32* %reg, align 4, !dbg !5977
  %conv60 = trunc i32 %51 to i8, !dbg !5977
  %call61 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 61921, i8 zeroext %conv60) #9, !dbg !5978
  %cmp62 = icmp slt i32 %call61, 0, !dbg !5979
  br i1 %cmp62, label %if.then64, label %if.end65, !dbg !5980

if.then64:                                        ; preds = %if.end57
  br label %err_unlock, !dbg !5981

if.end65:                                         ; preds = %if.end57
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5982
  %call66 = call i32 @stv090x_read_reg(%struct.stv090x_state* %52, i32 61922) #9, !dbg !5983
  store i32 %call66, i32* %reg, align 4, !dbg !5984
  %53 = load i32, i32* %reg, align 4, !dbg !5985
  %shr = lshr i32 %53, 1, !dbg !5985
  %and67 = and i32 %shr, 1, !dbg !5985
  %cmp68 = icmp eq i32 %and67, 0, !dbg !5987
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !5988

if.then70:                                        ; preds = %if.end65
  store i8 1, i8* %full_standby, align 1, !dbg !5989
  br label %if.end71, !dbg !5990

if.end71:                                         ; preds = %if.then70, %if.end65
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !5991
  %call72 = call i32 @stv090x_read_reg(%struct.stv090x_state* %54, i32 61890) #9, !dbg !5992
  store i32 %call72, i32* %reg, align 4, !dbg !5993
  %55 = load i32, i32* %reg, align 4, !dbg !5994
  %and73 = and i32 %55, -33, !dbg !5994
  %or = or i32 %and73, 32, !dbg !5994
  store i32 %or, i32* %reg, align 4, !dbg !5994
  %56 = load i32, i32* %reg, align 4, !dbg !5995
  %and74 = and i32 %56, -3, !dbg !5995
  %or75 = or i32 %and74, 2, !dbg !5995
  store i32 %or75, i32* %reg, align 4, !dbg !5995
  %57 = load i8, i8* %full_standby, align 1, !dbg !5996
  %tobool76 = icmp ne i8 %57, 0, !dbg !5996
  br i1 %tobool76, label %if.then77, label %if.end80, !dbg !5998

if.then77:                                        ; preds = %if.end71
  %58 = load i32, i32* %reg, align 4, !dbg !5999
  %and78 = and i32 %58, -17, !dbg !5999
  %or79 = or i32 %and78, 16, !dbg !5999
  store i32 %or79, i32* %reg, align 4, !dbg !5999
  br label %if.end80, !dbg !5999

if.end80:                                         ; preds = %if.then77, %if.end71
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6000
  %60 = load i32, i32* %reg, align 4, !dbg !6002
  %conv81 = trunc i32 %60 to i8, !dbg !6002
  %call82 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 61890, i8 zeroext %conv81) #9, !dbg !6003
  %cmp83 = icmp slt i32 %call82, 0, !dbg !6004
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !6005

if.then85:                                        ; preds = %if.end80
  br label %err_unlock, !dbg !6006

if.end86:                                         ; preds = %if.end80
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6007
  %call87 = call i32 @stv090x_read_reg(%struct.stv090x_state* %61, i32 61891) #9, !dbg !6008
  store i32 %call87, i32* %reg, align 4, !dbg !6009
  %62 = load i32, i32* %reg, align 4, !dbg !6010
  %and88 = and i32 %62, -9, !dbg !6010
  %or89 = or i32 %and88, 8, !dbg !6010
  store i32 %or89, i32* %reg, align 4, !dbg !6010
  %63 = load i32, i32* %reg, align 4, !dbg !6011
  %and90 = and i32 %63, -3, !dbg !6011
  %or91 = or i32 %and90, 2, !dbg !6011
  store i32 %or91, i32* %reg, align 4, !dbg !6011
  %64 = load i8, i8* %full_standby, align 1, !dbg !6012
  %tobool92 = icmp ne i8 %64, 0, !dbg !6012
  br i1 %tobool92, label %if.then93, label %if.end96, !dbg !6014

if.then93:                                        ; preds = %if.end86
  %65 = load i32, i32* %reg, align 4, !dbg !6015
  %and94 = and i32 %65, -2, !dbg !6015
  %or95 = or i32 %and94, 1, !dbg !6015
  store i32 %or95, i32* %reg, align 4, !dbg !6015
  br label %if.end96, !dbg !6015

if.end96:                                         ; preds = %if.then93, %if.end86
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6016
  %67 = load i32, i32* %reg, align 4, !dbg !6018
  %conv97 = trunc i32 %67 to i8, !dbg !6018
  %call98 = call i32 @stv090x_write_reg(%struct.stv090x_state* %66, i32 61891, i8 zeroext %conv97) #9, !dbg !6019
  %cmp99 = icmp slt i32 %call98, 0, !dbg !6020
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !6021

if.then101:                                       ; preds = %if.end96
  br label %err_unlock, !dbg !6022

if.end102:                                        ; preds = %if.end96
  br label %sw.epilog, !dbg !6023

sw.bb103:                                         ; preds = %do.end
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6024
  %call104 = call i32 @stv090x_read_reg(%struct.stv090x_state* %68, i32 61922) #9, !dbg !6025
  store i32 %call104, i32* %reg, align 4, !dbg !6026
  %69 = load i32, i32* %reg, align 4, !dbg !6027
  %and105 = and i32 %69, -3, !dbg !6027
  store i32 %and105, i32* %reg, align 4, !dbg !6027
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6028
  %71 = load i32, i32* %reg, align 4, !dbg !6030
  %conv106 = trunc i32 %71 to i8, !dbg !6030
  %call107 = call i32 @stv090x_write_reg(%struct.stv090x_state* %70, i32 61922, i8 zeroext %conv106) #9, !dbg !6031
  %cmp108 = icmp slt i32 %call107, 0, !dbg !6032
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !6033

if.then110:                                       ; preds = %sw.bb103
  br label %err_unlock, !dbg !6034

if.end111:                                        ; preds = %sw.bb103
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6035
  %call112 = call i32 @stv090x_read_reg(%struct.stv090x_state* %72, i32 61923) #9, !dbg !6036
  store i32 %call112, i32* %reg, align 4, !dbg !6037
  %73 = load i32, i32* %reg, align 4, !dbg !6038
  %and113 = and i32 %73, -33, !dbg !6038
  store i32 %and113, i32* %reg, align 4, !dbg !6038
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6039
  %75 = load i32, i32* %reg, align 4, !dbg !6041
  %conv114 = trunc i32 %75 to i8, !dbg !6041
  %call115 = call i32 @stv090x_write_reg(%struct.stv090x_state* %74, i32 61923, i8 zeroext %conv114) #9, !dbg !6042
  %cmp116 = icmp slt i32 %call115, 0, !dbg !6043
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !6044

if.then118:                                       ; preds = %if.end111
  br label %err_unlock, !dbg !6045

if.end119:                                        ; preds = %if.end111
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6046
  %call120 = call i32 @stv090x_read_reg(%struct.stv090x_state* %76, i32 61920) #9, !dbg !6047
  store i32 %call120, i32* %reg, align 4, !dbg !6048
  %77 = load i32, i32* %reg, align 4, !dbg !6049
  %shr121 = lshr i32 %77, 1, !dbg !6049
  %and122 = and i32 %shr121, 1, !dbg !6049
  %cmp123 = icmp eq i32 %and122, 0, !dbg !6051
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !6052

if.then125:                                       ; preds = %if.end119
  store i8 1, i8* %full_standby, align 1, !dbg !6053
  br label %if.end126, !dbg !6054

if.end126:                                        ; preds = %if.then125, %if.end119
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6055
  %call127 = call i32 @stv090x_read_reg(%struct.stv090x_state* %78, i32 61890) #9, !dbg !6056
  store i32 %call127, i32* %reg, align 4, !dbg !6057
  %79 = load i32, i32* %reg, align 4, !dbg !6058
  %and128 = and i32 %79, -65, !dbg !6058
  %or129 = or i32 %and128, 64, !dbg !6058
  store i32 %or129, i32* %reg, align 4, !dbg !6058
  %80 = load i32, i32* %reg, align 4, !dbg !6059
  %and130 = and i32 %80, -9, !dbg !6059
  %or131 = or i32 %and130, 8, !dbg !6059
  store i32 %or131, i32* %reg, align 4, !dbg !6059
  %81 = load i8, i8* %full_standby, align 1, !dbg !6060
  %tobool132 = icmp ne i8 %81, 0, !dbg !6060
  br i1 %tobool132, label %if.then133, label %if.end136, !dbg !6062

if.then133:                                       ; preds = %if.end126
  %82 = load i32, i32* %reg, align 4, !dbg !6063
  %and134 = and i32 %82, -17, !dbg !6063
  %or135 = or i32 %and134, 16, !dbg !6063
  store i32 %or135, i32* %reg, align 4, !dbg !6063
  br label %if.end136, !dbg !6063

if.end136:                                        ; preds = %if.then133, %if.end126
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6064
  %84 = load i32, i32* %reg, align 4, !dbg !6066
  %conv137 = trunc i32 %84 to i8, !dbg !6066
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %83, i32 61890, i8 zeroext %conv137) #9, !dbg !6067
  %cmp139 = icmp slt i32 %call138, 0, !dbg !6068
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !6069

if.then141:                                       ; preds = %if.end136
  br label %err_unlock, !dbg !6070

if.end142:                                        ; preds = %if.end136
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6071
  %call143 = call i32 @stv090x_read_reg(%struct.stv090x_state* %85, i32 61891) #9, !dbg !6072
  store i32 %call143, i32* %reg, align 4, !dbg !6073
  %86 = load i32, i32* %reg, align 4, !dbg !6074
  %and144 = and i32 %86, -17, !dbg !6074
  %or145 = or i32 %and144, 16, !dbg !6074
  store i32 %or145, i32* %reg, align 4, !dbg !6074
  %87 = load i32, i32* %reg, align 4, !dbg !6075
  %and146 = and i32 %87, -5, !dbg !6075
  %or147 = or i32 %and146, 4, !dbg !6075
  store i32 %or147, i32* %reg, align 4, !dbg !6075
  %88 = load i8, i8* %full_standby, align 1, !dbg !6076
  %tobool148 = icmp ne i8 %88, 0, !dbg !6076
  br i1 %tobool148, label %if.then149, label %if.end152, !dbg !6078

if.then149:                                       ; preds = %if.end142
  %89 = load i32, i32* %reg, align 4, !dbg !6079
  %and150 = and i32 %89, -2, !dbg !6079
  %or151 = or i32 %and150, 1, !dbg !6079
  store i32 %or151, i32* %reg, align 4, !dbg !6079
  br label %if.end152, !dbg !6079

if.end152:                                        ; preds = %if.then149, %if.end142
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6080
  %91 = load i32, i32* %reg, align 4, !dbg !6082
  %conv153 = trunc i32 %91 to i8, !dbg !6082
  %call154 = call i32 @stv090x_write_reg(%struct.stv090x_state* %90, i32 61891, i8 zeroext %conv153) #9, !dbg !6083
  %cmp155 = icmp slt i32 %call154, 0, !dbg !6084
  br i1 %cmp155, label %if.then157, label %if.end158, !dbg !6085

if.then157:                                       ; preds = %if.end152
  br label %err_unlock, !dbg !6086

if.end158:                                        ; preds = %if.end152
  br label %sw.epilog, !dbg !6087

sw.default:                                       ; preds = %do.end
  br label %do.body159, !dbg !6088

do.body159:                                       ; preds = %sw.default
  %92 = load i32, i32* @verbose, align 4, !dbg !6089
  %cmp160 = icmp ugt i32 %92, 0, !dbg !6089
  br i1 %cmp160, label %land.lhs.true162, label %if.else167, !dbg !6089

land.lhs.true162:                                 ; preds = %do.body159
  %93 = load i32, i32* @verbose, align 4, !dbg !6089
  %cmp163 = icmp ugt i32 %93, 0, !dbg !6089
  br i1 %cmp163, label %if.then165, label %if.else167, !dbg !6094

if.then165:                                       ; preds = %land.lhs.true162
  %call166 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6089
  br label %if.end194, !dbg !6089

if.else167:                                       ; preds = %land.lhs.true162, %do.body159
  %94 = load i32, i32* @verbose, align 4, !dbg !6095
  %cmp168 = icmp ugt i32 %94, 1, !dbg !6095
  br i1 %cmp168, label %land.lhs.true170, label %if.else175, !dbg !6095

land.lhs.true170:                                 ; preds = %if.else167
  %95 = load i32, i32* @verbose, align 4, !dbg !6095
  %cmp171 = icmp ugt i32 %95, 0, !dbg !6095
  br i1 %cmp171, label %if.then173, label %if.else175, !dbg !6089

if.then173:                                       ; preds = %land.lhs.true170
  %call174 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6095
  br label %if.end193, !dbg !6095

if.else175:                                       ; preds = %land.lhs.true170, %if.else167
  %96 = load i32, i32* @verbose, align 4, !dbg !6097
  %cmp176 = icmp ugt i32 %96, 2, !dbg !6097
  br i1 %cmp176, label %land.lhs.true178, label %if.else183, !dbg !6097

land.lhs.true178:                                 ; preds = %if.else175
  %97 = load i32, i32* @verbose, align 4, !dbg !6097
  %cmp179 = icmp ugt i32 %97, 0, !dbg !6097
  br i1 %cmp179, label %if.then181, label %if.else183, !dbg !6095

if.then181:                                       ; preds = %land.lhs.true178
  %call182 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6097
  br label %if.end192, !dbg !6097

if.else183:                                       ; preds = %land.lhs.true178, %if.else175
  %98 = load i32, i32* @verbose, align 4, !dbg !6099
  %cmp184 = icmp ugt i32 %98, 3, !dbg !6099
  br i1 %cmp184, label %land.lhs.true186, label %if.end191, !dbg !6099

land.lhs.true186:                                 ; preds = %if.else183
  %99 = load i32, i32* @verbose, align 4, !dbg !6099
  %cmp187 = icmp ugt i32 %99, 0, !dbg !6099
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !6097

if.then189:                                       ; preds = %land.lhs.true186
  %call190 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6099
  br label %if.end191, !dbg !6099

if.end191:                                        ; preds = %if.then189, %land.lhs.true186, %if.else183
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then181
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then173
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then165
  br label %do.end195, !dbg !6101

do.end195:                                        ; preds = %if.end194
  br label %sw.epilog, !dbg !6102

sw.epilog:                                        ; preds = %do.end195, %if.end158, %if.end102
  %100 = load i8, i8* %full_standby, align 1, !dbg !6103
  %tobool196 = icmp ne i8 %100, 0, !dbg !6103
  br i1 %tobool196, label %if.then197, label %if.end207, !dbg !6105

if.then197:                                       ; preds = %sw.epilog
  %101 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6106
  %call198 = call i32 @stv090x_read_reg(%struct.stv090x_state* %101, i32 61878) #9, !dbg !6108
  store i32 %call198, i32* %reg, align 4, !dbg !6109
  %102 = load i32, i32* %reg, align 4, !dbg !6110
  %and199 = and i32 %102, -129, !dbg !6110
  %or200 = or i32 %and199, 128, !dbg !6110
  store i32 %or200, i32* %reg, align 4, !dbg !6110
  %103 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6111
  %104 = load i32, i32* %reg, align 4, !dbg !6113
  %conv201 = trunc i32 %104 to i8, !dbg !6113
  %call202 = call i32 @stv090x_write_reg(%struct.stv090x_state* %103, i32 61878, i8 zeroext %conv201) #9, !dbg !6114
  %cmp203 = icmp slt i32 %call202, 0, !dbg !6115
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !6116

if.then205:                                       ; preds = %if.then197
  br label %err_unlock, !dbg !6117

if.end206:                                        ; preds = %if.then197
  br label %if.end207, !dbg !6118

if.end207:                                        ; preds = %if.end206, %sw.epilog
  %105 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6119
  %internal208 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %105, i32 0, i32 3, !dbg !6120
  %106 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal208, align 8, !dbg !6120
  %demod_lock209 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %106, i32 0, i32 2, !dbg !6121
  call void @mutex_unlock(%struct.mutex* %demod_lock209) #9, !dbg !6122
  store i32 0, i32* %retval, align 4, !dbg !6123
  br label %return, !dbg !6123

err_gateoff:                                      ; preds = %if.then6
  call void @llvm.dbg.label(metadata !6124), !dbg !6125
  %107 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6126
  %call210 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %107, i32 0) #9, !dbg !6127
  br label %err, !dbg !6128

err_unlock:                                       ; preds = %if.then205, %if.then157, %if.then141, %if.then118, %if.then110, %if.then101, %if.then85, %if.then64, %if.then56
  call void @llvm.dbg.label(metadata !6129), !dbg !6130
  %108 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6131
  %internal211 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %108, i32 0, i32 3, !dbg !6132
  %109 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal211, align 8, !dbg !6132
  %demod_lock212 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %109, i32 0, i32 2, !dbg !6133
  call void @mutex_unlock(%struct.mutex* %demod_lock212) #9, !dbg !6134
  br label %err, !dbg !6134

err:                                              ; preds = %err_unlock, %err_gateoff, %if.then11, %if.then
  call void @llvm.dbg.label(metadata !6135), !dbg !6136
  br label %do.body213, !dbg !6137

do.body213:                                       ; preds = %err
  %110 = load i32, i32* @verbose, align 4, !dbg !6138
  %cmp214 = icmp ugt i32 %110, 0, !dbg !6138
  br i1 %cmp214, label %land.lhs.true216, label %if.else221, !dbg !6138

land.lhs.true216:                                 ; preds = %do.body213
  %111 = load i32, i32* @verbose, align 4, !dbg !6138
  %cmp217 = icmp ugt i32 %111, 0, !dbg !6138
  br i1 %cmp217, label %if.then219, label %if.else221, !dbg !6143

if.then219:                                       ; preds = %land.lhs.true216
  %call220 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6138
  br label %if.end248, !dbg !6138

if.else221:                                       ; preds = %land.lhs.true216, %do.body213
  %112 = load i32, i32* @verbose, align 4, !dbg !6144
  %cmp222 = icmp ugt i32 %112, 1, !dbg !6144
  br i1 %cmp222, label %land.lhs.true224, label %if.else229, !dbg !6144

land.lhs.true224:                                 ; preds = %if.else221
  %113 = load i32, i32* @verbose, align 4, !dbg !6144
  %cmp225 = icmp ugt i32 %113, 0, !dbg !6144
  br i1 %cmp225, label %if.then227, label %if.else229, !dbg !6138

if.then227:                                       ; preds = %land.lhs.true224
  %call228 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6144
  br label %if.end247, !dbg !6144

if.else229:                                       ; preds = %land.lhs.true224, %if.else221
  %114 = load i32, i32* @verbose, align 4, !dbg !6146
  %cmp230 = icmp ugt i32 %114, 2, !dbg !6146
  br i1 %cmp230, label %land.lhs.true232, label %if.else237, !dbg !6146

land.lhs.true232:                                 ; preds = %if.else229
  %115 = load i32, i32* @verbose, align 4, !dbg !6146
  %cmp233 = icmp ugt i32 %115, 0, !dbg !6146
  br i1 %cmp233, label %if.then235, label %if.else237, !dbg !6144

if.then235:                                       ; preds = %land.lhs.true232
  %call236 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6146
  br label %if.end246, !dbg !6146

if.else237:                                       ; preds = %land.lhs.true232, %if.else229
  %116 = load i32, i32* @verbose, align 4, !dbg !6148
  %cmp238 = icmp ugt i32 %116, 3, !dbg !6148
  br i1 %cmp238, label %land.lhs.true240, label %if.end245, !dbg !6148

land.lhs.true240:                                 ; preds = %if.else237
  %117 = load i32, i32* @verbose, align 4, !dbg !6148
  %cmp241 = icmp ugt i32 %117, 0, !dbg !6148
  br i1 %cmp241, label %if.then243, label %if.end245, !dbg !6146

if.then243:                                       ; preds = %land.lhs.true240
  %call244 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_sleep, i64 0, i64 0)) #13, !dbg !6148
  br label %if.end245, !dbg !6148

if.end245:                                        ; preds = %if.then243, %land.lhs.true240, %if.else237
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.then235
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.then227
  br label %if.end248

if.end248:                                        ; preds = %if.end247, %if.then219
  br label %do.end249, !dbg !6150

do.end249:                                        ; preds = %if.end248
  store i32 -1, i32* %retval, align 4, !dbg !6151
  br label %return, !dbg !6151

return:                                           ; preds = %do.end249, %if.end207
  %118 = load i32, i32* %retval, align 4, !dbg !6152
  ret i32 %118, !dbg !6152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_frontend_algo(%struct.dvb_frontend* %fe) #0 !dbg !6153 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6154, metadata !DIExpression()), !dbg !6155
  ret i32 4, !dbg !6156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_read_status(%struct.dvb_frontend* %fe, i32* %status) #0 !dbg !6157 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %status.addr = alloca i32*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %dstatus = alloca i32, align 4
  %search_state = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6158, metadata !DIExpression()), !dbg !6159
  store i32* %status, i32** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %status.addr, metadata !6160, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6162, metadata !DIExpression()), !dbg !6163
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6164
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6165
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6165
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6164
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6163
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6166, metadata !DIExpression()), !dbg !6167
  call void @llvm.dbg.declare(metadata i32* %dstatus, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i8* %search_state, metadata !6170, metadata !DIExpression()), !dbg !6171
  %3 = load i32*, i32** %status.addr, align 8, !dbg !6172
  store i32 0, i32* %3, align 4, !dbg !6173
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6174
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !6174
  %5 = load i32, i32* %demod, align 4, !dbg !6174
  %cmp = icmp eq i32 %5, 2, !dbg !6174
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6174

cond.true:                                        ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6174
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61970) #9, !dbg !6174
  br label %cond.end, !dbg !6174

cond.false:                                       ; preds = %entry
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6174
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62482) #9, !dbg !6174
  br label %cond.end, !dbg !6174

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !6174
  store i32 %cond, i32* %dstatus, align 4, !dbg !6175
  %8 = load i32, i32* %dstatus, align 4, !dbg !6176
  %shr = lshr i32 %8, 7, !dbg !6176
  %and = and i32 %shr, 1, !dbg !6176
  %tobool = icmp ne i32 %and, 0, !dbg !6176
  br i1 %tobool, label %if.then, label %if.end, !dbg !6178

if.then:                                          ; preds = %cond.end
  %9 = load i32*, i32** %status.addr, align 8, !dbg !6179
  %10 = load i32, i32* %9, align 4, !dbg !6180
  %or = or i32 %10, 3, !dbg !6180
  store i32 %or, i32* %9, align 4, !dbg !6180
  br label %if.end, !dbg !6181

if.end:                                           ; preds = %if.then, %cond.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6182
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 1, !dbg !6182
  %12 = load i32, i32* %demod2, align 4, !dbg !6182
  %cmp3 = icmp eq i32 %12, 2, !dbg !6182
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !6182

cond.true4:                                       ; preds = %if.end
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6182
  %call5 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 61979) #9, !dbg !6182
  br label %cond.end8, !dbg !6182

cond.false6:                                      ; preds = %if.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6182
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %14, i32 62491) #9, !dbg !6182
  br label %cond.end8, !dbg !6182

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i32 [ %call5, %cond.true4 ], [ %call7, %cond.false6 ], !dbg !6182
  store i32 %cond9, i32* %reg, align 4, !dbg !6183
  %15 = load i32, i32* %reg, align 4, !dbg !6184
  %shr10 = lshr i32 %15, 5, !dbg !6184
  %and11 = and i32 %shr10, 3, !dbg !6184
  %conv = trunc i32 %and11 to i8, !dbg !6184
  store i8 %conv, i8* %search_state, align 1, !dbg !6185
  %16 = load i8, i8* %search_state, align 1, !dbg !6186
  %conv12 = zext i8 %16 to i32, !dbg !6186
  switch i32 %conv12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb46
    i32 3, label %sw.bb119
  ], !dbg !6187

sw.bb:                                            ; preds = %cond.end8, %cond.end8
  br label %sw.default, !dbg !6188

sw.default:                                       ; preds = %cond.end8, %sw.bb
  br label %do.body, !dbg !6189

do.body:                                          ; preds = %sw.default
  %17 = load i32, i32* @verbose, align 4, !dbg !6191
  %cmp13 = icmp ugt i32 %17, 0, !dbg !6191
  br i1 %cmp13, label %land.lhs.true, label %if.else, !dbg !6191

land.lhs.true:                                    ; preds = %do.body
  %18 = load i32, i32* @verbose, align 4, !dbg !6191
  %cmp15 = icmp ugt i32 %18, 3, !dbg !6191
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !6196

if.then17:                                        ; preds = %land.lhs.true
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.53, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6191
  br label %if.end45, !dbg !6191

if.else:                                          ; preds = %land.lhs.true, %do.body
  %19 = load i32, i32* @verbose, align 4, !dbg !6197
  %cmp19 = icmp ugt i32 %19, 1, !dbg !6197
  br i1 %cmp19, label %land.lhs.true21, label %if.else26, !dbg !6197

land.lhs.true21:                                  ; preds = %if.else
  %20 = load i32, i32* @verbose, align 4, !dbg !6197
  %cmp22 = icmp ugt i32 %20, 3, !dbg !6197
  br i1 %cmp22, label %if.then24, label %if.else26, !dbg !6191

if.then24:                                        ; preds = %land.lhs.true21
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6197
  br label %if.end44, !dbg !6197

if.else26:                                        ; preds = %land.lhs.true21, %if.else
  %21 = load i32, i32* @verbose, align 4, !dbg !6199
  %cmp27 = icmp ugt i32 %21, 2, !dbg !6199
  br i1 %cmp27, label %land.lhs.true29, label %if.else34, !dbg !6199

land.lhs.true29:                                  ; preds = %if.else26
  %22 = load i32, i32* @verbose, align 4, !dbg !6199
  %cmp30 = icmp ugt i32 %22, 3, !dbg !6199
  br i1 %cmp30, label %if.then32, label %if.else34, !dbg !6197

if.then32:                                        ; preds = %land.lhs.true29
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.55, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6199
  br label %if.end43, !dbg !6199

if.else34:                                        ; preds = %land.lhs.true29, %if.else26
  %23 = load i32, i32* @verbose, align 4, !dbg !6201
  %cmp35 = icmp ugt i32 %23, 3, !dbg !6201
  br i1 %cmp35, label %land.lhs.true37, label %if.end42, !dbg !6201

land.lhs.true37:                                  ; preds = %if.else34
  %24 = load i32, i32* @verbose, align 4, !dbg !6201
  %cmp38 = icmp ugt i32 %24, 3, !dbg !6201
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !6199

if.then40:                                        ; preds = %land.lhs.true37
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6201
  br label %if.end42, !dbg !6201

if.end42:                                         ; preds = %if.then40, %land.lhs.true37, %if.else34
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then32
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then24
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then17
  br label %do.end, !dbg !6203

do.end:                                           ; preds = %if.end45
  br label %sw.epilog, !dbg !6204

sw.bb46:                                          ; preds = %cond.end8
  br label %do.body47, !dbg !6205

do.body47:                                        ; preds = %sw.bb46
  %25 = load i32, i32* @verbose, align 4, !dbg !6206
  %cmp48 = icmp ugt i32 %25, 0, !dbg !6206
  br i1 %cmp48, label %land.lhs.true50, label %if.else55, !dbg !6206

land.lhs.true50:                                  ; preds = %do.body47
  %26 = load i32, i32* @verbose, align 4, !dbg !6206
  %cmp51 = icmp ugt i32 %26, 3, !dbg !6206
  br i1 %cmp51, label %if.then53, label %if.else55, !dbg !6211

if.then53:                                        ; preds = %land.lhs.true50
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.57, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6206
  br label %if.end82, !dbg !6206

if.else55:                                        ; preds = %land.lhs.true50, %do.body47
  %27 = load i32, i32* @verbose, align 4, !dbg !6212
  %cmp56 = icmp ugt i32 %27, 1, !dbg !6212
  br i1 %cmp56, label %land.lhs.true58, label %if.else63, !dbg !6212

land.lhs.true58:                                  ; preds = %if.else55
  %28 = load i32, i32* @verbose, align 4, !dbg !6212
  %cmp59 = icmp ugt i32 %28, 3, !dbg !6212
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !6206

if.then61:                                        ; preds = %land.lhs.true58
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6212
  br label %if.end81, !dbg !6212

if.else63:                                        ; preds = %land.lhs.true58, %if.else55
  %29 = load i32, i32* @verbose, align 4, !dbg !6214
  %cmp64 = icmp ugt i32 %29, 2, !dbg !6214
  br i1 %cmp64, label %land.lhs.true66, label %if.else71, !dbg !6214

land.lhs.true66:                                  ; preds = %if.else63
  %30 = load i32, i32* @verbose, align 4, !dbg !6214
  %cmp67 = icmp ugt i32 %30, 3, !dbg !6214
  br i1 %cmp67, label %if.then69, label %if.else71, !dbg !6212

if.then69:                                        ; preds = %land.lhs.true66
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6214
  br label %if.end80, !dbg !6214

if.else71:                                        ; preds = %land.lhs.true66, %if.else63
  %31 = load i32, i32* @verbose, align 4, !dbg !6216
  %cmp72 = icmp ugt i32 %31, 3, !dbg !6216
  br i1 %cmp72, label %land.lhs.true74, label %if.end79, !dbg !6216

land.lhs.true74:                                  ; preds = %if.else71
  %32 = load i32, i32* @verbose, align 4, !dbg !6216
  %cmp75 = icmp ugt i32 %32, 3, !dbg !6216
  br i1 %cmp75, label %if.then77, label %if.end79, !dbg !6214

if.then77:                                        ; preds = %land.lhs.true74
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6216
  br label %if.end79, !dbg !6216

if.end79:                                         ; preds = %if.then77, %land.lhs.true74, %if.else71
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then69
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then61
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then53
  br label %do.end83, !dbg !6218

do.end83:                                         ; preds = %if.end82
  %33 = load i32, i32* %dstatus, align 4, !dbg !6219
  %shr84 = lshr i32 %33, 3, !dbg !6219
  %and85 = and i32 %shr84, 1, !dbg !6219
  %tobool86 = icmp ne i32 %and85, 0, !dbg !6219
  br i1 %tobool86, label %if.then87, label %if.end118, !dbg !6221

if.then87:                                        ; preds = %do.end83
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6222
  %demod88 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %34, i32 0, i32 1, !dbg !6222
  %35 = load i32, i32* %demod88, align 4, !dbg !6222
  %cmp89 = icmp eq i32 %35, 2, !dbg !6222
  br i1 %cmp89, label %cond.true91, label %cond.false93, !dbg !6222

cond.true91:                                      ; preds = %if.then87
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6222
  %call92 = call i32 @stv090x_read_reg(%struct.stv090x_state* %36, i32 62313) #9, !dbg !6222
  br label %cond.end95, !dbg !6222

cond.false93:                                     ; preds = %if.then87
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6222
  %call94 = call i32 @stv090x_read_reg(%struct.stv090x_state* %37, i32 62825) #9, !dbg !6222
  br label %cond.end95, !dbg !6222

cond.end95:                                       ; preds = %cond.false93, %cond.true91
  %cond96 = phi i32 [ %call92, %cond.true91 ], [ %call94, %cond.false93 ], !dbg !6222
  store i32 %cond96, i32* %reg, align 4, !dbg !6224
  %38 = load i32, i32* %reg, align 4, !dbg !6225
  %shr97 = lshr i32 %38, 1, !dbg !6225
  %and98 = and i32 %shr97, 1, !dbg !6225
  %tobool99 = icmp ne i32 %and98, 0, !dbg !6225
  br i1 %tobool99, label %if.then100, label %if.end117, !dbg !6227

if.then100:                                       ; preds = %cond.end95
  %39 = load i32*, i32** %status.addr, align 8, !dbg !6228
  %40 = load i32, i32* %39, align 4, !dbg !6230
  %or101 = or i32 %40, 4, !dbg !6230
  store i32 %or101, i32* %39, align 4, !dbg !6230
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6231
  %demod102 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %41, i32 0, i32 1, !dbg !6231
  %42 = load i32, i32* %demod102, align 4, !dbg !6231
  %cmp103 = icmp eq i32 %42, 2, !dbg !6231
  br i1 %cmp103, label %cond.true105, label %cond.false107, !dbg !6231

cond.true105:                                     ; preds = %if.then100
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6231
  %call106 = call i32 @stv090x_read_reg(%struct.stv090x_state* %43, i32 62337) #9, !dbg !6231
  br label %cond.end109, !dbg !6231

cond.false107:                                    ; preds = %if.then100
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6231
  %call108 = call i32 @stv090x_read_reg(%struct.stv090x_state* %44, i32 62849) #9, !dbg !6231
  br label %cond.end109, !dbg !6231

cond.end109:                                      ; preds = %cond.false107, %cond.true105
  %cond110 = phi i32 [ %call106, %cond.true105 ], [ %call108, %cond.false107 ], !dbg !6231
  store i32 %cond110, i32* %reg, align 4, !dbg !6232
  %45 = load i32, i32* %reg, align 4, !dbg !6233
  %shr111 = lshr i32 %45, 7, !dbg !6233
  %and112 = and i32 %shr111, 1, !dbg !6233
  %tobool113 = icmp ne i32 %and112, 0, !dbg !6233
  br i1 %tobool113, label %if.then114, label %if.end116, !dbg !6235

if.then114:                                       ; preds = %cond.end109
  %46 = load i32*, i32** %status.addr, align 8, !dbg !6236
  %47 = load i32, i32* %46, align 4, !dbg !6237
  %or115 = or i32 %47, 24, !dbg !6237
  store i32 %or115, i32* %46, align 4, !dbg !6237
  br label %if.end116, !dbg !6238

if.end116:                                        ; preds = %if.then114, %cond.end109
  br label %if.end117, !dbg !6239

if.end117:                                        ; preds = %if.end116, %cond.end95
  br label %if.end118, !dbg !6240

if.end118:                                        ; preds = %if.end117, %do.end83
  br label %sw.epilog, !dbg !6241

sw.bb119:                                         ; preds = %cond.end8
  br label %do.body120, !dbg !6242

do.body120:                                       ; preds = %sw.bb119
  %48 = load i32, i32* @verbose, align 4, !dbg !6243
  %cmp121 = icmp ugt i32 %48, 0, !dbg !6243
  br i1 %cmp121, label %land.lhs.true123, label %if.else128, !dbg !6243

land.lhs.true123:                                 ; preds = %do.body120
  %49 = load i32, i32* @verbose, align 4, !dbg !6243
  %cmp124 = icmp ugt i32 %49, 3, !dbg !6243
  br i1 %cmp124, label %if.then126, label %if.else128, !dbg !6248

if.then126:                                       ; preds = %land.lhs.true123
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.61, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6243
  br label %if.end155, !dbg !6243

if.else128:                                       ; preds = %land.lhs.true123, %do.body120
  %50 = load i32, i32* @verbose, align 4, !dbg !6249
  %cmp129 = icmp ugt i32 %50, 1, !dbg !6249
  br i1 %cmp129, label %land.lhs.true131, label %if.else136, !dbg !6249

land.lhs.true131:                                 ; preds = %if.else128
  %51 = load i32, i32* @verbose, align 4, !dbg !6249
  %cmp132 = icmp ugt i32 %51, 3, !dbg !6249
  br i1 %cmp132, label %if.then134, label %if.else136, !dbg !6243

if.then134:                                       ; preds = %land.lhs.true131
  %call135 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6249
  br label %if.end154, !dbg !6249

if.else136:                                       ; preds = %land.lhs.true131, %if.else128
  %52 = load i32, i32* @verbose, align 4, !dbg !6251
  %cmp137 = icmp ugt i32 %52, 2, !dbg !6251
  br i1 %cmp137, label %land.lhs.true139, label %if.else144, !dbg !6251

land.lhs.true139:                                 ; preds = %if.else136
  %53 = load i32, i32* @verbose, align 4, !dbg !6251
  %cmp140 = icmp ugt i32 %53, 3, !dbg !6251
  br i1 %cmp140, label %if.then142, label %if.else144, !dbg !6249

if.then142:                                       ; preds = %land.lhs.true139
  %call143 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.63, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6251
  br label %if.end153, !dbg !6251

if.else144:                                       ; preds = %land.lhs.true139, %if.else136
  %54 = load i32, i32* @verbose, align 4, !dbg !6253
  %cmp145 = icmp ugt i32 %54, 3, !dbg !6253
  br i1 %cmp145, label %land.lhs.true147, label %if.end152, !dbg !6253

land.lhs.true147:                                 ; preds = %if.else144
  %55 = load i32, i32* @verbose, align 4, !dbg !6253
  %cmp148 = icmp ugt i32 %55, 3, !dbg !6253
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !6251

if.then150:                                       ; preds = %land.lhs.true147
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_read_status, i64 0, i64 0)) #13, !dbg !6253
  br label %if.end152, !dbg !6253

if.end152:                                        ; preds = %if.then150, %land.lhs.true147, %if.else144
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then142
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then134
  br label %if.end155

if.end155:                                        ; preds = %if.end154, %if.then126
  br label %do.end156, !dbg !6255

do.end156:                                        ; preds = %if.end155
  %56 = load i32, i32* %dstatus, align 4, !dbg !6256
  %shr157 = lshr i32 %56, 3, !dbg !6256
  %and158 = and i32 %shr157, 1, !dbg !6256
  %tobool159 = icmp ne i32 %and158, 0, !dbg !6256
  br i1 %tobool159, label %if.then160, label %if.end191, !dbg !6258

if.then160:                                       ; preds = %do.end156
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6259
  %demod161 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %57, i32 0, i32 1, !dbg !6259
  %58 = load i32, i32* %demod161, align 4, !dbg !6259
  %cmp162 = icmp eq i32 %58, 2, !dbg !6259
  br i1 %cmp162, label %cond.true164, label %cond.false166, !dbg !6259

cond.true164:                                     ; preds = %if.then160
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6259
  %call165 = call i32 @stv090x_read_reg(%struct.stv090x_state* %59, i32 62270) #9, !dbg !6259
  br label %cond.end168, !dbg !6259

cond.false166:                                    ; preds = %if.then160
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6259
  %call167 = call i32 @stv090x_read_reg(%struct.stv090x_state* %60, i32 62782) #9, !dbg !6259
  br label %cond.end168, !dbg !6259

cond.end168:                                      ; preds = %cond.false166, %cond.true164
  %cond169 = phi i32 [ %call165, %cond.true164 ], [ %call167, %cond.false166 ], !dbg !6259
  store i32 %cond169, i32* %reg, align 4, !dbg !6261
  %61 = load i32, i32* %reg, align 4, !dbg !6262
  %shr170 = lshr i32 %61, 3, !dbg !6262
  %and171 = and i32 %shr170, 1, !dbg !6262
  %tobool172 = icmp ne i32 %and171, 0, !dbg !6262
  br i1 %tobool172, label %if.then173, label %if.end190, !dbg !6264

if.then173:                                       ; preds = %cond.end168
  %62 = load i32*, i32** %status.addr, align 8, !dbg !6265
  %63 = load i32, i32* %62, align 4, !dbg !6267
  %or174 = or i32 %63, 4, !dbg !6267
  store i32 %or174, i32* %62, align 4, !dbg !6267
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6268
  %demod175 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %64, i32 0, i32 1, !dbg !6268
  %65 = load i32, i32* %demod175, align 4, !dbg !6268
  %cmp176 = icmp eq i32 %65, 2, !dbg !6268
  br i1 %cmp176, label %cond.true178, label %cond.false180, !dbg !6268

cond.true178:                                     ; preds = %if.then173
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6268
  %call179 = call i32 @stv090x_read_reg(%struct.stv090x_state* %66, i32 62337) #9, !dbg !6268
  br label %cond.end182, !dbg !6268

cond.false180:                                    ; preds = %if.then173
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6268
  %call181 = call i32 @stv090x_read_reg(%struct.stv090x_state* %67, i32 62849) #9, !dbg !6268
  br label %cond.end182, !dbg !6268

cond.end182:                                      ; preds = %cond.false180, %cond.true178
  %cond183 = phi i32 [ %call179, %cond.true178 ], [ %call181, %cond.false180 ], !dbg !6268
  store i32 %cond183, i32* %reg, align 4, !dbg !6269
  %68 = load i32, i32* %reg, align 4, !dbg !6270
  %shr184 = lshr i32 %68, 7, !dbg !6270
  %and185 = and i32 %shr184, 1, !dbg !6270
  %tobool186 = icmp ne i32 %and185, 0, !dbg !6270
  br i1 %tobool186, label %if.then187, label %if.end189, !dbg !6272

if.then187:                                       ; preds = %cond.end182
  %69 = load i32*, i32** %status.addr, align 8, !dbg !6273
  %70 = load i32, i32* %69, align 4, !dbg !6274
  %or188 = or i32 %70, 24, !dbg !6274
  store i32 %or188, i32* %69, align 4, !dbg !6274
  br label %if.end189, !dbg !6275

if.end189:                                        ; preds = %if.then187, %cond.end182
  br label %if.end190, !dbg !6276

if.end190:                                        ; preds = %if.end189, %cond.end168
  br label %if.end191, !dbg !6277

if.end191:                                        ; preds = %if.end190, %do.end156
  br label %sw.epilog, !dbg !6278

sw.epilog:                                        ; preds = %if.end191, %if.end118, %do.end
  ret i32 0, !dbg !6279
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_read_per(%struct.dvb_frontend* %fe, i32* %per) #0 !dbg !6280 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %per.addr = alloca i32*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %count_4 = alloca i32, align 4
  %count_3 = alloca i32, align 4
  %count_2 = alloca i32, align 4
  %count_1 = alloca i32, align 4
  %count_0 = alloca i32, align 4
  %count = alloca i32, align 4
  %reg = alloca i32, align 4
  %h = alloca i32, align 4
  %m = alloca i32, align 4
  %l = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store i32* %per, i32** %per.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %per.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6285, metadata !DIExpression()), !dbg !6286
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6287
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6288
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6288
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6287
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6286
  call void @llvm.dbg.declare(metadata i32* %count_4, metadata !6289, metadata !DIExpression()), !dbg !6290
  call void @llvm.dbg.declare(metadata i32* %count_3, metadata !6291, metadata !DIExpression()), !dbg !6292
  call void @llvm.dbg.declare(metadata i32* %count_2, metadata !6293, metadata !DIExpression()), !dbg !6294
  call void @llvm.dbg.declare(metadata i32* %count_1, metadata !6295, metadata !DIExpression()), !dbg !6296
  call void @llvm.dbg.declare(metadata i32* %count_0, metadata !6297, metadata !DIExpression()), !dbg !6298
  call void @llvm.dbg.declare(metadata i32* %count, metadata !6299, metadata !DIExpression()), !dbg !6300
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6301, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.declare(metadata i32* %h, metadata !6303, metadata !DIExpression()), !dbg !6304
  call void @llvm.dbg.declare(metadata i32* %m, metadata !6305, metadata !DIExpression()), !dbg !6306
  call void @llvm.dbg.declare(metadata i32* %l, metadata !6307, metadata !DIExpression()), !dbg !6308
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6309, metadata !DIExpression()), !dbg !6310
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6311
  %call = call i32 @stv090x_read_status(%struct.dvb_frontend* %3, i32* %status) #9, !dbg !6312
  %4 = load i32, i32* %status, align 4, !dbg !6313
  %and = and i32 %4, 16, !dbg !6315
  %tobool = icmp ne i32 %and, 0, !dbg !6315
  br i1 %tobool, label %if.else, label %if.then, !dbg !6316

if.then:                                          ; preds = %entry
  %5 = load i32*, i32** %per.addr, align 8, !dbg !6317
  store i32 8388608, i32* %5, align 4, !dbg !6319
  br label %if.end80, !dbg !6320

if.else:                                          ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6321
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 1, !dbg !6321
  %7 = load i32, i32* %demod, align 4, !dbg !6321
  %cmp = icmp eq i32 %7, 2, !dbg !6321
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6321

cond.true:                                        ; preds = %if.else
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6321
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %8, i32 62365) #9, !dbg !6321
  br label %cond.end, !dbg !6321

cond.false:                                       ; preds = %if.else
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6321
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %9, i32 62877) #9, !dbg !6321
  br label %cond.end, !dbg !6321

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call2, %cond.false ], !dbg !6321
  store i32 %cond, i32* %reg, align 4, !dbg !6323
  %10 = load i32, i32* %reg, align 4, !dbg !6324
  %shr = lshr i32 %10, 0, !dbg !6324
  %and3 = and i32 %shr, 127, !dbg !6324
  store i32 %and3, i32* %h, align 4, !dbg !6325
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6326
  %demod4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 1, !dbg !6326
  %12 = load i32, i32* %demod4, align 4, !dbg !6326
  %cmp5 = icmp eq i32 %12, 2, !dbg !6326
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !6326

cond.true6:                                       ; preds = %cond.end
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6326
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 62366) #9, !dbg !6326
  br label %cond.end10, !dbg !6326

cond.false8:                                      ; preds = %cond.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6326
  %call9 = call i32 @stv090x_read_reg(%struct.stv090x_state* %14, i32 62878) #9, !dbg !6326
  br label %cond.end10, !dbg !6326

cond.end10:                                       ; preds = %cond.false8, %cond.true6
  %cond11 = phi i32 [ %call7, %cond.true6 ], [ %call9, %cond.false8 ], !dbg !6326
  store i32 %cond11, i32* %reg, align 4, !dbg !6327
  %15 = load i32, i32* %reg, align 4, !dbg !6328
  %shr12 = lshr i32 %15, 0, !dbg !6328
  %and13 = and i32 %shr12, 255, !dbg !6328
  store i32 %and13, i32* %m, align 4, !dbg !6329
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6330
  %demod14 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !6330
  %17 = load i32, i32* %demod14, align 4, !dbg !6330
  %cmp15 = icmp eq i32 %17, 2, !dbg !6330
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !6330

cond.true16:                                      ; preds = %cond.end10
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6330
  %call17 = call i32 @stv090x_read_reg(%struct.stv090x_state* %18, i32 62367) #9, !dbg !6330
  br label %cond.end20, !dbg !6330

cond.false18:                                     ; preds = %cond.end10
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6330
  %call19 = call i32 @stv090x_read_reg(%struct.stv090x_state* %19, i32 62879) #9, !dbg !6330
  br label %cond.end20, !dbg !6330

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !6330
  store i32 %cond21, i32* %reg, align 4, !dbg !6331
  %20 = load i32, i32* %reg, align 4, !dbg !6332
  %shr22 = lshr i32 %20, 0, !dbg !6332
  %and23 = and i32 %shr22, 255, !dbg !6332
  store i32 %and23, i32* %l, align 4, !dbg !6333
  %21 = load i32, i32* %h, align 4, !dbg !6334
  %shl = shl i32 %21, 16, !dbg !6335
  %22 = load i32, i32* %m, align 4, !dbg !6336
  %shl24 = shl i32 %22, 8, !dbg !6337
  %or = or i32 %shl, %shl24, !dbg !6338
  %23 = load i32, i32* %l, align 4, !dbg !6339
  %or25 = or i32 %or, %23, !dbg !6340
  %24 = load i32*, i32** %per.addr, align 8, !dbg !6341
  store i32 %or25, i32* %24, align 4, !dbg !6342
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6343
  %demod26 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 1, !dbg !6343
  %26 = load i32, i32* %demod26, align 4, !dbg !6343
  %cmp27 = icmp eq i32 %26, 2, !dbg !6343
  br i1 %cmp27, label %cond.true28, label %cond.false30, !dbg !6343

cond.true28:                                      ; preds = %cond.end20
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6343
  %call29 = call i32 @stv090x_read_reg(%struct.stv090x_state* %27, i32 62376) #9, !dbg !6343
  br label %cond.end32, !dbg !6343

cond.false30:                                     ; preds = %cond.end20
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6343
  %call31 = call i32 @stv090x_read_reg(%struct.stv090x_state* %28, i32 62888) #9, !dbg !6343
  br label %cond.end32, !dbg !6343

cond.end32:                                       ; preds = %cond.false30, %cond.true28
  %cond33 = phi i32 [ %call29, %cond.true28 ], [ %call31, %cond.false30 ], !dbg !6343
  store i32 %cond33, i32* %count_4, align 4, !dbg !6344
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6345
  %demod34 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %29, i32 0, i32 1, !dbg !6345
  %30 = load i32, i32* %demod34, align 4, !dbg !6345
  %cmp35 = icmp eq i32 %30, 2, !dbg !6345
  br i1 %cmp35, label %cond.true36, label %cond.false38, !dbg !6345

cond.true36:                                      ; preds = %cond.end32
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6345
  %call37 = call i32 @stv090x_read_reg(%struct.stv090x_state* %31, i32 62377) #9, !dbg !6345
  br label %cond.end40, !dbg !6345

cond.false38:                                     ; preds = %cond.end32
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6345
  %call39 = call i32 @stv090x_read_reg(%struct.stv090x_state* %32, i32 62889) #9, !dbg !6345
  br label %cond.end40, !dbg !6345

cond.end40:                                       ; preds = %cond.false38, %cond.true36
  %cond41 = phi i32 [ %call37, %cond.true36 ], [ %call39, %cond.false38 ], !dbg !6345
  store i32 %cond41, i32* %count_3, align 4, !dbg !6346
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6347
  %demod42 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 1, !dbg !6347
  %34 = load i32, i32* %demod42, align 4, !dbg !6347
  %cmp43 = icmp eq i32 %34, 2, !dbg !6347
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !6347

cond.true44:                                      ; preds = %cond.end40
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6347
  %call45 = call i32 @stv090x_read_reg(%struct.stv090x_state* %35, i32 62378) #9, !dbg !6347
  br label %cond.end48, !dbg !6347

cond.false46:                                     ; preds = %cond.end40
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6347
  %call47 = call i32 @stv090x_read_reg(%struct.stv090x_state* %36, i32 62890) #9, !dbg !6347
  br label %cond.end48, !dbg !6347

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !6347
  store i32 %cond49, i32* %count_2, align 4, !dbg !6348
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6349
  %demod50 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 1, !dbg !6349
  %38 = load i32, i32* %demod50, align 4, !dbg !6349
  %cmp51 = icmp eq i32 %38, 2, !dbg !6349
  br i1 %cmp51, label %cond.true52, label %cond.false54, !dbg !6349

cond.true52:                                      ; preds = %cond.end48
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6349
  %call53 = call i32 @stv090x_read_reg(%struct.stv090x_state* %39, i32 62379) #9, !dbg !6349
  br label %cond.end56, !dbg !6349

cond.false54:                                     ; preds = %cond.end48
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6349
  %call55 = call i32 @stv090x_read_reg(%struct.stv090x_state* %40, i32 62891) #9, !dbg !6349
  br label %cond.end56, !dbg !6349

cond.end56:                                       ; preds = %cond.false54, %cond.true52
  %cond57 = phi i32 [ %call53, %cond.true52 ], [ %call55, %cond.false54 ], !dbg !6349
  store i32 %cond57, i32* %count_1, align 4, !dbg !6350
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6351
  %demod58 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %41, i32 0, i32 1, !dbg !6351
  %42 = load i32, i32* %demod58, align 4, !dbg !6351
  %cmp59 = icmp eq i32 %42, 2, !dbg !6351
  br i1 %cmp59, label %cond.true60, label %cond.false62, !dbg !6351

cond.true60:                                      ; preds = %cond.end56
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6351
  %call61 = call i32 @stv090x_read_reg(%struct.stv090x_state* %43, i32 62380) #9, !dbg !6351
  br label %cond.end64, !dbg !6351

cond.false62:                                     ; preds = %cond.end56
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6351
  %call63 = call i32 @stv090x_read_reg(%struct.stv090x_state* %44, i32 62892) #9, !dbg !6351
  br label %cond.end64, !dbg !6351

cond.end64:                                       ; preds = %cond.false62, %cond.true60
  %cond65 = phi i32 [ %call61, %cond.true60 ], [ %call63, %cond.false62 ], !dbg !6351
  store i32 %cond65, i32* %count_0, align 4, !dbg !6352
  %45 = load i32, i32* %count_4, align 4, !dbg !6353
  %tobool66 = icmp ne i32 %45, 0, !dbg !6353
  br i1 %tobool66, label %if.else76, label %land.lhs.true, !dbg !6355

land.lhs.true:                                    ; preds = %cond.end64
  %46 = load i32, i32* %count_3, align 4, !dbg !6356
  %tobool67 = icmp ne i32 %46, 0, !dbg !6356
  br i1 %tobool67, label %if.else76, label %if.then68, !dbg !6357

if.then68:                                        ; preds = %land.lhs.true
  %47 = load i32, i32* %count_2, align 4, !dbg !6358
  %and69 = and i32 %47, 255, !dbg !6360
  %shl70 = shl i32 %and69, 16, !dbg !6361
  store i32 %shl70, i32* %count, align 4, !dbg !6362
  %48 = load i32, i32* %count_1, align 4, !dbg !6363
  %and71 = and i32 %48, 255, !dbg !6364
  %shl72 = shl i32 %and71, 8, !dbg !6365
  %49 = load i32, i32* %count, align 4, !dbg !6366
  %or73 = or i32 %49, %shl72, !dbg !6366
  store i32 %or73, i32* %count, align 4, !dbg !6366
  %50 = load i32, i32* %count_0, align 4, !dbg !6367
  %and74 = and i32 %50, 255, !dbg !6368
  %51 = load i32, i32* %count, align 4, !dbg !6369
  %or75 = or i32 %51, %and74, !dbg !6369
  store i32 %or75, i32* %count, align 4, !dbg !6369
  br label %if.end, !dbg !6370

if.else76:                                        ; preds = %land.lhs.true, %cond.end64
  store i32 16777216, i32* %count, align 4, !dbg !6371
  br label %if.end

if.end:                                           ; preds = %if.else76, %if.then68
  %52 = load i32, i32* %count, align 4, !dbg !6373
  %cmp77 = icmp eq i32 %52, 0, !dbg !6375
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !6376

if.then78:                                        ; preds = %if.end
  %53 = load i32*, i32** %per.addr, align 8, !dbg !6377
  store i32 1, i32* %53, align 4, !dbg !6378
  br label %if.end79, !dbg !6379

if.end79:                                         ; preds = %if.then78, %if.end
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6380
  %demod81 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 1, !dbg !6380
  %55 = load i32, i32* %demod81, align 4, !dbg !6380
  %cmp82 = icmp eq i32 %55, 2, !dbg !6380
  br i1 %cmp82, label %cond.true83, label %cond.false85, !dbg !6380

cond.true83:                                      ; preds = %if.end80
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6380
  %call84 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62376, i8 zeroext 0) #9, !dbg !6380
  br label %cond.end87, !dbg !6380

cond.false85:                                     ; preds = %if.end80
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6380
  %call86 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62888, i8 zeroext 0) #9, !dbg !6380
  br label %cond.end87, !dbg !6380

cond.end87:                                       ; preds = %cond.false85, %cond.true83
  %cond88 = phi i32 [ %call84, %cond.true83 ], [ %call86, %cond.false85 ], !dbg !6380
  %cmp89 = icmp slt i32 %cond88, 0, !dbg !6382
  br i1 %cmp89, label %if.then90, label %if.end91, !dbg !6383

if.then90:                                        ; preds = %cond.end87
  br label %err, !dbg !6384

if.end91:                                         ; preds = %cond.end87
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6385
  %demod92 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 1, !dbg !6385
  %59 = load i32, i32* %demod92, align 4, !dbg !6385
  %cmp93 = icmp eq i32 %59, 2, !dbg !6385
  br i1 %cmp93, label %cond.true94, label %cond.false96, !dbg !6385

cond.true94:                                      ; preds = %if.end91
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6385
  %call95 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62364, i8 zeroext -63) #9, !dbg !6385
  br label %cond.end98, !dbg !6385

cond.false96:                                     ; preds = %if.end91
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6385
  %call97 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 62876, i8 zeroext -63) #9, !dbg !6385
  br label %cond.end98, !dbg !6385

cond.end98:                                       ; preds = %cond.false96, %cond.true94
  %cond99 = phi i32 [ %call95, %cond.true94 ], [ %call97, %cond.false96 ], !dbg !6385
  %cmp100 = icmp slt i32 %cond99, 0, !dbg !6387
  br i1 %cmp100, label %if.then101, label %if.end102, !dbg !6388

if.then101:                                       ; preds = %cond.end98
  br label %err, !dbg !6389

if.end102:                                        ; preds = %cond.end98
  store i32 0, i32* %retval, align 4, !dbg !6390
  br label %return, !dbg !6390

err:                                              ; preds = %if.then101, %if.then90
  call void @llvm.dbg.label(metadata !6391), !dbg !6392
  br label %do.body, !dbg !6393

do.body:                                          ; preds = %err
  %62 = load i32, i32* @verbose, align 4, !dbg !6394
  %cmp103 = icmp ugt i32 %62, 0, !dbg !6394
  br i1 %cmp103, label %land.lhs.true104, label %if.else108, !dbg !6394

land.lhs.true104:                                 ; preds = %do.body
  %63 = load i32, i32* @verbose, align 4, !dbg !6394
  %cmp105 = icmp ugt i32 %63, 0, !dbg !6394
  br i1 %cmp105, label %if.then106, label %if.else108, !dbg !6399

if.then106:                                       ; preds = %land.lhs.true104
  %call107 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_per, i64 0, i64 0)) #13, !dbg !6394
  br label %if.end129, !dbg !6394

if.else108:                                       ; preds = %land.lhs.true104, %do.body
  %64 = load i32, i32* @verbose, align 4, !dbg !6400
  %cmp109 = icmp ugt i32 %64, 1, !dbg !6400
  br i1 %cmp109, label %land.lhs.true110, label %if.else114, !dbg !6400

land.lhs.true110:                                 ; preds = %if.else108
  %65 = load i32, i32* @verbose, align 4, !dbg !6400
  %cmp111 = icmp ugt i32 %65, 0, !dbg !6400
  br i1 %cmp111, label %if.then112, label %if.else114, !dbg !6394

if.then112:                                       ; preds = %land.lhs.true110
  %call113 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_per, i64 0, i64 0)) #13, !dbg !6400
  br label %if.end128, !dbg !6400

if.else114:                                       ; preds = %land.lhs.true110, %if.else108
  %66 = load i32, i32* @verbose, align 4, !dbg !6402
  %cmp115 = icmp ugt i32 %66, 2, !dbg !6402
  br i1 %cmp115, label %land.lhs.true116, label %if.else120, !dbg !6402

land.lhs.true116:                                 ; preds = %if.else114
  %67 = load i32, i32* @verbose, align 4, !dbg !6402
  %cmp117 = icmp ugt i32 %67, 0, !dbg !6402
  br i1 %cmp117, label %if.then118, label %if.else120, !dbg !6400

if.then118:                                       ; preds = %land.lhs.true116
  %call119 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_per, i64 0, i64 0)) #13, !dbg !6402
  br label %if.end127, !dbg !6402

if.else120:                                       ; preds = %land.lhs.true116, %if.else114
  %68 = load i32, i32* @verbose, align 4, !dbg !6404
  %cmp121 = icmp ugt i32 %68, 3, !dbg !6404
  br i1 %cmp121, label %land.lhs.true122, label %if.end126, !dbg !6404

land.lhs.true122:                                 ; preds = %if.else120
  %69 = load i32, i32* @verbose, align 4, !dbg !6404
  %cmp123 = icmp ugt i32 %69, 0, !dbg !6404
  br i1 %cmp123, label %if.then124, label %if.end126, !dbg !6402

if.then124:                                       ; preds = %land.lhs.true122
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_per, i64 0, i64 0)) #13, !dbg !6404
  br label %if.end126, !dbg !6404

if.end126:                                        ; preds = %if.then124, %land.lhs.true122, %if.else120
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then118
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then112
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then106
  br label %do.end, !dbg !6406

do.end:                                           ; preds = %if.end129
  store i32 -1, i32* %retval, align 4, !dbg !6407
  br label %return, !dbg !6407

return:                                           ; preds = %do.end, %if.end102
  %70 = load i32, i32* %retval, align 4, !dbg !6408
  ret i32 %70, !dbg !6408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_read_signal_strength(%struct.dvb_frontend* %fe, i16* %strength) #0 !dbg !6409 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %strength.addr = alloca i16*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %agc_0 = alloca i32, align 4
  %agc_1 = alloca i32, align 4
  %agc = alloca i32, align 4
  %str = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6410, metadata !DIExpression()), !dbg !6411
  store i16* %strength, i16** %strength.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %strength.addr, metadata !6412, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6414, metadata !DIExpression()), !dbg !6415
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6416
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6417
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6417
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6416
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6415
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6418, metadata !DIExpression()), !dbg !6419
  call void @llvm.dbg.declare(metadata i32* %agc_0, metadata !6420, metadata !DIExpression()), !dbg !6421
  call void @llvm.dbg.declare(metadata i32* %agc_1, metadata !6422, metadata !DIExpression()), !dbg !6423
  call void @llvm.dbg.declare(metadata i32* %agc, metadata !6424, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata i32* %str, metadata !6426, metadata !DIExpression()), !dbg !6427
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6428
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 1, !dbg !6428
  %4 = load i32, i32* %demod, align 4, !dbg !6428
  %cmp = icmp eq i32 %4, 2, !dbg !6428
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6428

cond.true:                                        ; preds = %entry
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6428
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 61966) #9, !dbg !6428
  br label %cond.end, !dbg !6428

cond.false:                                       ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6428
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62478) #9, !dbg !6428
  br label %cond.end, !dbg !6428

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !6428
  store i32 %cond, i32* %reg, align 4, !dbg !6429
  %7 = load i32, i32* %reg, align 4, !dbg !6430
  %shr = lshr i32 %7, 0, !dbg !6430
  %and = and i32 %shr, 255, !dbg !6430
  store i32 %and, i32* %agc_1, align 4, !dbg !6431
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6432
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !6432
  %9 = load i32, i32* %demod2, align 4, !dbg !6432
  %cmp3 = icmp eq i32 %9, 2, !dbg !6432
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !6432

cond.true4:                                       ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6432
  %call5 = call i32 @stv090x_read_reg(%struct.stv090x_state* %10, i32 61967) #9, !dbg !6432
  br label %cond.end8, !dbg !6432

cond.false6:                                      ; preds = %cond.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6432
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62479) #9, !dbg !6432
  br label %cond.end8, !dbg !6432

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i32 [ %call5, %cond.true4 ], [ %call7, %cond.false6 ], !dbg !6432
  store i32 %cond9, i32* %reg, align 4, !dbg !6433
  %12 = load i32, i32* %reg, align 4, !dbg !6434
  %shr10 = lshr i32 %12, 0, !dbg !6434
  %and11 = and i32 %shr10, 255, !dbg !6434
  store i32 %and11, i32* %agc_0, align 4, !dbg !6435
  %13 = load i32, i32* %agc_1, align 4, !dbg !6436
  %shl = shl i32 %13, 8, !dbg !6436
  %14 = load i32, i32* %agc_0, align 4, !dbg !6436
  %or = or i32 %shl, %14, !dbg !6436
  store i32 %or, i32* %agc, align 4, !dbg !6437
  %15 = load i32, i32* %agc, align 4, !dbg !6438
  %call12 = call i32 @stv090x_table_lookup(%struct.stv090x_tab* getelementptr inbounds ([14 x %struct.stv090x_tab], [14 x %struct.stv090x_tab]* @stv090x_rf_tab, i64 0, i64 0), i32 13, i32 %15) #9, !dbg !6439
  store i32 %call12, i32* %str, align 4, !dbg !6440
  %16 = load i32, i32* %agc, align 4, !dbg !6441
  %17 = load i32, i32* getelementptr inbounds ([14 x %struct.stv090x_tab], [14 x %struct.stv090x_tab]* @stv090x_rf_tab, i64 0, i64 0, i32 1), align 4, !dbg !6443
  %cmp13 = icmp sgt i32 %16, %17, !dbg !6444
  br i1 %cmp13, label %if.then, label %if.else, !dbg !6445

if.then:                                          ; preds = %cond.end8
  store i32 0, i32* %str, align 4, !dbg !6446
  br label %if.end16, !dbg !6447

if.else:                                          ; preds = %cond.end8
  %18 = load i32, i32* %agc, align 4, !dbg !6448
  %19 = load i32, i32* getelementptr inbounds ([14 x %struct.stv090x_tab], [14 x %struct.stv090x_tab]* @stv090x_rf_tab, i64 0, i64 13, i32 1), align 4, !dbg !6450
  %cmp14 = icmp slt i32 %18, %19, !dbg !6451
  br i1 %cmp14, label %if.then15, label %if.end, !dbg !6452

if.then15:                                        ; preds = %if.else
  store i32 -100, i32* %str, align 4, !dbg !6453
  br label %if.end, !dbg !6454

if.end:                                           ; preds = %if.then15, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then
  %20 = load i32, i32* %str, align 4, !dbg !6455
  %add = add i32 %20, 100, !dbg !6456
  %mul = mul i32 %add, 65535, !dbg !6457
  %div = sdiv i32 %mul, 100, !dbg !6458
  %conv = trunc i32 %div to i16, !dbg !6459
  %21 = load i16*, i16** %strength.addr, align 8, !dbg !6460
  store i16 %conv, i16* %21, align 2, !dbg !6461
  ret i32 0, !dbg !6462
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_read_cnr(%struct.dvb_frontend* %fe, i16* %cnr) #0 !dbg !6463 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %cnr.addr = alloca i16*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg_0 = alloca i32, align 4
  %reg_1 = alloca i32, align 4
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  %val_0 = alloca i32, align 4
  %val_1 = alloca i32, align 4
  %val = alloca i32, align 4
  %lock_f = alloca i8, align 1
  %div = alloca i32, align 4
  %last = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6464, metadata !DIExpression()), !dbg !6465
  store i16* %cnr, i16** %cnr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %cnr.addr, metadata !6466, metadata !DIExpression()), !dbg !6467
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6468, metadata !DIExpression()), !dbg !6469
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6470
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6471
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6471
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6470
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6469
  call void @llvm.dbg.declare(metadata i32* %reg_0, metadata !6472, metadata !DIExpression()), !dbg !6473
  call void @llvm.dbg.declare(metadata i32* %reg_1, metadata !6474, metadata !DIExpression()), !dbg !6475
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6476, metadata !DIExpression()), !dbg !6477
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6478, metadata !DIExpression()), !dbg !6479
  call void @llvm.dbg.declare(metadata i32* %val_0, metadata !6480, metadata !DIExpression()), !dbg !6481
  call void @llvm.dbg.declare(metadata i32* %val_1, metadata !6482, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.declare(metadata i32* %val, metadata !6484, metadata !DIExpression()), !dbg !6485
  store i32 0, i32* %val, align 4, !dbg !6485
  call void @llvm.dbg.declare(metadata i8* %lock_f, metadata !6486, metadata !DIExpression()), !dbg !6487
  call void @llvm.dbg.declare(metadata i32* %div, metadata !6488, metadata !DIExpression()), !dbg !6489
  call void @llvm.dbg.declare(metadata i32* %last, metadata !6490, metadata !DIExpression()), !dbg !6491
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6492
  %delsys = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 8, !dbg !6493
  %4 = load i32, i32* %delsys, align 8, !dbg !6493
  switch i32 %4, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb34
    i32 3, label %sw.bb34
  ], !dbg !6494

sw.bb:                                            ; preds = %entry
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6495
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 1, !dbg !6495
  %6 = load i32, i32* %demod, align 4, !dbg !6495
  %cmp = icmp eq i32 %6, 2, !dbg !6495
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6495

cond.true:                                        ; preds = %sw.bb
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6495
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 61970) #9, !dbg !6495
  br label %cond.end, !dbg !6495

cond.false:                                       ; preds = %sw.bb
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6495
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %8, i32 62482) #9, !dbg !6495
  br label %cond.end, !dbg !6495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !6495
  store i32 %cond, i32* %reg, align 4, !dbg !6497
  %9 = load i32, i32* %reg, align 4, !dbg !6498
  %shr = lshr i32 %9, 3, !dbg !6498
  %and = and i32 %shr, 1, !dbg !6498
  %conv = trunc i32 %and to i8, !dbg !6498
  store i8 %conv, i8* %lock_f, align 1, !dbg !6499
  %10 = load i8, i8* %lock_f, align 1, !dbg !6500
  %tobool = icmp ne i8 %10, 0, !dbg !6500
  br i1 %tobool, label %if.then, label %if.end33, !dbg !6502

if.then:                                          ; preds = %cond.end
  call void @msleep(i32 5) #9, !dbg !6503
  store i32 0, i32* %i, align 4, !dbg !6505
  br label %for.cond, !dbg !6507

for.cond:                                         ; preds = %for.inc, %if.then
  %11 = load i32, i32* %i, align 4, !dbg !6508
  %cmp2 = icmp ult i32 %11, 16, !dbg !6510
  br i1 %cmp2, label %for.body, label %for.end, !dbg !6511

for.body:                                         ; preds = %for.cond
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6512
  %demod4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !6512
  %13 = load i32, i32* %demod4, align 4, !dbg !6512
  %cmp5 = icmp eq i32 %13, 2, !dbg !6512
  br i1 %cmp5, label %cond.true7, label %cond.false9, !dbg !6512

cond.true7:                                       ; preds = %for.body
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6512
  %call8 = call i32 @stv090x_read_reg(%struct.stv090x_state* %14, i32 62084) #9, !dbg !6512
  br label %cond.end11, !dbg !6512

cond.false9:                                      ; preds = %for.body
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6512
  %call10 = call i32 @stv090x_read_reg(%struct.stv090x_state* %15, i32 62596) #9, !dbg !6512
  br label %cond.end11, !dbg !6512

cond.end11:                                       ; preds = %cond.false9, %cond.true7
  %cond12 = phi i32 [ %call8, %cond.true7 ], [ %call10, %cond.false9 ], !dbg !6512
  store i32 %cond12, i32* %reg_1, align 4, !dbg !6514
  %16 = load i32, i32* %reg_1, align 4, !dbg !6515
  %shr13 = lshr i32 %16, 0, !dbg !6515
  %and14 = and i32 %shr13, 255, !dbg !6515
  store i32 %and14, i32* %val_1, align 4, !dbg !6516
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6517
  %demod15 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !6517
  %18 = load i32, i32* %demod15, align 4, !dbg !6517
  %cmp16 = icmp eq i32 %18, 2, !dbg !6517
  br i1 %cmp16, label %cond.true18, label %cond.false20, !dbg !6517

cond.true18:                                      ; preds = %cond.end11
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6517
  %call19 = call i32 @stv090x_read_reg(%struct.stv090x_state* %19, i32 62085) #9, !dbg !6517
  br label %cond.end22, !dbg !6517

cond.false20:                                     ; preds = %cond.end11
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6517
  %call21 = call i32 @stv090x_read_reg(%struct.stv090x_state* %20, i32 62597) #9, !dbg !6517
  br label %cond.end22, !dbg !6517

cond.end22:                                       ; preds = %cond.false20, %cond.true18
  %cond23 = phi i32 [ %call19, %cond.true18 ], [ %call21, %cond.false20 ], !dbg !6517
  store i32 %cond23, i32* %reg_0, align 4, !dbg !6518
  %21 = load i32, i32* %reg_0, align 4, !dbg !6519
  %shr24 = lshr i32 %21, 0, !dbg !6519
  %and25 = and i32 %shr24, 255, !dbg !6519
  store i32 %and25, i32* %val_0, align 4, !dbg !6520
  %22 = load i32, i32* %val_1, align 4, !dbg !6521
  %shl = shl i32 %22, 8, !dbg !6521
  %23 = load i32, i32* %val_0, align 4, !dbg !6521
  %or = or i32 %shl, %23, !dbg !6521
  %24 = load i32, i32* %val, align 4, !dbg !6522
  %add = add i32 %24, %or, !dbg !6522
  store i32 %add, i32* %val, align 4, !dbg !6522
  call void @msleep(i32 1) #9, !dbg !6523
  br label %for.inc, !dbg !6524

for.inc:                                          ; preds = %cond.end22
  %25 = load i32, i32* %i, align 4, !dbg !6525
  %inc = add i32 %25, 1, !dbg !6525
  store i32 %inc, i32* %i, align 4, !dbg !6525
  br label %for.cond, !dbg !6526, !llvm.loop !6527

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* %val, align 4, !dbg !6529
  %div26 = sdiv i32 %26, 16, !dbg !6529
  store i32 %div26, i32* %val, align 4, !dbg !6529
  store i32 54, i32* %last, align 4, !dbg !6530
  %27 = load i32, i32* %last, align 4, !dbg !6531
  %idxprom = zext i32 %27 to i64, !dbg !6532
  %arrayidx = getelementptr [55 x %struct.stv090x_tab], [55 x %struct.stv090x_tab]* @stv090x_s2cn_tab, i64 0, i64 %idxprom, !dbg !6532
  %real = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx, i32 0, i32 0, !dbg !6533
  %28 = load i32, i32* %real, align 8, !dbg !6533
  %29 = load i32, i32* getelementptr inbounds ([55 x %struct.stv090x_tab], [55 x %struct.stv090x_tab]* @stv090x_s2cn_tab, i64 0, i64 3, i32 0), align 8, !dbg !6534
  %sub = sub i32 %28, %29, !dbg !6535
  store i32 %sub, i32* %div, align 4, !dbg !6536
  %30 = load i32, i32* %last, align 4, !dbg !6537
  %31 = load i32, i32* %val, align 4, !dbg !6538
  %call27 = call i32 @stv090x_table_lookup(%struct.stv090x_tab* getelementptr inbounds ([55 x %struct.stv090x_tab], [55 x %struct.stv090x_tab]* @stv090x_s2cn_tab, i64 0, i64 0), i32 %30, i32 %31) #9, !dbg !6539
  store i32 %call27, i32* %val, align 4, !dbg !6540
  %32 = load i32, i32* %val, align 4, !dbg !6541
  %cmp28 = icmp slt i32 %32, 0, !dbg !6543
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !6544

if.then30:                                        ; preds = %for.end
  store i32 0, i32* %val, align 4, !dbg !6545
  br label %if.end, !dbg !6546

if.end:                                           ; preds = %if.then30, %for.end
  %33 = load i32, i32* %val, align 4, !dbg !6547
  %mul = mul i32 %33, 65535, !dbg !6548
  %34 = load i32, i32* %div, align 4, !dbg !6549
  %div31 = sdiv i32 %mul, %34, !dbg !6550
  %conv32 = trunc i32 %div31 to i16, !dbg !6547
  %35 = load i16*, i16** %cnr.addr, align 8, !dbg !6551
  store i16 %conv32, i16* %35, align 2, !dbg !6552
  br label %if.end33, !dbg !6553

if.end33:                                         ; preds = %if.end, %cond.end
  br label %sw.epilog, !dbg !6554

sw.bb34:                                          ; preds = %entry, %entry
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6555
  %demod35 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !6555
  %37 = load i32, i32* %demod35, align 4, !dbg !6555
  %cmp36 = icmp eq i32 %37, 2, !dbg !6555
  br i1 %cmp36, label %cond.true38, label %cond.false40, !dbg !6555

cond.true38:                                      ; preds = %sw.bb34
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6555
  %call39 = call i32 @stv090x_read_reg(%struct.stv090x_state* %38, i32 61970) #9, !dbg !6555
  br label %cond.end42, !dbg !6555

cond.false40:                                     ; preds = %sw.bb34
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6555
  %call41 = call i32 @stv090x_read_reg(%struct.stv090x_state* %39, i32 62482) #9, !dbg !6555
  br label %cond.end42, !dbg !6555

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !6555
  store i32 %cond43, i32* %reg, align 4, !dbg !6556
  %40 = load i32, i32* %reg, align 4, !dbg !6557
  %shr44 = lshr i32 %40, 3, !dbg !6557
  %and45 = and i32 %shr44, 1, !dbg !6557
  %conv46 = trunc i32 %and45 to i8, !dbg !6557
  store i8 %conv46, i8* %lock_f, align 1, !dbg !6558
  %41 = load i8, i8* %lock_f, align 1, !dbg !6559
  %tobool47 = icmp ne i8 %41, 0, !dbg !6559
  br i1 %tobool47, label %if.then48, label %if.end90, !dbg !6561

if.then48:                                        ; preds = %cond.end42
  call void @msleep(i32 5) #9, !dbg !6562
  store i32 0, i32* %i, align 4, !dbg !6564
  br label %for.cond49, !dbg !6566

for.cond49:                                       ; preds = %for.inc78, %if.then48
  %42 = load i32, i32* %i, align 4, !dbg !6567
  %cmp50 = icmp ult i32 %42, 16, !dbg !6569
  br i1 %cmp50, label %for.body52, label %for.end80, !dbg !6570

for.body52:                                       ; preds = %for.cond49
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6571
  %demod53 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %43, i32 0, i32 1, !dbg !6571
  %44 = load i32, i32* %demod53, align 4, !dbg !6571
  %cmp54 = icmp eq i32 %44, 2, !dbg !6571
  br i1 %cmp54, label %cond.true56, label %cond.false58, !dbg !6571

cond.true56:                                      ; preds = %for.body52
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6571
  %call57 = call i32 @stv090x_read_reg(%struct.stv090x_state* %45, i32 62088) #9, !dbg !6571
  br label %cond.end60, !dbg !6571

cond.false58:                                     ; preds = %for.body52
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6571
  %call59 = call i32 @stv090x_read_reg(%struct.stv090x_state* %46, i32 62600) #9, !dbg !6571
  br label %cond.end60, !dbg !6571

cond.end60:                                       ; preds = %cond.false58, %cond.true56
  %cond61 = phi i32 [ %call57, %cond.true56 ], [ %call59, %cond.false58 ], !dbg !6571
  store i32 %cond61, i32* %reg_1, align 4, !dbg !6573
  %47 = load i32, i32* %reg_1, align 4, !dbg !6574
  %shr62 = lshr i32 %47, 0, !dbg !6574
  %and63 = and i32 %shr62, 255, !dbg !6574
  store i32 %and63, i32* %val_1, align 4, !dbg !6575
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6576
  %demod64 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 1, !dbg !6576
  %49 = load i32, i32* %demod64, align 4, !dbg !6576
  %cmp65 = icmp eq i32 %49, 2, !dbg !6576
  br i1 %cmp65, label %cond.true67, label %cond.false69, !dbg !6576

cond.true67:                                      ; preds = %cond.end60
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6576
  %call68 = call i32 @stv090x_read_reg(%struct.stv090x_state* %50, i32 62089) #9, !dbg !6576
  br label %cond.end71, !dbg !6576

cond.false69:                                     ; preds = %cond.end60
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6576
  %call70 = call i32 @stv090x_read_reg(%struct.stv090x_state* %51, i32 62601) #9, !dbg !6576
  br label %cond.end71, !dbg !6576

cond.end71:                                       ; preds = %cond.false69, %cond.true67
  %cond72 = phi i32 [ %call68, %cond.true67 ], [ %call70, %cond.false69 ], !dbg !6576
  store i32 %cond72, i32* %reg_0, align 4, !dbg !6577
  %52 = load i32, i32* %reg_0, align 4, !dbg !6578
  %shr73 = lshr i32 %52, 0, !dbg !6578
  %and74 = and i32 %shr73, 255, !dbg !6578
  store i32 %and74, i32* %val_0, align 4, !dbg !6579
  %53 = load i32, i32* %val_1, align 4, !dbg !6580
  %shl75 = shl i32 %53, 8, !dbg !6580
  %54 = load i32, i32* %val_0, align 4, !dbg !6580
  %or76 = or i32 %shl75, %54, !dbg !6580
  %55 = load i32, i32* %val, align 4, !dbg !6581
  %add77 = add i32 %55, %or76, !dbg !6581
  store i32 %add77, i32* %val, align 4, !dbg !6581
  call void @msleep(i32 1) #9, !dbg !6582
  br label %for.inc78, !dbg !6583

for.inc78:                                        ; preds = %cond.end71
  %56 = load i32, i32* %i, align 4, !dbg !6584
  %inc79 = add i32 %56, 1, !dbg !6584
  store i32 %inc79, i32* %i, align 4, !dbg !6584
  br label %for.cond49, !dbg !6585, !llvm.loop !6586

for.end80:                                        ; preds = %for.cond49
  %57 = load i32, i32* %val, align 4, !dbg !6588
  %div81 = sdiv i32 %57, 16, !dbg !6588
  store i32 %div81, i32* %val, align 4, !dbg !6588
  store i32 51, i32* %last, align 4, !dbg !6589
  %58 = load i32, i32* %last, align 4, !dbg !6590
  %idxprom82 = zext i32 %58 to i64, !dbg !6591
  %arrayidx83 = getelementptr [52 x %struct.stv090x_tab], [52 x %struct.stv090x_tab]* @stv090x_s1cn_tab, i64 0, i64 %idxprom82, !dbg !6591
  %real84 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx83, i32 0, i32 0, !dbg !6592
  %59 = load i32, i32* %real84, align 8, !dbg !6592
  %60 = load i32, i32* getelementptr inbounds ([52 x %struct.stv090x_tab], [52 x %struct.stv090x_tab]* @stv090x_s1cn_tab, i64 0, i64 0, i32 0), align 16, !dbg !6593
  %sub85 = sub i32 %59, %60, !dbg !6594
  store i32 %sub85, i32* %div, align 4, !dbg !6595
  %61 = load i32, i32* %last, align 4, !dbg !6596
  %62 = load i32, i32* %val, align 4, !dbg !6597
  %call86 = call i32 @stv090x_table_lookup(%struct.stv090x_tab* getelementptr inbounds ([52 x %struct.stv090x_tab], [52 x %struct.stv090x_tab]* @stv090x_s1cn_tab, i64 0, i64 0), i32 %61, i32 %62) #9, !dbg !6598
  store i32 %call86, i32* %val, align 4, !dbg !6599
  %63 = load i32, i32* %val, align 4, !dbg !6600
  %mul87 = mul i32 %63, 65535, !dbg !6601
  %64 = load i32, i32* %div, align 4, !dbg !6602
  %div88 = sdiv i32 %mul87, %64, !dbg !6603
  %conv89 = trunc i32 %div88 to i16, !dbg !6600
  %65 = load i16*, i16** %cnr.addr, align 8, !dbg !6604
  store i16 %conv89, i16* %65, align 2, !dbg !6605
  br label %if.end90, !dbg !6606

if.end90:                                         ; preds = %for.end80, %cond.end42
  br label %sw.epilog, !dbg !6607

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !6608

sw.epilog:                                        ; preds = %sw.default, %if.end90, %if.end33
  ret i32 0, !dbg !6609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_send_diseqc_msg(%struct.dvb_frontend* %fe, %struct.dvb_diseqc_master_cmd* %cmd) #0 !dbg !6610 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %cmd.addr = alloca %struct.dvb_diseqc_master_cmd*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %idle = alloca i32, align 4
  %fifo_full = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6611, metadata !DIExpression()), !dbg !6612
  store %struct.dvb_diseqc_master_cmd* %cmd, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_diseqc_master_cmd** %cmd.addr, metadata !6613, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6615, metadata !DIExpression()), !dbg !6616
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6617
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6618
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6618
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6617
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6616
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6619, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.declare(metadata i32* %idle, metadata !6621, metadata !DIExpression()), !dbg !6622
  store i32 0, i32* %idle, align 4, !dbg !6622
  call void @llvm.dbg.declare(metadata i32* %fifo_full, metadata !6623, metadata !DIExpression()), !dbg !6624
  store i32 1, i32* %fifo_full, align 4, !dbg !6624
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6625, metadata !DIExpression()), !dbg !6626
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6627
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 1, !dbg !6627
  %4 = load i32, i32* %demod, align 4, !dbg !6627
  %cmp = icmp eq i32 %4, 2, !dbg !6627
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6627

cond.true:                                        ; preds = %entry
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6627
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 61840) #9, !dbg !6627
  br label %cond.end, !dbg !6627

cond.false:                                       ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6627
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61856) #9, !dbg !6627
  br label %cond.end, !dbg !6627

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !6627
  store i32 %cond, i32* %reg, align 4, !dbg !6628
  %7 = load i32, i32* %reg, align 4, !dbg !6629
  %and = and i32 %7, -8, !dbg !6629
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6629
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 5, !dbg !6629
  %9 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !6629
  %diseqc_envelope_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %9, i32 0, i32 15, !dbg !6629
  %10 = load i8, i8* %diseqc_envelope_mode, align 4, !dbg !6629
  %tobool = trunc i8 %10 to i1, !dbg !6629
  %11 = zext i1 %tobool to i64, !dbg !6629
  %cond2 = select i1 %tobool, i32 4, i32 2, !dbg !6629
  %or = or i32 %and, %cond2, !dbg !6629
  store i32 %or, i32* %reg, align 4, !dbg !6629
  %12 = load i32, i32* %reg, align 4, !dbg !6630
  %and3 = and i32 %12, -65, !dbg !6630
  %or4 = or i32 %and3, 64, !dbg !6630
  store i32 %or4, i32* %reg, align 4, !dbg !6630
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6631
  %demod5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 1, !dbg !6631
  %14 = load i32, i32* %demod5, align 4, !dbg !6631
  %cmp6 = icmp eq i32 %14, 2, !dbg !6631
  br i1 %cmp6, label %cond.true7, label %cond.false9, !dbg !6631

cond.true7:                                       ; preds = %cond.end
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6631
  %16 = load i32, i32* %reg, align 4, !dbg !6631
  %conv = trunc i32 %16 to i8, !dbg !6631
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 61840, i8 zeroext %conv) #9, !dbg !6631
  br label %cond.end12, !dbg !6631

cond.false9:                                      ; preds = %cond.end
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6631
  %18 = load i32, i32* %reg, align 4, !dbg !6631
  %conv10 = trunc i32 %18 to i8, !dbg !6631
  %call11 = call i32 @stv090x_write_reg(%struct.stv090x_state* %17, i32 61856, i8 zeroext %conv10) #9, !dbg !6631
  br label %cond.end12, !dbg !6631

cond.end12:                                       ; preds = %cond.false9, %cond.true7
  %cond13 = phi i32 [ %call8, %cond.true7 ], [ %call11, %cond.false9 ], !dbg !6631
  %cmp14 = icmp slt i32 %cond13, 0, !dbg !6633
  br i1 %cmp14, label %if.then, label %if.end, !dbg !6634

if.then:                                          ; preds = %cond.end12
  br label %err, !dbg !6635

if.end:                                           ; preds = %cond.end12
  %19 = load i32, i32* %reg, align 4, !dbg !6636
  %and16 = and i32 %19, -65, !dbg !6636
  store i32 %and16, i32* %reg, align 4, !dbg !6636
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6637
  %demod17 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !6637
  %21 = load i32, i32* %demod17, align 4, !dbg !6637
  %cmp18 = icmp eq i32 %21, 2, !dbg !6637
  br i1 %cmp18, label %cond.true20, label %cond.false23, !dbg !6637

cond.true20:                                      ; preds = %if.end
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6637
  %23 = load i32, i32* %reg, align 4, !dbg !6637
  %conv21 = trunc i32 %23 to i8, !dbg !6637
  %call22 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 61840, i8 zeroext %conv21) #9, !dbg !6637
  br label %cond.end26, !dbg !6637

cond.false23:                                     ; preds = %if.end
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6637
  %25 = load i32, i32* %reg, align 4, !dbg !6637
  %conv24 = trunc i32 %25 to i8, !dbg !6637
  %call25 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 61856, i8 zeroext %conv24) #9, !dbg !6637
  br label %cond.end26, !dbg !6637

cond.end26:                                       ; preds = %cond.false23, %cond.true20
  %cond27 = phi i32 [ %call22, %cond.true20 ], [ %call25, %cond.false23 ], !dbg !6637
  %cmp28 = icmp slt i32 %cond27, 0, !dbg !6639
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !6640

if.then30:                                        ; preds = %cond.end26
  br label %err, !dbg !6641

if.end31:                                         ; preds = %cond.end26
  %26 = load i32, i32* %reg, align 4, !dbg !6642
  %and32 = and i32 %26, -9, !dbg !6642
  %or33 = or i32 %and32, 8, !dbg !6642
  store i32 %or33, i32* %reg, align 4, !dbg !6642
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6643
  %demod34 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %27, i32 0, i32 1, !dbg !6643
  %28 = load i32, i32* %demod34, align 4, !dbg !6643
  %cmp35 = icmp eq i32 %28, 2, !dbg !6643
  br i1 %cmp35, label %cond.true37, label %cond.false40, !dbg !6643

cond.true37:                                      ; preds = %if.end31
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6643
  %30 = load i32, i32* %reg, align 4, !dbg !6643
  %conv38 = trunc i32 %30 to i8, !dbg !6643
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 61840, i8 zeroext %conv38) #9, !dbg !6643
  br label %cond.end43, !dbg !6643

cond.false40:                                     ; preds = %if.end31
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6643
  %32 = load i32, i32* %reg, align 4, !dbg !6643
  %conv41 = trunc i32 %32 to i8, !dbg !6643
  %call42 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 61856, i8 zeroext %conv41) #9, !dbg !6643
  br label %cond.end43, !dbg !6643

cond.end43:                                       ; preds = %cond.false40, %cond.true37
  %cond44 = phi i32 [ %call39, %cond.true37 ], [ %call42, %cond.false40 ], !dbg !6643
  %cmp45 = icmp slt i32 %cond44, 0, !dbg !6645
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !6646

if.then47:                                        ; preds = %cond.end43
  br label %err, !dbg !6647

if.end48:                                         ; preds = %cond.end43
  store i32 0, i32* %i, align 4, !dbg !6648
  br label %for.cond, !dbg !6650

for.cond:                                         ; preds = %for.inc, %if.end48
  %33 = load i32, i32* %i, align 4, !dbg !6651
  %34 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !6653
  %msg_len = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %34, i32 0, i32 1, !dbg !6654
  %35 = load i8, i8* %msg_len, align 1, !dbg !6654
  %conv49 = zext i8 %35 to i32, !dbg !6653
  %cmp50 = icmp slt i32 %33, %conv49, !dbg !6655
  br i1 %cmp50, label %for.body, label %for.end, !dbg !6656

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !6657

while.cond:                                       ; preds = %cond.end60, %for.body
  %36 = load i32, i32* %fifo_full, align 4, !dbg !6659
  %tobool52 = icmp ne i32 %36, 0, !dbg !6657
  br i1 %tobool52, label %while.body, label %while.end, !dbg !6657

while.body:                                       ; preds = %while.cond
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6660
  %demod53 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 1, !dbg !6660
  %38 = load i32, i32* %demod53, align 4, !dbg !6660
  %cmp54 = icmp eq i32 %38, 2, !dbg !6660
  br i1 %cmp54, label %cond.true56, label %cond.false58, !dbg !6660

cond.true56:                                      ; preds = %while.body
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6660
  %call57 = call i32 @stv090x_read_reg(%struct.stv090x_state* %39, i32 61848) #9, !dbg !6660
  br label %cond.end60, !dbg !6660

cond.false58:                                     ; preds = %while.body
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6660
  %call59 = call i32 @stv090x_read_reg(%struct.stv090x_state* %40, i32 61864) #9, !dbg !6660
  br label %cond.end60, !dbg !6660

cond.end60:                                       ; preds = %cond.false58, %cond.true56
  %cond61 = phi i32 [ %call57, %cond.true56 ], [ %call59, %cond.false58 ], !dbg !6660
  store i32 %cond61, i32* %reg, align 4, !dbg !6662
  %41 = load i32, i32* %reg, align 4, !dbg !6663
  %shr = lshr i32 %41, 6, !dbg !6663
  %and62 = and i32 %shr, 1, !dbg !6663
  store i32 %and62, i32* %fifo_full, align 4, !dbg !6664
  br label %while.cond, !dbg !6657, !llvm.loop !6665

while.end:                                        ; preds = %while.cond
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6667
  %demod63 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 1, !dbg !6667
  %43 = load i32, i32* %demod63, align 4, !dbg !6667
  %cmp64 = icmp eq i32 %43, 2, !dbg !6667
  br i1 %cmp64, label %cond.true66, label %cond.false68, !dbg !6667

cond.true66:                                      ; preds = %while.end
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6667
  %45 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !6667
  %msg = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %45, i32 0, i32 0, !dbg !6667
  %46 = load i32, i32* %i, align 4, !dbg !6667
  %idxprom = sext i32 %46 to i64, !dbg !6667
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %msg, i64 0, i64 %idxprom, !dbg !6667
  %47 = load i8, i8* %arrayidx, align 1, !dbg !6667
  %call67 = call i32 @stv090x_write_reg(%struct.stv090x_state* %44, i32 61847, i8 zeroext %47) #9, !dbg !6667
  br label %cond.end73, !dbg !6667

cond.false68:                                     ; preds = %while.end
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6667
  %49 = load %struct.dvb_diseqc_master_cmd*, %struct.dvb_diseqc_master_cmd** %cmd.addr, align 8, !dbg !6667
  %msg69 = getelementptr inbounds %struct.dvb_diseqc_master_cmd, %struct.dvb_diseqc_master_cmd* %49, i32 0, i32 0, !dbg !6667
  %50 = load i32, i32* %i, align 4, !dbg !6667
  %idxprom70 = sext i32 %50 to i64, !dbg !6667
  %arrayidx71 = getelementptr [6 x i8], [6 x i8]* %msg69, i64 0, i64 %idxprom70, !dbg !6667
  %51 = load i8, i8* %arrayidx71, align 1, !dbg !6667
  %call72 = call i32 @stv090x_write_reg(%struct.stv090x_state* %48, i32 61863, i8 zeroext %51) #9, !dbg !6667
  br label %cond.end73, !dbg !6667

cond.end73:                                       ; preds = %cond.false68, %cond.true66
  %cond74 = phi i32 [ %call67, %cond.true66 ], [ %call72, %cond.false68 ], !dbg !6667
  %cmp75 = icmp slt i32 %cond74, 0, !dbg !6669
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !6670

if.then77:                                        ; preds = %cond.end73
  br label %err, !dbg !6671

if.end78:                                         ; preds = %cond.end73
  br label %for.inc, !dbg !6672

for.inc:                                          ; preds = %if.end78
  %52 = load i32, i32* %i, align 4, !dbg !6673
  %inc = add i32 %52, 1, !dbg !6673
  store i32 %inc, i32* %i, align 4, !dbg !6673
  br label %for.cond, !dbg !6674, !llvm.loop !6675

for.end:                                          ; preds = %for.cond
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6677
  %demod79 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %53, i32 0, i32 1, !dbg !6677
  %54 = load i32, i32* %demod79, align 4, !dbg !6677
  %cmp80 = icmp eq i32 %54, 2, !dbg !6677
  br i1 %cmp80, label %cond.true82, label %cond.false84, !dbg !6677

cond.true82:                                      ; preds = %for.end
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6677
  %call83 = call i32 @stv090x_read_reg(%struct.stv090x_state* %55, i32 61840) #9, !dbg !6677
  br label %cond.end86, !dbg !6677

cond.false84:                                     ; preds = %for.end
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6677
  %call85 = call i32 @stv090x_read_reg(%struct.stv090x_state* %56, i32 61856) #9, !dbg !6677
  br label %cond.end86, !dbg !6677

cond.end86:                                       ; preds = %cond.false84, %cond.true82
  %cond87 = phi i32 [ %call83, %cond.true82 ], [ %call85, %cond.false84 ], !dbg !6677
  store i32 %cond87, i32* %reg, align 4, !dbg !6678
  %57 = load i32, i32* %reg, align 4, !dbg !6679
  %and88 = and i32 %57, -9, !dbg !6679
  store i32 %and88, i32* %reg, align 4, !dbg !6679
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6680
  %demod89 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 1, !dbg !6680
  %59 = load i32, i32* %demod89, align 4, !dbg !6680
  %cmp90 = icmp eq i32 %59, 2, !dbg !6680
  br i1 %cmp90, label %cond.true92, label %cond.false95, !dbg !6680

cond.true92:                                      ; preds = %cond.end86
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6680
  %61 = load i32, i32* %reg, align 4, !dbg !6680
  %conv93 = trunc i32 %61 to i8, !dbg !6680
  %call94 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 61840, i8 zeroext %conv93) #9, !dbg !6680
  br label %cond.end98, !dbg !6680

cond.false95:                                     ; preds = %cond.end86
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6680
  %63 = load i32, i32* %reg, align 4, !dbg !6680
  %conv96 = trunc i32 %63 to i8, !dbg !6680
  %call97 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 61856, i8 zeroext %conv96) #9, !dbg !6680
  br label %cond.end98, !dbg !6680

cond.end98:                                       ; preds = %cond.false95, %cond.true92
  %cond99 = phi i32 [ %call94, %cond.true92 ], [ %call97, %cond.false95 ], !dbg !6680
  %cmp100 = icmp slt i32 %cond99, 0, !dbg !6682
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !6683

if.then102:                                       ; preds = %cond.end98
  br label %err, !dbg !6684

if.end103:                                        ; preds = %cond.end98
  store i32 0, i32* %i, align 4, !dbg !6685
  br label %while.cond104, !dbg !6686

while.cond104:                                    ; preds = %cond.end116, %if.end103
  %64 = load i32, i32* %idle, align 4, !dbg !6687
  %tobool105 = icmp ne i32 %64, 0, !dbg !6687
  br i1 %tobool105, label %land.end, label %land.rhs, !dbg !6688

land.rhs:                                         ; preds = %while.cond104
  %65 = load i32, i32* %i, align 4, !dbg !6689
  %cmp106 = icmp slt i32 %65, 10, !dbg !6690
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond104
  %66 = phi i1 [ false, %while.cond104 ], [ %cmp106, %land.rhs ], !dbg !6691
  br i1 %66, label %while.body108, label %while.end121, !dbg !6686

while.body108:                                    ; preds = %land.end
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6692
  %demod109 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %67, i32 0, i32 1, !dbg !6692
  %68 = load i32, i32* %demod109, align 4, !dbg !6692
  %cmp110 = icmp eq i32 %68, 2, !dbg !6692
  br i1 %cmp110, label %cond.true112, label %cond.false114, !dbg !6692

cond.true112:                                     ; preds = %while.body108
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6692
  %call113 = call i32 @stv090x_read_reg(%struct.stv090x_state* %69, i32 61848) #9, !dbg !6692
  br label %cond.end116, !dbg !6692

cond.false114:                                    ; preds = %while.body108
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6692
  %call115 = call i32 @stv090x_read_reg(%struct.stv090x_state* %70, i32 61864) #9, !dbg !6692
  br label %cond.end116, !dbg !6692

cond.end116:                                      ; preds = %cond.false114, %cond.true112
  %cond117 = phi i32 [ %call113, %cond.true112 ], [ %call115, %cond.false114 ], !dbg !6692
  store i32 %cond117, i32* %reg, align 4, !dbg !6694
  %71 = load i32, i32* %reg, align 4, !dbg !6695
  %shr118 = lshr i32 %71, 5, !dbg !6695
  %and119 = and i32 %shr118, 1, !dbg !6695
  store i32 %and119, i32* %idle, align 4, !dbg !6696
  call void @msleep(i32 10) #9, !dbg !6697
  %72 = load i32, i32* %i, align 4, !dbg !6698
  %inc120 = add i32 %72, 1, !dbg !6698
  store i32 %inc120, i32* %i, align 4, !dbg !6698
  br label %while.cond104, !dbg !6686, !llvm.loop !6699

while.end121:                                     ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !6701
  br label %return, !dbg !6701

err:                                              ; preds = %if.then102, %if.then77, %if.then47, %if.then30, %if.then
  call void @llvm.dbg.label(metadata !6702), !dbg !6703
  br label %do.body, !dbg !6704

do.body:                                          ; preds = %err
  %73 = load i32, i32* @verbose, align 4, !dbg !6705
  %cmp122 = icmp ugt i32 %73, 0, !dbg !6705
  br i1 %cmp122, label %land.lhs.true, label %if.else, !dbg !6705

land.lhs.true:                                    ; preds = %do.body
  %74 = load i32, i32* @verbose, align 4, !dbg !6705
  %cmp124 = icmp ugt i32 %74, 0, !dbg !6705
  br i1 %cmp124, label %if.then126, label %if.else, !dbg !6710

if.then126:                                       ; preds = %land.lhs.true
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_send_diseqc_msg, i64 0, i64 0)) #13, !dbg !6705
  br label %if.end154, !dbg !6705

if.else:                                          ; preds = %land.lhs.true, %do.body
  %75 = load i32, i32* @verbose, align 4, !dbg !6711
  %cmp128 = icmp ugt i32 %75, 1, !dbg !6711
  br i1 %cmp128, label %land.lhs.true130, label %if.else135, !dbg !6711

land.lhs.true130:                                 ; preds = %if.else
  %76 = load i32, i32* @verbose, align 4, !dbg !6711
  %cmp131 = icmp ugt i32 %76, 0, !dbg !6711
  br i1 %cmp131, label %if.then133, label %if.else135, !dbg !6705

if.then133:                                       ; preds = %land.lhs.true130
  %call134 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_send_diseqc_msg, i64 0, i64 0)) #13, !dbg !6711
  br label %if.end153, !dbg !6711

if.else135:                                       ; preds = %land.lhs.true130, %if.else
  %77 = load i32, i32* @verbose, align 4, !dbg !6713
  %cmp136 = icmp ugt i32 %77, 2, !dbg !6713
  br i1 %cmp136, label %land.lhs.true138, label %if.else143, !dbg !6713

land.lhs.true138:                                 ; preds = %if.else135
  %78 = load i32, i32* @verbose, align 4, !dbg !6713
  %cmp139 = icmp ugt i32 %78, 0, !dbg !6713
  br i1 %cmp139, label %if.then141, label %if.else143, !dbg !6711

if.then141:                                       ; preds = %land.lhs.true138
  %call142 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_send_diseqc_msg, i64 0, i64 0)) #13, !dbg !6713
  br label %if.end152, !dbg !6713

if.else143:                                       ; preds = %land.lhs.true138, %if.else135
  %79 = load i32, i32* @verbose, align 4, !dbg !6715
  %cmp144 = icmp ugt i32 %79, 3, !dbg !6715
  br i1 %cmp144, label %land.lhs.true146, label %if.end151, !dbg !6715

land.lhs.true146:                                 ; preds = %if.else143
  %80 = load i32, i32* @verbose, align 4, !dbg !6715
  %cmp147 = icmp ugt i32 %80, 0, !dbg !6715
  br i1 %cmp147, label %if.then149, label %if.end151, !dbg !6713

if.then149:                                       ; preds = %land.lhs.true146
  %call150 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_send_diseqc_msg, i64 0, i64 0)) #13, !dbg !6715
  br label %if.end151, !dbg !6715

if.end151:                                        ; preds = %if.then149, %land.lhs.true146, %if.else143
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then141
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then133
  br label %if.end154

if.end154:                                        ; preds = %if.end153, %if.then126
  br label %do.end, !dbg !6717

do.end:                                           ; preds = %if.end154
  store i32 -1, i32* %retval, align 4, !dbg !6718
  br label %return, !dbg !6718

return:                                           ; preds = %do.end, %while.end121
  %81 = load i32, i32* %retval, align 4, !dbg !6719
  ret i32 %81, !dbg !6719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_recv_slave_reply(%struct.dvb_frontend* %fe, %struct.dvb_diseqc_slave_reply* %reply) #0 !dbg !6720 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %reply.addr = alloca %struct.dvb_diseqc_slave_reply*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  %rx_end = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  store %struct.dvb_diseqc_slave_reply* %reply, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_diseqc_slave_reply** %reply.addr, metadata !6723, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6725, metadata !DIExpression()), !dbg !6726
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6727
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6728
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6728
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6727
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6726
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6729, metadata !DIExpression()), !dbg !6730
  store i32 0, i32* %reg, align 4, !dbg !6730
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6731, metadata !DIExpression()), !dbg !6732
  store i32 0, i32* %i, align 4, !dbg !6732
  call void @llvm.dbg.declare(metadata i32* %rx_end, metadata !6733, metadata !DIExpression()), !dbg !6734
  store i32 0, i32* %rx_end, align 4, !dbg !6734
  br label %while.cond, !dbg !6735

while.cond:                                       ; preds = %cond.end, %entry
  %3 = load i32, i32* %rx_end, align 4, !dbg !6736
  %cmp = icmp ne i32 %3, 1, !dbg !6737
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6738

land.rhs:                                         ; preds = %while.cond
  %4 = load i32, i32* %i, align 4, !dbg !6739
  %cmp1 = icmp ult i32 %4, 10, !dbg !6740
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp1, %land.rhs ], !dbg !6741
  br i1 %5, label %while.body, label %while.end, !dbg !6735

while.body:                                       ; preds = %land.end
  call void @msleep(i32 10) #9, !dbg !6742
  %6 = load i32, i32* %i, align 4, !dbg !6744
  %inc = add i32 %6, 1, !dbg !6744
  store i32 %inc, i32* %i, align 4, !dbg !6744
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6745
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 1, !dbg !6745
  %8 = load i32, i32* %demod, align 4, !dbg !6745
  %cmp2 = icmp eq i32 %8, 2, !dbg !6745
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !6745

cond.true:                                        ; preds = %while.body
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6745
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %9, i32 61844) #9, !dbg !6745
  br label %cond.end, !dbg !6745

cond.false:                                       ; preds = %while.body
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6745
  %call3 = call i32 @stv090x_read_reg(%struct.stv090x_state* %10, i32 61860) #9, !dbg !6745
  br label %cond.end, !dbg !6745

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call3, %cond.false ], !dbg !6745
  store i32 %cond, i32* %reg, align 4, !dbg !6746
  %11 = load i32, i32* %reg, align 4, !dbg !6747
  %shr = lshr i32 %11, 7, !dbg !6747
  %and = and i32 %shr, 1, !dbg !6747
  store i32 %and, i32* %rx_end, align 4, !dbg !6748
  br label %while.cond, !dbg !6735, !llvm.loop !6749

while.end:                                        ; preds = %land.end
  %12 = load i32, i32* %rx_end, align 4, !dbg !6751
  %tobool = icmp ne i32 %12, 0, !dbg !6751
  br i1 %tobool, label %if.then, label %if.end, !dbg !6753

if.then:                                          ; preds = %while.end
  %13 = load i32, i32* %reg, align 4, !dbg !6754
  %shr4 = lshr i32 %13, 0, !dbg !6754
  %and5 = and i32 %shr4, 15, !dbg !6754
  %conv = trunc i32 %and5 to i8, !dbg !6754
  %14 = load %struct.dvb_diseqc_slave_reply*, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8, !dbg !6756
  %msg_len = getelementptr inbounds %struct.dvb_diseqc_slave_reply, %struct.dvb_diseqc_slave_reply* %14, i32 0, i32 1, !dbg !6757
  store i8 %conv, i8* %msg_len, align 4, !dbg !6758
  store i32 0, i32* %i, align 4, !dbg !6759
  br label %for.cond, !dbg !6761

for.cond:                                         ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !6762
  %16 = load %struct.dvb_diseqc_slave_reply*, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8, !dbg !6764
  %msg_len6 = getelementptr inbounds %struct.dvb_diseqc_slave_reply, %struct.dvb_diseqc_slave_reply* %16, i32 0, i32 1, !dbg !6765
  %17 = load i8, i8* %msg_len6, align 4, !dbg !6765
  %conv7 = zext i8 %17 to i32, !dbg !6764
  %cmp8 = icmp ult i32 %15, %conv7, !dbg !6766
  br i1 %cmp8, label %for.body, label %for.end, !dbg !6767

for.body:                                         ; preds = %for.cond
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6768
  %demod10 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !6768
  %19 = load i32, i32* %demod10, align 4, !dbg !6768
  %cmp11 = icmp eq i32 %19, 2, !dbg !6768
  br i1 %cmp11, label %cond.true13, label %cond.false15, !dbg !6768

cond.true13:                                      ; preds = %for.body
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6768
  %call14 = call i32 @stv090x_read_reg(%struct.stv090x_state* %20, i32 61846) #9, !dbg !6768
  br label %cond.end17, !dbg !6768

cond.false15:                                     ; preds = %for.body
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6768
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %21, i32 61862) #9, !dbg !6768
  br label %cond.end17, !dbg !6768

cond.end17:                                       ; preds = %cond.false15, %cond.true13
  %cond18 = phi i32 [ %call14, %cond.true13 ], [ %call16, %cond.false15 ], !dbg !6768
  %conv19 = trunc i32 %cond18 to i8, !dbg !6768
  %22 = load %struct.dvb_diseqc_slave_reply*, %struct.dvb_diseqc_slave_reply** %reply.addr, align 8, !dbg !6769
  %msg = getelementptr inbounds %struct.dvb_diseqc_slave_reply, %struct.dvb_diseqc_slave_reply* %22, i32 0, i32 0, !dbg !6770
  %23 = load i32, i32* %i, align 4, !dbg !6771
  %idxprom = zext i32 %23 to i64, !dbg !6769
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %msg, i64 0, i64 %idxprom, !dbg !6769
  store i8 %conv19, i8* %arrayidx, align 1, !dbg !6772
  br label %for.inc, !dbg !6769

for.inc:                                          ; preds = %cond.end17
  %24 = load i32, i32* %i, align 4, !dbg !6773
  %inc20 = add i32 %24, 1, !dbg !6773
  store i32 %inc20, i32* %i, align 4, !dbg !6773
  br label %for.cond, !dbg !6774, !llvm.loop !6775

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6777

if.end:                                           ; preds = %for.end, %while.end
  ret i32 0, !dbg !6778
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_send_diseqc_burst(%struct.dvb_frontend* %fe, i32 %burst) #0 !dbg !6779 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %burst.addr = alloca i32, align 4
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %idle = alloca i32, align 4
  %fifo_full = alloca i32, align 4
  %mode = alloca i8, align 1
  %value = alloca i8, align 1
  %i = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6780, metadata !DIExpression()), !dbg !6781
  store i32 %burst, i32* %burst.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %burst.addr, metadata !6782, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6784, metadata !DIExpression()), !dbg !6785
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6786
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6787
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6787
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6786
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6785
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6788, metadata !DIExpression()), !dbg !6789
  call void @llvm.dbg.declare(metadata i32* %idle, metadata !6790, metadata !DIExpression()), !dbg !6791
  store i32 0, i32* %idle, align 4, !dbg !6791
  call void @llvm.dbg.declare(metadata i32* %fifo_full, metadata !6792, metadata !DIExpression()), !dbg !6793
  store i32 1, i32* %fifo_full, align 4, !dbg !6793
  call void @llvm.dbg.declare(metadata i8* %mode, metadata !6794, metadata !DIExpression()), !dbg !6795
  call void @llvm.dbg.declare(metadata i8* %value, metadata !6796, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6798, metadata !DIExpression()), !dbg !6799
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6800
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 1, !dbg !6800
  %4 = load i32, i32* %demod, align 4, !dbg !6800
  %cmp = icmp eq i32 %4, 2, !dbg !6800
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6800

cond.true:                                        ; preds = %entry
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6800
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 61840) #9, !dbg !6800
  br label %cond.end, !dbg !6800

cond.false:                                       ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6800
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61856) #9, !dbg !6800
  br label %cond.end, !dbg !6800

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !6800
  store i32 %cond, i32* %reg, align 4, !dbg !6801
  %7 = load i32, i32* %burst.addr, align 4, !dbg !6802
  %cmp2 = icmp eq i32 %7, 0, !dbg !6804
  br i1 %cmp2, label %if.then, label %if.else, !dbg !6805

if.then:                                          ; preds = %cond.end
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6806
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 5, !dbg !6808
  %9 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !6808
  %diseqc_envelope_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %9, i32 0, i32 15, !dbg !6809
  %10 = load i8, i8* %diseqc_envelope_mode, align 4, !dbg !6809
  %tobool = trunc i8 %10 to i1, !dbg !6809
  %11 = zext i1 %tobool to i64, !dbg !6810
  %cond3 = select i1 %tobool, i32 5, i32 3, !dbg !6810
  %conv = trunc i32 %cond3 to i8, !dbg !6810
  store i8 %conv, i8* %mode, align 1, !dbg !6811
  store i8 0, i8* %value, align 1, !dbg !6812
  br label %if.end, !dbg !6813

if.else:                                          ; preds = %cond.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6814
  %config4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 5, !dbg !6816
  %13 = load %struct.stv090x_config*, %struct.stv090x_config** %config4, align 8, !dbg !6816
  %diseqc_envelope_mode5 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %13, i32 0, i32 15, !dbg !6817
  %14 = load i8, i8* %diseqc_envelope_mode5, align 4, !dbg !6817
  %tobool6 = trunc i8 %14 to i1, !dbg !6817
  %15 = zext i1 %tobool6 to i64, !dbg !6818
  %cond8 = select i1 %tobool6, i32 4, i32 2, !dbg !6818
  %conv9 = trunc i32 %cond8 to i8, !dbg !6818
  store i8 %conv9, i8* %mode, align 1, !dbg !6819
  store i8 -1, i8* %value, align 1, !dbg !6820
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %16 = load i32, i32* %reg, align 4, !dbg !6821
  %and = and i32 %16, -8, !dbg !6821
  %17 = load i8, i8* %mode, align 1, !dbg !6821
  %conv10 = zext i8 %17 to i32, !dbg !6821
  %shl = shl i32 %conv10, 0, !dbg !6821
  %or = or i32 %and, %shl, !dbg !6821
  store i32 %or, i32* %reg, align 4, !dbg !6821
  %18 = load i32, i32* %reg, align 4, !dbg !6822
  %and11 = and i32 %18, -65, !dbg !6822
  %or12 = or i32 %and11, 64, !dbg !6822
  store i32 %or12, i32* %reg, align 4, !dbg !6822
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6823
  %demod13 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 1, !dbg !6823
  %20 = load i32, i32* %demod13, align 4, !dbg !6823
  %cmp14 = icmp eq i32 %20, 2, !dbg !6823
  br i1 %cmp14, label %cond.true16, label %cond.false19, !dbg !6823

cond.true16:                                      ; preds = %if.end
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6823
  %22 = load i32, i32* %reg, align 4, !dbg !6823
  %conv17 = trunc i32 %22 to i8, !dbg !6823
  %call18 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 61840, i8 zeroext %conv17) #9, !dbg !6823
  br label %cond.end22, !dbg !6823

cond.false19:                                     ; preds = %if.end
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6823
  %24 = load i32, i32* %reg, align 4, !dbg !6823
  %conv20 = trunc i32 %24 to i8, !dbg !6823
  %call21 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 61856, i8 zeroext %conv20) #9, !dbg !6823
  br label %cond.end22, !dbg !6823

cond.end22:                                       ; preds = %cond.false19, %cond.true16
  %cond23 = phi i32 [ %call18, %cond.true16 ], [ %call21, %cond.false19 ], !dbg !6823
  %cmp24 = icmp slt i32 %cond23, 0, !dbg !6825
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !6826

if.then26:                                        ; preds = %cond.end22
  br label %err, !dbg !6827

if.end27:                                         ; preds = %cond.end22
  %25 = load i32, i32* %reg, align 4, !dbg !6828
  %and28 = and i32 %25, -65, !dbg !6828
  store i32 %and28, i32* %reg, align 4, !dbg !6828
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6829
  %demod29 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 1, !dbg !6829
  %27 = load i32, i32* %demod29, align 4, !dbg !6829
  %cmp30 = icmp eq i32 %27, 2, !dbg !6829
  br i1 %cmp30, label %cond.true32, label %cond.false35, !dbg !6829

cond.true32:                                      ; preds = %if.end27
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6829
  %29 = load i32, i32* %reg, align 4, !dbg !6829
  %conv33 = trunc i32 %29 to i8, !dbg !6829
  %call34 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 61840, i8 zeroext %conv33) #9, !dbg !6829
  br label %cond.end38, !dbg !6829

cond.false35:                                     ; preds = %if.end27
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6829
  %31 = load i32, i32* %reg, align 4, !dbg !6829
  %conv36 = trunc i32 %31 to i8, !dbg !6829
  %call37 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 61856, i8 zeroext %conv36) #9, !dbg !6829
  br label %cond.end38, !dbg !6829

cond.end38:                                       ; preds = %cond.false35, %cond.true32
  %cond39 = phi i32 [ %call34, %cond.true32 ], [ %call37, %cond.false35 ], !dbg !6829
  %cmp40 = icmp slt i32 %cond39, 0, !dbg !6831
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !6832

if.then42:                                        ; preds = %cond.end38
  br label %err, !dbg !6833

if.end43:                                         ; preds = %cond.end38
  %32 = load i32, i32* %reg, align 4, !dbg !6834
  %and44 = and i32 %32, -9, !dbg !6834
  %or45 = or i32 %and44, 8, !dbg !6834
  store i32 %or45, i32* %reg, align 4, !dbg !6834
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6835
  %demod46 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 1, !dbg !6835
  %34 = load i32, i32* %demod46, align 4, !dbg !6835
  %cmp47 = icmp eq i32 %34, 2, !dbg !6835
  br i1 %cmp47, label %cond.true49, label %cond.false52, !dbg !6835

cond.true49:                                      ; preds = %if.end43
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6835
  %36 = load i32, i32* %reg, align 4, !dbg !6835
  %conv50 = trunc i32 %36 to i8, !dbg !6835
  %call51 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 61840, i8 zeroext %conv50) #9, !dbg !6835
  br label %cond.end55, !dbg !6835

cond.false52:                                     ; preds = %if.end43
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6835
  %38 = load i32, i32* %reg, align 4, !dbg !6835
  %conv53 = trunc i32 %38 to i8, !dbg !6835
  %call54 = call i32 @stv090x_write_reg(%struct.stv090x_state* %37, i32 61856, i8 zeroext %conv53) #9, !dbg !6835
  br label %cond.end55, !dbg !6835

cond.end55:                                       ; preds = %cond.false52, %cond.true49
  %cond56 = phi i32 [ %call51, %cond.true49 ], [ %call54, %cond.false52 ], !dbg !6835
  %cmp57 = icmp slt i32 %cond56, 0, !dbg !6837
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !6838

if.then59:                                        ; preds = %cond.end55
  br label %err, !dbg !6839

if.end60:                                         ; preds = %cond.end55
  br label %while.cond, !dbg !6840

while.cond:                                       ; preds = %cond.end69, %if.end60
  %39 = load i32, i32* %fifo_full, align 4, !dbg !6841
  %tobool61 = icmp ne i32 %39, 0, !dbg !6840
  br i1 %tobool61, label %while.body, label %while.end, !dbg !6840

while.body:                                       ; preds = %while.cond
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6842
  %demod62 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !6842
  %41 = load i32, i32* %demod62, align 4, !dbg !6842
  %cmp63 = icmp eq i32 %41, 2, !dbg !6842
  br i1 %cmp63, label %cond.true65, label %cond.false67, !dbg !6842

cond.true65:                                      ; preds = %while.body
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6842
  %call66 = call i32 @stv090x_read_reg(%struct.stv090x_state* %42, i32 61848) #9, !dbg !6842
  br label %cond.end69, !dbg !6842

cond.false67:                                     ; preds = %while.body
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6842
  %call68 = call i32 @stv090x_read_reg(%struct.stv090x_state* %43, i32 61864) #9, !dbg !6842
  br label %cond.end69, !dbg !6842

cond.end69:                                       ; preds = %cond.false67, %cond.true65
  %cond70 = phi i32 [ %call66, %cond.true65 ], [ %call68, %cond.false67 ], !dbg !6842
  store i32 %cond70, i32* %reg, align 4, !dbg !6844
  %44 = load i32, i32* %reg, align 4, !dbg !6845
  %shr = lshr i32 %44, 6, !dbg !6845
  %and71 = and i32 %shr, 1, !dbg !6845
  store i32 %and71, i32* %fifo_full, align 4, !dbg !6846
  br label %while.cond, !dbg !6840, !llvm.loop !6847

while.end:                                        ; preds = %while.cond
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6849
  %demod72 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %45, i32 0, i32 1, !dbg !6849
  %46 = load i32, i32* %demod72, align 4, !dbg !6849
  %cmp73 = icmp eq i32 %46, 2, !dbg !6849
  br i1 %cmp73, label %cond.true75, label %cond.false77, !dbg !6849

cond.true75:                                      ; preds = %while.end
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6849
  %48 = load i8, i8* %value, align 1, !dbg !6849
  %call76 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 61847, i8 zeroext %48) #9, !dbg !6849
  br label %cond.end79, !dbg !6849

cond.false77:                                     ; preds = %while.end
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6849
  %50 = load i8, i8* %value, align 1, !dbg !6849
  %call78 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 61863, i8 zeroext %50) #9, !dbg !6849
  br label %cond.end79, !dbg !6849

cond.end79:                                       ; preds = %cond.false77, %cond.true75
  %cond80 = phi i32 [ %call76, %cond.true75 ], [ %call78, %cond.false77 ], !dbg !6849
  %cmp81 = icmp slt i32 %cond80, 0, !dbg !6851
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !6852

if.then83:                                        ; preds = %cond.end79
  br label %err, !dbg !6853

if.end84:                                         ; preds = %cond.end79
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6854
  %demod85 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %51, i32 0, i32 1, !dbg !6854
  %52 = load i32, i32* %demod85, align 4, !dbg !6854
  %cmp86 = icmp eq i32 %52, 2, !dbg !6854
  br i1 %cmp86, label %cond.true88, label %cond.false90, !dbg !6854

cond.true88:                                      ; preds = %if.end84
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6854
  %call89 = call i32 @stv090x_read_reg(%struct.stv090x_state* %53, i32 61840) #9, !dbg !6854
  br label %cond.end92, !dbg !6854

cond.false90:                                     ; preds = %if.end84
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6854
  %call91 = call i32 @stv090x_read_reg(%struct.stv090x_state* %54, i32 61856) #9, !dbg !6854
  br label %cond.end92, !dbg !6854

cond.end92:                                       ; preds = %cond.false90, %cond.true88
  %cond93 = phi i32 [ %call89, %cond.true88 ], [ %call91, %cond.false90 ], !dbg !6854
  store i32 %cond93, i32* %reg, align 4, !dbg !6855
  %55 = load i32, i32* %reg, align 4, !dbg !6856
  %and94 = and i32 %55, -9, !dbg !6856
  store i32 %and94, i32* %reg, align 4, !dbg !6856
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6857
  %demod95 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !6857
  %57 = load i32, i32* %demod95, align 4, !dbg !6857
  %cmp96 = icmp eq i32 %57, 2, !dbg !6857
  br i1 %cmp96, label %cond.true98, label %cond.false101, !dbg !6857

cond.true98:                                      ; preds = %cond.end92
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6857
  %59 = load i32, i32* %reg, align 4, !dbg !6857
  %conv99 = trunc i32 %59 to i8, !dbg !6857
  %call100 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 61840, i8 zeroext %conv99) #9, !dbg !6857
  br label %cond.end104, !dbg !6857

cond.false101:                                    ; preds = %cond.end92
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6857
  %61 = load i32, i32* %reg, align 4, !dbg !6857
  %conv102 = trunc i32 %61 to i8, !dbg !6857
  %call103 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 61856, i8 zeroext %conv102) #9, !dbg !6857
  br label %cond.end104, !dbg !6857

cond.end104:                                      ; preds = %cond.false101, %cond.true98
  %cond105 = phi i32 [ %call100, %cond.true98 ], [ %call103, %cond.false101 ], !dbg !6857
  %cmp106 = icmp slt i32 %cond105, 0, !dbg !6859
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !6860

if.then108:                                       ; preds = %cond.end104
  br label %err, !dbg !6861

if.end109:                                        ; preds = %cond.end104
  store i32 0, i32* %i, align 4, !dbg !6862
  br label %while.cond110, !dbg !6863

while.cond110:                                    ; preds = %cond.end122, %if.end109
  %62 = load i32, i32* %idle, align 4, !dbg !6864
  %tobool111 = icmp ne i32 %62, 0, !dbg !6864
  br i1 %tobool111, label %land.end, label %land.rhs, !dbg !6865

land.rhs:                                         ; preds = %while.cond110
  %63 = load i32, i32* %i, align 4, !dbg !6866
  %cmp112 = icmp slt i32 %63, 10, !dbg !6867
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond110
  %64 = phi i1 [ false, %while.cond110 ], [ %cmp112, %land.rhs ], !dbg !6868
  br i1 %64, label %while.body114, label %while.end126, !dbg !6863

while.body114:                                    ; preds = %land.end
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6869
  %demod115 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %65, i32 0, i32 1, !dbg !6869
  %66 = load i32, i32* %demod115, align 4, !dbg !6869
  %cmp116 = icmp eq i32 %66, 2, !dbg !6869
  br i1 %cmp116, label %cond.true118, label %cond.false120, !dbg !6869

cond.true118:                                     ; preds = %while.body114
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6869
  %call119 = call i32 @stv090x_read_reg(%struct.stv090x_state* %67, i32 61848) #9, !dbg !6869
  br label %cond.end122, !dbg !6869

cond.false120:                                    ; preds = %while.body114
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6869
  %call121 = call i32 @stv090x_read_reg(%struct.stv090x_state* %68, i32 61864) #9, !dbg !6869
  br label %cond.end122, !dbg !6869

cond.end122:                                      ; preds = %cond.false120, %cond.true118
  %cond123 = phi i32 [ %call119, %cond.true118 ], [ %call121, %cond.false120 ], !dbg !6869
  store i32 %cond123, i32* %reg, align 4, !dbg !6871
  %69 = load i32, i32* %reg, align 4, !dbg !6872
  %shr124 = lshr i32 %69, 5, !dbg !6872
  %and125 = and i32 %shr124, 1, !dbg !6872
  store i32 %and125, i32* %idle, align 4, !dbg !6873
  call void @msleep(i32 10) #9, !dbg !6874
  %70 = load i32, i32* %i, align 4, !dbg !6875
  %inc = add i32 %70, 1, !dbg !6875
  store i32 %inc, i32* %i, align 4, !dbg !6875
  br label %while.cond110, !dbg !6863, !llvm.loop !6876

while.end126:                                     ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !6878
  br label %return, !dbg !6878

err:                                              ; preds = %if.then108, %if.then83, %if.then59, %if.then42, %if.then26
  call void @llvm.dbg.label(metadata !6879), !dbg !6880
  br label %do.body, !dbg !6881

do.body:                                          ; preds = %err
  %71 = load i32, i32* @verbose, align 4, !dbg !6882
  %cmp127 = icmp ugt i32 %71, 0, !dbg !6882
  br i1 %cmp127, label %land.lhs.true, label %if.else133, !dbg !6882

land.lhs.true:                                    ; preds = %do.body
  %72 = load i32, i32* @verbose, align 4, !dbg !6882
  %cmp129 = icmp ugt i32 %72, 0, !dbg !6882
  br i1 %cmp129, label %if.then131, label %if.else133, !dbg !6887

if.then131:                                       ; preds = %land.lhs.true
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_send_diseqc_burst, i64 0, i64 0)) #13, !dbg !6882
  br label %if.end160, !dbg !6882

if.else133:                                       ; preds = %land.lhs.true, %do.body
  %73 = load i32, i32* @verbose, align 4, !dbg !6888
  %cmp134 = icmp ugt i32 %73, 1, !dbg !6888
  br i1 %cmp134, label %land.lhs.true136, label %if.else141, !dbg !6888

land.lhs.true136:                                 ; preds = %if.else133
  %74 = load i32, i32* @verbose, align 4, !dbg !6888
  %cmp137 = icmp ugt i32 %74, 0, !dbg !6888
  br i1 %cmp137, label %if.then139, label %if.else141, !dbg !6882

if.then139:                                       ; preds = %land.lhs.true136
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_send_diseqc_burst, i64 0, i64 0)) #13, !dbg !6888
  br label %if.end159, !dbg !6888

if.else141:                                       ; preds = %land.lhs.true136, %if.else133
  %75 = load i32, i32* @verbose, align 4, !dbg !6890
  %cmp142 = icmp ugt i32 %75, 2, !dbg !6890
  br i1 %cmp142, label %land.lhs.true144, label %if.else149, !dbg !6890

land.lhs.true144:                                 ; preds = %if.else141
  %76 = load i32, i32* @verbose, align 4, !dbg !6890
  %cmp145 = icmp ugt i32 %76, 0, !dbg !6890
  br i1 %cmp145, label %if.then147, label %if.else149, !dbg !6888

if.then147:                                       ; preds = %land.lhs.true144
  %call148 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_send_diseqc_burst, i64 0, i64 0)) #13, !dbg !6890
  br label %if.end158, !dbg !6890

if.else149:                                       ; preds = %land.lhs.true144, %if.else141
  %77 = load i32, i32* @verbose, align 4, !dbg !6892
  %cmp150 = icmp ugt i32 %77, 3, !dbg !6892
  br i1 %cmp150, label %land.lhs.true152, label %if.end157, !dbg !6892

land.lhs.true152:                                 ; preds = %if.else149
  %78 = load i32, i32* @verbose, align 4, !dbg !6892
  %cmp153 = icmp ugt i32 %78, 0, !dbg !6892
  br i1 %cmp153, label %if.then155, label %if.end157, !dbg !6890

if.then155:                                       ; preds = %land.lhs.true152
  %call156 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_send_diseqc_burst, i64 0, i64 0)) #13, !dbg !6892
  br label %if.end157, !dbg !6892

if.end157:                                        ; preds = %if.then155, %land.lhs.true152, %if.else149
  br label %if.end158

if.end158:                                        ; preds = %if.end157, %if.then147
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then139
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then131
  br label %do.end, !dbg !6894

do.end:                                           ; preds = %if.end160
  store i32 -1, i32* %retval, align 4, !dbg !6895
  br label %return, !dbg !6895

return:                                           ; preds = %do.end, %while.end126
  %79 = load i32, i32* %retval, align 4, !dbg !6896
  ret i32 %79, !dbg !6896
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_tone(%struct.dvb_frontend* %fe, i32 %tone) #0 !dbg !6897 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %tone.addr = alloca i32, align 4
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  store i32 %tone, i32* %tone.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tone.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6902, metadata !DIExpression()), !dbg !6903
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6904
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6905
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6905
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6904
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6903
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !6906, metadata !DIExpression()), !dbg !6907
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6908
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 1, !dbg !6908
  %4 = load i32, i32* %demod, align 4, !dbg !6908
  %cmp = icmp eq i32 %4, 2, !dbg !6908
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !6908

cond.true:                                        ; preds = %entry
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6908
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 61840) #9, !dbg !6908
  br label %cond.end, !dbg !6908

cond.false:                                       ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6908
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61856) #9, !dbg !6908
  br label %cond.end, !dbg !6908

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !6908
  store i32 %cond, i32* %reg, align 4, !dbg !6909
  %7 = load i32, i32* %tone.addr, align 4, !dbg !6910
  switch i32 %7, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb30
  ], !dbg !6911

sw.bb:                                            ; preds = %cond.end
  %8 = load i32, i32* %reg, align 4, !dbg !6912
  %and = and i32 %8, -8, !dbg !6912
  store i32 %and, i32* %reg, align 4, !dbg !6912
  %9 = load i32, i32* %reg, align 4, !dbg !6914
  %and2 = and i32 %9, -65, !dbg !6914
  %or = or i32 %and2, 64, !dbg !6914
  store i32 %or, i32* %reg, align 4, !dbg !6914
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6915
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !6915
  %11 = load i32, i32* %demod3, align 4, !dbg !6915
  %cmp4 = icmp eq i32 %11, 2, !dbg !6915
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !6915

cond.true5:                                       ; preds = %sw.bb
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6915
  %13 = load i32, i32* %reg, align 4, !dbg !6915
  %conv = trunc i32 %13 to i8, !dbg !6915
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 61840, i8 zeroext %conv) #9, !dbg !6915
  br label %cond.end10, !dbg !6915

cond.false7:                                      ; preds = %sw.bb
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6915
  %15 = load i32, i32* %reg, align 4, !dbg !6915
  %conv8 = trunc i32 %15 to i8, !dbg !6915
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 61856, i8 zeroext %conv8) #9, !dbg !6915
  br label %cond.end10, !dbg !6915

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %call6, %cond.true5 ], [ %call9, %cond.false7 ], !dbg !6915
  %cmp12 = icmp slt i32 %cond11, 0, !dbg !6917
  br i1 %cmp12, label %if.then, label %if.end, !dbg !6918

if.then:                                          ; preds = %cond.end10
  br label %err, !dbg !6919

if.end:                                           ; preds = %cond.end10
  %16 = load i32, i32* %reg, align 4, !dbg !6920
  %and14 = and i32 %16, -65, !dbg !6920
  store i32 %and14, i32* %reg, align 4, !dbg !6920
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6921
  %demod15 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !6921
  %18 = load i32, i32* %demod15, align 4, !dbg !6921
  %cmp16 = icmp eq i32 %18, 2, !dbg !6921
  br i1 %cmp16, label %cond.true18, label %cond.false21, !dbg !6921

cond.true18:                                      ; preds = %if.end
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6921
  %20 = load i32, i32* %reg, align 4, !dbg !6921
  %conv19 = trunc i32 %20 to i8, !dbg !6921
  %call20 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 61840, i8 zeroext %conv19) #9, !dbg !6921
  br label %cond.end24, !dbg !6921

cond.false21:                                     ; preds = %if.end
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6921
  %22 = load i32, i32* %reg, align 4, !dbg !6921
  %conv22 = trunc i32 %22 to i8, !dbg !6921
  %call23 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 61856, i8 zeroext %conv22) #9, !dbg !6921
  br label %cond.end24, !dbg !6921

cond.end24:                                       ; preds = %cond.false21, %cond.true18
  %cond25 = phi i32 [ %call20, %cond.true18 ], [ %call23, %cond.false21 ], !dbg !6921
  %cmp26 = icmp slt i32 %cond25, 0, !dbg !6923
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !6924

if.then28:                                        ; preds = %cond.end24
  br label %err, !dbg !6925

if.end29:                                         ; preds = %cond.end24
  br label %sw.epilog, !dbg !6926

sw.bb30:                                          ; preds = %cond.end
  %23 = load i32, i32* %reg, align 4, !dbg !6927
  %and31 = and i32 %23, -8, !dbg !6927
  store i32 %and31, i32* %reg, align 4, !dbg !6927
  %24 = load i32, i32* %reg, align 4, !dbg !6928
  %and32 = and i32 %24, -65, !dbg !6928
  %or33 = or i32 %and32, 64, !dbg !6928
  store i32 %or33, i32* %reg, align 4, !dbg !6928
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6929
  %demod34 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 1, !dbg !6929
  %26 = load i32, i32* %demod34, align 4, !dbg !6929
  %cmp35 = icmp eq i32 %26, 2, !dbg !6929
  br i1 %cmp35, label %cond.true37, label %cond.false40, !dbg !6929

cond.true37:                                      ; preds = %sw.bb30
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6929
  %28 = load i32, i32* %reg, align 4, !dbg !6929
  %conv38 = trunc i32 %28 to i8, !dbg !6929
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 61840, i8 zeroext %conv38) #9, !dbg !6929
  br label %cond.end43, !dbg !6929

cond.false40:                                     ; preds = %sw.bb30
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6929
  %30 = load i32, i32* %reg, align 4, !dbg !6929
  %conv41 = trunc i32 %30 to i8, !dbg !6929
  %call42 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 61856, i8 zeroext %conv41) #9, !dbg !6929
  br label %cond.end43, !dbg !6929

cond.end43:                                       ; preds = %cond.false40, %cond.true37
  %cond44 = phi i32 [ %call39, %cond.true37 ], [ %call42, %cond.false40 ], !dbg !6929
  %cmp45 = icmp slt i32 %cond44, 0, !dbg !6931
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !6932

if.then47:                                        ; preds = %cond.end43
  br label %err, !dbg !6933

if.end48:                                         ; preds = %cond.end43
  br label %sw.epilog, !dbg !6934

sw.default:                                       ; preds = %cond.end
  store i32 -22, i32* %retval, align 4, !dbg !6935
  br label %return, !dbg !6935

sw.epilog:                                        ; preds = %if.end48, %if.end29
  store i32 0, i32* %retval, align 4, !dbg !6936
  br label %return, !dbg !6936

err:                                              ; preds = %if.then47, %if.then28, %if.then
  call void @llvm.dbg.label(metadata !6937), !dbg !6938
  br label %do.body, !dbg !6939

do.body:                                          ; preds = %err
  %31 = load i32, i32* @verbose, align 4, !dbg !6940
  %cmp49 = icmp ugt i32 %31, 0, !dbg !6940
  br i1 %cmp49, label %land.lhs.true, label %if.else, !dbg !6940

land.lhs.true:                                    ; preds = %do.body
  %32 = load i32, i32* @verbose, align 4, !dbg !6940
  %cmp51 = icmp ugt i32 %32, 0, !dbg !6940
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !6945

if.then53:                                        ; preds = %land.lhs.true
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_tone, i64 0, i64 0)) #13, !dbg !6940
  br label %if.end81, !dbg !6940

if.else:                                          ; preds = %land.lhs.true, %do.body
  %33 = load i32, i32* @verbose, align 4, !dbg !6946
  %cmp55 = icmp ugt i32 %33, 1, !dbg !6946
  br i1 %cmp55, label %land.lhs.true57, label %if.else62, !dbg !6946

land.lhs.true57:                                  ; preds = %if.else
  %34 = load i32, i32* @verbose, align 4, !dbg !6946
  %cmp58 = icmp ugt i32 %34, 0, !dbg !6946
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !6940

if.then60:                                        ; preds = %land.lhs.true57
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_tone, i64 0, i64 0)) #13, !dbg !6946
  br label %if.end80, !dbg !6946

if.else62:                                        ; preds = %land.lhs.true57, %if.else
  %35 = load i32, i32* @verbose, align 4, !dbg !6948
  %cmp63 = icmp ugt i32 %35, 2, !dbg !6948
  br i1 %cmp63, label %land.lhs.true65, label %if.else70, !dbg !6948

land.lhs.true65:                                  ; preds = %if.else62
  %36 = load i32, i32* @verbose, align 4, !dbg !6948
  %cmp66 = icmp ugt i32 %36, 0, !dbg !6948
  br i1 %cmp66, label %if.then68, label %if.else70, !dbg !6946

if.then68:                                        ; preds = %land.lhs.true65
  %call69 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_tone, i64 0, i64 0)) #13, !dbg !6948
  br label %if.end79, !dbg !6948

if.else70:                                        ; preds = %land.lhs.true65, %if.else62
  %37 = load i32, i32* @verbose, align 4, !dbg !6950
  %cmp71 = icmp ugt i32 %37, 3, !dbg !6950
  br i1 %cmp71, label %land.lhs.true73, label %if.end78, !dbg !6950

land.lhs.true73:                                  ; preds = %if.else70
  %38 = load i32, i32* @verbose, align 4, !dbg !6950
  %cmp74 = icmp ugt i32 %38, 0, !dbg !6950
  br i1 %cmp74, label %if.then76, label %if.end78, !dbg !6948

if.then76:                                        ; preds = %land.lhs.true73
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_tone, i64 0, i64 0)) #13, !dbg !6950
  br label %if.end78, !dbg !6950

if.end78:                                         ; preds = %if.then76, %land.lhs.true73, %if.else70
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then68
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then60
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then53
  br label %do.end, !dbg !6952

do.end:                                           ; preds = %if.end81
  store i32 -1, i32* %retval, align 4, !dbg !6953
  br label %return, !dbg !6953

return:                                           ; preds = %do.end, %sw.epilog, %sw.default
  %39 = load i32, i32* %retval, align 4, !dbg !6954
  ret i32 %39, !dbg !6954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_search(%struct.dvb_frontend* %fe) #0 !dbg !6955 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %props = alloca %struct.dtv_frontend_properties*, align 8
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !6958, metadata !DIExpression()), !dbg !6959
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6960
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !6961
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !6961
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !6960
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !6959
  call void @llvm.dbg.declare(metadata %struct.dtv_frontend_properties** %props, metadata !6962, metadata !DIExpression()), !dbg !6963
  %3 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !6964
  %dtv_property_cache = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %3, i32 0, i32 8, !dbg !6965
  store %struct.dtv_frontend_properties* %dtv_property_cache, %struct.dtv_frontend_properties** %props, align 8, !dbg !6963
  %4 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !6966
  %frequency = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %4, i32 0, i32 0, !dbg !6968
  %5 = load i32, i32* %frequency, align 4, !dbg !6968
  %cmp = icmp eq i32 %5, 0, !dbg !6969
  br i1 %cmp, label %if.then, label %if.end, !dbg !6970

if.then:                                          ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !6971
  br label %return, !dbg !6971

if.end:                                           ; preds = %entry
  %6 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !6972
  %delivery_system = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %6, i32 0, i32 15, !dbg !6973
  %7 = load i32, i32* %delivery_system, align 4, !dbg !6973
  switch i32 %7, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb1
    i32 6, label %sw.bb3
  ], !dbg !6974

sw.bb:                                            ; preds = %if.end
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6975
  %delsys = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 8, !dbg !6977
  store i32 3, i32* %delsys, align 8, !dbg !6978
  br label %sw.epilog, !dbg !6979

sw.bb1:                                           ; preds = %if.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6980
  %delsys2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 8, !dbg !6981
  store i32 1, i32* %delsys2, align 8, !dbg !6982
  br label %sw.epilog, !dbg !6983

sw.bb3:                                           ; preds = %if.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6984
  %delsys4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 8, !dbg !6985
  store i32 2, i32* %delsys4, align 8, !dbg !6986
  br label %sw.epilog, !dbg !6987

sw.default:                                       ; preds = %if.end
  store i32 8, i32* %retval, align 4, !dbg !6988
  br label %return, !dbg !6988

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb1, %sw.bb
  %11 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !6989
  %frequency5 = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %11, i32 0, i32 0, !dbg !6990
  %12 = load i32, i32* %frequency5, align 4, !dbg !6990
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6991
  %frequency6 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 18, !dbg !6992
  store i32 %12, i32* %frequency6, align 8, !dbg !6993
  %14 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !6994
  %symbol_rate = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %14, i32 0, i32 10, !dbg !6995
  %15 = load i32, i32* %symbol_rate, align 4, !dbg !6995
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6996
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 19, !dbg !6997
  store i32 %15, i32* %srate, align 4, !dbg !6998
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !6999
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 12, !dbg !7000
  store i32 3, i32* %search_mode, align 8, !dbg !7001
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7002
  %algo = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 17, !dbg !7003
  store i32 1, i32* %algo, align 4, !dbg !7004
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7005
  %fec = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 9, !dbg !7006
  store i32 9, i32* %fec, align 4, !dbg !7007
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7008
  %srate7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 19, !dbg !7010
  %21 = load i32, i32* %srate7, align 4, !dbg !7010
  %cmp8 = icmp ugt i32 %21, 10000000, !dbg !7011
  br i1 %cmp8, label %if.then9, label %if.else34, !dbg !7012

if.then9:                                         ; preds = %sw.epilog
  br label %do.body, !dbg !7013

do.body:                                          ; preds = %if.then9
  %22 = load i32, i32* @verbose, align 4, !dbg !7015
  %cmp10 = icmp ugt i32 %22, 0, !dbg !7015
  br i1 %cmp10, label %land.lhs.true, label %if.else, !dbg !7015

land.lhs.true:                                    ; preds = %do.body
  %23 = load i32, i32* @verbose, align 4, !dbg !7015
  %cmp11 = icmp ugt i32 %23, 3, !dbg !7015
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !7020

if.then12:                                        ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.65, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7015
  br label %if.end33, !dbg !7015

if.else:                                          ; preds = %land.lhs.true, %do.body
  %24 = load i32, i32* @verbose, align 4, !dbg !7021
  %cmp13 = icmp ugt i32 %24, 1, !dbg !7021
  br i1 %cmp13, label %land.lhs.true14, label %if.else18, !dbg !7021

land.lhs.true14:                                  ; preds = %if.else
  %25 = load i32, i32* @verbose, align 4, !dbg !7021
  %cmp15 = icmp ugt i32 %25, 3, !dbg !7021
  br i1 %cmp15, label %if.then16, label %if.else18, !dbg !7015

if.then16:                                        ; preds = %land.lhs.true14
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7021
  br label %if.end32, !dbg !7021

if.else18:                                        ; preds = %land.lhs.true14, %if.else
  %26 = load i32, i32* @verbose, align 4, !dbg !7023
  %cmp19 = icmp ugt i32 %26, 2, !dbg !7023
  br i1 %cmp19, label %land.lhs.true20, label %if.else24, !dbg !7023

land.lhs.true20:                                  ; preds = %if.else18
  %27 = load i32, i32* @verbose, align 4, !dbg !7023
  %cmp21 = icmp ugt i32 %27, 3, !dbg !7023
  br i1 %cmp21, label %if.then22, label %if.else24, !dbg !7021

if.then22:                                        ; preds = %land.lhs.true20
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7023
  br label %if.end31, !dbg !7023

if.else24:                                        ; preds = %land.lhs.true20, %if.else18
  %28 = load i32, i32* @verbose, align 4, !dbg !7025
  %cmp25 = icmp ugt i32 %28, 3, !dbg !7025
  br i1 %cmp25, label %land.lhs.true26, label %if.end30, !dbg !7025

land.lhs.true26:                                  ; preds = %if.else24
  %29 = load i32, i32* @verbose, align 4, !dbg !7025
  %cmp27 = icmp ugt i32 %29, 3, !dbg !7025
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !7023

if.then28:                                        ; preds = %land.lhs.true26
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7025
  br label %if.end30, !dbg !7025

if.end30:                                         ; preds = %if.then28, %land.lhs.true26, %if.else24
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then22
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then16
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then12
  br label %do.end, !dbg !7027

do.end:                                           ; preds = %if.end33
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7028
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 21, !dbg !7029
  store i32 10000000, i32* %search_range, align 4, !dbg !7030
  br label %if.end65, !dbg !7031

if.else34:                                        ; preds = %sw.epilog
  br label %do.body35, !dbg !7032

do.body35:                                        ; preds = %if.else34
  %31 = load i32, i32* @verbose, align 4, !dbg !7034
  %cmp36 = icmp ugt i32 %31, 0, !dbg !7034
  br i1 %cmp36, label %land.lhs.true37, label %if.else41, !dbg !7034

land.lhs.true37:                                  ; preds = %do.body35
  %32 = load i32, i32* @verbose, align 4, !dbg !7034
  %cmp38 = icmp ugt i32 %32, 3, !dbg !7034
  br i1 %cmp38, label %if.then39, label %if.else41, !dbg !7039

if.then39:                                        ; preds = %land.lhs.true37
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.69, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7034
  br label %if.end62, !dbg !7034

if.else41:                                        ; preds = %land.lhs.true37, %do.body35
  %33 = load i32, i32* @verbose, align 4, !dbg !7040
  %cmp42 = icmp ugt i32 %33, 1, !dbg !7040
  br i1 %cmp42, label %land.lhs.true43, label %if.else47, !dbg !7040

land.lhs.true43:                                  ; preds = %if.else41
  %34 = load i32, i32* @verbose, align 4, !dbg !7040
  %cmp44 = icmp ugt i32 %34, 3, !dbg !7040
  br i1 %cmp44, label %if.then45, label %if.else47, !dbg !7034

if.then45:                                        ; preds = %land.lhs.true43
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.70, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7040
  br label %if.end61, !dbg !7040

if.else47:                                        ; preds = %land.lhs.true43, %if.else41
  %35 = load i32, i32* @verbose, align 4, !dbg !7042
  %cmp48 = icmp ugt i32 %35, 2, !dbg !7042
  br i1 %cmp48, label %land.lhs.true49, label %if.else53, !dbg !7042

land.lhs.true49:                                  ; preds = %if.else47
  %36 = load i32, i32* @verbose, align 4, !dbg !7042
  %cmp50 = icmp ugt i32 %36, 3, !dbg !7042
  br i1 %cmp50, label %if.then51, label %if.else53, !dbg !7040

if.then51:                                        ; preds = %land.lhs.true49
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7042
  br label %if.end60, !dbg !7042

if.else53:                                        ; preds = %land.lhs.true49, %if.else47
  %37 = load i32, i32* @verbose, align 4, !dbg !7044
  %cmp54 = icmp ugt i32 %37, 3, !dbg !7044
  br i1 %cmp54, label %land.lhs.true55, label %if.end59, !dbg !7044

land.lhs.true55:                                  ; preds = %if.else53
  %38 = load i32, i32* @verbose, align 4, !dbg !7044
  %cmp56 = icmp ugt i32 %38, 3, !dbg !7044
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !7042

if.then57:                                        ; preds = %land.lhs.true55
  %call58 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.72, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7044
  br label %if.end59, !dbg !7044

if.end59:                                         ; preds = %if.then57, %land.lhs.true55, %if.else53
  br label %if.end60

if.end60:                                         ; preds = %if.end59, %if.then51
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then45
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then39
  br label %do.end63, !dbg !7046

do.end63:                                         ; preds = %if.end62
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7047
  %search_range64 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 21, !dbg !7048
  store i32 5000000, i32* %search_range64, align 4, !dbg !7049
  br label %if.end65

if.end65:                                         ; preds = %do.end63, %do.end
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7050
  %41 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !7051
  %scrambling_sequence_index = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %41, i32 0, i32 25, !dbg !7052
  %42 = load i32, i32* %scrambling_sequence_index, align 4, !dbg !7052
  %call66 = call i32 @stv090x_set_pls(%struct.stv090x_state* %40, i32 %42) #9, !dbg !7053
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7054
  %44 = load %struct.dtv_frontend_properties*, %struct.dtv_frontend_properties** %props, align 8, !dbg !7055
  %stream_id = getelementptr inbounds %struct.dtv_frontend_properties, %struct.dtv_frontend_properties* %44, i32 0, i32 24, !dbg !7056
  %45 = load i32, i32* %stream_id, align 4, !dbg !7056
  %call67 = call i32 @stv090x_set_mis(%struct.stv090x_state* %43, i32 %45) #9, !dbg !7057
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7058
  %call68 = call i32 @stv090x_algo(%struct.stv090x_state* %46) #9, !dbg !7060
  %cmp69 = icmp eq i32 %call68, 4, !dbg !7061
  br i1 %cmp69, label %if.then70, label %if.else100, !dbg !7062

if.then70:                                        ; preds = %if.end65
  br label %do.body71, !dbg !7063

do.body71:                                        ; preds = %if.then70
  %47 = load i32, i32* @verbose, align 4, !dbg !7065
  %cmp72 = icmp ugt i32 %47, 0, !dbg !7065
  br i1 %cmp72, label %land.lhs.true73, label %if.else77, !dbg !7065

land.lhs.true73:                                  ; preds = %do.body71
  %48 = load i32, i32* @verbose, align 4, !dbg !7065
  %cmp74 = icmp ugt i32 %48, 3, !dbg !7065
  br i1 %cmp74, label %if.then75, label %if.else77, !dbg !7070

if.then75:                                        ; preds = %land.lhs.true73
  %call76 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.73, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7065
  br label %if.end98, !dbg !7065

if.else77:                                        ; preds = %land.lhs.true73, %do.body71
  %49 = load i32, i32* @verbose, align 4, !dbg !7071
  %cmp78 = icmp ugt i32 %49, 1, !dbg !7071
  br i1 %cmp78, label %land.lhs.true79, label %if.else83, !dbg !7071

land.lhs.true79:                                  ; preds = %if.else77
  %50 = load i32, i32* @verbose, align 4, !dbg !7071
  %cmp80 = icmp ugt i32 %50, 3, !dbg !7071
  br i1 %cmp80, label %if.then81, label %if.else83, !dbg !7065

if.then81:                                        ; preds = %land.lhs.true79
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7071
  br label %if.end97, !dbg !7071

if.else83:                                        ; preds = %land.lhs.true79, %if.else77
  %51 = load i32, i32* @verbose, align 4, !dbg !7073
  %cmp84 = icmp ugt i32 %51, 2, !dbg !7073
  br i1 %cmp84, label %land.lhs.true85, label %if.else89, !dbg !7073

land.lhs.true85:                                  ; preds = %if.else83
  %52 = load i32, i32* @verbose, align 4, !dbg !7073
  %cmp86 = icmp ugt i32 %52, 3, !dbg !7073
  br i1 %cmp86, label %if.then87, label %if.else89, !dbg !7071

if.then87:                                        ; preds = %land.lhs.true85
  %call88 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.75, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7073
  br label %if.end96, !dbg !7073

if.else89:                                        ; preds = %land.lhs.true85, %if.else83
  %53 = load i32, i32* @verbose, align 4, !dbg !7075
  %cmp90 = icmp ugt i32 %53, 3, !dbg !7075
  br i1 %cmp90, label %land.lhs.true91, label %if.end95, !dbg !7075

land.lhs.true91:                                  ; preds = %if.else89
  %54 = load i32, i32* @verbose, align 4, !dbg !7075
  %cmp92 = icmp ugt i32 %54, 3, !dbg !7075
  br i1 %cmp92, label %if.then93, label %if.end95, !dbg !7073

if.then93:                                        ; preds = %land.lhs.true91
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7075
  br label %if.end95, !dbg !7075

if.end95:                                         ; preds = %if.then93, %land.lhs.true91, %if.else89
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then87
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then81
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then75
  br label %do.end99, !dbg !7077

do.end99:                                         ; preds = %if.end98
  store i32 1, i32* %retval, align 4, !dbg !7078
  br label %return, !dbg !7078

if.else100:                                       ; preds = %if.end65
  br label %do.body101, !dbg !7079

do.body101:                                       ; preds = %if.else100
  %55 = load i32, i32* @verbose, align 4, !dbg !7081
  %cmp102 = icmp ugt i32 %55, 0, !dbg !7081
  br i1 %cmp102, label %land.lhs.true103, label %if.else107, !dbg !7081

land.lhs.true103:                                 ; preds = %do.body101
  %56 = load i32, i32* @verbose, align 4, !dbg !7081
  %cmp104 = icmp ugt i32 %56, 3, !dbg !7081
  br i1 %cmp104, label %if.then105, label %if.else107, !dbg !7086

if.then105:                                       ; preds = %land.lhs.true103
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.77, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7081
  br label %if.end128, !dbg !7081

if.else107:                                       ; preds = %land.lhs.true103, %do.body101
  %57 = load i32, i32* @verbose, align 4, !dbg !7087
  %cmp108 = icmp ugt i32 %57, 1, !dbg !7087
  br i1 %cmp108, label %land.lhs.true109, label %if.else113, !dbg !7087

land.lhs.true109:                                 ; preds = %if.else107
  %58 = load i32, i32* @verbose, align 4, !dbg !7087
  %cmp110 = icmp ugt i32 %58, 3, !dbg !7087
  br i1 %cmp110, label %if.then111, label %if.else113, !dbg !7081

if.then111:                                       ; preds = %land.lhs.true109
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.78, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7087
  br label %if.end127, !dbg !7087

if.else113:                                       ; preds = %land.lhs.true109, %if.else107
  %59 = load i32, i32* @verbose, align 4, !dbg !7089
  %cmp114 = icmp ugt i32 %59, 2, !dbg !7089
  br i1 %cmp114, label %land.lhs.true115, label %if.else119, !dbg !7089

land.lhs.true115:                                 ; preds = %if.else113
  %60 = load i32, i32* @verbose, align 4, !dbg !7089
  %cmp116 = icmp ugt i32 %60, 3, !dbg !7089
  br i1 %cmp116, label %if.then117, label %if.else119, !dbg !7087

if.then117:                                       ; preds = %land.lhs.true115
  %call118 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7089
  br label %if.end126, !dbg !7089

if.else119:                                       ; preds = %land.lhs.true115, %if.else113
  %61 = load i32, i32* @verbose, align 4, !dbg !7091
  %cmp120 = icmp ugt i32 %61, 3, !dbg !7091
  br i1 %cmp120, label %land.lhs.true121, label %if.end125, !dbg !7091

land.lhs.true121:                                 ; preds = %if.else119
  %62 = load i32, i32* @verbose, align 4, !dbg !7091
  %cmp122 = icmp ugt i32 %62, 3, !dbg !7091
  br i1 %cmp122, label %if.then123, label %if.end125, !dbg !7089

if.then123:                                       ; preds = %land.lhs.true121
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.80, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_search, i64 0, i64 0)) #13, !dbg !7091
  br label %if.end125, !dbg !7091

if.end125:                                        ; preds = %if.then123, %land.lhs.true121, %if.else119
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.then117
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then111
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.then105
  br label %do.end129, !dbg !7093

do.end129:                                        ; preds = %if.end128
  store i32 4, i32* %retval, align 4, !dbg !7094
  br label %return, !dbg !7094

return:                                           ; preds = %do.end129, %do.end99, %sw.default, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !7095
  ret i32 %63, !dbg !7095
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @remove_dev(%struct.stv090x_internal* %internal) #0 !dbg !7096 {
entry:
  %internal.addr = alloca %struct.stv090x_internal*, align 8
  %prev_dev = alloca %struct.stv090x_dev*, align 8
  %del_dev = alloca %struct.stv090x_dev*, align 8
  store %struct.stv090x_internal* %internal, %struct.stv090x_internal** %internal.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_internal** %internal.addr, metadata !7099, metadata !DIExpression()), !dbg !7100
  call void @llvm.dbg.declare(metadata %struct.stv090x_dev** %prev_dev, metadata !7101, metadata !DIExpression()), !dbg !7102
  %0 = load %struct.stv090x_dev*, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !7103
  store %struct.stv090x_dev* %0, %struct.stv090x_dev** %prev_dev, align 8, !dbg !7102
  call void @llvm.dbg.declare(metadata %struct.stv090x_dev** %del_dev, metadata !7104, metadata !DIExpression()), !dbg !7105
  %1 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal.addr, align 8, !dbg !7106
  %i2c_adap = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %1, i32 0, i32 0, !dbg !7107
  %2 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap, align 8, !dbg !7107
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal.addr, align 8, !dbg !7108
  %i2c_addr = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 1, !dbg !7109
  %4 = load i8, i8* %i2c_addr, align 8, !dbg !7109
  %call = call %struct.stv090x_dev* @find_dev(%struct.i2c_adapter* %2, i8 zeroext %4) #9, !dbg !7110
  store %struct.stv090x_dev* %call, %struct.stv090x_dev** %del_dev, align 8, !dbg !7105
  %5 = load %struct.stv090x_dev*, %struct.stv090x_dev** %del_dev, align 8, !dbg !7111
  %cmp = icmp ne %struct.stv090x_dev* %5, null, !dbg !7113
  br i1 %cmp, label %if.then, label %if.end8, !dbg !7114

if.then:                                          ; preds = %entry
  %6 = load %struct.stv090x_dev*, %struct.stv090x_dev** %del_dev, align 8, !dbg !7115
  %7 = load %struct.stv090x_dev*, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !7118
  %cmp1 = icmp eq %struct.stv090x_dev* %6, %7, !dbg !7119
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !7120

if.then2:                                         ; preds = %if.then
  %8 = load %struct.stv090x_dev*, %struct.stv090x_dev** %del_dev, align 8, !dbg !7121
  %next_dev = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %8, i32 0, i32 1, !dbg !7123
  %9 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev, align 8, !dbg !7123
  store %struct.stv090x_dev* %9, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !7124
  br label %if.end, !dbg !7125

if.else:                                          ; preds = %if.then
  br label %while.cond, !dbg !7126

while.cond:                                       ; preds = %while.body, %if.else
  %10 = load %struct.stv090x_dev*, %struct.stv090x_dev** %prev_dev, align 8, !dbg !7128
  %next_dev3 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %10, i32 0, i32 1, !dbg !7129
  %11 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev3, align 8, !dbg !7129
  %12 = load %struct.stv090x_dev*, %struct.stv090x_dev** %del_dev, align 8, !dbg !7130
  %cmp4 = icmp ne %struct.stv090x_dev* %11, %12, !dbg !7131
  br i1 %cmp4, label %while.body, label %while.end, !dbg !7126

while.body:                                       ; preds = %while.cond
  %13 = load %struct.stv090x_dev*, %struct.stv090x_dev** %prev_dev, align 8, !dbg !7132
  %next_dev5 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %13, i32 0, i32 1, !dbg !7133
  %14 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev5, align 8, !dbg !7133
  store %struct.stv090x_dev* %14, %struct.stv090x_dev** %prev_dev, align 8, !dbg !7134
  br label %while.cond, !dbg !7126, !llvm.loop !7135

while.end:                                        ; preds = %while.cond
  %15 = load %struct.stv090x_dev*, %struct.stv090x_dev** %del_dev, align 8, !dbg !7136
  %next_dev6 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %15, i32 0, i32 1, !dbg !7137
  %16 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev6, align 8, !dbg !7137
  %17 = load %struct.stv090x_dev*, %struct.stv090x_dev** %prev_dev, align 8, !dbg !7138
  %next_dev7 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %17, i32 0, i32 1, !dbg !7139
  store %struct.stv090x_dev* %16, %struct.stv090x_dev** %next_dev7, align 8, !dbg !7140
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then2
  %18 = load %struct.stv090x_dev*, %struct.stv090x_dev** %del_dev, align 8, !dbg !7141
  %19 = bitcast %struct.stv090x_dev* %18 to i8*, !dbg !7141
  call void @kfree(i8* %19) #9, !dbg !7142
  br label %if.end8, !dbg !7143

if.end8:                                          ; preds = %if.end, %entry
  ret void, !dbg !7144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.stv090x_dev* @find_dev(%struct.i2c_adapter* %i2c_adap, i8 zeroext %i2c_addr) #0 !dbg !7145 {
entry:
  %i2c_adap.addr = alloca %struct.i2c_adapter*, align 8
  %i2c_addr.addr = alloca i8, align 1
  %temp_dev = alloca %struct.stv090x_dev*, align 8
  store %struct.i2c_adapter* %i2c_adap, %struct.i2c_adapter** %i2c_adap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %i2c_adap.addr, metadata !7148, metadata !DIExpression()), !dbg !7149
  store i8 %i2c_addr, i8* %i2c_addr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %i2c_addr.addr, metadata !7150, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.declare(metadata %struct.stv090x_dev** %temp_dev, metadata !7152, metadata !DIExpression()), !dbg !7153
  %0 = load %struct.stv090x_dev*, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !7154
  store %struct.stv090x_dev* %0, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7153
  br label %while.cond, !dbg !7155

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7156
  %cmp = icmp ne %struct.stv090x_dev* %1, null, !dbg !7157
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7158

land.rhs:                                         ; preds = %while.cond
  %2 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7159
  %internal = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %2, i32 0, i32 0, !dbg !7160
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !7160
  %i2c_adap1 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 0, !dbg !7161
  %4 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap1, align 8, !dbg !7161
  %5 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c_adap.addr, align 8, !dbg !7162
  %cmp2 = icmp ne %struct.i2c_adapter* %4, %5, !dbg !7163
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !7164

lor.rhs:                                          ; preds = %land.rhs
  %6 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7165
  %internal3 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %6, i32 0, i32 0, !dbg !7166
  %7 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal3, align 8, !dbg !7166
  %i2c_addr4 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %7, i32 0, i32 1, !dbg !7167
  %8 = load i8, i8* %i2c_addr4, align 8, !dbg !7167
  %conv = zext i8 %8 to i32, !dbg !7165
  %9 = load i8, i8* %i2c_addr.addr, align 1, !dbg !7168
  %conv5 = zext i8 %9 to i32, !dbg !7168
  %cmp6 = icmp ne i32 %conv, %conv5, !dbg !7169
  br label %lor.end, !dbg !7164

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %10 = phi i1 [ true, %land.rhs ], [ %cmp6, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %while.cond
  %11 = phi i1 [ false, %while.cond ], [ %10, %lor.end ], !dbg !7170
  br i1 %11, label %while.body, label %while.end, !dbg !7155

while.body:                                       ; preds = %land.end
  %12 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7171
  %next_dev = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %12, i32 0, i32 1, !dbg !7173
  %13 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev, align 8, !dbg !7173
  store %struct.stv090x_dev* %13, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7174
  br label %while.cond, !dbg !7155, !llvm.loop !7175

while.end:                                        ; preds = %land.end
  %14 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !7177
  ret %struct.stv090x_dev* %14, !dbg !7178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %state, i32 %enable) #0 !dbg !7179 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %enable.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7182, metadata !DIExpression()), !dbg !7183
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !7184, metadata !DIExpression()), !dbg !7185
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7186, metadata !DIExpression()), !dbg !7187
  %0 = load i32, i32* %enable.addr, align 4, !dbg !7188
  %tobool = icmp ne i32 %0, 0, !dbg !7188
  br i1 %tobool, label %if.then, label %if.end5, !dbg !7190

if.then:                                          ; preds = %entry
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7191
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 5, !dbg !7194
  %2 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !7194
  %tuner_i2c_lock = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %2, i32 0, i32 27, !dbg !7195
  %3 = load void (%struct.dvb_frontend*, i32)*, void (%struct.dvb_frontend*, i32)** %tuner_i2c_lock, align 8, !dbg !7195
  %tobool1 = icmp ne void (%struct.dvb_frontend*, i32)* %3, null, !dbg !7191
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !7196

if.then2:                                         ; preds = %if.then
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7197
  %config3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 5, !dbg !7198
  %5 = load %struct.stv090x_config*, %struct.stv090x_config** %config3, align 8, !dbg !7198
  %tuner_i2c_lock4 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %5, i32 0, i32 27, !dbg !7199
  %6 = load void (%struct.dvb_frontend*, i32)*, void (%struct.dvb_frontend*, i32)** %tuner_i2c_lock4, align 8, !dbg !7199
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7200
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 6, !dbg !7201
  call void %6(%struct.dvb_frontend* %frontend, i32 1) #9, !dbg !7197
  br label %if.end, !dbg !7197

if.else:                                          ; preds = %if.then
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7202
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 3, !dbg !7203
  %9 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !7203
  %tuner_lock = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %9, i32 0, i32 3, !dbg !7204
  call void @mutex_lock(%struct.mutex* %tuner_lock) #9, !dbg !7205
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end5, !dbg !7206

if.end5:                                          ; preds = %if.end, %entry
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7207
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !7207
  %11 = load i32, i32* %demod, align 4, !dbg !7207
  %cmp = icmp eq i32 %11, 2, !dbg !7207
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7207

cond.true:                                        ; preds = %if.end5
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7207
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 61739) #9, !dbg !7207
  br label %cond.end, !dbg !7207

cond.false:                                       ; preds = %if.end5
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7207
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 61738) #9, !dbg !7207
  br label %cond.end, !dbg !7207

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call6, %cond.false ], !dbg !7207
  store i32 %cond, i32* %reg, align 4, !dbg !7208
  %14 = load i32, i32* %enable.addr, align 4, !dbg !7209
  %tobool7 = icmp ne i32 %14, 0, !dbg !7209
  br i1 %tobool7, label %if.then8, label %if.else48, !dbg !7211

if.then8:                                         ; preds = %cond.end
  br label %do.body, !dbg !7212

do.body:                                          ; preds = %if.then8
  %15 = load i32, i32* @verbose, align 4, !dbg !7214
  %cmp9 = icmp ugt i32 %15, 0, !dbg !7214
  br i1 %cmp9, label %land.lhs.true, label %if.else13, !dbg !7214

land.lhs.true:                                    ; preds = %do.body
  %16 = load i32, i32* @verbose, align 4, !dbg !7214
  %cmp10 = icmp ugt i32 %16, 3, !dbg !7214
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !7219

if.then11:                                        ; preds = %land.lhs.true
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7214
  br label %if.end34, !dbg !7214

if.else13:                                        ; preds = %land.lhs.true, %do.body
  %17 = load i32, i32* @verbose, align 4, !dbg !7220
  %cmp14 = icmp ugt i32 %17, 1, !dbg !7220
  br i1 %cmp14, label %land.lhs.true15, label %if.else19, !dbg !7220

land.lhs.true15:                                  ; preds = %if.else13
  %18 = load i32, i32* @verbose, align 4, !dbg !7220
  %cmp16 = icmp ugt i32 %18, 3, !dbg !7220
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !7214

if.then17:                                        ; preds = %land.lhs.true15
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7220
  br label %if.end33, !dbg !7220

if.else19:                                        ; preds = %land.lhs.true15, %if.else13
  %19 = load i32, i32* @verbose, align 4, !dbg !7222
  %cmp20 = icmp ugt i32 %19, 2, !dbg !7222
  br i1 %cmp20, label %land.lhs.true21, label %if.else25, !dbg !7222

land.lhs.true21:                                  ; preds = %if.else19
  %20 = load i32, i32* @verbose, align 4, !dbg !7222
  %cmp22 = icmp ugt i32 %20, 3, !dbg !7222
  br i1 %cmp22, label %if.then23, label %if.else25, !dbg !7220

if.then23:                                        ; preds = %land.lhs.true21
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7222
  br label %if.end32, !dbg !7222

if.else25:                                        ; preds = %land.lhs.true21, %if.else19
  %21 = load i32, i32* @verbose, align 4, !dbg !7224
  %cmp26 = icmp ugt i32 %21, 3, !dbg !7224
  br i1 %cmp26, label %land.lhs.true27, label %if.end31, !dbg !7224

land.lhs.true27:                                  ; preds = %if.else25
  %22 = load i32, i32* @verbose, align 4, !dbg !7224
  %cmp28 = icmp ugt i32 %22, 3, !dbg !7224
  br i1 %cmp28, label %if.then29, label %if.end31, !dbg !7222

if.then29:                                        ; preds = %land.lhs.true27
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7224
  br label %if.end31, !dbg !7224

if.end31:                                         ; preds = %if.then29, %land.lhs.true27, %if.else25
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then23
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then17
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then11
  br label %do.end, !dbg !7226

do.end:                                           ; preds = %if.end34
  %23 = load i32, i32* %reg, align 4, !dbg !7227
  %and = and i32 %23, -129, !dbg !7227
  %or = or i32 %and, 128, !dbg !7227
  store i32 %or, i32* %reg, align 4, !dbg !7227
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7228
  %demod35 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !7228
  %25 = load i32, i32* %demod35, align 4, !dbg !7228
  %cmp36 = icmp eq i32 %25, 2, !dbg !7228
  br i1 %cmp36, label %cond.true37, label %cond.false39, !dbg !7228

cond.true37:                                      ; preds = %do.end
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7228
  %27 = load i32, i32* %reg, align 4, !dbg !7228
  %conv = trunc i32 %27 to i8, !dbg !7228
  %call38 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 61739, i8 zeroext %conv) #9, !dbg !7228
  br label %cond.end42, !dbg !7228

cond.false39:                                     ; preds = %do.end
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7228
  %29 = load i32, i32* %reg, align 4, !dbg !7228
  %conv40 = trunc i32 %29 to i8, !dbg !7228
  %call41 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 61738, i8 zeroext %conv40) #9, !dbg !7228
  br label %cond.end42, !dbg !7228

cond.end42:                                       ; preds = %cond.false39, %cond.true37
  %cond43 = phi i32 [ %call38, %cond.true37 ], [ %call41, %cond.false39 ], !dbg !7228
  %cmp44 = icmp slt i32 %cond43, 0, !dbg !7230
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !7231

if.then46:                                        ; preds = %cond.end42
  br label %err, !dbg !7232

if.end47:                                         ; preds = %cond.end42
  br label %if.end102, !dbg !7233

if.else48:                                        ; preds = %cond.end
  br label %do.body49, !dbg !7234

do.body49:                                        ; preds = %if.else48
  %30 = load i32, i32* @verbose, align 4, !dbg !7236
  %cmp50 = icmp ugt i32 %30, 0, !dbg !7236
  br i1 %cmp50, label %land.lhs.true52, label %if.else57, !dbg !7236

land.lhs.true52:                                  ; preds = %do.body49
  %31 = load i32, i32* @verbose, align 4, !dbg !7236
  %cmp53 = icmp ugt i32 %31, 3, !dbg !7236
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !7241

if.then55:                                        ; preds = %land.lhs.true52
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7236
  br label %if.end84, !dbg !7236

if.else57:                                        ; preds = %land.lhs.true52, %do.body49
  %32 = load i32, i32* @verbose, align 4, !dbg !7242
  %cmp58 = icmp ugt i32 %32, 1, !dbg !7242
  br i1 %cmp58, label %land.lhs.true60, label %if.else65, !dbg !7242

land.lhs.true60:                                  ; preds = %if.else57
  %33 = load i32, i32* @verbose, align 4, !dbg !7242
  %cmp61 = icmp ugt i32 %33, 3, !dbg !7242
  br i1 %cmp61, label %if.then63, label %if.else65, !dbg !7236

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7242
  br label %if.end83, !dbg !7242

if.else65:                                        ; preds = %land.lhs.true60, %if.else57
  %34 = load i32, i32* @verbose, align 4, !dbg !7244
  %cmp66 = icmp ugt i32 %34, 2, !dbg !7244
  br i1 %cmp66, label %land.lhs.true68, label %if.else73, !dbg !7244

land.lhs.true68:                                  ; preds = %if.else65
  %35 = load i32, i32* @verbose, align 4, !dbg !7244
  %cmp69 = icmp ugt i32 %35, 3, !dbg !7244
  br i1 %cmp69, label %if.then71, label %if.else73, !dbg !7242

if.then71:                                        ; preds = %land.lhs.true68
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7244
  br label %if.end82, !dbg !7244

if.else73:                                        ; preds = %land.lhs.true68, %if.else65
  %36 = load i32, i32* @verbose, align 4, !dbg !7246
  %cmp74 = icmp ugt i32 %36, 3, !dbg !7246
  br i1 %cmp74, label %land.lhs.true76, label %if.end81, !dbg !7246

land.lhs.true76:                                  ; preds = %if.else73
  %37 = load i32, i32* @verbose, align 4, !dbg !7246
  %cmp77 = icmp ugt i32 %37, 3, !dbg !7246
  br i1 %cmp77, label %if.then79, label %if.end81, !dbg !7244

if.then79:                                        ; preds = %land.lhs.true76
  %call80 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7246
  br label %if.end81, !dbg !7246

if.end81:                                         ; preds = %if.then79, %land.lhs.true76, %if.else73
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then71
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then63
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then55
  br label %do.end85, !dbg !7248

do.end85:                                         ; preds = %if.end84
  %38 = load i32, i32* %reg, align 4, !dbg !7249
  %and86 = and i32 %38, -129, !dbg !7249
  store i32 %and86, i32* %reg, align 4, !dbg !7249
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7250
  %demod87 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 1, !dbg !7250
  %40 = load i32, i32* %demod87, align 4, !dbg !7250
  %cmp88 = icmp eq i32 %40, 2, !dbg !7250
  br i1 %cmp88, label %cond.true90, label %cond.false93, !dbg !7250

cond.true90:                                      ; preds = %do.end85
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7250
  %42 = load i32, i32* %reg, align 4, !dbg !7250
  %conv91 = trunc i32 %42 to i8, !dbg !7250
  %call92 = call i32 @stv090x_write_reg(%struct.stv090x_state* %41, i32 61739, i8 zeroext %conv91) #9, !dbg !7250
  br label %cond.end96, !dbg !7250

cond.false93:                                     ; preds = %do.end85
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7250
  %44 = load i32, i32* %reg, align 4, !dbg !7250
  %conv94 = trunc i32 %44 to i8, !dbg !7250
  %call95 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 61738, i8 zeroext %conv94) #9, !dbg !7250
  br label %cond.end96, !dbg !7250

cond.end96:                                       ; preds = %cond.false93, %cond.true90
  %cond97 = phi i32 [ %call92, %cond.true90 ], [ %call95, %cond.false93 ], !dbg !7250
  %cmp98 = icmp slt i32 %cond97, 0, !dbg !7252
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !7253

if.then100:                                       ; preds = %cond.end96
  br label %err, !dbg !7254

if.end101:                                        ; preds = %cond.end96
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end47
  %45 = load i32, i32* %enable.addr, align 4, !dbg !7255
  %tobool103 = icmp ne i32 %45, 0, !dbg !7255
  br i1 %tobool103, label %if.end116, label %if.then104, !dbg !7257

if.then104:                                       ; preds = %if.end102
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7258
  %config105 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %46, i32 0, i32 5, !dbg !7261
  %47 = load %struct.stv090x_config*, %struct.stv090x_config** %config105, align 8, !dbg !7261
  %tuner_i2c_lock106 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %47, i32 0, i32 27, !dbg !7262
  %48 = load void (%struct.dvb_frontend*, i32)*, void (%struct.dvb_frontend*, i32)** %tuner_i2c_lock106, align 8, !dbg !7262
  %tobool107 = icmp ne void (%struct.dvb_frontend*, i32)* %48, null, !dbg !7258
  br i1 %tobool107, label %if.then108, label %if.else112, !dbg !7263

if.then108:                                       ; preds = %if.then104
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7264
  %config109 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %49, i32 0, i32 5, !dbg !7265
  %50 = load %struct.stv090x_config*, %struct.stv090x_config** %config109, align 8, !dbg !7265
  %tuner_i2c_lock110 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %50, i32 0, i32 27, !dbg !7266
  %51 = load void (%struct.dvb_frontend*, i32)*, void (%struct.dvb_frontend*, i32)** %tuner_i2c_lock110, align 8, !dbg !7266
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7267
  %frontend111 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 6, !dbg !7268
  call void %51(%struct.dvb_frontend* %frontend111, i32 0) #9, !dbg !7264
  br label %if.end115, !dbg !7264

if.else112:                                       ; preds = %if.then104
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7269
  %internal113 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %53, i32 0, i32 3, !dbg !7270
  %54 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal113, align 8, !dbg !7270
  %tuner_lock114 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %54, i32 0, i32 3, !dbg !7271
  call void @mutex_unlock(%struct.mutex* %tuner_lock114) #9, !dbg !7272
  br label %if.end115

if.end115:                                        ; preds = %if.else112, %if.then108
  br label %if.end116, !dbg !7273

if.end116:                                        ; preds = %if.end115, %if.end102
  store i32 0, i32* %retval, align 4, !dbg !7274
  br label %return, !dbg !7274

err:                                              ; preds = %if.then100, %if.then46
  call void @llvm.dbg.label(metadata !7275), !dbg !7276
  br label %do.body117, !dbg !7277

do.body117:                                       ; preds = %err
  %55 = load i32, i32* @verbose, align 4, !dbg !7278
  %cmp118 = icmp ugt i32 %55, 0, !dbg !7278
  br i1 %cmp118, label %land.lhs.true120, label %if.else125, !dbg !7278

land.lhs.true120:                                 ; preds = %do.body117
  %56 = load i32, i32* @verbose, align 4, !dbg !7278
  %cmp121 = icmp ugt i32 %56, 0, !dbg !7278
  br i1 %cmp121, label %if.then123, label %if.else125, !dbg !7283

if.then123:                                       ; preds = %land.lhs.true120
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7278
  br label %if.end152, !dbg !7278

if.else125:                                       ; preds = %land.lhs.true120, %do.body117
  %57 = load i32, i32* @verbose, align 4, !dbg !7284
  %cmp126 = icmp ugt i32 %57, 1, !dbg !7284
  br i1 %cmp126, label %land.lhs.true128, label %if.else133, !dbg !7284

land.lhs.true128:                                 ; preds = %if.else125
  %58 = load i32, i32* @verbose, align 4, !dbg !7284
  %cmp129 = icmp ugt i32 %58, 0, !dbg !7284
  br i1 %cmp129, label %if.then131, label %if.else133, !dbg !7278

if.then131:                                       ; preds = %land.lhs.true128
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7284
  br label %if.end151, !dbg !7284

if.else133:                                       ; preds = %land.lhs.true128, %if.else125
  %59 = load i32, i32* @verbose, align 4, !dbg !7286
  %cmp134 = icmp ugt i32 %59, 2, !dbg !7286
  br i1 %cmp134, label %land.lhs.true136, label %if.else141, !dbg !7286

land.lhs.true136:                                 ; preds = %if.else133
  %60 = load i32, i32* @verbose, align 4, !dbg !7286
  %cmp137 = icmp ugt i32 %60, 0, !dbg !7286
  br i1 %cmp137, label %if.then139, label %if.else141, !dbg !7284

if.then139:                                       ; preds = %land.lhs.true136
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7286
  br label %if.end150, !dbg !7286

if.else141:                                       ; preds = %land.lhs.true136, %if.else133
  %61 = load i32, i32* @verbose, align 4, !dbg !7288
  %cmp142 = icmp ugt i32 %61, 3, !dbg !7288
  br i1 %cmp142, label %land.lhs.true144, label %if.end149, !dbg !7288

land.lhs.true144:                                 ; preds = %if.else141
  %62 = load i32, i32* @verbose, align 4, !dbg !7288
  %cmp145 = icmp ugt i32 %62, 0, !dbg !7288
  br i1 %cmp145, label %if.then147, label %if.end149, !dbg !7286

if.then147:                                       ; preds = %land.lhs.true144
  %call148 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_i2c_gate_ctrl, i64 0, i64 0)) #13, !dbg !7288
  br label %if.end149, !dbg !7288

if.end149:                                        ; preds = %if.then147, %land.lhs.true144, %if.else141
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then139
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then131
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then123
  br label %do.end153, !dbg !7290

do.end153:                                        ; preds = %if.end152
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7291
  %config154 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %63, i32 0, i32 5, !dbg !7293
  %64 = load %struct.stv090x_config*, %struct.stv090x_config** %config154, align 8, !dbg !7293
  %tuner_i2c_lock155 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %64, i32 0, i32 27, !dbg !7294
  %65 = load void (%struct.dvb_frontend*, i32)*, void (%struct.dvb_frontend*, i32)** %tuner_i2c_lock155, align 8, !dbg !7294
  %tobool156 = icmp ne void (%struct.dvb_frontend*, i32)* %65, null, !dbg !7291
  br i1 %tobool156, label %if.then157, label %if.else161, !dbg !7295

if.then157:                                       ; preds = %do.end153
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7296
  %config158 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %66, i32 0, i32 5, !dbg !7297
  %67 = load %struct.stv090x_config*, %struct.stv090x_config** %config158, align 8, !dbg !7297
  %tuner_i2c_lock159 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %67, i32 0, i32 27, !dbg !7298
  %68 = load void (%struct.dvb_frontend*, i32)*, void (%struct.dvb_frontend*, i32)** %tuner_i2c_lock159, align 8, !dbg !7298
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7299
  %frontend160 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %69, i32 0, i32 6, !dbg !7300
  call void %68(%struct.dvb_frontend* %frontend160, i32 0) #9, !dbg !7296
  br label %if.end164, !dbg !7296

if.else161:                                       ; preds = %do.end153
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7301
  %internal162 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %70, i32 0, i32 3, !dbg !7302
  %71 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal162, align 8, !dbg !7302
  %tuner_lock163 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %71, i32 0, i32 3, !dbg !7303
  call void @mutex_unlock(%struct.mutex* %tuner_lock163) #9, !dbg !7304
  br label %if.end164

if.end164:                                        ; preds = %if.else161, %if.then157
  store i32 -1, i32* %retval, align 4, !dbg !7305
  br label %return, !dbg !7305

return:                                           ; preds = %if.end164, %if.end116
  %72 = load i32, i32* %retval, align 4, !dbg !7306
  ret i32 %72, !dbg !7306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_mclk(%struct.stv090x_state* %state, i32 %mclk, i32 %clk) #0 !dbg !7307 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %mclk.addr = alloca i32, align 4
  %clk.addr = alloca i32, align 4
  %config = alloca %struct.stv090x_config*, align 8
  %reg = alloca i32, align 4
  %div = alloca i32, align 4
  %clk_sel = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7310, metadata !DIExpression()), !dbg !7311
  store i32 %mclk, i32* %mclk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mclk.addr, metadata !7312, metadata !DIExpression()), !dbg !7313
  store i32 %clk, i32* %clk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk.addr, metadata !7314, metadata !DIExpression()), !dbg !7315
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !7316, metadata !DIExpression()), !dbg !7317
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7318
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 5, !dbg !7319
  %1 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !7319
  store %struct.stv090x_config* %1, %struct.stv090x_config** %config, align 8, !dbg !7317
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7320, metadata !DIExpression()), !dbg !7321
  call void @llvm.dbg.declare(metadata i32* %div, metadata !7322, metadata !DIExpression()), !dbg !7323
  call void @llvm.dbg.declare(metadata i32* %clk_sel, metadata !7324, metadata !DIExpression()), !dbg !7325
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7326
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 61878) #9, !dbg !7327
  store i32 %call, i32* %reg, align 4, !dbg !7328
  %3 = load i32, i32* %reg, align 4, !dbg !7329
  %shr = lshr i32 %3, 5, !dbg !7329
  %and = and i32 %shr, 1, !dbg !7329
  %cmp = icmp eq i32 %and, 1, !dbg !7330
  %4 = zext i1 %cmp to i64, !dbg !7331
  %cond = select i1 %cmp, i32 4, i32 6, !dbg !7331
  store i32 %cond, i32* %clk_sel, align 4, !dbg !7332
  %5 = load i32, i32* %clk_sel, align 4, !dbg !7333
  %6 = load i32, i32* %mclk.addr, align 4, !dbg !7334
  %mul = mul i32 %5, %6, !dbg !7335
  %7 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !7336
  %xtal = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %7, i32 0, i32 4, !dbg !7337
  %8 = load i32, i32* %xtal, align 8, !dbg !7337
  %div2 = udiv i32 %mul, %8, !dbg !7338
  %sub = sub i32 %div2, 1, !dbg !7339
  store i32 %sub, i32* %div, align 4, !dbg !7340
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7341
  %call3 = call i32 @stv090x_read_reg(%struct.stv090x_state* %9, i32 61875) #9, !dbg !7342
  store i32 %call3, i32* %reg, align 4, !dbg !7343
  %10 = load i32, i32* %reg, align 4, !dbg !7344
  %and4 = and i32 %10, -256, !dbg !7344
  %11 = load i32, i32* %div, align 4, !dbg !7344
  %shl = shl i32 %11, 0, !dbg !7344
  %or = or i32 %and4, %shl, !dbg !7344
  store i32 %or, i32* %reg, align 4, !dbg !7344
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7345
  %13 = load i32, i32* %reg, align 4, !dbg !7347
  %conv = trunc i32 %13 to i8, !dbg !7347
  %call5 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 61875, i8 zeroext %conv) #9, !dbg !7348
  %cmp6 = icmp slt i32 %call5, 0, !dbg !7349
  br i1 %cmp6, label %if.then, label %if.end, !dbg !7350

if.then:                                          ; preds = %entry
  br label %err, !dbg !7351

if.end:                                           ; preds = %entry
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7352
  %call8 = call i32 @stv090x_get_mclk(%struct.stv090x_state* %14) #9, !dbg !7353
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7354
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 3, !dbg !7355
  %16 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !7355
  %mclk9 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %16, i32 0, i32 4, !dbg !7356
  store i32 %call8, i32* %mclk9, align 8, !dbg !7357
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7358
  %internal10 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 3, !dbg !7359
  %18 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal10, align 8, !dbg !7359
  %mclk11 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %18, i32 0, i32 4, !dbg !7360
  %19 = load i32, i32* %mclk11, align 8, !dbg !7360
  %div12 = sdiv i32 %19, 704000, !dbg !7361
  store i32 %div12, i32* %div, align 4, !dbg !7362
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7363
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !7363
  %21 = load i32, i32* %demod, align 4, !dbg !7363
  %cmp13 = icmp eq i32 %21, 2, !dbg !7363
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !7363

cond.true:                                        ; preds = %if.end
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7363
  %23 = load i32, i32* %div, align 4, !dbg !7363
  %conv15 = trunc i32 %23 to i8, !dbg !7363
  %call16 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 61849, i8 zeroext %conv15) #9, !dbg !7363
  br label %cond.end, !dbg !7363

cond.false:                                       ; preds = %if.end
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7363
  %25 = load i32, i32* %div, align 4, !dbg !7363
  %conv17 = trunc i32 %25 to i8, !dbg !7363
  %call18 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 61865, i8 zeroext %conv17) #9, !dbg !7363
  br label %cond.end, !dbg !7363

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond19 = phi i32 [ %call16, %cond.true ], [ %call18, %cond.false ], !dbg !7363
  %cmp20 = icmp slt i32 %cond19, 0, !dbg !7365
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !7366

if.then22:                                        ; preds = %cond.end
  br label %err, !dbg !7367

if.end23:                                         ; preds = %cond.end
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7368
  %demod24 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 1, !dbg !7368
  %27 = load i32, i32* %demod24, align 4, !dbg !7368
  %cmp25 = icmp eq i32 %27, 2, !dbg !7368
  br i1 %cmp25, label %cond.true27, label %cond.false30, !dbg !7368

cond.true27:                                      ; preds = %if.end23
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7368
  %29 = load i32, i32* %div, align 4, !dbg !7368
  %conv28 = trunc i32 %29 to i8, !dbg !7368
  %call29 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 61850, i8 zeroext %conv28) #9, !dbg !7368
  br label %cond.end33, !dbg !7368

cond.false30:                                     ; preds = %if.end23
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7368
  %31 = load i32, i32* %div, align 4, !dbg !7368
  %conv31 = trunc i32 %31 to i8, !dbg !7368
  %call32 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 61866, i8 zeroext %conv31) #9, !dbg !7368
  br label %cond.end33, !dbg !7368

cond.end33:                                       ; preds = %cond.false30, %cond.true27
  %cond34 = phi i32 [ %call29, %cond.true27 ], [ %call32, %cond.false30 ], !dbg !7368
  %cmp35 = icmp slt i32 %cond34, 0, !dbg !7370
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !7371

if.then37:                                        ; preds = %cond.end33
  br label %err, !dbg !7372

if.end38:                                         ; preds = %cond.end33
  store i32 0, i32* %retval, align 4, !dbg !7373
  br label %return, !dbg !7373

err:                                              ; preds = %if.then37, %if.then22, %if.then
  call void @llvm.dbg.label(metadata !7374), !dbg !7375
  br label %do.body, !dbg !7376

do.body:                                          ; preds = %err
  %32 = load i32, i32* @verbose, align 4, !dbg !7377
  %cmp39 = icmp ugt i32 %32, 0, !dbg !7377
  br i1 %cmp39, label %land.lhs.true, label %if.else, !dbg !7377

land.lhs.true:                                    ; preds = %do.body
  %33 = load i32, i32* @verbose, align 4, !dbg !7377
  %cmp41 = icmp ugt i32 %33, 0, !dbg !7377
  br i1 %cmp41, label %if.then43, label %if.else, !dbg !7382

if.then43:                                        ; preds = %land.lhs.true
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_mclk, i64 0, i64 0)) #13, !dbg !7377
  br label %if.end71, !dbg !7377

if.else:                                          ; preds = %land.lhs.true, %do.body
  %34 = load i32, i32* @verbose, align 4, !dbg !7383
  %cmp45 = icmp ugt i32 %34, 1, !dbg !7383
  br i1 %cmp45, label %land.lhs.true47, label %if.else52, !dbg !7383

land.lhs.true47:                                  ; preds = %if.else
  %35 = load i32, i32* @verbose, align 4, !dbg !7383
  %cmp48 = icmp ugt i32 %35, 0, !dbg !7383
  br i1 %cmp48, label %if.then50, label %if.else52, !dbg !7377

if.then50:                                        ; preds = %land.lhs.true47
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_mclk, i64 0, i64 0)) #13, !dbg !7383
  br label %if.end70, !dbg !7383

if.else52:                                        ; preds = %land.lhs.true47, %if.else
  %36 = load i32, i32* @verbose, align 4, !dbg !7385
  %cmp53 = icmp ugt i32 %36, 2, !dbg !7385
  br i1 %cmp53, label %land.lhs.true55, label %if.else60, !dbg !7385

land.lhs.true55:                                  ; preds = %if.else52
  %37 = load i32, i32* @verbose, align 4, !dbg !7385
  %cmp56 = icmp ugt i32 %37, 0, !dbg !7385
  br i1 %cmp56, label %if.then58, label %if.else60, !dbg !7383

if.then58:                                        ; preds = %land.lhs.true55
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_mclk, i64 0, i64 0)) #13, !dbg !7385
  br label %if.end69, !dbg !7385

if.else60:                                        ; preds = %land.lhs.true55, %if.else52
  %38 = load i32, i32* @verbose, align 4, !dbg !7387
  %cmp61 = icmp ugt i32 %38, 3, !dbg !7387
  br i1 %cmp61, label %land.lhs.true63, label %if.end68, !dbg !7387

land.lhs.true63:                                  ; preds = %if.else60
  %39 = load i32, i32* @verbose, align 4, !dbg !7387
  %cmp64 = icmp ugt i32 %39, 0, !dbg !7387
  br i1 %cmp64, label %if.then66, label %if.end68, !dbg !7385

if.then66:                                        ; preds = %land.lhs.true63
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_set_mclk, i64 0, i64 0)) #13, !dbg !7387
  br label %if.end68, !dbg !7387

if.end68:                                         ; preds = %if.then66, %land.lhs.true63, %if.else60
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then58
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then50
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then43
  br label %do.end, !dbg !7389

do.end:                                           ; preds = %if.end71
  store i32 -1, i32* %retval, align 4, !dbg !7390
  br label %return, !dbg !7390

return:                                           ; preds = %do.end, %if.end38
  %40 = load i32, i32* %retval, align 4, !dbg !7391
  ret i32 %40, !dbg !7391
}

; Function Attrs: noredzone
declare dso_local void @msleep(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_write_reg(%struct.stv090x_state* %state, i32 %reg, i8 zeroext %data) #0 !dbg !7392 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i8, align 1
  %tmp = alloca i8, align 1
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7397, metadata !DIExpression()), !dbg !7398
  store i8 %data, i8* %data.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %data.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.declare(metadata i8* %tmp, metadata !7401, metadata !DIExpression()), !dbg !7402
  %0 = load i8, i8* %data.addr, align 1, !dbg !7403
  store i8 %0, i8* %tmp, align 1, !dbg !7402
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7404
  %2 = load i32, i32* %reg.addr, align 4, !dbg !7405
  %call = call i32 @stv090x_write_regs(%struct.stv090x_state* %1, i32 %2, i8* %tmp, i32 1) #9, !dbg !7406
  ret i32 %call, !dbg !7407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_mclk(%struct.stv090x_state* %state) #0 !dbg !7408 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %config = alloca %struct.stv090x_config*, align 8
  %div = alloca i32, align 4
  %reg = alloca i32, align 4
  %ratio = alloca i8, align 1
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7411, metadata !DIExpression()), !dbg !7412
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !7413, metadata !DIExpression()), !dbg !7414
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7415
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 5, !dbg !7416
  %1 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !7416
  store %struct.stv090x_config* %1, %struct.stv090x_config** %config, align 8, !dbg !7414
  call void @llvm.dbg.declare(metadata i32* %div, metadata !7417, metadata !DIExpression()), !dbg !7418
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7419, metadata !DIExpression()), !dbg !7420
  call void @llvm.dbg.declare(metadata i8* %ratio, metadata !7421, metadata !DIExpression()), !dbg !7422
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7423
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 61875) #9, !dbg !7424
  store i32 %call, i32* %div, align 4, !dbg !7425
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7426
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 61878) #9, !dbg !7427
  store i32 %call2, i32* %reg, align 4, !dbg !7428
  %4 = load i32, i32* %reg, align 4, !dbg !7429
  %shr = lshr i32 %4, 5, !dbg !7429
  %and = and i32 %shr, 1, !dbg !7429
  %tobool = icmp ne i32 %and, 0, !dbg !7429
  %5 = zext i1 %tobool to i64, !dbg !7429
  %cond = select i1 %tobool, i32 4, i32 6, !dbg !7429
  %conv = trunc i32 %cond to i8, !dbg !7429
  store i8 %conv, i8* %ratio, align 1, !dbg !7430
  %6 = load i32, i32* %div, align 4, !dbg !7431
  %add = add i32 %6, 1, !dbg !7432
  %7 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !7433
  %xtal = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %7, i32 0, i32 4, !dbg !7434
  %8 = load i32, i32* %xtal, align 8, !dbg !7434
  %mul = mul i32 %add, %8, !dbg !7435
  %9 = load i8, i8* %ratio, align 1, !dbg !7436
  %conv3 = zext i8 %9 to i32, !dbg !7436
  %div4 = udiv i32 %mul, %conv3, !dbg !7437
  ret i32 %div4, !dbg !7438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_wakeup(%struct.dvb_frontend* %fe) #0 !dbg !7439 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !7440, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !7442, metadata !DIExpression()), !dbg !7443
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !7444
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !7445
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !7445
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !7444
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !7443
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7446, metadata !DIExpression()), !dbg !7447
  br label %do.body, !dbg !7448

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @verbose, align 4, !dbg !7449
  %cmp = icmp ugt i32 %3, 0, !dbg !7449
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7449

land.lhs.true:                                    ; preds = %do.body
  %4 = load i32, i32* @verbose, align 4, !dbg !7449
  %cmp1 = icmp ugt i32 %4, 3, !dbg !7449
  br i1 %cmp1, label %if.then, label %if.else, !dbg !7454

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7449
  %device = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 0, !dbg !7449
  %6 = load i32, i32* %device, align 8, !dbg !7449
  %cmp2 = icmp eq i32 %6, 1, !dbg !7449
  %7 = zext i1 %cmp2 to i64, !dbg !7449
  %cond = select i1 %cmp2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !7449
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7449
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !7449
  %9 = load i32, i32* %demod, align 4, !dbg !7449
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0), i8* %cond, i32 %9) #13, !dbg !7449
  br label %if.end34, !dbg !7449

if.else:                                          ; preds = %land.lhs.true, %do.body
  %10 = load i32, i32* @verbose, align 4, !dbg !7455
  %cmp3 = icmp ugt i32 %10, 1, !dbg !7455
  br i1 %cmp3, label %land.lhs.true4, label %if.else12, !dbg !7455

land.lhs.true4:                                   ; preds = %if.else
  %11 = load i32, i32* @verbose, align 4, !dbg !7455
  %cmp5 = icmp ugt i32 %11, 3, !dbg !7455
  br i1 %cmp5, label %if.then6, label %if.else12, !dbg !7449

if.then6:                                         ; preds = %land.lhs.true4
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7455
  %device7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 0, !dbg !7455
  %13 = load i32, i32* %device7, align 8, !dbg !7455
  %cmp8 = icmp eq i32 %13, 1, !dbg !7455
  %14 = zext i1 %cmp8 to i64, !dbg !7455
  %cond9 = select i1 %cmp8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !7455
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7455
  %demod10 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 1, !dbg !7455
  %16 = load i32, i32* %demod10, align 4, !dbg !7455
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0), i8* %cond9, i32 %16) #13, !dbg !7455
  br label %if.end33, !dbg !7455

if.else12:                                        ; preds = %land.lhs.true4, %if.else
  %17 = load i32, i32* @verbose, align 4, !dbg !7457
  %cmp13 = icmp ugt i32 %17, 2, !dbg !7457
  br i1 %cmp13, label %land.lhs.true14, label %if.else22, !dbg !7457

land.lhs.true14:                                  ; preds = %if.else12
  %18 = load i32, i32* @verbose, align 4, !dbg !7457
  %cmp15 = icmp ugt i32 %18, 3, !dbg !7457
  br i1 %cmp15, label %if.then16, label %if.else22, !dbg !7455

if.then16:                                        ; preds = %land.lhs.true14
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7457
  %device17 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 0, !dbg !7457
  %20 = load i32, i32* %device17, align 8, !dbg !7457
  %cmp18 = icmp eq i32 %20, 1, !dbg !7457
  %21 = zext i1 %cmp18 to i64, !dbg !7457
  %cond19 = select i1 %cmp18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !7457
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7457
  %demod20 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %22, i32 0, i32 1, !dbg !7457
  %23 = load i32, i32* %demod20, align 4, !dbg !7457
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0), i8* %cond19, i32 %23) #13, !dbg !7457
  br label %if.end32, !dbg !7457

if.else22:                                        ; preds = %land.lhs.true14, %if.else12
  %24 = load i32, i32* @verbose, align 4, !dbg !7459
  %cmp23 = icmp ugt i32 %24, 3, !dbg !7459
  br i1 %cmp23, label %land.lhs.true24, label %if.end, !dbg !7459

land.lhs.true24:                                  ; preds = %if.else22
  %25 = load i32, i32* @verbose, align 4, !dbg !7459
  %cmp25 = icmp ugt i32 %25, 3, !dbg !7459
  br i1 %cmp25, label %if.then26, label %if.end, !dbg !7457

if.then26:                                        ; preds = %land.lhs.true24
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7459
  %device27 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 0, !dbg !7459
  %27 = load i32, i32* %device27, align 8, !dbg !7459
  %cmp28 = icmp eq i32 %27, 1, !dbg !7459
  %28 = zext i1 %cmp28 to i64, !dbg !7459
  %cond29 = select i1 %cmp28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), !dbg !7459
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7459
  %demod30 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %29, i32 0, i32 1, !dbg !7459
  %30 = load i32, i32* %demod30, align 4, !dbg !7459
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0), i8* %cond29, i32 %30) #13, !dbg !7459
  br label %if.end, !dbg !7459

if.end:                                           ; preds = %if.then26, %land.lhs.true24, %if.else22
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then16
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then6
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  br label %do.end, !dbg !7461

do.end:                                           ; preds = %if.end34
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7462
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 3, !dbg !7463
  %32 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !7463
  %demod_lock = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %32, i32 0, i32 2, !dbg !7464
  call void @mutex_lock(%struct.mutex* %demod_lock) #9, !dbg !7465
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7466
  %call35 = call i32 @stv090x_read_reg(%struct.stv090x_state* %33, i32 61878) #9, !dbg !7467
  store i32 %call35, i32* %reg, align 4, !dbg !7468
  %34 = load i32, i32* %reg, align 4, !dbg !7469
  %and = and i32 %34, -129, !dbg !7469
  store i32 %and, i32* %reg, align 4, !dbg !7469
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7470
  %36 = load i32, i32* %reg, align 4, !dbg !7472
  %conv = trunc i32 %36 to i8, !dbg !7472
  %call36 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 61878, i8 zeroext %conv) #9, !dbg !7473
  %cmp37 = icmp slt i32 %call36, 0, !dbg !7474
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !7475

if.then39:                                        ; preds = %do.end
  br label %err, !dbg !7476

if.end40:                                         ; preds = %do.end
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7477
  %demod41 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 1, !dbg !7478
  %38 = load i32, i32* %demod41, align 4, !dbg !7478
  switch i32 %38, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb79
  ], !dbg !7479

sw.bb:                                            ; preds = %if.end40
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7480
  %call42 = call i32 @stv090x_read_reg(%struct.stv090x_state* %39, i32 61920) #9, !dbg !7482
  store i32 %call42, i32* %reg, align 4, !dbg !7483
  %40 = load i32, i32* %reg, align 4, !dbg !7484
  %and43 = and i32 %40, -3, !dbg !7484
  %or = or i32 %and43, 2, !dbg !7484
  store i32 %or, i32* %reg, align 4, !dbg !7484
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7485
  %42 = load i32, i32* %reg, align 4, !dbg !7487
  %conv44 = trunc i32 %42 to i8, !dbg !7487
  %call45 = call i32 @stv090x_write_reg(%struct.stv090x_state* %41, i32 61920, i8 zeroext %conv44) #9, !dbg !7488
  %cmp46 = icmp slt i32 %call45, 0, !dbg !7489
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !7490

if.then48:                                        ; preds = %sw.bb
  br label %err, !dbg !7491

if.end49:                                         ; preds = %sw.bb
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7492
  %call50 = call i32 @stv090x_read_reg(%struct.stv090x_state* %43, i32 61921) #9, !dbg !7493
  store i32 %call50, i32* %reg, align 4, !dbg !7494
  %44 = load i32, i32* %reg, align 4, !dbg !7495
  %and51 = and i32 %44, -33, !dbg !7495
  %or52 = or i32 %and51, 32, !dbg !7495
  store i32 %or52, i32* %reg, align 4, !dbg !7495
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7496
  %46 = load i32, i32* %reg, align 4, !dbg !7498
  %conv53 = trunc i32 %46 to i8, !dbg !7498
  %call54 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 61921, i8 zeroext %conv53) #9, !dbg !7499
  %cmp55 = icmp slt i32 %call54, 0, !dbg !7500
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !7501

if.then57:                                        ; preds = %if.end49
  br label %err, !dbg !7502

if.end58:                                         ; preds = %if.end49
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7503
  %call59 = call i32 @stv090x_read_reg(%struct.stv090x_state* %47, i32 61890) #9, !dbg !7504
  store i32 %call59, i32* %reg, align 4, !dbg !7505
  %48 = load i32, i32* %reg, align 4, !dbg !7506
  %and60 = and i32 %48, -33, !dbg !7506
  store i32 %and60, i32* %reg, align 4, !dbg !7506
  %49 = load i32, i32* %reg, align 4, !dbg !7507
  %and61 = and i32 %49, -3, !dbg !7507
  store i32 %and61, i32* %reg, align 4, !dbg !7507
  %50 = load i32, i32* %reg, align 4, !dbg !7508
  %and62 = and i32 %50, -17, !dbg !7508
  store i32 %and62, i32* %reg, align 4, !dbg !7508
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7509
  %52 = load i32, i32* %reg, align 4, !dbg !7511
  %conv63 = trunc i32 %52 to i8, !dbg !7511
  %call64 = call i32 @stv090x_write_reg(%struct.stv090x_state* %51, i32 61890, i8 zeroext %conv63) #9, !dbg !7512
  %cmp65 = icmp slt i32 %call64, 0, !dbg !7513
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !7514

if.then67:                                        ; preds = %if.end58
  br label %err, !dbg !7515

if.end68:                                         ; preds = %if.end58
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7516
  %call69 = call i32 @stv090x_read_reg(%struct.stv090x_state* %53, i32 61891) #9, !dbg !7517
  store i32 %call69, i32* %reg, align 4, !dbg !7518
  %54 = load i32, i32* %reg, align 4, !dbg !7519
  %and70 = and i32 %54, -9, !dbg !7519
  store i32 %and70, i32* %reg, align 4, !dbg !7519
  %55 = load i32, i32* %reg, align 4, !dbg !7520
  %and71 = and i32 %55, -3, !dbg !7520
  store i32 %and71, i32* %reg, align 4, !dbg !7520
  %56 = load i32, i32* %reg, align 4, !dbg !7521
  %and72 = and i32 %56, -2, !dbg !7521
  store i32 %and72, i32* %reg, align 4, !dbg !7521
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7522
  %58 = load i32, i32* %reg, align 4, !dbg !7524
  %conv73 = trunc i32 %58 to i8, !dbg !7524
  %call74 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 61891, i8 zeroext %conv73) #9, !dbg !7525
  %cmp75 = icmp slt i32 %call74, 0, !dbg !7526
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !7527

if.then77:                                        ; preds = %if.end68
  br label %err, !dbg !7528

if.end78:                                         ; preds = %if.end68
  br label %sw.epilog, !dbg !7529

sw.bb79:                                          ; preds = %if.end40
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7530
  %call80 = call i32 @stv090x_read_reg(%struct.stv090x_state* %59, i32 61922) #9, !dbg !7531
  store i32 %call80, i32* %reg, align 4, !dbg !7532
  %60 = load i32, i32* %reg, align 4, !dbg !7533
  %and81 = and i32 %60, -3, !dbg !7533
  %or82 = or i32 %and81, 2, !dbg !7533
  store i32 %or82, i32* %reg, align 4, !dbg !7533
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7534
  %62 = load i32, i32* %reg, align 4, !dbg !7536
  %conv83 = trunc i32 %62 to i8, !dbg !7536
  %call84 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 61922, i8 zeroext %conv83) #9, !dbg !7537
  %cmp85 = icmp slt i32 %call84, 0, !dbg !7538
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !7539

if.then87:                                        ; preds = %sw.bb79
  br label %err, !dbg !7540

if.end88:                                         ; preds = %sw.bb79
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7541
  %call89 = call i32 @stv090x_read_reg(%struct.stv090x_state* %63, i32 61923) #9, !dbg !7542
  store i32 %call89, i32* %reg, align 4, !dbg !7543
  %64 = load i32, i32* %reg, align 4, !dbg !7544
  %and90 = and i32 %64, -33, !dbg !7544
  %or91 = or i32 %and90, 32, !dbg !7544
  store i32 %or91, i32* %reg, align 4, !dbg !7544
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7545
  %66 = load i32, i32* %reg, align 4, !dbg !7547
  %conv92 = trunc i32 %66 to i8, !dbg !7547
  %call93 = call i32 @stv090x_write_reg(%struct.stv090x_state* %65, i32 61923, i8 zeroext %conv92) #9, !dbg !7548
  %cmp94 = icmp slt i32 %call93, 0, !dbg !7549
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !7550

if.then96:                                        ; preds = %if.end88
  br label %err, !dbg !7551

if.end97:                                         ; preds = %if.end88
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7552
  %call98 = call i32 @stv090x_read_reg(%struct.stv090x_state* %67, i32 61890) #9, !dbg !7553
  store i32 %call98, i32* %reg, align 4, !dbg !7554
  %68 = load i32, i32* %reg, align 4, !dbg !7555
  %and99 = and i32 %68, -65, !dbg !7555
  store i32 %and99, i32* %reg, align 4, !dbg !7555
  %69 = load i32, i32* %reg, align 4, !dbg !7556
  %and100 = and i32 %69, -9, !dbg !7556
  store i32 %and100, i32* %reg, align 4, !dbg !7556
  %70 = load i32, i32* %reg, align 4, !dbg !7557
  %and101 = and i32 %70, -17, !dbg !7557
  store i32 %and101, i32* %reg, align 4, !dbg !7557
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7558
  %72 = load i32, i32* %reg, align 4, !dbg !7560
  %conv102 = trunc i32 %72 to i8, !dbg !7560
  %call103 = call i32 @stv090x_write_reg(%struct.stv090x_state* %71, i32 61890, i8 zeroext %conv102) #9, !dbg !7561
  %cmp104 = icmp slt i32 %call103, 0, !dbg !7562
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !7563

if.then106:                                       ; preds = %if.end97
  br label %err, !dbg !7564

if.end107:                                        ; preds = %if.end97
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7565
  %call108 = call i32 @stv090x_read_reg(%struct.stv090x_state* %73, i32 61891) #9, !dbg !7566
  store i32 %call108, i32* %reg, align 4, !dbg !7567
  %74 = load i32, i32* %reg, align 4, !dbg !7568
  %and109 = and i32 %74, -17, !dbg !7568
  store i32 %and109, i32* %reg, align 4, !dbg !7568
  %75 = load i32, i32* %reg, align 4, !dbg !7569
  %and110 = and i32 %75, -5, !dbg !7569
  store i32 %and110, i32* %reg, align 4, !dbg !7569
  %76 = load i32, i32* %reg, align 4, !dbg !7570
  %and111 = and i32 %76, -2, !dbg !7570
  store i32 %and111, i32* %reg, align 4, !dbg !7570
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7571
  %78 = load i32, i32* %reg, align 4, !dbg !7573
  %conv112 = trunc i32 %78 to i8, !dbg !7573
  %call113 = call i32 @stv090x_write_reg(%struct.stv090x_state* %77, i32 61891, i8 zeroext %conv112) #9, !dbg !7574
  %cmp114 = icmp slt i32 %call113, 0, !dbg !7575
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !7576

if.then116:                                       ; preds = %if.end107
  br label %err, !dbg !7577

if.end117:                                        ; preds = %if.end107
  br label %sw.epilog, !dbg !7578

sw.default:                                       ; preds = %if.end40
  br label %do.body118, !dbg !7579

do.body118:                                       ; preds = %sw.default
  %79 = load i32, i32* @verbose, align 4, !dbg !7580
  %cmp119 = icmp ugt i32 %79, 0, !dbg !7580
  br i1 %cmp119, label %land.lhs.true121, label %if.else126, !dbg !7580

land.lhs.true121:                                 ; preds = %do.body118
  %80 = load i32, i32* @verbose, align 4, !dbg !7580
  %cmp122 = icmp ugt i32 %80, 0, !dbg !7580
  br i1 %cmp122, label %if.then124, label %if.else126, !dbg !7585

if.then124:                                       ; preds = %land.lhs.true121
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7580
  br label %if.end153, !dbg !7580

if.else126:                                       ; preds = %land.lhs.true121, %do.body118
  %81 = load i32, i32* @verbose, align 4, !dbg !7586
  %cmp127 = icmp ugt i32 %81, 1, !dbg !7586
  br i1 %cmp127, label %land.lhs.true129, label %if.else134, !dbg !7586

land.lhs.true129:                                 ; preds = %if.else126
  %82 = load i32, i32* @verbose, align 4, !dbg !7586
  %cmp130 = icmp ugt i32 %82, 0, !dbg !7586
  br i1 %cmp130, label %if.then132, label %if.else134, !dbg !7580

if.then132:                                       ; preds = %land.lhs.true129
  %call133 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7586
  br label %if.end152, !dbg !7586

if.else134:                                       ; preds = %land.lhs.true129, %if.else126
  %83 = load i32, i32* @verbose, align 4, !dbg !7588
  %cmp135 = icmp ugt i32 %83, 2, !dbg !7588
  br i1 %cmp135, label %land.lhs.true137, label %if.else142, !dbg !7588

land.lhs.true137:                                 ; preds = %if.else134
  %84 = load i32, i32* @verbose, align 4, !dbg !7588
  %cmp138 = icmp ugt i32 %84, 0, !dbg !7588
  br i1 %cmp138, label %if.then140, label %if.else142, !dbg !7586

if.then140:                                       ; preds = %land.lhs.true137
  %call141 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7588
  br label %if.end151, !dbg !7588

if.else142:                                       ; preds = %land.lhs.true137, %if.else134
  %85 = load i32, i32* @verbose, align 4, !dbg !7590
  %cmp143 = icmp ugt i32 %85, 3, !dbg !7590
  br i1 %cmp143, label %land.lhs.true145, label %if.end150, !dbg !7590

land.lhs.true145:                                 ; preds = %if.else142
  %86 = load i32, i32* @verbose, align 4, !dbg !7590
  %cmp146 = icmp ugt i32 %86, 0, !dbg !7590
  br i1 %cmp146, label %if.then148, label %if.end150, !dbg !7588

if.then148:                                       ; preds = %land.lhs.true145
  %call149 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7590
  br label %if.end150, !dbg !7590

if.end150:                                        ; preds = %if.then148, %land.lhs.true145, %if.else142
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then140
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then132
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.then124
  br label %do.end154, !dbg !7592

do.end154:                                        ; preds = %if.end153
  br label %sw.epilog, !dbg !7593

sw.epilog:                                        ; preds = %do.end154, %if.end117, %if.end78
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7594
  %internal155 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %87, i32 0, i32 3, !dbg !7595
  %88 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal155, align 8, !dbg !7595
  %demod_lock156 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %88, i32 0, i32 2, !dbg !7596
  call void @mutex_unlock(%struct.mutex* %demod_lock156) #9, !dbg !7597
  store i32 0, i32* %retval, align 4, !dbg !7598
  br label %return, !dbg !7598

err:                                              ; preds = %if.then116, %if.then106, %if.then96, %if.then87, %if.then77, %if.then67, %if.then57, %if.then48, %if.then39
  call void @llvm.dbg.label(metadata !7599), !dbg !7600
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !7601
  %internal157 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %89, i32 0, i32 3, !dbg !7602
  %90 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal157, align 8, !dbg !7602
  %demod_lock158 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %90, i32 0, i32 2, !dbg !7603
  call void @mutex_unlock(%struct.mutex* %demod_lock158) #9, !dbg !7604
  br label %do.body159, !dbg !7605

do.body159:                                       ; preds = %err
  %91 = load i32, i32* @verbose, align 4, !dbg !7606
  %cmp160 = icmp ugt i32 %91, 0, !dbg !7606
  br i1 %cmp160, label %land.lhs.true162, label %if.else167, !dbg !7606

land.lhs.true162:                                 ; preds = %do.body159
  %92 = load i32, i32* @verbose, align 4, !dbg !7606
  %cmp163 = icmp ugt i32 %92, 0, !dbg !7606
  br i1 %cmp163, label %if.then165, label %if.else167, !dbg !7611

if.then165:                                       ; preds = %land.lhs.true162
  %call166 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7606
  br label %if.end194, !dbg !7606

if.else167:                                       ; preds = %land.lhs.true162, %do.body159
  %93 = load i32, i32* @verbose, align 4, !dbg !7612
  %cmp168 = icmp ugt i32 %93, 1, !dbg !7612
  br i1 %cmp168, label %land.lhs.true170, label %if.else175, !dbg !7612

land.lhs.true170:                                 ; preds = %if.else167
  %94 = load i32, i32* @verbose, align 4, !dbg !7612
  %cmp171 = icmp ugt i32 %94, 0, !dbg !7612
  br i1 %cmp171, label %if.then173, label %if.else175, !dbg !7606

if.then173:                                       ; preds = %land.lhs.true170
  %call174 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7612
  br label %if.end193, !dbg !7612

if.else175:                                       ; preds = %land.lhs.true170, %if.else167
  %95 = load i32, i32* @verbose, align 4, !dbg !7614
  %cmp176 = icmp ugt i32 %95, 2, !dbg !7614
  br i1 %cmp176, label %land.lhs.true178, label %if.else183, !dbg !7614

land.lhs.true178:                                 ; preds = %if.else175
  %96 = load i32, i32* @verbose, align 4, !dbg !7614
  %cmp179 = icmp ugt i32 %96, 0, !dbg !7614
  br i1 %cmp179, label %if.then181, label %if.else183, !dbg !7612

if.then181:                                       ; preds = %land.lhs.true178
  %call182 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7614
  br label %if.end192, !dbg !7614

if.else183:                                       ; preds = %land.lhs.true178, %if.else175
  %97 = load i32, i32* @verbose, align 4, !dbg !7616
  %cmp184 = icmp ugt i32 %97, 3, !dbg !7616
  br i1 %cmp184, label %land.lhs.true186, label %if.end191, !dbg !7616

land.lhs.true186:                                 ; preds = %if.else183
  %98 = load i32, i32* @verbose, align 4, !dbg !7616
  %cmp187 = icmp ugt i32 %98, 0, !dbg !7616
  br i1 %cmp187, label %if.then189, label %if.end191, !dbg !7614

if.then189:                                       ; preds = %land.lhs.true186
  %call190 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.stv090x_wakeup, i64 0, i64 0)) #13, !dbg !7616
  br label %if.end191, !dbg !7616

if.end191:                                        ; preds = %if.then189, %land.lhs.true186, %if.else183
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then181
  br label %if.end193

if.end193:                                        ; preds = %if.end192, %if.then173
  br label %if.end194

if.end194:                                        ; preds = %if.end193, %if.then165
  br label %do.end195, !dbg !7618

do.end195:                                        ; preds = %if.end194
  store i32 -1, i32* %retval, align 4, !dbg !7619
  br label %return, !dbg !7619

return:                                           ; preds = %do.end195, %sw.epilog
  %99 = load i32, i32* %retval, align 4, !dbg !7620
  ret i32 %99, !dbg !7620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_ldpc_mode(%struct.stv090x_state* %state, i32 %ldpc_mode) #0 !dbg !7621 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %ldpc_mode.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7624, metadata !DIExpression()), !dbg !7625
  store i32 %ldpc_mode, i32* %ldpc_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ldpc_mode.addr, metadata !7626, metadata !DIExpression()), !dbg !7627
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7628, metadata !DIExpression()), !dbg !7629
  store i32 0, i32* %reg, align 4, !dbg !7629
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7630
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %0, i32 64134) #9, !dbg !7631
  store i32 %call, i32* %reg, align 4, !dbg !7632
  %1 = load i32, i32* %ldpc_mode.addr, align 4, !dbg !7633
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb224
  ], !dbg !7634

sw.bb:                                            ; preds = %entry
  br label %sw.default, !dbg !7635

sw.default:                                       ; preds = %entry, %sw.bb
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7636
  %demod_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 2, !dbg !7639
  %3 = load i32, i32* %demod_mode, align 8, !dbg !7639
  %cmp = icmp ne i32 %3, 0, !dbg !7640
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7641

lor.lhs.false:                                    ; preds = %sw.default
  %4 = load i32, i32* %reg, align 4, !dbg !7642
  %shr = lshr i32 %4, 0, !dbg !7642
  %and = and i32 %shr, 1, !dbg !7642
  %cmp1 = icmp ne i32 %and, 1, !dbg !7643
  br i1 %cmp1, label %if.then, label %if.end223, !dbg !7644

if.then:                                          ; preds = %lor.lhs.false, %sw.default
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7645
  %call2 = call i32 @stv090x_write_reg(%struct.stv090x_state* %5, i32 64134, i8 zeroext 29) #9, !dbg !7648
  %cmp3 = icmp slt i32 %call2, 0, !dbg !7649
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !7650

if.then4:                                         ; preds = %if.then
  br label %err, !dbg !7651

if.end:                                           ; preds = %if.then
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7652
  %demod_mode5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 2, !dbg !7653
  store i32 0, i32* %demod_mode5, align 8, !dbg !7654
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7655
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 65297) #9, !dbg !7656
  store i32 %call6, i32* %reg, align 4, !dbg !7657
  %8 = load i32, i32* %reg, align 4, !dbg !7658
  %and7 = and i32 %8, -129, !dbg !7658
  %or = or i32 %and7, 128, !dbg !7658
  store i32 %or, i32* %reg, align 4, !dbg !7658
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7659
  %10 = load i32, i32* %reg, align 4, !dbg !7661
  %conv = trunc i32 %10 to i8, !dbg !7661
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 65297, i8 zeroext %conv) #9, !dbg !7662
  %cmp9 = icmp slt i32 %call8, 0, !dbg !7663
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !7664

if.then11:                                        ; preds = %if.end
  br label %err, !dbg !7665

if.end12:                                         ; preds = %if.end
  %11 = load i32, i32* %reg, align 4, !dbg !7666
  %and13 = and i32 %11, -129, !dbg !7666
  store i32 %and13, i32* %reg, align 4, !dbg !7666
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7667
  %13 = load i32, i32* %reg, align 4, !dbg !7669
  %conv14 = trunc i32 %13 to i8, !dbg !7669
  %call15 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 65297, i8 zeroext %conv14) #9, !dbg !7670
  %cmp16 = icmp slt i32 %call15, 0, !dbg !7671
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7672

if.then18:                                        ; preds = %if.end12
  br label %err, !dbg !7673

if.end19:                                         ; preds = %if.end12
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7674
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 1, !dbg !7674
  %15 = load i32, i32* %demod, align 4, !dbg !7674
  %cmp20 = icmp eq i32 %15, 2, !dbg !7674
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !7674

cond.true:                                        ; preds = %if.end19
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7674
  %call22 = call i32 @stv090x_write_reg(%struct.stv090x_state* %16, i32 62128, i8 zeroext -1) #9, !dbg !7674
  br label %cond.end, !dbg !7674

cond.false:                                       ; preds = %if.end19
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7674
  %call23 = call i32 @stv090x_write_reg(%struct.stv090x_state* %17, i32 62640, i8 zeroext -1) #9, !dbg !7674
  br label %cond.end, !dbg !7674

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call22, %cond.true ], [ %call23, %cond.false ], !dbg !7674
  %cmp24 = icmp slt i32 %cond, 0, !dbg !7676
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !7677

if.then26:                                        ; preds = %cond.end
  br label %err, !dbg !7678

if.end27:                                         ; preds = %cond.end
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7679
  %demod28 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !7679
  %19 = load i32, i32* %demod28, align 4, !dbg !7679
  %cmp29 = icmp eq i32 %19, 2, !dbg !7679
  br i1 %cmp29, label %cond.true31, label %cond.false33, !dbg !7679

cond.true31:                                      ; preds = %if.end27
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7679
  %call32 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62129, i8 zeroext -1) #9, !dbg !7679
  br label %cond.end35, !dbg !7679

cond.false33:                                     ; preds = %if.end27
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7679
  %call34 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 62641, i8 zeroext -1) #9, !dbg !7679
  br label %cond.end35, !dbg !7679

cond.end35:                                       ; preds = %cond.false33, %cond.true31
  %cond36 = phi i32 [ %call32, %cond.true31 ], [ %call34, %cond.false33 ], !dbg !7679
  %cmp37 = icmp slt i32 %cond36, 0, !dbg !7681
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !7682

if.then39:                                        ; preds = %cond.end35
  br label %err, !dbg !7683

if.end40:                                         ; preds = %cond.end35
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7684
  %demod41 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %22, i32 0, i32 1, !dbg !7684
  %23 = load i32, i32* %demod41, align 4, !dbg !7684
  %cmp42 = icmp eq i32 %23, 2, !dbg !7684
  br i1 %cmp42, label %cond.true44, label %cond.false46, !dbg !7684

cond.true44:                                      ; preds = %if.end40
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7684
  %call45 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 62130, i8 zeroext -1) #9, !dbg !7684
  br label %cond.end48, !dbg !7684

cond.false46:                                     ; preds = %if.end40
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7684
  %call47 = call i32 @stv090x_write_reg(%struct.stv090x_state* %25, i32 62642, i8 zeroext -1) #9, !dbg !7684
  br label %cond.end48, !dbg !7684

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %call45, %cond.true44 ], [ %call47, %cond.false46 ], !dbg !7684
  %cmp50 = icmp slt i32 %cond49, 0, !dbg !7686
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !7687

if.then52:                                        ; preds = %cond.end48
  br label %err, !dbg !7688

if.end53:                                         ; preds = %cond.end48
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7689
  %demod54 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 1, !dbg !7689
  %27 = load i32, i32* %demod54, align 4, !dbg !7689
  %cmp55 = icmp eq i32 %27, 2, !dbg !7689
  br i1 %cmp55, label %cond.true57, label %cond.false59, !dbg !7689

cond.true57:                                      ; preds = %if.end53
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7689
  %call58 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 62131, i8 zeroext -1) #9, !dbg !7689
  br label %cond.end61, !dbg !7689

cond.false59:                                     ; preds = %if.end53
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7689
  %call60 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62643, i8 zeroext -1) #9, !dbg !7689
  br label %cond.end61, !dbg !7689

cond.end61:                                       ; preds = %cond.false59, %cond.true57
  %cond62 = phi i32 [ %call58, %cond.true57 ], [ %call60, %cond.false59 ], !dbg !7689
  %cmp63 = icmp slt i32 %cond62, 0, !dbg !7691
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !7692

if.then65:                                        ; preds = %cond.end61
  br label %err, !dbg !7693

if.end66:                                         ; preds = %cond.end61
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7694
  %demod67 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 1, !dbg !7694
  %31 = load i32, i32* %demod67, align 4, !dbg !7694
  %cmp68 = icmp eq i32 %31, 2, !dbg !7694
  br i1 %cmp68, label %cond.true70, label %cond.false72, !dbg !7694

cond.true70:                                      ; preds = %if.end66
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7694
  %call71 = call i32 @stv090x_write_reg(%struct.stv090x_state* %32, i32 62132, i8 zeroext -1) #9, !dbg !7694
  br label %cond.end74, !dbg !7694

cond.false72:                                     ; preds = %if.end66
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7694
  %call73 = call i32 @stv090x_write_reg(%struct.stv090x_state* %33, i32 62644, i8 zeroext -1) #9, !dbg !7694
  br label %cond.end74, !dbg !7694

cond.end74:                                       ; preds = %cond.false72, %cond.true70
  %cond75 = phi i32 [ %call71, %cond.true70 ], [ %call73, %cond.false72 ], !dbg !7694
  %cmp76 = icmp slt i32 %cond75, 0, !dbg !7696
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !7697

if.then78:                                        ; preds = %cond.end74
  br label %err, !dbg !7698

if.end79:                                         ; preds = %cond.end74
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7699
  %demod80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %34, i32 0, i32 1, !dbg !7699
  %35 = load i32, i32* %demod80, align 4, !dbg !7699
  %cmp81 = icmp eq i32 %35, 2, !dbg !7699
  br i1 %cmp81, label %cond.true83, label %cond.false85, !dbg !7699

cond.true83:                                      ; preds = %if.end79
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7699
  %call84 = call i32 @stv090x_write_reg(%struct.stv090x_state* %36, i32 62133, i8 zeroext -1) #9, !dbg !7699
  br label %cond.end87, !dbg !7699

cond.false85:                                     ; preds = %if.end79
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7699
  %call86 = call i32 @stv090x_write_reg(%struct.stv090x_state* %37, i32 62645, i8 zeroext -1) #9, !dbg !7699
  br label %cond.end87, !dbg !7699

cond.end87:                                       ; preds = %cond.false85, %cond.true83
  %cond88 = phi i32 [ %call84, %cond.true83 ], [ %call86, %cond.false85 ], !dbg !7699
  %cmp89 = icmp slt i32 %cond88, 0, !dbg !7701
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !7702

if.then91:                                        ; preds = %cond.end87
  br label %err, !dbg !7703

if.end92:                                         ; preds = %cond.end87
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7704
  %demod93 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 1, !dbg !7704
  %39 = load i32, i32* %demod93, align 4, !dbg !7704
  %cmp94 = icmp eq i32 %39, 2, !dbg !7704
  br i1 %cmp94, label %cond.true96, label %cond.false98, !dbg !7704

cond.true96:                                      ; preds = %if.end92
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7704
  %call97 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 62134, i8 zeroext -1) #9, !dbg !7704
  br label %cond.end100, !dbg !7704

cond.false98:                                     ; preds = %if.end92
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7704
  %call99 = call i32 @stv090x_write_reg(%struct.stv090x_state* %41, i32 62646, i8 zeroext -1) #9, !dbg !7704
  br label %cond.end100, !dbg !7704

cond.end100:                                      ; preds = %cond.false98, %cond.true96
  %cond101 = phi i32 [ %call97, %cond.true96 ], [ %call99, %cond.false98 ], !dbg !7704
  %cmp102 = icmp slt i32 %cond101, 0, !dbg !7706
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !7707

if.then104:                                       ; preds = %cond.end100
  br label %err, !dbg !7708

if.end105:                                        ; preds = %cond.end100
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7709
  %demod106 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 1, !dbg !7709
  %43 = load i32, i32* %demod106, align 4, !dbg !7709
  %cmp107 = icmp eq i32 %43, 2, !dbg !7709
  br i1 %cmp107, label %cond.true109, label %cond.false111, !dbg !7709

cond.true109:                                     ; preds = %if.end105
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7709
  %call110 = call i32 @stv090x_write_reg(%struct.stv090x_state* %44, i32 62135, i8 zeroext -52) #9, !dbg !7709
  br label %cond.end113, !dbg !7709

cond.false111:                                    ; preds = %if.end105
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7709
  %call112 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62647, i8 zeroext -52) #9, !dbg !7709
  br label %cond.end113, !dbg !7709

cond.end113:                                      ; preds = %cond.false111, %cond.true109
  %cond114 = phi i32 [ %call110, %cond.true109 ], [ %call112, %cond.false111 ], !dbg !7709
  %cmp115 = icmp slt i32 %cond114, 0, !dbg !7711
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !7712

if.then117:                                       ; preds = %cond.end113
  br label %err, !dbg !7713

if.end118:                                        ; preds = %cond.end113
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7714
  %demod119 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %46, i32 0, i32 1, !dbg !7714
  %47 = load i32, i32* %demod119, align 4, !dbg !7714
  %cmp120 = icmp eq i32 %47, 2, !dbg !7714
  br i1 %cmp120, label %cond.true122, label %cond.false124, !dbg !7714

cond.true122:                                     ; preds = %if.end118
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7714
  %call123 = call i32 @stv090x_write_reg(%struct.stv090x_state* %48, i32 62136, i8 zeroext -52) #9, !dbg !7714
  br label %cond.end126, !dbg !7714

cond.false124:                                    ; preds = %if.end118
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7714
  %call125 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 62648, i8 zeroext -52) #9, !dbg !7714
  br label %cond.end126, !dbg !7714

cond.end126:                                      ; preds = %cond.false124, %cond.true122
  %cond127 = phi i32 [ %call123, %cond.true122 ], [ %call125, %cond.false124 ], !dbg !7714
  %cmp128 = icmp slt i32 %cond127, 0, !dbg !7716
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !7717

if.then130:                                       ; preds = %cond.end126
  br label %err, !dbg !7718

if.end131:                                        ; preds = %cond.end126
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7719
  %demod132 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 1, !dbg !7719
  %51 = load i32, i32* %demod132, align 4, !dbg !7719
  %cmp133 = icmp eq i32 %51, 2, !dbg !7719
  br i1 %cmp133, label %cond.true135, label %cond.false137, !dbg !7719

cond.true135:                                     ; preds = %if.end131
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7719
  %call136 = call i32 @stv090x_write_reg(%struct.stv090x_state* %52, i32 62137, i8 zeroext -52) #9, !dbg !7719
  br label %cond.end139, !dbg !7719

cond.false137:                                    ; preds = %if.end131
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7719
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %53, i32 62649, i8 zeroext -52) #9, !dbg !7719
  br label %cond.end139, !dbg !7719

cond.end139:                                      ; preds = %cond.false137, %cond.true135
  %cond140 = phi i32 [ %call136, %cond.true135 ], [ %call138, %cond.false137 ], !dbg !7719
  %cmp141 = icmp slt i32 %cond140, 0, !dbg !7721
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !7722

if.then143:                                       ; preds = %cond.end139
  br label %err, !dbg !7723

if.end144:                                        ; preds = %cond.end139
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7724
  %demod145 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 1, !dbg !7724
  %55 = load i32, i32* %demod145, align 4, !dbg !7724
  %cmp146 = icmp eq i32 %55, 2, !dbg !7724
  br i1 %cmp146, label %cond.true148, label %cond.false150, !dbg !7724

cond.true148:                                     ; preds = %if.end144
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7724
  %call149 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62138, i8 zeroext -52) #9, !dbg !7724
  br label %cond.end152, !dbg !7724

cond.false150:                                    ; preds = %if.end144
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7724
  %call151 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62650, i8 zeroext -52) #9, !dbg !7724
  br label %cond.end152, !dbg !7724

cond.end152:                                      ; preds = %cond.false150, %cond.true148
  %cond153 = phi i32 [ %call149, %cond.true148 ], [ %call151, %cond.false150 ], !dbg !7724
  %cmp154 = icmp slt i32 %cond153, 0, !dbg !7726
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !7727

if.then156:                                       ; preds = %cond.end152
  br label %err, !dbg !7728

if.end157:                                        ; preds = %cond.end152
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7729
  %demod158 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 1, !dbg !7729
  %59 = load i32, i32* %demod158, align 4, !dbg !7729
  %cmp159 = icmp eq i32 %59, 2, !dbg !7729
  br i1 %cmp159, label %cond.true161, label %cond.false163, !dbg !7729

cond.true161:                                     ; preds = %if.end157
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7729
  %call162 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62139, i8 zeroext -52) #9, !dbg !7729
  br label %cond.end165, !dbg !7729

cond.false163:                                    ; preds = %if.end157
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7729
  %call164 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 62651, i8 zeroext -52) #9, !dbg !7729
  br label %cond.end165, !dbg !7729

cond.end165:                                      ; preds = %cond.false163, %cond.true161
  %cond166 = phi i32 [ %call162, %cond.true161 ], [ %call164, %cond.false163 ], !dbg !7729
  %cmp167 = icmp slt i32 %cond166, 0, !dbg !7731
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !7732

if.then169:                                       ; preds = %cond.end165
  br label %err, !dbg !7733

if.end170:                                        ; preds = %cond.end165
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7734
  %demod171 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %62, i32 0, i32 1, !dbg !7734
  %63 = load i32, i32* %demod171, align 4, !dbg !7734
  %cmp172 = icmp eq i32 %63, 2, !dbg !7734
  br i1 %cmp172, label %cond.true174, label %cond.false176, !dbg !7734

cond.true174:                                     ; preds = %if.end170
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7734
  %call175 = call i32 @stv090x_write_reg(%struct.stv090x_state* %64, i32 62140, i8 zeroext -52) #9, !dbg !7734
  br label %cond.end178, !dbg !7734

cond.false176:                                    ; preds = %if.end170
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7734
  %call177 = call i32 @stv090x_write_reg(%struct.stv090x_state* %65, i32 62652, i8 zeroext -52) #9, !dbg !7734
  br label %cond.end178, !dbg !7734

cond.end178:                                      ; preds = %cond.false176, %cond.true174
  %cond179 = phi i32 [ %call175, %cond.true174 ], [ %call177, %cond.false176 ], !dbg !7734
  %cmp180 = icmp slt i32 %cond179, 0, !dbg !7736
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !7737

if.then182:                                       ; preds = %cond.end178
  br label %err, !dbg !7738

if.end183:                                        ; preds = %cond.end178
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7739
  %demod184 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %66, i32 0, i32 1, !dbg !7739
  %67 = load i32, i32* %demod184, align 4, !dbg !7739
  %cmp185 = icmp eq i32 %67, 2, !dbg !7739
  br i1 %cmp185, label %cond.true187, label %cond.false189, !dbg !7739

cond.true187:                                     ; preds = %if.end183
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7739
  %call188 = call i32 @stv090x_write_reg(%struct.stv090x_state* %68, i32 62141, i8 zeroext -52) #9, !dbg !7739
  br label %cond.end191, !dbg !7739

cond.false189:                                    ; preds = %if.end183
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7739
  %call190 = call i32 @stv090x_write_reg(%struct.stv090x_state* %69, i32 62653, i8 zeroext -52) #9, !dbg !7739
  br label %cond.end191, !dbg !7739

cond.end191:                                      ; preds = %cond.false189, %cond.true187
  %cond192 = phi i32 [ %call188, %cond.true187 ], [ %call190, %cond.false189 ], !dbg !7739
  %cmp193 = icmp slt i32 %cond192, 0, !dbg !7741
  br i1 %cmp193, label %if.then195, label %if.end196, !dbg !7742

if.then195:                                       ; preds = %cond.end191
  br label %err, !dbg !7743

if.end196:                                        ; preds = %cond.end191
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7744
  %demod197 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %70, i32 0, i32 1, !dbg !7744
  %71 = load i32, i32* %demod197, align 4, !dbg !7744
  %cmp198 = icmp eq i32 %71, 2, !dbg !7744
  br i1 %cmp198, label %cond.true200, label %cond.false202, !dbg !7744

cond.true200:                                     ; preds = %if.end196
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7744
  %call201 = call i32 @stv090x_write_reg(%struct.stv090x_state* %72, i32 62142, i8 zeroext -1) #9, !dbg !7744
  br label %cond.end204, !dbg !7744

cond.false202:                                    ; preds = %if.end196
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7744
  %call203 = call i32 @stv090x_write_reg(%struct.stv090x_state* %73, i32 62654, i8 zeroext -1) #9, !dbg !7744
  br label %cond.end204, !dbg !7744

cond.end204:                                      ; preds = %cond.false202, %cond.true200
  %cond205 = phi i32 [ %call201, %cond.true200 ], [ %call203, %cond.false202 ], !dbg !7744
  %cmp206 = icmp slt i32 %cond205, 0, !dbg !7746
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !7747

if.then208:                                       ; preds = %cond.end204
  br label %err, !dbg !7748

if.end209:                                        ; preds = %cond.end204
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7749
  %demod210 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %74, i32 0, i32 1, !dbg !7749
  %75 = load i32, i32* %demod210, align 4, !dbg !7749
  %cmp211 = icmp eq i32 %75, 2, !dbg !7749
  br i1 %cmp211, label %cond.true213, label %cond.false215, !dbg !7749

cond.true213:                                     ; preds = %if.end209
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7749
  %call214 = call i32 @stv090x_write_reg(%struct.stv090x_state* %76, i32 62143, i8 zeroext -49) #9, !dbg !7749
  br label %cond.end217, !dbg !7749

cond.false215:                                    ; preds = %if.end209
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7749
  %call216 = call i32 @stv090x_write_reg(%struct.stv090x_state* %77, i32 62655, i8 zeroext -49) #9, !dbg !7749
  br label %cond.end217, !dbg !7749

cond.end217:                                      ; preds = %cond.false215, %cond.true213
  %cond218 = phi i32 [ %call214, %cond.true213 ], [ %call216, %cond.false215 ], !dbg !7749
  %cmp219 = icmp slt i32 %cond218, 0, !dbg !7751
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !7752

if.then221:                                       ; preds = %cond.end217
  br label %err, !dbg !7753

if.end222:                                        ; preds = %cond.end217
  br label %if.end223, !dbg !7754

if.end223:                                        ; preds = %if.end222, %lor.lhs.false
  br label %sw.epilog, !dbg !7755

sw.bb224:                                         ; preds = %entry
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7756
  %call225 = call i32 @stv090x_stop_modcod(%struct.stv090x_state* %78) #9, !dbg !7758
  %cmp226 = icmp slt i32 %call225, 0, !dbg !7759
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !7760

if.then228:                                       ; preds = %sw.bb224
  br label %err, !dbg !7761

if.end229:                                        ; preds = %sw.bb224
  %79 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7762
  %call230 = call i32 @stv090x_activate_modcod_single(%struct.stv090x_state* %79) #9, !dbg !7764
  %cmp231 = icmp slt i32 %call230, 0, !dbg !7765
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !7766

if.then233:                                       ; preds = %if.end229
  br label %err, !dbg !7767

if.end234:                                        ; preds = %if.end229
  %80 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7768
  %demod235 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %80, i32 0, i32 1, !dbg !7770
  %81 = load i32, i32* %demod235, align 4, !dbg !7770
  %cmp236 = icmp eq i32 %81, 2, !dbg !7771
  br i1 %cmp236, label %if.then238, label %if.else, !dbg !7772

if.then238:                                       ; preds = %if.end234
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7773
  %call239 = call i32 @stv090x_write_reg(%struct.stv090x_state* %82, i32 64134, i8 zeroext 6) #9, !dbg !7776
  %cmp240 = icmp slt i32 %call239, 0, !dbg !7777
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !7778

if.then242:                                       ; preds = %if.then238
  br label %err, !dbg !7779

if.end243:                                        ; preds = %if.then238
  br label %if.end249, !dbg !7780

if.else:                                          ; preds = %if.end234
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7781
  %call244 = call i32 @stv090x_write_reg(%struct.stv090x_state* %83, i32 64134, i8 zeroext 4) #9, !dbg !7784
  %cmp245 = icmp slt i32 %call244, 0, !dbg !7785
  br i1 %cmp245, label %if.then247, label %if.end248, !dbg !7786

if.then247:                                       ; preds = %if.else
  br label %err, !dbg !7787

if.end248:                                        ; preds = %if.else
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.end243
  %84 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7788
  %call250 = call i32 @stv090x_read_reg(%struct.stv090x_state* %84, i32 65297) #9, !dbg !7789
  store i32 %call250, i32* %reg, align 4, !dbg !7790
  %85 = load i32, i32* %reg, align 4, !dbg !7791
  %and251 = and i32 %85, -129, !dbg !7791
  %or252 = or i32 %and251, 128, !dbg !7791
  store i32 %or252, i32* %reg, align 4, !dbg !7791
  %86 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7792
  %87 = load i32, i32* %reg, align 4, !dbg !7794
  %conv253 = trunc i32 %87 to i8, !dbg !7794
  %call254 = call i32 @stv090x_write_reg(%struct.stv090x_state* %86, i32 65297, i8 zeroext %conv253) #9, !dbg !7795
  %cmp255 = icmp slt i32 %call254, 0, !dbg !7796
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !7797

if.then257:                                       ; preds = %if.end249
  br label %err, !dbg !7798

if.end258:                                        ; preds = %if.end249
  %88 = load i32, i32* %reg, align 4, !dbg !7799
  %and259 = and i32 %88, -129, !dbg !7799
  store i32 %and259, i32* %reg, align 4, !dbg !7799
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7800
  %90 = load i32, i32* %reg, align 4, !dbg !7802
  %conv260 = trunc i32 %90 to i8, !dbg !7802
  %call261 = call i32 @stv090x_write_reg(%struct.stv090x_state* %89, i32 65297, i8 zeroext %conv260) #9, !dbg !7803
  %cmp262 = icmp slt i32 %call261, 0, !dbg !7804
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !7805

if.then264:                                       ; preds = %if.end258
  br label %err, !dbg !7806

if.end265:                                        ; preds = %if.end258
  %91 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7807
  %demod266 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %91, i32 0, i32 1, !dbg !7807
  %92 = load i32, i32* %demod266, align 4, !dbg !7807
  %cmp267 = icmp eq i32 %92, 2, !dbg !7807
  br i1 %cmp267, label %cond.true269, label %cond.false271, !dbg !7807

cond.true269:                                     ; preds = %if.end265
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7807
  %call270 = call i32 @stv090x_read_reg(%struct.stv090x_state* %93, i32 62288) #9, !dbg !7807
  br label %cond.end273, !dbg !7807

cond.false271:                                    ; preds = %if.end265
  %94 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7807
  %call272 = call i32 @stv090x_read_reg(%struct.stv090x_state* %94, i32 62800) #9, !dbg !7807
  br label %cond.end273, !dbg !7807

cond.end273:                                      ; preds = %cond.false271, %cond.true269
  %cond274 = phi i32 [ %call270, %cond.true269 ], [ %call272, %cond.false271 ], !dbg !7807
  store i32 %cond274, i32* %reg, align 4, !dbg !7808
  %95 = load i32, i32* %reg, align 4, !dbg !7809
  %and275 = and i32 %95, -2, !dbg !7809
  %or276 = or i32 %and275, 1, !dbg !7809
  store i32 %or276, i32* %reg, align 4, !dbg !7809
  %96 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7810
  %demod277 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %96, i32 0, i32 1, !dbg !7810
  %97 = load i32, i32* %demod277, align 4, !dbg !7810
  %cmp278 = icmp eq i32 %97, 2, !dbg !7810
  br i1 %cmp278, label %cond.true280, label %cond.false283, !dbg !7810

cond.true280:                                     ; preds = %cond.end273
  %98 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7810
  %99 = load i32, i32* %reg, align 4, !dbg !7810
  %conv281 = trunc i32 %99 to i8, !dbg !7810
  %call282 = call i32 @stv090x_write_reg(%struct.stv090x_state* %98, i32 62288, i8 zeroext %conv281) #9, !dbg !7810
  br label %cond.end286, !dbg !7810

cond.false283:                                    ; preds = %cond.end273
  %100 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7810
  %101 = load i32, i32* %reg, align 4, !dbg !7810
  %conv284 = trunc i32 %101 to i8, !dbg !7810
  %call285 = call i32 @stv090x_write_reg(%struct.stv090x_state* %100, i32 62800, i8 zeroext %conv284) #9, !dbg !7810
  br label %cond.end286, !dbg !7810

cond.end286:                                      ; preds = %cond.false283, %cond.true280
  %cond287 = phi i32 [ %call282, %cond.true280 ], [ %call285, %cond.false283 ], !dbg !7810
  %cmp288 = icmp slt i32 %cond287, 0, !dbg !7812
  br i1 %cmp288, label %if.then290, label %if.end291, !dbg !7813

if.then290:                                       ; preds = %cond.end286
  br label %err, !dbg !7814

if.end291:                                        ; preds = %cond.end286
  %102 = load i32, i32* %reg, align 4, !dbg !7815
  %and292 = and i32 %102, -2, !dbg !7815
  store i32 %and292, i32* %reg, align 4, !dbg !7815
  %103 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7816
  %demod293 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %103, i32 0, i32 1, !dbg !7816
  %104 = load i32, i32* %demod293, align 4, !dbg !7816
  %cmp294 = icmp eq i32 %104, 2, !dbg !7816
  br i1 %cmp294, label %cond.true296, label %cond.false299, !dbg !7816

cond.true296:                                     ; preds = %if.end291
  %105 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7816
  %106 = load i32, i32* %reg, align 4, !dbg !7816
  %conv297 = trunc i32 %106 to i8, !dbg !7816
  %call298 = call i32 @stv090x_write_reg(%struct.stv090x_state* %105, i32 62288, i8 zeroext %conv297) #9, !dbg !7816
  br label %cond.end302, !dbg !7816

cond.false299:                                    ; preds = %if.end291
  %107 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7816
  %108 = load i32, i32* %reg, align 4, !dbg !7816
  %conv300 = trunc i32 %108 to i8, !dbg !7816
  %call301 = call i32 @stv090x_write_reg(%struct.stv090x_state* %107, i32 62800, i8 zeroext %conv300) #9, !dbg !7816
  br label %cond.end302, !dbg !7816

cond.end302:                                      ; preds = %cond.false299, %cond.true296
  %cond303 = phi i32 [ %call298, %cond.true296 ], [ %call301, %cond.false299 ], !dbg !7816
  %cmp304 = icmp slt i32 %cond303, 0, !dbg !7818
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !7819

if.then306:                                       ; preds = %cond.end302
  br label %err, !dbg !7820

if.end307:                                        ; preds = %cond.end302
  br label %sw.epilog, !dbg !7821

sw.epilog:                                        ; preds = %if.end307, %if.end223
  store i32 0, i32* %retval, align 4, !dbg !7822
  br label %return, !dbg !7822

err:                                              ; preds = %if.then306, %if.then290, %if.then264, %if.then257, %if.then247, %if.then242, %if.then233, %if.then228, %if.then221, %if.then208, %if.then195, %if.then182, %if.then169, %if.then156, %if.then143, %if.then130, %if.then117, %if.then104, %if.then91, %if.then78, %if.then65, %if.then52, %if.then39, %if.then26, %if.then18, %if.then11, %if.then4
  call void @llvm.dbg.label(metadata !7823), !dbg !7824
  br label %do.body, !dbg !7825

do.body:                                          ; preds = %err
  %109 = load i32, i32* @verbose, align 4, !dbg !7826
  %cmp308 = icmp ugt i32 %109, 0, !dbg !7826
  br i1 %cmp308, label %land.lhs.true, label %if.else314, !dbg !7826

land.lhs.true:                                    ; preds = %do.body
  %110 = load i32, i32* @verbose, align 4, !dbg !7826
  %cmp310 = icmp ugt i32 %110, 0, !dbg !7826
  br i1 %cmp310, label %if.then312, label %if.else314, !dbg !7831

if.then312:                                       ; preds = %land.lhs.true
  %call313 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_ldpc_mode, i64 0, i64 0)) #13, !dbg !7826
  br label %if.end341, !dbg !7826

if.else314:                                       ; preds = %land.lhs.true, %do.body
  %111 = load i32, i32* @verbose, align 4, !dbg !7832
  %cmp315 = icmp ugt i32 %111, 1, !dbg !7832
  br i1 %cmp315, label %land.lhs.true317, label %if.else322, !dbg !7832

land.lhs.true317:                                 ; preds = %if.else314
  %112 = load i32, i32* @verbose, align 4, !dbg !7832
  %cmp318 = icmp ugt i32 %112, 0, !dbg !7832
  br i1 %cmp318, label %if.then320, label %if.else322, !dbg !7826

if.then320:                                       ; preds = %land.lhs.true317
  %call321 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_ldpc_mode, i64 0, i64 0)) #13, !dbg !7832
  br label %if.end340, !dbg !7832

if.else322:                                       ; preds = %land.lhs.true317, %if.else314
  %113 = load i32, i32* @verbose, align 4, !dbg !7834
  %cmp323 = icmp ugt i32 %113, 2, !dbg !7834
  br i1 %cmp323, label %land.lhs.true325, label %if.else330, !dbg !7834

land.lhs.true325:                                 ; preds = %if.else322
  %114 = load i32, i32* @verbose, align 4, !dbg !7834
  %cmp326 = icmp ugt i32 %114, 0, !dbg !7834
  br i1 %cmp326, label %if.then328, label %if.else330, !dbg !7832

if.then328:                                       ; preds = %land.lhs.true325
  %call329 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_ldpc_mode, i64 0, i64 0)) #13, !dbg !7834
  br label %if.end339, !dbg !7834

if.else330:                                       ; preds = %land.lhs.true325, %if.else322
  %115 = load i32, i32* @verbose, align 4, !dbg !7836
  %cmp331 = icmp ugt i32 %115, 3, !dbg !7836
  br i1 %cmp331, label %land.lhs.true333, label %if.end338, !dbg !7836

land.lhs.true333:                                 ; preds = %if.else330
  %116 = load i32, i32* @verbose, align 4, !dbg !7836
  %cmp334 = icmp ugt i32 %116, 0, !dbg !7836
  br i1 %cmp334, label %if.then336, label %if.end338, !dbg !7834

if.then336:                                       ; preds = %land.lhs.true333
  %call337 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_ldpc_mode, i64 0, i64 0)) #13, !dbg !7836
  br label %if.end338, !dbg !7836

if.end338:                                        ; preds = %if.then336, %land.lhs.true333, %if.else330
  br label %if.end339

if.end339:                                        ; preds = %if.end338, %if.then328
  br label %if.end340

if.end340:                                        ; preds = %if.end339, %if.then320
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.then312
  br label %do.end, !dbg !7838

do.end:                                           ; preds = %if.end341
  store i32 -1, i32* %retval, align 4, !dbg !7839
  br label %return, !dbg !7839

return:                                           ; preds = %do.end, %sw.epilog
  %117 = load i32, i32* %retval, align 4, !dbg !7840
  ret i32 %117, !dbg !7840
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_read_reg(%struct.stv090x_state* %state, i32 %reg) #0 !dbg !7841 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg.addr = alloca i32, align 4
  %config = alloca %struct.stv090x_config*, align 8
  %ret = alloca i32, align 4
  %b0 = alloca [2 x i8], align 1
  %buf = alloca i8, align 1
  %msg = alloca [2 x %struct.i2c_msg], align 16
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !7846, metadata !DIExpression()), !dbg !7847
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !7848, metadata !DIExpression()), !dbg !7849
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7850
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 5, !dbg !7851
  %1 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !7851
  store %struct.stv090x_config* %1, %struct.stv090x_config** %config, align 8, !dbg !7849
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7852, metadata !DIExpression()), !dbg !7853
  call void @llvm.dbg.declare(metadata [2 x i8]* %b0, metadata !7854, metadata !DIExpression()), !dbg !7856
  %arrayinit.begin = getelementptr inbounds [2 x i8], [2 x i8]* %b0, i64 0, i64 0, !dbg !7857
  %2 = load i32, i32* %reg.addr, align 4, !dbg !7858
  %shr = lshr i32 %2, 8, !dbg !7859
  %conv = trunc i32 %shr to i8, !dbg !7858
  store i8 %conv, i8* %arrayinit.begin, align 1, !dbg !7857
  %arrayinit.element = getelementptr inbounds i8, i8* %arrayinit.begin, i64 1, !dbg !7857
  %3 = load i32, i32* %reg.addr, align 4, !dbg !7860
  %and = and i32 %3, 255, !dbg !7861
  %conv2 = trunc i32 %and to i8, !dbg !7860
  store i8 %conv2, i8* %arrayinit.element, align 1, !dbg !7857
  call void @llvm.dbg.declare(metadata i8* %buf, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.declare(metadata [2 x %struct.i2c_msg]* %msg, metadata !7864, metadata !DIExpression()), !dbg !7866
  %arrayinit.begin3 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !7867
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin3, i32 0, i32 0, !dbg !7868
  %4 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !7869
  %address = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %4, i32 0, i32 5, !dbg !7870
  %5 = load i8, i8* %address, align 4, !dbg !7870
  %conv4 = zext i8 %5 to i16, !dbg !7869
  store i16 %conv4, i16* %addr, align 16, !dbg !7868
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin3, i32 0, i32 1, !dbg !7868
  store i16 0, i16* %flags, align 2, !dbg !7868
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin3, i32 0, i32 2, !dbg !7868
  store i16 2, i16* %len, align 4, !dbg !7868
  %buf5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin3, i32 0, i32 3, !dbg !7868
  %arraydecay = getelementptr inbounds [2 x i8], [2 x i8]* %b0, i64 0, i64 0, !dbg !7871
  store i8* %arraydecay, i8** %buf5, align 8, !dbg !7868
  %arrayinit.element6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin3, i64 1, !dbg !7867
  %addr7 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element6, i32 0, i32 0, !dbg !7872
  %6 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !7873
  %address8 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %6, i32 0, i32 5, !dbg !7874
  %7 = load i8, i8* %address8, align 4, !dbg !7874
  %conv9 = zext i8 %7 to i16, !dbg !7873
  store i16 %conv9, i16* %addr7, align 16, !dbg !7872
  %flags10 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element6, i32 0, i32 1, !dbg !7872
  store i16 1, i16* %flags10, align 2, !dbg !7872
  %len11 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element6, i32 0, i32 2, !dbg !7872
  store i16 1, i16* %len11, align 4, !dbg !7872
  %buf12 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element6, i32 0, i32 3, !dbg !7872
  store i8* %buf, i8** %buf12, align 8, !dbg !7872
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7875
  %i2c = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 4, !dbg !7876
  %9 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !7876
  %arraydecay13 = getelementptr inbounds [2 x %struct.i2c_msg], [2 x %struct.i2c_msg]* %msg, i64 0, i64 0, !dbg !7877
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %9, %struct.i2c_msg* %arraydecay13, i32 2) #9, !dbg !7878
  store i32 %call, i32* %ret, align 4, !dbg !7879
  %10 = load i32, i32* %ret, align 4, !dbg !7880
  %cmp = icmp ne i32 %10, 2, !dbg !7882
  br i1 %cmp, label %if.then, label %if.end53, !dbg !7883

if.then:                                          ; preds = %entry
  %11 = load i32, i32* %ret, align 4, !dbg !7884
  %cmp15 = icmp ne i32 %11, -512, !dbg !7887
  br i1 %cmp15, label %if.then17, label %if.end50, !dbg !7888

if.then17:                                        ; preds = %if.then
  br label %do.body, !dbg !7889

do.body:                                          ; preds = %if.then17
  %12 = load i32, i32* @verbose, align 4, !dbg !7890
  %cmp18 = icmp ugt i32 %12, 0, !dbg !7890
  br i1 %cmp18, label %land.lhs.true, label %if.else, !dbg !7890

land.lhs.true:                                    ; preds = %do.body
  %13 = load i32, i32* @verbose, align 4, !dbg !7890
  %cmp20 = icmp ugt i32 %13, 0, !dbg !7890
  br i1 %cmp20, label %if.then22, label %if.else, !dbg !7895

if.then22:                                        ; preds = %land.lhs.true
  %14 = load i32, i32* %reg.addr, align 4, !dbg !7890
  %15 = load i32, i32* %ret, align 4, !dbg !7890
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.41, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %14, i32 %15) #13, !dbg !7890
  br label %if.end49, !dbg !7890

if.else:                                          ; preds = %land.lhs.true, %do.body
  %16 = load i32, i32* @verbose, align 4, !dbg !7896
  %cmp24 = icmp ugt i32 %16, 1, !dbg !7896
  br i1 %cmp24, label %land.lhs.true26, label %if.else31, !dbg !7896

land.lhs.true26:                                  ; preds = %if.else
  %17 = load i32, i32* @verbose, align 4, !dbg !7896
  %cmp27 = icmp ugt i32 %17, 0, !dbg !7896
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !7890

if.then29:                                        ; preds = %land.lhs.true26
  %18 = load i32, i32* %reg.addr, align 4, !dbg !7896
  %19 = load i32, i32* %ret, align 4, !dbg !7896
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %18, i32 %19) #13, !dbg !7896
  br label %if.end48, !dbg !7896

if.else31:                                        ; preds = %land.lhs.true26, %if.else
  %20 = load i32, i32* @verbose, align 4, !dbg !7898
  %cmp32 = icmp ugt i32 %20, 2, !dbg !7898
  br i1 %cmp32, label %land.lhs.true34, label %if.else39, !dbg !7898

land.lhs.true34:                                  ; preds = %if.else31
  %21 = load i32, i32* @verbose, align 4, !dbg !7898
  %cmp35 = icmp ugt i32 %21, 0, !dbg !7898
  br i1 %cmp35, label %if.then37, label %if.else39, !dbg !7896

if.then37:                                        ; preds = %land.lhs.true34
  %22 = load i32, i32* %reg.addr, align 4, !dbg !7898
  %23 = load i32, i32* %ret, align 4, !dbg !7898
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.43, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %22, i32 %23) #13, !dbg !7898
  br label %if.end47, !dbg !7898

if.else39:                                        ; preds = %land.lhs.true34, %if.else31
  %24 = load i32, i32* @verbose, align 4, !dbg !7900
  %cmp40 = icmp ugt i32 %24, 3, !dbg !7900
  br i1 %cmp40, label %land.lhs.true42, label %if.end, !dbg !7900

land.lhs.true42:                                  ; preds = %if.else39
  %25 = load i32, i32* @verbose, align 4, !dbg !7900
  %cmp43 = icmp ugt i32 %25, 0, !dbg !7900
  br i1 %cmp43, label %if.then45, label %if.end, !dbg !7898

if.then45:                                        ; preds = %land.lhs.true42
  %26 = load i32, i32* %reg.addr, align 4, !dbg !7900
  %27 = load i32, i32* %ret, align 4, !dbg !7900
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %26, i32 %27) #13, !dbg !7900
  br label %if.end, !dbg !7900

if.end:                                           ; preds = %if.then45, %land.lhs.true42, %if.else39
  br label %if.end47

if.end47:                                         ; preds = %if.end, %if.then37
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then29
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then22
  br label %do.end, !dbg !7902

do.end:                                           ; preds = %if.end49
  br label %if.end50, !dbg !7902

if.end50:                                         ; preds = %do.end, %if.then
  %28 = load i32, i32* %ret, align 4, !dbg !7903
  %cmp51 = icmp slt i32 %28, 0, !dbg !7904
  br i1 %cmp51, label %cond.true, label %cond.false, !dbg !7903

cond.true:                                        ; preds = %if.end50
  %29 = load i32, i32* %ret, align 4, !dbg !7905
  br label %cond.end, !dbg !7903

cond.false:                                       ; preds = %if.end50
  br label %cond.end, !dbg !7903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %29, %cond.true ], [ -121, %cond.false ], !dbg !7903
  store i32 %cond, i32* %retval, align 4, !dbg !7906
  br label %return, !dbg !7906

if.end53:                                         ; preds = %entry
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7907
  %verbose = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 7, !dbg !7907
  %31 = load i32*, i32** %verbose, align 8, !dbg !7907
  %32 = load i32, i32* %31, align 4, !dbg !7907
  %cmp54 = icmp uge i32 %32, 4, !dbg !7907
  %lnot = xor i1 %cmp54, true, !dbg !7907
  %lnot56 = xor i1 %lnot, true, !dbg !7907
  %lnot.ext = zext i1 %lnot56 to i32, !dbg !7907
  %conv57 = sext i32 %lnot.ext to i64, !dbg !7907
  %tobool = icmp ne i64 %conv57, 0, !dbg !7907
  br i1 %tobool, label %if.then58, label %if.end100, !dbg !7909

if.then58:                                        ; preds = %if.end53
  br label %do.body59, !dbg !7910

do.body59:                                        ; preds = %if.then58
  %33 = load i32, i32* @verbose, align 4, !dbg !7911
  %cmp60 = icmp ugt i32 %33, 0, !dbg !7911
  br i1 %cmp60, label %land.lhs.true62, label %if.else68, !dbg !7911

land.lhs.true62:                                  ; preds = %do.body59
  %34 = load i32, i32* @verbose, align 4, !dbg !7911
  %cmp63 = icmp ugt i32 %34, 0, !dbg !7911
  br i1 %cmp63, label %if.then65, label %if.else68, !dbg !7916

if.then65:                                        ; preds = %land.lhs.true62
  %35 = load i32, i32* %reg.addr, align 4, !dbg !7911
  %36 = load i8, i8* %buf, align 1, !dbg !7911
  %conv66 = zext i8 %36 to i32, !dbg !7911
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %35, i32 %conv66) #13, !dbg !7911
  br label %if.end98, !dbg !7911

if.else68:                                        ; preds = %land.lhs.true62, %do.body59
  %37 = load i32, i32* @verbose, align 4, !dbg !7917
  %cmp69 = icmp ugt i32 %37, 1, !dbg !7917
  br i1 %cmp69, label %land.lhs.true71, label %if.else77, !dbg !7917

land.lhs.true71:                                  ; preds = %if.else68
  %38 = load i32, i32* @verbose, align 4, !dbg !7917
  %cmp72 = icmp ugt i32 %38, 0, !dbg !7917
  br i1 %cmp72, label %if.then74, label %if.else77, !dbg !7911

if.then74:                                        ; preds = %land.lhs.true71
  %39 = load i32, i32* %reg.addr, align 4, !dbg !7917
  %40 = load i8, i8* %buf, align 1, !dbg !7917
  %conv75 = zext i8 %40 to i32, !dbg !7917
  %call76 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %39, i32 %conv75) #13, !dbg !7917
  br label %if.end97, !dbg !7917

if.else77:                                        ; preds = %land.lhs.true71, %if.else68
  %41 = load i32, i32* @verbose, align 4, !dbg !7919
  %cmp78 = icmp ugt i32 %41, 2, !dbg !7919
  br i1 %cmp78, label %land.lhs.true80, label %if.else86, !dbg !7919

land.lhs.true80:                                  ; preds = %if.else77
  %42 = load i32, i32* @verbose, align 4, !dbg !7919
  %cmp81 = icmp ugt i32 %42, 0, !dbg !7919
  br i1 %cmp81, label %if.then83, label %if.else86, !dbg !7917

if.then83:                                        ; preds = %land.lhs.true80
  %43 = load i32, i32* %reg.addr, align 4, !dbg !7919
  %44 = load i8, i8* %buf, align 1, !dbg !7919
  %conv84 = zext i8 %44 to i32, !dbg !7919
  %call85 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %43, i32 %conv84) #13, !dbg !7919
  br label %if.end96, !dbg !7919

if.else86:                                        ; preds = %land.lhs.true80, %if.else77
  %45 = load i32, i32* @verbose, align 4, !dbg !7921
  %cmp87 = icmp ugt i32 %45, 3, !dbg !7921
  br i1 %cmp87, label %land.lhs.true89, label %if.end95, !dbg !7921

land.lhs.true89:                                  ; preds = %if.else86
  %46 = load i32, i32* @verbose, align 4, !dbg !7921
  %cmp90 = icmp ugt i32 %46, 0, !dbg !7921
  br i1 %cmp90, label %if.then92, label %if.end95, !dbg !7919

if.then92:                                        ; preds = %land.lhs.true89
  %47 = load i32, i32* %reg.addr, align 4, !dbg !7921
  %48 = load i8, i8* %buf, align 1, !dbg !7921
  %conv93 = zext i8 %48 to i32, !dbg !7921
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__.stv090x_read_reg, i64 0, i64 0), i32 %47, i32 %conv93) #13, !dbg !7921
  br label %if.end95, !dbg !7921

if.end95:                                         ; preds = %if.then92, %land.lhs.true89, %if.else86
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then83
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then74
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then65
  br label %do.end99, !dbg !7923

do.end99:                                         ; preds = %if.end98
  br label %if.end100, !dbg !7923

if.end100:                                        ; preds = %do.end99, %if.end53
  %49 = load i8, i8* %buf, align 1, !dbg !7924
  %conv101 = zext i8 %49 to i32, !dbg !7925
  store i32 %conv101, i32* %retval, align 4, !dbg !7926
  br label %return, !dbg !7926

return:                                           ; preds = %if.end100, %cond.end
  %50 = load i32, i32* %retval, align 4, !dbg !7927
  ret i32 %50, !dbg !7927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv0900_set_tspath(%struct.stv090x_state* %state) #0 !dbg !7928 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %speed = alloca i32, align 4
  %speed325 = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !7929, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !7931, metadata !DIExpression()), !dbg !7932
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7933
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 3, !dbg !7935
  %1 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !7935
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %1, i32 0, i32 5, !dbg !7936
  %2 = load i32, i32* %dev_ver, align 4, !dbg !7936
  %cmp = icmp uge i32 %2, 32, !dbg !7937
  br i1 %cmp, label %if.then, label %if.else, !dbg !7938

if.then:                                          ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7939
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 5, !dbg !7941
  %4 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !7941
  %ts1_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %4, i32 0, i32 6, !dbg !7942
  %5 = load i8, i8* %ts1_mode, align 1, !dbg !7942
  %conv = zext i8 %5 to i32, !dbg !7939
  switch i32 %conv, label %sw.default36 [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb35
    i32 2, label %sw.bb35
  ], !dbg !7943

sw.bb:                                            ; preds = %if.then, %if.then
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7944
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 5, !dbg !7946
  %7 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !7946
  %ts2_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %7, i32 0, i32 7, !dbg !7947
  %8 = load i8, i8* %ts2_mode, align 2, !dbg !7947
  %conv2 = zext i8 %8 to i32, !dbg !7944
  switch i32 %conv2, label %sw.default [
    i32 1, label %sw.bb3
    i32 2, label %sw.bb3
    i32 3, label %sw.bb4
    i32 4, label %sw.bb4
  ], !dbg !7948

sw.bb3:                                           ; preds = %sw.bb, %sw.bb
  br label %sw.default, !dbg !7949

sw.default:                                       ; preds = %sw.bb, %sw.bb3
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7950
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 63024, i8 zeroext 0) #9, !dbg !7952
  br label %sw.epilog, !dbg !7953

sw.bb4:                                           ; preds = %sw.bb, %sw.bb
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7954
  %call5 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 63024, i8 zeroext 6) #9, !dbg !7956
  %cmp6 = icmp slt i32 %call5, 0, !dbg !7957
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !7958

if.then8:                                         ; preds = %sw.bb4
  br label %err, !dbg !7959

if.end:                                           ; preds = %sw.bb4
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7960
  %call9 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62835) #9, !dbg !7961
  store i32 %call9, i32* %reg, align 4, !dbg !7962
  %12 = load i32, i32* %reg, align 4, !dbg !7963
  %and = and i32 %12, -193, !dbg !7963
  %or = or i32 %and, 192, !dbg !7963
  store i32 %or, i32* %reg, align 4, !dbg !7963
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7964
  %14 = load i32, i32* %reg, align 4, !dbg !7966
  %conv10 = trunc i32 %14 to i8, !dbg !7966
  %call11 = call i32 @stv090x_write_reg(%struct.stv090x_state* %13, i32 62835, i8 zeroext %conv10) #9, !dbg !7967
  %cmp12 = icmp slt i32 %call11, 0, !dbg !7968
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !7969

if.then14:                                        ; preds = %if.end
  br label %err, !dbg !7970

if.end15:                                         ; preds = %if.end
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7971
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %15, i32 62323) #9, !dbg !7972
  store i32 %call16, i32* %reg, align 4, !dbg !7973
  %16 = load i32, i32* %reg, align 4, !dbg !7974
  %and17 = and i32 %16, -193, !dbg !7974
  %or18 = or i32 %and17, 192, !dbg !7974
  store i32 %or18, i32* %reg, align 4, !dbg !7974
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7975
  %18 = load i32, i32* %reg, align 4, !dbg !7977
  %conv19 = trunc i32 %18 to i8, !dbg !7977
  %call20 = call i32 @stv090x_write_reg(%struct.stv090x_state* %17, i32 62323, i8 zeroext %conv19) #9, !dbg !7978
  %cmp21 = icmp slt i32 %call20, 0, !dbg !7979
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !7980

if.then23:                                        ; preds = %if.end15
  br label %err, !dbg !7981

if.end24:                                         ; preds = %if.end15
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7982
  %call25 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62848, i8 zeroext 20) #9, !dbg !7984
  %cmp26 = icmp slt i32 %call25, 0, !dbg !7985
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !7986

if.then28:                                        ; preds = %if.end24
  br label %err, !dbg !7987

if.end29:                                         ; preds = %if.end24
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7988
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62336, i8 zeroext 40) #9, !dbg !7990
  %cmp31 = icmp slt i32 %call30, 0, !dbg !7991
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !7992

if.then33:                                        ; preds = %if.end29
  br label %err, !dbg !7993

if.end34:                                         ; preds = %if.end29
  br label %sw.epilog, !dbg !7994

sw.epilog:                                        ; preds = %if.end34, %sw.default
  br label %sw.epilog54, !dbg !7995

sw.bb35:                                          ; preds = %if.then, %if.then
  br label %sw.default36, !dbg !7995

sw.default36:                                     ; preds = %if.then, %sw.bb35
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !7996
  %config37 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 5, !dbg !7997
  %22 = load %struct.stv090x_config*, %struct.stv090x_config** %config37, align 8, !dbg !7997
  %ts2_mode38 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %22, i32 0, i32 7, !dbg !7998
  %23 = load i8, i8* %ts2_mode38, align 2, !dbg !7998
  %conv39 = zext i8 %23 to i32, !dbg !7996
  switch i32 %conv39, label %sw.default41 [
    i32 1, label %sw.bb40
    i32 2, label %sw.bb40
    i32 3, label %sw.bb47
    i32 4, label %sw.bb47
  ], !dbg !7999

sw.bb40:                                          ; preds = %sw.default36, %sw.default36
  br label %sw.default41, !dbg !8000

sw.default41:                                     ; preds = %sw.default36, %sw.bb40
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8001
  %call42 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 63024, i8 zeroext 12) #9, !dbg !8004
  %cmp43 = icmp slt i32 %call42, 0, !dbg !8005
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !8006

if.then45:                                        ; preds = %sw.default41
  br label %err, !dbg !8007

if.end46:                                         ; preds = %sw.default41
  br label %sw.epilog53, !dbg !8008

sw.bb47:                                          ; preds = %sw.default36, %sw.default36
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8009
  %call48 = call i32 @stv090x_write_reg(%struct.stv090x_state* %25, i32 63024, i8 zeroext 10) #9, !dbg !8011
  %cmp49 = icmp slt i32 %call48, 0, !dbg !8012
  br i1 %cmp49, label %if.then51, label %if.end52, !dbg !8013

if.then51:                                        ; preds = %sw.bb47
  br label %err, !dbg !8014

if.end52:                                         ; preds = %sw.bb47
  br label %sw.epilog53, !dbg !8015

sw.epilog53:                                      ; preds = %if.end52, %if.end46
  br label %sw.epilog54, !dbg !8016

sw.epilog54:                                      ; preds = %sw.epilog53, %sw.epilog
  br label %if.end107, !dbg !8017

if.else:                                          ; preds = %entry
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8018
  %config55 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 5, !dbg !8020
  %27 = load %struct.stv090x_config*, %struct.stv090x_config** %config55, align 8, !dbg !8020
  %ts1_mode56 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %27, i32 0, i32 6, !dbg !8021
  %28 = load i8, i8* %ts1_mode56, align 1, !dbg !8021
  %conv57 = zext i8 %28 to i32, !dbg !8018
  switch i32 %conv57, label %sw.default96 [
    i32 3, label %sw.bb58
    i32 4, label %sw.bb58
    i32 1, label %sw.bb95
    i32 2, label %sw.bb95
  ], !dbg !8022

sw.bb58:                                          ; preds = %if.else, %if.else
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8023
  %config59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %29, i32 0, i32 5, !dbg !8025
  %30 = load %struct.stv090x_config*, %struct.stv090x_config** %config59, align 8, !dbg !8025
  %ts2_mode60 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %30, i32 0, i32 7, !dbg !8026
  %31 = load i8, i8* %ts2_mode60, align 2, !dbg !8026
  %conv61 = zext i8 %31 to i32, !dbg !8023
  switch i32 %conv61, label %sw.default63 [
    i32 1, label %sw.bb62
    i32 2, label %sw.bb62
    i32 3, label %sw.bb65
    i32 4, label %sw.bb65
  ], !dbg !8027

sw.bb62:                                          ; preds = %sw.bb58, %sw.bb58
  br label %sw.default63, !dbg !8028

sw.default63:                                     ; preds = %sw.bb58, %sw.bb62
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8029
  %call64 = call i32 @stv090x_write_reg(%struct.stv090x_state* %32, i32 63088, i8 zeroext 16) #9, !dbg !8031
  br label %sw.epilog94, !dbg !8032

sw.bb65:                                          ; preds = %sw.bb58, %sw.bb58
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8033
  %call66 = call i32 @stv090x_write_reg(%struct.stv090x_state* %33, i32 63088, i8 zeroext 22) #9, !dbg !8034
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8035
  %call67 = call i32 @stv090x_read_reg(%struct.stv090x_state* %34, i32 62835) #9, !dbg !8036
  store i32 %call67, i32* %reg, align 4, !dbg !8037
  %35 = load i32, i32* %reg, align 4, !dbg !8038
  %and68 = and i32 %35, -193, !dbg !8038
  %or69 = or i32 %and68, 192, !dbg !8038
  store i32 %or69, i32* %reg, align 4, !dbg !8038
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8039
  %37 = load i32, i32* %reg, align 4, !dbg !8041
  %conv70 = trunc i32 %37 to i8, !dbg !8041
  %call71 = call i32 @stv090x_write_reg(%struct.stv090x_state* %36, i32 62835, i8 zeroext %conv70) #9, !dbg !8042
  %cmp72 = icmp slt i32 %call71, 0, !dbg !8043
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8044

if.then74:                                        ; preds = %sw.bb65
  br label %err, !dbg !8045

if.end75:                                         ; preds = %sw.bb65
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8046
  %call76 = call i32 @stv090x_read_reg(%struct.stv090x_state* %38, i32 62835) #9, !dbg !8047
  store i32 %call76, i32* %reg, align 4, !dbg !8048
  %39 = load i32, i32* %reg, align 4, !dbg !8049
  %and77 = and i32 %39, -193, !dbg !8049
  store i32 %and77, i32* %reg, align 4, !dbg !8049
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8050
  %41 = load i32, i32* %reg, align 4, !dbg !8052
  %conv78 = trunc i32 %41 to i8, !dbg !8052
  %call79 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 62835, i8 zeroext %conv78) #9, !dbg !8053
  %cmp80 = icmp slt i32 %call79, 0, !dbg !8054
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !8055

if.then82:                                        ; preds = %if.end75
  br label %err, !dbg !8056

if.end83:                                         ; preds = %if.end75
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8057
  %call84 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62848, i8 zeroext 20) #9, !dbg !8059
  %cmp85 = icmp slt i32 %call84, 0, !dbg !8060
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !8061

if.then87:                                        ; preds = %if.end83
  br label %err, !dbg !8062

if.end88:                                         ; preds = %if.end83
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8063
  %call89 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62336, i8 zeroext 40) #9, !dbg !8065
  %cmp90 = icmp slt i32 %call89, 0, !dbg !8066
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !8067

if.then92:                                        ; preds = %if.end88
  br label %err, !dbg !8068

if.end93:                                         ; preds = %if.end88
  br label %sw.epilog94, !dbg !8069

sw.epilog94:                                      ; preds = %if.end93, %sw.default63
  br label %sw.epilog106, !dbg !8070

sw.bb95:                                          ; preds = %if.else, %if.else
  br label %sw.default96, !dbg !8070

sw.default96:                                     ; preds = %if.else, %sw.bb95
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8071
  %config97 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 5, !dbg !8072
  %45 = load %struct.stv090x_config*, %struct.stv090x_config** %config97, align 8, !dbg !8072
  %ts2_mode98 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %45, i32 0, i32 7, !dbg !8073
  %46 = load i8, i8* %ts2_mode98, align 2, !dbg !8073
  %conv99 = zext i8 %46 to i32, !dbg !8071
  switch i32 %conv99, label %sw.default101 [
    i32 1, label %sw.bb100
    i32 2, label %sw.bb100
    i32 3, label %sw.bb103
    i32 4, label %sw.bb103
  ], !dbg !8074

sw.bb100:                                         ; preds = %sw.default96, %sw.default96
  br label %sw.default101, !dbg !8075

sw.default101:                                    ; preds = %sw.default96, %sw.bb100
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8076
  %call102 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 63088, i8 zeroext 20) #9, !dbg !8078
  br label %sw.epilog105, !dbg !8079

sw.bb103:                                         ; preds = %sw.default96, %sw.default96
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8080
  %call104 = call i32 @stv090x_write_reg(%struct.stv090x_state* %48, i32 63088, i8 zeroext 18) #9, !dbg !8081
  br label %sw.epilog105, !dbg !8082

sw.epilog105:                                     ; preds = %sw.bb103, %sw.default101
  br label %sw.epilog106, !dbg !8083

sw.epilog106:                                     ; preds = %sw.epilog105, %sw.epilog94
  br label %if.end107

if.end107:                                        ; preds = %sw.epilog106, %sw.epilog54
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8084
  %config108 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %49, i32 0, i32 5, !dbg !8085
  %50 = load %struct.stv090x_config*, %struct.stv090x_config** %config108, align 8, !dbg !8085
  %ts1_mode109 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %50, i32 0, i32 6, !dbg !8086
  %51 = load i8, i8* %ts1_mode109, align 1, !dbg !8086
  %conv110 = zext i8 %51 to i32, !dbg !8084
  switch i32 %conv110, label %sw.default183 [
    i32 3, label %sw.bb111
    i32 4, label %sw.bb125
    i32 1, label %sw.bb144
    i32 2, label %sw.bb163
  ], !dbg !8087

sw.bb111:                                         ; preds = %if.end107
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8088
  %call112 = call i32 @stv090x_read_reg(%struct.stv090x_state* %52, i32 62834) #9, !dbg !8090
  store i32 %call112, i32* %reg, align 4, !dbg !8091
  %53 = load i32, i32* %reg, align 4, !dbg !8092
  %and113 = and i32 %53, -33, !dbg !8092
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8092
  %config114 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 5, !dbg !8092
  %55 = load %struct.stv090x_config*, %struct.stv090x_config** %config114, align 8, !dbg !8092
  %ts1_tei = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %55, i32 0, i32 10, !dbg !8092
  %bf.load = load i8, i8* %ts1_tei, align 8, !dbg !8092
  %bf.clear = and i8 %bf.load, 1, !dbg !8092
  %conv115 = zext i8 %bf.clear to i32, !dbg !8092
  %shl = shl i32 %conv115, 5, !dbg !8092
  %or116 = or i32 %and113, %shl, !dbg !8092
  store i32 %or116, i32* %reg, align 4, !dbg !8092
  %56 = load i32, i32* %reg, align 4, !dbg !8093
  %and117 = and i32 %56, -65, !dbg !8093
  store i32 %and117, i32* %reg, align 4, !dbg !8093
  %57 = load i32, i32* %reg, align 4, !dbg !8094
  %and118 = and i32 %57, -129, !dbg !8094
  store i32 %and118, i32* %reg, align 4, !dbg !8094
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8095
  %59 = load i32, i32* %reg, align 4, !dbg !8097
  %conv119 = trunc i32 %59 to i8, !dbg !8097
  %call120 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62834, i8 zeroext %conv119) #9, !dbg !8098
  %cmp121 = icmp slt i32 %call120, 0, !dbg !8099
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !8100

if.then123:                                       ; preds = %sw.bb111
  br label %err, !dbg !8101

if.end124:                                        ; preds = %sw.bb111
  br label %sw.epilog184, !dbg !8102

sw.bb125:                                         ; preds = %if.end107
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8103
  %call126 = call i32 @stv090x_read_reg(%struct.stv090x_state* %60, i32 62834) #9, !dbg !8104
  store i32 %call126, i32* %reg, align 4, !dbg !8105
  %61 = load i32, i32* %reg, align 4, !dbg !8106
  %and127 = and i32 %61, -33, !dbg !8106
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8106
  %config128 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %62, i32 0, i32 5, !dbg !8106
  %63 = load %struct.stv090x_config*, %struct.stv090x_config** %config128, align 8, !dbg !8106
  %ts1_tei129 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %63, i32 0, i32 10, !dbg !8106
  %bf.load130 = load i8, i8* %ts1_tei129, align 8, !dbg !8106
  %bf.clear131 = and i8 %bf.load130, 1, !dbg !8106
  %conv132 = zext i8 %bf.clear131 to i32, !dbg !8106
  %shl133 = shl i32 %conv132, 5, !dbg !8106
  %or134 = or i32 %and127, %shl133, !dbg !8106
  store i32 %or134, i32* %reg, align 4, !dbg !8106
  %64 = load i32, i32* %reg, align 4, !dbg !8107
  %and135 = and i32 %64, -65, !dbg !8107
  store i32 %and135, i32* %reg, align 4, !dbg !8107
  %65 = load i32, i32* %reg, align 4, !dbg !8108
  %and136 = and i32 %65, -129, !dbg !8108
  %or137 = or i32 %and136, 128, !dbg !8108
  store i32 %or137, i32* %reg, align 4, !dbg !8108
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8109
  %67 = load i32, i32* %reg, align 4, !dbg !8111
  %conv138 = trunc i32 %67 to i8, !dbg !8111
  %call139 = call i32 @stv090x_write_reg(%struct.stv090x_state* %66, i32 62834, i8 zeroext %conv138) #9, !dbg !8112
  %cmp140 = icmp slt i32 %call139, 0, !dbg !8113
  br i1 %cmp140, label %if.then142, label %if.end143, !dbg !8114

if.then142:                                       ; preds = %sw.bb125
  br label %err, !dbg !8115

if.end143:                                        ; preds = %sw.bb125
  br label %sw.epilog184, !dbg !8116

sw.bb144:                                         ; preds = %if.end107
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8117
  %call145 = call i32 @stv090x_read_reg(%struct.stv090x_state* %68, i32 62834) #9, !dbg !8118
  store i32 %call145, i32* %reg, align 4, !dbg !8119
  %69 = load i32, i32* %reg, align 4, !dbg !8120
  %and146 = and i32 %69, -33, !dbg !8120
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8120
  %config147 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %70, i32 0, i32 5, !dbg !8120
  %71 = load %struct.stv090x_config*, %struct.stv090x_config** %config147, align 8, !dbg !8120
  %ts1_tei148 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %71, i32 0, i32 10, !dbg !8120
  %bf.load149 = load i8, i8* %ts1_tei148, align 8, !dbg !8120
  %bf.clear150 = and i8 %bf.load149, 1, !dbg !8120
  %conv151 = zext i8 %bf.clear150 to i32, !dbg !8120
  %shl152 = shl i32 %conv151, 5, !dbg !8120
  %or153 = or i32 %and146, %shl152, !dbg !8120
  store i32 %or153, i32* %reg, align 4, !dbg !8120
  %72 = load i32, i32* %reg, align 4, !dbg !8121
  %and154 = and i32 %72, -65, !dbg !8121
  %or155 = or i32 %and154, 64, !dbg !8121
  store i32 %or155, i32* %reg, align 4, !dbg !8121
  %73 = load i32, i32* %reg, align 4, !dbg !8122
  %and156 = and i32 %73, -129, !dbg !8122
  store i32 %and156, i32* %reg, align 4, !dbg !8122
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8123
  %75 = load i32, i32* %reg, align 4, !dbg !8125
  %conv157 = trunc i32 %75 to i8, !dbg !8125
  %call158 = call i32 @stv090x_write_reg(%struct.stv090x_state* %74, i32 62834, i8 zeroext %conv157) #9, !dbg !8126
  %cmp159 = icmp slt i32 %call158, 0, !dbg !8127
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !8128

if.then161:                                       ; preds = %sw.bb144
  br label %err, !dbg !8129

if.end162:                                        ; preds = %sw.bb144
  br label %sw.epilog184, !dbg !8130

sw.bb163:                                         ; preds = %if.end107
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8131
  %call164 = call i32 @stv090x_read_reg(%struct.stv090x_state* %76, i32 62834) #9, !dbg !8132
  store i32 %call164, i32* %reg, align 4, !dbg !8133
  %77 = load i32, i32* %reg, align 4, !dbg !8134
  %and165 = and i32 %77, -33, !dbg !8134
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8134
  %config166 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %78, i32 0, i32 5, !dbg !8134
  %79 = load %struct.stv090x_config*, %struct.stv090x_config** %config166, align 8, !dbg !8134
  %ts1_tei167 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %79, i32 0, i32 10, !dbg !8134
  %bf.load168 = load i8, i8* %ts1_tei167, align 8, !dbg !8134
  %bf.clear169 = and i8 %bf.load168, 1, !dbg !8134
  %conv170 = zext i8 %bf.clear169 to i32, !dbg !8134
  %shl171 = shl i32 %conv170, 5, !dbg !8134
  %or172 = or i32 %and165, %shl171, !dbg !8134
  store i32 %or172, i32* %reg, align 4, !dbg !8134
  %80 = load i32, i32* %reg, align 4, !dbg !8135
  %and173 = and i32 %80, -65, !dbg !8135
  %or174 = or i32 %and173, 64, !dbg !8135
  store i32 %or174, i32* %reg, align 4, !dbg !8135
  %81 = load i32, i32* %reg, align 4, !dbg !8136
  %and175 = and i32 %81, -129, !dbg !8136
  %or176 = or i32 %and175, 128, !dbg !8136
  store i32 %or176, i32* %reg, align 4, !dbg !8136
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8137
  %83 = load i32, i32* %reg, align 4, !dbg !8139
  %conv177 = trunc i32 %83 to i8, !dbg !8139
  %call178 = call i32 @stv090x_write_reg(%struct.stv090x_state* %82, i32 62834, i8 zeroext %conv177) #9, !dbg !8140
  %cmp179 = icmp slt i32 %call178, 0, !dbg !8141
  br i1 %cmp179, label %if.then181, label %if.end182, !dbg !8142

if.then181:                                       ; preds = %sw.bb163
  br label %err, !dbg !8143

if.end182:                                        ; preds = %sw.bb163
  br label %sw.epilog184, !dbg !8144

sw.default183:                                    ; preds = %if.end107
  br label %sw.epilog184, !dbg !8145

sw.epilog184:                                     ; preds = %sw.default183, %if.end182, %if.end162, %if.end143, %if.end124
  %84 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8146
  %config185 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %84, i32 0, i32 5, !dbg !8147
  %85 = load %struct.stv090x_config*, %struct.stv090x_config** %config185, align 8, !dbg !8147
  %ts2_mode186 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %85, i32 0, i32 7, !dbg !8148
  %86 = load i8, i8* %ts2_mode186, align 2, !dbg !8148
  %conv187 = zext i8 %86 to i32, !dbg !8146
  switch i32 %conv187, label %sw.default266 [
    i32 3, label %sw.bb188
    i32 4, label %sw.bb205
    i32 1, label %sw.bb225
    i32 2, label %sw.bb245
  ], !dbg !8149

sw.bb188:                                         ; preds = %sw.epilog184
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8150
  %call189 = call i32 @stv090x_read_reg(%struct.stv090x_state* %87, i32 62322) #9, !dbg !8152
  store i32 %call189, i32* %reg, align 4, !dbg !8153
  %88 = load i32, i32* %reg, align 4, !dbg !8154
  %and190 = and i32 %88, -33, !dbg !8154
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8154
  %config191 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %89, i32 0, i32 5, !dbg !8154
  %90 = load %struct.stv090x_config*, %struct.stv090x_config** %config191, align 8, !dbg !8154
  %ts2_tei = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %90, i32 0, i32 10, !dbg !8154
  %bf.load192 = load i8, i8* %ts2_tei, align 8, !dbg !8154
  %bf.lshr = lshr i8 %bf.load192, 1, !dbg !8154
  %bf.clear193 = and i8 %bf.lshr, 1, !dbg !8154
  %conv194 = zext i8 %bf.clear193 to i32, !dbg !8154
  %shl195 = shl i32 %conv194, 5, !dbg !8154
  %or196 = or i32 %and190, %shl195, !dbg !8154
  store i32 %or196, i32* %reg, align 4, !dbg !8154
  %91 = load i32, i32* %reg, align 4, !dbg !8155
  %and197 = and i32 %91, -65, !dbg !8155
  store i32 %and197, i32* %reg, align 4, !dbg !8155
  %92 = load i32, i32* %reg, align 4, !dbg !8156
  %and198 = and i32 %92, -129, !dbg !8156
  store i32 %and198, i32* %reg, align 4, !dbg !8156
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8157
  %94 = load i32, i32* %reg, align 4, !dbg !8159
  %conv199 = trunc i32 %94 to i8, !dbg !8159
  %call200 = call i32 @stv090x_write_reg(%struct.stv090x_state* %93, i32 62322, i8 zeroext %conv199) #9, !dbg !8160
  %cmp201 = icmp slt i32 %call200, 0, !dbg !8161
  br i1 %cmp201, label %if.then203, label %if.end204, !dbg !8162

if.then203:                                       ; preds = %sw.bb188
  br label %err, !dbg !8163

if.end204:                                        ; preds = %sw.bb188
  br label %sw.epilog267, !dbg !8164

sw.bb205:                                         ; preds = %sw.epilog184
  %95 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8165
  %call206 = call i32 @stv090x_read_reg(%struct.stv090x_state* %95, i32 62322) #9, !dbg !8166
  store i32 %call206, i32* %reg, align 4, !dbg !8167
  %96 = load i32, i32* %reg, align 4, !dbg !8168
  %and207 = and i32 %96, -33, !dbg !8168
  %97 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8168
  %config208 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %97, i32 0, i32 5, !dbg !8168
  %98 = load %struct.stv090x_config*, %struct.stv090x_config** %config208, align 8, !dbg !8168
  %ts2_tei209 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %98, i32 0, i32 10, !dbg !8168
  %bf.load210 = load i8, i8* %ts2_tei209, align 8, !dbg !8168
  %bf.lshr211 = lshr i8 %bf.load210, 1, !dbg !8168
  %bf.clear212 = and i8 %bf.lshr211, 1, !dbg !8168
  %conv213 = zext i8 %bf.clear212 to i32, !dbg !8168
  %shl214 = shl i32 %conv213, 5, !dbg !8168
  %or215 = or i32 %and207, %shl214, !dbg !8168
  store i32 %or215, i32* %reg, align 4, !dbg !8168
  %99 = load i32, i32* %reg, align 4, !dbg !8169
  %and216 = and i32 %99, -65, !dbg !8169
  store i32 %and216, i32* %reg, align 4, !dbg !8169
  %100 = load i32, i32* %reg, align 4, !dbg !8170
  %and217 = and i32 %100, -129, !dbg !8170
  %or218 = or i32 %and217, 128, !dbg !8170
  store i32 %or218, i32* %reg, align 4, !dbg !8170
  %101 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8171
  %102 = load i32, i32* %reg, align 4, !dbg !8173
  %conv219 = trunc i32 %102 to i8, !dbg !8173
  %call220 = call i32 @stv090x_write_reg(%struct.stv090x_state* %101, i32 62322, i8 zeroext %conv219) #9, !dbg !8174
  %cmp221 = icmp slt i32 %call220, 0, !dbg !8175
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !8176

if.then223:                                       ; preds = %sw.bb205
  br label %err, !dbg !8177

if.end224:                                        ; preds = %sw.bb205
  br label %sw.epilog267, !dbg !8178

sw.bb225:                                         ; preds = %sw.epilog184
  %103 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8179
  %call226 = call i32 @stv090x_read_reg(%struct.stv090x_state* %103, i32 62322) #9, !dbg !8180
  store i32 %call226, i32* %reg, align 4, !dbg !8181
  %104 = load i32, i32* %reg, align 4, !dbg !8182
  %and227 = and i32 %104, -33, !dbg !8182
  %105 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8182
  %config228 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %105, i32 0, i32 5, !dbg !8182
  %106 = load %struct.stv090x_config*, %struct.stv090x_config** %config228, align 8, !dbg !8182
  %ts2_tei229 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %106, i32 0, i32 10, !dbg !8182
  %bf.load230 = load i8, i8* %ts2_tei229, align 8, !dbg !8182
  %bf.lshr231 = lshr i8 %bf.load230, 1, !dbg !8182
  %bf.clear232 = and i8 %bf.lshr231, 1, !dbg !8182
  %conv233 = zext i8 %bf.clear232 to i32, !dbg !8182
  %shl234 = shl i32 %conv233, 5, !dbg !8182
  %or235 = or i32 %and227, %shl234, !dbg !8182
  store i32 %or235, i32* %reg, align 4, !dbg !8182
  %107 = load i32, i32* %reg, align 4, !dbg !8183
  %and236 = and i32 %107, -65, !dbg !8183
  %or237 = or i32 %and236, 64, !dbg !8183
  store i32 %or237, i32* %reg, align 4, !dbg !8183
  %108 = load i32, i32* %reg, align 4, !dbg !8184
  %and238 = and i32 %108, -129, !dbg !8184
  store i32 %and238, i32* %reg, align 4, !dbg !8184
  %109 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8185
  %110 = load i32, i32* %reg, align 4, !dbg !8187
  %conv239 = trunc i32 %110 to i8, !dbg !8187
  %call240 = call i32 @stv090x_write_reg(%struct.stv090x_state* %109, i32 62322, i8 zeroext %conv239) #9, !dbg !8188
  %cmp241 = icmp slt i32 %call240, 0, !dbg !8189
  br i1 %cmp241, label %if.then243, label %if.end244, !dbg !8190

if.then243:                                       ; preds = %sw.bb225
  br label %err, !dbg !8191

if.end244:                                        ; preds = %sw.bb225
  br label %sw.epilog267, !dbg !8192

sw.bb245:                                         ; preds = %sw.epilog184
  %111 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8193
  %call246 = call i32 @stv090x_read_reg(%struct.stv090x_state* %111, i32 62322) #9, !dbg !8194
  store i32 %call246, i32* %reg, align 4, !dbg !8195
  %112 = load i32, i32* %reg, align 4, !dbg !8196
  %and247 = and i32 %112, -33, !dbg !8196
  %113 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8196
  %config248 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %113, i32 0, i32 5, !dbg !8196
  %114 = load %struct.stv090x_config*, %struct.stv090x_config** %config248, align 8, !dbg !8196
  %ts2_tei249 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %114, i32 0, i32 10, !dbg !8196
  %bf.load250 = load i8, i8* %ts2_tei249, align 8, !dbg !8196
  %bf.lshr251 = lshr i8 %bf.load250, 1, !dbg !8196
  %bf.clear252 = and i8 %bf.lshr251, 1, !dbg !8196
  %conv253 = zext i8 %bf.clear252 to i32, !dbg !8196
  %shl254 = shl i32 %conv253, 5, !dbg !8196
  %or255 = or i32 %and247, %shl254, !dbg !8196
  store i32 %or255, i32* %reg, align 4, !dbg !8196
  %115 = load i32, i32* %reg, align 4, !dbg !8197
  %and256 = and i32 %115, -65, !dbg !8197
  %or257 = or i32 %and256, 64, !dbg !8197
  store i32 %or257, i32* %reg, align 4, !dbg !8197
  %116 = load i32, i32* %reg, align 4, !dbg !8198
  %and258 = and i32 %116, -129, !dbg !8198
  %or259 = or i32 %and258, 128, !dbg !8198
  store i32 %or259, i32* %reg, align 4, !dbg !8198
  %117 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8199
  %118 = load i32, i32* %reg, align 4, !dbg !8201
  %conv260 = trunc i32 %118 to i8, !dbg !8201
  %call261 = call i32 @stv090x_write_reg(%struct.stv090x_state* %117, i32 62322, i8 zeroext %conv260) #9, !dbg !8202
  %cmp262 = icmp slt i32 %call261, 0, !dbg !8203
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !8204

if.then264:                                       ; preds = %sw.bb245
  br label %err, !dbg !8205

if.end265:                                        ; preds = %sw.bb245
  br label %sw.epilog267, !dbg !8206

sw.default266:                                    ; preds = %sw.epilog184
  br label %sw.epilog267, !dbg !8207

sw.epilog267:                                     ; preds = %sw.default266, %if.end265, %if.end244, %if.end224, %if.end204
  %119 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8208
  %config268 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %119, i32 0, i32 5, !dbg !8210
  %120 = load %struct.stv090x_config*, %struct.stv090x_config** %config268, align 8, !dbg !8210
  %ts1_clk = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %120, i32 0, i32 8, !dbg !8211
  %121 = load i32, i32* %ts1_clk, align 8, !dbg !8211
  %cmp269 = icmp ugt i32 %121, 0, !dbg !8212
  br i1 %cmp269, label %if.then271, label %if.end320, !dbg !8213

if.then271:                                       ; preds = %sw.epilog267
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !8214, metadata !DIExpression()), !dbg !8216
  %122 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8217
  %config272 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %122, i32 0, i32 5, !dbg !8218
  %123 = load %struct.stv090x_config*, %struct.stv090x_config** %config272, align 8, !dbg !8218
  %ts1_mode273 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %123, i32 0, i32 6, !dbg !8219
  %124 = load i8, i8* %ts1_mode273, align 1, !dbg !8219
  %conv274 = zext i8 %124 to i32, !dbg !8217
  switch i32 %conv274, label %sw.default276 [
    i32 3, label %sw.bb275
    i32 4, label %sw.bb275
    i32 1, label %sw.bb289
    i32 2, label %sw.bb289
  ], !dbg !8220

sw.bb275:                                         ; preds = %if.then271, %if.then271
  br label %sw.default276, !dbg !8221

sw.default276:                                    ; preds = %if.then271, %sw.bb275
  %125 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8222
  %internal277 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %125, i32 0, i32 3, !dbg !8224
  %126 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal277, align 8, !dbg !8224
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %126, i32 0, i32 4, !dbg !8225
  %127 = load i32, i32* %mclk, align 8, !dbg !8225
  %128 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8226
  %config278 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %128, i32 0, i32 5, !dbg !8227
  %129 = load %struct.stv090x_config*, %struct.stv090x_config** %config278, align 8, !dbg !8227
  %ts1_clk279 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %129, i32 0, i32 8, !dbg !8228
  %130 = load i32, i32* %ts1_clk279, align 8, !dbg !8228
  %div = udiv i32 %130, 4, !dbg !8229
  %div280 = udiv i32 %127, %div, !dbg !8230
  store i32 %div280, i32* %speed, align 4, !dbg !8231
  %131 = load i32, i32* %speed, align 4, !dbg !8232
  %cmp281 = icmp ult i32 %131, 8, !dbg !8234
  br i1 %cmp281, label %if.then283, label %if.end284, !dbg !8235

if.then283:                                       ; preds = %sw.default276
  store i32 8, i32* %speed, align 4, !dbg !8236
  br label %if.end284, !dbg !8237

if.end284:                                        ; preds = %if.then283, %sw.default276
  %132 = load i32, i32* %speed, align 4, !dbg !8238
  %cmp285 = icmp ugt i32 %132, 255, !dbg !8240
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !8241

if.then287:                                       ; preds = %if.end284
  store i32 255, i32* %speed, align 4, !dbg !8242
  br label %if.end288, !dbg !8243

if.end288:                                        ; preds = %if.then287, %if.end284
  br label %sw.epilog304, !dbg !8244

sw.bb289:                                         ; preds = %if.then271, %if.then271
  %133 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8245
  %internal290 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %133, i32 0, i32 3, !dbg !8246
  %134 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal290, align 8, !dbg !8246
  %mclk291 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %134, i32 0, i32 4, !dbg !8247
  %135 = load i32, i32* %mclk291, align 8, !dbg !8247
  %136 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8248
  %config292 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %136, i32 0, i32 5, !dbg !8249
  %137 = load %struct.stv090x_config*, %struct.stv090x_config** %config292, align 8, !dbg !8249
  %ts1_clk293 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %137, i32 0, i32 8, !dbg !8250
  %138 = load i32, i32* %ts1_clk293, align 8, !dbg !8250
  %div294 = udiv i32 %138, 32, !dbg !8251
  %div295 = udiv i32 %135, %div294, !dbg !8252
  store i32 %div295, i32* %speed, align 4, !dbg !8253
  %139 = load i32, i32* %speed, align 4, !dbg !8254
  %cmp296 = icmp ult i32 %139, 32, !dbg !8256
  br i1 %cmp296, label %if.then298, label %if.end299, !dbg !8257

if.then298:                                       ; preds = %sw.bb289
  store i32 32, i32* %speed, align 4, !dbg !8258
  br label %if.end299, !dbg !8259

if.end299:                                        ; preds = %if.then298, %sw.bb289
  %140 = load i32, i32* %speed, align 4, !dbg !8260
  %cmp300 = icmp ugt i32 %140, 255, !dbg !8262
  br i1 %cmp300, label %if.then302, label %if.end303, !dbg !8263

if.then302:                                       ; preds = %if.end299
  store i32 255, i32* %speed, align 4, !dbg !8264
  br label %if.end303, !dbg !8265

if.end303:                                        ; preds = %if.then302, %if.end299
  br label %sw.epilog304, !dbg !8266

sw.epilog304:                                     ; preds = %if.end303, %if.end288
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8267
  %call305 = call i32 @stv090x_read_reg(%struct.stv090x_state* %141, i32 62835) #9, !dbg !8268
  store i32 %call305, i32* %reg, align 4, !dbg !8269
  %142 = load i32, i32* %reg, align 4, !dbg !8270
  %and306 = and i32 %142, -193, !dbg !8270
  %or307 = or i32 %and306, 192, !dbg !8270
  store i32 %or307, i32* %reg, align 4, !dbg !8270
  %143 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8271
  %144 = load i32, i32* %reg, align 4, !dbg !8273
  %conv308 = trunc i32 %144 to i8, !dbg !8273
  %call309 = call i32 @stv090x_write_reg(%struct.stv090x_state* %143, i32 62835, i8 zeroext %conv308) #9, !dbg !8274
  %cmp310 = icmp slt i32 %call309, 0, !dbg !8275
  br i1 %cmp310, label %if.then312, label %if.end313, !dbg !8276

if.then312:                                       ; preds = %sw.epilog304
  br label %err, !dbg !8277

if.end313:                                        ; preds = %sw.epilog304
  %145 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8278
  %146 = load i32, i32* %speed, align 4, !dbg !8280
  %conv314 = trunc i32 %146 to i8, !dbg !8280
  %call315 = call i32 @stv090x_write_reg(%struct.stv090x_state* %145, i32 62848, i8 zeroext %conv314) #9, !dbg !8281
  %cmp316 = icmp slt i32 %call315, 0, !dbg !8282
  br i1 %cmp316, label %if.then318, label %if.end319, !dbg !8283

if.then318:                                       ; preds = %if.end313
  br label %err, !dbg !8284

if.end319:                                        ; preds = %if.end313
  br label %if.end320, !dbg !8285

if.end320:                                        ; preds = %if.end319, %sw.epilog267
  %147 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8286
  %config321 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %147, i32 0, i32 5, !dbg !8288
  %148 = load %struct.stv090x_config*, %struct.stv090x_config** %config321, align 8, !dbg !8288
  %ts2_clk = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %148, i32 0, i32 9, !dbg !8289
  %149 = load i32, i32* %ts2_clk, align 4, !dbg !8289
  %cmp322 = icmp ugt i32 %149, 0, !dbg !8290
  br i1 %cmp322, label %if.then324, label %if.end376, !dbg !8291

if.then324:                                       ; preds = %if.end320
  call void @llvm.dbg.declare(metadata i32* %speed325, metadata !8292, metadata !DIExpression()), !dbg !8294
  %150 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8295
  %config326 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %150, i32 0, i32 5, !dbg !8296
  %151 = load %struct.stv090x_config*, %struct.stv090x_config** %config326, align 8, !dbg !8296
  %ts2_mode327 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %151, i32 0, i32 7, !dbg !8297
  %152 = load i8, i8* %ts2_mode327, align 2, !dbg !8297
  %conv328 = zext i8 %152 to i32, !dbg !8295
  switch i32 %conv328, label %sw.default330 [
    i32 3, label %sw.bb329
    i32 4, label %sw.bb329
    i32 1, label %sw.bb345
    i32 2, label %sw.bb345
  ], !dbg !8298

sw.bb329:                                         ; preds = %if.then324, %if.then324
  br label %sw.default330, !dbg !8299

sw.default330:                                    ; preds = %if.then324, %sw.bb329
  %153 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8300
  %internal331 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %153, i32 0, i32 3, !dbg !8302
  %154 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal331, align 8, !dbg !8302
  %mclk332 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %154, i32 0, i32 4, !dbg !8303
  %155 = load i32, i32* %mclk332, align 8, !dbg !8303
  %156 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8304
  %config333 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %156, i32 0, i32 5, !dbg !8305
  %157 = load %struct.stv090x_config*, %struct.stv090x_config** %config333, align 8, !dbg !8305
  %ts2_clk334 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %157, i32 0, i32 9, !dbg !8306
  %158 = load i32, i32* %ts2_clk334, align 4, !dbg !8306
  %div335 = udiv i32 %158, 4, !dbg !8307
  %div336 = udiv i32 %155, %div335, !dbg !8308
  store i32 %div336, i32* %speed325, align 4, !dbg !8309
  %159 = load i32, i32* %speed325, align 4, !dbg !8310
  %cmp337 = icmp ult i32 %159, 8, !dbg !8312
  br i1 %cmp337, label %if.then339, label %if.end340, !dbg !8313

if.then339:                                       ; preds = %sw.default330
  store i32 8, i32* %speed325, align 4, !dbg !8314
  br label %if.end340, !dbg !8315

if.end340:                                        ; preds = %if.then339, %sw.default330
  %160 = load i32, i32* %speed325, align 4, !dbg !8316
  %cmp341 = icmp ugt i32 %160, 255, !dbg !8318
  br i1 %cmp341, label %if.then343, label %if.end344, !dbg !8319

if.then343:                                       ; preds = %if.end340
  store i32 255, i32* %speed325, align 4, !dbg !8320
  br label %if.end344, !dbg !8321

if.end344:                                        ; preds = %if.then343, %if.end340
  br label %sw.epilog360, !dbg !8322

sw.bb345:                                         ; preds = %if.then324, %if.then324
  %161 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8323
  %internal346 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %161, i32 0, i32 3, !dbg !8324
  %162 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal346, align 8, !dbg !8324
  %mclk347 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %162, i32 0, i32 4, !dbg !8325
  %163 = load i32, i32* %mclk347, align 8, !dbg !8325
  %164 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8326
  %config348 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %164, i32 0, i32 5, !dbg !8327
  %165 = load %struct.stv090x_config*, %struct.stv090x_config** %config348, align 8, !dbg !8327
  %ts2_clk349 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %165, i32 0, i32 9, !dbg !8328
  %166 = load i32, i32* %ts2_clk349, align 4, !dbg !8328
  %div350 = udiv i32 %166, 32, !dbg !8329
  %div351 = udiv i32 %163, %div350, !dbg !8330
  store i32 %div351, i32* %speed325, align 4, !dbg !8331
  %167 = load i32, i32* %speed325, align 4, !dbg !8332
  %cmp352 = icmp ult i32 %167, 32, !dbg !8334
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !8335

if.then354:                                       ; preds = %sw.bb345
  store i32 32, i32* %speed325, align 4, !dbg !8336
  br label %if.end355, !dbg !8337

if.end355:                                        ; preds = %if.then354, %sw.bb345
  %168 = load i32, i32* %speed325, align 4, !dbg !8338
  %cmp356 = icmp ugt i32 %168, 255, !dbg !8340
  br i1 %cmp356, label %if.then358, label %if.end359, !dbg !8341

if.then358:                                       ; preds = %if.end355
  store i32 255, i32* %speed325, align 4, !dbg !8342
  br label %if.end359, !dbg !8343

if.end359:                                        ; preds = %if.then358, %if.end355
  br label %sw.epilog360, !dbg !8344

sw.epilog360:                                     ; preds = %if.end359, %if.end344
  %169 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8345
  %call361 = call i32 @stv090x_read_reg(%struct.stv090x_state* %169, i32 62323) #9, !dbg !8346
  store i32 %call361, i32* %reg, align 4, !dbg !8347
  %170 = load i32, i32* %reg, align 4, !dbg !8348
  %and362 = and i32 %170, -193, !dbg !8348
  %or363 = or i32 %and362, 192, !dbg !8348
  store i32 %or363, i32* %reg, align 4, !dbg !8348
  %171 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8349
  %172 = load i32, i32* %reg, align 4, !dbg !8351
  %conv364 = trunc i32 %172 to i8, !dbg !8351
  %call365 = call i32 @stv090x_write_reg(%struct.stv090x_state* %171, i32 62323, i8 zeroext %conv364) #9, !dbg !8352
  %cmp366 = icmp slt i32 %call365, 0, !dbg !8353
  br i1 %cmp366, label %if.then368, label %if.end369, !dbg !8354

if.then368:                                       ; preds = %sw.epilog360
  br label %err, !dbg !8355

if.end369:                                        ; preds = %sw.epilog360
  %173 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8356
  %174 = load i32, i32* %speed325, align 4, !dbg !8358
  %conv370 = trunc i32 %174 to i8, !dbg !8358
  %call371 = call i32 @stv090x_write_reg(%struct.stv090x_state* %173, i32 62336, i8 zeroext %conv370) #9, !dbg !8359
  %cmp372 = icmp slt i32 %call371, 0, !dbg !8360
  br i1 %cmp372, label %if.then374, label %if.end375, !dbg !8361

if.then374:                                       ; preds = %if.end369
  br label %err, !dbg !8362

if.end375:                                        ; preds = %if.end369
  br label %if.end376, !dbg !8363

if.end376:                                        ; preds = %if.end375, %if.end320
  %175 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8364
  %call377 = call i32 @stv090x_read_reg(%struct.stv090x_state* %175, i32 62322) #9, !dbg !8365
  store i32 %call377, i32* %reg, align 4, !dbg !8366
  %176 = load i32, i32* %reg, align 4, !dbg !8367
  %and378 = and i32 %176, -2, !dbg !8367
  %or379 = or i32 %and378, 1, !dbg !8367
  store i32 %or379, i32* %reg, align 4, !dbg !8367
  %177 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8368
  %178 = load i32, i32* %reg, align 4, !dbg !8370
  %conv380 = trunc i32 %178 to i8, !dbg !8370
  %call381 = call i32 @stv090x_write_reg(%struct.stv090x_state* %177, i32 62322, i8 zeroext %conv380) #9, !dbg !8371
  %cmp382 = icmp slt i32 %call381, 0, !dbg !8372
  br i1 %cmp382, label %if.then384, label %if.end385, !dbg !8373

if.then384:                                       ; preds = %if.end376
  br label %err, !dbg !8374

if.end385:                                        ; preds = %if.end376
  %179 = load i32, i32* %reg, align 4, !dbg !8375
  %and386 = and i32 %179, -2, !dbg !8375
  store i32 %and386, i32* %reg, align 4, !dbg !8375
  %180 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8376
  %181 = load i32, i32* %reg, align 4, !dbg !8378
  %conv387 = trunc i32 %181 to i8, !dbg !8378
  %call388 = call i32 @stv090x_write_reg(%struct.stv090x_state* %180, i32 62322, i8 zeroext %conv387) #9, !dbg !8379
  %cmp389 = icmp slt i32 %call388, 0, !dbg !8380
  br i1 %cmp389, label %if.then391, label %if.end392, !dbg !8381

if.then391:                                       ; preds = %if.end385
  br label %err, !dbg !8382

if.end392:                                        ; preds = %if.end385
  %182 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8383
  %call393 = call i32 @stv090x_read_reg(%struct.stv090x_state* %182, i32 62834) #9, !dbg !8384
  store i32 %call393, i32* %reg, align 4, !dbg !8385
  %183 = load i32, i32* %reg, align 4, !dbg !8386
  %and394 = and i32 %183, -2, !dbg !8386
  %or395 = or i32 %and394, 1, !dbg !8386
  store i32 %or395, i32* %reg, align 4, !dbg !8386
  %184 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8387
  %185 = load i32, i32* %reg, align 4, !dbg !8389
  %conv396 = trunc i32 %185 to i8, !dbg !8389
  %call397 = call i32 @stv090x_write_reg(%struct.stv090x_state* %184, i32 62834, i8 zeroext %conv396) #9, !dbg !8390
  %cmp398 = icmp slt i32 %call397, 0, !dbg !8391
  br i1 %cmp398, label %if.then400, label %if.end401, !dbg !8392

if.then400:                                       ; preds = %if.end392
  br label %err, !dbg !8393

if.end401:                                        ; preds = %if.end392
  %186 = load i32, i32* %reg, align 4, !dbg !8394
  %and402 = and i32 %186, -2, !dbg !8394
  store i32 %and402, i32* %reg, align 4, !dbg !8394
  %187 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8395
  %188 = load i32, i32* %reg, align 4, !dbg !8397
  %conv403 = trunc i32 %188 to i8, !dbg !8397
  %call404 = call i32 @stv090x_write_reg(%struct.stv090x_state* %187, i32 62834, i8 zeroext %conv403) #9, !dbg !8398
  %cmp405 = icmp slt i32 %call404, 0, !dbg !8399
  br i1 %cmp405, label %if.then407, label %if.end408, !dbg !8400

if.then407:                                       ; preds = %if.end401
  br label %err, !dbg !8401

if.end408:                                        ; preds = %if.end401
  store i32 0, i32* %retval, align 4, !dbg !8402
  br label %return, !dbg !8402

err:                                              ; preds = %if.then407, %if.then400, %if.then391, %if.then384, %if.then374, %if.then368, %if.then318, %if.then312, %if.then264, %if.then243, %if.then223, %if.then203, %if.then181, %if.then161, %if.then142, %if.then123, %if.then92, %if.then87, %if.then82, %if.then74, %if.then51, %if.then45, %if.then33, %if.then28, %if.then23, %if.then14, %if.then8
  call void @llvm.dbg.label(metadata !8403), !dbg !8404
  br label %do.body, !dbg !8405

do.body:                                          ; preds = %err
  %189 = load i32, i32* @verbose, align 4, !dbg !8406
  %cmp409 = icmp ugt i32 %189, 0, !dbg !8406
  br i1 %cmp409, label %land.lhs.true, label %if.else415, !dbg !8406

land.lhs.true:                                    ; preds = %do.body
  %190 = load i32, i32* @verbose, align 4, !dbg !8406
  %cmp411 = icmp ugt i32 %190, 0, !dbg !8406
  br i1 %cmp411, label %if.then413, label %if.else415, !dbg !8411

if.then413:                                       ; preds = %land.lhs.true
  %call414 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0900_set_tspath, i64 0, i64 0)) #13, !dbg !8406
  br label %if.end442, !dbg !8406

if.else415:                                       ; preds = %land.lhs.true, %do.body
  %191 = load i32, i32* @verbose, align 4, !dbg !8412
  %cmp416 = icmp ugt i32 %191, 1, !dbg !8412
  br i1 %cmp416, label %land.lhs.true418, label %if.else423, !dbg !8412

land.lhs.true418:                                 ; preds = %if.else415
  %192 = load i32, i32* @verbose, align 4, !dbg !8412
  %cmp419 = icmp ugt i32 %192, 0, !dbg !8412
  br i1 %cmp419, label %if.then421, label %if.else423, !dbg !8406

if.then421:                                       ; preds = %land.lhs.true418
  %call422 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0900_set_tspath, i64 0, i64 0)) #13, !dbg !8412
  br label %if.end441, !dbg !8412

if.else423:                                       ; preds = %land.lhs.true418, %if.else415
  %193 = load i32, i32* @verbose, align 4, !dbg !8414
  %cmp424 = icmp ugt i32 %193, 2, !dbg !8414
  br i1 %cmp424, label %land.lhs.true426, label %if.else431, !dbg !8414

land.lhs.true426:                                 ; preds = %if.else423
  %194 = load i32, i32* @verbose, align 4, !dbg !8414
  %cmp427 = icmp ugt i32 %194, 0, !dbg !8414
  br i1 %cmp427, label %if.then429, label %if.else431, !dbg !8412

if.then429:                                       ; preds = %land.lhs.true426
  %call430 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0900_set_tspath, i64 0, i64 0)) #13, !dbg !8414
  br label %if.end440, !dbg !8414

if.else431:                                       ; preds = %land.lhs.true426, %if.else423
  %195 = load i32, i32* @verbose, align 4, !dbg !8416
  %cmp432 = icmp ugt i32 %195, 3, !dbg !8416
  br i1 %cmp432, label %land.lhs.true434, label %if.end439, !dbg !8416

land.lhs.true434:                                 ; preds = %if.else431
  %196 = load i32, i32* @verbose, align 4, !dbg !8416
  %cmp435 = icmp ugt i32 %196, 0, !dbg !8416
  br i1 %cmp435, label %if.then437, label %if.end439, !dbg !8414

if.then437:                                       ; preds = %land.lhs.true434
  %call438 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0900_set_tspath, i64 0, i64 0)) #13, !dbg !8416
  br label %if.end439, !dbg !8416

if.end439:                                        ; preds = %if.then437, %land.lhs.true434, %if.else431
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %if.then429
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.then421
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.then413
  br label %do.end, !dbg !8418

do.end:                                           ; preds = %if.end442
  store i32 -1, i32* %retval, align 4, !dbg !8419
  br label %return, !dbg !8419

return:                                           ; preds = %do.end, %if.end408
  %197 = load i32, i32* %retval, align 4, !dbg !8420
  ret i32 %197, !dbg !8420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv0903_set_tspath(%struct.stv090x_state* %state) #0 !dbg !8421 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %speed = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !8422, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !8424, metadata !DIExpression()), !dbg !8425
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8426
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 3, !dbg !8428
  %1 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !8428
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %1, i32 0, i32 5, !dbg !8429
  %2 = load i32, i32* %dev_ver, align 4, !dbg !8429
  %cmp = icmp uge i32 %2, 32, !dbg !8430
  br i1 %cmp, label %if.then, label %if.else, !dbg !8431

if.then:                                          ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8432
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 5, !dbg !8434
  %4 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !8434
  %ts1_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %4, i32 0, i32 6, !dbg !8435
  %5 = load i8, i8* %ts1_mode, align 1, !dbg !8435
  %conv = zext i8 %5 to i32, !dbg !8432
  switch i32 %conv, label %sw.default [
    i32 3, label %sw.bb
    i32 4, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb1
  ], !dbg !8436

sw.bb:                                            ; preds = %if.then, %if.then
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8437
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %6, i32 63024, i8 zeroext 0) #9, !dbg !8439
  br label %sw.epilog, !dbg !8440

sw.bb1:                                           ; preds = %if.then, %if.then
  br label %sw.default, !dbg !8440

sw.default:                                       ; preds = %if.then, %sw.bb1
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8441
  %call2 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 63024, i8 zeroext 12) #9, !dbg !8442
  br label %sw.epilog, !dbg !8443

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %if.end, !dbg !8444

if.else:                                          ; preds = %entry
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8445
  %config3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 5, !dbg !8447
  %9 = load %struct.stv090x_config*, %struct.stv090x_config** %config3, align 8, !dbg !8447
  %ts1_mode4 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %9, i32 0, i32 6, !dbg !8448
  %10 = load i8, i8* %ts1_mode4, align 1, !dbg !8448
  %conv5 = zext i8 %10 to i32, !dbg !8445
  switch i32 %conv5, label %sw.default9 [
    i32 3, label %sw.bb6
    i32 4, label %sw.bb6
    i32 1, label %sw.bb8
    i32 2, label %sw.bb8
  ], !dbg !8449

sw.bb6:                                           ; preds = %if.else, %if.else
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8450
  %call7 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 63088, i8 zeroext 16) #9, !dbg !8452
  br label %sw.epilog11, !dbg !8453

sw.bb8:                                           ; preds = %if.else, %if.else
  br label %sw.default9, !dbg !8453

sw.default9:                                      ; preds = %if.else, %sw.bb8
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8454
  %call10 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 63088, i8 zeroext 20) #9, !dbg !8455
  br label %sw.epilog11, !dbg !8456

sw.epilog11:                                      ; preds = %sw.default9, %sw.bb6
  br label %if.end

if.end:                                           ; preds = %sw.epilog11, %sw.epilog
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8457
  %config12 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 5, !dbg !8458
  %14 = load %struct.stv090x_config*, %struct.stv090x_config** %config12, align 8, !dbg !8458
  %ts1_mode13 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %14, i32 0, i32 6, !dbg !8459
  %15 = load i8, i8* %ts1_mode13, align 1, !dbg !8459
  %conv14 = zext i8 %15 to i32, !dbg !8457
  switch i32 %conv14, label %sw.default57 [
    i32 3, label %sw.bb15
    i32 4, label %sw.bb24
    i32 1, label %sw.bb34
    i32 2, label %sw.bb45
  ], !dbg !8460

sw.bb15:                                          ; preds = %if.end
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8461
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %16, i32 62834) #9, !dbg !8463
  store i32 %call16, i32* %reg, align 4, !dbg !8464
  %17 = load i32, i32* %reg, align 4, !dbg !8465
  %and = and i32 %17, -65, !dbg !8465
  store i32 %and, i32* %reg, align 4, !dbg !8465
  %18 = load i32, i32* %reg, align 4, !dbg !8466
  %and17 = and i32 %18, -129, !dbg !8466
  store i32 %and17, i32* %reg, align 4, !dbg !8466
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8467
  %20 = load i32, i32* %reg, align 4, !dbg !8469
  %conv18 = trunc i32 %20 to i8, !dbg !8469
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62834, i8 zeroext %conv18) #9, !dbg !8470
  %cmp20 = icmp slt i32 %call19, 0, !dbg !8471
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !8472

if.then22:                                        ; preds = %sw.bb15
  br label %err, !dbg !8473

if.end23:                                         ; preds = %sw.bb15
  br label %sw.epilog58, !dbg !8474

sw.bb24:                                          ; preds = %if.end
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8475
  %call25 = call i32 @stv090x_read_reg(%struct.stv090x_state* %21, i32 62834) #9, !dbg !8476
  store i32 %call25, i32* %reg, align 4, !dbg !8477
  %22 = load i32, i32* %reg, align 4, !dbg !8478
  %and26 = and i32 %22, -65, !dbg !8478
  store i32 %and26, i32* %reg, align 4, !dbg !8478
  %23 = load i32, i32* %reg, align 4, !dbg !8479
  %and27 = and i32 %23, -129, !dbg !8479
  %or = or i32 %and27, 128, !dbg !8479
  store i32 %or, i32* %reg, align 4, !dbg !8479
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8480
  %25 = load i32, i32* %reg, align 4, !dbg !8482
  %conv28 = trunc i32 %25 to i8, !dbg !8482
  %call29 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 62834, i8 zeroext %conv28) #9, !dbg !8483
  %cmp30 = icmp slt i32 %call29, 0, !dbg !8484
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !8485

if.then32:                                        ; preds = %sw.bb24
  br label %err, !dbg !8486

if.end33:                                         ; preds = %sw.bb24
  br label %sw.epilog58, !dbg !8487

sw.bb34:                                          ; preds = %if.end
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8488
  %call35 = call i32 @stv090x_read_reg(%struct.stv090x_state* %26, i32 62834) #9, !dbg !8489
  store i32 %call35, i32* %reg, align 4, !dbg !8490
  %27 = load i32, i32* %reg, align 4, !dbg !8491
  %and36 = and i32 %27, -65, !dbg !8491
  %or37 = or i32 %and36, 64, !dbg !8491
  store i32 %or37, i32* %reg, align 4, !dbg !8491
  %28 = load i32, i32* %reg, align 4, !dbg !8492
  %and38 = and i32 %28, -129, !dbg !8492
  store i32 %and38, i32* %reg, align 4, !dbg !8492
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8493
  %30 = load i32, i32* %reg, align 4, !dbg !8495
  %conv39 = trunc i32 %30 to i8, !dbg !8495
  %call40 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62834, i8 zeroext %conv39) #9, !dbg !8496
  %cmp41 = icmp slt i32 %call40, 0, !dbg !8497
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !8498

if.then43:                                        ; preds = %sw.bb34
  br label %err, !dbg !8499

if.end44:                                         ; preds = %sw.bb34
  br label %sw.epilog58, !dbg !8500

sw.bb45:                                          ; preds = %if.end
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8501
  %call46 = call i32 @stv090x_read_reg(%struct.stv090x_state* %31, i32 62834) #9, !dbg !8502
  store i32 %call46, i32* %reg, align 4, !dbg !8503
  %32 = load i32, i32* %reg, align 4, !dbg !8504
  %and47 = and i32 %32, -65, !dbg !8504
  %or48 = or i32 %and47, 64, !dbg !8504
  store i32 %or48, i32* %reg, align 4, !dbg !8504
  %33 = load i32, i32* %reg, align 4, !dbg !8505
  %and49 = and i32 %33, -129, !dbg !8505
  %or50 = or i32 %and49, 128, !dbg !8505
  store i32 %or50, i32* %reg, align 4, !dbg !8505
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8506
  %35 = load i32, i32* %reg, align 4, !dbg !8508
  %conv51 = trunc i32 %35 to i8, !dbg !8508
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62834, i8 zeroext %conv51) #9, !dbg !8509
  %cmp53 = icmp slt i32 %call52, 0, !dbg !8510
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !8511

if.then55:                                        ; preds = %sw.bb45
  br label %err, !dbg !8512

if.end56:                                         ; preds = %sw.bb45
  br label %sw.epilog58, !dbg !8513

sw.default57:                                     ; preds = %if.end
  br label %sw.epilog58, !dbg !8514

sw.epilog58:                                      ; preds = %sw.default57, %if.end56, %if.end44, %if.end33, %if.end23
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8515
  %config59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 5, !dbg !8517
  %37 = load %struct.stv090x_config*, %struct.stv090x_config** %config59, align 8, !dbg !8517
  %ts1_clk = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %37, i32 0, i32 8, !dbg !8518
  %38 = load i32, i32* %ts1_clk, align 8, !dbg !8518
  %cmp60 = icmp ugt i32 %38, 0, !dbg !8519
  br i1 %cmp60, label %if.then62, label %if.end111, !dbg !8520

if.then62:                                        ; preds = %sw.epilog58
  call void @llvm.dbg.declare(metadata i32* %speed, metadata !8521, metadata !DIExpression()), !dbg !8523
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8524
  %config63 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 5, !dbg !8525
  %40 = load %struct.stv090x_config*, %struct.stv090x_config** %config63, align 8, !dbg !8525
  %ts1_mode64 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %40, i32 0, i32 6, !dbg !8526
  %41 = load i8, i8* %ts1_mode64, align 1, !dbg !8526
  %conv65 = zext i8 %41 to i32, !dbg !8524
  switch i32 %conv65, label %sw.default67 [
    i32 3, label %sw.bb66
    i32 4, label %sw.bb66
    i32 1, label %sw.bb80
    i32 2, label %sw.bb80
  ], !dbg !8527

sw.bb66:                                          ; preds = %if.then62, %if.then62
  br label %sw.default67, !dbg !8528

sw.default67:                                     ; preds = %if.then62, %sw.bb66
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8529
  %internal68 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 3, !dbg !8531
  %43 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal68, align 8, !dbg !8531
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %43, i32 0, i32 4, !dbg !8532
  %44 = load i32, i32* %mclk, align 8, !dbg !8532
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8533
  %config69 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %45, i32 0, i32 5, !dbg !8534
  %46 = load %struct.stv090x_config*, %struct.stv090x_config** %config69, align 8, !dbg !8534
  %ts1_clk70 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %46, i32 0, i32 8, !dbg !8535
  %47 = load i32, i32* %ts1_clk70, align 8, !dbg !8535
  %div = udiv i32 %47, 4, !dbg !8536
  %div71 = udiv i32 %44, %div, !dbg !8537
  store i32 %div71, i32* %speed, align 4, !dbg !8538
  %48 = load i32, i32* %speed, align 4, !dbg !8539
  %cmp72 = icmp ult i32 %48, 8, !dbg !8541
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8542

if.then74:                                        ; preds = %sw.default67
  store i32 8, i32* %speed, align 4, !dbg !8543
  br label %if.end75, !dbg !8544

if.end75:                                         ; preds = %if.then74, %sw.default67
  %49 = load i32, i32* %speed, align 4, !dbg !8545
  %cmp76 = icmp ugt i32 %49, 255, !dbg !8547
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !8548

if.then78:                                        ; preds = %if.end75
  store i32 255, i32* %speed, align 4, !dbg !8549
  br label %if.end79, !dbg !8550

if.end79:                                         ; preds = %if.then78, %if.end75
  br label %sw.epilog95, !dbg !8551

sw.bb80:                                          ; preds = %if.then62, %if.then62
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8552
  %internal81 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 3, !dbg !8553
  %51 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal81, align 8, !dbg !8553
  %mclk82 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %51, i32 0, i32 4, !dbg !8554
  %52 = load i32, i32* %mclk82, align 8, !dbg !8554
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8555
  %config83 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %53, i32 0, i32 5, !dbg !8556
  %54 = load %struct.stv090x_config*, %struct.stv090x_config** %config83, align 8, !dbg !8556
  %ts1_clk84 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %54, i32 0, i32 8, !dbg !8557
  %55 = load i32, i32* %ts1_clk84, align 8, !dbg !8557
  %div85 = udiv i32 %55, 32, !dbg !8558
  %div86 = udiv i32 %52, %div85, !dbg !8559
  store i32 %div86, i32* %speed, align 4, !dbg !8560
  %56 = load i32, i32* %speed, align 4, !dbg !8561
  %cmp87 = icmp ult i32 %56, 32, !dbg !8563
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !8564

if.then89:                                        ; preds = %sw.bb80
  store i32 32, i32* %speed, align 4, !dbg !8565
  br label %if.end90, !dbg !8566

if.end90:                                         ; preds = %if.then89, %sw.bb80
  %57 = load i32, i32* %speed, align 4, !dbg !8567
  %cmp91 = icmp ugt i32 %57, 255, !dbg !8569
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !8570

if.then93:                                        ; preds = %if.end90
  store i32 255, i32* %speed, align 4, !dbg !8571
  br label %if.end94, !dbg !8572

if.end94:                                         ; preds = %if.then93, %if.end90
  br label %sw.epilog95, !dbg !8573

sw.epilog95:                                      ; preds = %if.end94, %if.end79
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8574
  %call96 = call i32 @stv090x_read_reg(%struct.stv090x_state* %58, i32 62835) #9, !dbg !8575
  store i32 %call96, i32* %reg, align 4, !dbg !8576
  %59 = load i32, i32* %reg, align 4, !dbg !8577
  %and97 = and i32 %59, -193, !dbg !8577
  %or98 = or i32 %and97, 192, !dbg !8577
  store i32 %or98, i32* %reg, align 4, !dbg !8577
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8578
  %61 = load i32, i32* %reg, align 4, !dbg !8580
  %conv99 = trunc i32 %61 to i8, !dbg !8580
  %call100 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62835, i8 zeroext %conv99) #9, !dbg !8581
  %cmp101 = icmp slt i32 %call100, 0, !dbg !8582
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !8583

if.then103:                                       ; preds = %sw.epilog95
  br label %err, !dbg !8584

if.end104:                                        ; preds = %sw.epilog95
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8585
  %63 = load i32, i32* %speed, align 4, !dbg !8587
  %conv105 = trunc i32 %63 to i8, !dbg !8587
  %call106 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 62848, i8 zeroext %conv105) #9, !dbg !8588
  %cmp107 = icmp slt i32 %call106, 0, !dbg !8589
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !8590

if.then109:                                       ; preds = %if.end104
  br label %err, !dbg !8591

if.end110:                                        ; preds = %if.end104
  br label %if.end111, !dbg !8592

if.end111:                                        ; preds = %if.end110, %sw.epilog58
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8593
  %call112 = call i32 @stv090x_read_reg(%struct.stv090x_state* %64, i32 62834) #9, !dbg !8594
  store i32 %call112, i32* %reg, align 4, !dbg !8595
  %65 = load i32, i32* %reg, align 4, !dbg !8596
  %and113 = and i32 %65, -2, !dbg !8596
  %or114 = or i32 %and113, 1, !dbg !8596
  store i32 %or114, i32* %reg, align 4, !dbg !8596
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8597
  %67 = load i32, i32* %reg, align 4, !dbg !8599
  %conv115 = trunc i32 %67 to i8, !dbg !8599
  %call116 = call i32 @stv090x_write_reg(%struct.stv090x_state* %66, i32 62834, i8 zeroext %conv115) #9, !dbg !8600
  %cmp117 = icmp slt i32 %call116, 0, !dbg !8601
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !8602

if.then119:                                       ; preds = %if.end111
  br label %err, !dbg !8603

if.end120:                                        ; preds = %if.end111
  %68 = load i32, i32* %reg, align 4, !dbg !8604
  %and121 = and i32 %68, -2, !dbg !8604
  store i32 %and121, i32* %reg, align 4, !dbg !8604
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8605
  %70 = load i32, i32* %reg, align 4, !dbg !8607
  %conv122 = trunc i32 %70 to i8, !dbg !8607
  %call123 = call i32 @stv090x_write_reg(%struct.stv090x_state* %69, i32 62834, i8 zeroext %conv122) #9, !dbg !8608
  %cmp124 = icmp slt i32 %call123, 0, !dbg !8609
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !8610

if.then126:                                       ; preds = %if.end120
  br label %err, !dbg !8611

if.end127:                                        ; preds = %if.end120
  store i32 0, i32* %retval, align 4, !dbg !8612
  br label %return, !dbg !8612

err:                                              ; preds = %if.then126, %if.then119, %if.then109, %if.then103, %if.then55, %if.then43, %if.then32, %if.then22
  call void @llvm.dbg.label(metadata !8613), !dbg !8614
  br label %do.body, !dbg !8615

do.body:                                          ; preds = %err
  %71 = load i32, i32* @verbose, align 4, !dbg !8616
  %cmp128 = icmp ugt i32 %71, 0, !dbg !8616
  br i1 %cmp128, label %land.lhs.true, label %if.else134, !dbg !8616

land.lhs.true:                                    ; preds = %do.body
  %72 = load i32, i32* @verbose, align 4, !dbg !8616
  %cmp130 = icmp ugt i32 %72, 0, !dbg !8616
  br i1 %cmp130, label %if.then132, label %if.else134, !dbg !8621

if.then132:                                       ; preds = %land.lhs.true
  %call133 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0903_set_tspath, i64 0, i64 0)) #13, !dbg !8616
  br label %if.end161, !dbg !8616

if.else134:                                       ; preds = %land.lhs.true, %do.body
  %73 = load i32, i32* @verbose, align 4, !dbg !8622
  %cmp135 = icmp ugt i32 %73, 1, !dbg !8622
  br i1 %cmp135, label %land.lhs.true137, label %if.else142, !dbg !8622

land.lhs.true137:                                 ; preds = %if.else134
  %74 = load i32, i32* @verbose, align 4, !dbg !8622
  %cmp138 = icmp ugt i32 %74, 0, !dbg !8622
  br i1 %cmp138, label %if.then140, label %if.else142, !dbg !8616

if.then140:                                       ; preds = %land.lhs.true137
  %call141 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0903_set_tspath, i64 0, i64 0)) #13, !dbg !8622
  br label %if.end160, !dbg !8622

if.else142:                                       ; preds = %land.lhs.true137, %if.else134
  %75 = load i32, i32* @verbose, align 4, !dbg !8624
  %cmp143 = icmp ugt i32 %75, 2, !dbg !8624
  br i1 %cmp143, label %land.lhs.true145, label %if.else150, !dbg !8624

land.lhs.true145:                                 ; preds = %if.else142
  %76 = load i32, i32* @verbose, align 4, !dbg !8624
  %cmp146 = icmp ugt i32 %76, 0, !dbg !8624
  br i1 %cmp146, label %if.then148, label %if.else150, !dbg !8622

if.then148:                                       ; preds = %land.lhs.true145
  %call149 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0903_set_tspath, i64 0, i64 0)) #13, !dbg !8624
  br label %if.end159, !dbg !8624

if.else150:                                       ; preds = %land.lhs.true145, %if.else142
  %77 = load i32, i32* @verbose, align 4, !dbg !8626
  %cmp151 = icmp ugt i32 %77, 3, !dbg !8626
  br i1 %cmp151, label %land.lhs.true153, label %if.end158, !dbg !8626

land.lhs.true153:                                 ; preds = %if.else150
  %78 = load i32, i32* @verbose, align 4, !dbg !8626
  %cmp154 = icmp ugt i32 %78, 0, !dbg !8626
  br i1 %cmp154, label %if.then156, label %if.end158, !dbg !8624

if.then156:                                       ; preds = %land.lhs.true153
  %call157 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv0903_set_tspath, i64 0, i64 0)) #13, !dbg !8626
  br label %if.end158, !dbg !8626

if.end158:                                        ; preds = %if.then156, %land.lhs.true153, %if.else150
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then148
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then140
  br label %if.end161

if.end161:                                        ; preds = %if.end160, %if.then132
  br label %do.end, !dbg !8628

do.end:                                           ; preds = %if.end161
  store i32 -1, i32* %retval, align 4, !dbg !8629
  br label %return, !dbg !8629

return:                                           ; preds = %do.end, %if.end127
  %79 = load i32, i32* %retval, align 4, !dbg !8630
  ret i32 %79, !dbg !8630
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_write_regs(%struct.stv090x_state* %state, i32 %reg, i8* %data, i32 %count) #0 !dbg !8631 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %count.addr = alloca i32, align 4
  %config = alloca %struct.stv090x_config*, align 8
  %ret = alloca i32, align 4
  %buf = alloca [64 x i8], align 16
  %i2c_msg = alloca %struct.i2c_msg, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !8634, metadata !DIExpression()), !dbg !8635
  store i32 %reg, i32* %reg.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %reg.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8638, metadata !DIExpression()), !dbg !8639
  store i32 %count, i32* %count.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %count.addr, metadata !8640, metadata !DIExpression()), !dbg !8641
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !8642, metadata !DIExpression()), !dbg !8643
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8644
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 5, !dbg !8645
  %1 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !8645
  store %struct.stv090x_config* %1, %struct.stv090x_config** %config, align 8, !dbg !8643
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8646, metadata !DIExpression()), !dbg !8647
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !8648, metadata !DIExpression()), !dbg !8650
  call void @llvm.dbg.declare(metadata %struct.i2c_msg* %i2c_msg, metadata !8651, metadata !DIExpression()), !dbg !8652
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 0, !dbg !8653
  %2 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !8654
  %address = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %2, i32 0, i32 5, !dbg !8655
  %3 = load i8, i8* %address, align 4, !dbg !8655
  %conv = zext i8 %3 to i16, !dbg !8654
  store i16 %conv, i16* %addr, align 8, !dbg !8653
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 1, !dbg !8653
  store i16 0, i16* %flags, align 2, !dbg !8653
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 2, !dbg !8653
  %4 = load i32, i32* %count.addr, align 4, !dbg !8656
  %add = add i32 2, %4, !dbg !8657
  %conv2 = trunc i32 %add to i16, !dbg !8658
  store i16 %conv2, i16* %len, align 4, !dbg !8653
  %buf3 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %i2c_msg, i32 0, i32 3, !dbg !8653
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !8659
  store i8* %arraydecay, i8** %buf3, align 8, !dbg !8653
  %5 = load i32, i32* %count.addr, align 4, !dbg !8660
  %add4 = add i32 2, %5, !dbg !8662
  %conv5 = zext i32 %add4 to i64, !dbg !8663
  %cmp = icmp ugt i64 %conv5, 64, !dbg !8664
  br i1 %cmp, label %if.then, label %if.end, !dbg !8665

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %reg.addr, align 4, !dbg !8666
  %7 = load i32, i32* %count.addr, align 4, !dbg !8668
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i32 %6, i32 %7) #13, !dbg !8669
  store i32 -22, i32* %retval, align 4, !dbg !8670
  br label %return, !dbg !8670

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %reg.addr, align 4, !dbg !8671
  %shr = lshr i32 %8, 8, !dbg !8672
  %conv7 = trunc i32 %shr to i8, !dbg !8671
  %arrayidx = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !8673
  store i8 %conv7, i8* %arrayidx, align 16, !dbg !8674
  %9 = load i32, i32* %reg.addr, align 4, !dbg !8675
  %and = and i32 %9, 255, !dbg !8676
  %conv8 = trunc i32 %and to i8, !dbg !8675
  %arrayidx9 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 1, !dbg !8677
  store i8 %conv8, i8* %arrayidx9, align 1, !dbg !8678
  %arrayidx10 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 2, !dbg !8679
  %10 = load i8*, i8** %data.addr, align 8, !dbg !8680
  %11 = load i32, i32* %count.addr, align 4, !dbg !8681
  %conv11 = zext i32 %11 to i64, !dbg !8681
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arrayidx10, i8* align 1 %10, i64 %conv11, i1 false), !dbg !8682
  br label %do.body, !dbg !8683

do.body:                                          ; preds = %if.end
  %12 = load i32, i32* @verbose, align 4, !dbg !8684
  %cmp12 = icmp ugt i32 %12, 0, !dbg !8684
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !8684

land.lhs.true:                                    ; preds = %do.body
  %13 = load i32, i32* @verbose, align 4, !dbg !8684
  %cmp14 = icmp ugt i32 %13, 4, !dbg !8684
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !8689

if.then16:                                        ; preds = %land.lhs.true
  %14 = load i32, i32* %reg.addr, align 4, !dbg !8684
  %15 = load i32, i32* %count.addr, align 4, !dbg !8684
  %16 = load i8*, i8** %data.addr, align 8, !dbg !8684
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %14, i32 %15, i8* %16) #13, !dbg !8684
  br label %if.end44, !dbg !8684

if.else:                                          ; preds = %land.lhs.true, %do.body
  %17 = load i32, i32* @verbose, align 4, !dbg !8690
  %cmp18 = icmp ugt i32 %17, 1, !dbg !8690
  br i1 %cmp18, label %land.lhs.true20, label %if.else25, !dbg !8690

land.lhs.true20:                                  ; preds = %if.else
  %18 = load i32, i32* @verbose, align 4, !dbg !8690
  %cmp21 = icmp ugt i32 %18, 4, !dbg !8690
  br i1 %cmp21, label %if.then23, label %if.else25, !dbg !8684

if.then23:                                        ; preds = %land.lhs.true20
  %19 = load i32, i32* %reg.addr, align 4, !dbg !8690
  %20 = load i32, i32* %count.addr, align 4, !dbg !8690
  %21 = load i8*, i8** %data.addr, align 8, !dbg !8690
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %19, i32 %20, i8* %21) #13, !dbg !8690
  br label %if.end43, !dbg !8690

if.else25:                                        ; preds = %land.lhs.true20, %if.else
  %22 = load i32, i32* @verbose, align 4, !dbg !8692
  %cmp26 = icmp ugt i32 %22, 2, !dbg !8692
  br i1 %cmp26, label %land.lhs.true28, label %if.else33, !dbg !8692

land.lhs.true28:                                  ; preds = %if.else25
  %23 = load i32, i32* @verbose, align 4, !dbg !8692
  %cmp29 = icmp ugt i32 %23, 4, !dbg !8692
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !8690

if.then31:                                        ; preds = %land.lhs.true28
  %24 = load i32, i32* %reg.addr, align 4, !dbg !8692
  %25 = load i32, i32* %count.addr, align 4, !dbg !8692
  %26 = load i8*, i8** %data.addr, align 8, !dbg !8692
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %24, i32 %25, i8* %26) #13, !dbg !8692
  br label %if.end42, !dbg !8692

if.else33:                                        ; preds = %land.lhs.true28, %if.else25
  %27 = load i32, i32* @verbose, align 4, !dbg !8694
  %cmp34 = icmp ugt i32 %27, 3, !dbg !8694
  br i1 %cmp34, label %land.lhs.true36, label %if.end41, !dbg !8694

land.lhs.true36:                                  ; preds = %if.else33
  %28 = load i32, i32* @verbose, align 4, !dbg !8694
  %cmp37 = icmp ugt i32 %28, 4, !dbg !8694
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !8692

if.then39:                                        ; preds = %land.lhs.true36
  %29 = load i32, i32* %reg.addr, align 4, !dbg !8694
  %30 = load i32, i32* %count.addr, align 4, !dbg !8694
  %31 = load i8*, i8** %data.addr, align 8, !dbg !8694
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %29, i32 %30, i8* %31) #13, !dbg !8694
  br label %if.end41, !dbg !8694

if.end41:                                         ; preds = %if.then39, %land.lhs.true36, %if.else33
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then31
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then23
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then16
  br label %do.end, !dbg !8696

do.end:                                           ; preds = %if.end44
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8697
  %i2c = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 4, !dbg !8698
  %33 = load %struct.i2c_adapter*, %struct.i2c_adapter** %i2c, align 8, !dbg !8698
  %call45 = call i32 @i2c_transfer(%struct.i2c_adapter* %33, %struct.i2c_msg* %i2c_msg, i32 1) #9, !dbg !8699
  store i32 %call45, i32* %ret, align 4, !dbg !8700
  %34 = load i32, i32* %ret, align 4, !dbg !8701
  %cmp46 = icmp ne i32 %34, 1, !dbg !8703
  br i1 %cmp46, label %if.then48, label %if.end100, !dbg !8704

if.then48:                                        ; preds = %do.end
  %35 = load i32, i32* %ret, align 4, !dbg !8705
  %cmp49 = icmp ne i32 %35, -512, !dbg !8708
  br i1 %cmp49, label %if.then51, label %if.end97, !dbg !8709

if.then51:                                        ; preds = %if.then48
  br label %do.body52, !dbg !8710

do.body52:                                        ; preds = %if.then51
  %36 = load i32, i32* @verbose, align 4, !dbg !8711
  %cmp53 = icmp ugt i32 %36, 0, !dbg !8711
  br i1 %cmp53, label %land.lhs.true55, label %if.else62, !dbg !8711

land.lhs.true55:                                  ; preds = %do.body52
  %37 = load i32, i32* @verbose, align 4, !dbg !8711
  %cmp56 = icmp ugt i32 %37, 0, !dbg !8711
  br i1 %cmp56, label %if.then58, label %if.else62, !dbg !8716

if.then58:                                        ; preds = %land.lhs.true55
  %38 = load i32, i32* %reg.addr, align 4, !dbg !8711
  %39 = load i8*, i8** %data.addr, align 8, !dbg !8711
  %arrayidx59 = getelementptr i8, i8* %39, i64 0, !dbg !8711
  %40 = load i8, i8* %arrayidx59, align 1, !dbg !8711
  %conv60 = zext i8 %40 to i32, !dbg !8711
  %41 = load i32, i32* %count.addr, align 4, !dbg !8711
  %42 = load i32, i32* %ret, align 4, !dbg !8711
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %38, i32 %conv60, i32 %41, i32 %42) #13, !dbg !8711
  br label %if.end95, !dbg !8711

if.else62:                                        ; preds = %land.lhs.true55, %do.body52
  %43 = load i32, i32* @verbose, align 4, !dbg !8717
  %cmp63 = icmp ugt i32 %43, 1, !dbg !8717
  br i1 %cmp63, label %land.lhs.true65, label %if.else72, !dbg !8717

land.lhs.true65:                                  ; preds = %if.else62
  %44 = load i32, i32* @verbose, align 4, !dbg !8717
  %cmp66 = icmp ugt i32 %44, 0, !dbg !8717
  br i1 %cmp66, label %if.then68, label %if.else72, !dbg !8711

if.then68:                                        ; preds = %land.lhs.true65
  %45 = load i32, i32* %reg.addr, align 4, !dbg !8717
  %46 = load i8*, i8** %data.addr, align 8, !dbg !8717
  %arrayidx69 = getelementptr i8, i8* %46, i64 0, !dbg !8717
  %47 = load i8, i8* %arrayidx69, align 1, !dbg !8717
  %conv70 = zext i8 %47 to i32, !dbg !8717
  %48 = load i32, i32* %count.addr, align 4, !dbg !8717
  %49 = load i32, i32* %ret, align 4, !dbg !8717
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %45, i32 %conv70, i32 %48, i32 %49) #13, !dbg !8717
  br label %if.end94, !dbg !8717

if.else72:                                        ; preds = %land.lhs.true65, %if.else62
  %50 = load i32, i32* @verbose, align 4, !dbg !8719
  %cmp73 = icmp ugt i32 %50, 2, !dbg !8719
  br i1 %cmp73, label %land.lhs.true75, label %if.else82, !dbg !8719

land.lhs.true75:                                  ; preds = %if.else72
  %51 = load i32, i32* @verbose, align 4, !dbg !8719
  %cmp76 = icmp ugt i32 %51, 0, !dbg !8719
  br i1 %cmp76, label %if.then78, label %if.else82, !dbg !8717

if.then78:                                        ; preds = %land.lhs.true75
  %52 = load i32, i32* %reg.addr, align 4, !dbg !8719
  %53 = load i8*, i8** %data.addr, align 8, !dbg !8719
  %arrayidx79 = getelementptr i8, i8* %53, i64 0, !dbg !8719
  %54 = load i8, i8* %arrayidx79, align 1, !dbg !8719
  %conv80 = zext i8 %54 to i32, !dbg !8719
  %55 = load i32, i32* %count.addr, align 4, !dbg !8719
  %56 = load i32, i32* %ret, align 4, !dbg !8719
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %52, i32 %conv80, i32 %55, i32 %56) #13, !dbg !8719
  br label %if.end93, !dbg !8719

if.else82:                                        ; preds = %land.lhs.true75, %if.else72
  %57 = load i32, i32* @verbose, align 4, !dbg !8721
  %cmp83 = icmp ugt i32 %57, 3, !dbg !8721
  br i1 %cmp83, label %land.lhs.true85, label %if.end92, !dbg !8721

land.lhs.true85:                                  ; preds = %if.else82
  %58 = load i32, i32* @verbose, align 4, !dbg !8721
  %cmp86 = icmp ugt i32 %58, 0, !dbg !8721
  br i1 %cmp86, label %if.then88, label %if.end92, !dbg !8719

if.then88:                                        ; preds = %land.lhs.true85
  %59 = load i32, i32* %reg.addr, align 4, !dbg !8721
  %60 = load i8*, i8** %data.addr, align 8, !dbg !8721
  %arrayidx89 = getelementptr i8, i8* %60, i64 0, !dbg !8721
  %61 = load i8, i8* %arrayidx89, align 1, !dbg !8721
  %conv90 = zext i8 %61 to i32, !dbg !8721
  %62 = load i32, i32* %count.addr, align 4, !dbg !8721
  %63 = load i32, i32* %ret, align 4, !dbg !8721
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_write_regs, i64 0, i64 0), i32 %59, i32 %conv90, i32 %62, i32 %63) #13, !dbg !8721
  br label %if.end92, !dbg !8721

if.end92:                                         ; preds = %if.then88, %land.lhs.true85, %if.else82
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then78
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then68
  br label %if.end95

if.end95:                                         ; preds = %if.end94, %if.then58
  br label %do.end96, !dbg !8723

do.end96:                                         ; preds = %if.end95
  br label %if.end97, !dbg !8723

if.end97:                                         ; preds = %do.end96, %if.then48
  %64 = load i32, i32* %ret, align 4, !dbg !8724
  %cmp98 = icmp slt i32 %64, 0, !dbg !8725
  br i1 %cmp98, label %cond.true, label %cond.false, !dbg !8724

cond.true:                                        ; preds = %if.end97
  %65 = load i32, i32* %ret, align 4, !dbg !8726
  br label %cond.end, !dbg !8724

cond.false:                                       ; preds = %if.end97
  br label %cond.end, !dbg !8724

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %65, %cond.true ], [ -121, %cond.false ], !dbg !8724
  store i32 %cond, i32* %retval, align 4, !dbg !8727
  br label %return, !dbg !8727

if.end100:                                        ; preds = %do.end
  store i32 0, i32* %retval, align 4, !dbg !8728
  br label %return, !dbg !8728

return:                                           ; preds = %if.end100, %cond.end, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !8729
  ret i32 %66, !dbg !8729
}

; Function Attrs: noredzone
declare dso_local i32 @i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_stop_modcod(%struct.stv090x_state* %state) #0 !dbg !8730 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !8731, metadata !DIExpression()), !dbg !8732
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8733
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !8733
  %1 = load i32, i32* %demod, align 4, !dbg !8733
  %cmp = icmp eq i32 %1, 2, !dbg !8733
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8733

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8733
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %2, i32 62128, i8 zeroext -1) #9, !dbg !8733
  br label %cond.end, !dbg !8733

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8733
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %3, i32 62640, i8 zeroext -1) #9, !dbg !8733
  br label %cond.end, !dbg !8733

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !8733
  %cmp2 = icmp slt i32 %cond, 0, !dbg !8735
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8736

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !8737

if.end:                                           ; preds = %cond.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8738
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !8738
  %5 = load i32, i32* %demod3, align 4, !dbg !8738
  %cmp4 = icmp eq i32 %5, 2, !dbg !8738
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !8738

cond.true5:                                       ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8738
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %6, i32 62129, i8 zeroext -1) #9, !dbg !8738
  br label %cond.end9, !dbg !8738

cond.false7:                                      ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8738
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 62641, i8 zeroext -1) #9, !dbg !8738
  br label %cond.end9, !dbg !8738

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !8738
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !8740
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8741

if.then12:                                        ; preds = %cond.end9
  br label %err, !dbg !8742

if.end13:                                         ; preds = %cond.end9
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8743
  %demod14 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !8743
  %9 = load i32, i32* %demod14, align 4, !dbg !8743
  %cmp15 = icmp eq i32 %9, 2, !dbg !8743
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !8743

cond.true16:                                      ; preds = %if.end13
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8743
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62130, i8 zeroext -1) #9, !dbg !8743
  br label %cond.end20, !dbg !8743

cond.false18:                                     ; preds = %if.end13
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8743
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62642, i8 zeroext -1) #9, !dbg !8743
  br label %cond.end20, !dbg !8743

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !8743
  %cmp22 = icmp slt i32 %cond21, 0, !dbg !8745
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8746

if.then23:                                        ; preds = %cond.end20
  br label %err, !dbg !8747

if.end24:                                         ; preds = %cond.end20
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8748
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !8748
  %13 = load i32, i32* %demod25, align 4, !dbg !8748
  %cmp26 = icmp eq i32 %13, 2, !dbg !8748
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !8748

cond.true27:                                      ; preds = %if.end24
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8748
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62131, i8 zeroext -1) #9, !dbg !8748
  br label %cond.end31, !dbg !8748

cond.false29:                                     ; preds = %if.end24
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8748
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62643, i8 zeroext -1) #9, !dbg !8748
  br label %cond.end31, !dbg !8748

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !8748
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !8750
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !8751

if.then34:                                        ; preds = %cond.end31
  br label %err, !dbg !8752

if.end35:                                         ; preds = %cond.end31
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8753
  %demod36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !8753
  %17 = load i32, i32* %demod36, align 4, !dbg !8753
  %cmp37 = icmp eq i32 %17, 2, !dbg !8753
  br i1 %cmp37, label %cond.true38, label %cond.false40, !dbg !8753

cond.true38:                                      ; preds = %if.end35
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8753
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62132, i8 zeroext -1) #9, !dbg !8753
  br label %cond.end42, !dbg !8753

cond.false40:                                     ; preds = %if.end35
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8753
  %call41 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62644, i8 zeroext -1) #9, !dbg !8753
  br label %cond.end42, !dbg !8753

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !8753
  %cmp44 = icmp slt i32 %cond43, 0, !dbg !8755
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !8756

if.then45:                                        ; preds = %cond.end42
  br label %err, !dbg !8757

if.end46:                                         ; preds = %cond.end42
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8758
  %demod47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !8758
  %21 = load i32, i32* %demod47, align 4, !dbg !8758
  %cmp48 = icmp eq i32 %21, 2, !dbg !8758
  br i1 %cmp48, label %cond.true49, label %cond.false51, !dbg !8758

cond.true49:                                      ; preds = %if.end46
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8758
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62133, i8 zeroext -1) #9, !dbg !8758
  br label %cond.end53, !dbg !8758

cond.false51:                                     ; preds = %if.end46
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8758
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62645, i8 zeroext -1) #9, !dbg !8758
  br label %cond.end53, !dbg !8758

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !8758
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !8760
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !8761

if.then56:                                        ; preds = %cond.end53
  br label %err, !dbg !8762

if.end57:                                         ; preds = %cond.end53
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8763
  %demod58 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !8763
  %25 = load i32, i32* %demod58, align 4, !dbg !8763
  %cmp59 = icmp eq i32 %25, 2, !dbg !8763
  br i1 %cmp59, label %cond.true60, label %cond.false62, !dbg !8763

cond.true60:                                      ; preds = %if.end57
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8763
  %call61 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62134, i8 zeroext -1) #9, !dbg !8763
  br label %cond.end64, !dbg !8763

cond.false62:                                     ; preds = %if.end57
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8763
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62646, i8 zeroext -1) #9, !dbg !8763
  br label %cond.end64, !dbg !8763

cond.end64:                                       ; preds = %cond.false62, %cond.true60
  %cond65 = phi i32 [ %call61, %cond.true60 ], [ %call63, %cond.false62 ], !dbg !8763
  %cmp66 = icmp slt i32 %cond65, 0, !dbg !8765
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !8766

if.then67:                                        ; preds = %cond.end64
  br label %err, !dbg !8767

if.end68:                                         ; preds = %cond.end64
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8768
  %demod69 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !8768
  %29 = load i32, i32* %demod69, align 4, !dbg !8768
  %cmp70 = icmp eq i32 %29, 2, !dbg !8768
  br i1 %cmp70, label %cond.true71, label %cond.false73, !dbg !8768

cond.true71:                                      ; preds = %if.end68
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8768
  %call72 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62135, i8 zeroext -1) #9, !dbg !8768
  br label %cond.end75, !dbg !8768

cond.false73:                                     ; preds = %if.end68
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8768
  %call74 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62647, i8 zeroext -1) #9, !dbg !8768
  br label %cond.end75, !dbg !8768

cond.end75:                                       ; preds = %cond.false73, %cond.true71
  %cond76 = phi i32 [ %call72, %cond.true71 ], [ %call74, %cond.false73 ], !dbg !8768
  %cmp77 = icmp slt i32 %cond76, 0, !dbg !8770
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !8771

if.then78:                                        ; preds = %cond.end75
  br label %err, !dbg !8772

if.end79:                                         ; preds = %cond.end75
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8773
  %demod80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !8773
  %33 = load i32, i32* %demod80, align 4, !dbg !8773
  %cmp81 = icmp eq i32 %33, 2, !dbg !8773
  br i1 %cmp81, label %cond.true82, label %cond.false84, !dbg !8773

cond.true82:                                      ; preds = %if.end79
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8773
  %call83 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62136, i8 zeroext -1) #9, !dbg !8773
  br label %cond.end86, !dbg !8773

cond.false84:                                     ; preds = %if.end79
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8773
  %call85 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62648, i8 zeroext -1) #9, !dbg !8773
  br label %cond.end86, !dbg !8773

cond.end86:                                       ; preds = %cond.false84, %cond.true82
  %cond87 = phi i32 [ %call83, %cond.true82 ], [ %call85, %cond.false84 ], !dbg !8773
  %cmp88 = icmp slt i32 %cond87, 0, !dbg !8775
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !8776

if.then89:                                        ; preds = %cond.end86
  br label %err, !dbg !8777

if.end90:                                         ; preds = %cond.end86
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8778
  %demod91 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !8778
  %37 = load i32, i32* %demod91, align 4, !dbg !8778
  %cmp92 = icmp eq i32 %37, 2, !dbg !8778
  br i1 %cmp92, label %cond.true93, label %cond.false95, !dbg !8778

cond.true93:                                      ; preds = %if.end90
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8778
  %call94 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62137, i8 zeroext -1) #9, !dbg !8778
  br label %cond.end97, !dbg !8778

cond.false95:                                     ; preds = %if.end90
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8778
  %call96 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62649, i8 zeroext -1) #9, !dbg !8778
  br label %cond.end97, !dbg !8778

cond.end97:                                       ; preds = %cond.false95, %cond.true93
  %cond98 = phi i32 [ %call94, %cond.true93 ], [ %call96, %cond.false95 ], !dbg !8778
  %cmp99 = icmp slt i32 %cond98, 0, !dbg !8780
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !8781

if.then100:                                       ; preds = %cond.end97
  br label %err, !dbg !8782

if.end101:                                        ; preds = %cond.end97
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8783
  %demod102 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !8783
  %41 = load i32, i32* %demod102, align 4, !dbg !8783
  %cmp103 = icmp eq i32 %41, 2, !dbg !8783
  br i1 %cmp103, label %cond.true104, label %cond.false106, !dbg !8783

cond.true104:                                     ; preds = %if.end101
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8783
  %call105 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62138, i8 zeroext -1) #9, !dbg !8783
  br label %cond.end108, !dbg !8783

cond.false106:                                    ; preds = %if.end101
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8783
  %call107 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62650, i8 zeroext -1) #9, !dbg !8783
  br label %cond.end108, !dbg !8783

cond.end108:                                      ; preds = %cond.false106, %cond.true104
  %cond109 = phi i32 [ %call105, %cond.true104 ], [ %call107, %cond.false106 ], !dbg !8783
  %cmp110 = icmp slt i32 %cond109, 0, !dbg !8785
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !8786

if.then111:                                       ; preds = %cond.end108
  br label %err, !dbg !8787

if.end112:                                        ; preds = %cond.end108
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8788
  %demod113 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 1, !dbg !8788
  %45 = load i32, i32* %demod113, align 4, !dbg !8788
  %cmp114 = icmp eq i32 %45, 2, !dbg !8788
  br i1 %cmp114, label %cond.true115, label %cond.false117, !dbg !8788

cond.true115:                                     ; preds = %if.end112
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8788
  %call116 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62139, i8 zeroext -1) #9, !dbg !8788
  br label %cond.end119, !dbg !8788

cond.false117:                                    ; preds = %if.end112
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8788
  %call118 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 62651, i8 zeroext -1) #9, !dbg !8788
  br label %cond.end119, !dbg !8788

cond.end119:                                      ; preds = %cond.false117, %cond.true115
  %cond120 = phi i32 [ %call116, %cond.true115 ], [ %call118, %cond.false117 ], !dbg !8788
  %cmp121 = icmp slt i32 %cond120, 0, !dbg !8790
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !8791

if.then122:                                       ; preds = %cond.end119
  br label %err, !dbg !8792

if.end123:                                        ; preds = %cond.end119
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8793
  %demod124 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 1, !dbg !8793
  %49 = load i32, i32* %demod124, align 4, !dbg !8793
  %cmp125 = icmp eq i32 %49, 2, !dbg !8793
  br i1 %cmp125, label %cond.true126, label %cond.false128, !dbg !8793

cond.true126:                                     ; preds = %if.end123
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8793
  %call127 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62140, i8 zeroext -1) #9, !dbg !8793
  br label %cond.end130, !dbg !8793

cond.false128:                                    ; preds = %if.end123
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8793
  %call129 = call i32 @stv090x_write_reg(%struct.stv090x_state* %51, i32 62652, i8 zeroext -1) #9, !dbg !8793
  br label %cond.end130, !dbg !8793

cond.end130:                                      ; preds = %cond.false128, %cond.true126
  %cond131 = phi i32 [ %call127, %cond.true126 ], [ %call129, %cond.false128 ], !dbg !8793
  %cmp132 = icmp slt i32 %cond131, 0, !dbg !8795
  br i1 %cmp132, label %if.then133, label %if.end134, !dbg !8796

if.then133:                                       ; preds = %cond.end130
  br label %err, !dbg !8797

if.end134:                                        ; preds = %cond.end130
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8798
  %demod135 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 1, !dbg !8798
  %53 = load i32, i32* %demod135, align 4, !dbg !8798
  %cmp136 = icmp eq i32 %53, 2, !dbg !8798
  br i1 %cmp136, label %cond.true137, label %cond.false139, !dbg !8798

cond.true137:                                     ; preds = %if.end134
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8798
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 62141, i8 zeroext -1) #9, !dbg !8798
  br label %cond.end141, !dbg !8798

cond.false139:                                    ; preds = %if.end134
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8798
  %call140 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 62653, i8 zeroext -1) #9, !dbg !8798
  br label %cond.end141, !dbg !8798

cond.end141:                                      ; preds = %cond.false139, %cond.true137
  %cond142 = phi i32 [ %call138, %cond.true137 ], [ %call140, %cond.false139 ], !dbg !8798
  %cmp143 = icmp slt i32 %cond142, 0, !dbg !8800
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !8801

if.then144:                                       ; preds = %cond.end141
  br label %err, !dbg !8802

if.end145:                                        ; preds = %cond.end141
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8803
  %demod146 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !8803
  %57 = load i32, i32* %demod146, align 4, !dbg !8803
  %cmp147 = icmp eq i32 %57, 2, !dbg !8803
  br i1 %cmp147, label %cond.true148, label %cond.false150, !dbg !8803

cond.true148:                                     ; preds = %if.end145
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8803
  %call149 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62142, i8 zeroext -1) #9, !dbg !8803
  br label %cond.end152, !dbg !8803

cond.false150:                                    ; preds = %if.end145
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8803
  %call151 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 62654, i8 zeroext -1) #9, !dbg !8803
  br label %cond.end152, !dbg !8803

cond.end152:                                      ; preds = %cond.false150, %cond.true148
  %cond153 = phi i32 [ %call149, %cond.true148 ], [ %call151, %cond.false150 ], !dbg !8803
  %cmp154 = icmp slt i32 %cond153, 0, !dbg !8805
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !8806

if.then155:                                       ; preds = %cond.end152
  br label %err, !dbg !8807

if.end156:                                        ; preds = %cond.end152
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8808
  %demod157 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %60, i32 0, i32 1, !dbg !8808
  %61 = load i32, i32* %demod157, align 4, !dbg !8808
  %cmp158 = icmp eq i32 %61, 2, !dbg !8808
  br i1 %cmp158, label %cond.true159, label %cond.false161, !dbg !8808

cond.true159:                                     ; preds = %if.end156
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8808
  %call160 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 62143, i8 zeroext -1) #9, !dbg !8808
  br label %cond.end163, !dbg !8808

cond.false161:                                    ; preds = %if.end156
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8808
  %call162 = call i32 @stv090x_write_reg(%struct.stv090x_state* %63, i32 62655, i8 zeroext -1) #9, !dbg !8808
  br label %cond.end163, !dbg !8808

cond.end163:                                      ; preds = %cond.false161, %cond.true159
  %cond164 = phi i32 [ %call160, %cond.true159 ], [ %call162, %cond.false161 ], !dbg !8808
  %cmp165 = icmp slt i32 %cond164, 0, !dbg !8810
  br i1 %cmp165, label %if.then166, label %if.end167, !dbg !8811

if.then166:                                       ; preds = %cond.end163
  br label %err, !dbg !8812

if.end167:                                        ; preds = %cond.end163
  store i32 0, i32* %retval, align 4, !dbg !8813
  br label %return, !dbg !8813

err:                                              ; preds = %if.then166, %if.then155, %if.then144, %if.then133, %if.then122, %if.then111, %if.then100, %if.then89, %if.then78, %if.then67, %if.then56, %if.then45, %if.then34, %if.then23, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !8814), !dbg !8815
  br label %do.body, !dbg !8816

do.body:                                          ; preds = %err
  %64 = load i32, i32* @verbose, align 4, !dbg !8817
  %cmp168 = icmp ugt i32 %64, 0, !dbg !8817
  br i1 %cmp168, label %land.lhs.true, label %if.else, !dbg !8817

land.lhs.true:                                    ; preds = %do.body
  %65 = load i32, i32* @verbose, align 4, !dbg !8817
  %cmp169 = icmp ugt i32 %65, 0, !dbg !8817
  br i1 %cmp169, label %if.then170, label %if.else, !dbg !8822

if.then170:                                       ; preds = %land.lhs.true
  %call171 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_stop_modcod, i64 0, i64 0)) #13, !dbg !8817
  br label %if.end192, !dbg !8817

if.else:                                          ; preds = %land.lhs.true, %do.body
  %66 = load i32, i32* @verbose, align 4, !dbg !8823
  %cmp172 = icmp ugt i32 %66, 1, !dbg !8823
  br i1 %cmp172, label %land.lhs.true173, label %if.else177, !dbg !8823

land.lhs.true173:                                 ; preds = %if.else
  %67 = load i32, i32* @verbose, align 4, !dbg !8823
  %cmp174 = icmp ugt i32 %67, 0, !dbg !8823
  br i1 %cmp174, label %if.then175, label %if.else177, !dbg !8817

if.then175:                                       ; preds = %land.lhs.true173
  %call176 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_stop_modcod, i64 0, i64 0)) #13, !dbg !8823
  br label %if.end191, !dbg !8823

if.else177:                                       ; preds = %land.lhs.true173, %if.else
  %68 = load i32, i32* @verbose, align 4, !dbg !8825
  %cmp178 = icmp ugt i32 %68, 2, !dbg !8825
  br i1 %cmp178, label %land.lhs.true179, label %if.else183, !dbg !8825

land.lhs.true179:                                 ; preds = %if.else177
  %69 = load i32, i32* @verbose, align 4, !dbg !8825
  %cmp180 = icmp ugt i32 %69, 0, !dbg !8825
  br i1 %cmp180, label %if.then181, label %if.else183, !dbg !8823

if.then181:                                       ; preds = %land.lhs.true179
  %call182 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_stop_modcod, i64 0, i64 0)) #13, !dbg !8825
  br label %if.end190, !dbg !8825

if.else183:                                       ; preds = %land.lhs.true179, %if.else177
  %70 = load i32, i32* @verbose, align 4, !dbg !8827
  %cmp184 = icmp ugt i32 %70, 3, !dbg !8827
  br i1 %cmp184, label %land.lhs.true185, label %if.end189, !dbg !8827

land.lhs.true185:                                 ; preds = %if.else183
  %71 = load i32, i32* @verbose, align 4, !dbg !8827
  %cmp186 = icmp ugt i32 %71, 0, !dbg !8827
  br i1 %cmp186, label %if.then187, label %if.end189, !dbg !8825

if.then187:                                       ; preds = %land.lhs.true185
  %call188 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_stop_modcod, i64 0, i64 0)) #13, !dbg !8827
  br label %if.end189, !dbg !8827

if.end189:                                        ; preds = %if.then187, %land.lhs.true185, %if.else183
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then181
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then175
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then170
  br label %do.end, !dbg !8829

do.end:                                           ; preds = %if.end192
  store i32 -1, i32* %retval, align 4, !dbg !8830
  br label %return, !dbg !8830

return:                                           ; preds = %do.end, %if.end167
  %72 = load i32, i32* %retval, align 4, !dbg !8831
  ret i32 %72, !dbg !8831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_activate_modcod_single(%struct.stv090x_state* %state) #0 !dbg !8832 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !8833, metadata !DIExpression()), !dbg !8834
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8835
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !8835
  %1 = load i32, i32* %demod, align 4, !dbg !8835
  %cmp = icmp eq i32 %1, 2, !dbg !8835
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8835

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8835
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %2, i32 62128, i8 zeroext -1) #9, !dbg !8835
  br label %cond.end, !dbg !8835

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8835
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %3, i32 62640, i8 zeroext -1) #9, !dbg !8835
  br label %cond.end, !dbg !8835

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !8835
  %cmp2 = icmp slt i32 %cond, 0, !dbg !8837
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8838

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !8839

if.end:                                           ; preds = %cond.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8840
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !8840
  %5 = load i32, i32* %demod3, align 4, !dbg !8840
  %cmp4 = icmp eq i32 %5, 2, !dbg !8840
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !8840

cond.true5:                                       ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8840
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %6, i32 62129, i8 zeroext -16) #9, !dbg !8840
  br label %cond.end9, !dbg !8840

cond.false7:                                      ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8840
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 62641, i8 zeroext -16) #9, !dbg !8840
  br label %cond.end9, !dbg !8840

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !8840
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !8842
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8843

if.then12:                                        ; preds = %cond.end9
  br label %err, !dbg !8844

if.end13:                                         ; preds = %cond.end9
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8845
  %demod14 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !8845
  %9 = load i32, i32* %demod14, align 4, !dbg !8845
  %cmp15 = icmp eq i32 %9, 2, !dbg !8845
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !8845

cond.true16:                                      ; preds = %if.end13
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8845
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62130, i8 zeroext 0) #9, !dbg !8845
  br label %cond.end20, !dbg !8845

cond.false18:                                     ; preds = %if.end13
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8845
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62642, i8 zeroext 0) #9, !dbg !8845
  br label %cond.end20, !dbg !8845

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !8845
  %cmp22 = icmp slt i32 %cond21, 0, !dbg !8847
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !8848

if.then23:                                        ; preds = %cond.end20
  br label %err, !dbg !8849

if.end24:                                         ; preds = %cond.end20
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8850
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !8850
  %13 = load i32, i32* %demod25, align 4, !dbg !8850
  %cmp26 = icmp eq i32 %13, 2, !dbg !8850
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !8850

cond.true27:                                      ; preds = %if.end24
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8850
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62131, i8 zeroext 0) #9, !dbg !8850
  br label %cond.end31, !dbg !8850

cond.false29:                                     ; preds = %if.end24
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8850
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62643, i8 zeroext 0) #9, !dbg !8850
  br label %cond.end31, !dbg !8850

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !8850
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !8852
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !8853

if.then34:                                        ; preds = %cond.end31
  br label %err, !dbg !8854

if.end35:                                         ; preds = %cond.end31
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8855
  %demod36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !8855
  %17 = load i32, i32* %demod36, align 4, !dbg !8855
  %cmp37 = icmp eq i32 %17, 2, !dbg !8855
  br i1 %cmp37, label %cond.true38, label %cond.false40, !dbg !8855

cond.true38:                                      ; preds = %if.end35
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8855
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62132, i8 zeroext 0) #9, !dbg !8855
  br label %cond.end42, !dbg !8855

cond.false40:                                     ; preds = %if.end35
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8855
  %call41 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62644, i8 zeroext 0) #9, !dbg !8855
  br label %cond.end42, !dbg !8855

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !8855
  %cmp44 = icmp slt i32 %cond43, 0, !dbg !8857
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !8858

if.then45:                                        ; preds = %cond.end42
  br label %err, !dbg !8859

if.end46:                                         ; preds = %cond.end42
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8860
  %demod47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !8860
  %21 = load i32, i32* %demod47, align 4, !dbg !8860
  %cmp48 = icmp eq i32 %21, 2, !dbg !8860
  br i1 %cmp48, label %cond.true49, label %cond.false51, !dbg !8860

cond.true49:                                      ; preds = %if.end46
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8860
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62133, i8 zeroext 0) #9, !dbg !8860
  br label %cond.end53, !dbg !8860

cond.false51:                                     ; preds = %if.end46
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8860
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62645, i8 zeroext 0) #9, !dbg !8860
  br label %cond.end53, !dbg !8860

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !8860
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !8862
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !8863

if.then56:                                        ; preds = %cond.end53
  br label %err, !dbg !8864

if.end57:                                         ; preds = %cond.end53
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8865
  %demod58 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !8865
  %25 = load i32, i32* %demod58, align 4, !dbg !8865
  %cmp59 = icmp eq i32 %25, 2, !dbg !8865
  br i1 %cmp59, label %cond.true60, label %cond.false62, !dbg !8865

cond.true60:                                      ; preds = %if.end57
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8865
  %call61 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62134, i8 zeroext 0) #9, !dbg !8865
  br label %cond.end64, !dbg !8865

cond.false62:                                     ; preds = %if.end57
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8865
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62646, i8 zeroext 0) #9, !dbg !8865
  br label %cond.end64, !dbg !8865

cond.end64:                                       ; preds = %cond.false62, %cond.true60
  %cond65 = phi i32 [ %call61, %cond.true60 ], [ %call63, %cond.false62 ], !dbg !8865
  %cmp66 = icmp slt i32 %cond65, 0, !dbg !8867
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !8868

if.then67:                                        ; preds = %cond.end64
  br label %err, !dbg !8869

if.end68:                                         ; preds = %cond.end64
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8870
  %demod69 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !8870
  %29 = load i32, i32* %demod69, align 4, !dbg !8870
  %cmp70 = icmp eq i32 %29, 2, !dbg !8870
  br i1 %cmp70, label %cond.true71, label %cond.false73, !dbg !8870

cond.true71:                                      ; preds = %if.end68
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8870
  %call72 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62135, i8 zeroext 0) #9, !dbg !8870
  br label %cond.end75, !dbg !8870

cond.false73:                                     ; preds = %if.end68
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8870
  %call74 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62647, i8 zeroext 0) #9, !dbg !8870
  br label %cond.end75, !dbg !8870

cond.end75:                                       ; preds = %cond.false73, %cond.true71
  %cond76 = phi i32 [ %call72, %cond.true71 ], [ %call74, %cond.false73 ], !dbg !8870
  %cmp77 = icmp slt i32 %cond76, 0, !dbg !8872
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !8873

if.then78:                                        ; preds = %cond.end75
  br label %err, !dbg !8874

if.end79:                                         ; preds = %cond.end75
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8875
  %demod80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !8875
  %33 = load i32, i32* %demod80, align 4, !dbg !8875
  %cmp81 = icmp eq i32 %33, 2, !dbg !8875
  br i1 %cmp81, label %cond.true82, label %cond.false84, !dbg !8875

cond.true82:                                      ; preds = %if.end79
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8875
  %call83 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62136, i8 zeroext 0) #9, !dbg !8875
  br label %cond.end86, !dbg !8875

cond.false84:                                     ; preds = %if.end79
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8875
  %call85 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62648, i8 zeroext 0) #9, !dbg !8875
  br label %cond.end86, !dbg !8875

cond.end86:                                       ; preds = %cond.false84, %cond.true82
  %cond87 = phi i32 [ %call83, %cond.true82 ], [ %call85, %cond.false84 ], !dbg !8875
  %cmp88 = icmp slt i32 %cond87, 0, !dbg !8877
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !8878

if.then89:                                        ; preds = %cond.end86
  br label %err, !dbg !8879

if.end90:                                         ; preds = %cond.end86
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8880
  %demod91 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !8880
  %37 = load i32, i32* %demod91, align 4, !dbg !8880
  %cmp92 = icmp eq i32 %37, 2, !dbg !8880
  br i1 %cmp92, label %cond.true93, label %cond.false95, !dbg !8880

cond.true93:                                      ; preds = %if.end90
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8880
  %call94 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62137, i8 zeroext 0) #9, !dbg !8880
  br label %cond.end97, !dbg !8880

cond.false95:                                     ; preds = %if.end90
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8880
  %call96 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62649, i8 zeroext 0) #9, !dbg !8880
  br label %cond.end97, !dbg !8880

cond.end97:                                       ; preds = %cond.false95, %cond.true93
  %cond98 = phi i32 [ %call94, %cond.true93 ], [ %call96, %cond.false95 ], !dbg !8880
  %cmp99 = icmp slt i32 %cond98, 0, !dbg !8882
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !8883

if.then100:                                       ; preds = %cond.end97
  br label %err, !dbg !8884

if.end101:                                        ; preds = %cond.end97
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8885
  %demod102 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !8885
  %41 = load i32, i32* %demod102, align 4, !dbg !8885
  %cmp103 = icmp eq i32 %41, 2, !dbg !8885
  br i1 %cmp103, label %cond.true104, label %cond.false106, !dbg !8885

cond.true104:                                     ; preds = %if.end101
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8885
  %call105 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62138, i8 zeroext 0) #9, !dbg !8885
  br label %cond.end108, !dbg !8885

cond.false106:                                    ; preds = %if.end101
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8885
  %call107 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62650, i8 zeroext 0) #9, !dbg !8885
  br label %cond.end108, !dbg !8885

cond.end108:                                      ; preds = %cond.false106, %cond.true104
  %cond109 = phi i32 [ %call105, %cond.true104 ], [ %call107, %cond.false106 ], !dbg !8885
  %cmp110 = icmp slt i32 %cond109, 0, !dbg !8887
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !8888

if.then111:                                       ; preds = %cond.end108
  br label %err, !dbg !8889

if.end112:                                        ; preds = %cond.end108
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8890
  %demod113 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 1, !dbg !8890
  %45 = load i32, i32* %demod113, align 4, !dbg !8890
  %cmp114 = icmp eq i32 %45, 2, !dbg !8890
  br i1 %cmp114, label %cond.true115, label %cond.false117, !dbg !8890

cond.true115:                                     ; preds = %if.end112
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8890
  %call116 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62139, i8 zeroext 0) #9, !dbg !8890
  br label %cond.end119, !dbg !8890

cond.false117:                                    ; preds = %if.end112
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8890
  %call118 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 62651, i8 zeroext 0) #9, !dbg !8890
  br label %cond.end119, !dbg !8890

cond.end119:                                      ; preds = %cond.false117, %cond.true115
  %cond120 = phi i32 [ %call116, %cond.true115 ], [ %call118, %cond.false117 ], !dbg !8890
  %cmp121 = icmp slt i32 %cond120, 0, !dbg !8892
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !8893

if.then122:                                       ; preds = %cond.end119
  br label %err, !dbg !8894

if.end123:                                        ; preds = %cond.end119
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8895
  %demod124 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 1, !dbg !8895
  %49 = load i32, i32* %demod124, align 4, !dbg !8895
  %cmp125 = icmp eq i32 %49, 2, !dbg !8895
  br i1 %cmp125, label %cond.true126, label %cond.false128, !dbg !8895

cond.true126:                                     ; preds = %if.end123
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8895
  %call127 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62140, i8 zeroext 0) #9, !dbg !8895
  br label %cond.end130, !dbg !8895

cond.false128:                                    ; preds = %if.end123
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8895
  %call129 = call i32 @stv090x_write_reg(%struct.stv090x_state* %51, i32 62652, i8 zeroext 0) #9, !dbg !8895
  br label %cond.end130, !dbg !8895

cond.end130:                                      ; preds = %cond.false128, %cond.true126
  %cond131 = phi i32 [ %call127, %cond.true126 ], [ %call129, %cond.false128 ], !dbg !8895
  %cmp132 = icmp slt i32 %cond131, 0, !dbg !8897
  br i1 %cmp132, label %if.then133, label %if.end134, !dbg !8898

if.then133:                                       ; preds = %cond.end130
  br label %err, !dbg !8899

if.end134:                                        ; preds = %cond.end130
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8900
  %demod135 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 1, !dbg !8900
  %53 = load i32, i32* %demod135, align 4, !dbg !8900
  %cmp136 = icmp eq i32 %53, 2, !dbg !8900
  br i1 %cmp136, label %cond.true137, label %cond.false139, !dbg !8900

cond.true137:                                     ; preds = %if.end134
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8900
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 62141, i8 zeroext 0) #9, !dbg !8900
  br label %cond.end141, !dbg !8900

cond.false139:                                    ; preds = %if.end134
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8900
  %call140 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 62653, i8 zeroext 0) #9, !dbg !8900
  br label %cond.end141, !dbg !8900

cond.end141:                                      ; preds = %cond.false139, %cond.true137
  %cond142 = phi i32 [ %call138, %cond.true137 ], [ %call140, %cond.false139 ], !dbg !8900
  %cmp143 = icmp slt i32 %cond142, 0, !dbg !8902
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !8903

if.then144:                                       ; preds = %cond.end141
  br label %err, !dbg !8904

if.end145:                                        ; preds = %cond.end141
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8905
  %demod146 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !8905
  %57 = load i32, i32* %demod146, align 4, !dbg !8905
  %cmp147 = icmp eq i32 %57, 2, !dbg !8905
  br i1 %cmp147, label %cond.true148, label %cond.false150, !dbg !8905

cond.true148:                                     ; preds = %if.end145
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8905
  %call149 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62142, i8 zeroext 0) #9, !dbg !8905
  br label %cond.end152, !dbg !8905

cond.false150:                                    ; preds = %if.end145
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8905
  %call151 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 62654, i8 zeroext 0) #9, !dbg !8905
  br label %cond.end152, !dbg !8905

cond.end152:                                      ; preds = %cond.false150, %cond.true148
  %cond153 = phi i32 [ %call149, %cond.true148 ], [ %call151, %cond.false150 ], !dbg !8905
  %cmp154 = icmp slt i32 %cond153, 0, !dbg !8907
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !8908

if.then155:                                       ; preds = %cond.end152
  br label %err, !dbg !8909

if.end156:                                        ; preds = %cond.end152
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8910
  %demod157 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %60, i32 0, i32 1, !dbg !8910
  %61 = load i32, i32* %demod157, align 4, !dbg !8910
  %cmp158 = icmp eq i32 %61, 2, !dbg !8910
  br i1 %cmp158, label %cond.true159, label %cond.false161, !dbg !8910

cond.true159:                                     ; preds = %if.end156
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8910
  %call160 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 62143, i8 zeroext 15) #9, !dbg !8910
  br label %cond.end163, !dbg !8910

cond.false161:                                    ; preds = %if.end156
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !8910
  %call162 = call i32 @stv090x_write_reg(%struct.stv090x_state* %63, i32 62655, i8 zeroext 15) #9, !dbg !8910
  br label %cond.end163, !dbg !8910

cond.end163:                                      ; preds = %cond.false161, %cond.true159
  %cond164 = phi i32 [ %call160, %cond.true159 ], [ %call162, %cond.false161 ], !dbg !8910
  %cmp165 = icmp slt i32 %cond164, 0, !dbg !8912
  br i1 %cmp165, label %if.then166, label %if.end167, !dbg !8913

if.then166:                                       ; preds = %cond.end163
  br label %err, !dbg !8914

if.end167:                                        ; preds = %cond.end163
  store i32 0, i32* %retval, align 4, !dbg !8915
  br label %return, !dbg !8915

err:                                              ; preds = %if.then166, %if.then155, %if.then144, %if.then133, %if.then122, %if.then111, %if.then100, %if.then89, %if.then78, %if.then67, %if.then56, %if.then45, %if.then34, %if.then23, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !8916), !dbg !8917
  br label %do.body, !dbg !8918

do.body:                                          ; preds = %err
  %64 = load i32, i32* @verbose, align 4, !dbg !8919
  %cmp168 = icmp ugt i32 %64, 0, !dbg !8919
  br i1 %cmp168, label %land.lhs.true, label %if.else, !dbg !8919

land.lhs.true:                                    ; preds = %do.body
  %65 = load i32, i32* @verbose, align 4, !dbg !8919
  %cmp169 = icmp ugt i32 %65, 0, !dbg !8919
  br i1 %cmp169, label %if.then170, label %if.else, !dbg !8924

if.then170:                                       ; preds = %land.lhs.true
  %call171 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stv090x_activate_modcod_single, i64 0, i64 0)) #13, !dbg !8919
  br label %if.end192, !dbg !8919

if.else:                                          ; preds = %land.lhs.true, %do.body
  %66 = load i32, i32* @verbose, align 4, !dbg !8925
  %cmp172 = icmp ugt i32 %66, 1, !dbg !8925
  br i1 %cmp172, label %land.lhs.true173, label %if.else177, !dbg !8925

land.lhs.true173:                                 ; preds = %if.else
  %67 = load i32, i32* @verbose, align 4, !dbg !8925
  %cmp174 = icmp ugt i32 %67, 0, !dbg !8925
  br i1 %cmp174, label %if.then175, label %if.else177, !dbg !8919

if.then175:                                       ; preds = %land.lhs.true173
  %call176 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stv090x_activate_modcod_single, i64 0, i64 0)) #13, !dbg !8925
  br label %if.end191, !dbg !8925

if.else177:                                       ; preds = %land.lhs.true173, %if.else
  %68 = load i32, i32* @verbose, align 4, !dbg !8927
  %cmp178 = icmp ugt i32 %68, 2, !dbg !8927
  br i1 %cmp178, label %land.lhs.true179, label %if.else183, !dbg !8927

land.lhs.true179:                                 ; preds = %if.else177
  %69 = load i32, i32* @verbose, align 4, !dbg !8927
  %cmp180 = icmp ugt i32 %69, 0, !dbg !8927
  br i1 %cmp180, label %if.then181, label %if.else183, !dbg !8925

if.then181:                                       ; preds = %land.lhs.true179
  %call182 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stv090x_activate_modcod_single, i64 0, i64 0)) #13, !dbg !8927
  br label %if.end190, !dbg !8927

if.else183:                                       ; preds = %land.lhs.true179, %if.else177
  %70 = load i32, i32* @verbose, align 4, !dbg !8929
  %cmp184 = icmp ugt i32 %70, 3, !dbg !8929
  br i1 %cmp184, label %land.lhs.true185, label %if.end189, !dbg !8929

land.lhs.true185:                                 ; preds = %if.else183
  %71 = load i32, i32* @verbose, align 4, !dbg !8929
  %cmp186 = icmp ugt i32 %71, 0, !dbg !8929
  br i1 %cmp186, label %if.then187, label %if.end189, !dbg !8927

if.then187:                                       ; preds = %land.lhs.true185
  %call188 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.stv090x_activate_modcod_single, i64 0, i64 0)) #13, !dbg !8929
  br label %if.end189, !dbg !8929

if.end189:                                        ; preds = %if.then187, %land.lhs.true185, %if.else183
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then181
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then175
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then170
  br label %do.end, !dbg !8931

do.end:                                           ; preds = %if.end192
  store i32 -1, i32* %retval, align 4, !dbg !8932
  br label %return, !dbg !8932

return:                                           ; preds = %do.end, %if.end167
  %72 = load i32, i32* %retval, align 4, !dbg !8933
  ret i32 %72, !dbg !8933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_table_lookup(%struct.stv090x_tab* %tab, i32 %max, i32 %val) #0 !dbg !8934 {
entry:
  %tab.addr = alloca %struct.stv090x_tab*, align 8
  %max.addr = alloca i32, align 4
  %val.addr = alloca i32, align 4
  %res = alloca i32, align 4
  %min = alloca i32, align 4
  %med = alloca i32, align 4
  store %struct.stv090x_tab* %tab, %struct.stv090x_tab** %tab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_tab** %tab.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store i32 %max, i32* %max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata i32* %res, metadata !8944, metadata !DIExpression()), !dbg !8945
  store i32 0, i32* %res, align 4, !dbg !8945
  call void @llvm.dbg.declare(metadata i32* %min, metadata !8946, metadata !DIExpression()), !dbg !8947
  store i32 0, i32* %min, align 4, !dbg !8947
  call void @llvm.dbg.declare(metadata i32* %med, metadata !8948, metadata !DIExpression()), !dbg !8949
  %0 = load i32, i32* %val.addr, align 4, !dbg !8950
  %1 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !8952
  %2 = load i32, i32* %min, align 4, !dbg !8953
  %idxprom = sext i32 %2 to i64, !dbg !8952
  %arrayidx = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %1, i64 %idxprom, !dbg !8952
  %read = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx, i32 0, i32 1, !dbg !8954
  %3 = load i32, i32* %read, align 4, !dbg !8954
  %cmp = icmp sge i32 %0, %3, !dbg !8955
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !8956

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* %val.addr, align 4, !dbg !8957
  %5 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !8958
  %6 = load i32, i32* %max.addr, align 4, !dbg !8959
  %idxprom1 = sext i32 %6 to i64, !dbg !8958
  %arrayidx2 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %5, i64 %idxprom1, !dbg !8958
  %read3 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx2, i32 0, i32 1, !dbg !8960
  %7 = load i32, i32* %read3, align 4, !dbg !8960
  %cmp4 = icmp slt i32 %4, %7, !dbg !8961
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !8962

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %8 = load i32, i32* %val.addr, align 4, !dbg !8963
  %9 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !8964
  %10 = load i32, i32* %max.addr, align 4, !dbg !8965
  %idxprom5 = sext i32 %10 to i64, !dbg !8964
  %arrayidx6 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %9, i64 %idxprom5, !dbg !8964
  %read7 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx6, i32 0, i32 1, !dbg !8966
  %11 = load i32, i32* %read7, align 4, !dbg !8966
  %cmp8 = icmp sge i32 %8, %11, !dbg !8967
  br i1 %cmp8, label %land.lhs.true9, label %if.else57, !dbg !8968

land.lhs.true9:                                   ; preds = %lor.lhs.false
  %12 = load i32, i32* %val.addr, align 4, !dbg !8969
  %13 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !8970
  %14 = load i32, i32* %min, align 4, !dbg !8971
  %idxprom10 = sext i32 %14 to i64, !dbg !8970
  %arrayidx11 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %13, i64 %idxprom10, !dbg !8970
  %read12 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx11, i32 0, i32 1, !dbg !8972
  %15 = load i32, i32* %read12, align 4, !dbg !8972
  %cmp13 = icmp slt i32 %12, %15, !dbg !8973
  br i1 %cmp13, label %if.then, label %if.else57, !dbg !8974

if.then:                                          ; preds = %land.lhs.true9, %land.lhs.true
  br label %while.cond, !dbg !8975

while.cond:                                       ; preds = %if.end, %if.then
  %16 = load i32, i32* %max.addr, align 4, !dbg !8977
  %17 = load i32, i32* %min, align 4, !dbg !8978
  %sub = sub i32 %16, %17, !dbg !8979
  %cmp14 = icmp sgt i32 %sub, 1, !dbg !8980
  br i1 %cmp14, label %while.body, label %while.end, !dbg !8975

while.body:                                       ; preds = %while.cond
  %18 = load i32, i32* %max.addr, align 4, !dbg !8981
  %19 = load i32, i32* %min, align 4, !dbg !8983
  %add = add i32 %18, %19, !dbg !8984
  %div = sdiv i32 %add, 2, !dbg !8985
  store i32 %div, i32* %med, align 4, !dbg !8986
  %20 = load i32, i32* %val.addr, align 4, !dbg !8987
  %21 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !8989
  %22 = load i32, i32* %min, align 4, !dbg !8990
  %idxprom15 = sext i32 %22 to i64, !dbg !8989
  %arrayidx16 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %21, i64 %idxprom15, !dbg !8989
  %read17 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx16, i32 0, i32 1, !dbg !8991
  %23 = load i32, i32* %read17, align 4, !dbg !8991
  %cmp18 = icmp sge i32 %20, %23, !dbg !8992
  br i1 %cmp18, label %land.lhs.true19, label %lor.lhs.false24, !dbg !8993

land.lhs.true19:                                  ; preds = %while.body
  %24 = load i32, i32* %val.addr, align 4, !dbg !8994
  %25 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !8995
  %26 = load i32, i32* %med, align 4, !dbg !8996
  %idxprom20 = sext i32 %26 to i64, !dbg !8995
  %arrayidx21 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %25, i64 %idxprom20, !dbg !8995
  %read22 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx21, i32 0, i32 1, !dbg !8997
  %27 = load i32, i32* %read22, align 4, !dbg !8997
  %cmp23 = icmp slt i32 %24, %27, !dbg !8998
  br i1 %cmp23, label %if.then34, label %lor.lhs.false24, !dbg !8999

lor.lhs.false24:                                  ; preds = %land.lhs.true19, %while.body
  %28 = load i32, i32* %val.addr, align 4, !dbg !9000
  %29 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9001
  %30 = load i32, i32* %med, align 4, !dbg !9002
  %idxprom25 = sext i32 %30 to i64, !dbg !9001
  %arrayidx26 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %29, i64 %idxprom25, !dbg !9001
  %read27 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx26, i32 0, i32 1, !dbg !9003
  %31 = load i32, i32* %read27, align 4, !dbg !9003
  %cmp28 = icmp sge i32 %28, %31, !dbg !9004
  br i1 %cmp28, label %land.lhs.true29, label %if.else, !dbg !9005

land.lhs.true29:                                  ; preds = %lor.lhs.false24
  %32 = load i32, i32* %val.addr, align 4, !dbg !9006
  %33 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9007
  %34 = load i32, i32* %min, align 4, !dbg !9008
  %idxprom30 = sext i32 %34 to i64, !dbg !9007
  %arrayidx31 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %33, i64 %idxprom30, !dbg !9007
  %read32 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx31, i32 0, i32 1, !dbg !9009
  %35 = load i32, i32* %read32, align 4, !dbg !9009
  %cmp33 = icmp slt i32 %32, %35, !dbg !9010
  br i1 %cmp33, label %if.then34, label %if.else, !dbg !9011

if.then34:                                        ; preds = %land.lhs.true29, %land.lhs.true19
  %36 = load i32, i32* %med, align 4, !dbg !9012
  store i32 %36, i32* %max.addr, align 4, !dbg !9013
  br label %if.end, !dbg !9014

if.else:                                          ; preds = %land.lhs.true29, %lor.lhs.false24
  %37 = load i32, i32* %med, align 4, !dbg !9015
  store i32 %37, i32* %min, align 4, !dbg !9016
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then34
  br label %while.cond, !dbg !8975, !llvm.loop !9017

while.end:                                        ; preds = %while.cond
  %38 = load i32, i32* %val.addr, align 4, !dbg !9019
  %39 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9020
  %40 = load i32, i32* %min, align 4, !dbg !9021
  %idxprom35 = sext i32 %40 to i64, !dbg !9020
  %arrayidx36 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %39, i64 %idxprom35, !dbg !9020
  %read37 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx36, i32 0, i32 1, !dbg !9022
  %41 = load i32, i32* %read37, align 4, !dbg !9022
  %sub38 = sub i32 %38, %41, !dbg !9023
  %42 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9024
  %43 = load i32, i32* %max.addr, align 4, !dbg !9025
  %idxprom39 = sext i32 %43 to i64, !dbg !9024
  %arrayidx40 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %42, i64 %idxprom39, !dbg !9024
  %real = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx40, i32 0, i32 0, !dbg !9026
  %44 = load i32, i32* %real, align 4, !dbg !9026
  %45 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9027
  %46 = load i32, i32* %min, align 4, !dbg !9028
  %idxprom41 = sext i32 %46 to i64, !dbg !9027
  %arrayidx42 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %45, i64 %idxprom41, !dbg !9027
  %real43 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx42, i32 0, i32 0, !dbg !9029
  %47 = load i32, i32* %real43, align 4, !dbg !9029
  %sub44 = sub i32 %44, %47, !dbg !9030
  %mul = mul i32 %sub38, %sub44, !dbg !9031
  %48 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9032
  %49 = load i32, i32* %max.addr, align 4, !dbg !9033
  %idxprom45 = sext i32 %49 to i64, !dbg !9032
  %arrayidx46 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %48, i64 %idxprom45, !dbg !9032
  %read47 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx46, i32 0, i32 1, !dbg !9034
  %50 = load i32, i32* %read47, align 4, !dbg !9034
  %51 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9035
  %52 = load i32, i32* %min, align 4, !dbg !9036
  %idxprom48 = sext i32 %52 to i64, !dbg !9035
  %arrayidx49 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %51, i64 %idxprom48, !dbg !9035
  %read50 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx49, i32 0, i32 1, !dbg !9037
  %53 = load i32, i32* %read50, align 4, !dbg !9037
  %sub51 = sub i32 %50, %53, !dbg !9038
  %div52 = sdiv i32 %mul, %sub51, !dbg !9039
  %54 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9040
  %55 = load i32, i32* %min, align 4, !dbg !9041
  %idxprom53 = sext i32 %55 to i64, !dbg !9040
  %arrayidx54 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %54, i64 %idxprom53, !dbg !9040
  %real55 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx54, i32 0, i32 0, !dbg !9042
  %56 = load i32, i32* %real55, align 4, !dbg !9042
  %add56 = add i32 %div52, %56, !dbg !9043
  store i32 %add56, i32* %res, align 4, !dbg !9044
  br label %if.end106, !dbg !9045

if.else57:                                        ; preds = %land.lhs.true9, %lor.lhs.false
  %57 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9046
  %58 = load i32, i32* %min, align 4, !dbg !9049
  %idxprom58 = sext i32 %58 to i64, !dbg !9046
  %arrayidx59 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %57, i64 %idxprom58, !dbg !9046
  %read60 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx59, i32 0, i32 1, !dbg !9050
  %59 = load i32, i32* %read60, align 4, !dbg !9050
  %60 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9051
  %61 = load i32, i32* %max.addr, align 4, !dbg !9052
  %idxprom61 = sext i32 %61 to i64, !dbg !9051
  %arrayidx62 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %60, i64 %idxprom61, !dbg !9051
  %read63 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx62, i32 0, i32 1, !dbg !9053
  %62 = load i32, i32* %read63, align 4, !dbg !9053
  %cmp64 = icmp slt i32 %59, %62, !dbg !9054
  br i1 %cmp64, label %if.then65, label %if.else85, !dbg !9055

if.then65:                                        ; preds = %if.else57
  %63 = load i32, i32* %val.addr, align 4, !dbg !9056
  %64 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9059
  %65 = load i32, i32* %min, align 4, !dbg !9060
  %idxprom66 = sext i32 %65 to i64, !dbg !9059
  %arrayidx67 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %64, i64 %idxprom66, !dbg !9059
  %read68 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx67, i32 0, i32 1, !dbg !9061
  %66 = load i32, i32* %read68, align 4, !dbg !9061
  %cmp69 = icmp slt i32 %63, %66, !dbg !9062
  br i1 %cmp69, label %if.then70, label %if.else74, !dbg !9063

if.then70:                                        ; preds = %if.then65
  %67 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9064
  %68 = load i32, i32* %min, align 4, !dbg !9065
  %idxprom71 = sext i32 %68 to i64, !dbg !9064
  %arrayidx72 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %67, i64 %idxprom71, !dbg !9064
  %real73 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx72, i32 0, i32 0, !dbg !9066
  %69 = load i32, i32* %real73, align 4, !dbg !9066
  store i32 %69, i32* %res, align 4, !dbg !9067
  br label %if.end84, !dbg !9068

if.else74:                                        ; preds = %if.then65
  %70 = load i32, i32* %val.addr, align 4, !dbg !9069
  %71 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9071
  %72 = load i32, i32* %max.addr, align 4, !dbg !9072
  %idxprom75 = sext i32 %72 to i64, !dbg !9071
  %arrayidx76 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %71, i64 %idxprom75, !dbg !9071
  %read77 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx76, i32 0, i32 1, !dbg !9073
  %73 = load i32, i32* %read77, align 4, !dbg !9073
  %cmp78 = icmp sge i32 %70, %73, !dbg !9074
  br i1 %cmp78, label %if.then79, label %if.end83, !dbg !9075

if.then79:                                        ; preds = %if.else74
  %74 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9076
  %75 = load i32, i32* %max.addr, align 4, !dbg !9077
  %idxprom80 = sext i32 %75 to i64, !dbg !9076
  %arrayidx81 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %74, i64 %idxprom80, !dbg !9076
  %real82 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx81, i32 0, i32 0, !dbg !9078
  %76 = load i32, i32* %real82, align 4, !dbg !9078
  store i32 %76, i32* %res, align 4, !dbg !9079
  br label %if.end83, !dbg !9080

if.end83:                                         ; preds = %if.then79, %if.else74
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then70
  br label %if.end105, !dbg !9081

if.else85:                                        ; preds = %if.else57
  %77 = load i32, i32* %val.addr, align 4, !dbg !9082
  %78 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9085
  %79 = load i32, i32* %min, align 4, !dbg !9086
  %idxprom86 = sext i32 %79 to i64, !dbg !9085
  %arrayidx87 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %78, i64 %idxprom86, !dbg !9085
  %read88 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx87, i32 0, i32 1, !dbg !9087
  %80 = load i32, i32* %read88, align 4, !dbg !9087
  %cmp89 = icmp sge i32 %77, %80, !dbg !9088
  br i1 %cmp89, label %if.then90, label %if.else94, !dbg !9089

if.then90:                                        ; preds = %if.else85
  %81 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9090
  %82 = load i32, i32* %min, align 4, !dbg !9091
  %idxprom91 = sext i32 %82 to i64, !dbg !9090
  %arrayidx92 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %81, i64 %idxprom91, !dbg !9090
  %real93 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx92, i32 0, i32 0, !dbg !9092
  %83 = load i32, i32* %real93, align 4, !dbg !9092
  store i32 %83, i32* %res, align 4, !dbg !9093
  br label %if.end104, !dbg !9094

if.else94:                                        ; preds = %if.else85
  %84 = load i32, i32* %val.addr, align 4, !dbg !9095
  %85 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9097
  %86 = load i32, i32* %max.addr, align 4, !dbg !9098
  %idxprom95 = sext i32 %86 to i64, !dbg !9097
  %arrayidx96 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %85, i64 %idxprom95, !dbg !9097
  %read97 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx96, i32 0, i32 1, !dbg !9099
  %87 = load i32, i32* %read97, align 4, !dbg !9099
  %cmp98 = icmp slt i32 %84, %87, !dbg !9100
  br i1 %cmp98, label %if.then99, label %if.end103, !dbg !9101

if.then99:                                        ; preds = %if.else94
  %88 = load %struct.stv090x_tab*, %struct.stv090x_tab** %tab.addr, align 8, !dbg !9102
  %89 = load i32, i32* %max.addr, align 4, !dbg !9103
  %idxprom100 = sext i32 %89 to i64, !dbg !9102
  %arrayidx101 = getelementptr %struct.stv090x_tab, %struct.stv090x_tab* %88, i64 %idxprom100, !dbg !9102
  %real102 = getelementptr inbounds %struct.stv090x_tab, %struct.stv090x_tab* %arrayidx101, i32 0, i32 0, !dbg !9104
  %90 = load i32, i32* %real102, align 4, !dbg !9104
  store i32 %90, i32* %res, align 4, !dbg !9105
  br label %if.end103, !dbg !9106

if.end103:                                        ; preds = %if.then99, %if.else94
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then90
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end84
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %while.end
  %91 = load i32, i32* %res, align 4, !dbg !9107
  ret i32 %91, !dbg !9108
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_pls(%struct.stv090x_state* %state, i32 %pls_code) #0 !dbg !9109 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %pls_code.addr = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !9112, metadata !DIExpression()), !dbg !9113
  store i32 %pls_code, i32* %pls_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pls_code.addr, metadata !9114, metadata !DIExpression()), !dbg !9115
  br label %do.body, !dbg !9116

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @verbose, align 4, !dbg !9117
  %cmp = icmp ugt i32 %0, 0, !dbg !9117
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9117

land.lhs.true:                                    ; preds = %do.body
  %1 = load i32, i32* @verbose, align 4, !dbg !9117
  %cmp1 = icmp ugt i32 %1, 3, !dbg !9117
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9122

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %pls_code.addr, align 4, !dbg !9117
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.81, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0), i32 %2) #13, !dbg !9117
  br label %if.end21, !dbg !9117

if.else:                                          ; preds = %land.lhs.true, %do.body
  %3 = load i32, i32* @verbose, align 4, !dbg !9123
  %cmp2 = icmp ugt i32 %3, 1, !dbg !9123
  br i1 %cmp2, label %land.lhs.true3, label %if.else7, !dbg !9123

land.lhs.true3:                                   ; preds = %if.else
  %4 = load i32, i32* @verbose, align 4, !dbg !9123
  %cmp4 = icmp ugt i32 %4, 3, !dbg !9123
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !9117

if.then5:                                         ; preds = %land.lhs.true3
  %5 = load i32, i32* %pls_code.addr, align 4, !dbg !9123
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0), i32 %5) #13, !dbg !9123
  br label %if.end20, !dbg !9123

if.else7:                                         ; preds = %land.lhs.true3, %if.else
  %6 = load i32, i32* @verbose, align 4, !dbg !9125
  %cmp8 = icmp ugt i32 %6, 2, !dbg !9125
  br i1 %cmp8, label %land.lhs.true9, label %if.else13, !dbg !9125

land.lhs.true9:                                   ; preds = %if.else7
  %7 = load i32, i32* @verbose, align 4, !dbg !9125
  %cmp10 = icmp ugt i32 %7, 3, !dbg !9125
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !9123

if.then11:                                        ; preds = %land.lhs.true9
  %8 = load i32, i32* %pls_code.addr, align 4, !dbg !9125
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.83, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0), i32 %8) #13, !dbg !9125
  br label %if.end19, !dbg !9125

if.else13:                                        ; preds = %land.lhs.true9, %if.else7
  %9 = load i32, i32* @verbose, align 4, !dbg !9127
  %cmp14 = icmp ugt i32 %9, 3, !dbg !9127
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !9127

land.lhs.true15:                                  ; preds = %if.else13
  %10 = load i32, i32* @verbose, align 4, !dbg !9127
  %cmp16 = icmp ugt i32 %10, 3, !dbg !9127
  br i1 %cmp16, label %if.then17, label %if.end, !dbg !9125

if.then17:                                        ; preds = %land.lhs.true15
  %11 = load i32, i32* %pls_code.addr, align 4, !dbg !9127
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.84, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0), i32 %11) #13, !dbg !9127
  br label %if.end, !dbg !9127

if.end:                                           ; preds = %if.then17, %land.lhs.true15, %if.else13
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then11
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then5
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  br label %do.end, !dbg !9129

do.end:                                           ; preds = %if.end21
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9130
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !9130
  %13 = load i32, i32* %demod, align 4, !dbg !9130
  %cmp22 = icmp eq i32 %13, 2, !dbg !9130
  br i1 %cmp22, label %cond.true, label %cond.false, !dbg !9130

cond.true:                                        ; preds = %do.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9130
  %15 = load i32, i32* %pls_code.addr, align 4, !dbg !9130
  %and = and i32 %15, 255, !dbg !9130
  %conv = trunc i32 %and to i8, !dbg !9130
  %call23 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62126, i8 zeroext %conv) #9, !dbg !9130
  br label %cond.end, !dbg !9130

cond.false:                                       ; preds = %do.end
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9130
  %17 = load i32, i32* %pls_code.addr, align 4, !dbg !9130
  %and24 = and i32 %17, 255, !dbg !9130
  %conv25 = trunc i32 %and24 to i8, !dbg !9130
  %call26 = call i32 @stv090x_write_reg(%struct.stv090x_state* %16, i32 62638, i8 zeroext %conv25) #9, !dbg !9130
  br label %cond.end, !dbg !9130

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call23, %cond.true ], [ %call26, %cond.false ], !dbg !9130
  %cmp27 = icmp slt i32 %cond, 0, !dbg !9132
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !9133

if.then29:                                        ; preds = %cond.end
  br label %err, !dbg !9134

if.end30:                                         ; preds = %cond.end
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9135
  %demod31 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !9135
  %19 = load i32, i32* %demod31, align 4, !dbg !9135
  %cmp32 = icmp eq i32 %19, 2, !dbg !9135
  br i1 %cmp32, label %cond.true34, label %cond.false38, !dbg !9135

cond.true34:                                      ; preds = %if.end30
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9135
  %21 = load i32, i32* %pls_code.addr, align 4, !dbg !9135
  %shr = lshr i32 %21, 8, !dbg !9135
  %and35 = and i32 %shr, 255, !dbg !9135
  %conv36 = trunc i32 %and35 to i8, !dbg !9135
  %call37 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62125, i8 zeroext %conv36) #9, !dbg !9135
  br label %cond.end43, !dbg !9135

cond.false38:                                     ; preds = %if.end30
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9135
  %23 = load i32, i32* %pls_code.addr, align 4, !dbg !9135
  %shr39 = lshr i32 %23, 8, !dbg !9135
  %and40 = and i32 %shr39, 255, !dbg !9135
  %conv41 = trunc i32 %and40 to i8, !dbg !9135
  %call42 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62637, i8 zeroext %conv41) #9, !dbg !9135
  br label %cond.end43, !dbg !9135

cond.end43:                                       ; preds = %cond.false38, %cond.true34
  %cond44 = phi i32 [ %call37, %cond.true34 ], [ %call42, %cond.false38 ], !dbg !9135
  %cmp45 = icmp slt i32 %cond44, 0, !dbg !9137
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !9138

if.then47:                                        ; preds = %cond.end43
  br label %err, !dbg !9139

if.end48:                                         ; preds = %cond.end43
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9140
  %demod49 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !9140
  %25 = load i32, i32* %demod49, align 4, !dbg !9140
  %cmp50 = icmp eq i32 %25, 2, !dbg !9140
  br i1 %cmp50, label %cond.true52, label %cond.false56, !dbg !9140

cond.true52:                                      ; preds = %if.end48
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9140
  %27 = load i32, i32* %pls_code.addr, align 4, !dbg !9140
  %shr53 = lshr i32 %27, 16, !dbg !9140
  %or = or i32 4, %shr53, !dbg !9140
  %conv54 = trunc i32 %or to i8, !dbg !9140
  %call55 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62124, i8 zeroext %conv54) #9, !dbg !9140
  br label %cond.end61, !dbg !9140

cond.false56:                                     ; preds = %if.end48
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9140
  %29 = load i32, i32* %pls_code.addr, align 4, !dbg !9140
  %shr57 = lshr i32 %29, 16, !dbg !9140
  %or58 = or i32 4, %shr57, !dbg !9140
  %conv59 = trunc i32 %or58 to i8, !dbg !9140
  %call60 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 62636, i8 zeroext %conv59) #9, !dbg !9140
  br label %cond.end61, !dbg !9140

cond.end61:                                       ; preds = %cond.false56, %cond.true52
  %cond62 = phi i32 [ %call55, %cond.true52 ], [ %call60, %cond.false56 ], !dbg !9140
  %cmp63 = icmp slt i32 %cond62, 0, !dbg !9142
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !9143

if.then65:                                        ; preds = %cond.end61
  br label %err, !dbg !9144

if.end66:                                         ; preds = %cond.end61
  store i32 0, i32* %retval, align 4, !dbg !9145
  br label %return, !dbg !9145

err:                                              ; preds = %if.then65, %if.then47, %if.then29
  call void @llvm.dbg.label(metadata !9146), !dbg !9147
  br label %do.body67, !dbg !9148

do.body67:                                        ; preds = %err
  %30 = load i32, i32* @verbose, align 4, !dbg !9149
  %cmp68 = icmp ugt i32 %30, 0, !dbg !9149
  br i1 %cmp68, label %land.lhs.true70, label %if.else75, !dbg !9149

land.lhs.true70:                                  ; preds = %do.body67
  %31 = load i32, i32* @verbose, align 4, !dbg !9149
  %cmp71 = icmp ugt i32 %31, 0, !dbg !9149
  br i1 %cmp71, label %if.then73, label %if.else75, !dbg !9154

if.then73:                                        ; preds = %land.lhs.true70
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0)) #13, !dbg !9149
  br label %if.end102, !dbg !9149

if.else75:                                        ; preds = %land.lhs.true70, %do.body67
  %32 = load i32, i32* @verbose, align 4, !dbg !9155
  %cmp76 = icmp ugt i32 %32, 1, !dbg !9155
  br i1 %cmp76, label %land.lhs.true78, label %if.else83, !dbg !9155

land.lhs.true78:                                  ; preds = %if.else75
  %33 = load i32, i32* @verbose, align 4, !dbg !9155
  %cmp79 = icmp ugt i32 %33, 0, !dbg !9155
  br i1 %cmp79, label %if.then81, label %if.else83, !dbg !9149

if.then81:                                        ; preds = %land.lhs.true78
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0)) #13, !dbg !9155
  br label %if.end101, !dbg !9155

if.else83:                                        ; preds = %land.lhs.true78, %if.else75
  %34 = load i32, i32* @verbose, align 4, !dbg !9157
  %cmp84 = icmp ugt i32 %34, 2, !dbg !9157
  br i1 %cmp84, label %land.lhs.true86, label %if.else91, !dbg !9157

land.lhs.true86:                                  ; preds = %if.else83
  %35 = load i32, i32* @verbose, align 4, !dbg !9157
  %cmp87 = icmp ugt i32 %35, 0, !dbg !9157
  br i1 %cmp87, label %if.then89, label %if.else91, !dbg !9155

if.then89:                                        ; preds = %land.lhs.true86
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0)) #13, !dbg !9157
  br label %if.end100, !dbg !9157

if.else91:                                        ; preds = %land.lhs.true86, %if.else83
  %36 = load i32, i32* @verbose, align 4, !dbg !9159
  %cmp92 = icmp ugt i32 %36, 3, !dbg !9159
  br i1 %cmp92, label %land.lhs.true94, label %if.end99, !dbg !9159

land.lhs.true94:                                  ; preds = %if.else91
  %37 = load i32, i32* @verbose, align 4, !dbg !9159
  %cmp95 = icmp ugt i32 %37, 0, !dbg !9159
  br i1 %cmp95, label %if.then97, label %if.end99, !dbg !9157

if.then97:                                        ; preds = %land.lhs.true94
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_pls, i64 0, i64 0)) #13, !dbg !9159
  br label %if.end99, !dbg !9159

if.end99:                                         ; preds = %if.then97, %land.lhs.true94, %if.else91
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then89
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then81
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.then73
  br label %do.end103, !dbg !9161

do.end103:                                        ; preds = %if.end102
  store i32 -1, i32* %retval, align 4, !dbg !9162
  br label %return, !dbg !9162

return:                                           ; preds = %do.end103, %if.end66
  %38 = load i32, i32* %retval, align 4, !dbg !9163
  ret i32 %38, !dbg !9163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_mis(%struct.stv090x_state* %state, i32 %mis) #0 !dbg !9164 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %mis.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !9165, metadata !DIExpression()), !dbg !9166
  store i32 %mis, i32* %mis.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mis.addr, metadata !9167, metadata !DIExpression()), !dbg !9168
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9169, metadata !DIExpression()), !dbg !9170
  %0 = load i32, i32* %mis.addr, align 4, !dbg !9171
  %cmp = icmp slt i32 %0, 0, !dbg !9173
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9174

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %mis.addr, align 4, !dbg !9175
  %cmp1 = icmp sgt i32 %1, 255, !dbg !9176
  br i1 %cmp1, label %if.then, label %if.else41, !dbg !9177

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %do.body, !dbg !9178

do.body:                                          ; preds = %if.then
  %2 = load i32, i32* @verbose, align 4, !dbg !9180
  %cmp2 = icmp ugt i32 %2, 0, !dbg !9180
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !9180

land.lhs.true:                                    ; preds = %do.body
  %3 = load i32, i32* @verbose, align 4, !dbg !9180
  %cmp3 = icmp ugt i32 %3, 3, !dbg !9180
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !9185

if.then4:                                         ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.85, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9180
  br label %if.end24, !dbg !9180

if.else:                                          ; preds = %land.lhs.true, %do.body
  %4 = load i32, i32* @verbose, align 4, !dbg !9186
  %cmp5 = icmp ugt i32 %4, 1, !dbg !9186
  br i1 %cmp5, label %land.lhs.true6, label %if.else10, !dbg !9186

land.lhs.true6:                                   ; preds = %if.else
  %5 = load i32, i32* @verbose, align 4, !dbg !9186
  %cmp7 = icmp ugt i32 %5, 3, !dbg !9186
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !9180

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.86, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9186
  br label %if.end23, !dbg !9186

if.else10:                                        ; preds = %land.lhs.true6, %if.else
  %6 = load i32, i32* @verbose, align 4, !dbg !9188
  %cmp11 = icmp ugt i32 %6, 2, !dbg !9188
  br i1 %cmp11, label %land.lhs.true12, label %if.else16, !dbg !9188

land.lhs.true12:                                  ; preds = %if.else10
  %7 = load i32, i32* @verbose, align 4, !dbg !9188
  %cmp13 = icmp ugt i32 %7, 3, !dbg !9188
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !9186

if.then14:                                        ; preds = %land.lhs.true12
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.87, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9188
  br label %if.end22, !dbg !9188

if.else16:                                        ; preds = %land.lhs.true12, %if.else10
  %8 = load i32, i32* @verbose, align 4, !dbg !9190
  %cmp17 = icmp ugt i32 %8, 3, !dbg !9190
  br i1 %cmp17, label %land.lhs.true18, label %if.end, !dbg !9190

land.lhs.true18:                                  ; preds = %if.else16
  %9 = load i32, i32* @verbose, align 4, !dbg !9190
  %cmp19 = icmp ugt i32 %9, 3, !dbg !9190
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !9188

if.then20:                                        ; preds = %land.lhs.true18
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9190
  br label %if.end, !dbg !9190

if.end:                                           ; preds = %if.then20, %land.lhs.true18, %if.else16
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then14
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then8
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then4
  br label %do.end, !dbg !9192

do.end:                                           ; preds = %if.end24
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9193
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !9193
  %11 = load i32, i32* %demod, align 4, !dbg !9193
  %cmp25 = icmp eq i32 %11, 2, !dbg !9193
  br i1 %cmp25, label %cond.true, label %cond.false, !dbg !9193

cond.true:                                        ; preds = %do.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9193
  %call26 = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 62288) #9, !dbg !9193
  br label %cond.end, !dbg !9193

cond.false:                                       ; preds = %do.end
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9193
  %call27 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 62800) #9, !dbg !9193
  br label %cond.end, !dbg !9193

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call26, %cond.true ], [ %call27, %cond.false ], !dbg !9193
  store i32 %cond, i32* %reg, align 4, !dbg !9194
  %14 = load i32, i32* %reg, align 4, !dbg !9195
  %and = and i32 %14, -33, !dbg !9195
  store i32 %and, i32* %reg, align 4, !dbg !9195
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9196
  %demod28 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 1, !dbg !9196
  %16 = load i32, i32* %demod28, align 4, !dbg !9196
  %cmp29 = icmp eq i32 %16, 2, !dbg !9196
  br i1 %cmp29, label %cond.true30, label %cond.false32, !dbg !9196

cond.true30:                                      ; preds = %cond.end
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9196
  %18 = load i32, i32* %reg, align 4, !dbg !9196
  %conv = trunc i32 %18 to i8, !dbg !9196
  %call31 = call i32 @stv090x_write_reg(%struct.stv090x_state* %17, i32 62288, i8 zeroext %conv) #9, !dbg !9196
  br label %cond.end35, !dbg !9196

cond.false32:                                     ; preds = %cond.end
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9196
  %20 = load i32, i32* %reg, align 4, !dbg !9196
  %conv33 = trunc i32 %20 to i8, !dbg !9196
  %call34 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62800, i8 zeroext %conv33) #9, !dbg !9196
  br label %cond.end35, !dbg !9196

cond.end35:                                       ; preds = %cond.false32, %cond.true30
  %cond36 = phi i32 [ %call31, %cond.true30 ], [ %call34, %cond.false32 ], !dbg !9196
  %cmp37 = icmp slt i32 %cond36, 0, !dbg !9198
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !9199

if.then39:                                        ; preds = %cond.end35
  br label %err, !dbg !9200

if.end40:                                         ; preds = %cond.end35
  br label %if.end132, !dbg !9201

if.else41:                                        ; preds = %lor.lhs.false
  br label %do.body42, !dbg !9202

do.body42:                                        ; preds = %if.else41
  %21 = load i32, i32* @verbose, align 4, !dbg !9204
  %cmp43 = icmp ugt i32 %21, 0, !dbg !9204
  br i1 %cmp43, label %land.lhs.true45, label %if.else50, !dbg !9204

land.lhs.true45:                                  ; preds = %do.body42
  %22 = load i32, i32* @verbose, align 4, !dbg !9204
  %cmp46 = icmp ugt i32 %22, 3, !dbg !9204
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !9209

if.then48:                                        ; preds = %land.lhs.true45
  %23 = load i32, i32* %mis.addr, align 4, !dbg !9204
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.89, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0), i32 %23) #13, !dbg !9204
  br label %if.end77, !dbg !9204

if.else50:                                        ; preds = %land.lhs.true45, %do.body42
  %24 = load i32, i32* @verbose, align 4, !dbg !9210
  %cmp51 = icmp ugt i32 %24, 1, !dbg !9210
  br i1 %cmp51, label %land.lhs.true53, label %if.else58, !dbg !9210

land.lhs.true53:                                  ; preds = %if.else50
  %25 = load i32, i32* @verbose, align 4, !dbg !9210
  %cmp54 = icmp ugt i32 %25, 3, !dbg !9210
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !9204

if.then56:                                        ; preds = %land.lhs.true53
  %26 = load i32, i32* %mis.addr, align 4, !dbg !9210
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0), i32 %26) #13, !dbg !9210
  br label %if.end76, !dbg !9210

if.else58:                                        ; preds = %land.lhs.true53, %if.else50
  %27 = load i32, i32* @verbose, align 4, !dbg !9212
  %cmp59 = icmp ugt i32 %27, 2, !dbg !9212
  br i1 %cmp59, label %land.lhs.true61, label %if.else66, !dbg !9212

land.lhs.true61:                                  ; preds = %if.else58
  %28 = load i32, i32* @verbose, align 4, !dbg !9212
  %cmp62 = icmp ugt i32 %28, 3, !dbg !9212
  br i1 %cmp62, label %if.then64, label %if.else66, !dbg !9210

if.then64:                                        ; preds = %land.lhs.true61
  %29 = load i32, i32* %mis.addr, align 4, !dbg !9212
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0), i32 %29) #13, !dbg !9212
  br label %if.end75, !dbg !9212

if.else66:                                        ; preds = %land.lhs.true61, %if.else58
  %30 = load i32, i32* @verbose, align 4, !dbg !9214
  %cmp67 = icmp ugt i32 %30, 3, !dbg !9214
  br i1 %cmp67, label %land.lhs.true69, label %if.end74, !dbg !9214

land.lhs.true69:                                  ; preds = %if.else66
  %31 = load i32, i32* @verbose, align 4, !dbg !9214
  %cmp70 = icmp ugt i32 %31, 3, !dbg !9214
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !9212

if.then72:                                        ; preds = %land.lhs.true69
  %32 = load i32, i32* %mis.addr, align 4, !dbg !9214
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0), i32 %32) #13, !dbg !9214
  br label %if.end74, !dbg !9214

if.end74:                                         ; preds = %if.then72, %land.lhs.true69, %if.else66
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then64
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then56
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then48
  br label %do.end78, !dbg !9216

do.end78:                                         ; preds = %if.end77
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9217
  %demod79 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 1, !dbg !9217
  %34 = load i32, i32* %demod79, align 4, !dbg !9217
  %cmp80 = icmp eq i32 %34, 2, !dbg !9217
  br i1 %cmp80, label %cond.true82, label %cond.false84, !dbg !9217

cond.true82:                                      ; preds = %do.end78
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9217
  %call83 = call i32 @stv090x_read_reg(%struct.stv090x_state* %35, i32 62288) #9, !dbg !9217
  br label %cond.end86, !dbg !9217

cond.false84:                                     ; preds = %do.end78
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9217
  %call85 = call i32 @stv090x_read_reg(%struct.stv090x_state* %36, i32 62800) #9, !dbg !9217
  br label %cond.end86, !dbg !9217

cond.end86:                                       ; preds = %cond.false84, %cond.true82
  %cond87 = phi i32 [ %call83, %cond.true82 ], [ %call85, %cond.false84 ], !dbg !9217
  store i32 %cond87, i32* %reg, align 4, !dbg !9218
  %37 = load i32, i32* %reg, align 4, !dbg !9219
  %and88 = and i32 %37, -33, !dbg !9219
  %or = or i32 %and88, 32, !dbg !9219
  store i32 %or, i32* %reg, align 4, !dbg !9219
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9220
  %demod89 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 1, !dbg !9220
  %39 = load i32, i32* %demod89, align 4, !dbg !9220
  %cmp90 = icmp eq i32 %39, 2, !dbg !9220
  br i1 %cmp90, label %cond.true92, label %cond.false95, !dbg !9220

cond.true92:                                      ; preds = %cond.end86
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9220
  %41 = load i32, i32* %reg, align 4, !dbg !9220
  %conv93 = trunc i32 %41 to i8, !dbg !9220
  %call94 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 62288, i8 zeroext %conv93) #9, !dbg !9220
  br label %cond.end98, !dbg !9220

cond.false95:                                     ; preds = %cond.end86
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9220
  %43 = load i32, i32* %reg, align 4, !dbg !9220
  %conv96 = trunc i32 %43 to i8, !dbg !9220
  %call97 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62800, i8 zeroext %conv96) #9, !dbg !9220
  br label %cond.end98, !dbg !9220

cond.end98:                                       ; preds = %cond.false95, %cond.true92
  %cond99 = phi i32 [ %call94, %cond.true92 ], [ %call97, %cond.false95 ], !dbg !9220
  %cmp100 = icmp slt i32 %cond99, 0, !dbg !9222
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !9223

if.then102:                                       ; preds = %cond.end98
  br label %err, !dbg !9224

if.end103:                                        ; preds = %cond.end98
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9225
  %demod104 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 1, !dbg !9225
  %45 = load i32, i32* %demod104, align 4, !dbg !9225
  %cmp105 = icmp eq i32 %45, 2, !dbg !9225
  br i1 %cmp105, label %cond.true107, label %cond.false110, !dbg !9225

cond.true107:                                     ; preds = %if.end103
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9225
  %47 = load i32, i32* %mis.addr, align 4, !dbg !9225
  %conv108 = trunc i32 %47 to i8, !dbg !9225
  %call109 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62302, i8 zeroext %conv108) #9, !dbg !9225
  br label %cond.end113, !dbg !9225

cond.false110:                                    ; preds = %if.end103
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9225
  %49 = load i32, i32* %mis.addr, align 4, !dbg !9225
  %conv111 = trunc i32 %49 to i8, !dbg !9225
  %call112 = call i32 @stv090x_write_reg(%struct.stv090x_state* %48, i32 62814, i8 zeroext %conv111) #9, !dbg !9225
  br label %cond.end113, !dbg !9225

cond.end113:                                      ; preds = %cond.false110, %cond.true107
  %cond114 = phi i32 [ %call109, %cond.true107 ], [ %call112, %cond.false110 ], !dbg !9225
  %cmp115 = icmp slt i32 %cond114, 0, !dbg !9227
  br i1 %cmp115, label %if.then117, label %if.end118, !dbg !9228

if.then117:                                       ; preds = %cond.end113
  br label %err, !dbg !9229

if.end118:                                        ; preds = %cond.end113
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9230
  %demod119 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 1, !dbg !9230
  %51 = load i32, i32* %demod119, align 4, !dbg !9230
  %cmp120 = icmp eq i32 %51, 2, !dbg !9230
  br i1 %cmp120, label %cond.true122, label %cond.false124, !dbg !9230

cond.true122:                                     ; preds = %if.end118
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9230
  %call123 = call i32 @stv090x_write_reg(%struct.stv090x_state* %52, i32 62303, i8 zeroext -1) #9, !dbg !9230
  br label %cond.end126, !dbg !9230

cond.false124:                                    ; preds = %if.end118
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9230
  %call125 = call i32 @stv090x_write_reg(%struct.stv090x_state* %53, i32 62815, i8 zeroext -1) #9, !dbg !9230
  br label %cond.end126, !dbg !9230

cond.end126:                                      ; preds = %cond.false124, %cond.true122
  %cond127 = phi i32 [ %call123, %cond.true122 ], [ %call125, %cond.false124 ], !dbg !9230
  %cmp128 = icmp slt i32 %cond127, 0, !dbg !9232
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !9233

if.then130:                                       ; preds = %cond.end126
  br label %err, !dbg !9234

if.end131:                                        ; preds = %cond.end126
  br label %if.end132

if.end132:                                        ; preds = %if.end131, %if.end40
  store i32 0, i32* %retval, align 4, !dbg !9235
  br label %return, !dbg !9235

err:                                              ; preds = %if.then130, %if.then117, %if.then102, %if.then39
  call void @llvm.dbg.label(metadata !9236), !dbg !9237
  br label %do.body133, !dbg !9238

do.body133:                                       ; preds = %err
  %54 = load i32, i32* @verbose, align 4, !dbg !9239
  %cmp134 = icmp ugt i32 %54, 0, !dbg !9239
  br i1 %cmp134, label %land.lhs.true136, label %if.else141, !dbg !9239

land.lhs.true136:                                 ; preds = %do.body133
  %55 = load i32, i32* @verbose, align 4, !dbg !9239
  %cmp137 = icmp ugt i32 %55, 0, !dbg !9239
  br i1 %cmp137, label %if.then139, label %if.else141, !dbg !9244

if.then139:                                       ; preds = %land.lhs.true136
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9239
  br label %if.end168, !dbg !9239

if.else141:                                       ; preds = %land.lhs.true136, %do.body133
  %56 = load i32, i32* @verbose, align 4, !dbg !9245
  %cmp142 = icmp ugt i32 %56, 1, !dbg !9245
  br i1 %cmp142, label %land.lhs.true144, label %if.else149, !dbg !9245

land.lhs.true144:                                 ; preds = %if.else141
  %57 = load i32, i32* @verbose, align 4, !dbg !9245
  %cmp145 = icmp ugt i32 %57, 0, !dbg !9245
  br i1 %cmp145, label %if.then147, label %if.else149, !dbg !9239

if.then147:                                       ; preds = %land.lhs.true144
  %call148 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9245
  br label %if.end167, !dbg !9245

if.else149:                                       ; preds = %land.lhs.true144, %if.else141
  %58 = load i32, i32* @verbose, align 4, !dbg !9247
  %cmp150 = icmp ugt i32 %58, 2, !dbg !9247
  br i1 %cmp150, label %land.lhs.true152, label %if.else157, !dbg !9247

land.lhs.true152:                                 ; preds = %if.else149
  %59 = load i32, i32* @verbose, align 4, !dbg !9247
  %cmp153 = icmp ugt i32 %59, 0, !dbg !9247
  br i1 %cmp153, label %if.then155, label %if.else157, !dbg !9245

if.then155:                                       ; preds = %land.lhs.true152
  %call156 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9247
  br label %if.end166, !dbg !9247

if.else157:                                       ; preds = %land.lhs.true152, %if.else149
  %60 = load i32, i32* @verbose, align 4, !dbg !9249
  %cmp158 = icmp ugt i32 %60, 3, !dbg !9249
  br i1 %cmp158, label %land.lhs.true160, label %if.end165, !dbg !9249

land.lhs.true160:                                 ; preds = %if.else157
  %61 = load i32, i32* @verbose, align 4, !dbg !9249
  %cmp161 = icmp ugt i32 %61, 0, !dbg !9249
  br i1 %cmp161, label %if.then163, label %if.end165, !dbg !9247

if.then163:                                       ; preds = %land.lhs.true160
  %call164 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_set_mis, i64 0, i64 0)) #13, !dbg !9249
  br label %if.end165, !dbg !9249

if.end165:                                        ; preds = %if.then163, %land.lhs.true160, %if.else157
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.then155
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.then147
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.then139
  br label %do.end169, !dbg !9251

do.end169:                                        ; preds = %if.end168
  store i32 -1, i32* %retval, align 4, !dbg !9252
  br label %return, !dbg !9252

return:                                           ; preds = %do.end169, %if.end132
  %62 = load i32, i32* %retval, align 4, !dbg !9253
  ret i32 %62, !dbg !9253
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_algo(%struct.stv090x_state* %state) #0 !dbg !9254 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %fe = alloca %struct.dvb_frontend*, align 8
  %signal_state = alloca i32, align 4
  %reg = alloca i32, align 4
  %agc1_power = alloca i32, align 4
  %power_iq = alloca i32, align 4
  %i = alloca i32, align 4
  %lock = alloca i32, align 4
  %low_sr = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe, metadata !9259, metadata !DIExpression()), !dbg !9260
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9261
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 6, !dbg !9262
  store %struct.dvb_frontend* %frontend, %struct.dvb_frontend** %fe, align 8, !dbg !9260
  call void @llvm.dbg.declare(metadata i32* %signal_state, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 1, i32* %signal_state, align 4, !dbg !9264
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata i32* %agc1_power, metadata !9267, metadata !DIExpression()), !dbg !9268
  call void @llvm.dbg.declare(metadata i32* %power_iq, metadata !9269, metadata !DIExpression()), !dbg !9270
  store i32 0, i32* %power_iq, align 4, !dbg !9270
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9271, metadata !DIExpression()), !dbg !9272
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !9273, metadata !DIExpression()), !dbg !9274
  store i32 0, i32* %lock, align 4, !dbg !9274
  call void @llvm.dbg.declare(metadata i32* %low_sr, metadata !9275, metadata !DIExpression()), !dbg !9276
  store i32 0, i32* %low_sr, align 4, !dbg !9276
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9277
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 1, !dbg !9277
  %2 = load i32, i32* %demod, align 4, !dbg !9277
  %cmp = icmp eq i32 %2, 2, !dbg !9277
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9277

cond.true:                                        ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9277
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62322) #9, !dbg !9277
  br label %cond.end, !dbg !9277

cond.false:                                       ; preds = %entry
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9277
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %4, i32 62834) #9, !dbg !9277
  br label %cond.end, !dbg !9277

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !9277
  store i32 %cond, i32* %reg, align 4, !dbg !9278
  %5 = load i32, i32* %reg, align 4, !dbg !9279
  %and = and i32 %5, -2, !dbg !9279
  %or = or i32 %and, 1, !dbg !9279
  store i32 %or, i32* %reg, align 4, !dbg !9279
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9280
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 1, !dbg !9280
  %7 = load i32, i32* %demod2, align 4, !dbg !9280
  %cmp3 = icmp eq i32 %7, 2, !dbg !9280
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !9280

cond.true4:                                       ; preds = %cond.end
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9280
  %9 = load i32, i32* %reg, align 4, !dbg !9280
  %conv = trunc i32 %9 to i8, !dbg !9280
  %call5 = call i32 @stv090x_write_reg(%struct.stv090x_state* %8, i32 62322, i8 zeroext %conv) #9, !dbg !9280
  br label %cond.end9, !dbg !9280

cond.false6:                                      ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9280
  %11 = load i32, i32* %reg, align 4, !dbg !9280
  %conv7 = trunc i32 %11 to i8, !dbg !9280
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62834, i8 zeroext %conv7) #9, !dbg !9280
  br label %cond.end9, !dbg !9280

cond.end9:                                        ; preds = %cond.false6, %cond.true4
  %cond10 = phi i32 [ %call5, %cond.true4 ], [ %call8, %cond.false6 ], !dbg !9280
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !9282
  br i1 %cmp11, label %if.then, label %if.end, !dbg !9283

if.then:                                          ; preds = %cond.end9
  br label %err, !dbg !9284

if.end:                                           ; preds = %cond.end9
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9285
  %demod13 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !9285
  %13 = load i32, i32* %demod13, align 4, !dbg !9285
  %cmp14 = icmp eq i32 %13, 2, !dbg !9285
  br i1 %cmp14, label %cond.true16, label %cond.false18, !dbg !9285

cond.true16:                                      ; preds = %if.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9285
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 61974, i8 zeroext 92) #9, !dbg !9285
  br label %cond.end20, !dbg !9285

cond.false18:                                     ; preds = %if.end
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9285
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62486, i8 zeroext 92) #9, !dbg !9285
  br label %cond.end20, !dbg !9285

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !9285
  %cmp22 = icmp slt i32 %cond21, 0, !dbg !9287
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !9288

if.then24:                                        ; preds = %cond.end20
  br label %err, !dbg !9289

if.end25:                                         ; preds = %cond.end20
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9290
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 3, !dbg !9292
  %17 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !9292
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %17, i32 0, i32 5, !dbg !9293
  %18 = load i32, i32* %dev_ver, align 4, !dbg !9293
  %cmp26 = icmp uge i32 %18, 32, !dbg !9294
  br i1 %cmp26, label %if.then28, label %if.end59, !dbg !9295

if.then28:                                        ; preds = %if.end25
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9296
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 19, !dbg !9299
  %20 = load i32, i32* %srate, align 4, !dbg !9299
  %cmp29 = icmp ugt i32 %20, 5000000, !dbg !9300
  br i1 %cmp29, label %if.then31, label %if.else, !dbg !9301

if.then31:                                        ; preds = %if.then28
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9302
  %demod32 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 1, !dbg !9302
  %22 = load i32, i32* %demod32, align 4, !dbg !9302
  %cmp33 = icmp eq i32 %22, 2, !dbg !9302
  br i1 %cmp33, label %cond.true35, label %cond.false37, !dbg !9302

cond.true35:                                      ; preds = %if.then31
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9302
  %call36 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 61985, i8 zeroext -98) #9, !dbg !9302
  br label %cond.end39, !dbg !9302

cond.false37:                                     ; preds = %if.then31
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9302
  %call38 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 62497, i8 zeroext -98) #9, !dbg !9302
  br label %cond.end39, !dbg !9302

cond.end39:                                       ; preds = %cond.false37, %cond.true35
  %cond40 = phi i32 [ %call36, %cond.true35 ], [ %call38, %cond.false37 ], !dbg !9302
  %cmp41 = icmp slt i32 %cond40, 0, !dbg !9305
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !9306

if.then43:                                        ; preds = %cond.end39
  br label %err, !dbg !9307

if.end44:                                         ; preds = %cond.end39
  br label %if.end58, !dbg !9308

if.else:                                          ; preds = %if.then28
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9309
  %demod45 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 1, !dbg !9309
  %26 = load i32, i32* %demod45, align 4, !dbg !9309
  %cmp46 = icmp eq i32 %26, 2, !dbg !9309
  br i1 %cmp46, label %cond.true48, label %cond.false50, !dbg !9309

cond.true48:                                      ; preds = %if.else
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9309
  %call49 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 61985, i8 zeroext -126) #9, !dbg !9309
  br label %cond.end52, !dbg !9309

cond.false50:                                     ; preds = %if.else
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9309
  %call51 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 62497, i8 zeroext -126) #9, !dbg !9309
  br label %cond.end52, !dbg !9309

cond.end52:                                       ; preds = %cond.false50, %cond.true48
  %cond53 = phi i32 [ %call49, %cond.true48 ], [ %call51, %cond.false50 ], !dbg !9309
  %cmp54 = icmp slt i32 %cond53, 0, !dbg !9312
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !9313

if.then56:                                        ; preds = %cond.end52
  br label %err, !dbg !9314

if.end57:                                         ; preds = %cond.end52
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end44
  br label %if.end59, !dbg !9315

if.end59:                                         ; preds = %if.end58, %if.end25
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9316
  call void @stv090x_get_lock_tmg(%struct.stv090x_state* %29) #9, !dbg !9317
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9318
  %algo = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 17, !dbg !9320
  %31 = load i32, i32* %algo, align 4, !dbg !9320
  %cmp60 = icmp eq i32 %31, 0, !dbg !9321
  br i1 %cmp60, label %if.then62, label %if.else94, !dbg !9322

if.then62:                                        ; preds = %if.end59
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9323
  %tuner_bw = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 20, !dbg !9325
  store i32 72000000, i32* %tuner_bw, align 8, !dbg !9326
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9327
  %demod63 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 1, !dbg !9327
  %34 = load i32, i32* %demod63, align 4, !dbg !9327
  %cmp64 = icmp eq i32 %34, 2, !dbg !9327
  br i1 %cmp64, label %cond.true66, label %cond.false68, !dbg !9327

cond.true66:                                      ; preds = %if.then62
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9327
  %call67 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62042, i8 zeroext -64) #9, !dbg !9327
  br label %cond.end70, !dbg !9327

cond.false68:                                     ; preds = %if.then62
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9327
  %call69 = call i32 @stv090x_write_reg(%struct.stv090x_state* %36, i32 62554, i8 zeroext -64) #9, !dbg !9327
  br label %cond.end70, !dbg !9327

cond.end70:                                       ; preds = %cond.false68, %cond.true66
  %cond71 = phi i32 [ %call67, %cond.true66 ], [ %call69, %cond.false68 ], !dbg !9327
  %cmp72 = icmp slt i32 %cond71, 0, !dbg !9329
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !9330

if.then74:                                        ; preds = %cond.end70
  br label %err, !dbg !9331

if.end75:                                         ; preds = %cond.end70
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9332
  %demod76 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 1, !dbg !9332
  %38 = load i32, i32* %demod76, align 4, !dbg !9332
  %cmp77 = icmp eq i32 %38, 2, !dbg !9332
  br i1 %cmp77, label %cond.true79, label %cond.false81, !dbg !9332

cond.true79:                                      ; preds = %if.end75
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9332
  %call80 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 61984, i8 zeroext 112) #9, !dbg !9332
  br label %cond.end83, !dbg !9332

cond.false81:                                     ; preds = %if.end75
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9332
  %call82 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 62496, i8 zeroext 112) #9, !dbg !9332
  br label %cond.end83, !dbg !9332

cond.end83:                                       ; preds = %cond.false81, %cond.true79
  %cond84 = phi i32 [ %call80, %cond.true79 ], [ %call82, %cond.false81 ], !dbg !9332
  %cmp85 = icmp slt i32 %cond84, 0, !dbg !9334
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !9335

if.then87:                                        ; preds = %cond.end83
  br label %err, !dbg !9336

if.end88:                                         ; preds = %cond.end83
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9337
  %call89 = call i32 @stv090x_set_srate(%struct.stv090x_state* %41, i32 1000000) #9, !dbg !9339
  %cmp90 = icmp slt i32 %call89, 0, !dbg !9340
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !9341

if.then92:                                        ; preds = %if.end88
  br label %err, !dbg !9342

if.end93:                                         ; preds = %if.end88
  br label %if.end244, !dbg !9343

if.else94:                                        ; preds = %if.end59
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9344
  %demod95 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 1, !dbg !9344
  %43 = load i32, i32* %demod95, align 4, !dbg !9344
  %cmp96 = icmp eq i32 %43, 2, !dbg !9344
  br i1 %cmp96, label %cond.true98, label %cond.false100, !dbg !9344

cond.true98:                                      ; preds = %if.else94
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9344
  %call99 = call i32 @stv090x_write_reg(%struct.stv090x_state* %44, i32 61975, i8 zeroext 32) #9, !dbg !9344
  br label %cond.end102, !dbg !9344

cond.false100:                                    ; preds = %if.else94
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9344
  %call101 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62487, i8 zeroext 32) #9, !dbg !9344
  br label %cond.end102, !dbg !9344

cond.end102:                                      ; preds = %cond.false100, %cond.true98
  %cond103 = phi i32 [ %call99, %cond.true98 ], [ %call101, %cond.false100 ], !dbg !9344
  %cmp104 = icmp slt i32 %cond103, 0, !dbg !9347
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !9348

if.then106:                                       ; preds = %cond.end102
  br label %err, !dbg !9349

if.end107:                                        ; preds = %cond.end102
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9350
  %demod108 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %46, i32 0, i32 1, !dbg !9350
  %47 = load i32, i32* %demod108, align 4, !dbg !9350
  %cmp109 = icmp eq i32 %47, 2, !dbg !9350
  br i1 %cmp109, label %cond.true111, label %cond.false113, !dbg !9350

cond.true111:                                     ; preds = %if.end107
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9350
  %call112 = call i32 @stv090x_write_reg(%struct.stv090x_state* %48, i32 62032, i8 zeroext -46) #9, !dbg !9350
  br label %cond.end115, !dbg !9350

cond.false113:                                    ; preds = %if.end107
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9350
  %call114 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 62544, i8 zeroext -46) #9, !dbg !9350
  br label %cond.end115, !dbg !9350

cond.end115:                                      ; preds = %cond.false113, %cond.true111
  %cond116 = phi i32 [ %call112, %cond.true111 ], [ %call114, %cond.false113 ], !dbg !9350
  %cmp117 = icmp slt i32 %cond116, 0, !dbg !9352
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !9353

if.then119:                                       ; preds = %cond.end115
  br label %err, !dbg !9354

if.end120:                                        ; preds = %cond.end115
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9355
  %srate121 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 19, !dbg !9357
  %51 = load i32, i32* %srate121, align 4, !dbg !9357
  %cmp122 = icmp ult i32 %51, 2000000, !dbg !9358
  br i1 %cmp122, label %if.then124, label %if.else138, !dbg !9359

if.then124:                                       ; preds = %if.end120
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9360
  %demod125 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 1, !dbg !9360
  %53 = load i32, i32* %demod125, align 4, !dbg !9360
  %cmp126 = icmp eq i32 %53, 2, !dbg !9360
  br i1 %cmp126, label %cond.true128, label %cond.false130, !dbg !9360

cond.true128:                                     ; preds = %if.then124
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9360
  %call129 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 61984, i8 zeroext 99) #9, !dbg !9360
  br label %cond.end132, !dbg !9360

cond.false130:                                    ; preds = %if.then124
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9360
  %call131 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 62496, i8 zeroext 99) #9, !dbg !9360
  br label %cond.end132, !dbg !9360

cond.end132:                                      ; preds = %cond.false130, %cond.true128
  %cond133 = phi i32 [ %call129, %cond.true128 ], [ %call131, %cond.false130 ], !dbg !9360
  %cmp134 = icmp slt i32 %cond133, 0, !dbg !9363
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !9364

if.then136:                                       ; preds = %cond.end132
  br label %err, !dbg !9365

if.end137:                                        ; preds = %cond.end132
  br label %if.end152, !dbg !9366

if.else138:                                       ; preds = %if.end120
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9367
  %demod139 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !9367
  %57 = load i32, i32* %demod139, align 4, !dbg !9367
  %cmp140 = icmp eq i32 %57, 2, !dbg !9367
  br i1 %cmp140, label %cond.true142, label %cond.false144, !dbg !9367

cond.true142:                                     ; preds = %if.else138
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9367
  %call143 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 61984, i8 zeroext 112) #9, !dbg !9367
  br label %cond.end146, !dbg !9367

cond.false144:                                    ; preds = %if.else138
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9367
  %call145 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 62496, i8 zeroext 112) #9, !dbg !9367
  br label %cond.end146, !dbg !9367

cond.end146:                                      ; preds = %cond.false144, %cond.true142
  %cond147 = phi i32 [ %call143, %cond.true142 ], [ %call145, %cond.false144 ], !dbg !9367
  %cmp148 = icmp slt i32 %cond147, 0, !dbg !9370
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !9371

if.then150:                                       ; preds = %cond.end146
  br label %err, !dbg !9372

if.end151:                                        ; preds = %cond.end146
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.end137
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9373
  %demod153 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %60, i32 0, i32 1, !dbg !9373
  %61 = load i32, i32* %demod153, align 4, !dbg !9373
  %cmp154 = icmp eq i32 %61, 2, !dbg !9373
  br i1 %cmp154, label %cond.true156, label %cond.false158, !dbg !9373

cond.true156:                                     ; preds = %if.end152
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9373
  %call157 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 61997, i8 zeroext 56) #9, !dbg !9373
  br label %cond.end160, !dbg !9373

cond.false158:                                    ; preds = %if.end152
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9373
  %call159 = call i32 @stv090x_write_reg(%struct.stv090x_state* %63, i32 62509, i8 zeroext 56) #9, !dbg !9373
  br label %cond.end160, !dbg !9373

cond.end160:                                      ; preds = %cond.false158, %cond.true156
  %cond161 = phi i32 [ %call157, %cond.true156 ], [ %call159, %cond.false158 ], !dbg !9373
  %cmp162 = icmp slt i32 %cond161, 0, !dbg !9375
  br i1 %cmp162, label %if.then164, label %if.end165, !dbg !9376

if.then164:                                       ; preds = %cond.end160
  br label %err, !dbg !9377

if.end165:                                        ; preds = %cond.end160
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9378
  %internal166 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %64, i32 0, i32 3, !dbg !9380
  %65 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal166, align 8, !dbg !9380
  %dev_ver167 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %65, i32 0, i32 5, !dbg !9381
  %66 = load i32, i32* %dev_ver167, align 4, !dbg !9381
  %cmp168 = icmp uge i32 %66, 32, !dbg !9382
  br i1 %cmp168, label %if.then170, label %if.end203, !dbg !9383

if.then170:                                       ; preds = %if.end165
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9384
  %demod171 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %67, i32 0, i32 1, !dbg !9384
  %68 = load i32, i32* %demod171, align 4, !dbg !9384
  %cmp172 = icmp eq i32 %68, 2, !dbg !9384
  br i1 %cmp172, label %cond.true174, label %cond.false176, !dbg !9384

cond.true174:                                     ; preds = %if.then170
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9384
  %call175 = call i32 @stv090x_write_reg(%struct.stv090x_state* %69, i32 62040, i8 zeroext 90) #9, !dbg !9384
  br label %cond.end178, !dbg !9384

cond.false176:                                    ; preds = %if.then170
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9384
  %call177 = call i32 @stv090x_write_reg(%struct.stv090x_state* %70, i32 62552, i8 zeroext 90) #9, !dbg !9384
  br label %cond.end178, !dbg !9384

cond.end178:                                      ; preds = %cond.false176, %cond.true174
  %cond179 = phi i32 [ %call175, %cond.true174 ], [ %call177, %cond.false176 ], !dbg !9384
  %cmp180 = icmp slt i32 %cond179, 0, !dbg !9387
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !9388

if.then182:                                       ; preds = %cond.end178
  br label %err, !dbg !9389

if.end183:                                        ; preds = %cond.end178
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9390
  %algo184 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %71, i32 0, i32 17, !dbg !9392
  %72 = load i32, i32* %algo184, align 4, !dbg !9392
  %cmp185 = icmp eq i32 %72, 1, !dbg !9393
  br i1 %cmp185, label %if.then187, label %if.else191, !dbg !9394

if.then187:                                       ; preds = %if.end183
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9395
  %srate188 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %73, i32 0, i32 19, !dbg !9396
  %74 = load i32, i32* %srate188, align 4, !dbg !9396
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9397
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %75, i32 0, i32 15, !dbg !9398
  %76 = load i32, i32* %rolloff, align 4, !dbg !9398
  %call189 = call i32 @stv090x_car_width(i32 %74, i32 %76) #9, !dbg !9399
  %add = add i32 %call189, 10000000, !dbg !9400
  %mul = mul i32 15, %add, !dbg !9401
  %div = udiv i32 %mul, 10, !dbg !9402
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9403
  %tuner_bw190 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %77, i32 0, i32 20, !dbg !9404
  store i32 %div, i32* %tuner_bw190, align 8, !dbg !9405
  br label %if.end202, !dbg !9403

if.else191:                                       ; preds = %if.end183
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9406
  %algo192 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %78, i32 0, i32 17, !dbg !9408
  %79 = load i32, i32* %algo192, align 4, !dbg !9408
  %cmp193 = icmp eq i32 %79, 2, !dbg !9409
  br i1 %cmp193, label %if.then195, label %if.end201, !dbg !9410

if.then195:                                       ; preds = %if.else191
  %80 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9411
  %srate196 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %80, i32 0, i32 19, !dbg !9412
  %81 = load i32, i32* %srate196, align 4, !dbg !9412
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9413
  %rolloff197 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %82, i32 0, i32 15, !dbg !9414
  %83 = load i32, i32* %rolloff197, align 4, !dbg !9414
  %call198 = call i32 @stv090x_car_width(i32 %81, i32 %83) #9, !dbg !9415
  %add199 = add i32 %call198, 10000000, !dbg !9416
  %84 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9417
  %tuner_bw200 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %84, i32 0, i32 20, !dbg !9418
  store i32 %add199, i32* %tuner_bw200, align 8, !dbg !9419
  br label %if.end201, !dbg !9417

if.end201:                                        ; preds = %if.then195, %if.else191
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then187
  br label %if.end203, !dbg !9420

if.end203:                                        ; preds = %if.end202, %if.end165
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9421
  %demod204 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %85, i32 0, i32 1, !dbg !9421
  %86 = load i32, i32* %demod204, align 4, !dbg !9421
  %cmp205 = icmp eq i32 %86, 2, !dbg !9421
  br i1 %cmp205, label %cond.true207, label %cond.false209, !dbg !9421

cond.true207:                                     ; preds = %if.end203
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9421
  %call208 = call i32 @stv090x_write_reg(%struct.stv090x_state* %87, i32 62042, i8 zeroext -63) #9, !dbg !9421
  br label %cond.end211, !dbg !9421

cond.false209:                                    ; preds = %if.end203
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9421
  %call210 = call i32 @stv090x_write_reg(%struct.stv090x_state* %88, i32 62554, i8 zeroext -63) #9, !dbg !9421
  br label %cond.end211, !dbg !9421

cond.end211:                                      ; preds = %cond.false209, %cond.true207
  %cond212 = phi i32 [ %call208, %cond.true207 ], [ %call210, %cond.false209 ], !dbg !9421
  %cmp213 = icmp slt i32 %cond212, 0, !dbg !9423
  br i1 %cmp213, label %if.then215, label %if.end216, !dbg !9424

if.then215:                                       ; preds = %cond.end211
  br label %err, !dbg !9425

if.end216:                                        ; preds = %cond.end211
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9426
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9428
  %srate217 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %90, i32 0, i32 19, !dbg !9429
  %91 = load i32, i32* %srate217, align 4, !dbg !9429
  %call218 = call i32 @stv090x_set_srate(%struct.stv090x_state* %89, i32 %91) #9, !dbg !9430
  %cmp219 = icmp slt i32 %call218, 0, !dbg !9431
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !9432

if.then221:                                       ; preds = %if.end216
  br label %err, !dbg !9433

if.end222:                                        ; preds = %if.end216
  %92 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9434
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9436
  %internal223 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %93, i32 0, i32 3, !dbg !9437
  %94 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal223, align 8, !dbg !9437
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %94, i32 0, i32 4, !dbg !9438
  %95 = load i32, i32* %mclk, align 8, !dbg !9438
  %96 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9439
  %srate224 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %96, i32 0, i32 19, !dbg !9440
  %97 = load i32, i32* %srate224, align 4, !dbg !9440
  %call225 = call i32 @stv090x_set_max_srate(%struct.stv090x_state* %92, i32 %95, i32 %97) #9, !dbg !9441
  %cmp226 = icmp slt i32 %call225, 0, !dbg !9442
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !9443

if.then228:                                       ; preds = %if.end222
  br label %err, !dbg !9444

if.end229:                                        ; preds = %if.end222
  %98 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9445
  %99 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9447
  %internal230 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %99, i32 0, i32 3, !dbg !9448
  %100 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal230, align 8, !dbg !9448
  %mclk231 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %100, i32 0, i32 4, !dbg !9449
  %101 = load i32, i32* %mclk231, align 8, !dbg !9449
  %102 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9450
  %srate232 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %102, i32 0, i32 19, !dbg !9451
  %103 = load i32, i32* %srate232, align 4, !dbg !9451
  %call233 = call i32 @stv090x_set_min_srate(%struct.stv090x_state* %98, i32 %101, i32 %103) #9, !dbg !9452
  %cmp234 = icmp slt i32 %call233, 0, !dbg !9453
  br i1 %cmp234, label %if.then236, label %if.end237, !dbg !9454

if.then236:                                       ; preds = %if.end229
  br label %err, !dbg !9455

if.end237:                                        ; preds = %if.end229
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9456
  %srate238 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %104, i32 0, i32 19, !dbg !9458
  %105 = load i32, i32* %srate238, align 4, !dbg !9458
  %cmp239 = icmp uge i32 %105, 10000000, !dbg !9459
  br i1 %cmp239, label %if.then241, label %if.else242, !dbg !9460

if.then241:                                       ; preds = %if.end237
  store i32 0, i32* %low_sr, align 4, !dbg !9461
  br label %if.end243, !dbg !9462

if.else242:                                       ; preds = %if.end237
  store i32 1, i32* %low_sr, align 4, !dbg !9463
  br label %if.end243

if.end243:                                        ; preds = %if.else242, %if.then241
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.end93
  %106 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9464
  %call245 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %106, i32 1) #9, !dbg !9466
  %cmp246 = icmp slt i32 %call245, 0, !dbg !9467
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !9468

if.then248:                                       ; preds = %if.end244
  br label %err, !dbg !9469

if.end249:                                        ; preds = %if.end244
  %107 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9470
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %107, i32 0, i32 5, !dbg !9472
  %108 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !9472
  %tuner_set_bbgain = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %108, i32 0, i32 23, !dbg !9473
  %109 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bbgain, align 8, !dbg !9473
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32)* %109, null, !dbg !9470
  br i1 %tobool, label %if.then250, label %if.end264, !dbg !9474

if.then250:                                       ; preds = %if.end249
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9475
  %config251 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %110, i32 0, i32 5, !dbg !9477
  %111 = load %struct.stv090x_config*, %struct.stv090x_config** %config251, align 8, !dbg !9477
  %tuner_bbgain = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %111, i32 0, i32 12, !dbg !9478
  %112 = load i8, i8* %tuner_bbgain, align 8, !dbg !9478
  %conv252 = zext i8 %112 to i32, !dbg !9475
  store i32 %conv252, i32* %reg, align 4, !dbg !9479
  %113 = load i32, i32* %reg, align 4, !dbg !9480
  %cmp253 = icmp eq i32 %113, 0, !dbg !9482
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !9483

if.then255:                                       ; preds = %if.then250
  store i32 10, i32* %reg, align 4, !dbg !9484
  br label %if.end256, !dbg !9485

if.end256:                                        ; preds = %if.then255, %if.then250
  %114 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9486
  %config257 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %114, i32 0, i32 5, !dbg !9488
  %115 = load %struct.stv090x_config*, %struct.stv090x_config** %config257, align 8, !dbg !9488
  %tuner_set_bbgain258 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %115, i32 0, i32 23, !dbg !9489
  %116 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bbgain258, align 8, !dbg !9489
  %117 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !9490
  %118 = load i32, i32* %reg, align 4, !dbg !9491
  %call259 = call i32 %116(%struct.dvb_frontend* %117, i32 %118) #9, !dbg !9486
  %cmp260 = icmp slt i32 %call259, 0, !dbg !9492
  br i1 %cmp260, label %if.then262, label %if.end263, !dbg !9493

if.then262:                                       ; preds = %if.end256
  br label %err_gateoff, !dbg !9494

if.end263:                                        ; preds = %if.end256
  br label %if.end264, !dbg !9495

if.end264:                                        ; preds = %if.end263, %if.end249
  %119 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9496
  %config265 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %119, i32 0, i32 5, !dbg !9498
  %120 = load %struct.stv090x_config*, %struct.stv090x_config** %config265, align 8, !dbg !9498
  %tuner_set_frequency = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %120, i32 0, i32 19, !dbg !9499
  %121 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_frequency, align 8, !dbg !9499
  %tobool266 = icmp ne i32 (%struct.dvb_frontend*, i32)* %121, null, !dbg !9496
  br i1 %tobool266, label %if.then267, label %if.end275, !dbg !9500

if.then267:                                       ; preds = %if.end264
  %122 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9501
  %config268 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %122, i32 0, i32 5, !dbg !9504
  %123 = load %struct.stv090x_config*, %struct.stv090x_config** %config268, align 8, !dbg !9504
  %tuner_set_frequency269 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %123, i32 0, i32 19, !dbg !9505
  %124 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_frequency269, align 8, !dbg !9505
  %125 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !9506
  %126 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9507
  %frequency = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %126, i32 0, i32 18, !dbg !9508
  %127 = load i32, i32* %frequency, align 8, !dbg !9508
  %call270 = call i32 %124(%struct.dvb_frontend* %125, i32 %127) #9, !dbg !9501
  %cmp271 = icmp slt i32 %call270, 0, !dbg !9509
  br i1 %cmp271, label %if.then273, label %if.end274, !dbg !9510

if.then273:                                       ; preds = %if.then267
  br label %err_gateoff, !dbg !9511

if.end274:                                        ; preds = %if.then267
  br label %if.end275, !dbg !9512

if.end275:                                        ; preds = %if.end274, %if.end264
  %128 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9513
  %config276 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %128, i32 0, i32 5, !dbg !9515
  %129 = load %struct.stv090x_config*, %struct.stv090x_config** %config276, align 8, !dbg !9515
  %tuner_set_bandwidth = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %129, i32 0, i32 21, !dbg !9516
  %130 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth, align 8, !dbg !9516
  %tobool277 = icmp ne i32 (%struct.dvb_frontend*, i32)* %130, null, !dbg !9513
  br i1 %tobool277, label %if.then278, label %if.end287, !dbg !9517

if.then278:                                       ; preds = %if.end275
  %131 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9518
  %config279 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %131, i32 0, i32 5, !dbg !9521
  %132 = load %struct.stv090x_config*, %struct.stv090x_config** %config279, align 8, !dbg !9521
  %tuner_set_bandwidth280 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %132, i32 0, i32 21, !dbg !9522
  %133 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth280, align 8, !dbg !9522
  %134 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !9523
  %135 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9524
  %tuner_bw281 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %135, i32 0, i32 20, !dbg !9525
  %136 = load i32, i32* %tuner_bw281, align 8, !dbg !9525
  %call282 = call i32 %133(%struct.dvb_frontend* %134, i32 %136) #9, !dbg !9518
  %cmp283 = icmp slt i32 %call282, 0, !dbg !9526
  br i1 %cmp283, label %if.then285, label %if.end286, !dbg !9527

if.then285:                                       ; preds = %if.then278
  br label %err_gateoff, !dbg !9528

if.end286:                                        ; preds = %if.then278
  br label %if.end287, !dbg !9529

if.end287:                                        ; preds = %if.end286, %if.end275
  %137 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9530
  %call288 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %137, i32 0) #9, !dbg !9532
  %cmp289 = icmp slt i32 %call288, 0, !dbg !9533
  br i1 %cmp289, label %if.then291, label %if.end292, !dbg !9534

if.then291:                                       ; preds = %if.end287
  br label %err, !dbg !9535

if.end292:                                        ; preds = %if.end287
  call void @msleep(i32 50) #9, !dbg !9536
  %138 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9537
  %config293 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %138, i32 0, i32 5, !dbg !9539
  %139 = load %struct.stv090x_config*, %struct.stv090x_config** %config293, align 8, !dbg !9539
  %tuner_get_status = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %139, i32 0, i32 26, !dbg !9540
  %140 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_status, align 8, !dbg !9540
  %tobool294 = icmp ne i32 (%struct.dvb_frontend*, i32*)* %140, null, !dbg !9537
  br i1 %tobool294, label %if.then295, label %if.end388, !dbg !9541

if.then295:                                       ; preds = %if.end292
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9542
  %call296 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %141, i32 1) #9, !dbg !9545
  %cmp297 = icmp slt i32 %call296, 0, !dbg !9546
  br i1 %cmp297, label %if.then299, label %if.end300, !dbg !9547

if.then299:                                       ; preds = %if.then295
  br label %err, !dbg !9548

if.end300:                                        ; preds = %if.then295
  %142 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9549
  %config301 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %142, i32 0, i32 5, !dbg !9551
  %143 = load %struct.stv090x_config*, %struct.stv090x_config** %config301, align 8, !dbg !9551
  %tuner_get_status302 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %143, i32 0, i32 26, !dbg !9552
  %144 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_status302, align 8, !dbg !9552
  %145 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !9553
  %call303 = call i32 %144(%struct.dvb_frontend* %145, i32* %reg) #9, !dbg !9549
  %cmp304 = icmp slt i32 %call303, 0, !dbg !9554
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !9555

if.then306:                                       ; preds = %if.end300
  br label %err_gateoff, !dbg !9556

if.end307:                                        ; preds = %if.end300
  %146 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9557
  %call308 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %146, i32 0) #9, !dbg !9559
  %cmp309 = icmp slt i32 %call308, 0, !dbg !9560
  br i1 %cmp309, label %if.then311, label %if.end312, !dbg !9561

if.then311:                                       ; preds = %if.end307
  br label %err, !dbg !9562

if.end312:                                        ; preds = %if.end307
  %147 = load i32, i32* %reg, align 4, !dbg !9563
  %tobool313 = icmp ne i32 %147, 0, !dbg !9563
  br i1 %tobool313, label %if.then314, label %if.else349, !dbg !9565

if.then314:                                       ; preds = %if.end312
  br label %do.body, !dbg !9566

do.body:                                          ; preds = %if.then314
  %148 = load i32, i32* @verbose, align 4, !dbg !9567
  %cmp315 = icmp ugt i32 %148, 0, !dbg !9567
  br i1 %cmp315, label %land.lhs.true, label %if.else321, !dbg !9567

land.lhs.true:                                    ; preds = %do.body
  %149 = load i32, i32* @verbose, align 4, !dbg !9567
  %cmp317 = icmp ugt i32 %149, 3, !dbg !9567
  br i1 %cmp317, label %if.then319, label %if.else321, !dbg !9572

if.then319:                                       ; preds = %land.lhs.true
  %call320 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9567
  br label %if.end348, !dbg !9567

if.else321:                                       ; preds = %land.lhs.true, %do.body
  %150 = load i32, i32* @verbose, align 4, !dbg !9573
  %cmp322 = icmp ugt i32 %150, 1, !dbg !9573
  br i1 %cmp322, label %land.lhs.true324, label %if.else329, !dbg !9573

land.lhs.true324:                                 ; preds = %if.else321
  %151 = load i32, i32* @verbose, align 4, !dbg !9573
  %cmp325 = icmp ugt i32 %151, 3, !dbg !9573
  br i1 %cmp325, label %if.then327, label %if.else329, !dbg !9567

if.then327:                                       ; preds = %land.lhs.true324
  %call328 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9573
  br label %if.end347, !dbg !9573

if.else329:                                       ; preds = %land.lhs.true324, %if.else321
  %152 = load i32, i32* @verbose, align 4, !dbg !9575
  %cmp330 = icmp ugt i32 %152, 2, !dbg !9575
  br i1 %cmp330, label %land.lhs.true332, label %if.else337, !dbg !9575

land.lhs.true332:                                 ; preds = %if.else329
  %153 = load i32, i32* @verbose, align 4, !dbg !9575
  %cmp333 = icmp ugt i32 %153, 3, !dbg !9575
  br i1 %cmp333, label %if.then335, label %if.else337, !dbg !9573

if.then335:                                       ; preds = %land.lhs.true332
  %call336 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9575
  br label %if.end346, !dbg !9575

if.else337:                                       ; preds = %land.lhs.true332, %if.else329
  %154 = load i32, i32* @verbose, align 4, !dbg !9577
  %cmp338 = icmp ugt i32 %154, 3, !dbg !9577
  br i1 %cmp338, label %land.lhs.true340, label %if.end345, !dbg !9577

land.lhs.true340:                                 ; preds = %if.else337
  %155 = load i32, i32* @verbose, align 4, !dbg !9577
  %cmp341 = icmp ugt i32 %155, 3, !dbg !9577
  br i1 %cmp341, label %if.then343, label %if.end345, !dbg !9575

if.then343:                                       ; preds = %land.lhs.true340
  %call344 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9577
  br label %if.end345, !dbg !9577

if.end345:                                        ; preds = %if.then343, %land.lhs.true340, %if.else337
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.then335
  br label %if.end347

if.end347:                                        ; preds = %if.end346, %if.then327
  br label %if.end348

if.end348:                                        ; preds = %if.end347, %if.then319
  br label %do.end, !dbg !9579

do.end:                                           ; preds = %if.end348
  br label %if.end387, !dbg !9579

if.else349:                                       ; preds = %if.end312
  br label %do.body350, !dbg !9580

do.body350:                                       ; preds = %if.else349
  %156 = load i32, i32* @verbose, align 4, !dbg !9582
  %cmp351 = icmp ugt i32 %156, 0, !dbg !9582
  br i1 %cmp351, label %land.lhs.true353, label %if.else358, !dbg !9582

land.lhs.true353:                                 ; preds = %do.body350
  %157 = load i32, i32* @verbose, align 4, !dbg !9582
  %cmp354 = icmp ugt i32 %157, 3, !dbg !9582
  br i1 %cmp354, label %if.then356, label %if.else358, !dbg !9587

if.then356:                                       ; preds = %land.lhs.true353
  %call357 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9582
  br label %if.end385, !dbg !9582

if.else358:                                       ; preds = %land.lhs.true353, %do.body350
  %158 = load i32, i32* @verbose, align 4, !dbg !9588
  %cmp359 = icmp ugt i32 %158, 1, !dbg !9588
  br i1 %cmp359, label %land.lhs.true361, label %if.else366, !dbg !9588

land.lhs.true361:                                 ; preds = %if.else358
  %159 = load i32, i32* @verbose, align 4, !dbg !9588
  %cmp362 = icmp ugt i32 %159, 3, !dbg !9588
  br i1 %cmp362, label %if.then364, label %if.else366, !dbg !9582

if.then364:                                       ; preds = %land.lhs.true361
  %call365 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9588
  br label %if.end384, !dbg !9588

if.else366:                                       ; preds = %land.lhs.true361, %if.else358
  %160 = load i32, i32* @verbose, align 4, !dbg !9590
  %cmp367 = icmp ugt i32 %160, 2, !dbg !9590
  br i1 %cmp367, label %land.lhs.true369, label %if.else374, !dbg !9590

land.lhs.true369:                                 ; preds = %if.else366
  %161 = load i32, i32* @verbose, align 4, !dbg !9590
  %cmp370 = icmp ugt i32 %161, 3, !dbg !9590
  br i1 %cmp370, label %if.then372, label %if.else374, !dbg !9588

if.then372:                                       ; preds = %land.lhs.true369
  %call373 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9590
  br label %if.end383, !dbg !9590

if.else374:                                       ; preds = %land.lhs.true369, %if.else366
  %162 = load i32, i32* @verbose, align 4, !dbg !9592
  %cmp375 = icmp ugt i32 %162, 3, !dbg !9592
  br i1 %cmp375, label %land.lhs.true377, label %if.end382, !dbg !9592

land.lhs.true377:                                 ; preds = %if.else374
  %163 = load i32, i32* @verbose, align 4, !dbg !9592
  %cmp378 = icmp ugt i32 %163, 3, !dbg !9592
  br i1 %cmp378, label %if.then380, label %if.end382, !dbg !9590

if.then380:                                       ; preds = %land.lhs.true377
  %call381 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9592
  br label %if.end382, !dbg !9592

if.end382:                                        ; preds = %if.then380, %land.lhs.true377, %if.else374
  br label %if.end383

if.end383:                                        ; preds = %if.end382, %if.then372
  br label %if.end384

if.end384:                                        ; preds = %if.end383, %if.then364
  br label %if.end385

if.end385:                                        ; preds = %if.end384, %if.then356
  br label %do.end386, !dbg !9594

do.end386:                                        ; preds = %if.end385
  store i32 1, i32* %retval, align 4, !dbg !9595
  br label %return, !dbg !9595

if.end387:                                        ; preds = %do.end
  br label %if.end388, !dbg !9596

if.end388:                                        ; preds = %if.end387, %if.end292
  call void @msleep(i32 10) #9, !dbg !9597
  %164 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9598
  %demod389 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %164, i32 0, i32 1, !dbg !9598
  %165 = load i32, i32* %demod389, align 4, !dbg !9598
  %cmp390 = icmp eq i32 %165, 2, !dbg !9598
  br i1 %cmp390, label %cond.true392, label %cond.false394, !dbg !9598

cond.true392:                                     ; preds = %if.end388
  %166 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9598
  %call393 = call i32 @stv090x_read_reg(%struct.stv090x_state* %166, i32 61966) #9, !dbg !9598
  br label %cond.end396, !dbg !9598

cond.false394:                                    ; preds = %if.end388
  %167 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9598
  %call395 = call i32 @stv090x_read_reg(%struct.stv090x_state* %167, i32 62478) #9, !dbg !9598
  br label %cond.end396, !dbg !9598

cond.end396:                                      ; preds = %cond.false394, %cond.true392
  %cond397 = phi i32 [ %call393, %cond.true392 ], [ %call395, %cond.false394 ], !dbg !9598
  %shl = shl i32 %cond397, 8, !dbg !9598
  %168 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9598
  %demod398 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %168, i32 0, i32 1, !dbg !9598
  %169 = load i32, i32* %demod398, align 4, !dbg !9598
  %cmp399 = icmp eq i32 %169, 2, !dbg !9598
  br i1 %cmp399, label %cond.true401, label %cond.false403, !dbg !9598

cond.true401:                                     ; preds = %cond.end396
  %170 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9598
  %call402 = call i32 @stv090x_read_reg(%struct.stv090x_state* %170, i32 61967) #9, !dbg !9598
  br label %cond.end405, !dbg !9598

cond.false403:                                    ; preds = %cond.end396
  %171 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9598
  %call404 = call i32 @stv090x_read_reg(%struct.stv090x_state* %171, i32 62479) #9, !dbg !9598
  br label %cond.end405, !dbg !9598

cond.end405:                                      ; preds = %cond.false403, %cond.true401
  %cond406 = phi i32 [ %call402, %cond.true401 ], [ %call404, %cond.false403 ], !dbg !9598
  %or407 = or i32 %shl, %cond406, !dbg !9598
  store i32 %or407, i32* %agc1_power, align 4, !dbg !9599
  %172 = load i32, i32* %agc1_power, align 4, !dbg !9600
  %cmp408 = icmp eq i32 %172, 0, !dbg !9602
  br i1 %cmp408, label %if.then410, label %if.end434, !dbg !9603

if.then410:                                       ; preds = %cond.end405
  store i32 0, i32* %i, align 4, !dbg !9604
  br label %for.cond, !dbg !9607

for.cond:                                         ; preds = %for.inc, %if.then410
  %173 = load i32, i32* %i, align 4, !dbg !9608
  %cmp411 = icmp slt i32 %173, 5, !dbg !9610
  br i1 %cmp411, label %for.body, label %for.end, !dbg !9611

for.body:                                         ; preds = %for.cond
  %174 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9612
  %demod413 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %174, i32 0, i32 1, !dbg !9612
  %175 = load i32, i32* %demod413, align 4, !dbg !9612
  %cmp414 = icmp eq i32 %175, 2, !dbg !9612
  br i1 %cmp414, label %cond.true416, label %cond.false418, !dbg !9612

cond.true416:                                     ; preds = %for.body
  %176 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9612
  %call417 = call i32 @stv090x_read_reg(%struct.stv090x_state* %176, i32 61962) #9, !dbg !9612
  br label %cond.end420, !dbg !9612

cond.false418:                                    ; preds = %for.body
  %177 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9612
  %call419 = call i32 @stv090x_read_reg(%struct.stv090x_state* %177, i32 62474) #9, !dbg !9612
  br label %cond.end420, !dbg !9612

cond.end420:                                      ; preds = %cond.false418, %cond.true416
  %cond421 = phi i32 [ %call417, %cond.true416 ], [ %call419, %cond.false418 ], !dbg !9612
  %178 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9614
  %demod422 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %178, i32 0, i32 1, !dbg !9614
  %179 = load i32, i32* %demod422, align 4, !dbg !9614
  %cmp423 = icmp eq i32 %179, 2, !dbg !9614
  br i1 %cmp423, label %cond.true425, label %cond.false427, !dbg !9614

cond.true425:                                     ; preds = %cond.end420
  %180 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9614
  %call426 = call i32 @stv090x_read_reg(%struct.stv090x_state* %180, i32 61963) #9, !dbg !9614
  br label %cond.end429, !dbg !9614

cond.false427:                                    ; preds = %cond.end420
  %181 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9614
  %call428 = call i32 @stv090x_read_reg(%struct.stv090x_state* %181, i32 62475) #9, !dbg !9614
  br label %cond.end429, !dbg !9614

cond.end429:                                      ; preds = %cond.false427, %cond.true425
  %cond430 = phi i32 [ %call426, %cond.true425 ], [ %call428, %cond.false427 ], !dbg !9614
  %add431 = add i32 %cond421, %cond430, !dbg !9615
  %shr = ashr i32 %add431, 1, !dbg !9616
  %182 = load i32, i32* %power_iq, align 4, !dbg !9617
  %add432 = add i32 %182, %shr, !dbg !9617
  store i32 %add432, i32* %power_iq, align 4, !dbg !9617
  br label %for.inc, !dbg !9618

for.inc:                                          ; preds = %cond.end429
  %183 = load i32, i32* %i, align 4, !dbg !9619
  %inc = add i32 %183, 1, !dbg !9619
  store i32 %inc, i32* %i, align 4, !dbg !9619
  br label %for.cond, !dbg !9620, !llvm.loop !9621

for.end:                                          ; preds = %for.cond
  %184 = load i32, i32* %power_iq, align 4, !dbg !9623
  %div433 = sdiv i32 %184, 5, !dbg !9623
  store i32 %div433, i32* %power_iq, align 4, !dbg !9623
  br label %if.end434, !dbg !9624

if.end434:                                        ; preds = %for.end, %cond.end405
  %185 = load i32, i32* %agc1_power, align 4, !dbg !9625
  %cmp435 = icmp eq i32 %185, 0, !dbg !9627
  br i1 %cmp435, label %land.lhs.true437, label %if.else478, !dbg !9628

land.lhs.true437:                                 ; preds = %if.end434
  %186 = load i32, i32* %power_iq, align 4, !dbg !9629
  %cmp438 = icmp slt i32 %186, 30, !dbg !9630
  br i1 %cmp438, label %if.then440, label %if.else478, !dbg !9631

if.then440:                                       ; preds = %land.lhs.true437
  br label %do.body441, !dbg !9632

do.body441:                                       ; preds = %if.then440
  %187 = load i32, i32* @verbose, align 4, !dbg !9634
  %cmp442 = icmp ugt i32 %187, 0, !dbg !9634
  br i1 %cmp442, label %land.lhs.true444, label %if.else449, !dbg !9634

land.lhs.true444:                                 ; preds = %do.body441
  %188 = load i32, i32* @verbose, align 4, !dbg !9634
  %cmp445 = icmp ugt i32 %188, 0, !dbg !9634
  br i1 %cmp445, label %if.then447, label %if.else449, !dbg !9639

if.then447:                                       ; preds = %land.lhs.true444
  %189 = load i32, i32* %power_iq, align 4, !dbg !9634
  %call448 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.101, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0), i32 %189) #13, !dbg !9634
  br label %if.end476, !dbg !9634

if.else449:                                       ; preds = %land.lhs.true444, %do.body441
  %190 = load i32, i32* @verbose, align 4, !dbg !9640
  %cmp450 = icmp ugt i32 %190, 1, !dbg !9640
  br i1 %cmp450, label %land.lhs.true452, label %if.else457, !dbg !9640

land.lhs.true452:                                 ; preds = %if.else449
  %191 = load i32, i32* @verbose, align 4, !dbg !9640
  %cmp453 = icmp ugt i32 %191, 0, !dbg !9640
  br i1 %cmp453, label %if.then455, label %if.else457, !dbg !9634

if.then455:                                       ; preds = %land.lhs.true452
  %192 = load i32, i32* %power_iq, align 4, !dbg !9640
  %call456 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.102, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0), i32 %192) #13, !dbg !9640
  br label %if.end475, !dbg !9640

if.else457:                                       ; preds = %land.lhs.true452, %if.else449
  %193 = load i32, i32* @verbose, align 4, !dbg !9642
  %cmp458 = icmp ugt i32 %193, 2, !dbg !9642
  br i1 %cmp458, label %land.lhs.true460, label %if.else465, !dbg !9642

land.lhs.true460:                                 ; preds = %if.else457
  %194 = load i32, i32* @verbose, align 4, !dbg !9642
  %cmp461 = icmp ugt i32 %194, 0, !dbg !9642
  br i1 %cmp461, label %if.then463, label %if.else465, !dbg !9640

if.then463:                                       ; preds = %land.lhs.true460
  %195 = load i32, i32* %power_iq, align 4, !dbg !9642
  %call464 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0), i32 %195) #13, !dbg !9642
  br label %if.end474, !dbg !9642

if.else465:                                       ; preds = %land.lhs.true460, %if.else457
  %196 = load i32, i32* @verbose, align 4, !dbg !9644
  %cmp466 = icmp ugt i32 %196, 3, !dbg !9644
  br i1 %cmp466, label %land.lhs.true468, label %if.end473, !dbg !9644

land.lhs.true468:                                 ; preds = %if.else465
  %197 = load i32, i32* @verbose, align 4, !dbg !9644
  %cmp469 = icmp ugt i32 %197, 0, !dbg !9644
  br i1 %cmp469, label %if.then471, label %if.end473, !dbg !9642

if.then471:                                       ; preds = %land.lhs.true468
  %198 = load i32, i32* %power_iq, align 4, !dbg !9644
  %call472 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.104, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0), i32 %198) #13, !dbg !9644
  br label %if.end473, !dbg !9644

if.end473:                                        ; preds = %if.then471, %land.lhs.true468, %if.else465
  br label %if.end474

if.end474:                                        ; preds = %if.end473, %if.then463
  br label %if.end475

if.end475:                                        ; preds = %if.end474, %if.then455
  br label %if.end476

if.end476:                                        ; preds = %if.end475, %if.then447
  br label %do.end477, !dbg !9646

do.end477:                                        ; preds = %if.end476
  store i32 0, i32* %lock, align 4, !dbg !9647
  store i32 0, i32* %signal_state, align 4, !dbg !9648
  br label %if.end532, !dbg !9649

if.else478:                                       ; preds = %land.lhs.true437, %if.end434
  %199 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9650
  %demod479 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %199, i32 0, i32 1, !dbg !9650
  %200 = load i32, i32* %demod479, align 4, !dbg !9650
  %cmp480 = icmp eq i32 %200, 2, !dbg !9650
  br i1 %cmp480, label %cond.true482, label %cond.false484, !dbg !9650

cond.true482:                                     ; preds = %if.else478
  %201 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9650
  %call483 = call i32 @stv090x_read_reg(%struct.stv090x_state* %201, i32 61968) #9, !dbg !9650
  br label %cond.end486, !dbg !9650

cond.false484:                                    ; preds = %if.else478
  %202 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9650
  %call485 = call i32 @stv090x_read_reg(%struct.stv090x_state* %202, i32 62480) #9, !dbg !9650
  br label %cond.end486, !dbg !9650

cond.end486:                                      ; preds = %cond.false484, %cond.true482
  %cond487 = phi i32 [ %call483, %cond.true482 ], [ %call485, %cond.false484 ], !dbg !9650
  store i32 %cond487, i32* %reg, align 4, !dbg !9652
  %203 = load i32, i32* %reg, align 4, !dbg !9653
  %and488 = and i32 %203, -49, !dbg !9653
  %204 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9653
  %inversion = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %204, i32 0, i32 16, !dbg !9653
  %205 = load i32, i32* %inversion, align 8, !dbg !9653
  %shl489 = shl i32 %205, 4, !dbg !9653
  %or490 = or i32 %and488, %shl489, !dbg !9653
  store i32 %or490, i32* %reg, align 4, !dbg !9653
  %206 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9654
  %internal491 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %206, i32 0, i32 3, !dbg !9656
  %207 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal491, align 8, !dbg !9656
  %dev_ver492 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %207, i32 0, i32 5, !dbg !9657
  %208 = load i32, i32* %dev_ver492, align 4, !dbg !9657
  %cmp493 = icmp ule i32 %208, 32, !dbg !9658
  br i1 %cmp493, label %if.then495, label %if.else498, !dbg !9659

if.then495:                                       ; preds = %cond.end486
  %209 = load i32, i32* %reg, align 4, !dbg !9660
  %and496 = and i32 %209, -5, !dbg !9660
  %or497 = or i32 %and496, 4, !dbg !9660
  store i32 %or497, i32* %reg, align 4, !dbg !9660
  br label %if.end501, !dbg !9662

if.else498:                                       ; preds = %cond.end486
  %210 = load i32, i32* %reg, align 4, !dbg !9663
  %and499 = and i32 %210, -129, !dbg !9663
  %or500 = or i32 %and499, 128, !dbg !9663
  store i32 %or500, i32* %reg, align 4, !dbg !9663
  br label %if.end501

if.end501:                                        ; preds = %if.else498, %if.then495
  %211 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9665
  %demod502 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %211, i32 0, i32 1, !dbg !9665
  %212 = load i32, i32* %demod502, align 4, !dbg !9665
  %cmp503 = icmp eq i32 %212, 2, !dbg !9665
  br i1 %cmp503, label %cond.true505, label %cond.false508, !dbg !9665

cond.true505:                                     ; preds = %if.end501
  %213 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9665
  %214 = load i32, i32* %reg, align 4, !dbg !9665
  %conv506 = trunc i32 %214 to i8, !dbg !9665
  %call507 = call i32 @stv090x_write_reg(%struct.stv090x_state* %213, i32 61968, i8 zeroext %conv506) #9, !dbg !9665
  br label %cond.end511, !dbg !9665

cond.false508:                                    ; preds = %if.end501
  %215 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9665
  %216 = load i32, i32* %reg, align 4, !dbg !9665
  %conv509 = trunc i32 %216 to i8, !dbg !9665
  %call510 = call i32 @stv090x_write_reg(%struct.stv090x_state* %215, i32 62480, i8 zeroext %conv509) #9, !dbg !9665
  br label %cond.end511, !dbg !9665

cond.end511:                                      ; preds = %cond.false508, %cond.true505
  %cond512 = phi i32 [ %call507, %cond.true505 ], [ %call510, %cond.false508 ], !dbg !9665
  %cmp513 = icmp slt i32 %cond512, 0, !dbg !9667
  br i1 %cmp513, label %if.then515, label %if.end516, !dbg !9668

if.then515:                                       ; preds = %cond.end511
  br label %err, !dbg !9669

if.end516:                                        ; preds = %cond.end511
  %217 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9670
  %call517 = call i32 @stv090x_delivery_search(%struct.stv090x_state* %217) #9, !dbg !9672
  %cmp518 = icmp slt i32 %call517, 0, !dbg !9673
  br i1 %cmp518, label %if.then520, label %if.end521, !dbg !9674

if.then520:                                       ; preds = %if.end516
  br label %err, !dbg !9675

if.end521:                                        ; preds = %if.end516
  %218 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9676
  %algo522 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %218, i32 0, i32 17, !dbg !9678
  %219 = load i32, i32* %algo522, align 4, !dbg !9678
  %cmp523 = icmp ne i32 %219, 0, !dbg !9679
  br i1 %cmp523, label %if.then525, label %if.end531, !dbg !9680

if.then525:                                       ; preds = %if.end521
  %220 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9681
  %call526 = call i32 @stv090x_start_search(%struct.stv090x_state* %220) #9, !dbg !9684
  %cmp527 = icmp slt i32 %call526, 0, !dbg !9685
  br i1 %cmp527, label %if.then529, label %if.end530, !dbg !9686

if.then529:                                       ; preds = %if.then525
  br label %err, !dbg !9687

if.end530:                                        ; preds = %if.then525
  br label %if.end531, !dbg !9688

if.end531:                                        ; preds = %if.end530, %if.end521
  br label %if.end532

if.end532:                                        ; preds = %if.end531, %do.end477
  %221 = load i32, i32* %signal_state, align 4, !dbg !9689
  %cmp533 = icmp eq i32 %221, 0, !dbg !9691
  br i1 %cmp533, label %if.then535, label %if.end536, !dbg !9692

if.then535:                                       ; preds = %if.end532
  %222 = load i32, i32* %signal_state, align 4, !dbg !9693
  store i32 %222, i32* %retval, align 4, !dbg !9694
  br label %return, !dbg !9694

if.end536:                                        ; preds = %if.end532
  %223 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9695
  %algo537 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %223, i32 0, i32 17, !dbg !9697
  %224 = load i32, i32* %algo537, align 4, !dbg !9697
  %cmp538 = icmp eq i32 %224, 0, !dbg !9698
  br i1 %cmp538, label %if.then540, label %if.else542, !dbg !9699

if.then540:                                       ; preds = %if.end536
  %225 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9700
  %call541 = call i32 @stv090x_blind_search(%struct.stv090x_state* %225) #9, !dbg !9701
  store i32 %call541, i32* %lock, align 4, !dbg !9702
  br label %if.end557, !dbg !9703

if.else542:                                       ; preds = %if.end536
  %226 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9704
  %algo543 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %226, i32 0, i32 17, !dbg !9706
  %227 = load i32, i32* %algo543, align 4, !dbg !9706
  %cmp544 = icmp eq i32 %227, 1, !dbg !9707
  br i1 %cmp544, label %if.then546, label %if.else548, !dbg !9708

if.then546:                                       ; preds = %if.else542
  %228 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9709
  %229 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9710
  %DemodTimeout = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %229, i32 0, i32 22, !dbg !9711
  %230 = load i32, i32* %DemodTimeout, align 8, !dbg !9711
  %call547 = call i32 @stv090x_get_coldlock(%struct.stv090x_state* %228, i32 %230) #9, !dbg !9712
  store i32 %call547, i32* %lock, align 4, !dbg !9713
  br label %if.end556, !dbg !9714

if.else548:                                       ; preds = %if.else542
  %231 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9715
  %algo549 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %231, i32 0, i32 17, !dbg !9717
  %232 = load i32, i32* %algo549, align 4, !dbg !9717
  %cmp550 = icmp eq i32 %232, 2, !dbg !9718
  br i1 %cmp550, label %if.then552, label %if.end555, !dbg !9719

if.then552:                                       ; preds = %if.else548
  %233 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9720
  %234 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9721
  %DemodTimeout553 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %234, i32 0, i32 22, !dbg !9722
  %235 = load i32, i32* %DemodTimeout553, align 8, !dbg !9722
  %call554 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %233, i32 %235) #9, !dbg !9723
  store i32 %call554, i32* %lock, align 4, !dbg !9724
  br label %if.end555, !dbg !9725

if.end555:                                        ; preds = %if.then552, %if.else548
  br label %if.end556

if.end556:                                        ; preds = %if.end555, %if.then546
  br label %if.end557

if.end557:                                        ; preds = %if.end556, %if.then540
  %236 = load i32, i32* %lock, align 4, !dbg !9726
  %tobool558 = icmp ne i32 %236, 0, !dbg !9726
  br i1 %tobool558, label %if.end572, label %land.lhs.true559, !dbg !9728

land.lhs.true559:                                 ; preds = %if.end557
  %237 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9729
  %algo560 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %237, i32 0, i32 17, !dbg !9730
  %238 = load i32, i32* %algo560, align 4, !dbg !9730
  %cmp561 = icmp eq i32 %238, 1, !dbg !9731
  br i1 %cmp561, label %if.then563, label %if.end572, !dbg !9732

if.then563:                                       ; preds = %land.lhs.true559
  %239 = load i32, i32* %low_sr, align 4, !dbg !9733
  %tobool564 = icmp ne i32 %239, 0, !dbg !9733
  br i1 %tobool564, label %if.end571, label %if.then565, !dbg !9736

if.then565:                                       ; preds = %if.then563
  %240 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9737
  %call566 = call i32 @stv090x_chk_tmg(%struct.stv090x_state* %240) #9, !dbg !9740
  %tobool567 = icmp ne i32 %call566, 0, !dbg !9740
  br i1 %tobool567, label %if.then568, label %if.end570, !dbg !9741

if.then568:                                       ; preds = %if.then565
  %241 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9742
  %call569 = call i32 @stv090x_sw_algo(%struct.stv090x_state* %241) #9, !dbg !9743
  store i32 %call569, i32* %lock, align 4, !dbg !9744
  br label %if.end570, !dbg !9745

if.end570:                                        ; preds = %if.then568, %if.then565
  br label %if.end571, !dbg !9746

if.end571:                                        ; preds = %if.end570, %if.then563
  br label %if.end572, !dbg !9747

if.end572:                                        ; preds = %if.end571, %land.lhs.true559, %if.end557
  %242 = load i32, i32* %lock, align 4, !dbg !9748
  %tobool573 = icmp ne i32 %242, 0, !dbg !9748
  br i1 %tobool573, label %if.then574, label %if.end576, !dbg !9750

if.then574:                                       ; preds = %if.end572
  %243 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9751
  %call575 = call i32 @stv090x_get_sig_params(%struct.stv090x_state* %243) #9, !dbg !9752
  store i32 %call575, i32* %signal_state, align 4, !dbg !9753
  br label %if.end576, !dbg !9754

if.end576:                                        ; preds = %if.then574, %if.end572
  %244 = load i32, i32* %lock, align 4, !dbg !9755
  %tobool577 = icmp ne i32 %244, 0, !dbg !9757
  br i1 %tobool577, label %land.lhs.true578, label %if.end763, !dbg !9758

land.lhs.true578:                                 ; preds = %if.end576
  %245 = load i32, i32* %signal_state, align 4, !dbg !9759
  %cmp579 = icmp eq i32 %245, 4, !dbg !9760
  br i1 %cmp579, label %if.then581, label %if.end763, !dbg !9761

if.then581:                                       ; preds = %land.lhs.true578
  %246 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9762
  %call582 = call i32 @stv090x_optimize_track(%struct.stv090x_state* %246) #9, !dbg !9764
  %247 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9765
  %internal583 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %247, i32 0, i32 3, !dbg !9767
  %248 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal583, align 8, !dbg !9767
  %dev_ver584 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %248, i32 0, i32 5, !dbg !9768
  %249 = load i32, i32* %dev_ver584, align 4, !dbg !9768
  %cmp585 = icmp uge i32 %249, 32, !dbg !9769
  br i1 %cmp585, label %if.then587, label %if.end646, !dbg !9770

if.then587:                                       ; preds = %if.then581
  %250 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9771
  %demod588 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %250, i32 0, i32 1, !dbg !9771
  %251 = load i32, i32* %demod588, align 4, !dbg !9771
  %cmp589 = icmp eq i32 %251, 2, !dbg !9771
  br i1 %cmp589, label %cond.true591, label %cond.false593, !dbg !9771

cond.true591:                                     ; preds = %if.then587
  %252 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9771
  %call592 = call i32 @stv090x_read_reg(%struct.stv090x_state* %252, i32 62322) #9, !dbg !9771
  br label %cond.end595, !dbg !9771

cond.false593:                                    ; preds = %if.then587
  %253 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9771
  %call594 = call i32 @stv090x_read_reg(%struct.stv090x_state* %253, i32 62834) #9, !dbg !9771
  br label %cond.end595, !dbg !9771

cond.end595:                                      ; preds = %cond.false593, %cond.true591
  %cond596 = phi i32 [ %call592, %cond.true591 ], [ %call594, %cond.false593 ], !dbg !9771
  store i32 %cond596, i32* %reg, align 4, !dbg !9773
  %254 = load i32, i32* %reg, align 4, !dbg !9774
  %and597 = and i32 %254, -2, !dbg !9774
  store i32 %and597, i32* %reg, align 4, !dbg !9774
  %255 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9775
  %demod598 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %255, i32 0, i32 1, !dbg !9775
  %256 = load i32, i32* %demod598, align 4, !dbg !9775
  %cmp599 = icmp eq i32 %256, 2, !dbg !9775
  br i1 %cmp599, label %cond.true601, label %cond.false604, !dbg !9775

cond.true601:                                     ; preds = %cond.end595
  %257 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9775
  %258 = load i32, i32* %reg, align 4, !dbg !9775
  %conv602 = trunc i32 %258 to i8, !dbg !9775
  %call603 = call i32 @stv090x_write_reg(%struct.stv090x_state* %257, i32 62322, i8 zeroext %conv602) #9, !dbg !9775
  br label %cond.end607, !dbg !9775

cond.false604:                                    ; preds = %cond.end595
  %259 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9775
  %260 = load i32, i32* %reg, align 4, !dbg !9775
  %conv605 = trunc i32 %260 to i8, !dbg !9775
  %call606 = call i32 @stv090x_write_reg(%struct.stv090x_state* %259, i32 62834, i8 zeroext %conv605) #9, !dbg !9775
  br label %cond.end607, !dbg !9775

cond.end607:                                      ; preds = %cond.false604, %cond.true601
  %cond608 = phi i32 [ %call603, %cond.true601 ], [ %call606, %cond.false604 ], !dbg !9775
  %cmp609 = icmp slt i32 %cond608, 0, !dbg !9777
  br i1 %cmp609, label %if.then611, label %if.end612, !dbg !9778

if.then611:                                       ; preds = %cond.end607
  br label %err, !dbg !9779

if.end612:                                        ; preds = %cond.end607
  call void @msleep(i32 3) #9, !dbg !9780
  %261 = load i32, i32* %reg, align 4, !dbg !9781
  %and613 = and i32 %261, -2, !dbg !9781
  %or614 = or i32 %and613, 1, !dbg !9781
  store i32 %or614, i32* %reg, align 4, !dbg !9781
  %262 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9782
  %demod615 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %262, i32 0, i32 1, !dbg !9782
  %263 = load i32, i32* %demod615, align 4, !dbg !9782
  %cmp616 = icmp eq i32 %263, 2, !dbg !9782
  br i1 %cmp616, label %cond.true618, label %cond.false621, !dbg !9782

cond.true618:                                     ; preds = %if.end612
  %264 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9782
  %265 = load i32, i32* %reg, align 4, !dbg !9782
  %conv619 = trunc i32 %265 to i8, !dbg !9782
  %call620 = call i32 @stv090x_write_reg(%struct.stv090x_state* %264, i32 62322, i8 zeroext %conv619) #9, !dbg !9782
  br label %cond.end624, !dbg !9782

cond.false621:                                    ; preds = %if.end612
  %266 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9782
  %267 = load i32, i32* %reg, align 4, !dbg !9782
  %conv622 = trunc i32 %267 to i8, !dbg !9782
  %call623 = call i32 @stv090x_write_reg(%struct.stv090x_state* %266, i32 62834, i8 zeroext %conv622) #9, !dbg !9782
  br label %cond.end624, !dbg !9782

cond.end624:                                      ; preds = %cond.false621, %cond.true618
  %cond625 = phi i32 [ %call620, %cond.true618 ], [ %call623, %cond.false621 ], !dbg !9782
  %cmp626 = icmp slt i32 %cond625, 0, !dbg !9784
  br i1 %cmp626, label %if.then628, label %if.end629, !dbg !9785

if.then628:                                       ; preds = %cond.end624
  br label %err, !dbg !9786

if.end629:                                        ; preds = %cond.end624
  %268 = load i32, i32* %reg, align 4, !dbg !9787
  %and630 = and i32 %268, -2, !dbg !9787
  store i32 %and630, i32* %reg, align 4, !dbg !9787
  %269 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9788
  %demod631 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %269, i32 0, i32 1, !dbg !9788
  %270 = load i32, i32* %demod631, align 4, !dbg !9788
  %cmp632 = icmp eq i32 %270, 2, !dbg !9788
  br i1 %cmp632, label %cond.true634, label %cond.false637, !dbg !9788

cond.true634:                                     ; preds = %if.end629
  %271 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9788
  %272 = load i32, i32* %reg, align 4, !dbg !9788
  %conv635 = trunc i32 %272 to i8, !dbg !9788
  %call636 = call i32 @stv090x_write_reg(%struct.stv090x_state* %271, i32 62322, i8 zeroext %conv635) #9, !dbg !9788
  br label %cond.end640, !dbg !9788

cond.false637:                                    ; preds = %if.end629
  %273 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9788
  %274 = load i32, i32* %reg, align 4, !dbg !9788
  %conv638 = trunc i32 %274 to i8, !dbg !9788
  %call639 = call i32 @stv090x_write_reg(%struct.stv090x_state* %273, i32 62834, i8 zeroext %conv638) #9, !dbg !9788
  br label %cond.end640, !dbg !9788

cond.end640:                                      ; preds = %cond.false637, %cond.true634
  %cond641 = phi i32 [ %call636, %cond.true634 ], [ %call639, %cond.false637 ], !dbg !9788
  %cmp642 = icmp slt i32 %cond641, 0, !dbg !9790
  br i1 %cmp642, label %if.then644, label %if.end645, !dbg !9791

if.then644:                                       ; preds = %cond.end640
  br label %err, !dbg !9792

if.end645:                                        ; preds = %cond.end640
  br label %if.end646, !dbg !9793

if.end646:                                        ; preds = %if.end645, %if.then581
  %275 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9794
  %276 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9795
  %FecTimeout = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %276, i32 0, i32 23, !dbg !9796
  %277 = load i32, i32* %FecTimeout, align 4, !dbg !9796
  %278 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9797
  %FecTimeout647 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %278, i32 0, i32 23, !dbg !9798
  %279 = load i32, i32* %FecTimeout647, align 4, !dbg !9798
  %call648 = call i32 @stv090x_get_lock(%struct.stv090x_state* %275, i32 %277, i32 %279) #9, !dbg !9799
  store i32 %call648, i32* %lock, align 4, !dbg !9800
  %280 = load i32, i32* %lock, align 4, !dbg !9801
  %tobool649 = icmp ne i32 %280, 0, !dbg !9801
  br i1 %tobool649, label %if.then650, label %if.else760, !dbg !9803

if.then650:                                       ; preds = %if.end646
  %281 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9804
  %delsys = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %281, i32 0, i32 8, !dbg !9807
  %282 = load i32, i32* %delsys, align 8, !dbg !9807
  %cmp651 = icmp eq i32 %282, 2, !dbg !9808
  br i1 %cmp651, label %if.then653, label %if.else719, !dbg !9809

if.then653:                                       ; preds = %if.then650
  %283 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9810
  %call654 = call i32 @stv090x_set_s2rolloff(%struct.stv090x_state* %283) #9, !dbg !9812
  %284 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9813
  %demod655 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %284, i32 0, i32 1, !dbg !9813
  %285 = load i32, i32* %demod655, align 4, !dbg !9813
  %cmp656 = icmp eq i32 %285, 2, !dbg !9813
  br i1 %cmp656, label %cond.true658, label %cond.false660, !dbg !9813

cond.true658:                                     ; preds = %if.then653
  %286 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9813
  %call659 = call i32 @stv090x_read_reg(%struct.stv090x_state* %286, i32 62289) #9, !dbg !9813
  br label %cond.end662, !dbg !9813

cond.false660:                                    ; preds = %if.then653
  %287 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9813
  %call661 = call i32 @stv090x_read_reg(%struct.stv090x_state* %287, i32 62801) #9, !dbg !9813
  br label %cond.end662, !dbg !9813

cond.end662:                                      ; preds = %cond.false660, %cond.true658
  %cond663 = phi i32 [ %call659, %cond.true658 ], [ %call661, %cond.false660 ], !dbg !9813
  store i32 %cond663, i32* %reg, align 4, !dbg !9814
  %288 = load i32, i32* %reg, align 4, !dbg !9815
  %and664 = and i32 %288, -65, !dbg !9815
  %or665 = or i32 %and664, 64, !dbg !9815
  store i32 %or665, i32* %reg, align 4, !dbg !9815
  %289 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9816
  %demod666 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %289, i32 0, i32 1, !dbg !9816
  %290 = load i32, i32* %demod666, align 4, !dbg !9816
  %cmp667 = icmp eq i32 %290, 2, !dbg !9816
  br i1 %cmp667, label %cond.true669, label %cond.false672, !dbg !9816

cond.true669:                                     ; preds = %cond.end662
  %291 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9816
  %292 = load i32, i32* %reg, align 4, !dbg !9816
  %conv670 = trunc i32 %292 to i8, !dbg !9816
  %call671 = call i32 @stv090x_write_reg(%struct.stv090x_state* %291, i32 62289, i8 zeroext %conv670) #9, !dbg !9816
  br label %cond.end675, !dbg !9816

cond.false672:                                    ; preds = %cond.end662
  %293 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9816
  %294 = load i32, i32* %reg, align 4, !dbg !9816
  %conv673 = trunc i32 %294 to i8, !dbg !9816
  %call674 = call i32 @stv090x_write_reg(%struct.stv090x_state* %293, i32 62801, i8 zeroext %conv673) #9, !dbg !9816
  br label %cond.end675, !dbg !9816

cond.end675:                                      ; preds = %cond.false672, %cond.true669
  %cond676 = phi i32 [ %call671, %cond.true669 ], [ %call674, %cond.false672 ], !dbg !9816
  %cmp677 = icmp slt i32 %cond676, 0, !dbg !9818
  br i1 %cmp677, label %if.then679, label %if.end680, !dbg !9819

if.then679:                                       ; preds = %cond.end675
  br label %err, !dbg !9820

if.end680:                                        ; preds = %cond.end675
  %295 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9821
  %demod681 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %295, i32 0, i32 1, !dbg !9821
  %296 = load i32, i32* %demod681, align 4, !dbg !9821
  %cmp682 = icmp eq i32 %296, 2, !dbg !9821
  br i1 %cmp682, label %cond.true684, label %cond.false686, !dbg !9821

cond.true684:                                     ; preds = %if.end680
  %297 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9821
  %call685 = call i32 @stv090x_read_reg(%struct.stv090x_state* %297, i32 62289) #9, !dbg !9821
  br label %cond.end688, !dbg !9821

cond.false686:                                    ; preds = %if.end680
  %298 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9821
  %call687 = call i32 @stv090x_read_reg(%struct.stv090x_state* %298, i32 62801) #9, !dbg !9821
  br label %cond.end688, !dbg !9821

cond.end688:                                      ; preds = %cond.false686, %cond.true684
  %cond689 = phi i32 [ %call685, %cond.true684 ], [ %call687, %cond.false686 ], !dbg !9821
  store i32 %cond689, i32* %reg, align 4, !dbg !9822
  %299 = load i32, i32* %reg, align 4, !dbg !9823
  %and690 = and i32 %299, -65, !dbg !9823
  store i32 %and690, i32* %reg, align 4, !dbg !9823
  %300 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9824
  %demod691 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %300, i32 0, i32 1, !dbg !9824
  %301 = load i32, i32* %demod691, align 4, !dbg !9824
  %cmp692 = icmp eq i32 %301, 2, !dbg !9824
  br i1 %cmp692, label %cond.true694, label %cond.false697, !dbg !9824

cond.true694:                                     ; preds = %cond.end688
  %302 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9824
  %303 = load i32, i32* %reg, align 4, !dbg !9824
  %conv695 = trunc i32 %303 to i8, !dbg !9824
  %call696 = call i32 @stv090x_write_reg(%struct.stv090x_state* %302, i32 62289, i8 zeroext %conv695) #9, !dbg !9824
  br label %cond.end700, !dbg !9824

cond.false697:                                    ; preds = %cond.end688
  %304 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9824
  %305 = load i32, i32* %reg, align 4, !dbg !9824
  %conv698 = trunc i32 %305 to i8, !dbg !9824
  %call699 = call i32 @stv090x_write_reg(%struct.stv090x_state* %304, i32 62801, i8 zeroext %conv698) #9, !dbg !9824
  br label %cond.end700, !dbg !9824

cond.end700:                                      ; preds = %cond.false697, %cond.true694
  %cond701 = phi i32 [ %call696, %cond.true694 ], [ %call699, %cond.false697 ], !dbg !9824
  %cmp702 = icmp slt i32 %cond701, 0, !dbg !9826
  br i1 %cmp702, label %if.then704, label %if.end705, !dbg !9827

if.then704:                                       ; preds = %cond.end700
  br label %err, !dbg !9828

if.end705:                                        ; preds = %cond.end700
  %306 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9829
  %demod706 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %306, i32 0, i32 1, !dbg !9829
  %307 = load i32, i32* %demod706, align 4, !dbg !9829
  %cmp707 = icmp eq i32 %307, 2, !dbg !9829
  br i1 %cmp707, label %cond.true709, label %cond.false711, !dbg !9829

cond.true709:                                     ; preds = %if.end705
  %308 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9829
  %call710 = call i32 @stv090x_write_reg(%struct.stv090x_state* %308, i32 62360, i8 zeroext 103) #9, !dbg !9829
  br label %cond.end713, !dbg !9829

cond.false711:                                    ; preds = %if.end705
  %309 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9829
  %call712 = call i32 @stv090x_write_reg(%struct.stv090x_state* %309, i32 62872, i8 zeroext 103) #9, !dbg !9829
  br label %cond.end713, !dbg !9829

cond.end713:                                      ; preds = %cond.false711, %cond.true709
  %cond714 = phi i32 [ %call710, %cond.true709 ], [ %call712, %cond.false711 ], !dbg !9829
  %cmp715 = icmp slt i32 %cond714, 0, !dbg !9831
  br i1 %cmp715, label %if.then717, label %if.end718, !dbg !9832

if.then717:                                       ; preds = %cond.end713
  br label %err, !dbg !9833

if.end718:                                        ; preds = %cond.end713
  br label %if.end733, !dbg !9834

if.else719:                                       ; preds = %if.then650
  %310 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9835
  %demod720 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %310, i32 0, i32 1, !dbg !9835
  %311 = load i32, i32* %demod720, align 4, !dbg !9835
  %cmp721 = icmp eq i32 %311, 2, !dbg !9835
  br i1 %cmp721, label %cond.true723, label %cond.false725, !dbg !9835

cond.true723:                                     ; preds = %if.else719
  %312 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9835
  %call724 = call i32 @stv090x_write_reg(%struct.stv090x_state* %312, i32 62360, i8 zeroext 117) #9, !dbg !9835
  br label %cond.end727, !dbg !9835

cond.false725:                                    ; preds = %if.else719
  %313 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9835
  %call726 = call i32 @stv090x_write_reg(%struct.stv090x_state* %313, i32 62872, i8 zeroext 117) #9, !dbg !9835
  br label %cond.end727, !dbg !9835

cond.end727:                                      ; preds = %cond.false725, %cond.true723
  %cond728 = phi i32 [ %call724, %cond.true723 ], [ %call726, %cond.false725 ], !dbg !9835
  %cmp729 = icmp slt i32 %cond728, 0, !dbg !9838
  br i1 %cmp729, label %if.then731, label %if.end732, !dbg !9839

if.then731:                                       ; preds = %cond.end727
  br label %err, !dbg !9840

if.end732:                                        ; preds = %cond.end727
  br label %if.end733

if.end733:                                        ; preds = %if.end732, %if.end718
  %314 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9841
  %demod734 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %314, i32 0, i32 1, !dbg !9841
  %315 = load i32, i32* %demod734, align 4, !dbg !9841
  %cmp735 = icmp eq i32 %315, 2, !dbg !9841
  br i1 %cmp735, label %cond.true737, label %cond.false739, !dbg !9841

cond.true737:                                     ; preds = %if.end733
  %316 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9841
  %call738 = call i32 @stv090x_write_reg(%struct.stv090x_state* %316, i32 62376, i8 zeroext 0) #9, !dbg !9841
  br label %cond.end741, !dbg !9841

cond.false739:                                    ; preds = %if.end733
  %317 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9841
  %call740 = call i32 @stv090x_write_reg(%struct.stv090x_state* %317, i32 62888, i8 zeroext 0) #9, !dbg !9841
  br label %cond.end741, !dbg !9841

cond.end741:                                      ; preds = %cond.false739, %cond.true737
  %cond742 = phi i32 [ %call738, %cond.true737 ], [ %call740, %cond.false739 ], !dbg !9841
  %cmp743 = icmp slt i32 %cond742, 0, !dbg !9843
  br i1 %cmp743, label %if.then745, label %if.end746, !dbg !9844

if.then745:                                       ; preds = %cond.end741
  br label %err, !dbg !9845

if.end746:                                        ; preds = %cond.end741
  %318 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9846
  %demod747 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %318, i32 0, i32 1, !dbg !9846
  %319 = load i32, i32* %demod747, align 4, !dbg !9846
  %cmp748 = icmp eq i32 %319, 2, !dbg !9846
  br i1 %cmp748, label %cond.true750, label %cond.false752, !dbg !9846

cond.true750:                                     ; preds = %if.end746
  %320 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9846
  %call751 = call i32 @stv090x_write_reg(%struct.stv090x_state* %320, i32 62364, i8 zeroext -63) #9, !dbg !9846
  br label %cond.end754, !dbg !9846

cond.false752:                                    ; preds = %if.end746
  %321 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9846
  %call753 = call i32 @stv090x_write_reg(%struct.stv090x_state* %321, i32 62876, i8 zeroext -63) #9, !dbg !9846
  br label %cond.end754, !dbg !9846

cond.end754:                                      ; preds = %cond.false752, %cond.true750
  %cond755 = phi i32 [ %call751, %cond.true750 ], [ %call753, %cond.false752 ], !dbg !9846
  %cmp756 = icmp slt i32 %cond755, 0, !dbg !9848
  br i1 %cmp756, label %if.then758, label %if.end759, !dbg !9849

if.then758:                                       ; preds = %cond.end754
  br label %err, !dbg !9850

if.end759:                                        ; preds = %cond.end754
  br label %if.end762, !dbg !9851

if.else760:                                       ; preds = %if.end646
  store i32 2, i32* %signal_state, align 4, !dbg !9852
  %322 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9854
  %call761 = call i32 @stv090x_chk_signal(%struct.stv090x_state* %322) #9, !dbg !9855
  br label %if.end762

if.end762:                                        ; preds = %if.else760, %if.end759
  br label %if.end763, !dbg !9856

if.end763:                                        ; preds = %if.end762, %land.lhs.true578, %if.end576
  %323 = load i32, i32* %signal_state, align 4, !dbg !9857
  store i32 %323, i32* %retval, align 4, !dbg !9858
  br label %return, !dbg !9858

err_gateoff:                                      ; preds = %if.then306, %if.then285, %if.then273, %if.then262
  call void @llvm.dbg.label(metadata !9859), !dbg !9860
  %324 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9861
  %call764 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %324, i32 0) #9, !dbg !9862
  br label %err, !dbg !9862

err:                                              ; preds = %err_gateoff, %if.then758, %if.then745, %if.then731, %if.then717, %if.then704, %if.then679, %if.then644, %if.then628, %if.then611, %if.then529, %if.then520, %if.then515, %if.then311, %if.then299, %if.then291, %if.then248, %if.then236, %if.then228, %if.then221, %if.then215, %if.then182, %if.then164, %if.then150, %if.then136, %if.then119, %if.then106, %if.then92, %if.then87, %if.then74, %if.then56, %if.then43, %if.then24, %if.then
  call void @llvm.dbg.label(metadata !9863), !dbg !9864
  br label %do.body765, !dbg !9865

do.body765:                                       ; preds = %err
  %325 = load i32, i32* @verbose, align 4, !dbg !9866
  %cmp766 = icmp ugt i32 %325, 0, !dbg !9866
  br i1 %cmp766, label %land.lhs.true768, label %if.else773, !dbg !9866

land.lhs.true768:                                 ; preds = %do.body765
  %326 = load i32, i32* @verbose, align 4, !dbg !9866
  %cmp769 = icmp ugt i32 %326, 0, !dbg !9866
  br i1 %cmp769, label %if.then771, label %if.else773, !dbg !9871

if.then771:                                       ; preds = %land.lhs.true768
  %call772 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9866
  br label %if.end800, !dbg !9866

if.else773:                                       ; preds = %land.lhs.true768, %do.body765
  %327 = load i32, i32* @verbose, align 4, !dbg !9872
  %cmp774 = icmp ugt i32 %327, 1, !dbg !9872
  br i1 %cmp774, label %land.lhs.true776, label %if.else781, !dbg !9872

land.lhs.true776:                                 ; preds = %if.else773
  %328 = load i32, i32* @verbose, align 4, !dbg !9872
  %cmp777 = icmp ugt i32 %328, 0, !dbg !9872
  br i1 %cmp777, label %if.then779, label %if.else781, !dbg !9866

if.then779:                                       ; preds = %land.lhs.true776
  %call780 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9872
  br label %if.end799, !dbg !9872

if.else781:                                       ; preds = %land.lhs.true776, %if.else773
  %329 = load i32, i32* @verbose, align 4, !dbg !9874
  %cmp782 = icmp ugt i32 %329, 2, !dbg !9874
  br i1 %cmp782, label %land.lhs.true784, label %if.else789, !dbg !9874

land.lhs.true784:                                 ; preds = %if.else781
  %330 = load i32, i32* @verbose, align 4, !dbg !9874
  %cmp785 = icmp ugt i32 %330, 0, !dbg !9874
  br i1 %cmp785, label %if.then787, label %if.else789, !dbg !9872

if.then787:                                       ; preds = %land.lhs.true784
  %call788 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9874
  br label %if.end798, !dbg !9874

if.else789:                                       ; preds = %land.lhs.true784, %if.else781
  %331 = load i32, i32* @verbose, align 4, !dbg !9876
  %cmp790 = icmp ugt i32 %331, 3, !dbg !9876
  br i1 %cmp790, label %land.lhs.true792, label %if.end797, !dbg !9876

land.lhs.true792:                                 ; preds = %if.else789
  %332 = load i32, i32* @verbose, align 4, !dbg !9876
  %cmp793 = icmp ugt i32 %332, 0, !dbg !9876
  br i1 %cmp793, label %if.then795, label %if.end797, !dbg !9874

if.then795:                                       ; preds = %land.lhs.true792
  %call796 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__func__.stv090x_algo, i64 0, i64 0)) #13, !dbg !9876
  br label %if.end797, !dbg !9876

if.end797:                                        ; preds = %if.then795, %land.lhs.true792, %if.else789
  br label %if.end798

if.end798:                                        ; preds = %if.end797, %if.then787
  br label %if.end799

if.end799:                                        ; preds = %if.end798, %if.then779
  br label %if.end800

if.end800:                                        ; preds = %if.end799, %if.then771
  br label %do.end801, !dbg !9878

do.end801:                                        ; preds = %if.end800
  store i32 -1, i32* %retval, align 4, !dbg !9879
  br label %return, !dbg !9879

return:                                           ; preds = %do.end801, %if.end763, %if.then535, %do.end386
  %333 = load i32, i32* %retval, align 4, !dbg !9880
  ret i32 %333, !dbg !9880
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @stv090x_get_lock_tmg(%struct.stv090x_state* %state) #0 !dbg !9881 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !9884, metadata !DIExpression()), !dbg !9885
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9886
  %algo = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 17, !dbg !9887
  %1 = load i32, i32* %algo, align 4, !dbg !9887
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb35
    i32 2, label %sw.bb35
  ], !dbg !9888

sw.bb:                                            ; preds = %entry
  br label %do.body, !dbg !9889

do.body:                                          ; preds = %sw.bb
  %2 = load i32, i32* @verbose, align 4, !dbg !9891
  %cmp = icmp ugt i32 %2, 0, !dbg !9891
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !9891

land.lhs.true:                                    ; preds = %do.body
  %3 = load i32, i32* @verbose, align 4, !dbg !9891
  %cmp1 = icmp ugt i32 %3, 3, !dbg !9891
  br i1 %cmp1, label %if.then, label %if.else, !dbg !9896

if.then:                                          ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.105, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9891
  br label %if.end21, !dbg !9891

if.else:                                          ; preds = %land.lhs.true, %do.body
  %4 = load i32, i32* @verbose, align 4, !dbg !9897
  %cmp2 = icmp ugt i32 %4, 1, !dbg !9897
  br i1 %cmp2, label %land.lhs.true3, label %if.else7, !dbg !9897

land.lhs.true3:                                   ; preds = %if.else
  %5 = load i32, i32* @verbose, align 4, !dbg !9897
  %cmp4 = icmp ugt i32 %5, 3, !dbg !9897
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !9891

if.then5:                                         ; preds = %land.lhs.true3
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9897
  br label %if.end20, !dbg !9897

if.else7:                                         ; preds = %land.lhs.true3, %if.else
  %6 = load i32, i32* @verbose, align 4, !dbg !9899
  %cmp8 = icmp ugt i32 %6, 2, !dbg !9899
  br i1 %cmp8, label %land.lhs.true9, label %if.else13, !dbg !9899

land.lhs.true9:                                   ; preds = %if.else7
  %7 = load i32, i32* @verbose, align 4, !dbg !9899
  %cmp10 = icmp ugt i32 %7, 3, !dbg !9899
  br i1 %cmp10, label %if.then11, label %if.else13, !dbg !9897

if.then11:                                        ; preds = %land.lhs.true9
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9899
  br label %if.end19, !dbg !9899

if.else13:                                        ; preds = %land.lhs.true9, %if.else7
  %8 = load i32, i32* @verbose, align 4, !dbg !9901
  %cmp14 = icmp ugt i32 %8, 3, !dbg !9901
  br i1 %cmp14, label %land.lhs.true15, label %if.end, !dbg !9901

land.lhs.true15:                                  ; preds = %if.else13
  %9 = load i32, i32* @verbose, align 4, !dbg !9901
  %cmp16 = icmp ugt i32 %9, 3, !dbg !9901
  br i1 %cmp16, label %if.then17, label %if.end, !dbg !9899

if.then17:                                        ; preds = %land.lhs.true15
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9901
  br label %if.end, !dbg !9901

if.end:                                           ; preds = %if.then17, %land.lhs.true15, %if.else13
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then11
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then5
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then
  br label %do.end, !dbg !9903

do.end:                                           ; preds = %if.end21
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9904
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 19, !dbg !9906
  %11 = load i32, i32* %srate, align 4, !dbg !9906
  %cmp22 = icmp ule i32 %11, 1500000, !dbg !9907
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !9908

if.then23:                                        ; preds = %do.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9909
  %DemodTimeout = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 22, !dbg !9911
  store i32 1500, i32* %DemodTimeout, align 8, !dbg !9912
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9913
  %FecTimeout = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 23, !dbg !9914
  store i32 400, i32* %FecTimeout, align 4, !dbg !9915
  br label %if.end34, !dbg !9916

if.else24:                                        ; preds = %do.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9917
  %srate25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 19, !dbg !9919
  %15 = load i32, i32* %srate25, align 4, !dbg !9919
  %cmp26 = icmp ule i32 %15, 5000000, !dbg !9920
  br i1 %cmp26, label %if.then27, label %if.else30, !dbg !9921

if.then27:                                        ; preds = %if.else24
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9922
  %DemodTimeout28 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 22, !dbg !9924
  store i32 1000, i32* %DemodTimeout28, align 8, !dbg !9925
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9926
  %FecTimeout29 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 23, !dbg !9927
  store i32 300, i32* %FecTimeout29, align 4, !dbg !9928
  br label %if.end33, !dbg !9929

if.else30:                                        ; preds = %if.else24
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9930
  %DemodTimeout31 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 22, !dbg !9932
  store i32 700, i32* %DemodTimeout31, align 8, !dbg !9933
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9934
  %FecTimeout32 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 23, !dbg !9935
  store i32 100, i32* %FecTimeout32, align 4, !dbg !9936
  br label %if.end33

if.end33:                                         ; preds = %if.else30, %if.then27
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then23
  br label %sw.epilog, !dbg !9937

sw.bb35:                                          ; preds = %entry, %entry
  br label %sw.default, !dbg !9937

sw.default:                                       ; preds = %entry, %sw.bb35
  br label %do.body36, !dbg !9938

do.body36:                                        ; preds = %sw.default
  %20 = load i32, i32* @verbose, align 4, !dbg !9939
  %cmp37 = icmp ugt i32 %20, 0, !dbg !9939
  br i1 %cmp37, label %land.lhs.true38, label %if.else42, !dbg !9939

land.lhs.true38:                                  ; preds = %do.body36
  %21 = load i32, i32* @verbose, align 4, !dbg !9939
  %cmp39 = icmp ugt i32 %21, 3, !dbg !9939
  br i1 %cmp39, label %if.then40, label %if.else42, !dbg !9944

if.then40:                                        ; preds = %land.lhs.true38
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.109, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9939
  br label %if.end63, !dbg !9939

if.else42:                                        ; preds = %land.lhs.true38, %do.body36
  %22 = load i32, i32* @verbose, align 4, !dbg !9945
  %cmp43 = icmp ugt i32 %22, 1, !dbg !9945
  br i1 %cmp43, label %land.lhs.true44, label %if.else48, !dbg !9945

land.lhs.true44:                                  ; preds = %if.else42
  %23 = load i32, i32* @verbose, align 4, !dbg !9945
  %cmp45 = icmp ugt i32 %23, 3, !dbg !9945
  br i1 %cmp45, label %if.then46, label %if.else48, !dbg !9939

if.then46:                                        ; preds = %land.lhs.true44
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9945
  br label %if.end62, !dbg !9945

if.else48:                                        ; preds = %land.lhs.true44, %if.else42
  %24 = load i32, i32* @verbose, align 4, !dbg !9947
  %cmp49 = icmp ugt i32 %24, 2, !dbg !9947
  br i1 %cmp49, label %land.lhs.true50, label %if.else54, !dbg !9947

land.lhs.true50:                                  ; preds = %if.else48
  %25 = load i32, i32* @verbose, align 4, !dbg !9947
  %cmp51 = icmp ugt i32 %25, 3, !dbg !9947
  br i1 %cmp51, label %if.then52, label %if.else54, !dbg !9945

if.then52:                                        ; preds = %land.lhs.true50
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9947
  br label %if.end61, !dbg !9947

if.else54:                                        ; preds = %land.lhs.true50, %if.else48
  %26 = load i32, i32* @verbose, align 4, !dbg !9949
  %cmp55 = icmp ugt i32 %26, 3, !dbg !9949
  br i1 %cmp55, label %land.lhs.true56, label %if.end60, !dbg !9949

land.lhs.true56:                                  ; preds = %if.else54
  %27 = load i32, i32* @verbose, align 4, !dbg !9949
  %cmp57 = icmp ugt i32 %27, 3, !dbg !9949
  br i1 %cmp57, label %if.then58, label %if.end60, !dbg !9947

if.then58:                                        ; preds = %land.lhs.true56
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_lock_tmg, i64 0, i64 0)) #13, !dbg !9949
  br label %if.end60, !dbg !9949

if.end60:                                         ; preds = %if.then58, %land.lhs.true56, %if.else54
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then52
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then46
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then40
  br label %do.end64, !dbg !9951

do.end64:                                         ; preds = %if.end63
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9952
  %srate65 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 19, !dbg !9954
  %29 = load i32, i32* %srate65, align 4, !dbg !9954
  %cmp66 = icmp ule i32 %29, 1000000, !dbg !9955
  br i1 %cmp66, label %if.then67, label %if.else70, !dbg !9956

if.then67:                                        ; preds = %do.end64
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9957
  %DemodTimeout68 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 22, !dbg !9959
  store i32 4500, i32* %DemodTimeout68, align 8, !dbg !9960
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9961
  %FecTimeout69 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 23, !dbg !9962
  store i32 1700, i32* %FecTimeout69, align 4, !dbg !9963
  br label %if.end101, !dbg !9964

if.else70:                                        ; preds = %do.end64
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9965
  %srate71 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 19, !dbg !9967
  %33 = load i32, i32* %srate71, align 4, !dbg !9967
  %cmp72 = icmp ule i32 %33, 2000000, !dbg !9968
  br i1 %cmp72, label %if.then73, label %if.else76, !dbg !9969

if.then73:                                        ; preds = %if.else70
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9970
  %DemodTimeout74 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %34, i32 0, i32 22, !dbg !9972
  store i32 2500, i32* %DemodTimeout74, align 8, !dbg !9973
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9974
  %FecTimeout75 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 23, !dbg !9975
  store i32 1100, i32* %FecTimeout75, align 4, !dbg !9976
  br label %if.end100, !dbg !9977

if.else76:                                        ; preds = %if.else70
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9978
  %srate77 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 19, !dbg !9980
  %37 = load i32, i32* %srate77, align 4, !dbg !9980
  %cmp78 = icmp ule i32 %37, 5000000, !dbg !9981
  br i1 %cmp78, label %if.then79, label %if.else82, !dbg !9982

if.then79:                                        ; preds = %if.else76
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9983
  %DemodTimeout80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 22, !dbg !9985
  store i32 1000, i32* %DemodTimeout80, align 8, !dbg !9986
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9987
  %FecTimeout81 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 23, !dbg !9988
  store i32 550, i32* %FecTimeout81, align 4, !dbg !9989
  br label %if.end99, !dbg !9990

if.else82:                                        ; preds = %if.else76
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9991
  %srate83 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 19, !dbg !9993
  %41 = load i32, i32* %srate83, align 4, !dbg !9993
  %cmp84 = icmp ule i32 %41, 10000000, !dbg !9994
  br i1 %cmp84, label %if.then85, label %if.else88, !dbg !9995

if.then85:                                        ; preds = %if.else82
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !9996
  %DemodTimeout86 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 22, !dbg !9998
  store i32 700, i32* %DemodTimeout86, align 8, !dbg !9999
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10000
  %FecTimeout87 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %43, i32 0, i32 23, !dbg !10001
  store i32 250, i32* %FecTimeout87, align 4, !dbg !10002
  br label %if.end98, !dbg !10003

if.else88:                                        ; preds = %if.else82
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10004
  %srate89 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 19, !dbg !10006
  %45 = load i32, i32* %srate89, align 4, !dbg !10006
  %cmp90 = icmp ule i32 %45, 20000000, !dbg !10007
  br i1 %cmp90, label %if.then91, label %if.else94, !dbg !10008

if.then91:                                        ; preds = %if.else88
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10009
  %DemodTimeout92 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %46, i32 0, i32 22, !dbg !10011
  store i32 400, i32* %DemodTimeout92, align 8, !dbg !10012
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10013
  %FecTimeout93 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %47, i32 0, i32 23, !dbg !10014
  store i32 130, i32* %FecTimeout93, align 4, !dbg !10015
  br label %if.end97, !dbg !10016

if.else94:                                        ; preds = %if.else88
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10017
  %DemodTimeout95 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 22, !dbg !10019
  store i32 300, i32* %DemodTimeout95, align 8, !dbg !10020
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10021
  %FecTimeout96 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %49, i32 0, i32 23, !dbg !10022
  store i32 100, i32* %FecTimeout96, align 4, !dbg !10023
  br label %if.end97

if.end97:                                         ; preds = %if.else94, %if.then91
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then85
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then79
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then73
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then67
  br label %sw.epilog, !dbg !10024

sw.epilog:                                        ; preds = %if.end101, %if.end34
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10025
  %algo102 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 17, !dbg !10027
  %51 = load i32, i32* %algo102, align 4, !dbg !10027
  %cmp103 = icmp eq i32 %51, 2, !dbg !10028
  br i1 %cmp103, label %if.then104, label %if.end106, !dbg !10029

if.then104:                                       ; preds = %sw.epilog
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10030
  %DemodTimeout105 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 22, !dbg !10031
  %53 = load i32, i32* %DemodTimeout105, align 8, !dbg !10032
  %div = sdiv i32 %53, 2, !dbg !10032
  store i32 %div, i32* %DemodTimeout105, align 8, !dbg !10032
  br label %if.end106, !dbg !10030

if.end106:                                        ; preds = %if.then104, %sw.epilog
  ret void, !dbg !10033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_srate(%struct.stv090x_state* %state, i32 %srate) #0 !dbg !10034 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %srate.addr = alloca i32, align 4
  %sym = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !10035, metadata !DIExpression()), !dbg !10036
  store i32 %srate, i32* %srate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srate.addr, metadata !10037, metadata !DIExpression()), !dbg !10038
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !10039, metadata !DIExpression()), !dbg !10040
  %0 = load i32, i32* %srate.addr, align 4, !dbg !10041
  %cmp = icmp ugt i32 %0, 60000000, !dbg !10043
  br i1 %cmp, label %if.then, label %if.else, !dbg !10044

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %srate.addr, align 4, !dbg !10045
  %shl = shl i32 %1, 4, !dbg !10047
  store i32 %shl, i32* %sym, align 4, !dbg !10048
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10049
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 3, !dbg !10050
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !10050
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 4, !dbg !10051
  %4 = load i32, i32* %mclk, align 8, !dbg !10051
  %shr = ashr i32 %4, 12, !dbg !10052
  %5 = load i32, i32* %sym, align 4, !dbg !10053
  %div = udiv i32 %5, %shr, !dbg !10053
  store i32 %div, i32* %sym, align 4, !dbg !10053
  br label %if.end14, !dbg !10054

if.else:                                          ; preds = %entry
  %6 = load i32, i32* %srate.addr, align 4, !dbg !10055
  %cmp1 = icmp ugt i32 %6, 6000000, !dbg !10057
  br i1 %cmp1, label %if.then2, label %if.else8, !dbg !10058

if.then2:                                         ; preds = %if.else
  %7 = load i32, i32* %srate.addr, align 4, !dbg !10059
  %shl3 = shl i32 %7, 6, !dbg !10061
  store i32 %shl3, i32* %sym, align 4, !dbg !10062
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10063
  %internal4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 3, !dbg !10064
  %9 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal4, align 8, !dbg !10064
  %mclk5 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %9, i32 0, i32 4, !dbg !10065
  %10 = load i32, i32* %mclk5, align 8, !dbg !10065
  %shr6 = ashr i32 %10, 10, !dbg !10066
  %11 = load i32, i32* %sym, align 4, !dbg !10067
  %div7 = udiv i32 %11, %shr6, !dbg !10067
  store i32 %div7, i32* %sym, align 4, !dbg !10067
  br label %if.end, !dbg !10068

if.else8:                                         ; preds = %if.else
  %12 = load i32, i32* %srate.addr, align 4, !dbg !10069
  %shl9 = shl i32 %12, 9, !dbg !10071
  store i32 %shl9, i32* %sym, align 4, !dbg !10072
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10073
  %internal10 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 3, !dbg !10074
  %14 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal10, align 8, !dbg !10074
  %mclk11 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %14, i32 0, i32 4, !dbg !10075
  %15 = load i32, i32* %mclk11, align 8, !dbg !10075
  %shr12 = ashr i32 %15, 7, !dbg !10076
  %16 = load i32, i32* %sym, align 4, !dbg !10077
  %div13 = udiv i32 %16, %shr12, !dbg !10077
  store i32 %div13, i32* %sym, align 4, !dbg !10077
  br label %if.end

if.end:                                           ; preds = %if.else8, %if.then2
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10078
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !10078
  %18 = load i32, i32* %demod, align 4, !dbg !10078
  %cmp15 = icmp eq i32 %18, 2, !dbg !10078
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !10078

cond.true:                                        ; preds = %if.end14
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10078
  %20 = load i32, i32* %sym, align 4, !dbg !10078
  %shr16 = lshr i32 %20, 8, !dbg !10078
  %and = and i32 %shr16, 127, !dbg !10078
  %conv = trunc i32 %and to i8, !dbg !10078
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62046, i8 zeroext %conv) #9, !dbg !10078
  br label %cond.end, !dbg !10078

cond.false:                                       ; preds = %if.end14
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10078
  %22 = load i32, i32* %sym, align 4, !dbg !10078
  %shr17 = lshr i32 %22, 8, !dbg !10078
  %and18 = and i32 %shr17, 127, !dbg !10078
  %conv19 = trunc i32 %and18 to i8, !dbg !10078
  %call20 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 62558, i8 zeroext %conv19) #9, !dbg !10078
  br label %cond.end, !dbg !10078

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call20, %cond.false ], !dbg !10078
  %cmp21 = icmp slt i32 %cond, 0, !dbg !10080
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !10081

if.then23:                                        ; preds = %cond.end
  br label %err, !dbg !10082

if.end24:                                         ; preds = %cond.end
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10083
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %23, i32 0, i32 1, !dbg !10083
  %24 = load i32, i32* %demod25, align 4, !dbg !10083
  %cmp26 = icmp eq i32 %24, 2, !dbg !10083
  br i1 %cmp26, label %cond.true28, label %cond.false32, !dbg !10083

cond.true28:                                      ; preds = %if.end24
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10083
  %26 = load i32, i32* %sym, align 4, !dbg !10083
  %and29 = and i32 %26, 255, !dbg !10083
  %conv30 = trunc i32 %and29 to i8, !dbg !10083
  %call31 = call i32 @stv090x_write_reg(%struct.stv090x_state* %25, i32 62047, i8 zeroext %conv30) #9, !dbg !10083
  br label %cond.end36, !dbg !10083

cond.false32:                                     ; preds = %if.end24
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10083
  %28 = load i32, i32* %sym, align 4, !dbg !10083
  %and33 = and i32 %28, 255, !dbg !10083
  %conv34 = trunc i32 %and33 to i8, !dbg !10083
  %call35 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62559, i8 zeroext %conv34) #9, !dbg !10083
  br label %cond.end36, !dbg !10083

cond.end36:                                       ; preds = %cond.false32, %cond.true28
  %cond37 = phi i32 [ %call31, %cond.true28 ], [ %call35, %cond.false32 ], !dbg !10083
  %cmp38 = icmp slt i32 %cond37, 0, !dbg !10085
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !10086

if.then40:                                        ; preds = %cond.end36
  br label %err, !dbg !10087

if.end41:                                         ; preds = %cond.end36
  store i32 0, i32* %retval, align 4, !dbg !10088
  br label %return, !dbg !10088

err:                                              ; preds = %if.then40, %if.then23
  call void @llvm.dbg.label(metadata !10089), !dbg !10090
  br label %do.body, !dbg !10091

do.body:                                          ; preds = %err
  %29 = load i32, i32* @verbose, align 4, !dbg !10092
  %cmp42 = icmp ugt i32 %29, 0, !dbg !10092
  br i1 %cmp42, label %land.lhs.true, label %if.else48, !dbg !10092

land.lhs.true:                                    ; preds = %do.body
  %30 = load i32, i32* @verbose, align 4, !dbg !10092
  %cmp44 = icmp ugt i32 %30, 0, !dbg !10092
  br i1 %cmp44, label %if.then46, label %if.else48, !dbg !10097

if.then46:                                        ; preds = %land.lhs.true
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_set_srate, i64 0, i64 0)) #13, !dbg !10092
  br label %if.end75, !dbg !10092

if.else48:                                        ; preds = %land.lhs.true, %do.body
  %31 = load i32, i32* @verbose, align 4, !dbg !10098
  %cmp49 = icmp ugt i32 %31, 1, !dbg !10098
  br i1 %cmp49, label %land.lhs.true51, label %if.else56, !dbg !10098

land.lhs.true51:                                  ; preds = %if.else48
  %32 = load i32, i32* @verbose, align 4, !dbg !10098
  %cmp52 = icmp ugt i32 %32, 0, !dbg !10098
  br i1 %cmp52, label %if.then54, label %if.else56, !dbg !10092

if.then54:                                        ; preds = %land.lhs.true51
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_set_srate, i64 0, i64 0)) #13, !dbg !10098
  br label %if.end74, !dbg !10098

if.else56:                                        ; preds = %land.lhs.true51, %if.else48
  %33 = load i32, i32* @verbose, align 4, !dbg !10100
  %cmp57 = icmp ugt i32 %33, 2, !dbg !10100
  br i1 %cmp57, label %land.lhs.true59, label %if.else64, !dbg !10100

land.lhs.true59:                                  ; preds = %if.else56
  %34 = load i32, i32* @verbose, align 4, !dbg !10100
  %cmp60 = icmp ugt i32 %34, 0, !dbg !10100
  br i1 %cmp60, label %if.then62, label %if.else64, !dbg !10098

if.then62:                                        ; preds = %land.lhs.true59
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_set_srate, i64 0, i64 0)) #13, !dbg !10100
  br label %if.end73, !dbg !10100

if.else64:                                        ; preds = %land.lhs.true59, %if.else56
  %35 = load i32, i32* @verbose, align 4, !dbg !10102
  %cmp65 = icmp ugt i32 %35, 3, !dbg !10102
  br i1 %cmp65, label %land.lhs.true67, label %if.end72, !dbg !10102

land.lhs.true67:                                  ; preds = %if.else64
  %36 = load i32, i32* @verbose, align 4, !dbg !10102
  %cmp68 = icmp ugt i32 %36, 0, !dbg !10102
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !10100

if.then70:                                        ; preds = %land.lhs.true67
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__func__.stv090x_set_srate, i64 0, i64 0)) #13, !dbg !10102
  br label %if.end72, !dbg !10102

if.end72:                                         ; preds = %if.then70, %land.lhs.true67, %if.else64
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then62
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then54
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then46
  br label %do.end, !dbg !10104

do.end:                                           ; preds = %if.end75
  store i32 -1, i32* %retval, align 4, !dbg !10105
  br label %return, !dbg !10105

return:                                           ; preds = %do.end, %if.end41
  %37 = load i32, i32* %retval, align 4, !dbg !10106
  ret i32 %37, !dbg !10106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_car_width(i32 %srate, i32 %rolloff) #0 !dbg !10107 {
entry:
  %srate.addr = alloca i32, align 4
  %rolloff.addr = alloca i32, align 4
  %ro = alloca i32, align 4
  store i32 %srate, i32* %srate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srate.addr, metadata !10110, metadata !DIExpression()), !dbg !10111
  store i32 %rolloff, i32* %rolloff.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rolloff.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  call void @llvm.dbg.declare(metadata i32* %ro, metadata !10114, metadata !DIExpression()), !dbg !10115
  %0 = load i32, i32* %rolloff.addr, align 4, !dbg !10116
  switch i32 %0, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb1
    i32 0, label %sw.bb2
  ], !dbg !10117

sw.bb:                                            ; preds = %entry
  store i32 20, i32* %ro, align 4, !dbg !10118
  br label %sw.epilog, !dbg !10120

sw.bb1:                                           ; preds = %entry
  store i32 25, i32* %ro, align 4, !dbg !10121
  br label %sw.epilog, !dbg !10122

sw.bb2:                                           ; preds = %entry
  br label %sw.default, !dbg !10122

sw.default:                                       ; preds = %entry, %sw.bb2
  store i32 35, i32* %ro, align 4, !dbg !10123
  br label %sw.epilog, !dbg !10124

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  %1 = load i32, i32* %srate.addr, align 4, !dbg !10125
  %2 = load i32, i32* %srate.addr, align 4, !dbg !10126
  %3 = load i32, i32* %ro, align 4, !dbg !10127
  %mul = mul i32 %2, %3, !dbg !10128
  %div = udiv i32 %mul, 100, !dbg !10129
  %add = add i32 %1, %div, !dbg !10130
  ret i32 %add, !dbg !10131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_max_srate(%struct.stv090x_state* %state, i32 %clk, i32 %srate) #0 !dbg !10132 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %clk.addr = alloca i32, align 4
  %srate.addr = alloca i32, align 4
  %sym = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !10133, metadata !DIExpression()), !dbg !10134
  store i32 %clk, i32* %clk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk.addr, metadata !10135, metadata !DIExpression()), !dbg !10136
  store i32 %srate, i32* %srate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srate.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load i32, i32* %srate.addr, align 4, !dbg !10141
  %div = udiv i32 %0, 100, !dbg !10142
  %mul = mul i32 105, %div, !dbg !10143
  store i32 %mul, i32* %srate.addr, align 4, !dbg !10144
  %1 = load i32, i32* %srate.addr, align 4, !dbg !10145
  %cmp = icmp ugt i32 %1, 60000000, !dbg !10147
  br i1 %cmp, label %if.then, label %if.else, !dbg !10148

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %srate.addr, align 4, !dbg !10149
  %shl = shl i32 %2, 4, !dbg !10151
  store i32 %shl, i32* %sym, align 4, !dbg !10152
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10153
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 3, !dbg !10154
  %4 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !10154
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %4, i32 0, i32 4, !dbg !10155
  %5 = load i32, i32* %mclk, align 8, !dbg !10155
  %shr = ashr i32 %5, 12, !dbg !10156
  %6 = load i32, i32* %sym, align 4, !dbg !10157
  %div1 = udiv i32 %6, %shr, !dbg !10157
  store i32 %div1, i32* %sym, align 4, !dbg !10157
  br label %if.end15, !dbg !10158

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %srate.addr, align 4, !dbg !10159
  %cmp2 = icmp ugt i32 %7, 6000000, !dbg !10161
  br i1 %cmp2, label %if.then3, label %if.else9, !dbg !10162

if.then3:                                         ; preds = %if.else
  %8 = load i32, i32* %srate.addr, align 4, !dbg !10163
  %shl4 = shl i32 %8, 6, !dbg !10165
  store i32 %shl4, i32* %sym, align 4, !dbg !10166
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10167
  %internal5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 3, !dbg !10168
  %10 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal5, align 8, !dbg !10168
  %mclk6 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %10, i32 0, i32 4, !dbg !10169
  %11 = load i32, i32* %mclk6, align 8, !dbg !10169
  %shr7 = ashr i32 %11, 10, !dbg !10170
  %12 = load i32, i32* %sym, align 4, !dbg !10171
  %div8 = udiv i32 %12, %shr7, !dbg !10171
  store i32 %div8, i32* %sym, align 4, !dbg !10171
  br label %if.end, !dbg !10172

if.else9:                                         ; preds = %if.else
  %13 = load i32, i32* %srate.addr, align 4, !dbg !10173
  %shl10 = shl i32 %13, 9, !dbg !10175
  store i32 %shl10, i32* %sym, align 4, !dbg !10176
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10177
  %internal11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 3, !dbg !10178
  %15 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal11, align 8, !dbg !10178
  %mclk12 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %15, i32 0, i32 4, !dbg !10179
  %16 = load i32, i32* %mclk12, align 8, !dbg !10179
  %shr13 = ashr i32 %16, 7, !dbg !10180
  %17 = load i32, i32* %sym, align 4, !dbg !10181
  %div14 = udiv i32 %17, %shr13, !dbg !10181
  store i32 %div14, i32* %sym, align 4, !dbg !10181
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then3
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %18 = load i32, i32* %sym, align 4, !dbg !10182
  %cmp16 = icmp ult i32 %18, 32767, !dbg !10184
  br i1 %cmp16, label %if.then17, label %if.else45, !dbg !10185

if.then17:                                        ; preds = %if.end15
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10186
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 1, !dbg !10186
  %20 = load i32, i32* %demod, align 4, !dbg !10186
  %cmp18 = icmp eq i32 %20, 2, !dbg !10186
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !10186

cond.true:                                        ; preds = %if.then17
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10186
  %22 = load i32, i32* %sym, align 4, !dbg !10186
  %shr19 = lshr i32 %22, 8, !dbg !10186
  %and = and i32 %shr19, 127, !dbg !10186
  %conv = trunc i32 %and to i8, !dbg !10186
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 62048, i8 zeroext %conv) #9, !dbg !10186
  br label %cond.end, !dbg !10186

cond.false:                                       ; preds = %if.then17
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10186
  %24 = load i32, i32* %sym, align 4, !dbg !10186
  %shr20 = lshr i32 %24, 8, !dbg !10186
  %and21 = and i32 %shr20, 127, !dbg !10186
  %conv22 = trunc i32 %and21 to i8, !dbg !10186
  %call23 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62560, i8 zeroext %conv22) #9, !dbg !10186
  br label %cond.end, !dbg !10186

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call23, %cond.false ], !dbg !10186
  %cmp24 = icmp slt i32 %cond, 0, !dbg !10189
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !10190

if.then26:                                        ; preds = %cond.end
  br label %err, !dbg !10191

if.end27:                                         ; preds = %cond.end
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10192
  %demod28 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 1, !dbg !10192
  %26 = load i32, i32* %demod28, align 4, !dbg !10192
  %cmp29 = icmp eq i32 %26, 2, !dbg !10192
  br i1 %cmp29, label %cond.true31, label %cond.false35, !dbg !10192

cond.true31:                                      ; preds = %if.end27
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10192
  %28 = load i32, i32* %sym, align 4, !dbg !10192
  %and32 = and i32 %28, 255, !dbg !10192
  %conv33 = trunc i32 %and32 to i8, !dbg !10192
  %call34 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62049, i8 zeroext %conv33) #9, !dbg !10192
  br label %cond.end39, !dbg !10192

cond.false35:                                     ; preds = %if.end27
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10192
  %30 = load i32, i32* %sym, align 4, !dbg !10192
  %and36 = and i32 %30, 255, !dbg !10192
  %conv37 = trunc i32 %and36 to i8, !dbg !10192
  %call38 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62561, i8 zeroext %conv37) #9, !dbg !10192
  br label %cond.end39, !dbg !10192

cond.end39:                                       ; preds = %cond.false35, %cond.true31
  %cond40 = phi i32 [ %call34, %cond.true31 ], [ %call38, %cond.false35 ], !dbg !10192
  %cmp41 = icmp slt i32 %cond40, 0, !dbg !10194
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !10195

if.then43:                                        ; preds = %cond.end39
  br label %err, !dbg !10196

if.end44:                                         ; preds = %cond.end39
  br label %if.end72, !dbg !10197

if.else45:                                        ; preds = %if.end15
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10198
  %demod46 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 1, !dbg !10198
  %32 = load i32, i32* %demod46, align 4, !dbg !10198
  %cmp47 = icmp eq i32 %32, 2, !dbg !10198
  br i1 %cmp47, label %cond.true49, label %cond.false51, !dbg !10198

cond.true49:                                      ; preds = %if.else45
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10198
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %33, i32 62048, i8 zeroext 127) #9, !dbg !10198
  br label %cond.end53, !dbg !10198

cond.false51:                                     ; preds = %if.else45
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10198
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62560, i8 zeroext 127) #9, !dbg !10198
  br label %cond.end53, !dbg !10198

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !10198
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !10201
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !10202

if.then57:                                        ; preds = %cond.end53
  br label %err, !dbg !10203

if.end58:                                         ; preds = %cond.end53
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10204
  %demod59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 1, !dbg !10204
  %36 = load i32, i32* %demod59, align 4, !dbg !10204
  %cmp60 = icmp eq i32 %36, 2, !dbg !10204
  br i1 %cmp60, label %cond.true62, label %cond.false64, !dbg !10204

cond.true62:                                      ; preds = %if.end58
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10204
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %37, i32 62049, i8 zeroext -1) #9, !dbg !10204
  br label %cond.end66, !dbg !10204

cond.false64:                                     ; preds = %if.end58
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10204
  %call65 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62561, i8 zeroext -1) #9, !dbg !10204
  br label %cond.end66, !dbg !10204

cond.end66:                                       ; preds = %cond.false64, %cond.true62
  %cond67 = phi i32 [ %call63, %cond.true62 ], [ %call65, %cond.false64 ], !dbg !10204
  %cmp68 = icmp slt i32 %cond67, 0, !dbg !10206
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !10207

if.then70:                                        ; preds = %cond.end66
  br label %err, !dbg !10208

if.end71:                                         ; preds = %cond.end66
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end44
  store i32 0, i32* %retval, align 4, !dbg !10209
  br label %return, !dbg !10209

err:                                              ; preds = %if.then70, %if.then57, %if.then43, %if.then26
  call void @llvm.dbg.label(metadata !10210), !dbg !10211
  br label %do.body, !dbg !10212

do.body:                                          ; preds = %err
  %39 = load i32, i32* @verbose, align 4, !dbg !10213
  %cmp73 = icmp ugt i32 %39, 0, !dbg !10213
  br i1 %cmp73, label %land.lhs.true, label %if.else79, !dbg !10213

land.lhs.true:                                    ; preds = %do.body
  %40 = load i32, i32* @verbose, align 4, !dbg !10213
  %cmp75 = icmp ugt i32 %40, 0, !dbg !10213
  br i1 %cmp75, label %if.then77, label %if.else79, !dbg !10218

if.then77:                                        ; preds = %land.lhs.true
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_max_srate, i64 0, i64 0)) #13, !dbg !10213
  br label %if.end106, !dbg !10213

if.else79:                                        ; preds = %land.lhs.true, %do.body
  %41 = load i32, i32* @verbose, align 4, !dbg !10219
  %cmp80 = icmp ugt i32 %41, 1, !dbg !10219
  br i1 %cmp80, label %land.lhs.true82, label %if.else87, !dbg !10219

land.lhs.true82:                                  ; preds = %if.else79
  %42 = load i32, i32* @verbose, align 4, !dbg !10219
  %cmp83 = icmp ugt i32 %42, 0, !dbg !10219
  br i1 %cmp83, label %if.then85, label %if.else87, !dbg !10213

if.then85:                                        ; preds = %land.lhs.true82
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_max_srate, i64 0, i64 0)) #13, !dbg !10219
  br label %if.end105, !dbg !10219

if.else87:                                        ; preds = %land.lhs.true82, %if.else79
  %43 = load i32, i32* @verbose, align 4, !dbg !10221
  %cmp88 = icmp ugt i32 %43, 2, !dbg !10221
  br i1 %cmp88, label %land.lhs.true90, label %if.else95, !dbg !10221

land.lhs.true90:                                  ; preds = %if.else87
  %44 = load i32, i32* @verbose, align 4, !dbg !10221
  %cmp91 = icmp ugt i32 %44, 0, !dbg !10221
  br i1 %cmp91, label %if.then93, label %if.else95, !dbg !10219

if.then93:                                        ; preds = %land.lhs.true90
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_max_srate, i64 0, i64 0)) #13, !dbg !10221
  br label %if.end104, !dbg !10221

if.else95:                                        ; preds = %land.lhs.true90, %if.else87
  %45 = load i32, i32* @verbose, align 4, !dbg !10223
  %cmp96 = icmp ugt i32 %45, 3, !dbg !10223
  br i1 %cmp96, label %land.lhs.true98, label %if.end103, !dbg !10223

land.lhs.true98:                                  ; preds = %if.else95
  %46 = load i32, i32* @verbose, align 4, !dbg !10223
  %cmp99 = icmp ugt i32 %46, 0, !dbg !10223
  br i1 %cmp99, label %if.then101, label %if.end103, !dbg !10221

if.then101:                                       ; preds = %land.lhs.true98
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_max_srate, i64 0, i64 0)) #13, !dbg !10223
  br label %if.end103, !dbg !10223

if.end103:                                        ; preds = %if.then101, %land.lhs.true98, %if.else95
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.then93
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then85
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then77
  br label %do.end, !dbg !10225

do.end:                                           ; preds = %if.end106
  store i32 -1, i32* %retval, align 4, !dbg !10226
  br label %return, !dbg !10226

return:                                           ; preds = %do.end, %if.end72
  %47 = load i32, i32* %retval, align 4, !dbg !10227
  ret i32 %47, !dbg !10227
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_min_srate(%struct.stv090x_state* %state, i32 %clk, i32 %srate) #0 !dbg !10228 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %clk.addr = alloca i32, align 4
  %srate.addr = alloca i32, align 4
  %sym = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !10229, metadata !DIExpression()), !dbg !10230
  store i32 %clk, i32* %clk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk.addr, metadata !10231, metadata !DIExpression()), !dbg !10232
  store i32 %srate, i32* %srate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srate.addr, metadata !10233, metadata !DIExpression()), !dbg !10234
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !10235, metadata !DIExpression()), !dbg !10236
  %0 = load i32, i32* %srate.addr, align 4, !dbg !10237
  %div = udiv i32 %0, 100, !dbg !10238
  %mul = mul i32 95, %div, !dbg !10239
  store i32 %mul, i32* %srate.addr, align 4, !dbg !10240
  %1 = load i32, i32* %srate.addr, align 4, !dbg !10241
  %cmp = icmp ugt i32 %1, 60000000, !dbg !10243
  br i1 %cmp, label %if.then, label %if.else, !dbg !10244

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %srate.addr, align 4, !dbg !10245
  %shl = shl i32 %2, 4, !dbg !10247
  store i32 %shl, i32* %sym, align 4, !dbg !10248
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10249
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 3, !dbg !10250
  %4 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !10250
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %4, i32 0, i32 4, !dbg !10251
  %5 = load i32, i32* %mclk, align 8, !dbg !10251
  %shr = ashr i32 %5, 12, !dbg !10252
  %6 = load i32, i32* %sym, align 4, !dbg !10253
  %div1 = udiv i32 %6, %shr, !dbg !10253
  store i32 %div1, i32* %sym, align 4, !dbg !10253
  br label %if.end15, !dbg !10254

if.else:                                          ; preds = %entry
  %7 = load i32, i32* %srate.addr, align 4, !dbg !10255
  %cmp2 = icmp ugt i32 %7, 6000000, !dbg !10257
  br i1 %cmp2, label %if.then3, label %if.else9, !dbg !10258

if.then3:                                         ; preds = %if.else
  %8 = load i32, i32* %srate.addr, align 4, !dbg !10259
  %shl4 = shl i32 %8, 6, !dbg !10261
  store i32 %shl4, i32* %sym, align 4, !dbg !10262
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10263
  %internal5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 3, !dbg !10264
  %10 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal5, align 8, !dbg !10264
  %mclk6 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %10, i32 0, i32 4, !dbg !10265
  %11 = load i32, i32* %mclk6, align 8, !dbg !10265
  %shr7 = ashr i32 %11, 10, !dbg !10266
  %12 = load i32, i32* %sym, align 4, !dbg !10267
  %div8 = udiv i32 %12, %shr7, !dbg !10267
  store i32 %div8, i32* %sym, align 4, !dbg !10267
  br label %if.end, !dbg !10268

if.else9:                                         ; preds = %if.else
  %13 = load i32, i32* %srate.addr, align 4, !dbg !10269
  %shl10 = shl i32 %13, 9, !dbg !10271
  store i32 %shl10, i32* %sym, align 4, !dbg !10272
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10273
  %internal11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 3, !dbg !10274
  %15 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal11, align 8, !dbg !10274
  %mclk12 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %15, i32 0, i32 4, !dbg !10275
  %16 = load i32, i32* %mclk12, align 8, !dbg !10275
  %shr13 = ashr i32 %16, 7, !dbg !10276
  %17 = load i32, i32* %sym, align 4, !dbg !10277
  %div14 = udiv i32 %17, %shr13, !dbg !10277
  store i32 %div14, i32* %sym, align 4, !dbg !10277
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then3
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10278
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !10278
  %19 = load i32, i32* %demod, align 4, !dbg !10278
  %cmp16 = icmp eq i32 %19, 2, !dbg !10278
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !10278

cond.true:                                        ; preds = %if.end15
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10278
  %21 = load i32, i32* %sym, align 4, !dbg !10278
  %shr17 = lshr i32 %21, 8, !dbg !10278
  %and = and i32 %shr17, 127, !dbg !10278
  %conv = trunc i32 %and to i8, !dbg !10278
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62050, i8 zeroext %conv) #9, !dbg !10278
  br label %cond.end, !dbg !10278

cond.false:                                       ; preds = %if.end15
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10278
  %23 = load i32, i32* %sym, align 4, !dbg !10278
  %shr18 = lshr i32 %23, 8, !dbg !10278
  %and19 = and i32 %shr18, 127, !dbg !10278
  %conv20 = trunc i32 %and19 to i8, !dbg !10278
  %call21 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62562, i8 zeroext %conv20) #9, !dbg !10278
  br label %cond.end, !dbg !10278

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call21, %cond.false ], !dbg !10278
  %cmp22 = icmp slt i32 %cond, 0, !dbg !10280
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !10281

if.then24:                                        ; preds = %cond.end
  br label %err, !dbg !10282

if.end25:                                         ; preds = %cond.end
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10283
  %demod26 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !10283
  %25 = load i32, i32* %demod26, align 4, !dbg !10283
  %cmp27 = icmp eq i32 %25, 2, !dbg !10283
  br i1 %cmp27, label %cond.true29, label %cond.false33, !dbg !10283

cond.true29:                                      ; preds = %if.end25
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10283
  %27 = load i32, i32* %sym, align 4, !dbg !10283
  %and30 = and i32 %27, 255, !dbg !10283
  %conv31 = trunc i32 %and30 to i8, !dbg !10283
  %call32 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62051, i8 zeroext %conv31) #9, !dbg !10283
  br label %cond.end37, !dbg !10283

cond.false33:                                     ; preds = %if.end25
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10283
  %29 = load i32, i32* %sym, align 4, !dbg !10283
  %and34 = and i32 %29, 255, !dbg !10283
  %conv35 = trunc i32 %and34 to i8, !dbg !10283
  %call36 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 62563, i8 zeroext %conv35) #9, !dbg !10283
  br label %cond.end37, !dbg !10283

cond.end37:                                       ; preds = %cond.false33, %cond.true29
  %cond38 = phi i32 [ %call32, %cond.true29 ], [ %call36, %cond.false33 ], !dbg !10283
  %cmp39 = icmp slt i32 %cond38, 0, !dbg !10285
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !10286

if.then41:                                        ; preds = %cond.end37
  br label %err, !dbg !10287

if.end42:                                         ; preds = %cond.end37
  store i32 0, i32* %retval, align 4, !dbg !10288
  br label %return, !dbg !10288

err:                                              ; preds = %if.then41, %if.then24
  call void @llvm.dbg.label(metadata !10289), !dbg !10290
  br label %do.body, !dbg !10291

do.body:                                          ; preds = %err
  %30 = load i32, i32* @verbose, align 4, !dbg !10292
  %cmp43 = icmp ugt i32 %30, 0, !dbg !10292
  br i1 %cmp43, label %land.lhs.true, label %if.else49, !dbg !10292

land.lhs.true:                                    ; preds = %do.body
  %31 = load i32, i32* @verbose, align 4, !dbg !10292
  %cmp45 = icmp ugt i32 %31, 0, !dbg !10292
  br i1 %cmp45, label %if.then47, label %if.else49, !dbg !10297

if.then47:                                        ; preds = %land.lhs.true
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_min_srate, i64 0, i64 0)) #13, !dbg !10292
  br label %if.end76, !dbg !10292

if.else49:                                        ; preds = %land.lhs.true, %do.body
  %32 = load i32, i32* @verbose, align 4, !dbg !10298
  %cmp50 = icmp ugt i32 %32, 1, !dbg !10298
  br i1 %cmp50, label %land.lhs.true52, label %if.else57, !dbg !10298

land.lhs.true52:                                  ; preds = %if.else49
  %33 = load i32, i32* @verbose, align 4, !dbg !10298
  %cmp53 = icmp ugt i32 %33, 0, !dbg !10298
  br i1 %cmp53, label %if.then55, label %if.else57, !dbg !10292

if.then55:                                        ; preds = %land.lhs.true52
  %call56 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_min_srate, i64 0, i64 0)) #13, !dbg !10298
  br label %if.end75, !dbg !10298

if.else57:                                        ; preds = %land.lhs.true52, %if.else49
  %34 = load i32, i32* @verbose, align 4, !dbg !10300
  %cmp58 = icmp ugt i32 %34, 2, !dbg !10300
  br i1 %cmp58, label %land.lhs.true60, label %if.else65, !dbg !10300

land.lhs.true60:                                  ; preds = %if.else57
  %35 = load i32, i32* @verbose, align 4, !dbg !10300
  %cmp61 = icmp ugt i32 %35, 0, !dbg !10300
  br i1 %cmp61, label %if.then63, label %if.else65, !dbg !10298

if.then63:                                        ; preds = %land.lhs.true60
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_min_srate, i64 0, i64 0)) #13, !dbg !10300
  br label %if.end74, !dbg !10300

if.else65:                                        ; preds = %land.lhs.true60, %if.else57
  %36 = load i32, i32* @verbose, align 4, !dbg !10302
  %cmp66 = icmp ugt i32 %36, 3, !dbg !10302
  br i1 %cmp66, label %land.lhs.true68, label %if.end73, !dbg !10302

land.lhs.true68:                                  ; preds = %if.else65
  %37 = load i32, i32* @verbose, align 4, !dbg !10302
  %cmp69 = icmp ugt i32 %37, 0, !dbg !10302
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !10300

if.then71:                                        ; preds = %land.lhs.true68
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_min_srate, i64 0, i64 0)) #13, !dbg !10302
  br label %if.end73, !dbg !10302

if.end73:                                         ; preds = %if.then71, %land.lhs.true68, %if.else65
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then63
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then55
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then47
  br label %do.end, !dbg !10304

do.end:                                           ; preds = %if.end76
  store i32 -1, i32* %retval, align 4, !dbg !10305
  br label %return, !dbg !10305

return:                                           ; preds = %do.end, %if.end42
  %38 = load i32, i32* %retval, align 4, !dbg !10306
  ret i32 %38, !dbg !10306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_delivery_search(%struct.stv090x_state* %state) #0 !dbg !10307 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !10308, metadata !DIExpression()), !dbg !10309
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10310, metadata !DIExpression()), !dbg !10311
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10312
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 12, !dbg !10313
  %1 = load i32, i32* %search_mode, align 8, !dbg !10313
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb47
    i32 3, label %sw.bb174
  ], !dbg !10314

sw.bb:                                            ; preds = %entry, %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10315
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 1, !dbg !10315
  %3 = load i32, i32* %demod, align 4, !dbg !10315
  %cmp = icmp eq i32 %3, 2, !dbg !10315
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10315

cond.true:                                        ; preds = %sw.bb
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10315
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %4, i32 61972) #9, !dbg !10315
  br label %cond.end, !dbg !10315

cond.false:                                       ; preds = %sw.bb
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10315
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 62484) #9, !dbg !10315
  br label %cond.end, !dbg !10315

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !10315
  store i32 %cond, i32* %reg, align 4, !dbg !10317
  %6 = load i32, i32* %reg, align 4, !dbg !10318
  %and = and i32 %6, -65, !dbg !10318
  %or = or i32 %and, 64, !dbg !10318
  store i32 %or, i32* %reg, align 4, !dbg !10318
  %7 = load i32, i32* %reg, align 4, !dbg !10319
  %and2 = and i32 %7, -129, !dbg !10319
  store i32 %and2, i32* %reg, align 4, !dbg !10319
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10320
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !10320
  %9 = load i32, i32* %demod3, align 4, !dbg !10320
  %cmp4 = icmp eq i32 %9, 2, !dbg !10320
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !10320

cond.true5:                                       ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10320
  %11 = load i32, i32* %reg, align 4, !dbg !10320
  %conv = trunc i32 %11 to i8, !dbg !10320
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 61972, i8 zeroext %conv) #9, !dbg !10320
  br label %cond.end10, !dbg !10320

cond.false7:                                      ; preds = %cond.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10320
  %13 = load i32, i32* %reg, align 4, !dbg !10320
  %conv8 = trunc i32 %13 to i8, !dbg !10320
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 62484, i8 zeroext %conv8) #9, !dbg !10320
  br label %cond.end10, !dbg !10320

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %call6, %cond.true5 ], [ %call9, %cond.false7 ], !dbg !10320
  %cmp12 = icmp slt i32 %cond11, 0, !dbg !10322
  br i1 %cmp12, label %if.then, label %if.end, !dbg !10323

if.then:                                          ; preds = %cond.end10
  br label %err, !dbg !10324

if.end:                                           ; preds = %cond.end10
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10325
  %call14 = call i32 @stv090x_vitclk_ctl(%struct.stv090x_state* %14, i32 0) #9, !dbg !10327
  %cmp15 = icmp slt i32 %call14, 0, !dbg !10328
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !10329

if.then17:                                        ; preds = %if.end
  br label %err, !dbg !10330

if.end18:                                         ; preds = %if.end
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10331
  %call19 = call i32 @stv090x_dvbs_track_crl(%struct.stv090x_state* %15) #9, !dbg !10333
  %cmp20 = icmp slt i32 %call19, 0, !dbg !10334
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !10335

if.then22:                                        ; preds = %if.end18
  br label %err, !dbg !10336

if.end23:                                         ; preds = %if.end18
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10337
  %demod24 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !10337
  %17 = load i32, i32* %demod24, align 4, !dbg !10337
  %cmp25 = icmp eq i32 %17, 2, !dbg !10337
  br i1 %cmp25, label %cond.true27, label %cond.false29, !dbg !10337

cond.true27:                                      ; preds = %if.end23
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10337
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62096, i8 zeroext 34) #9, !dbg !10337
  br label %cond.end31, !dbg !10337

cond.false29:                                     ; preds = %if.end23
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10337
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62608, i8 zeroext 34) #9, !dbg !10337
  br label %cond.end31, !dbg !10337

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !10337
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !10339
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !10340

if.then35:                                        ; preds = %cond.end31
  br label %err, !dbg !10341

if.end36:                                         ; preds = %cond.end31
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10342
  %call37 = call i32 @stv090x_set_vit_thacq(%struct.stv090x_state* %20) #9, !dbg !10344
  %cmp38 = icmp slt i32 %call37, 0, !dbg !10345
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !10346

if.then40:                                        ; preds = %if.end36
  br label %err, !dbg !10347

if.end41:                                         ; preds = %if.end36
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10348
  %call42 = call i32 @stv090x_set_viterbi(%struct.stv090x_state* %21) #9, !dbg !10350
  %cmp43 = icmp slt i32 %call42, 0, !dbg !10351
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !10352

if.then45:                                        ; preds = %if.end41
  br label %err, !dbg !10353

if.end46:                                         ; preds = %if.end41
  br label %sw.epilog, !dbg !10354

sw.bb47:                                          ; preds = %entry
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10355
  %demod48 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %22, i32 0, i32 1, !dbg !10355
  %23 = load i32, i32* %demod48, align 4, !dbg !10355
  %cmp49 = icmp eq i32 %23, 2, !dbg !10355
  br i1 %cmp49, label %cond.true51, label %cond.false53, !dbg !10355

cond.true51:                                      ; preds = %sw.bb47
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10355
  %call52 = call i32 @stv090x_read_reg(%struct.stv090x_state* %24, i32 61972) #9, !dbg !10355
  br label %cond.end55, !dbg !10355

cond.false53:                                     ; preds = %sw.bb47
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10355
  %call54 = call i32 @stv090x_read_reg(%struct.stv090x_state* %25, i32 62484) #9, !dbg !10355
  br label %cond.end55, !dbg !10355

cond.end55:                                       ; preds = %cond.false53, %cond.true51
  %cond56 = phi i32 [ %call52, %cond.true51 ], [ %call54, %cond.false53 ], !dbg !10355
  store i32 %cond56, i32* %reg, align 4, !dbg !10356
  %26 = load i32, i32* %reg, align 4, !dbg !10357
  %and57 = and i32 %26, -65, !dbg !10357
  store i32 %and57, i32* %reg, align 4, !dbg !10357
  %27 = load i32, i32* %reg, align 4, !dbg !10358
  %and58 = and i32 %27, -129, !dbg !10358
  store i32 %and58, i32* %reg, align 4, !dbg !10358
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10359
  %demod59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !10359
  %29 = load i32, i32* %demod59, align 4, !dbg !10359
  %cmp60 = icmp eq i32 %29, 2, !dbg !10359
  br i1 %cmp60, label %cond.true62, label %cond.false65, !dbg !10359

cond.true62:                                      ; preds = %cond.end55
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10359
  %31 = load i32, i32* %reg, align 4, !dbg !10359
  %conv63 = trunc i32 %31 to i8, !dbg !10359
  %call64 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 61972, i8 zeroext %conv63) #9, !dbg !10359
  br label %cond.end68, !dbg !10359

cond.false65:                                     ; preds = %cond.end55
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10359
  %33 = load i32, i32* %reg, align 4, !dbg !10359
  %conv66 = trunc i32 %33 to i8, !dbg !10359
  %call67 = call i32 @stv090x_write_reg(%struct.stv090x_state* %32, i32 62484, i8 zeroext %conv66) #9, !dbg !10359
  br label %cond.end68, !dbg !10359

cond.end68:                                       ; preds = %cond.false65, %cond.true62
  %cond69 = phi i32 [ %call64, %cond.true62 ], [ %call67, %cond.false65 ], !dbg !10359
  %cmp70 = icmp slt i32 %cond69, 0, !dbg !10361
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !10362

if.then72:                                        ; preds = %cond.end68
  br label %err, !dbg !10363

if.end73:                                         ; preds = %cond.end68
  %34 = load i32, i32* %reg, align 4, !dbg !10364
  %and74 = and i32 %34, -65, !dbg !10364
  %or75 = or i32 %and74, 64, !dbg !10364
  store i32 %or75, i32* %reg, align 4, !dbg !10364
  %35 = load i32, i32* %reg, align 4, !dbg !10365
  %and76 = and i32 %35, -129, !dbg !10365
  %or77 = or i32 %and76, 128, !dbg !10365
  store i32 %or77, i32* %reg, align 4, !dbg !10365
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10366
  %demod78 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !10366
  %37 = load i32, i32* %demod78, align 4, !dbg !10366
  %cmp79 = icmp eq i32 %37, 2, !dbg !10366
  br i1 %cmp79, label %cond.true81, label %cond.false84, !dbg !10366

cond.true81:                                      ; preds = %if.end73
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10366
  %39 = load i32, i32* %reg, align 4, !dbg !10366
  %conv82 = trunc i32 %39 to i8, !dbg !10366
  %call83 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 61972, i8 zeroext %conv82) #9, !dbg !10366
  br label %cond.end87, !dbg !10366

cond.false84:                                     ; preds = %if.end73
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10366
  %41 = load i32, i32* %reg, align 4, !dbg !10366
  %conv85 = trunc i32 %41 to i8, !dbg !10366
  %call86 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 62484, i8 zeroext %conv85) #9, !dbg !10366
  br label %cond.end87, !dbg !10366

cond.end87:                                       ; preds = %cond.false84, %cond.true81
  %cond88 = phi i32 [ %call83, %cond.true81 ], [ %call86, %cond.false84 ], !dbg !10366
  %cmp89 = icmp slt i32 %cond88, 0, !dbg !10368
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !10369

if.then91:                                        ; preds = %cond.end87
  br label %err, !dbg !10370

if.end92:                                         ; preds = %cond.end87
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10371
  %call93 = call i32 @stv090x_vitclk_ctl(%struct.stv090x_state* %42, i32 1) #9, !dbg !10373
  %cmp94 = icmp slt i32 %call93, 0, !dbg !10374
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !10375

if.then96:                                        ; preds = %if.end92
  br label %err, !dbg !10376

if.end97:                                         ; preds = %if.end92
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10377
  %demod98 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %43, i32 0, i32 1, !dbg !10377
  %44 = load i32, i32* %demod98, align 4, !dbg !10377
  %cmp99 = icmp eq i32 %44, 2, !dbg !10377
  br i1 %cmp99, label %cond.true101, label %cond.false103, !dbg !10377

cond.true101:                                     ; preds = %if.end97
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10377
  %call102 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62009, i8 zeroext 26) #9, !dbg !10377
  br label %cond.end105, !dbg !10377

cond.false103:                                    ; preds = %if.end97
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10377
  %call104 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62521, i8 zeroext 26) #9, !dbg !10377
  br label %cond.end105, !dbg !10377

cond.end105:                                      ; preds = %cond.false103, %cond.true101
  %cond106 = phi i32 [ %call102, %cond.true101 ], [ %call104, %cond.false103 ], !dbg !10377
  %cmp107 = icmp slt i32 %cond106, 0, !dbg !10379
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !10380

if.then109:                                       ; preds = %cond.end105
  br label %err, !dbg !10381

if.end110:                                        ; preds = %cond.end105
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10382
  %demod111 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %47, i32 0, i32 1, !dbg !10382
  %48 = load i32, i32* %demod111, align 4, !dbg !10382
  %cmp112 = icmp eq i32 %48, 2, !dbg !10382
  br i1 %cmp112, label %cond.true114, label %cond.false116, !dbg !10382

cond.true114:                                     ; preds = %if.end110
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10382
  %call115 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 62010, i8 zeroext 9) #9, !dbg !10382
  br label %cond.end118, !dbg !10382

cond.false116:                                    ; preds = %if.end110
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10382
  %call117 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62522, i8 zeroext 9) #9, !dbg !10382
  br label %cond.end118, !dbg !10382

cond.end118:                                      ; preds = %cond.false116, %cond.true114
  %cond119 = phi i32 [ %call115, %cond.true114 ], [ %call117, %cond.false116 ], !dbg !10382
  %cmp120 = icmp slt i32 %cond119, 0, !dbg !10384
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !10385

if.then122:                                       ; preds = %cond.end118
  br label %err, !dbg !10386

if.end123:                                        ; preds = %cond.end118
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10387
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %51, i32 0, i32 3, !dbg !10389
  %52 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !10389
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %52, i32 0, i32 5, !dbg !10390
  %53 = load i32, i32* %dev_ver, align 4, !dbg !10390
  %cmp124 = icmp ule i32 %53, 32, !dbg !10391
  br i1 %cmp124, label %if.then126, label %if.else, !dbg !10392

if.then126:                                       ; preds = %if.end123
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10393
  %demod127 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 1, !dbg !10393
  %55 = load i32, i32* %demod127, align 4, !dbg !10393
  %cmp128 = icmp eq i32 %55, 2, !dbg !10393
  br i1 %cmp128, label %cond.true130, label %cond.false132, !dbg !10393

cond.true130:                                     ; preds = %if.then126
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10393
  %call131 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62096, i8 zeroext 38) #9, !dbg !10393
  br label %cond.end134, !dbg !10393

cond.false132:                                    ; preds = %if.then126
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10393
  %call133 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62608, i8 zeroext 38) #9, !dbg !10393
  br label %cond.end134, !dbg !10393

cond.end134:                                      ; preds = %cond.false132, %cond.true130
  %cond135 = phi i32 [ %call131, %cond.true130 ], [ %call133, %cond.false132 ], !dbg !10393
  %cmp136 = icmp slt i32 %cond135, 0, !dbg !10396
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !10397

if.then138:                                       ; preds = %cond.end134
  br label %err, !dbg !10398

if.end139:                                        ; preds = %cond.end134
  br label %if.end153, !dbg !10399

if.else:                                          ; preds = %if.end123
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10400
  %demod140 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 1, !dbg !10400
  %59 = load i32, i32* %demod140, align 4, !dbg !10400
  %cmp141 = icmp eq i32 %59, 2, !dbg !10400
  br i1 %cmp141, label %cond.true143, label %cond.false145, !dbg !10400

cond.true143:                                     ; preds = %if.else
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10400
  %call144 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62096, i8 zeroext 102) #9, !dbg !10400
  br label %cond.end147, !dbg !10400

cond.false145:                                    ; preds = %if.else
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10400
  %call146 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 62608, i8 zeroext 102) #9, !dbg !10400
  br label %cond.end147, !dbg !10400

cond.end147:                                      ; preds = %cond.false145, %cond.true143
  %cond148 = phi i32 [ %call144, %cond.true143 ], [ %call146, %cond.false145 ], !dbg !10400
  %cmp149 = icmp slt i32 %cond148, 0, !dbg !10403
  br i1 %cmp149, label %if.then151, label %if.end152, !dbg !10404

if.then151:                                       ; preds = %cond.end147
  br label %err, !dbg !10405

if.end152:                                        ; preds = %cond.end147
  br label %if.end153

if.end153:                                        ; preds = %if.end152, %if.end139
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10406
  %demod_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %62, i32 0, i32 2, !dbg !10408
  %63 = load i32, i32* %demod_mode, align 8, !dbg !10408
  %cmp154 = icmp ne i32 %63, 1, !dbg !10409
  br i1 %cmp154, label %if.then156, label %if.else162, !dbg !10410

if.then156:                                       ; preds = %if.end153
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10411
  %call157 = call i32 @stv090x_activate_modcod(%struct.stv090x_state* %64) #9, !dbg !10414
  %cmp158 = icmp slt i32 %call157, 0, !dbg !10415
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !10416

if.then160:                                       ; preds = %if.then156
  br label %err, !dbg !10417

if.end161:                                        ; preds = %if.then156
  br label %if.end168, !dbg !10418

if.else162:                                       ; preds = %if.end153
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10419
  %call163 = call i32 @stv090x_activate_modcod_single(%struct.stv090x_state* %65) #9, !dbg !10422
  %cmp164 = icmp slt i32 %call163, 0, !dbg !10423
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !10424

if.then166:                                       ; preds = %if.else162
  br label %err, !dbg !10425

if.end167:                                        ; preds = %if.else162
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.end161
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10426
  %call169 = call i32 @stv090x_set_vit_thtracq(%struct.stv090x_state* %66) #9, !dbg !10428
  %cmp170 = icmp slt i32 %call169, 0, !dbg !10429
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !10430

if.then172:                                       ; preds = %if.end168
  br label %err, !dbg !10431

if.end173:                                        ; preds = %if.end168
  br label %sw.epilog, !dbg !10432

sw.bb174:                                         ; preds = %entry
  br label %sw.default, !dbg !10432

sw.default:                                       ; preds = %entry, %sw.bb174
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10433
  %demod175 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %67, i32 0, i32 1, !dbg !10433
  %68 = load i32, i32* %demod175, align 4, !dbg !10433
  %cmp176 = icmp eq i32 %68, 2, !dbg !10433
  br i1 %cmp176, label %cond.true178, label %cond.false180, !dbg !10433

cond.true178:                                     ; preds = %sw.default
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10433
  %call179 = call i32 @stv090x_read_reg(%struct.stv090x_state* %69, i32 61972) #9, !dbg !10433
  br label %cond.end182, !dbg !10433

cond.false180:                                    ; preds = %sw.default
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10433
  %call181 = call i32 @stv090x_read_reg(%struct.stv090x_state* %70, i32 62484) #9, !dbg !10433
  br label %cond.end182, !dbg !10433

cond.end182:                                      ; preds = %cond.false180, %cond.true178
  %cond183 = phi i32 [ %call179, %cond.true178 ], [ %call181, %cond.false180 ], !dbg !10433
  store i32 %cond183, i32* %reg, align 4, !dbg !10434
  %71 = load i32, i32* %reg, align 4, !dbg !10435
  %and184 = and i32 %71, -65, !dbg !10435
  store i32 %and184, i32* %reg, align 4, !dbg !10435
  %72 = load i32, i32* %reg, align 4, !dbg !10436
  %and185 = and i32 %72, -129, !dbg !10436
  store i32 %and185, i32* %reg, align 4, !dbg !10436
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10437
  %demod186 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %73, i32 0, i32 1, !dbg !10437
  %74 = load i32, i32* %demod186, align 4, !dbg !10437
  %cmp187 = icmp eq i32 %74, 2, !dbg !10437
  br i1 %cmp187, label %cond.true189, label %cond.false192, !dbg !10437

cond.true189:                                     ; preds = %cond.end182
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10437
  %76 = load i32, i32* %reg, align 4, !dbg !10437
  %conv190 = trunc i32 %76 to i8, !dbg !10437
  %call191 = call i32 @stv090x_write_reg(%struct.stv090x_state* %75, i32 61972, i8 zeroext %conv190) #9, !dbg !10437
  br label %cond.end195, !dbg !10437

cond.false192:                                    ; preds = %cond.end182
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10437
  %78 = load i32, i32* %reg, align 4, !dbg !10437
  %conv193 = trunc i32 %78 to i8, !dbg !10437
  %call194 = call i32 @stv090x_write_reg(%struct.stv090x_state* %77, i32 62484, i8 zeroext %conv193) #9, !dbg !10437
  br label %cond.end195, !dbg !10437

cond.end195:                                      ; preds = %cond.false192, %cond.true189
  %cond196 = phi i32 [ %call191, %cond.true189 ], [ %call194, %cond.false192 ], !dbg !10437
  %cmp197 = icmp slt i32 %cond196, 0, !dbg !10439
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !10440

if.then199:                                       ; preds = %cond.end195
  br label %err, !dbg !10441

if.end200:                                        ; preds = %cond.end195
  %79 = load i32, i32* %reg, align 4, !dbg !10442
  %and201 = and i32 %79, -65, !dbg !10442
  %or202 = or i32 %and201, 64, !dbg !10442
  store i32 %or202, i32* %reg, align 4, !dbg !10442
  %80 = load i32, i32* %reg, align 4, !dbg !10443
  %and203 = and i32 %80, -129, !dbg !10443
  %or204 = or i32 %and203, 128, !dbg !10443
  store i32 %or204, i32* %reg, align 4, !dbg !10443
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10444
  %demod205 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %81, i32 0, i32 1, !dbg !10444
  %82 = load i32, i32* %demod205, align 4, !dbg !10444
  %cmp206 = icmp eq i32 %82, 2, !dbg !10444
  br i1 %cmp206, label %cond.true208, label %cond.false211, !dbg !10444

cond.true208:                                     ; preds = %if.end200
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10444
  %84 = load i32, i32* %reg, align 4, !dbg !10444
  %conv209 = trunc i32 %84 to i8, !dbg !10444
  %call210 = call i32 @stv090x_write_reg(%struct.stv090x_state* %83, i32 61972, i8 zeroext %conv209) #9, !dbg !10444
  br label %cond.end214, !dbg !10444

cond.false211:                                    ; preds = %if.end200
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10444
  %86 = load i32, i32* %reg, align 4, !dbg !10444
  %conv212 = trunc i32 %86 to i8, !dbg !10444
  %call213 = call i32 @stv090x_write_reg(%struct.stv090x_state* %85, i32 62484, i8 zeroext %conv212) #9, !dbg !10444
  br label %cond.end214, !dbg !10444

cond.end214:                                      ; preds = %cond.false211, %cond.true208
  %cond215 = phi i32 [ %call210, %cond.true208 ], [ %call213, %cond.false211 ], !dbg !10444
  %cmp216 = icmp slt i32 %cond215, 0, !dbg !10446
  br i1 %cmp216, label %if.then218, label %if.end219, !dbg !10447

if.then218:                                       ; preds = %cond.end214
  br label %err, !dbg !10448

if.end219:                                        ; preds = %cond.end214
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10449
  %call220 = call i32 @stv090x_vitclk_ctl(%struct.stv090x_state* %87, i32 0) #9, !dbg !10451
  %cmp221 = icmp slt i32 %call220, 0, !dbg !10452
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !10453

if.then223:                                       ; preds = %if.end219
  br label %err, !dbg !10454

if.end224:                                        ; preds = %if.end219
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10455
  %call225 = call i32 @stv090x_dvbs_track_crl(%struct.stv090x_state* %88) #9, !dbg !10457
  %cmp226 = icmp slt i32 %call225, 0, !dbg !10458
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !10459

if.then228:                                       ; preds = %if.end224
  br label %err, !dbg !10460

if.end229:                                        ; preds = %if.end224
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10461
  %internal230 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %89, i32 0, i32 3, !dbg !10463
  %90 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal230, align 8, !dbg !10463
  %dev_ver231 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %90, i32 0, i32 5, !dbg !10464
  %91 = load i32, i32* %dev_ver231, align 4, !dbg !10464
  %cmp232 = icmp ule i32 %91, 32, !dbg !10465
  br i1 %cmp232, label %if.then234, label %if.else248, !dbg !10466

if.then234:                                       ; preds = %if.end229
  %92 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10467
  %demod235 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %92, i32 0, i32 1, !dbg !10467
  %93 = load i32, i32* %demod235, align 4, !dbg !10467
  %cmp236 = icmp eq i32 %93, 2, !dbg !10467
  br i1 %cmp236, label %cond.true238, label %cond.false240, !dbg !10467

cond.true238:                                     ; preds = %if.then234
  %94 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10467
  %call239 = call i32 @stv090x_write_reg(%struct.stv090x_state* %94, i32 62096, i8 zeroext 38) #9, !dbg !10467
  br label %cond.end242, !dbg !10467

cond.false240:                                    ; preds = %if.then234
  %95 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10467
  %call241 = call i32 @stv090x_write_reg(%struct.stv090x_state* %95, i32 62608, i8 zeroext 38) #9, !dbg !10467
  br label %cond.end242, !dbg !10467

cond.end242:                                      ; preds = %cond.false240, %cond.true238
  %cond243 = phi i32 [ %call239, %cond.true238 ], [ %call241, %cond.false240 ], !dbg !10467
  %cmp244 = icmp slt i32 %cond243, 0, !dbg !10470
  br i1 %cmp244, label %if.then246, label %if.end247, !dbg !10471

if.then246:                                       ; preds = %cond.end242
  br label %err, !dbg !10472

if.end247:                                        ; preds = %cond.end242
  br label %if.end262, !dbg !10473

if.else248:                                       ; preds = %if.end229
  %96 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10474
  %demod249 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %96, i32 0, i32 1, !dbg !10474
  %97 = load i32, i32* %demod249, align 4, !dbg !10474
  %cmp250 = icmp eq i32 %97, 2, !dbg !10474
  br i1 %cmp250, label %cond.true252, label %cond.false254, !dbg !10474

cond.true252:                                     ; preds = %if.else248
  %98 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10474
  %call253 = call i32 @stv090x_write_reg(%struct.stv090x_state* %98, i32 62096, i8 zeroext 102) #9, !dbg !10474
  br label %cond.end256, !dbg !10474

cond.false254:                                    ; preds = %if.else248
  %99 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10474
  %call255 = call i32 @stv090x_write_reg(%struct.stv090x_state* %99, i32 62608, i8 zeroext 102) #9, !dbg !10474
  br label %cond.end256, !dbg !10474

cond.end256:                                      ; preds = %cond.false254, %cond.true252
  %cond257 = phi i32 [ %call253, %cond.true252 ], [ %call255, %cond.false254 ], !dbg !10474
  %cmp258 = icmp slt i32 %cond257, 0, !dbg !10477
  br i1 %cmp258, label %if.then260, label %if.end261, !dbg !10478

if.then260:                                       ; preds = %cond.end256
  br label %err, !dbg !10479

if.end261:                                        ; preds = %cond.end256
  br label %if.end262

if.end262:                                        ; preds = %if.end261, %if.end247
  %100 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10480
  %demod_mode263 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %100, i32 0, i32 2, !dbg !10482
  %101 = load i32, i32* %demod_mode263, align 8, !dbg !10482
  %cmp264 = icmp ne i32 %101, 1, !dbg !10483
  br i1 %cmp264, label %if.then266, label %if.else272, !dbg !10484

if.then266:                                       ; preds = %if.end262
  %102 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10485
  %call267 = call i32 @stv090x_activate_modcod(%struct.stv090x_state* %102) #9, !dbg !10488
  %cmp268 = icmp slt i32 %call267, 0, !dbg !10489
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !10490

if.then270:                                       ; preds = %if.then266
  br label %err, !dbg !10491

if.end271:                                        ; preds = %if.then266
  br label %if.end278, !dbg !10492

if.else272:                                       ; preds = %if.end262
  %103 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10493
  %call273 = call i32 @stv090x_activate_modcod_single(%struct.stv090x_state* %103) #9, !dbg !10496
  %cmp274 = icmp slt i32 %call273, 0, !dbg !10497
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !10498

if.then276:                                       ; preds = %if.else272
  br label %err, !dbg !10499

if.end277:                                        ; preds = %if.else272
  br label %if.end278

if.end278:                                        ; preds = %if.end277, %if.end271
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10500
  %call279 = call i32 @stv090x_set_vit_thacq(%struct.stv090x_state* %104) #9, !dbg !10502
  %cmp280 = icmp slt i32 %call279, 0, !dbg !10503
  br i1 %cmp280, label %if.then282, label %if.end283, !dbg !10504

if.then282:                                       ; preds = %if.end278
  br label %err, !dbg !10505

if.end283:                                        ; preds = %if.end278
  %105 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10506
  %call284 = call i32 @stv090x_set_viterbi(%struct.stv090x_state* %105) #9, !dbg !10508
  %cmp285 = icmp slt i32 %call284, 0, !dbg !10509
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !10510

if.then287:                                       ; preds = %if.end283
  br label %err, !dbg !10511

if.end288:                                        ; preds = %if.end283
  br label %sw.epilog, !dbg !10512

sw.epilog:                                        ; preds = %if.end288, %if.end173, %if.end46
  store i32 0, i32* %retval, align 4, !dbg !10513
  br label %return, !dbg !10513

err:                                              ; preds = %if.then287, %if.then282, %if.then276, %if.then270, %if.then260, %if.then246, %if.then228, %if.then223, %if.then218, %if.then199, %if.then172, %if.then166, %if.then160, %if.then151, %if.then138, %if.then122, %if.then109, %if.then96, %if.then91, %if.then72, %if.then45, %if.then40, %if.then35, %if.then22, %if.then17, %if.then
  call void @llvm.dbg.label(metadata !10514), !dbg !10515
  br label %do.body, !dbg !10516

do.body:                                          ; preds = %err
  %106 = load i32, i32* @verbose, align 4, !dbg !10517
  %cmp289 = icmp ugt i32 %106, 0, !dbg !10517
  br i1 %cmp289, label %land.lhs.true, label %if.else295, !dbg !10517

land.lhs.true:                                    ; preds = %do.body
  %107 = load i32, i32* @verbose, align 4, !dbg !10517
  %cmp291 = icmp ugt i32 %107, 0, !dbg !10517
  br i1 %cmp291, label %if.then293, label %if.else295, !dbg !10522

if.then293:                                       ; preds = %land.lhs.true
  %call294 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_delivery_search, i64 0, i64 0)) #13, !dbg !10517
  br label %if.end322, !dbg !10517

if.else295:                                       ; preds = %land.lhs.true, %do.body
  %108 = load i32, i32* @verbose, align 4, !dbg !10523
  %cmp296 = icmp ugt i32 %108, 1, !dbg !10523
  br i1 %cmp296, label %land.lhs.true298, label %if.else303, !dbg !10523

land.lhs.true298:                                 ; preds = %if.else295
  %109 = load i32, i32* @verbose, align 4, !dbg !10523
  %cmp299 = icmp ugt i32 %109, 0, !dbg !10523
  br i1 %cmp299, label %if.then301, label %if.else303, !dbg !10517

if.then301:                                       ; preds = %land.lhs.true298
  %call302 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_delivery_search, i64 0, i64 0)) #13, !dbg !10523
  br label %if.end321, !dbg !10523

if.else303:                                       ; preds = %land.lhs.true298, %if.else295
  %110 = load i32, i32* @verbose, align 4, !dbg !10525
  %cmp304 = icmp ugt i32 %110, 2, !dbg !10525
  br i1 %cmp304, label %land.lhs.true306, label %if.else311, !dbg !10525

land.lhs.true306:                                 ; preds = %if.else303
  %111 = load i32, i32* @verbose, align 4, !dbg !10525
  %cmp307 = icmp ugt i32 %111, 0, !dbg !10525
  br i1 %cmp307, label %if.then309, label %if.else311, !dbg !10523

if.then309:                                       ; preds = %land.lhs.true306
  %call310 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_delivery_search, i64 0, i64 0)) #13, !dbg !10525
  br label %if.end320, !dbg !10525

if.else311:                                       ; preds = %land.lhs.true306, %if.else303
  %112 = load i32, i32* @verbose, align 4, !dbg !10527
  %cmp312 = icmp ugt i32 %112, 3, !dbg !10527
  br i1 %cmp312, label %land.lhs.true314, label %if.end319, !dbg !10527

land.lhs.true314:                                 ; preds = %if.else311
  %113 = load i32, i32* @verbose, align 4, !dbg !10527
  %cmp315 = icmp ugt i32 %113, 0, !dbg !10527
  br i1 %cmp315, label %if.then317, label %if.end319, !dbg !10525

if.then317:                                       ; preds = %land.lhs.true314
  %call318 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_delivery_search, i64 0, i64 0)) #13, !dbg !10527
  br label %if.end319, !dbg !10527

if.end319:                                        ; preds = %if.then317, %land.lhs.true314, %if.else311
  br label %if.end320

if.end320:                                        ; preds = %if.end319, %if.then309
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then301
  br label %if.end322

if.end322:                                        ; preds = %if.end321, %if.then293
  br label %do.end, !dbg !10529

do.end:                                           ; preds = %if.end322
  store i32 -1, i32* %retval, align 4, !dbg !10530
  br label %return, !dbg !10530

return:                                           ; preds = %do.end, %sw.epilog
  %114 = load i32, i32* %retval, align 4, !dbg !10531
  ret i32 %114, !dbg !10531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_start_search(%struct.stv090x_state* %state) #0 !dbg !10532 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %freq_abs = alloca i32, align 4
  %freq = alloca i16, align 2
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !10533, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10535, metadata !DIExpression()), !dbg !10536
  call void @llvm.dbg.declare(metadata i32* %freq_abs, metadata !10537, metadata !DIExpression()), !dbg !10538
  call void @llvm.dbg.declare(metadata i16* %freq, metadata !10539, metadata !DIExpression()), !dbg !10540
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10541
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !10541
  %1 = load i32, i32* %demod, align 4, !dbg !10541
  %cmp = icmp eq i32 %1, 2, !dbg !10541
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10541

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10541
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 61974) #9, !dbg !10541
  br label %cond.end, !dbg !10541

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10541
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62486) #9, !dbg !10541
  br label %cond.end, !dbg !10541

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !10541
  store i32 %cond, i32* %reg, align 4, !dbg !10542
  %4 = load i32, i32* %reg, align 4, !dbg !10543
  %and = and i32 %4, -32, !dbg !10543
  %or = or i32 %and, 31, !dbg !10543
  store i32 %or, i32* %reg, align 4, !dbg !10543
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10544
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 1, !dbg !10544
  %6 = load i32, i32* %demod2, align 4, !dbg !10544
  %cmp3 = icmp eq i32 %6, 2, !dbg !10544
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !10544

cond.true4:                                       ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10544
  %8 = load i32, i32* %reg, align 4, !dbg !10544
  %conv = trunc i32 %8 to i8, !dbg !10544
  %call5 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 61974, i8 zeroext %conv) #9, !dbg !10544
  br label %cond.end9, !dbg !10544

cond.false6:                                      ; preds = %cond.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10544
  %10 = load i32, i32* %reg, align 4, !dbg !10544
  %conv7 = trunc i32 %10 to i8, !dbg !10544
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 62486, i8 zeroext %conv7) #9, !dbg !10544
  br label %cond.end9, !dbg !10544

cond.end9:                                        ; preds = %cond.false6, %cond.true4
  %cond10 = phi i32 [ %call5, %cond.true4 ], [ %call8, %cond.false6 ], !dbg !10544
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !10546
  br i1 %cmp11, label %if.then, label %if.end, !dbg !10547

if.then:                                          ; preds = %cond.end9
  br label %err, !dbg !10548

if.end:                                           ; preds = %cond.end9
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10549
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 3, !dbg !10551
  %12 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !10551
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %12, i32 0, i32 5, !dbg !10552
  %13 = load i32, i32* %dev_ver, align 4, !dbg !10552
  %cmp13 = icmp ule i32 %13, 32, !dbg !10553
  br i1 %cmp13, label %if.then15, label %if.else124, !dbg !10554

if.then15:                                        ; preds = %if.end
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10555
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 19, !dbg !10558
  %15 = load i32, i32* %srate, align 4, !dbg !10558
  %cmp16 = icmp ule i32 %15, 5000000, !dbg !10559
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !10560

if.then18:                                        ; preds = %if.then15
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10561
  %demod19 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !10561
  %17 = load i32, i32* %demod19, align 4, !dbg !10561
  %cmp20 = icmp eq i32 %17, 2, !dbg !10561
  br i1 %cmp20, label %cond.true22, label %cond.false24, !dbg !10561

cond.true22:                                      ; preds = %if.then18
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10561
  %call23 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62008, i8 zeroext 68) #9, !dbg !10561
  br label %cond.end26, !dbg !10561

cond.false24:                                     ; preds = %if.then18
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10561
  %call25 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62520, i8 zeroext 68) #9, !dbg !10561
  br label %cond.end26, !dbg !10561

cond.end26:                                       ; preds = %cond.false24, %cond.true22
  %cond27 = phi i32 [ %call23, %cond.true22 ], [ %call25, %cond.false24 ], !dbg !10561
  %cmp28 = icmp slt i32 %cond27, 0, !dbg !10564
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !10565

if.then30:                                        ; preds = %cond.end26
  br label %err, !dbg !10566

if.end31:                                         ; preds = %cond.end26
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10567
  %demod32 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !10567
  %21 = load i32, i32* %demod32, align 4, !dbg !10567
  %cmp33 = icmp eq i32 %21, 2, !dbg !10567
  br i1 %cmp33, label %cond.true35, label %cond.false37, !dbg !10567

cond.true35:                                      ; preds = %if.end31
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10567
  %call36 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62018, i8 zeroext 15) #9, !dbg !10567
  br label %cond.end39, !dbg !10567

cond.false37:                                     ; preds = %if.end31
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10567
  %call38 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62530, i8 zeroext 15) #9, !dbg !10567
  br label %cond.end39, !dbg !10567

cond.end39:                                       ; preds = %cond.false37, %cond.true35
  %cond40 = phi i32 [ %call36, %cond.true35 ], [ %call38, %cond.false37 ], !dbg !10567
  %cmp41 = icmp slt i32 %cond40, 0, !dbg !10569
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !10570

if.then43:                                        ; preds = %cond.end39
  br label %err, !dbg !10571

if.end44:                                         ; preds = %cond.end39
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10572
  %demod45 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !10572
  %25 = load i32, i32* %demod45, align 4, !dbg !10572
  %cmp46 = icmp eq i32 %25, 2, !dbg !10572
  br i1 %cmp46, label %cond.true48, label %cond.false50, !dbg !10572

cond.true48:                                      ; preds = %if.end44
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10572
  %call49 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62019, i8 zeroext -1) #9, !dbg !10572
  br label %cond.end52, !dbg !10572

cond.false50:                                     ; preds = %if.end44
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10572
  %call51 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62531, i8 zeroext -1) #9, !dbg !10572
  br label %cond.end52, !dbg !10572

cond.end52:                                       ; preds = %cond.false50, %cond.true48
  %cond53 = phi i32 [ %call49, %cond.true48 ], [ %call51, %cond.false50 ], !dbg !10572
  %cmp54 = icmp slt i32 %cond53, 0, !dbg !10574
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !10575

if.then56:                                        ; preds = %cond.end52
  br label %err, !dbg !10576

if.end57:                                         ; preds = %cond.end52
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10577
  %demod58 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !10577
  %29 = load i32, i32* %demod58, align 4, !dbg !10577
  %cmp59 = icmp eq i32 %29, 2, !dbg !10577
  br i1 %cmp59, label %cond.true61, label %cond.false63, !dbg !10577

cond.true61:                                      ; preds = %if.end57
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10577
  %call62 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62022, i8 zeroext -16) #9, !dbg !10577
  br label %cond.end65, !dbg !10577

cond.false63:                                     ; preds = %if.end57
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10577
  %call64 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62534, i8 zeroext -16) #9, !dbg !10577
  br label %cond.end65, !dbg !10577

cond.end65:                                       ; preds = %cond.false63, %cond.true61
  %cond66 = phi i32 [ %call62, %cond.true61 ], [ %call64, %cond.false63 ], !dbg !10577
  %cmp67 = icmp slt i32 %cond66, 0, !dbg !10579
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !10580

if.then69:                                        ; preds = %cond.end65
  br label %err, !dbg !10581

if.end70:                                         ; preds = %cond.end65
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10582
  %demod71 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !10582
  %33 = load i32, i32* %demod71, align 4, !dbg !10582
  %cmp72 = icmp eq i32 %33, 2, !dbg !10582
  br i1 %cmp72, label %cond.true74, label %cond.false76, !dbg !10582

cond.true74:                                      ; preds = %if.end70
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10582
  %call75 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62023, i8 zeroext 0) #9, !dbg !10582
  br label %cond.end78, !dbg !10582

cond.false76:                                     ; preds = %if.end70
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10582
  %call77 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62535, i8 zeroext 0) #9, !dbg !10582
  br label %cond.end78, !dbg !10582

cond.end78:                                       ; preds = %cond.false76, %cond.true74
  %cond79 = phi i32 [ %call75, %cond.true74 ], [ %call77, %cond.false76 ], !dbg !10582
  %cmp80 = icmp slt i32 %cond79, 0, !dbg !10584
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !10585

if.then82:                                        ; preds = %cond.end78
  br label %err, !dbg !10586

if.end83:                                         ; preds = %cond.end78
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10587
  %demod84 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !10587
  %37 = load i32, i32* %demod84, align 4, !dbg !10587
  %cmp85 = icmp eq i32 %37, 2, !dbg !10587
  br i1 %cmp85, label %cond.true87, label %cond.false89, !dbg !10587

cond.true87:                                      ; preds = %if.end83
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10587
  %call88 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62034, i8 zeroext 104) #9, !dbg !10587
  br label %cond.end91, !dbg !10587

cond.false89:                                     ; preds = %if.end83
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10587
  %call90 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62546, i8 zeroext 104) #9, !dbg !10587
  br label %cond.end91, !dbg !10587

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i32 [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !10587
  %cmp93 = icmp slt i32 %cond92, 0, !dbg !10589
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !10590

if.then95:                                        ; preds = %cond.end91
  br label %err, !dbg !10591

if.end96:                                         ; preds = %cond.end91
  br label %if.end123, !dbg !10592

if.else:                                          ; preds = %if.then15
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10593
  %demod97 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !10593
  %41 = load i32, i32* %demod97, align 4, !dbg !10593
  %cmp98 = icmp eq i32 %41, 2, !dbg !10593
  br i1 %cmp98, label %cond.true100, label %cond.false102, !dbg !10593

cond.true100:                                     ; preds = %if.else
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10593
  %call101 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62008, i8 zeroext -60) #9, !dbg !10593
  br label %cond.end104, !dbg !10593

cond.false102:                                    ; preds = %if.else
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10593
  %call103 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62520, i8 zeroext -60) #9, !dbg !10593
  br label %cond.end104, !dbg !10593

cond.end104:                                      ; preds = %cond.false102, %cond.true100
  %cond105 = phi i32 [ %call101, %cond.true100 ], [ %call103, %cond.false102 ], !dbg !10593
  %cmp106 = icmp slt i32 %cond105, 0, !dbg !10596
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !10597

if.then108:                                       ; preds = %cond.end104
  br label %err, !dbg !10598

if.end109:                                        ; preds = %cond.end104
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10599
  %demod110 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 1, !dbg !10599
  %45 = load i32, i32* %demod110, align 4, !dbg !10599
  %cmp111 = icmp eq i32 %45, 2, !dbg !10599
  br i1 %cmp111, label %cond.true113, label %cond.false115, !dbg !10599

cond.true113:                                     ; preds = %if.end109
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10599
  %call114 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62034, i8 zeroext 68) #9, !dbg !10599
  br label %cond.end117, !dbg !10599

cond.false115:                                    ; preds = %if.end109
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10599
  %call116 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 62546, i8 zeroext 68) #9, !dbg !10599
  br label %cond.end117, !dbg !10599

cond.end117:                                      ; preds = %cond.false115, %cond.true113
  %cond118 = phi i32 [ %call114, %cond.true113 ], [ %call116, %cond.false115 ], !dbg !10599
  %cmp119 = icmp slt i32 %cond118, 0, !dbg !10601
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !10602

if.then121:                                       ; preds = %cond.end117
  br label %err, !dbg !10603

if.end122:                                        ; preds = %cond.end117
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.end96
  br label %if.end253, !dbg !10604

if.else124:                                       ; preds = %if.end
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10605
  %srate125 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 19, !dbg !10608
  %49 = load i32, i32* %srate125, align 4, !dbg !10608
  %cmp126 = icmp ule i32 %49, 5000000, !dbg !10609
  br i1 %cmp126, label %if.then128, label %if.else138, !dbg !10610

if.then128:                                       ; preds = %if.else124
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10611
  %demod129 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 1, !dbg !10611
  %51 = load i32, i32* %demod129, align 4, !dbg !10611
  %cmp130 = icmp eq i32 %51, 2, !dbg !10611
  br i1 %cmp130, label %cond.true132, label %cond.false134, !dbg !10611

cond.true132:                                     ; preds = %if.then128
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10611
  %call133 = call i32 @stv090x_write_reg(%struct.stv090x_state* %52, i32 62034, i8 zeroext 104) #9, !dbg !10611
  br label %cond.end136, !dbg !10611

cond.false134:                                    ; preds = %if.then128
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10611
  %call135 = call i32 @stv090x_write_reg(%struct.stv090x_state* %53, i32 62546, i8 zeroext 104) #9, !dbg !10611
  br label %cond.end136, !dbg !10611

cond.end136:                                      ; preds = %cond.false134, %cond.true132
  %cond137 = phi i32 [ %call133, %cond.true132 ], [ %call135, %cond.false134 ], !dbg !10611
  br label %if.end148, !dbg !10613

if.else138:                                       ; preds = %if.else124
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10614
  %demod139 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 1, !dbg !10614
  %55 = load i32, i32* %demod139, align 4, !dbg !10614
  %cmp140 = icmp eq i32 %55, 2, !dbg !10614
  br i1 %cmp140, label %cond.true142, label %cond.false144, !dbg !10614

cond.true142:                                     ; preds = %if.else138
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10614
  %call143 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62034, i8 zeroext 68) #9, !dbg !10614
  br label %cond.end146, !dbg !10614

cond.false144:                                    ; preds = %if.else138
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10614
  %call145 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62546, i8 zeroext 68) #9, !dbg !10614
  br label %cond.end146, !dbg !10614

cond.end146:                                      ; preds = %cond.false144, %cond.true142
  %cond147 = phi i32 [ %call143, %cond.true142 ], [ %call145, %cond.false144 ], !dbg !10614
  br label %if.end148

if.end148:                                        ; preds = %cond.end146, %cond.end136
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10616
  %demod149 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 1, !dbg !10616
  %59 = load i32, i32* %demod149, align 4, !dbg !10616
  %cmp150 = icmp eq i32 %59, 2, !dbg !10616
  br i1 %cmp150, label %cond.true152, label %cond.false154, !dbg !10616

cond.true152:                                     ; preds = %if.end148
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10616
  %call153 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62008, i8 zeroext 70) #9, !dbg !10616
  br label %cond.end156, !dbg !10616

cond.false154:                                    ; preds = %if.end148
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10616
  %call155 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 62520, i8 zeroext 70) #9, !dbg !10616
  br label %cond.end156, !dbg !10616

cond.end156:                                      ; preds = %cond.false154, %cond.true152
  %cond157 = phi i32 [ %call153, %cond.true152 ], [ %call155, %cond.false154 ], !dbg !10616
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10617
  %algo = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %62, i32 0, i32 17, !dbg !10619
  %63 = load i32, i32* %algo, align 4, !dbg !10619
  %cmp158 = icmp eq i32 %63, 2, !dbg !10620
  br i1 %cmp158, label %if.then160, label %if.else164, !dbg !10621

if.then160:                                       ; preds = %cond.end156
  store i32 65536000, i32* %freq_abs, align 4, !dbg !10622
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10624
  %internal161 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %64, i32 0, i32 3, !dbg !10625
  %65 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal161, align 8, !dbg !10625
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %65, i32 0, i32 4, !dbg !10626
  %66 = load i32, i32* %mclk, align 8, !dbg !10626
  %div = sdiv i32 %66, 1000, !dbg !10627
  %67 = load i32, i32* %freq_abs, align 4, !dbg !10628
  %div162 = udiv i32 %67, %div, !dbg !10628
  store i32 %div162, i32* %freq_abs, align 4, !dbg !10628
  %68 = load i32, i32* %freq_abs, align 4, !dbg !10629
  %conv163 = trunc i32 %68 to i16, !dbg !10630
  store i16 %conv163, i16* %freq, align 2, !dbg !10631
  br label %if.end171, !dbg !10632

if.else164:                                       ; preds = %cond.end156
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10633
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %69, i32 0, i32 21, !dbg !10635
  %70 = load i32, i32* %search_range, align 4, !dbg !10635
  %div165 = sdiv i32 %70, 2000, !dbg !10636
  %add = add i32 %div165, 600, !dbg !10637
  store i32 %add, i32* %freq_abs, align 4, !dbg !10638
  %71 = load i32, i32* %freq_abs, align 4, !dbg !10639
  %shl = shl i32 %71, 16, !dbg !10640
  store i32 %shl, i32* %freq_abs, align 4, !dbg !10641
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10642
  %internal166 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %72, i32 0, i32 3, !dbg !10643
  %73 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal166, align 8, !dbg !10643
  %mclk167 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %73, i32 0, i32 4, !dbg !10644
  %74 = load i32, i32* %mclk167, align 8, !dbg !10644
  %div168 = sdiv i32 %74, 1000, !dbg !10645
  %75 = load i32, i32* %freq_abs, align 4, !dbg !10646
  %div169 = udiv i32 %75, %div168, !dbg !10646
  store i32 %div169, i32* %freq_abs, align 4, !dbg !10646
  %76 = load i32, i32* %freq_abs, align 4, !dbg !10647
  %conv170 = trunc i32 %76 to i16, !dbg !10648
  store i16 %conv170, i16* %freq, align 2, !dbg !10649
  br label %if.end171

if.end171:                                        ; preds = %if.else164, %if.then160
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10650
  %demod172 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %77, i32 0, i32 1, !dbg !10650
  %78 = load i32, i32* %demod172, align 4, !dbg !10650
  %cmp173 = icmp eq i32 %78, 2, !dbg !10650
  br i1 %cmp173, label %cond.true175, label %cond.false180, !dbg !10650

cond.true175:                                     ; preds = %if.end171
  %79 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10650
  %80 = load i16, i16* %freq, align 2, !dbg !10650
  %conv176 = sext i16 %80 to i32, !dbg !10650
  %shr = ashr i32 %conv176, 8, !dbg !10650
  %and177 = and i32 %shr, 255, !dbg !10650
  %conv178 = trunc i32 %and177 to i8, !dbg !10650
  %call179 = call i32 @stv090x_write_reg(%struct.stv090x_state* %79, i32 62018, i8 zeroext %conv178) #9, !dbg !10650
  br label %cond.end186, !dbg !10650

cond.false180:                                    ; preds = %if.end171
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10650
  %82 = load i16, i16* %freq, align 2, !dbg !10650
  %conv181 = sext i16 %82 to i32, !dbg !10650
  %shr182 = ashr i32 %conv181, 8, !dbg !10650
  %and183 = and i32 %shr182, 255, !dbg !10650
  %conv184 = trunc i32 %and183 to i8, !dbg !10650
  %call185 = call i32 @stv090x_write_reg(%struct.stv090x_state* %81, i32 62530, i8 zeroext %conv184) #9, !dbg !10650
  br label %cond.end186, !dbg !10650

cond.end186:                                      ; preds = %cond.false180, %cond.true175
  %cond187 = phi i32 [ %call179, %cond.true175 ], [ %call185, %cond.false180 ], !dbg !10650
  %cmp188 = icmp slt i32 %cond187, 0, !dbg !10652
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !10653

if.then190:                                       ; preds = %cond.end186
  br label %err, !dbg !10654

if.end191:                                        ; preds = %cond.end186
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10655
  %demod192 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %83, i32 0, i32 1, !dbg !10655
  %84 = load i32, i32* %demod192, align 4, !dbg !10655
  %cmp193 = icmp eq i32 %84, 2, !dbg !10655
  br i1 %cmp193, label %cond.true195, label %cond.false200, !dbg !10655

cond.true195:                                     ; preds = %if.end191
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10655
  %86 = load i16, i16* %freq, align 2, !dbg !10655
  %conv196 = sext i16 %86 to i32, !dbg !10655
  %and197 = and i32 %conv196, 255, !dbg !10655
  %conv198 = trunc i32 %and197 to i8, !dbg !10655
  %call199 = call i32 @stv090x_write_reg(%struct.stv090x_state* %85, i32 62019, i8 zeroext %conv198) #9, !dbg !10655
  br label %cond.end205, !dbg !10655

cond.false200:                                    ; preds = %if.end191
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10655
  %88 = load i16, i16* %freq, align 2, !dbg !10655
  %conv201 = sext i16 %88 to i32, !dbg !10655
  %and202 = and i32 %conv201, 255, !dbg !10655
  %conv203 = trunc i32 %and202 to i8, !dbg !10655
  %call204 = call i32 @stv090x_write_reg(%struct.stv090x_state* %87, i32 62531, i8 zeroext %conv203) #9, !dbg !10655
  br label %cond.end205, !dbg !10655

cond.end205:                                      ; preds = %cond.false200, %cond.true195
  %cond206 = phi i32 [ %call199, %cond.true195 ], [ %call204, %cond.false200 ], !dbg !10655
  %cmp207 = icmp slt i32 %cond206, 0, !dbg !10657
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !10658

if.then209:                                       ; preds = %cond.end205
  br label %err, !dbg !10659

if.end210:                                        ; preds = %cond.end205
  %89 = load i16, i16* %freq, align 2, !dbg !10660
  %conv211 = sext i16 %89 to i32, !dbg !10660
  %mul = mul i32 %conv211, -1, !dbg !10660
  %conv212 = trunc i32 %mul to i16, !dbg !10660
  store i16 %conv212, i16* %freq, align 2, !dbg !10660
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10661
  %demod213 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %90, i32 0, i32 1, !dbg !10661
  %91 = load i32, i32* %demod213, align 4, !dbg !10661
  %cmp214 = icmp eq i32 %91, 2, !dbg !10661
  br i1 %cmp214, label %cond.true216, label %cond.false222, !dbg !10661

cond.true216:                                     ; preds = %if.end210
  %92 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10661
  %93 = load i16, i16* %freq, align 2, !dbg !10661
  %conv217 = sext i16 %93 to i32, !dbg !10661
  %shr218 = ashr i32 %conv217, 8, !dbg !10661
  %and219 = and i32 %shr218, 255, !dbg !10661
  %conv220 = trunc i32 %and219 to i8, !dbg !10661
  %call221 = call i32 @stv090x_write_reg(%struct.stv090x_state* %92, i32 62022, i8 zeroext %conv220) #9, !dbg !10661
  br label %cond.end228, !dbg !10661

cond.false222:                                    ; preds = %if.end210
  %94 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10661
  %95 = load i16, i16* %freq, align 2, !dbg !10661
  %conv223 = sext i16 %95 to i32, !dbg !10661
  %shr224 = ashr i32 %conv223, 8, !dbg !10661
  %and225 = and i32 %shr224, 255, !dbg !10661
  %conv226 = trunc i32 %and225 to i8, !dbg !10661
  %call227 = call i32 @stv090x_write_reg(%struct.stv090x_state* %94, i32 62534, i8 zeroext %conv226) #9, !dbg !10661
  br label %cond.end228, !dbg !10661

cond.end228:                                      ; preds = %cond.false222, %cond.true216
  %cond229 = phi i32 [ %call221, %cond.true216 ], [ %call227, %cond.false222 ], !dbg !10661
  %cmp230 = icmp slt i32 %cond229, 0, !dbg !10663
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !10664

if.then232:                                       ; preds = %cond.end228
  br label %err, !dbg !10665

if.end233:                                        ; preds = %cond.end228
  %96 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10666
  %demod234 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %96, i32 0, i32 1, !dbg !10666
  %97 = load i32, i32* %demod234, align 4, !dbg !10666
  %cmp235 = icmp eq i32 %97, 2, !dbg !10666
  br i1 %cmp235, label %cond.true237, label %cond.false242, !dbg !10666

cond.true237:                                     ; preds = %if.end233
  %98 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10666
  %99 = load i16, i16* %freq, align 2, !dbg !10666
  %conv238 = sext i16 %99 to i32, !dbg !10666
  %and239 = and i32 %conv238, 255, !dbg !10666
  %conv240 = trunc i32 %and239 to i8, !dbg !10666
  %call241 = call i32 @stv090x_write_reg(%struct.stv090x_state* %98, i32 62023, i8 zeroext %conv240) #9, !dbg !10666
  br label %cond.end247, !dbg !10666

cond.false242:                                    ; preds = %if.end233
  %100 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10666
  %101 = load i16, i16* %freq, align 2, !dbg !10666
  %conv243 = sext i16 %101 to i32, !dbg !10666
  %and244 = and i32 %conv243, 255, !dbg !10666
  %conv245 = trunc i32 %and244 to i8, !dbg !10666
  %call246 = call i32 @stv090x_write_reg(%struct.stv090x_state* %100, i32 62535, i8 zeroext %conv245) #9, !dbg !10666
  br label %cond.end247, !dbg !10666

cond.end247:                                      ; preds = %cond.false242, %cond.true237
  %cond248 = phi i32 [ %call241, %cond.true237 ], [ %call246, %cond.false242 ], !dbg !10666
  %cmp249 = icmp slt i32 %cond248, 0, !dbg !10668
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !10669

if.then251:                                       ; preds = %cond.end247
  br label %err, !dbg !10670

if.end252:                                        ; preds = %cond.end247
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.end123
  %102 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10671
  %demod254 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %102, i32 0, i32 1, !dbg !10671
  %103 = load i32, i32* %demod254, align 4, !dbg !10671
  %cmp255 = icmp eq i32 %103, 2, !dbg !10671
  br i1 %cmp255, label %cond.true257, label %cond.false259, !dbg !10671

cond.true257:                                     ; preds = %if.end253
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10671
  %call258 = call i32 @stv090x_write_reg(%struct.stv090x_state* %104, i32 62024, i8 zeroext 0) #9, !dbg !10671
  br label %cond.end261, !dbg !10671

cond.false259:                                    ; preds = %if.end253
  %105 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10671
  %call260 = call i32 @stv090x_write_reg(%struct.stv090x_state* %105, i32 62536, i8 zeroext 0) #9, !dbg !10671
  br label %cond.end261, !dbg !10671

cond.end261:                                      ; preds = %cond.false259, %cond.true257
  %cond262 = phi i32 [ %call258, %cond.true257 ], [ %call260, %cond.false259 ], !dbg !10671
  %cmp263 = icmp slt i32 %cond262, 0, !dbg !10673
  br i1 %cmp263, label %if.then265, label %if.end266, !dbg !10674

if.then265:                                       ; preds = %cond.end261
  br label %err, !dbg !10675

if.end266:                                        ; preds = %cond.end261
  %106 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10676
  %demod267 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %106, i32 0, i32 1, !dbg !10676
  %107 = load i32, i32* %demod267, align 4, !dbg !10676
  %cmp268 = icmp eq i32 %107, 2, !dbg !10676
  br i1 %cmp268, label %cond.true270, label %cond.false272, !dbg !10676

cond.true270:                                     ; preds = %if.end266
  %108 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10676
  %call271 = call i32 @stv090x_write_reg(%struct.stv090x_state* %108, i32 62025, i8 zeroext 0) #9, !dbg !10676
  br label %cond.end274, !dbg !10676

cond.false272:                                    ; preds = %if.end266
  %109 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10676
  %call273 = call i32 @stv090x_write_reg(%struct.stv090x_state* %109, i32 62537, i8 zeroext 0) #9, !dbg !10676
  br label %cond.end274, !dbg !10676

cond.end274:                                      ; preds = %cond.false272, %cond.true270
  %cond275 = phi i32 [ %call271, %cond.true270 ], [ %call273, %cond.false272 ], !dbg !10676
  %cmp276 = icmp slt i32 %cond275, 0, !dbg !10678
  br i1 %cmp276, label %if.then278, label %if.end279, !dbg !10679

if.then278:                                       ; preds = %cond.end274
  br label %err, !dbg !10680

if.end279:                                        ; preds = %cond.end274
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10681
  %internal280 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %110, i32 0, i32 3, !dbg !10683
  %111 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal280, align 8, !dbg !10683
  %dev_ver281 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %111, i32 0, i32 5, !dbg !10684
  %112 = load i32, i32* %dev_ver281, align 4, !dbg !10684
  %cmp282 = icmp uge i32 %112, 32, !dbg !10685
  br i1 %cmp282, label %if.then284, label %if.end348, !dbg !10686

if.then284:                                       ; preds = %if.end279
  %113 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10687
  %demod285 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %113, i32 0, i32 1, !dbg !10687
  %114 = load i32, i32* %demod285, align 4, !dbg !10687
  %cmp286 = icmp eq i32 %114, 2, !dbg !10687
  br i1 %cmp286, label %cond.true288, label %cond.false290, !dbg !10687

cond.true288:                                     ; preds = %if.then284
  %115 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10687
  %call289 = call i32 @stv090x_write_reg(%struct.stv090x_state* %115, i32 62063, i8 zeroext 65) #9, !dbg !10687
  br label %cond.end292, !dbg !10687

cond.false290:                                    ; preds = %if.then284
  %116 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10687
  %call291 = call i32 @stv090x_write_reg(%struct.stv090x_state* %116, i32 62575, i8 zeroext 65) #9, !dbg !10687
  br label %cond.end292, !dbg !10687

cond.end292:                                      ; preds = %cond.false290, %cond.true288
  %cond293 = phi i32 [ %call289, %cond.true288 ], [ %call291, %cond.false290 ], !dbg !10687
  %cmp294 = icmp slt i32 %cond293, 0, !dbg !10690
  br i1 %cmp294, label %if.then296, label %if.end297, !dbg !10691

if.then296:                                       ; preds = %cond.end292
  br label %err, !dbg !10692

if.end297:                                        ; preds = %cond.end292
  %117 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10693
  %demod298 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %117, i32 0, i32 1, !dbg !10693
  %118 = load i32, i32* %demod298, align 4, !dbg !10693
  %cmp299 = icmp eq i32 %118, 2, !dbg !10693
  br i1 %cmp299, label %cond.true301, label %cond.false303, !dbg !10693

cond.true301:                                     ; preds = %if.end297
  %119 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10693
  %call302 = call i32 @stv090x_write_reg(%struct.stv090x_state* %119, i32 62168, i8 zeroext 65) #9, !dbg !10693
  br label %cond.end305, !dbg !10693

cond.false303:                                    ; preds = %if.end297
  %120 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10693
  %call304 = call i32 @stv090x_write_reg(%struct.stv090x_state* %120, i32 62680, i8 zeroext 65) #9, !dbg !10693
  br label %cond.end305, !dbg !10693

cond.end305:                                      ; preds = %cond.false303, %cond.true301
  %cond306 = phi i32 [ %call302, %cond.true301 ], [ %call304, %cond.false303 ], !dbg !10693
  %cmp307 = icmp slt i32 %cond306, 0, !dbg !10695
  br i1 %cmp307, label %if.then309, label %if.end310, !dbg !10696

if.then309:                                       ; preds = %cond.end305
  br label %err, !dbg !10697

if.end310:                                        ; preds = %cond.end305
  %121 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10698
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %121, i32 0, i32 12, !dbg !10700
  %122 = load i32, i32* %search_mode, align 8, !dbg !10700
  %cmp311 = icmp eq i32 %122, 1, !dbg !10701
  br i1 %cmp311, label %if.then320, label %lor.lhs.false, !dbg !10702

lor.lhs.false:                                    ; preds = %if.end310
  %123 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10703
  %search_mode313 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %123, i32 0, i32 12, !dbg !10704
  %124 = load i32, i32* %search_mode313, align 8, !dbg !10704
  %cmp314 = icmp eq i32 %124, 0, !dbg !10705
  br i1 %cmp314, label %if.then320, label %lor.lhs.false316, !dbg !10706

lor.lhs.false316:                                 ; preds = %lor.lhs.false
  %125 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10707
  %search_mode317 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %125, i32 0, i32 12, !dbg !10708
  %126 = load i32, i32* %search_mode317, align 8, !dbg !10708
  %cmp318 = icmp eq i32 %126, 3, !dbg !10709
  br i1 %cmp318, label %if.then320, label %if.end347, !dbg !10710

if.then320:                                       ; preds = %lor.lhs.false316, %lor.lhs.false, %if.end310
  %127 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10711
  %demod321 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %127, i32 0, i32 1, !dbg !10711
  %128 = load i32, i32* %demod321, align 4, !dbg !10711
  %cmp322 = icmp eq i32 %128, 2, !dbg !10711
  br i1 %cmp322, label %cond.true324, label %cond.false326, !dbg !10711

cond.true324:                                     ; preds = %if.then320
  %129 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10711
  %call325 = call i32 @stv090x_write_reg(%struct.stv090x_state* %129, i32 62258, i8 zeroext -126) #9, !dbg !10711
  br label %cond.end328, !dbg !10711

cond.false326:                                    ; preds = %if.then320
  %130 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10711
  %call327 = call i32 @stv090x_write_reg(%struct.stv090x_state* %130, i32 62770, i8 zeroext -126) #9, !dbg !10711
  br label %cond.end328, !dbg !10711

cond.end328:                                      ; preds = %cond.false326, %cond.true324
  %cond329 = phi i32 [ %call325, %cond.true324 ], [ %call327, %cond.false326 ], !dbg !10711
  %cmp330 = icmp slt i32 %cond329, 0, !dbg !10714
  br i1 %cmp330, label %if.then332, label %if.end333, !dbg !10715

if.then332:                                       ; preds = %cond.end328
  br label %err, !dbg !10716

if.end333:                                        ; preds = %cond.end328
  %131 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10717
  %demod334 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %131, i32 0, i32 1, !dbg !10717
  %132 = load i32, i32* %demod334, align 4, !dbg !10717
  %cmp335 = icmp eq i32 %132, 2, !dbg !10717
  br i1 %cmp335, label %cond.true337, label %cond.false339, !dbg !10717

cond.true337:                                     ; preds = %if.end333
  %133 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10717
  %call338 = call i32 @stv090x_write_reg(%struct.stv090x_state* %133, i32 62269, i8 zeroext 0) #9, !dbg !10717
  br label %cond.end341, !dbg !10717

cond.false339:                                    ; preds = %if.end333
  %134 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10717
  %call340 = call i32 @stv090x_write_reg(%struct.stv090x_state* %134, i32 62781, i8 zeroext 0) #9, !dbg !10717
  br label %cond.end341, !dbg !10717

cond.end341:                                      ; preds = %cond.false339, %cond.true337
  %cond342 = phi i32 [ %call338, %cond.true337 ], [ %call340, %cond.false339 ], !dbg !10717
  %cmp343 = icmp slt i32 %cond342, 0, !dbg !10719
  br i1 %cmp343, label %if.then345, label %if.end346, !dbg !10720

if.then345:                                       ; preds = %cond.end341
  br label %err, !dbg !10721

if.end346:                                        ; preds = %cond.end341
  br label %if.end347, !dbg !10722

if.end347:                                        ; preds = %if.end346, %lor.lhs.false316
  br label %if.end348, !dbg !10723

if.end348:                                        ; preds = %if.end347, %if.end279
  %135 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10724
  %demod349 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %135, i32 0, i32 1, !dbg !10724
  %136 = load i32, i32* %demod349, align 4, !dbg !10724
  %cmp350 = icmp eq i32 %136, 2, !dbg !10724
  br i1 %cmp350, label %cond.true352, label %cond.false354, !dbg !10724

cond.true352:                                     ; preds = %if.end348
  %137 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10724
  %call353 = call i32 @stv090x_write_reg(%struct.stv090x_state* %137, i32 62041, i8 zeroext 0) #9, !dbg !10724
  br label %cond.end356, !dbg !10724

cond.false354:                                    ; preds = %if.end348
  %138 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10724
  %call355 = call i32 @stv090x_write_reg(%struct.stv090x_state* %138, i32 62553, i8 zeroext 0) #9, !dbg !10724
  br label %cond.end356, !dbg !10724

cond.end356:                                      ; preds = %cond.false354, %cond.true352
  %cond357 = phi i32 [ %call353, %cond.true352 ], [ %call355, %cond.false354 ], !dbg !10724
  %cmp358 = icmp slt i32 %cond357, 0, !dbg !10726
  br i1 %cmp358, label %if.then360, label %if.end361, !dbg !10727

if.then360:                                       ; preds = %cond.end356
  br label %err, !dbg !10728

if.end361:                                        ; preds = %cond.end356
  %139 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10729
  %demod362 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %139, i32 0, i32 1, !dbg !10729
  %140 = load i32, i32* %demod362, align 4, !dbg !10729
  %cmp363 = icmp eq i32 %140, 2, !dbg !10729
  br i1 %cmp363, label %cond.true365, label %cond.false367, !dbg !10729

cond.true365:                                     ; preds = %if.end361
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10729
  %call366 = call i32 @stv090x_write_reg(%struct.stv090x_state* %141, i32 62035, i8 zeroext -32) #9, !dbg !10729
  br label %cond.end369, !dbg !10729

cond.false367:                                    ; preds = %if.end361
  %142 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10729
  %call368 = call i32 @stv090x_write_reg(%struct.stv090x_state* %142, i32 62547, i8 zeroext -32) #9, !dbg !10729
  br label %cond.end369, !dbg !10729

cond.end369:                                      ; preds = %cond.false367, %cond.true365
  %cond370 = phi i32 [ %call366, %cond.true365 ], [ %call368, %cond.false367 ], !dbg !10729
  %cmp371 = icmp slt i32 %cond370, 0, !dbg !10731
  br i1 %cmp371, label %if.then373, label %if.end374, !dbg !10732

if.then373:                                       ; preds = %cond.end369
  br label %err, !dbg !10733

if.end374:                                        ; preds = %cond.end369
  %143 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10734
  %demod375 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %143, i32 0, i32 1, !dbg !10734
  %144 = load i32, i32* %demod375, align 4, !dbg !10734
  %cmp376 = icmp eq i32 %144, 2, !dbg !10734
  br i1 %cmp376, label %cond.true378, label %cond.false380, !dbg !10734

cond.true378:                                     ; preds = %if.end374
  %145 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10734
  %call379 = call i32 @stv090x_write_reg(%struct.stv090x_state* %145, i32 62036, i8 zeroext -64) #9, !dbg !10734
  br label %cond.end382, !dbg !10734

cond.false380:                                    ; preds = %if.end374
  %146 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10734
  %call381 = call i32 @stv090x_write_reg(%struct.stv090x_state* %146, i32 62548, i8 zeroext -64) #9, !dbg !10734
  br label %cond.end382, !dbg !10734

cond.end382:                                      ; preds = %cond.false380, %cond.true378
  %cond383 = phi i32 [ %call379, %cond.true378 ], [ %call381, %cond.false380 ], !dbg !10734
  %cmp384 = icmp slt i32 %cond383, 0, !dbg !10736
  br i1 %cmp384, label %if.then386, label %if.end387, !dbg !10737

if.then386:                                       ; preds = %cond.end382
  br label %err, !dbg !10738

if.end387:                                        ; preds = %cond.end382
  %147 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10739
  %demod388 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %147, i32 0, i32 1, !dbg !10739
  %148 = load i32, i32* %demod388, align 4, !dbg !10739
  %cmp389 = icmp eq i32 %148, 2, !dbg !10739
  br i1 %cmp389, label %cond.true391, label %cond.false393, !dbg !10739

cond.true391:                                     ; preds = %if.end387
  %149 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10739
  %call392 = call i32 @stv090x_read_reg(%struct.stv090x_state* %149, i32 61972) #9, !dbg !10739
  br label %cond.end395, !dbg !10739

cond.false393:                                    ; preds = %if.end387
  %150 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10739
  %call394 = call i32 @stv090x_read_reg(%struct.stv090x_state* %150, i32 62484) #9, !dbg !10739
  br label %cond.end395, !dbg !10739

cond.end395:                                      ; preds = %cond.false393, %cond.true391
  %cond396 = phi i32 [ %call392, %cond.true391 ], [ %call394, %cond.false393 ], !dbg !10739
  store i32 %cond396, i32* %reg, align 4, !dbg !10740
  %151 = load i32, i32* %reg, align 4, !dbg !10741
  %and397 = and i32 %151, -17, !dbg !10741
  store i32 %and397, i32* %reg, align 4, !dbg !10741
  %152 = load i32, i32* %reg, align 4, !dbg !10742
  %and398 = and i32 %152, -9, !dbg !10742
  store i32 %and398, i32* %reg, align 4, !dbg !10742
  %153 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10743
  %demod399 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %153, i32 0, i32 1, !dbg !10743
  %154 = load i32, i32* %demod399, align 4, !dbg !10743
  %cmp400 = icmp eq i32 %154, 2, !dbg !10743
  br i1 %cmp400, label %cond.true402, label %cond.false405, !dbg !10743

cond.true402:                                     ; preds = %cond.end395
  %155 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10743
  %156 = load i32, i32* %reg, align 4, !dbg !10743
  %conv403 = trunc i32 %156 to i8, !dbg !10743
  %call404 = call i32 @stv090x_write_reg(%struct.stv090x_state* %155, i32 61972, i8 zeroext %conv403) #9, !dbg !10743
  br label %cond.end408, !dbg !10743

cond.false405:                                    ; preds = %cond.end395
  %157 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10743
  %158 = load i32, i32* %reg, align 4, !dbg !10743
  %conv406 = trunc i32 %158 to i8, !dbg !10743
  %call407 = call i32 @stv090x_write_reg(%struct.stv090x_state* %157, i32 62484, i8 zeroext %conv406) #9, !dbg !10743
  br label %cond.end408, !dbg !10743

cond.end408:                                      ; preds = %cond.false405, %cond.true402
  %cond409 = phi i32 [ %call404, %cond.true402 ], [ %call407, %cond.false405 ], !dbg !10743
  %cmp410 = icmp slt i32 %cond409, 0, !dbg !10745
  br i1 %cmp410, label %if.then412, label %if.end413, !dbg !10746

if.then412:                                       ; preds = %cond.end408
  br label %err, !dbg !10747

if.end413:                                        ; preds = %cond.end408
  %159 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10748
  %demod414 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %159, i32 0, i32 1, !dbg !10748
  %160 = load i32, i32* %demod414, align 4, !dbg !10748
  %cmp415 = icmp eq i32 %160, 2, !dbg !10748
  br i1 %cmp415, label %cond.true417, label %cond.false419, !dbg !10748

cond.true417:                                     ; preds = %if.end413
  %161 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10748
  %call418 = call i32 @stv090x_read_reg(%struct.stv090x_state* %161, i32 61973) #9, !dbg !10748
  br label %cond.end421, !dbg !10748

cond.false419:                                    ; preds = %if.end413
  %162 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10748
  %call420 = call i32 @stv090x_read_reg(%struct.stv090x_state* %162, i32 62485) #9, !dbg !10748
  br label %cond.end421, !dbg !10748

cond.end421:                                      ; preds = %cond.false419, %cond.true417
  %cond422 = phi i32 [ %call418, %cond.true417 ], [ %call420, %cond.false419 ], !dbg !10748
  store i32 %cond422, i32* %reg, align 4, !dbg !10749
  %163 = load i32, i32* %reg, align 4, !dbg !10750
  %and423 = and i32 %163, -65, !dbg !10750
  store i32 %and423, i32* %reg, align 4, !dbg !10750
  %164 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10751
  %demod424 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %164, i32 0, i32 1, !dbg !10751
  %165 = load i32, i32* %demod424, align 4, !dbg !10751
  %cmp425 = icmp eq i32 %165, 2, !dbg !10751
  br i1 %cmp425, label %cond.true427, label %cond.false430, !dbg !10751

cond.true427:                                     ; preds = %cond.end421
  %166 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10751
  %167 = load i32, i32* %reg, align 4, !dbg !10751
  %conv428 = trunc i32 %167 to i8, !dbg !10751
  %call429 = call i32 @stv090x_write_reg(%struct.stv090x_state* %166, i32 61973, i8 zeroext %conv428) #9, !dbg !10751
  br label %cond.end433, !dbg !10751

cond.false430:                                    ; preds = %cond.end421
  %168 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10751
  %169 = load i32, i32* %reg, align 4, !dbg !10751
  %conv431 = trunc i32 %169 to i8, !dbg !10751
  %call432 = call i32 @stv090x_write_reg(%struct.stv090x_state* %168, i32 62485, i8 zeroext %conv431) #9, !dbg !10751
  br label %cond.end433, !dbg !10751

cond.end433:                                      ; preds = %cond.false430, %cond.true427
  %cond434 = phi i32 [ %call429, %cond.true427 ], [ %call432, %cond.false430 ], !dbg !10751
  %cmp435 = icmp slt i32 %cond434, 0, !dbg !10753
  br i1 %cmp435, label %if.then437, label %if.end438, !dbg !10754

if.then437:                                       ; preds = %cond.end433
  br label %err, !dbg !10755

if.end438:                                        ; preds = %cond.end433
  %170 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10756
  %demod439 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %170, i32 0, i32 1, !dbg !10756
  %171 = load i32, i32* %demod439, align 4, !dbg !10756
  %cmp440 = icmp eq i32 %171, 2, !dbg !10756
  br i1 %cmp440, label %cond.true442, label %cond.false444, !dbg !10756

cond.true442:                                     ; preds = %if.end438
  %172 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10756
  %call443 = call i32 @stv090x_write_reg(%struct.stv090x_state* %172, i32 62033, i8 zeroext -120) #9, !dbg !10756
  br label %cond.end446, !dbg !10756

cond.false444:                                    ; preds = %if.end438
  %173 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10756
  %call445 = call i32 @stv090x_write_reg(%struct.stv090x_state* %173, i32 62545, i8 zeroext -120) #9, !dbg !10756
  br label %cond.end446, !dbg !10756

cond.end446:                                      ; preds = %cond.false444, %cond.true442
  %cond447 = phi i32 [ %call443, %cond.true442 ], [ %call445, %cond.false444 ], !dbg !10756
  %cmp448 = icmp slt i32 %cond447, 0, !dbg !10758
  br i1 %cmp448, label %if.then450, label %if.end451, !dbg !10759

if.then450:                                       ; preds = %cond.end446
  br label %err, !dbg !10760

if.end451:                                        ; preds = %cond.end446
  %174 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10761
  %internal452 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %174, i32 0, i32 3, !dbg !10763
  %175 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal452, align 8, !dbg !10763
  %dev_ver453 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %175, i32 0, i32 5, !dbg !10764
  %176 = load i32, i32* %dev_ver453, align 4, !dbg !10764
  %cmp454 = icmp uge i32 %176, 32, !dbg !10765
  br i1 %cmp454, label %if.then456, label %if.else567, !dbg !10766

if.then456:                                       ; preds = %if.end451
  %177 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10767
  %srate457 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %177, i32 0, i32 19, !dbg !10770
  %178 = load i32, i32* %srate457, align 4, !dbg !10770
  %cmp458 = icmp ult i32 %178, 2000000, !dbg !10771
  br i1 %cmp458, label %if.then460, label %if.else507, !dbg !10772

if.then460:                                       ; preds = %if.then456
  %179 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10773
  %internal461 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %179, i32 0, i32 3, !dbg !10776
  %180 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal461, align 8, !dbg !10776
  %dev_ver462 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %180, i32 0, i32 5, !dbg !10777
  %181 = load i32, i32* %dev_ver462, align 4, !dbg !10777
  %cmp463 = icmp ule i32 %181, 32, !dbg !10778
  br i1 %cmp463, label %if.then465, label %if.else479, !dbg !10779

if.then465:                                       ; preds = %if.then460
  %182 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10780
  %demod466 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %182, i32 0, i32 1, !dbg !10780
  %183 = load i32, i32* %demod466, align 4, !dbg !10780
  %cmp467 = icmp eq i32 %183, 2, !dbg !10780
  br i1 %cmp467, label %cond.true469, label %cond.false471, !dbg !10780

cond.true469:                                     ; preds = %if.then465
  %184 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10780
  %call470 = call i32 @stv090x_write_reg(%struct.stv090x_state* %184, i32 62013, i8 zeroext 57) #9, !dbg !10780
  br label %cond.end473, !dbg !10780

cond.false471:                                    ; preds = %if.then465
  %185 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10780
  %call472 = call i32 @stv090x_write_reg(%struct.stv090x_state* %185, i32 62525, i8 zeroext 57) #9, !dbg !10780
  br label %cond.end473, !dbg !10780

cond.end473:                                      ; preds = %cond.false471, %cond.true469
  %cond474 = phi i32 [ %call470, %cond.true469 ], [ %call472, %cond.false471 ], !dbg !10780
  %cmp475 = icmp slt i32 %cond474, 0, !dbg !10783
  br i1 %cmp475, label %if.then477, label %if.end478, !dbg !10784

if.then477:                                       ; preds = %cond.end473
  br label %err, !dbg !10785

if.end478:                                        ; preds = %cond.end473
  br label %if.end493, !dbg !10786

if.else479:                                       ; preds = %if.then460
  %186 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10787
  %demod480 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %186, i32 0, i32 1, !dbg !10787
  %187 = load i32, i32* %demod480, align 4, !dbg !10787
  %cmp481 = icmp eq i32 %187, 2, !dbg !10787
  br i1 %cmp481, label %cond.true483, label %cond.false485, !dbg !10787

cond.true483:                                     ; preds = %if.else479
  %188 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10787
  %call484 = call i32 @stv090x_write_reg(%struct.stv090x_state* %188, i32 62013, i8 zeroext -119) #9, !dbg !10787
  br label %cond.end487, !dbg !10787

cond.false485:                                    ; preds = %if.else479
  %189 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10787
  %call486 = call i32 @stv090x_write_reg(%struct.stv090x_state* %189, i32 62525, i8 zeroext -119) #9, !dbg !10787
  br label %cond.end487, !dbg !10787

cond.end487:                                      ; preds = %cond.false485, %cond.true483
  %cond488 = phi i32 [ %call484, %cond.true483 ], [ %call486, %cond.false485 ], !dbg !10787
  %cmp489 = icmp slt i32 %cond488, 0, !dbg !10790
  br i1 %cmp489, label %if.then491, label %if.end492, !dbg !10791

if.then491:                                       ; preds = %cond.end487
  br label %err, !dbg !10792

if.end492:                                        ; preds = %cond.end487
  br label %if.end493

if.end493:                                        ; preds = %if.end492, %if.end478
  %190 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10793
  %demod494 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %190, i32 0, i32 1, !dbg !10793
  %191 = load i32, i32* %demod494, align 4, !dbg !10793
  %cmp495 = icmp eq i32 %191, 2, !dbg !10793
  br i1 %cmp495, label %cond.true497, label %cond.false499, !dbg !10793

cond.true497:                                     ; preds = %if.end493
  %192 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10793
  %call498 = call i32 @stv090x_write_reg(%struct.stv090x_state* %192, i32 62014, i8 zeroext 64) #9, !dbg !10793
  br label %cond.end501, !dbg !10793

cond.false499:                                    ; preds = %if.end493
  %193 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10793
  %call500 = call i32 @stv090x_write_reg(%struct.stv090x_state* %193, i32 62526, i8 zeroext 64) #9, !dbg !10793
  br label %cond.end501, !dbg !10793

cond.end501:                                      ; preds = %cond.false499, %cond.true497
  %cond502 = phi i32 [ %call498, %cond.true497 ], [ %call500, %cond.false499 ], !dbg !10793
  %cmp503 = icmp slt i32 %cond502, 0, !dbg !10795
  br i1 %cmp503, label %if.then505, label %if.end506, !dbg !10796

if.then505:                                       ; preds = %cond.end501
  br label %err, !dbg !10797

if.end506:                                        ; preds = %cond.end501
  br label %if.end566, !dbg !10798

if.else507:                                       ; preds = %if.then456
  %194 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10799
  %srate508 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %194, i32 0, i32 19, !dbg !10801
  %195 = load i32, i32* %srate508, align 4, !dbg !10801
  %cmp509 = icmp ult i32 %195, 10000000, !dbg !10802
  br i1 %cmp509, label %if.then511, label %if.else538, !dbg !10803

if.then511:                                       ; preds = %if.else507
  %196 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10804
  %demod512 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %196, i32 0, i32 1, !dbg !10804
  %197 = load i32, i32* %demod512, align 4, !dbg !10804
  %cmp513 = icmp eq i32 %197, 2, !dbg !10804
  br i1 %cmp513, label %cond.true515, label %cond.false517, !dbg !10804

cond.true515:                                     ; preds = %if.then511
  %198 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10804
  %call516 = call i32 @stv090x_write_reg(%struct.stv090x_state* %198, i32 62013, i8 zeroext 76) #9, !dbg !10804
  br label %cond.end519, !dbg !10804

cond.false517:                                    ; preds = %if.then511
  %199 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10804
  %call518 = call i32 @stv090x_write_reg(%struct.stv090x_state* %199, i32 62525, i8 zeroext 76) #9, !dbg !10804
  br label %cond.end519, !dbg !10804

cond.end519:                                      ; preds = %cond.false517, %cond.true515
  %cond520 = phi i32 [ %call516, %cond.true515 ], [ %call518, %cond.false517 ], !dbg !10804
  %cmp521 = icmp slt i32 %cond520, 0, !dbg !10807
  br i1 %cmp521, label %if.then523, label %if.end524, !dbg !10808

if.then523:                                       ; preds = %cond.end519
  br label %err, !dbg !10809

if.end524:                                        ; preds = %cond.end519
  %200 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10810
  %demod525 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %200, i32 0, i32 1, !dbg !10810
  %201 = load i32, i32* %demod525, align 4, !dbg !10810
  %cmp526 = icmp eq i32 %201, 2, !dbg !10810
  br i1 %cmp526, label %cond.true528, label %cond.false530, !dbg !10810

cond.true528:                                     ; preds = %if.end524
  %202 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10810
  %call529 = call i32 @stv090x_write_reg(%struct.stv090x_state* %202, i32 62014, i8 zeroext 32) #9, !dbg !10810
  br label %cond.end532, !dbg !10810

cond.false530:                                    ; preds = %if.end524
  %203 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10810
  %call531 = call i32 @stv090x_write_reg(%struct.stv090x_state* %203, i32 62526, i8 zeroext 32) #9, !dbg !10810
  br label %cond.end532, !dbg !10810

cond.end532:                                      ; preds = %cond.false530, %cond.true528
  %cond533 = phi i32 [ %call529, %cond.true528 ], [ %call531, %cond.false530 ], !dbg !10810
  %cmp534 = icmp slt i32 %cond533, 0, !dbg !10812
  br i1 %cmp534, label %if.then536, label %if.end537, !dbg !10813

if.then536:                                       ; preds = %cond.end532
  br label %err, !dbg !10814

if.end537:                                        ; preds = %cond.end532
  br label %if.end565, !dbg !10815

if.else538:                                       ; preds = %if.else507
  %204 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10816
  %demod539 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %204, i32 0, i32 1, !dbg !10816
  %205 = load i32, i32* %demod539, align 4, !dbg !10816
  %cmp540 = icmp eq i32 %205, 2, !dbg !10816
  br i1 %cmp540, label %cond.true542, label %cond.false544, !dbg !10816

cond.true542:                                     ; preds = %if.else538
  %206 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10816
  %call543 = call i32 @stv090x_write_reg(%struct.stv090x_state* %206, i32 62013, i8 zeroext 75) #9, !dbg !10816
  br label %cond.end546, !dbg !10816

cond.false544:                                    ; preds = %if.else538
  %207 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10816
  %call545 = call i32 @stv090x_write_reg(%struct.stv090x_state* %207, i32 62525, i8 zeroext 75) #9, !dbg !10816
  br label %cond.end546, !dbg !10816

cond.end546:                                      ; preds = %cond.false544, %cond.true542
  %cond547 = phi i32 [ %call543, %cond.true542 ], [ %call545, %cond.false544 ], !dbg !10816
  %cmp548 = icmp slt i32 %cond547, 0, !dbg !10819
  br i1 %cmp548, label %if.then550, label %if.end551, !dbg !10820

if.then550:                                       ; preds = %cond.end546
  br label %err, !dbg !10821

if.end551:                                        ; preds = %cond.end546
  %208 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10822
  %demod552 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %208, i32 0, i32 1, !dbg !10822
  %209 = load i32, i32* %demod552, align 4, !dbg !10822
  %cmp553 = icmp eq i32 %209, 2, !dbg !10822
  br i1 %cmp553, label %cond.true555, label %cond.false557, !dbg !10822

cond.true555:                                     ; preds = %if.end551
  %210 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10822
  %call556 = call i32 @stv090x_write_reg(%struct.stv090x_state* %210, i32 62014, i8 zeroext 32) #9, !dbg !10822
  br label %cond.end559, !dbg !10822

cond.false557:                                    ; preds = %if.end551
  %211 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10822
  %call558 = call i32 @stv090x_write_reg(%struct.stv090x_state* %211, i32 62526, i8 zeroext 32) #9, !dbg !10822
  br label %cond.end559, !dbg !10822

cond.end559:                                      ; preds = %cond.false557, %cond.true555
  %cond560 = phi i32 [ %call556, %cond.true555 ], [ %call558, %cond.false557 ], !dbg !10822
  %cmp561 = icmp slt i32 %cond560, 0, !dbg !10824
  br i1 %cmp561, label %if.then563, label %if.end564, !dbg !10825

if.then563:                                       ; preds = %cond.end559
  br label %err, !dbg !10826

if.end564:                                        ; preds = %cond.end559
  br label %if.end565

if.end565:                                        ; preds = %if.end564, %if.end537
  br label %if.end566

if.end566:                                        ; preds = %if.end565, %if.end506
  br label %if.end600, !dbg !10827

if.else567:                                       ; preds = %if.end451
  %212 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10828
  %srate568 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %212, i32 0, i32 19, !dbg !10831
  %213 = load i32, i32* %srate568, align 4, !dbg !10831
  %cmp569 = icmp ult i32 %213, 10000000, !dbg !10832
  br i1 %cmp569, label %if.then571, label %if.else585, !dbg !10833

if.then571:                                       ; preds = %if.else567
  %214 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10834
  %demod572 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %214, i32 0, i32 1, !dbg !10834
  %215 = load i32, i32* %demod572, align 4, !dbg !10834
  %cmp573 = icmp eq i32 %215, 2, !dbg !10834
  br i1 %cmp573, label %cond.true575, label %cond.false577, !dbg !10834

cond.true575:                                     ; preds = %if.then571
  %216 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10834
  %call576 = call i32 @stv090x_write_reg(%struct.stv090x_state* %216, i32 62013, i8 zeroext -17) #9, !dbg !10834
  br label %cond.end579, !dbg !10834

cond.false577:                                    ; preds = %if.then571
  %217 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10834
  %call578 = call i32 @stv090x_write_reg(%struct.stv090x_state* %217, i32 62525, i8 zeroext -17) #9, !dbg !10834
  br label %cond.end579, !dbg !10834

cond.end579:                                      ; preds = %cond.false577, %cond.true575
  %cond580 = phi i32 [ %call576, %cond.true575 ], [ %call578, %cond.false577 ], !dbg !10834
  %cmp581 = icmp slt i32 %cond580, 0, !dbg !10837
  br i1 %cmp581, label %if.then583, label %if.end584, !dbg !10838

if.then583:                                       ; preds = %cond.end579
  br label %err, !dbg !10839

if.end584:                                        ; preds = %cond.end579
  br label %if.end599, !dbg !10840

if.else585:                                       ; preds = %if.else567
  %218 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10841
  %demod586 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %218, i32 0, i32 1, !dbg !10841
  %219 = load i32, i32* %demod586, align 4, !dbg !10841
  %cmp587 = icmp eq i32 %219, 2, !dbg !10841
  br i1 %cmp587, label %cond.true589, label %cond.false591, !dbg !10841

cond.true589:                                     ; preds = %if.else585
  %220 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10841
  %call590 = call i32 @stv090x_write_reg(%struct.stv090x_state* %220, i32 62013, i8 zeroext -19) #9, !dbg !10841
  br label %cond.end593, !dbg !10841

cond.false591:                                    ; preds = %if.else585
  %221 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10841
  %call592 = call i32 @stv090x_write_reg(%struct.stv090x_state* %221, i32 62525, i8 zeroext -19) #9, !dbg !10841
  br label %cond.end593, !dbg !10841

cond.end593:                                      ; preds = %cond.false591, %cond.true589
  %cond594 = phi i32 [ %call590, %cond.true589 ], [ %call592, %cond.false591 ], !dbg !10841
  %cmp595 = icmp slt i32 %cond594, 0, !dbg !10844
  br i1 %cmp595, label %if.then597, label %if.end598, !dbg !10845

if.then597:                                       ; preds = %cond.end593
  br label %err, !dbg !10846

if.end598:                                        ; preds = %cond.end593
  br label %if.end599

if.end599:                                        ; preds = %if.end598, %if.end584
  br label %if.end600

if.end600:                                        ; preds = %if.end599, %if.end566
  %222 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10847
  %algo601 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %222, i32 0, i32 17, !dbg !10848
  %223 = load i32, i32* %algo601, align 4, !dbg !10848
  switch i32 %223, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb628
  ], !dbg !10849

sw.bb:                                            ; preds = %if.end600
  %224 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10850
  %demod602 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %224, i32 0, i32 1, !dbg !10850
  %225 = load i32, i32* %demod602, align 4, !dbg !10850
  %cmp603 = icmp eq i32 %225, 2, !dbg !10850
  br i1 %cmp603, label %cond.true605, label %cond.false607, !dbg !10850

cond.true605:                                     ; preds = %sw.bb
  %226 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10850
  %call606 = call i32 @stv090x_write_reg(%struct.stv090x_state* %226, i32 61974, i8 zeroext 31) #9, !dbg !10850
  br label %cond.end609, !dbg !10850

cond.false607:                                    ; preds = %sw.bb
  %227 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10850
  %call608 = call i32 @stv090x_write_reg(%struct.stv090x_state* %227, i32 62486, i8 zeroext 31) #9, !dbg !10850
  br label %cond.end609, !dbg !10850

cond.end609:                                      ; preds = %cond.false607, %cond.true605
  %cond610 = phi i32 [ %call606, %cond.true605 ], [ %call608, %cond.false607 ], !dbg !10850
  %cmp611 = icmp slt i32 %cond610, 0, !dbg !10853
  br i1 %cmp611, label %if.then613, label %if.end614, !dbg !10854

if.then613:                                       ; preds = %cond.end609
  br label %err, !dbg !10855

if.end614:                                        ; preds = %cond.end609
  %228 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10856
  %demod615 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %228, i32 0, i32 1, !dbg !10856
  %229 = load i32, i32* %demod615, align 4, !dbg !10856
  %cmp616 = icmp eq i32 %229, 2, !dbg !10856
  br i1 %cmp616, label %cond.true618, label %cond.false620, !dbg !10856

cond.true618:                                     ; preds = %if.end614
  %230 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10856
  %call619 = call i32 @stv090x_write_reg(%struct.stv090x_state* %230, i32 61974, i8 zeroext 24) #9, !dbg !10856
  br label %cond.end622, !dbg !10856

cond.false620:                                    ; preds = %if.end614
  %231 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10856
  %call621 = call i32 @stv090x_write_reg(%struct.stv090x_state* %231, i32 62486, i8 zeroext 24) #9, !dbg !10856
  br label %cond.end622, !dbg !10856

cond.end622:                                      ; preds = %cond.false620, %cond.true618
  %cond623 = phi i32 [ %call619, %cond.true618 ], [ %call621, %cond.false620 ], !dbg !10856
  %cmp624 = icmp slt i32 %cond623, 0, !dbg !10858
  br i1 %cmp624, label %if.then626, label %if.end627, !dbg !10859

if.then626:                                       ; preds = %cond.end622
  br label %err, !dbg !10860

if.end627:                                        ; preds = %cond.end622
  br label %sw.epilog, !dbg !10861

sw.bb628:                                         ; preds = %if.end600
  %232 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10862
  %demod629 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %232, i32 0, i32 1, !dbg !10862
  %233 = load i32, i32* %demod629, align 4, !dbg !10862
  %cmp630 = icmp eq i32 %233, 2, !dbg !10862
  br i1 %cmp630, label %cond.true632, label %cond.false634, !dbg !10862

cond.true632:                                     ; preds = %sw.bb628
  %234 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10862
  %call633 = call i32 @stv090x_write_reg(%struct.stv090x_state* %234, i32 61974, i8 zeroext 31) #9, !dbg !10862
  br label %cond.end636, !dbg !10862

cond.false634:                                    ; preds = %sw.bb628
  %235 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10862
  %call635 = call i32 @stv090x_write_reg(%struct.stv090x_state* %235, i32 62486, i8 zeroext 31) #9, !dbg !10862
  br label %cond.end636, !dbg !10862

cond.end636:                                      ; preds = %cond.false634, %cond.true632
  %cond637 = phi i32 [ %call633, %cond.true632 ], [ %call635, %cond.false634 ], !dbg !10862
  %cmp638 = icmp slt i32 %cond637, 0, !dbg !10864
  br i1 %cmp638, label %if.then640, label %if.end641, !dbg !10865

if.then640:                                       ; preds = %cond.end636
  br label %err, !dbg !10866

if.end641:                                        ; preds = %cond.end636
  %236 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10867
  %demod642 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %236, i32 0, i32 1, !dbg !10867
  %237 = load i32, i32* %demod642, align 4, !dbg !10867
  %cmp643 = icmp eq i32 %237, 2, !dbg !10867
  br i1 %cmp643, label %cond.true645, label %cond.false647, !dbg !10867

cond.true645:                                     ; preds = %if.end641
  %238 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10867
  %call646 = call i32 @stv090x_write_reg(%struct.stv090x_state* %238, i32 61974, i8 zeroext 21) #9, !dbg !10867
  br label %cond.end649, !dbg !10867

cond.false647:                                    ; preds = %if.end641
  %239 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10867
  %call648 = call i32 @stv090x_write_reg(%struct.stv090x_state* %239, i32 62486, i8 zeroext 21) #9, !dbg !10867
  br label %cond.end649, !dbg !10867

cond.end649:                                      ; preds = %cond.false647, %cond.true645
  %cond650 = phi i32 [ %call646, %cond.true645 ], [ %call648, %cond.false647 ], !dbg !10867
  %cmp651 = icmp slt i32 %cond650, 0, !dbg !10869
  br i1 %cmp651, label %if.then653, label %if.end654, !dbg !10870

if.then653:                                       ; preds = %cond.end649
  br label %err, !dbg !10871

if.end654:                                        ; preds = %cond.end649
  br label %sw.epilog, !dbg !10872

sw.default:                                       ; preds = %if.end600
  br label %sw.epilog, !dbg !10873

sw.epilog:                                        ; preds = %sw.default, %if.end654, %if.end627
  store i32 0, i32* %retval, align 4, !dbg !10874
  br label %return, !dbg !10874

err:                                              ; preds = %if.then653, %if.then640, %if.then626, %if.then613, %if.then597, %if.then583, %if.then563, %if.then550, %if.then536, %if.then523, %if.then505, %if.then491, %if.then477, %if.then450, %if.then437, %if.then412, %if.then386, %if.then373, %if.then360, %if.then345, %if.then332, %if.then309, %if.then296, %if.then278, %if.then265, %if.then251, %if.then232, %if.then209, %if.then190, %if.then121, %if.then108, %if.then95, %if.then82, %if.then69, %if.then56, %if.then43, %if.then30, %if.then
  call void @llvm.dbg.label(metadata !10875), !dbg !10876
  br label %do.body, !dbg !10877

do.body:                                          ; preds = %err
  %240 = load i32, i32* @verbose, align 4, !dbg !10878
  %cmp655 = icmp ugt i32 %240, 0, !dbg !10878
  br i1 %cmp655, label %land.lhs.true, label %if.else661, !dbg !10878

land.lhs.true:                                    ; preds = %do.body
  %241 = load i32, i32* @verbose, align 4, !dbg !10878
  %cmp657 = icmp ugt i32 %241, 0, !dbg !10878
  br i1 %cmp657, label %if.then659, label %if.else661, !dbg !10883

if.then659:                                       ; preds = %land.lhs.true
  %call660 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_start_search, i64 0, i64 0)) #13, !dbg !10878
  br label %if.end688, !dbg !10878

if.else661:                                       ; preds = %land.lhs.true, %do.body
  %242 = load i32, i32* @verbose, align 4, !dbg !10884
  %cmp662 = icmp ugt i32 %242, 1, !dbg !10884
  br i1 %cmp662, label %land.lhs.true664, label %if.else669, !dbg !10884

land.lhs.true664:                                 ; preds = %if.else661
  %243 = load i32, i32* @verbose, align 4, !dbg !10884
  %cmp665 = icmp ugt i32 %243, 0, !dbg !10884
  br i1 %cmp665, label %if.then667, label %if.else669, !dbg !10878

if.then667:                                       ; preds = %land.lhs.true664
  %call668 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_start_search, i64 0, i64 0)) #13, !dbg !10884
  br label %if.end687, !dbg !10884

if.else669:                                       ; preds = %land.lhs.true664, %if.else661
  %244 = load i32, i32* @verbose, align 4, !dbg !10886
  %cmp670 = icmp ugt i32 %244, 2, !dbg !10886
  br i1 %cmp670, label %land.lhs.true672, label %if.else677, !dbg !10886

land.lhs.true672:                                 ; preds = %if.else669
  %245 = load i32, i32* @verbose, align 4, !dbg !10886
  %cmp673 = icmp ugt i32 %245, 0, !dbg !10886
  br i1 %cmp673, label %if.then675, label %if.else677, !dbg !10884

if.then675:                                       ; preds = %land.lhs.true672
  %call676 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_start_search, i64 0, i64 0)) #13, !dbg !10886
  br label %if.end686, !dbg !10886

if.else677:                                       ; preds = %land.lhs.true672, %if.else669
  %246 = load i32, i32* @verbose, align 4, !dbg !10888
  %cmp678 = icmp ugt i32 %246, 3, !dbg !10888
  br i1 %cmp678, label %land.lhs.true680, label %if.end685, !dbg !10888

land.lhs.true680:                                 ; preds = %if.else677
  %247 = load i32, i32* @verbose, align 4, !dbg !10888
  %cmp681 = icmp ugt i32 %247, 0, !dbg !10888
  br i1 %cmp681, label %if.then683, label %if.end685, !dbg !10886

if.then683:                                       ; preds = %land.lhs.true680
  %call684 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_start_search, i64 0, i64 0)) #13, !dbg !10888
  br label %if.end685, !dbg !10888

if.end685:                                        ; preds = %if.then683, %land.lhs.true680, %if.else677
  br label %if.end686

if.end686:                                        ; preds = %if.end685, %if.then675
  br label %if.end687

if.end687:                                        ; preds = %if.end686, %if.then667
  br label %if.end688

if.end688:                                        ; preds = %if.end687, %if.then659
  br label %do.end, !dbg !10890

do.end:                                           ; preds = %if.end688
  store i32 -1, i32* %retval, align 4, !dbg !10891
  br label %return, !dbg !10891

return:                                           ; preds = %do.end, %sw.epilog
  %248 = load i32, i32* %retval, align 4, !dbg !10892
  ret i32 %248, !dbg !10892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_blind_search(%struct.stv090x_state* %state) #0 !dbg !10893 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %agc2 = alloca i32, align 4
  %reg = alloca i32, align 4
  %srate_coarse = alloca i32, align 4
  %cpt_fail = alloca i32, align 4
  %agc2_ovflw = alloca i32, align 4
  %i = alloca i32, align 4
  %k_ref = alloca i8, align 1
  %k_max = alloca i8, align 1
  %k_min = alloca i8, align 1
  %coarse_fail = alloca i32, align 4
  %lock = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !10894, metadata !DIExpression()), !dbg !10895
  call void @llvm.dbg.declare(metadata i32* %agc2, metadata !10896, metadata !DIExpression()), !dbg !10897
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !10898, metadata !DIExpression()), !dbg !10899
  call void @llvm.dbg.declare(metadata i32* %srate_coarse, metadata !10900, metadata !DIExpression()), !dbg !10901
  call void @llvm.dbg.declare(metadata i32* %cpt_fail, metadata !10902, metadata !DIExpression()), !dbg !10903
  call void @llvm.dbg.declare(metadata i32* %agc2_ovflw, metadata !10904, metadata !DIExpression()), !dbg !10905
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10906, metadata !DIExpression()), !dbg !10907
  call void @llvm.dbg.declare(metadata i8* %k_ref, metadata !10908, metadata !DIExpression()), !dbg !10909
  call void @llvm.dbg.declare(metadata i8* %k_max, metadata !10910, metadata !DIExpression()), !dbg !10911
  call void @llvm.dbg.declare(metadata i8* %k_min, metadata !10912, metadata !DIExpression()), !dbg !10913
  call void @llvm.dbg.declare(metadata i32* %coarse_fail, metadata !10914, metadata !DIExpression()), !dbg !10915
  store i32 0, i32* %coarse_fail, align 4, !dbg !10915
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !10916, metadata !DIExpression()), !dbg !10917
  store i8 110, i8* %k_max, align 1, !dbg !10918
  store i8 10, i8* %k_min, align 1, !dbg !10919
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10920
  %call = call i32 @stv090x_get_agc2_min_level(%struct.stv090x_state* %0) #9, !dbg !10921
  store i32 %call, i32* %agc2, align 4, !dbg !10922
  %1 = load i32, i32* %agc2, align 4, !dbg !10923
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10925
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 3, !dbg !10925
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !10925
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 5, !dbg !10925
  %4 = load i32, i32* %dev_ver, align 4, !dbg !10925
  %cmp = icmp ule i32 %4, 32, !dbg !10925
  %5 = zext i1 %cmp to i64, !dbg !10925
  %cond = select i1 %cmp, i32 700, i32 1400, !dbg !10925
  %cmp1 = icmp ugt i32 %1, %cond, !dbg !10926
  br i1 %cmp1, label %if.then, label %if.else, !dbg !10927

if.then:                                          ; preds = %entry
  store i32 0, i32* %lock, align 4, !dbg !10928
  br label %if.end154, !dbg !10930

if.else:                                          ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10931
  %internal2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 3, !dbg !10934
  %7 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal2, align 8, !dbg !10934
  %dev_ver3 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %7, i32 0, i32 5, !dbg !10935
  %8 = load i32, i32* %dev_ver3, align 4, !dbg !10935
  %cmp4 = icmp ule i32 %8, 32, !dbg !10936
  br i1 %cmp4, label %if.then5, label %if.else12, !dbg !10937

if.then5:                                         ; preds = %if.else
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10938
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 1, !dbg !10938
  %10 = load i32, i32* %demod, align 4, !dbg !10938
  %cmp6 = icmp eq i32 %10, 2, !dbg !10938
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !10938

cond.true:                                        ; preds = %if.then5
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10938
  %call7 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62008, i8 zeroext -60) #9, !dbg !10938
  br label %cond.end, !dbg !10938

cond.false:                                       ; preds = %if.then5
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10938
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 62520, i8 zeroext -60) #9, !dbg !10938
  br label %cond.end, !dbg !10938

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond9 = phi i32 [ %call7, %cond.true ], [ %call8, %cond.false ], !dbg !10938
  %cmp10 = icmp slt i32 %cond9, 0, !dbg !10941
  br i1 %cmp10, label %if.then11, label %if.end, !dbg !10942

if.then11:                                        ; preds = %cond.end
  br label %err, !dbg !10943

if.end:                                           ; preds = %cond.end
  br label %if.end24, !dbg !10944

if.else12:                                        ; preds = %if.else
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10945
  %demod13 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 1, !dbg !10945
  %14 = load i32, i32* %demod13, align 4, !dbg !10945
  %cmp14 = icmp eq i32 %14, 2, !dbg !10945
  br i1 %cmp14, label %cond.true15, label %cond.false17, !dbg !10945

cond.true15:                                      ; preds = %if.else12
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10945
  %call16 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62008, i8 zeroext 6) #9, !dbg !10945
  br label %cond.end19, !dbg !10945

cond.false17:                                     ; preds = %if.else12
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10945
  %call18 = call i32 @stv090x_write_reg(%struct.stv090x_state* %16, i32 62520, i8 zeroext 6) #9, !dbg !10945
  br label %cond.end19, !dbg !10945

cond.end19:                                       ; preds = %cond.false17, %cond.true15
  %cond20 = phi i32 [ %call16, %cond.true15 ], [ %call18, %cond.false17 ], !dbg !10945
  %cmp21 = icmp slt i32 %cond20, 0, !dbg !10948
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10949

if.then22:                                        ; preds = %cond.end19
  br label %err, !dbg !10950

if.end23:                                         ; preds = %cond.end19
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.end
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10951
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !10951
  %18 = load i32, i32* %demod25, align 4, !dbg !10951
  %cmp26 = icmp eq i32 %18, 2, !dbg !10951
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !10951

cond.true27:                                      ; preds = %if.end24
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10951
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62034, i8 zeroext 68) #9, !dbg !10951
  br label %cond.end31, !dbg !10951

cond.false29:                                     ; preds = %if.end24
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10951
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62546, i8 zeroext 68) #9, !dbg !10951
  br label %cond.end31, !dbg !10951

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !10951
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !10953
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !10954

if.then34:                                        ; preds = %cond.end31
  br label %err, !dbg !10955

if.end35:                                         ; preds = %cond.end31
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10956
  %internal36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 3, !dbg !10958
  %22 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal36, align 8, !dbg !10958
  %dev_ver37 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %22, i32 0, i32 5, !dbg !10959
  %23 = load i32, i32* %dev_ver37, align 4, !dbg !10959
  %cmp38 = icmp uge i32 %23, 32, !dbg !10960
  br i1 %cmp38, label %if.then39, label %if.end84, !dbg !10961

if.then39:                                        ; preds = %if.end35
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10962
  %demod40 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !10962
  %25 = load i32, i32* %demod40, align 4, !dbg !10962
  %cmp41 = icmp eq i32 %25, 2, !dbg !10962
  br i1 %cmp41, label %cond.true42, label %cond.false44, !dbg !10962

cond.true42:                                      ; preds = %if.then39
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10962
  %call43 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62063, i8 zeroext 65) #9, !dbg !10962
  br label %cond.end46, !dbg !10962

cond.false44:                                     ; preds = %if.then39
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10962
  %call45 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62575, i8 zeroext 65) #9, !dbg !10962
  br label %cond.end46, !dbg !10962

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi i32 [ %call43, %cond.true42 ], [ %call45, %cond.false44 ], !dbg !10962
  %cmp48 = icmp slt i32 %cond47, 0, !dbg !10965
  br i1 %cmp48, label %if.then49, label %if.end50, !dbg !10966

if.then49:                                        ; preds = %cond.end46
  br label %err, !dbg !10967

if.end50:                                         ; preds = %cond.end46
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10968
  %demod51 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !10968
  %29 = load i32, i32* %demod51, align 4, !dbg !10968
  %cmp52 = icmp eq i32 %29, 2, !dbg !10968
  br i1 %cmp52, label %cond.true53, label %cond.false55, !dbg !10968

cond.true53:                                      ; preds = %if.end50
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10968
  %call54 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62168, i8 zeroext 65) #9, !dbg !10968
  br label %cond.end57, !dbg !10968

cond.false55:                                     ; preds = %if.end50
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10968
  %call56 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62680, i8 zeroext 65) #9, !dbg !10968
  br label %cond.end57, !dbg !10968

cond.end57:                                       ; preds = %cond.false55, %cond.true53
  %cond58 = phi i32 [ %call54, %cond.true53 ], [ %call56, %cond.false55 ], !dbg !10968
  %cmp59 = icmp slt i32 %cond58, 0, !dbg !10970
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !10971

if.then60:                                        ; preds = %cond.end57
  br label %err, !dbg !10972

if.end61:                                         ; preds = %cond.end57
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10973
  %demod62 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !10973
  %33 = load i32, i32* %demod62, align 4, !dbg !10973
  %cmp63 = icmp eq i32 %33, 2, !dbg !10973
  br i1 %cmp63, label %cond.true64, label %cond.false66, !dbg !10973

cond.true64:                                      ; preds = %if.end61
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10973
  %call65 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62258, i8 zeroext -126) #9, !dbg !10973
  br label %cond.end68, !dbg !10973

cond.false66:                                     ; preds = %if.end61
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10973
  %call67 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62770, i8 zeroext -126) #9, !dbg !10973
  br label %cond.end68, !dbg !10973

cond.end68:                                       ; preds = %cond.false66, %cond.true64
  %cond69 = phi i32 [ %call65, %cond.true64 ], [ %call67, %cond.false66 ], !dbg !10973
  %cmp70 = icmp slt i32 %cond69, 0, !dbg !10975
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !10976

if.then71:                                        ; preds = %cond.end68
  br label %err, !dbg !10977

if.end72:                                         ; preds = %cond.end68
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10978
  %demod73 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !10978
  %37 = load i32, i32* %demod73, align 4, !dbg !10978
  %cmp74 = icmp eq i32 %37, 2, !dbg !10978
  br i1 %cmp74, label %cond.true75, label %cond.false77, !dbg !10978

cond.true75:                                      ; preds = %if.end72
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10978
  %call76 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62269, i8 zeroext 0) #9, !dbg !10978
  br label %cond.end79, !dbg !10978

cond.false77:                                     ; preds = %if.end72
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10978
  %call78 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62781, i8 zeroext 0) #9, !dbg !10978
  br label %cond.end79, !dbg !10978

cond.end79:                                       ; preds = %cond.false77, %cond.true75
  %cond80 = phi i32 [ %call76, %cond.true75 ], [ %call78, %cond.false77 ], !dbg !10978
  %cmp81 = icmp slt i32 %cond80, 0, !dbg !10980
  br i1 %cmp81, label %if.then82, label %if.end83, !dbg !10981

if.then82:                                        ; preds = %cond.end79
  br label %err, !dbg !10982

if.end83:                                         ; preds = %cond.end79
  br label %if.end84, !dbg !10983

if.end84:                                         ; preds = %if.end83, %if.end35
  %40 = load i8, i8* %k_max, align 1, !dbg !10984
  store i8 %40, i8* %k_ref, align 1, !dbg !10985
  br label %do.body, !dbg !10986

do.body:                                          ; preds = %land.end, %if.end84
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10987
  %demod85 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %41, i32 0, i32 1, !dbg !10987
  %42 = load i32, i32* %demod85, align 4, !dbg !10987
  %cmp86 = icmp eq i32 %42, 2, !dbg !10987
  br i1 %cmp86, label %cond.true87, label %cond.false89, !dbg !10987

cond.true87:                                      ; preds = %do.body
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10987
  %44 = load i8, i8* %k_ref, align 1, !dbg !10987
  %call88 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62040, i8 zeroext %44) #9, !dbg !10987
  br label %cond.end91, !dbg !10987

cond.false89:                                     ; preds = %do.body
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10987
  %46 = load i8, i8* %k_ref, align 1, !dbg !10987
  %call90 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62552, i8 zeroext %46) #9, !dbg !10987
  br label %cond.end91, !dbg !10987

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i32 [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !10987
  %cmp93 = icmp slt i32 %cond92, 0, !dbg !10990
  br i1 %cmp93, label %if.then94, label %if.end95, !dbg !10991

if.then94:                                        ; preds = %cond.end91
  br label %err, !dbg !10992

if.end95:                                         ; preds = %cond.end91
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10993
  %call96 = call i32 @stv090x_srate_srch_coarse(%struct.stv090x_state* %47) #9, !dbg !10995
  %cmp97 = icmp ne i32 %call96, 0, !dbg !10996
  br i1 %cmp97, label %if.then98, label %if.else105, !dbg !10997

if.then98:                                        ; preds = %if.end95
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !10998
  %call99 = call i32 @stv090x_srate_srch_fine(%struct.stv090x_state* %48) #9, !dbg !11000
  store i32 %call99, i32* %srate_coarse, align 4, !dbg !11001
  %49 = load i32, i32* %srate_coarse, align 4, !dbg !11002
  %cmp100 = icmp ne i32 %49, 0, !dbg !11004
  br i1 %cmp100, label %if.then101, label %if.else103, !dbg !11005

if.then101:                                       ; preds = %if.then98
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11006
  call void @stv090x_get_lock_tmg(%struct.stv090x_state* %50) #9, !dbg !11008
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11009
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11010
  %DemodTimeout = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 22, !dbg !11011
  %53 = load i32, i32* %DemodTimeout, align 8, !dbg !11011
  %call102 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %51, i32 %53) #9, !dbg !11012
  store i32 %call102, i32* %lock, align 4, !dbg !11013
  br label %if.end104, !dbg !11014

if.else103:                                       ; preds = %if.then98
  store i32 0, i32* %lock, align 4, !dbg !11015
  br label %if.end104

if.end104:                                        ; preds = %if.else103, %if.then101
  br label %if.end146, !dbg !11017

if.else105:                                       ; preds = %if.end95
  store i32 0, i32* %cpt_fail, align 4, !dbg !11018
  store i32 0, i32* %agc2_ovflw, align 4, !dbg !11020
  store i32 0, i32* %i, align 4, !dbg !11021
  br label %for.cond, !dbg !11023

for.cond:                                         ; preds = %for.inc, %if.else105
  %54 = load i32, i32* %i, align 4, !dbg !11024
  %cmp106 = icmp slt i32 %54, 10, !dbg !11026
  br i1 %cmp106, label %for.body, label %for.end, !dbg !11027

for.body:                                         ; preds = %for.cond
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11028
  %demod107 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %55, i32 0, i32 1, !dbg !11028
  %56 = load i32, i32* %demod107, align 4, !dbg !11028
  %cmp108 = icmp eq i32 %56, 2, !dbg !11028
  br i1 %cmp108, label %cond.true109, label %cond.false111, !dbg !11028

cond.true109:                                     ; preds = %for.body
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11028
  %call110 = call i32 @stv090x_read_reg(%struct.stv090x_state* %57, i32 62006) #9, !dbg !11028
  br label %cond.end113, !dbg !11028

cond.false111:                                    ; preds = %for.body
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11028
  %call112 = call i32 @stv090x_read_reg(%struct.stv090x_state* %58, i32 62518) #9, !dbg !11028
  br label %cond.end113, !dbg !11028

cond.end113:                                      ; preds = %cond.false111, %cond.true109
  %cond114 = phi i32 [ %call110, %cond.true109 ], [ %call112, %cond.false111 ], !dbg !11028
  %shl = shl i32 %cond114, 8, !dbg !11030
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11031
  %demod115 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %59, i32 0, i32 1, !dbg !11031
  %60 = load i32, i32* %demod115, align 4, !dbg !11031
  %cmp116 = icmp eq i32 %60, 2, !dbg !11031
  br i1 %cmp116, label %cond.true117, label %cond.false119, !dbg !11031

cond.true117:                                     ; preds = %cond.end113
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11031
  %call118 = call i32 @stv090x_read_reg(%struct.stv090x_state* %61, i32 62007) #9, !dbg !11031
  br label %cond.end121, !dbg !11031

cond.false119:                                    ; preds = %cond.end113
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11031
  %call120 = call i32 @stv090x_read_reg(%struct.stv090x_state* %62, i32 62519) #9, !dbg !11031
  br label %cond.end121, !dbg !11031

cond.end121:                                      ; preds = %cond.false119, %cond.true117
  %cond122 = phi i32 [ %call118, %cond.true117 ], [ %call120, %cond.false119 ], !dbg !11031
  %or = or i32 %shl, %cond122, !dbg !11032
  %63 = load i32, i32* %agc2, align 4, !dbg !11033
  %add = add i32 %63, %or, !dbg !11033
  store i32 %add, i32* %agc2, align 4, !dbg !11033
  %64 = load i32, i32* %agc2, align 4, !dbg !11034
  %cmp123 = icmp uge i32 %64, 65280, !dbg !11036
  br i1 %cmp123, label %if.then124, label %if.end125, !dbg !11037

if.then124:                                       ; preds = %cond.end121
  %65 = load i32, i32* %agc2_ovflw, align 4, !dbg !11038
  %inc = add i32 %65, 1, !dbg !11038
  store i32 %inc, i32* %agc2_ovflw, align 4, !dbg !11038
  br label %if.end125, !dbg !11039

if.end125:                                        ; preds = %if.then124, %cond.end121
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11040
  %demod126 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %66, i32 0, i32 1, !dbg !11040
  %67 = load i32, i32* %demod126, align 4, !dbg !11040
  %cmp127 = icmp eq i32 %67, 2, !dbg !11040
  br i1 %cmp127, label %cond.true128, label %cond.false130, !dbg !11040

cond.true128:                                     ; preds = %if.end125
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11040
  %call129 = call i32 @stv090x_read_reg(%struct.stv090x_state* %68, i32 61971) #9, !dbg !11040
  br label %cond.end132, !dbg !11040

cond.false130:                                    ; preds = %if.end125
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11040
  %call131 = call i32 @stv090x_read_reg(%struct.stv090x_state* %69, i32 62483) #9, !dbg !11040
  br label %cond.end132, !dbg !11040

cond.end132:                                      ; preds = %cond.false130, %cond.true128
  %cond133 = phi i32 [ %call129, %cond.true128 ], [ %call131, %cond.false130 ], !dbg !11040
  store i32 %cond133, i32* %reg, align 4, !dbg !11041
  %70 = load i32, i32* %reg, align 4, !dbg !11042
  %shr = lshr i32 %70, 1, !dbg !11042
  %and = and i32 %shr, 1, !dbg !11042
  %cmp134 = icmp eq i32 %and, 1, !dbg !11044
  br i1 %cmp134, label %land.lhs.true, label %if.end140, !dbg !11045

land.lhs.true:                                    ; preds = %cond.end132
  %71 = load i32, i32* %reg, align 4, !dbg !11046
  %shr135 = lshr i32 %71, 7, !dbg !11046
  %and136 = and i32 %shr135, 1, !dbg !11046
  %cmp137 = icmp eq i32 %and136, 1, !dbg !11047
  br i1 %cmp137, label %if.then138, label %if.end140, !dbg !11048

if.then138:                                       ; preds = %land.lhs.true
  %72 = load i32, i32* %cpt_fail, align 4, !dbg !11049
  %inc139 = add i32 %72, 1, !dbg !11049
  store i32 %inc139, i32* %cpt_fail, align 4, !dbg !11049
  br label %if.end140, !dbg !11050

if.end140:                                        ; preds = %if.then138, %land.lhs.true, %cond.end132
  br label %for.inc, !dbg !11051

for.inc:                                          ; preds = %if.end140
  %73 = load i32, i32* %i, align 4, !dbg !11052
  %inc141 = add i32 %73, 1, !dbg !11052
  store i32 %inc141, i32* %i, align 4, !dbg !11052
  br label %for.cond, !dbg !11053, !llvm.loop !11054

for.end:                                          ; preds = %for.cond
  %74 = load i32, i32* %cpt_fail, align 4, !dbg !11056
  %cmp142 = icmp sgt i32 %74, 7, !dbg !11058
  br i1 %cmp142, label %if.then144, label %lor.lhs.false, !dbg !11059

lor.lhs.false:                                    ; preds = %for.end
  %75 = load i32, i32* %agc2_ovflw, align 4, !dbg !11060
  %cmp143 = icmp sgt i32 %75, 7, !dbg !11061
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !11062

if.then144:                                       ; preds = %lor.lhs.false, %for.end
  store i32 1, i32* %coarse_fail, align 4, !dbg !11063
  br label %if.end145, !dbg !11064

if.end145:                                        ; preds = %if.then144, %lor.lhs.false
  store i32 0, i32* %lock, align 4, !dbg !11065
  br label %if.end146

if.end146:                                        ; preds = %if.end145, %if.end104
  %76 = load i8, i8* %k_ref, align 1, !dbg !11066
  %conv = zext i8 %76 to i32, !dbg !11066
  %sub = sub i32 %conv, 20, !dbg !11066
  %conv147 = trunc i32 %sub to i8, !dbg !11066
  store i8 %conv147, i8* %k_ref, align 1, !dbg !11066
  br label %do.cond, !dbg !11067

do.cond:                                          ; preds = %if.end146
  %77 = load i8, i8* %k_ref, align 1, !dbg !11068
  %conv148 = zext i8 %77 to i32, !dbg !11068
  %78 = load i8, i8* %k_min, align 1, !dbg !11069
  %conv149 = zext i8 %78 to i32, !dbg !11069
  %cmp150 = icmp sge i32 %conv148, %conv149, !dbg !11070
  br i1 %cmp150, label %land.lhs.true152, label %land.end, !dbg !11071

land.lhs.true152:                                 ; preds = %do.cond
  %79 = load i32, i32* %lock, align 4, !dbg !11072
  %tobool = icmp ne i32 %79, 0, !dbg !11072
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !11073

land.rhs:                                         ; preds = %land.lhs.true152
  %80 = load i32, i32* %coarse_fail, align 4, !dbg !11074
  %tobool153 = icmp ne i32 %80, 0, !dbg !11075
  %lnot = xor i1 %tobool153, true, !dbg !11075
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true152, %do.cond
  %81 = phi i1 [ false, %land.lhs.true152 ], [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !11076
  br i1 %81, label %do.body, label %do.end, !dbg !11067, !llvm.loop !11077

do.end:                                           ; preds = %land.end
  br label %if.end154

if.end154:                                        ; preds = %do.end, %if.then
  %82 = load i32, i32* %lock, align 4, !dbg !11079
  store i32 %82, i32* %retval, align 4, !dbg !11080
  br label %return, !dbg !11080

err:                                              ; preds = %if.then94, %if.then82, %if.then71, %if.then60, %if.then49, %if.then34, %if.then22, %if.then11
  call void @llvm.dbg.label(metadata !11081), !dbg !11082
  br label %do.body155, !dbg !11083

do.body155:                                       ; preds = %err
  %83 = load i32, i32* @verbose, align 4, !dbg !11084
  %cmp156 = icmp ugt i32 %83, 0, !dbg !11084
  br i1 %cmp156, label %land.lhs.true158, label %if.else163, !dbg !11084

land.lhs.true158:                                 ; preds = %do.body155
  %84 = load i32, i32* @verbose, align 4, !dbg !11084
  %cmp159 = icmp ugt i32 %84, 0, !dbg !11084
  br i1 %cmp159, label %if.then161, label %if.else163, !dbg !11089

if.then161:                                       ; preds = %land.lhs.true158
  %call162 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_blind_search, i64 0, i64 0)) #13, !dbg !11084
  br label %if.end190, !dbg !11084

if.else163:                                       ; preds = %land.lhs.true158, %do.body155
  %85 = load i32, i32* @verbose, align 4, !dbg !11090
  %cmp164 = icmp ugt i32 %85, 1, !dbg !11090
  br i1 %cmp164, label %land.lhs.true166, label %if.else171, !dbg !11090

land.lhs.true166:                                 ; preds = %if.else163
  %86 = load i32, i32* @verbose, align 4, !dbg !11090
  %cmp167 = icmp ugt i32 %86, 0, !dbg !11090
  br i1 %cmp167, label %if.then169, label %if.else171, !dbg !11084

if.then169:                                       ; preds = %land.lhs.true166
  %call170 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_blind_search, i64 0, i64 0)) #13, !dbg !11090
  br label %if.end189, !dbg !11090

if.else171:                                       ; preds = %land.lhs.true166, %if.else163
  %87 = load i32, i32* @verbose, align 4, !dbg !11092
  %cmp172 = icmp ugt i32 %87, 2, !dbg !11092
  br i1 %cmp172, label %land.lhs.true174, label %if.else179, !dbg !11092

land.lhs.true174:                                 ; preds = %if.else171
  %88 = load i32, i32* @verbose, align 4, !dbg !11092
  %cmp175 = icmp ugt i32 %88, 0, !dbg !11092
  br i1 %cmp175, label %if.then177, label %if.else179, !dbg !11090

if.then177:                                       ; preds = %land.lhs.true174
  %call178 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_blind_search, i64 0, i64 0)) #13, !dbg !11092
  br label %if.end188, !dbg !11092

if.else179:                                       ; preds = %land.lhs.true174, %if.else171
  %89 = load i32, i32* @verbose, align 4, !dbg !11094
  %cmp180 = icmp ugt i32 %89, 3, !dbg !11094
  br i1 %cmp180, label %land.lhs.true182, label %if.end187, !dbg !11094

land.lhs.true182:                                 ; preds = %if.else179
  %90 = load i32, i32* @verbose, align 4, !dbg !11094
  %cmp183 = icmp ugt i32 %90, 0, !dbg !11094
  br i1 %cmp183, label %if.then185, label %if.end187, !dbg !11092

if.then185:                                       ; preds = %land.lhs.true182
  %call186 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_blind_search, i64 0, i64 0)) #13, !dbg !11094
  br label %if.end187, !dbg !11094

if.end187:                                        ; preds = %if.then185, %land.lhs.true182, %if.else179
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %if.then177
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.then169
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then161
  br label %do.end192, !dbg !11096

do.end192:                                        ; preds = %if.end190
  store i32 -1, i32* %retval, align 4, !dbg !11097
  br label %return, !dbg !11097

return:                                           ; preds = %do.end192, %if.end154
  %91 = load i32, i32* %retval, align 4, !dbg !11098
  ret i32 %91, !dbg !11098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_coldlock(%struct.stv090x_state* %state, i32 %timeout_dmd) #0 !dbg !11099 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %timeout_dmd.addr = alloca i32, align 4
  %fe = alloca %struct.dvb_frontend*, align 8
  %reg = alloca i32, align 4
  %car_step = alloca i32, align 4
  %steps = alloca i32, align 4
  %cur_step = alloca i32, align 4
  %dir = alloca i32, align 4
  %freq = alloca i32, align 4
  %timeout_lock = alloca i32, align 4
  %lock = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !11102, metadata !DIExpression()), !dbg !11103
  store i32 %timeout_dmd, i32* %timeout_dmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout_dmd.addr, metadata !11104, metadata !DIExpression()), !dbg !11105
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe, metadata !11106, metadata !DIExpression()), !dbg !11107
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11108
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 6, !dbg !11109
  store %struct.dvb_frontend* %frontend, %struct.dvb_frontend** %fe, align 8, !dbg !11107
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11110, metadata !DIExpression()), !dbg !11111
  call void @llvm.dbg.declare(metadata i32* %car_step, metadata !11112, metadata !DIExpression()), !dbg !11113
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !11114, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.declare(metadata i32* %cur_step, metadata !11116, metadata !DIExpression()), !dbg !11117
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !11118, metadata !DIExpression()), !dbg !11119
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !11120, metadata !DIExpression()), !dbg !11121
  call void @llvm.dbg.declare(metadata i32* %timeout_lock, metadata !11122, metadata !DIExpression()), !dbg !11123
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !11124, metadata !DIExpression()), !dbg !11125
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11126
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 19, !dbg !11128
  %2 = load i32, i32* %srate, align 4, !dbg !11128
  %cmp = icmp uge i32 %2, 10000000, !dbg !11129
  br i1 %cmp, label %if.then, label %if.else, !dbg !11130

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %timeout_dmd.addr, align 4, !dbg !11131
  %div = sdiv i32 %3, 3, !dbg !11132
  store i32 %div, i32* %timeout_lock, align 4, !dbg !11133
  br label %if.end, !dbg !11134

if.else:                                          ; preds = %entry
  %4 = load i32, i32* %timeout_dmd.addr, align 4, !dbg !11135
  %div1 = sdiv i32 %4, 2, !dbg !11136
  store i32 %div1, i32* %timeout_lock, align 4, !dbg !11137
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11138
  %6 = load i32, i32* %timeout_lock, align 4, !dbg !11139
  %call = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %5, i32 %6) #9, !dbg !11140
  store i32 %call, i32* %lock, align 4, !dbg !11141
  %7 = load i32, i32* %lock, align 4, !dbg !11142
  %tobool = icmp ne i32 %7, 0, !dbg !11142
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11144

if.then2:                                         ; preds = %if.end
  %8 = load i32, i32* %lock, align 4, !dbg !11145
  store i32 %8, i32* %retval, align 4, !dbg !11146
  br label %return, !dbg !11146

if.end3:                                          ; preds = %if.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11147
  %srate4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 19, !dbg !11149
  %10 = load i32, i32* %srate4, align 4, !dbg !11149
  %cmp5 = icmp uge i32 %10, 10000000, !dbg !11150
  br i1 %cmp5, label %if.then6, label %if.end29, !dbg !11151

if.then6:                                         ; preds = %if.end3
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11152
  %call7 = call i32 @stv090x_chk_tmg(%struct.stv090x_state* %11) #9, !dbg !11155
  %tobool8 = icmp ne i32 %call7, 0, !dbg !11155
  br i1 %tobool8, label %if.then9, label %if.end28, !dbg !11156

if.then9:                                         ; preds = %if.then6
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11157
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !11157
  %13 = load i32, i32* %demod, align 4, !dbg !11157
  %cmp10 = icmp eq i32 %13, 2, !dbg !11157
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !11157

cond.true:                                        ; preds = %if.then9
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11157
  %call11 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 61974, i8 zeroext 31) #9, !dbg !11157
  br label %cond.end, !dbg !11157

cond.false:                                       ; preds = %if.then9
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11157
  %call12 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62486, i8 zeroext 31) #9, !dbg !11157
  br label %cond.end, !dbg !11157

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call11, %cond.true ], [ %call12, %cond.false ], !dbg !11157
  %cmp13 = icmp slt i32 %cond, 0, !dbg !11160
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !11161

if.then14:                                        ; preds = %cond.end
  br label %err, !dbg !11162

if.end15:                                         ; preds = %cond.end
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11163
  %demod16 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !11163
  %17 = load i32, i32* %demod16, align 4, !dbg !11163
  %cmp17 = icmp eq i32 %17, 2, !dbg !11163
  br i1 %cmp17, label %cond.true18, label %cond.false20, !dbg !11163

cond.true18:                                      ; preds = %if.end15
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11163
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 61974, i8 zeroext 21) #9, !dbg !11163
  br label %cond.end22, !dbg !11163

cond.false20:                                     ; preds = %if.end15
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11163
  %call21 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62486, i8 zeroext 21) #9, !dbg !11163
  br label %cond.end22, !dbg !11163

cond.end22:                                       ; preds = %cond.false20, %cond.true18
  %cond23 = phi i32 [ %call19, %cond.true18 ], [ %call21, %cond.false20 ], !dbg !11163
  %cmp24 = icmp slt i32 %cond23, 0, !dbg !11165
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !11166

if.then25:                                        ; preds = %cond.end22
  br label %err, !dbg !11167

if.end26:                                         ; preds = %cond.end22
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11168
  %21 = load i32, i32* %timeout_dmd.addr, align 4, !dbg !11169
  %call27 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %20, i32 %21) #9, !dbg !11170
  store i32 %call27, i32* %retval, align 4, !dbg !11171
  br label %return, !dbg !11171

if.end28:                                         ; preds = %if.then6
  store i32 0, i32* %retval, align 4, !dbg !11172
  br label %return, !dbg !11172

if.end29:                                         ; preds = %if.end3
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11173
  %srate30 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %22, i32 0, i32 19, !dbg !11175
  %23 = load i32, i32* %srate30, align 4, !dbg !11175
  %cmp31 = icmp ule i32 %23, 4000000, !dbg !11176
  br i1 %cmp31, label %if.then32, label %if.else33, !dbg !11177

if.then32:                                        ; preds = %if.end29
  store i32 1000, i32* %car_step, align 4, !dbg !11178
  br label %if.end44, !dbg !11179

if.else33:                                        ; preds = %if.end29
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11180
  %srate34 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 19, !dbg !11182
  %25 = load i32, i32* %srate34, align 4, !dbg !11182
  %cmp35 = icmp ule i32 %25, 7000000, !dbg !11183
  br i1 %cmp35, label %if.then36, label %if.else37, !dbg !11184

if.then36:                                        ; preds = %if.else33
  store i32 2000, i32* %car_step, align 4, !dbg !11185
  br label %if.end43, !dbg !11186

if.else37:                                        ; preds = %if.else33
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11187
  %srate38 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 19, !dbg !11189
  %27 = load i32, i32* %srate38, align 4, !dbg !11189
  %cmp39 = icmp ule i32 %27, 10000000, !dbg !11190
  br i1 %cmp39, label %if.then40, label %if.else41, !dbg !11191

if.then40:                                        ; preds = %if.else37
  store i32 3000, i32* %car_step, align 4, !dbg !11192
  br label %if.end42, !dbg !11193

if.else41:                                        ; preds = %if.else37
  store i32 5000, i32* %car_step, align 4, !dbg !11194
  br label %if.end42

if.end42:                                         ; preds = %if.else41, %if.then40
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then36
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then32
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11195
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 21, !dbg !11196
  %29 = load i32, i32* %search_range, align 4, !dbg !11196
  %div45 = sdiv i32 %29, 1000, !dbg !11197
  %30 = load i32, i32* %car_step, align 4, !dbg !11198
  %div46 = sdiv i32 %div45, %30, !dbg !11199
  store i32 %div46, i32* %steps, align 4, !dbg !11200
  %31 = load i32, i32* %steps, align 4, !dbg !11201
  %div47 = sdiv i32 %31, 2, !dbg !11201
  store i32 %div47, i32* %steps, align 4, !dbg !11201
  %32 = load i32, i32* %steps, align 4, !dbg !11202
  %add = add i32 %32, 1, !dbg !11203
  %mul = mul i32 2, %add, !dbg !11204
  store i32 %mul, i32* %steps, align 4, !dbg !11205
  %33 = load i32, i32* %steps, align 4, !dbg !11206
  %cmp48 = icmp slt i32 %33, 0, !dbg !11208
  br i1 %cmp48, label %if.then49, label %if.else50, !dbg !11209

if.then49:                                        ; preds = %if.end44
  store i32 2, i32* %steps, align 4, !dbg !11210
  br label %if.end54, !dbg !11211

if.else50:                                        ; preds = %if.end44
  %34 = load i32, i32* %steps, align 4, !dbg !11212
  %cmp51 = icmp sgt i32 %34, 12, !dbg !11214
  br i1 %cmp51, label %if.then52, label %if.end53, !dbg !11215

if.then52:                                        ; preds = %if.else50
  store i32 12, i32* %steps, align 4, !dbg !11216
  br label %if.end53, !dbg !11217

if.end53:                                         ; preds = %if.then52, %if.else50
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then49
  store i32 1, i32* %cur_step, align 4, !dbg !11218
  store i32 1, i32* %dir, align 4, !dbg !11219
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11220
  %frequency = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 18, !dbg !11221
  %36 = load i32, i32* %frequency, align 8, !dbg !11221
  store i32 %36, i32* %freq, align 4, !dbg !11222
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11223
  %srate55 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 19, !dbg !11224
  %38 = load i32, i32* %srate55, align 4, !dbg !11224
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11225
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 15, !dbg !11226
  %40 = load i32, i32* %rolloff, align 4, !dbg !11226
  %call56 = call i32 @stv090x_car_width(i32 %38, i32 %40) #9, !dbg !11227
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11228
  %srate57 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %41, i32 0, i32 19, !dbg !11229
  %42 = load i32, i32* %srate57, align 4, !dbg !11229
  %add58 = add i32 %call56, %42, !dbg !11230
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11231
  %tuner_bw = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %43, i32 0, i32 20, !dbg !11232
  store i32 %add58, i32* %tuner_bw, align 8, !dbg !11233
  br label %while.cond, !dbg !11234

while.cond:                                       ; preds = %if.end224, %if.end54
  %44 = load i32, i32* %cur_step, align 4, !dbg !11235
  %45 = load i32, i32* %steps, align 4, !dbg !11236
  %cmp59 = icmp sle i32 %44, %45, !dbg !11237
  br i1 %cmp59, label %land.rhs, label %land.end, !dbg !11238

land.rhs:                                         ; preds = %while.cond
  %46 = load i32, i32* %lock, align 4, !dbg !11239
  %tobool60 = icmp ne i32 %46, 0, !dbg !11240
  %lnot = xor i1 %tobool60, true, !dbg !11240
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %47 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11241
  br i1 %47, label %while.body, label %while.end, !dbg !11234

while.body:                                       ; preds = %land.end
  %48 = load i32, i32* %dir, align 4, !dbg !11242
  %cmp61 = icmp sgt i32 %48, 0, !dbg !11245
  br i1 %cmp61, label %if.then62, label %if.else65, !dbg !11246

if.then62:                                        ; preds = %while.body
  %49 = load i32, i32* %cur_step, align 4, !dbg !11247
  %50 = load i32, i32* %car_step, align 4, !dbg !11248
  %mul63 = mul i32 %49, %50, !dbg !11249
  %51 = load i32, i32* %freq, align 4, !dbg !11250
  %add64 = add i32 %51, %mul63, !dbg !11250
  store i32 %add64, i32* %freq, align 4, !dbg !11250
  br label %if.end67, !dbg !11251

if.else65:                                        ; preds = %while.body
  %52 = load i32, i32* %cur_step, align 4, !dbg !11252
  %53 = load i32, i32* %car_step, align 4, !dbg !11253
  %mul66 = mul i32 %52, %53, !dbg !11254
  %54 = load i32, i32* %freq, align 4, !dbg !11255
  %sub = sub i32 %54, %mul66, !dbg !11255
  store i32 %sub, i32* %freq, align 4, !dbg !11255
  br label %if.end67

if.end67:                                         ; preds = %if.else65, %if.then62
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11256
  %call68 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %55, i32 1) #9, !dbg !11258
  %cmp69 = icmp slt i32 %call68, 0, !dbg !11259
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !11260

if.then70:                                        ; preds = %if.end67
  br label %err, !dbg !11261

if.end71:                                         ; preds = %if.end67
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11262
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 5, !dbg !11264
  %57 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !11264
  %tuner_set_frequency = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %57, i32 0, i32 19, !dbg !11265
  %58 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_frequency, align 8, !dbg !11265
  %tobool72 = icmp ne i32 (%struct.dvb_frontend*, i32)* %58, null, !dbg !11262
  br i1 %tobool72, label %if.then73, label %if.end80, !dbg !11266

if.then73:                                        ; preds = %if.end71
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11267
  %config74 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %59, i32 0, i32 5, !dbg !11270
  %60 = load %struct.stv090x_config*, %struct.stv090x_config** %config74, align 8, !dbg !11270
  %tuner_set_frequency75 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %60, i32 0, i32 19, !dbg !11271
  %61 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_frequency75, align 8, !dbg !11271
  %62 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !11272
  %63 = load i32, i32* %freq, align 4, !dbg !11273
  %call76 = call i32 %61(%struct.dvb_frontend* %62, i32 %63) #9, !dbg !11267
  %cmp77 = icmp slt i32 %call76, 0, !dbg !11274
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !11275

if.then78:                                        ; preds = %if.then73
  br label %err_gateoff, !dbg !11276

if.end79:                                         ; preds = %if.then73
  br label %if.end80, !dbg !11277

if.end80:                                         ; preds = %if.end79, %if.end71
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11278
  %config81 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %64, i32 0, i32 5, !dbg !11280
  %65 = load %struct.stv090x_config*, %struct.stv090x_config** %config81, align 8, !dbg !11280
  %tuner_set_bandwidth = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %65, i32 0, i32 21, !dbg !11281
  %66 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth, align 8, !dbg !11281
  %tobool82 = icmp ne i32 (%struct.dvb_frontend*, i32)* %66, null, !dbg !11278
  br i1 %tobool82, label %if.then83, label %if.end91, !dbg !11282

if.then83:                                        ; preds = %if.end80
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11283
  %config84 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %67, i32 0, i32 5, !dbg !11286
  %68 = load %struct.stv090x_config*, %struct.stv090x_config** %config84, align 8, !dbg !11286
  %tuner_set_bandwidth85 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %68, i32 0, i32 21, !dbg !11287
  %69 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth85, align 8, !dbg !11287
  %70 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !11288
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11289
  %tuner_bw86 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %71, i32 0, i32 20, !dbg !11290
  %72 = load i32, i32* %tuner_bw86, align 8, !dbg !11290
  %call87 = call i32 %69(%struct.dvb_frontend* %70, i32 %72) #9, !dbg !11283
  %cmp88 = icmp slt i32 %call87, 0, !dbg !11291
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !11292

if.then89:                                        ; preds = %if.then83
  br label %err_gateoff, !dbg !11293

if.end90:                                         ; preds = %if.then83
  br label %if.end91, !dbg !11294

if.end91:                                         ; preds = %if.end90, %if.end80
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11295
  %call92 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %73, i32 0) #9, !dbg !11297
  %cmp93 = icmp slt i32 %call92, 0, !dbg !11298
  br i1 %cmp93, label %if.then94, label %if.end95, !dbg !11299

if.then94:                                        ; preds = %if.end91
  br label %err, !dbg !11300

if.end95:                                         ; preds = %if.end91
  call void @msleep(i32 50) #9, !dbg !11301
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11302
  %call96 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %74, i32 1) #9, !dbg !11304
  %cmp97 = icmp slt i32 %call96, 0, !dbg !11305
  br i1 %cmp97, label %if.then98, label %if.end99, !dbg !11306

if.then98:                                        ; preds = %if.end95
  br label %err, !dbg !11307

if.end99:                                         ; preds = %if.end95
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11308
  %config100 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %75, i32 0, i32 5, !dbg !11310
  %76 = load %struct.stv090x_config*, %struct.stv090x_config** %config100, align 8, !dbg !11310
  %tuner_get_status = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %76, i32 0, i32 26, !dbg !11311
  %77 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_status, align 8, !dbg !11311
  %tobool101 = icmp ne i32 (%struct.dvb_frontend*, i32*)* %77, null, !dbg !11308
  br i1 %tobool101, label %if.then102, label %if.end168, !dbg !11312

if.then102:                                       ; preds = %if.end99
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11313
  %config103 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %78, i32 0, i32 5, !dbg !11316
  %79 = load %struct.stv090x_config*, %struct.stv090x_config** %config103, align 8, !dbg !11316
  %tuner_get_status104 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %79, i32 0, i32 26, !dbg !11317
  %80 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_status104, align 8, !dbg !11317
  %81 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !11318
  %call105 = call i32 %80(%struct.dvb_frontend* %81, i32* %reg) #9, !dbg !11313
  %cmp106 = icmp slt i32 %call105, 0, !dbg !11319
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !11320

if.then107:                                       ; preds = %if.then102
  br label %err_gateoff, !dbg !11321

if.end108:                                        ; preds = %if.then102
  %82 = load i32, i32* %reg, align 4, !dbg !11322
  %tobool109 = icmp ne i32 %82, 0, !dbg !11322
  br i1 %tobool109, label %if.then110, label %if.else137, !dbg !11324

if.then110:                                       ; preds = %if.end108
  br label %do.body, !dbg !11325

do.body:                                          ; preds = %if.then110
  %83 = load i32, i32* @verbose, align 4, !dbg !11326
  %cmp111 = icmp ugt i32 %83, 0, !dbg !11326
  br i1 %cmp111, label %land.lhs.true, label %if.else115, !dbg !11326

land.lhs.true:                                    ; preds = %do.body
  %84 = load i32, i32* @verbose, align 4, !dbg !11326
  %cmp112 = icmp ugt i32 %84, 3, !dbg !11326
  br i1 %cmp112, label %if.then113, label %if.else115, !dbg !11331

if.then113:                                       ; preds = %land.lhs.true
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11326
  br label %if.end136, !dbg !11326

if.else115:                                       ; preds = %land.lhs.true, %do.body
  %85 = load i32, i32* @verbose, align 4, !dbg !11332
  %cmp116 = icmp ugt i32 %85, 1, !dbg !11332
  br i1 %cmp116, label %land.lhs.true117, label %if.else121, !dbg !11332

land.lhs.true117:                                 ; preds = %if.else115
  %86 = load i32, i32* @verbose, align 4, !dbg !11332
  %cmp118 = icmp ugt i32 %86, 3, !dbg !11332
  br i1 %cmp118, label %if.then119, label %if.else121, !dbg !11326

if.then119:                                       ; preds = %land.lhs.true117
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11332
  br label %if.end135, !dbg !11332

if.else121:                                       ; preds = %land.lhs.true117, %if.else115
  %87 = load i32, i32* @verbose, align 4, !dbg !11334
  %cmp122 = icmp ugt i32 %87, 2, !dbg !11334
  br i1 %cmp122, label %land.lhs.true123, label %if.else127, !dbg !11334

land.lhs.true123:                                 ; preds = %if.else121
  %88 = load i32, i32* @verbose, align 4, !dbg !11334
  %cmp124 = icmp ugt i32 %88, 3, !dbg !11334
  br i1 %cmp124, label %if.then125, label %if.else127, !dbg !11332

if.then125:                                       ; preds = %land.lhs.true123
  %call126 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11334
  br label %if.end134, !dbg !11334

if.else127:                                       ; preds = %land.lhs.true123, %if.else121
  %89 = load i32, i32* @verbose, align 4, !dbg !11336
  %cmp128 = icmp ugt i32 %89, 3, !dbg !11336
  br i1 %cmp128, label %land.lhs.true129, label %if.end133, !dbg !11336

land.lhs.true129:                                 ; preds = %if.else127
  %90 = load i32, i32* @verbose, align 4, !dbg !11336
  %cmp130 = icmp ugt i32 %90, 3, !dbg !11336
  br i1 %cmp130, label %if.then131, label %if.end133, !dbg !11334

if.then131:                                       ; preds = %land.lhs.true129
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11336
  br label %if.end133, !dbg !11336

if.end133:                                        ; preds = %if.then131, %land.lhs.true129, %if.else127
  br label %if.end134

if.end134:                                        ; preds = %if.end133, %if.then125
  br label %if.end135

if.end135:                                        ; preds = %if.end134, %if.then119
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then113
  br label %do.end, !dbg !11338

do.end:                                           ; preds = %if.end136
  br label %if.end167, !dbg !11338

if.else137:                                       ; preds = %if.end108
  br label %do.body138, !dbg !11339

do.body138:                                       ; preds = %if.else137
  %91 = load i32, i32* @verbose, align 4, !dbg !11340
  %cmp139 = icmp ugt i32 %91, 0, !dbg !11340
  br i1 %cmp139, label %land.lhs.true140, label %if.else144, !dbg !11340

land.lhs.true140:                                 ; preds = %do.body138
  %92 = load i32, i32* @verbose, align 4, !dbg !11340
  %cmp141 = icmp ugt i32 %92, 3, !dbg !11340
  br i1 %cmp141, label %if.then142, label %if.else144, !dbg !11345

if.then142:                                       ; preds = %land.lhs.true140
  %call143 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11340
  br label %if.end165, !dbg !11340

if.else144:                                       ; preds = %land.lhs.true140, %do.body138
  %93 = load i32, i32* @verbose, align 4, !dbg !11346
  %cmp145 = icmp ugt i32 %93, 1, !dbg !11346
  br i1 %cmp145, label %land.lhs.true146, label %if.else150, !dbg !11346

land.lhs.true146:                                 ; preds = %if.else144
  %94 = load i32, i32* @verbose, align 4, !dbg !11346
  %cmp147 = icmp ugt i32 %94, 3, !dbg !11346
  br i1 %cmp147, label %if.then148, label %if.else150, !dbg !11340

if.then148:                                       ; preds = %land.lhs.true146
  %call149 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11346
  br label %if.end164, !dbg !11346

if.else150:                                       ; preds = %land.lhs.true146, %if.else144
  %95 = load i32, i32* @verbose, align 4, !dbg !11348
  %cmp151 = icmp ugt i32 %95, 2, !dbg !11348
  br i1 %cmp151, label %land.lhs.true152, label %if.else156, !dbg !11348

land.lhs.true152:                                 ; preds = %if.else150
  %96 = load i32, i32* @verbose, align 4, !dbg !11348
  %cmp153 = icmp ugt i32 %96, 3, !dbg !11348
  br i1 %cmp153, label %if.then154, label %if.else156, !dbg !11346

if.then154:                                       ; preds = %land.lhs.true152
  %call155 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11348
  br label %if.end163, !dbg !11348

if.else156:                                       ; preds = %land.lhs.true152, %if.else150
  %97 = load i32, i32* @verbose, align 4, !dbg !11350
  %cmp157 = icmp ugt i32 %97, 3, !dbg !11350
  br i1 %cmp157, label %land.lhs.true158, label %if.end162, !dbg !11350

land.lhs.true158:                                 ; preds = %if.else156
  %98 = load i32, i32* @verbose, align 4, !dbg !11350
  %cmp159 = icmp ugt i32 %98, 3, !dbg !11350
  br i1 %cmp159, label %if.then160, label %if.end162, !dbg !11348

if.then160:                                       ; preds = %land.lhs.true158
  %call161 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11350
  br label %if.end162, !dbg !11350

if.end162:                                        ; preds = %if.then160, %land.lhs.true158, %if.else156
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.then154
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.then148
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then142
  br label %do.end166, !dbg !11352

do.end166:                                        ; preds = %if.end165
  br label %if.end167

if.end167:                                        ; preds = %do.end166, %do.end
  br label %if.end168, !dbg !11353

if.end168:                                        ; preds = %if.end167, %if.end99
  %99 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11354
  %call169 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %99, i32 0) #9, !dbg !11356
  %cmp170 = icmp slt i32 %call169, 0, !dbg !11357
  br i1 %cmp170, label %if.then171, label %if.end172, !dbg !11358

if.then171:                                       ; preds = %if.end168
  br label %err, !dbg !11359

if.end172:                                        ; preds = %if.end168
  %100 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11360
  %demod173 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %100, i32 0, i32 1, !dbg !11360
  %101 = load i32, i32* %demod173, align 4, !dbg !11360
  %cmp174 = icmp eq i32 %101, 2, !dbg !11360
  br i1 %cmp174, label %cond.true175, label %cond.false177, !dbg !11360

cond.true175:                                     ; preds = %if.end172
  %102 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11360
  %call176 = call i32 @stv090x_write_reg(%struct.stv090x_state* %102, i32 61974, i8 zeroext 28) #9, !dbg !11360
  br label %cond.end179, !dbg !11360

cond.false177:                                    ; preds = %if.end172
  %103 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11360
  %call178 = call i32 @stv090x_write_reg(%struct.stv090x_state* %103, i32 62486, i8 zeroext 28) #9, !dbg !11360
  br label %cond.end179, !dbg !11360

cond.end179:                                      ; preds = %cond.false177, %cond.true175
  %cond180 = phi i32 [ %call176, %cond.true175 ], [ %call178, %cond.false177 ], !dbg !11360
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11361
  %demod181 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %104, i32 0, i32 1, !dbg !11361
  %105 = load i32, i32* %demod181, align 4, !dbg !11361
  %cmp182 = icmp eq i32 %105, 2, !dbg !11361
  br i1 %cmp182, label %cond.true183, label %cond.false185, !dbg !11361

cond.true183:                                     ; preds = %cond.end179
  %106 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11361
  %call184 = call i32 @stv090x_write_reg(%struct.stv090x_state* %106, i32 62024, i8 zeroext 0) #9, !dbg !11361
  br label %cond.end187, !dbg !11361

cond.false185:                                    ; preds = %cond.end179
  %107 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11361
  %call186 = call i32 @stv090x_write_reg(%struct.stv090x_state* %107, i32 62536, i8 zeroext 0) #9, !dbg !11361
  br label %cond.end187, !dbg !11361

cond.end187:                                      ; preds = %cond.false185, %cond.true183
  %cond188 = phi i32 [ %call184, %cond.true183 ], [ %call186, %cond.false185 ], !dbg !11361
  %cmp189 = icmp slt i32 %cond188, 0, !dbg !11363
  br i1 %cmp189, label %if.then190, label %if.end191, !dbg !11364

if.then190:                                       ; preds = %cond.end187
  br label %err, !dbg !11365

if.end191:                                        ; preds = %cond.end187
  %108 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11366
  %demod192 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %108, i32 0, i32 1, !dbg !11366
  %109 = load i32, i32* %demod192, align 4, !dbg !11366
  %cmp193 = icmp eq i32 %109, 2, !dbg !11366
  br i1 %cmp193, label %cond.true194, label %cond.false196, !dbg !11366

cond.true194:                                     ; preds = %if.end191
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11366
  %call195 = call i32 @stv090x_write_reg(%struct.stv090x_state* %110, i32 62025, i8 zeroext 0) #9, !dbg !11366
  br label %cond.end198, !dbg !11366

cond.false196:                                    ; preds = %if.end191
  %111 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11366
  %call197 = call i32 @stv090x_write_reg(%struct.stv090x_state* %111, i32 62537, i8 zeroext 0) #9, !dbg !11366
  br label %cond.end198, !dbg !11366

cond.end198:                                      ; preds = %cond.false196, %cond.true194
  %cond199 = phi i32 [ %call195, %cond.true194 ], [ %call197, %cond.false196 ], !dbg !11366
  %cmp200 = icmp slt i32 %cond199, 0, !dbg !11368
  br i1 %cmp200, label %if.then201, label %if.end202, !dbg !11369

if.then201:                                       ; preds = %cond.end198
  br label %err, !dbg !11370

if.end202:                                        ; preds = %cond.end198
  %112 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11371
  %demod203 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %112, i32 0, i32 1, !dbg !11371
  %113 = load i32, i32* %demod203, align 4, !dbg !11371
  %cmp204 = icmp eq i32 %113, 2, !dbg !11371
  br i1 %cmp204, label %cond.true205, label %cond.false207, !dbg !11371

cond.true205:                                     ; preds = %if.end202
  %114 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11371
  %call206 = call i32 @stv090x_write_reg(%struct.stv090x_state* %114, i32 61974, i8 zeroext 31) #9, !dbg !11371
  br label %cond.end209, !dbg !11371

cond.false207:                                    ; preds = %if.end202
  %115 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11371
  %call208 = call i32 @stv090x_write_reg(%struct.stv090x_state* %115, i32 62486, i8 zeroext 31) #9, !dbg !11371
  br label %cond.end209, !dbg !11371

cond.end209:                                      ; preds = %cond.false207, %cond.true205
  %cond210 = phi i32 [ %call206, %cond.true205 ], [ %call208, %cond.false207 ], !dbg !11371
  %cmp211 = icmp slt i32 %cond210, 0, !dbg !11373
  br i1 %cmp211, label %if.then212, label %if.end213, !dbg !11374

if.then212:                                       ; preds = %cond.end209
  br label %err, !dbg !11375

if.end213:                                        ; preds = %cond.end209
  %116 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11376
  %demod214 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %116, i32 0, i32 1, !dbg !11376
  %117 = load i32, i32* %demod214, align 4, !dbg !11376
  %cmp215 = icmp eq i32 %117, 2, !dbg !11376
  br i1 %cmp215, label %cond.true216, label %cond.false218, !dbg !11376

cond.true216:                                     ; preds = %if.end213
  %118 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11376
  %call217 = call i32 @stv090x_write_reg(%struct.stv090x_state* %118, i32 61974, i8 zeroext 21) #9, !dbg !11376
  br label %cond.end220, !dbg !11376

cond.false218:                                    ; preds = %if.end213
  %119 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11376
  %call219 = call i32 @stv090x_write_reg(%struct.stv090x_state* %119, i32 62486, i8 zeroext 21) #9, !dbg !11376
  br label %cond.end220, !dbg !11376

cond.end220:                                      ; preds = %cond.false218, %cond.true216
  %cond221 = phi i32 [ %call217, %cond.true216 ], [ %call219, %cond.false218 ], !dbg !11376
  %cmp222 = icmp slt i32 %cond221, 0, !dbg !11378
  br i1 %cmp222, label %if.then223, label %if.end224, !dbg !11379

if.then223:                                       ; preds = %cond.end220
  br label %err, !dbg !11380

if.end224:                                        ; preds = %cond.end220
  %120 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11381
  %121 = load i32, i32* %timeout_dmd.addr, align 4, !dbg !11382
  %div225 = sdiv i32 %121, 3, !dbg !11383
  %call226 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %120, i32 %div225) #9, !dbg !11384
  store i32 %call226, i32* %lock, align 4, !dbg !11385
  %122 = load i32, i32* %dir, align 4, !dbg !11386
  %mul227 = mul i32 %122, -1, !dbg !11386
  store i32 %mul227, i32* %dir, align 4, !dbg !11386
  %123 = load i32, i32* %cur_step, align 4, !dbg !11387
  %inc = add i32 %123, 1, !dbg !11387
  store i32 %inc, i32* %cur_step, align 4, !dbg !11387
  br label %while.cond, !dbg !11234, !llvm.loop !11388

while.end:                                        ; preds = %land.end
  %124 = load i32, i32* %lock, align 4, !dbg !11390
  store i32 %124, i32* %retval, align 4, !dbg !11391
  br label %return, !dbg !11391

err_gateoff:                                      ; preds = %if.then107, %if.then89, %if.then78
  call void @llvm.dbg.label(metadata !11392), !dbg !11393
  %125 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11394
  %call228 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %125, i32 0) #9, !dbg !11395
  br label %err, !dbg !11395

err:                                              ; preds = %err_gateoff, %if.then223, %if.then212, %if.then201, %if.then190, %if.then171, %if.then98, %if.then94, %if.then70, %if.then25, %if.then14
  call void @llvm.dbg.label(metadata !11396), !dbg !11397
  br label %do.body229, !dbg !11398

do.body229:                                       ; preds = %err
  %126 = load i32, i32* @verbose, align 4, !dbg !11399
  %cmp230 = icmp ugt i32 %126, 0, !dbg !11399
  br i1 %cmp230, label %land.lhs.true231, label %if.else235, !dbg !11399

land.lhs.true231:                                 ; preds = %do.body229
  %127 = load i32, i32* @verbose, align 4, !dbg !11399
  %cmp232 = icmp ugt i32 %127, 0, !dbg !11399
  br i1 %cmp232, label %if.then233, label %if.else235, !dbg !11404

if.then233:                                       ; preds = %land.lhs.true231
  %call234 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11399
  br label %if.end256, !dbg !11399

if.else235:                                       ; preds = %land.lhs.true231, %do.body229
  %128 = load i32, i32* @verbose, align 4, !dbg !11405
  %cmp236 = icmp ugt i32 %128, 1, !dbg !11405
  br i1 %cmp236, label %land.lhs.true237, label %if.else241, !dbg !11405

land.lhs.true237:                                 ; preds = %if.else235
  %129 = load i32, i32* @verbose, align 4, !dbg !11405
  %cmp238 = icmp ugt i32 %129, 0, !dbg !11405
  br i1 %cmp238, label %if.then239, label %if.else241, !dbg !11399

if.then239:                                       ; preds = %land.lhs.true237
  %call240 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11405
  br label %if.end255, !dbg !11405

if.else241:                                       ; preds = %land.lhs.true237, %if.else235
  %130 = load i32, i32* @verbose, align 4, !dbg !11407
  %cmp242 = icmp ugt i32 %130, 2, !dbg !11407
  br i1 %cmp242, label %land.lhs.true243, label %if.else247, !dbg !11407

land.lhs.true243:                                 ; preds = %if.else241
  %131 = load i32, i32* @verbose, align 4, !dbg !11407
  %cmp244 = icmp ugt i32 %131, 0, !dbg !11407
  br i1 %cmp244, label %if.then245, label %if.else247, !dbg !11405

if.then245:                                       ; preds = %land.lhs.true243
  %call246 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11407
  br label %if.end254, !dbg !11407

if.else247:                                       ; preds = %land.lhs.true243, %if.else241
  %132 = load i32, i32* @verbose, align 4, !dbg !11409
  %cmp248 = icmp ugt i32 %132, 3, !dbg !11409
  br i1 %cmp248, label %land.lhs.true249, label %if.end253, !dbg !11409

land.lhs.true249:                                 ; preds = %if.else247
  %133 = load i32, i32* @verbose, align 4, !dbg !11409
  %cmp250 = icmp ugt i32 %133, 0, !dbg !11409
  br i1 %cmp250, label %if.then251, label %if.end253, !dbg !11407

if.then251:                                       ; preds = %land.lhs.true249
  %call252 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.stv090x_get_coldlock, i64 0, i64 0)) #13, !dbg !11409
  br label %if.end253, !dbg !11409

if.end253:                                        ; preds = %if.then251, %land.lhs.true249, %if.else247
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.then245
  br label %if.end255

if.end255:                                        ; preds = %if.end254, %if.then239
  br label %if.end256

if.end256:                                        ; preds = %if.end255, %if.then233
  br label %do.end257, !dbg !11411

do.end257:                                        ; preds = %if.end256
  store i32 -1, i32* %retval, align 4, !dbg !11412
  br label %return, !dbg !11412

return:                                           ; preds = %do.end257, %while.end, %if.end28, %if.end26, %if.then2
  %134 = load i32, i32* %retval, align 4, !dbg !11413
  ret i32 %134, !dbg !11413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_dmdlock(%struct.stv090x_state* %state, i32 %timeout) #0 !dbg !11414 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %timeout.addr = alloca i32, align 4
  %timer = alloca i32, align 4
  %lock = alloca i32, align 4
  %reg = alloca i32, align 4
  %stat = alloca i8, align 1
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !11415, metadata !DIExpression()), !dbg !11416
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !11417, metadata !DIExpression()), !dbg !11418
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !11419, metadata !DIExpression()), !dbg !11420
  store i32 0, i32* %timer, align 4, !dbg !11420
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !11421, metadata !DIExpression()), !dbg !11422
  store i32 0, i32* %lock, align 4, !dbg !11422
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11423, metadata !DIExpression()), !dbg !11424
  call void @llvm.dbg.declare(metadata i8* %stat, metadata !11425, metadata !DIExpression()), !dbg !11426
  br label %while.cond, !dbg !11427

while.cond:                                       ; preds = %if.end87, %entry
  %0 = load i32, i32* %timer, align 4, !dbg !11428
  %1 = load i32, i32* %timeout.addr, align 4, !dbg !11429
  %cmp = icmp slt i32 %0, %1, !dbg !11430
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !11431

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %lock, align 4, !dbg !11432
  %tobool = icmp ne i32 %2, 0, !dbg !11433
  %lnot = xor i1 %tobool, true, !dbg !11433
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !11434
  br i1 %3, label %while.body, label %while.end, !dbg !11427

while.body:                                       ; preds = %land.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11435
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !11435
  %5 = load i32, i32* %demod, align 4, !dbg !11435
  %cmp1 = icmp eq i32 %5, 2, !dbg !11435
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11435

cond.true:                                        ; preds = %while.body
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11435
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61979) #9, !dbg !11435
  br label %cond.end, !dbg !11435

cond.false:                                       ; preds = %while.body
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11435
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62491) #9, !dbg !11435
  br label %cond.end, !dbg !11435

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !11435
  store i32 %cond, i32* %reg, align 4, !dbg !11437
  %8 = load i32, i32* %reg, align 4, !dbg !11438
  %shr = lshr i32 %8, 5, !dbg !11438
  %and = and i32 %shr, 3, !dbg !11438
  %conv = trunc i32 %and to i8, !dbg !11438
  store i8 %conv, i8* %stat, align 1, !dbg !11439
  %9 = load i8, i8* %stat, align 1, !dbg !11440
  %conv3 = zext i8 %9 to i32, !dbg !11440
  switch i32 %conv3, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb35
    i32 3, label %sw.bb35
  ], !dbg !11441

sw.bb:                                            ; preds = %cond.end, %cond.end
  br label %sw.default, !dbg !11442

sw.default:                                       ; preds = %cond.end, %sw.bb
  br label %do.body, !dbg !11443

do.body:                                          ; preds = %sw.default
  %10 = load i32, i32* @verbose, align 4, !dbg !11445
  %cmp4 = icmp ugt i32 %10, 0, !dbg !11445
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !11445

land.lhs.true:                                    ; preds = %do.body
  %11 = load i32, i32* @verbose, align 4, !dbg !11445
  %cmp6 = icmp ugt i32 %11, 3, !dbg !11445
  br i1 %cmp6, label %if.then, label %if.else, !dbg !11450

if.then:                                          ; preds = %land.lhs.true
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.113, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11445
  br label %if.end34, !dbg !11445

if.else:                                          ; preds = %land.lhs.true, %do.body
  %12 = load i32, i32* @verbose, align 4, !dbg !11451
  %cmp9 = icmp ugt i32 %12, 1, !dbg !11451
  br i1 %cmp9, label %land.lhs.true11, label %if.else16, !dbg !11451

land.lhs.true11:                                  ; preds = %if.else
  %13 = load i32, i32* @verbose, align 4, !dbg !11451
  %cmp12 = icmp ugt i32 %13, 3, !dbg !11451
  br i1 %cmp12, label %if.then14, label %if.else16, !dbg !11445

if.then14:                                        ; preds = %land.lhs.true11
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11451
  br label %if.end33, !dbg !11451

if.else16:                                        ; preds = %land.lhs.true11, %if.else
  %14 = load i32, i32* @verbose, align 4, !dbg !11453
  %cmp17 = icmp ugt i32 %14, 2, !dbg !11453
  br i1 %cmp17, label %land.lhs.true19, label %if.else24, !dbg !11453

land.lhs.true19:                                  ; preds = %if.else16
  %15 = load i32, i32* @verbose, align 4, !dbg !11453
  %cmp20 = icmp ugt i32 %15, 3, !dbg !11453
  br i1 %cmp20, label %if.then22, label %if.else24, !dbg !11451

if.then22:                                        ; preds = %land.lhs.true19
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.115, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11453
  br label %if.end32, !dbg !11453

if.else24:                                        ; preds = %land.lhs.true19, %if.else16
  %16 = load i32, i32* @verbose, align 4, !dbg !11455
  %cmp25 = icmp ugt i32 %16, 3, !dbg !11455
  br i1 %cmp25, label %land.lhs.true27, label %if.end, !dbg !11455

land.lhs.true27:                                  ; preds = %if.else24
  %17 = load i32, i32* @verbose, align 4, !dbg !11455
  %cmp28 = icmp ugt i32 %17, 3, !dbg !11455
  br i1 %cmp28, label %if.then30, label %if.end, !dbg !11453

if.then30:                                        ; preds = %land.lhs.true27
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.116, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11455
  br label %if.end, !dbg !11455

if.end:                                           ; preds = %if.then30, %land.lhs.true27, %if.else24
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then22
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then14
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  br label %do.end, !dbg !11457

do.end:                                           ; preds = %if.end34
  store i32 0, i32* %lock, align 4, !dbg !11458
  br label %sw.epilog, !dbg !11459

sw.bb35:                                          ; preds = %cond.end, %cond.end
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11460
  %demod36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !11460
  %19 = load i32, i32* %demod36, align 4, !dbg !11460
  %cmp37 = icmp eq i32 %19, 2, !dbg !11460
  br i1 %cmp37, label %cond.true39, label %cond.false41, !dbg !11460

cond.true39:                                      ; preds = %sw.bb35
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11460
  %call40 = call i32 @stv090x_read_reg(%struct.stv090x_state* %20, i32 61970) #9, !dbg !11460
  br label %cond.end43, !dbg !11460

cond.false41:                                     ; preds = %sw.bb35
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11460
  %call42 = call i32 @stv090x_read_reg(%struct.stv090x_state* %21, i32 62482) #9, !dbg !11460
  br label %cond.end43, !dbg !11460

cond.end43:                                       ; preds = %cond.false41, %cond.true39
  %cond44 = phi i32 [ %call40, %cond.true39 ], [ %call42, %cond.false41 ], !dbg !11460
  store i32 %cond44, i32* %reg, align 4, !dbg !11461
  %22 = load i32, i32* %reg, align 4, !dbg !11462
  %shr45 = lshr i32 %22, 3, !dbg !11462
  %and46 = and i32 %shr45, 1, !dbg !11462
  store i32 %and46, i32* %lock, align 4, !dbg !11463
  br label %sw.epilog, !dbg !11464

sw.epilog:                                        ; preds = %cond.end43, %do.end
  %23 = load i32, i32* %lock, align 4, !dbg !11465
  %tobool47 = icmp ne i32 %23, 0, !dbg !11465
  br i1 %tobool47, label %if.else49, label %if.then48, !dbg !11467

if.then48:                                        ; preds = %sw.epilog
  call void @msleep(i32 10) #9, !dbg !11468
  br label %if.end87, !dbg !11468

if.else49:                                        ; preds = %sw.epilog
  br label %do.body50, !dbg !11469

do.body50:                                        ; preds = %if.else49
  %24 = load i32, i32* @verbose, align 4, !dbg !11470
  %cmp51 = icmp ugt i32 %24, 0, !dbg !11470
  br i1 %cmp51, label %land.lhs.true53, label %if.else58, !dbg !11470

land.lhs.true53:                                  ; preds = %do.body50
  %25 = load i32, i32* @verbose, align 4, !dbg !11470
  %cmp54 = icmp ugt i32 %25, 3, !dbg !11470
  br i1 %cmp54, label %if.then56, label %if.else58, !dbg !11475

if.then56:                                        ; preds = %land.lhs.true53
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.117, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11470
  br label %if.end85, !dbg !11470

if.else58:                                        ; preds = %land.lhs.true53, %do.body50
  %26 = load i32, i32* @verbose, align 4, !dbg !11476
  %cmp59 = icmp ugt i32 %26, 1, !dbg !11476
  br i1 %cmp59, label %land.lhs.true61, label %if.else66, !dbg !11476

land.lhs.true61:                                  ; preds = %if.else58
  %27 = load i32, i32* @verbose, align 4, !dbg !11476
  %cmp62 = icmp ugt i32 %27, 3, !dbg !11476
  br i1 %cmp62, label %if.then64, label %if.else66, !dbg !11470

if.then64:                                        ; preds = %land.lhs.true61
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.118, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11476
  br label %if.end84, !dbg !11476

if.else66:                                        ; preds = %land.lhs.true61, %if.else58
  %28 = load i32, i32* @verbose, align 4, !dbg !11478
  %cmp67 = icmp ugt i32 %28, 2, !dbg !11478
  br i1 %cmp67, label %land.lhs.true69, label %if.else74, !dbg !11478

land.lhs.true69:                                  ; preds = %if.else66
  %29 = load i32, i32* @verbose, align 4, !dbg !11478
  %cmp70 = icmp ugt i32 %29, 3, !dbg !11478
  br i1 %cmp70, label %if.then72, label %if.else74, !dbg !11476

if.then72:                                        ; preds = %land.lhs.true69
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.119, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11478
  br label %if.end83, !dbg !11478

if.else74:                                        ; preds = %land.lhs.true69, %if.else66
  %30 = load i32, i32* @verbose, align 4, !dbg !11480
  %cmp75 = icmp ugt i32 %30, 3, !dbg !11480
  br i1 %cmp75, label %land.lhs.true77, label %if.end82, !dbg !11480

land.lhs.true77:                                  ; preds = %if.else74
  %31 = load i32, i32* @verbose, align 4, !dbg !11480
  %cmp78 = icmp ugt i32 %31, 3, !dbg !11480
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !11478

if.then80:                                        ; preds = %land.lhs.true77
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.120, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_get_dmdlock, i64 0, i64 0)) #13, !dbg !11480
  br label %if.end82, !dbg !11480

if.end82:                                         ; preds = %if.then80, %land.lhs.true77, %if.else74
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then72
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then64
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %if.then56
  br label %do.end86, !dbg !11482

do.end86:                                         ; preds = %if.end85
  br label %if.end87

if.end87:                                         ; preds = %do.end86, %if.then48
  %32 = load i32, i32* %timer, align 4, !dbg !11483
  %add = add i32 %32, 10, !dbg !11483
  store i32 %add, i32* %timer, align 4, !dbg !11483
  br label %while.cond, !dbg !11427, !llvm.loop !11484

while.end:                                        ; preds = %land.end
  %33 = load i32, i32* %lock, align 4, !dbg !11486
  ret i32 %33, !dbg !11487
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_chk_tmg(%struct.stv090x_state* %state) #0 !dbg !11488 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %tmg_cpt = alloca i32, align 4
  %i = alloca i32, align 4
  %freq = alloca i8, align 1
  %tmg_thh = alloca i8, align 1
  %tmg_thl = alloca i8, align 1
  %tmg_lock = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11491, metadata !DIExpression()), !dbg !11492
  call void @llvm.dbg.declare(metadata i32* %tmg_cpt, metadata !11493, metadata !DIExpression()), !dbg !11494
  store i32 0, i32* %tmg_cpt, align 4, !dbg !11494
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11495, metadata !DIExpression()), !dbg !11496
  call void @llvm.dbg.declare(metadata i8* %freq, metadata !11497, metadata !DIExpression()), !dbg !11498
  call void @llvm.dbg.declare(metadata i8* %tmg_thh, metadata !11499, metadata !DIExpression()), !dbg !11500
  call void @llvm.dbg.declare(metadata i8* %tmg_thl, metadata !11501, metadata !DIExpression()), !dbg !11502
  call void @llvm.dbg.declare(metadata i32* %tmg_lock, metadata !11503, metadata !DIExpression()), !dbg !11504
  store i32 0, i32* %tmg_lock, align 4, !dbg !11504
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11505
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !11505
  %1 = load i32, i32* %demod, align 4, !dbg !11505
  %cmp = icmp eq i32 %1, 2, !dbg !11505
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11505

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11505
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 62013) #9, !dbg !11505
  br label %cond.end, !dbg !11505

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11505
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62525) #9, !dbg !11505
  br label %cond.end, !dbg !11505

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !11505
  %conv = trunc i32 %cond to i8, !dbg !11505
  store i8 %conv, i8* %freq, align 1, !dbg !11506
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11507
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !11507
  %5 = load i32, i32* %demod2, align 4, !dbg !11507
  %cmp3 = icmp eq i32 %5, 2, !dbg !11507
  br i1 %cmp3, label %cond.true5, label %cond.false7, !dbg !11507

cond.true5:                                       ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11507
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62035) #9, !dbg !11507
  br label %cond.end9, !dbg !11507

cond.false7:                                      ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11507
  %call8 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62547) #9, !dbg !11507
  br label %cond.end9, !dbg !11507

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !11507
  %conv11 = trunc i32 %cond10 to i8, !dbg !11507
  store i8 %conv11, i8* %tmg_thh, align 1, !dbg !11508
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11509
  %demod12 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !11509
  %9 = load i32, i32* %demod12, align 4, !dbg !11509
  %cmp13 = icmp eq i32 %9, 2, !dbg !11509
  br i1 %cmp13, label %cond.true15, label %cond.false17, !dbg !11509

cond.true15:                                      ; preds = %cond.end9
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11509
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %10, i32 62036) #9, !dbg !11509
  br label %cond.end19, !dbg !11509

cond.false17:                                     ; preds = %cond.end9
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11509
  %call18 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62548) #9, !dbg !11509
  br label %cond.end19, !dbg !11509

cond.end19:                                       ; preds = %cond.false17, %cond.true15
  %cond20 = phi i32 [ %call16, %cond.true15 ], [ %call18, %cond.false17 ], !dbg !11509
  %conv21 = trunc i32 %cond20 to i8, !dbg !11509
  store i8 %conv21, i8* %tmg_thl, align 1, !dbg !11510
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11511
  %demod22 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !11511
  %13 = load i32, i32* %demod22, align 4, !dbg !11511
  %cmp23 = icmp eq i32 %13, 2, !dbg !11511
  br i1 %cmp23, label %cond.true25, label %cond.false27, !dbg !11511

cond.true25:                                      ; preds = %cond.end19
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11511
  %call26 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62035, i8 zeroext 32) #9, !dbg !11511
  br label %cond.end29, !dbg !11511

cond.false27:                                     ; preds = %cond.end19
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11511
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62547, i8 zeroext 32) #9, !dbg !11511
  br label %cond.end29, !dbg !11511

cond.end29:                                       ; preds = %cond.false27, %cond.true25
  %cond30 = phi i32 [ %call26, %cond.true25 ], [ %call28, %cond.false27 ], !dbg !11511
  %cmp31 = icmp slt i32 %cond30, 0, !dbg !11513
  br i1 %cmp31, label %if.then, label %if.end, !dbg !11514

if.then:                                          ; preds = %cond.end29
  br label %err, !dbg !11515

if.end:                                           ; preds = %cond.end29
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11516
  %demod33 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !11516
  %17 = load i32, i32* %demod33, align 4, !dbg !11516
  %cmp34 = icmp eq i32 %17, 2, !dbg !11516
  br i1 %cmp34, label %cond.true36, label %cond.false38, !dbg !11516

cond.true36:                                      ; preds = %if.end
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11516
  %call37 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62036, i8 zeroext 0) #9, !dbg !11516
  br label %cond.end40, !dbg !11516

cond.false38:                                     ; preds = %if.end
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11516
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62548, i8 zeroext 0) #9, !dbg !11516
  br label %cond.end40, !dbg !11516

cond.end40:                                       ; preds = %cond.false38, %cond.true36
  %cond41 = phi i32 [ %call37, %cond.true36 ], [ %call39, %cond.false38 ], !dbg !11516
  %cmp42 = icmp slt i32 %cond41, 0, !dbg !11518
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !11519

if.then44:                                        ; preds = %cond.end40
  br label %err, !dbg !11520

if.end45:                                         ; preds = %cond.end40
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11521
  %demod46 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !11521
  %21 = load i32, i32* %demod46, align 4, !dbg !11521
  %cmp47 = icmp eq i32 %21, 2, !dbg !11521
  br i1 %cmp47, label %cond.true49, label %cond.false51, !dbg !11521

cond.true49:                                      ; preds = %if.end45
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11521
  %call50 = call i32 @stv090x_read_reg(%struct.stv090x_state* %22, i32 61972) #9, !dbg !11521
  br label %cond.end53, !dbg !11521

cond.false51:                                     ; preds = %if.end45
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11521
  %call52 = call i32 @stv090x_read_reg(%struct.stv090x_state* %23, i32 62484) #9, !dbg !11521
  br label %cond.end53, !dbg !11521

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !11521
  store i32 %cond54, i32* %reg, align 4, !dbg !11522
  %24 = load i32, i32* %reg, align 4, !dbg !11523
  %and = and i32 %24, -9, !dbg !11523
  store i32 %and, i32* %reg, align 4, !dbg !11523
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11524
  %demod55 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 1, !dbg !11524
  %26 = load i32, i32* %demod55, align 4, !dbg !11524
  %cmp56 = icmp eq i32 %26, 2, !dbg !11524
  br i1 %cmp56, label %cond.true58, label %cond.false61, !dbg !11524

cond.true58:                                      ; preds = %cond.end53
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11524
  %28 = load i32, i32* %reg, align 4, !dbg !11524
  %conv59 = trunc i32 %28 to i8, !dbg !11524
  %call60 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 61972, i8 zeroext %conv59) #9, !dbg !11524
  br label %cond.end64, !dbg !11524

cond.false61:                                     ; preds = %cond.end53
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11524
  %30 = load i32, i32* %reg, align 4, !dbg !11524
  %conv62 = trunc i32 %30 to i8, !dbg !11524
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62484, i8 zeroext %conv62) #9, !dbg !11524
  br label %cond.end64, !dbg !11524

cond.end64:                                       ; preds = %cond.false61, %cond.true58
  %cond65 = phi i32 [ %call60, %cond.true58 ], [ %call63, %cond.false61 ], !dbg !11524
  %cmp66 = icmp slt i32 %cond65, 0, !dbg !11526
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !11527

if.then68:                                        ; preds = %cond.end64
  br label %err, !dbg !11528

if.end69:                                         ; preds = %cond.end64
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11529
  %demod70 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 1, !dbg !11529
  %32 = load i32, i32* %demod70, align 4, !dbg !11529
  %cmp71 = icmp eq i32 %32, 2, !dbg !11529
  br i1 %cmp71, label %cond.true73, label %cond.false75, !dbg !11529

cond.true73:                                      ; preds = %if.end69
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11529
  %call74 = call i32 @stv090x_write_reg(%struct.stv090x_state* %33, i32 62033, i8 zeroext -128) #9, !dbg !11529
  br label %cond.end77, !dbg !11529

cond.false75:                                     ; preds = %if.end69
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11529
  %call76 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62545, i8 zeroext -128) #9, !dbg !11529
  br label %cond.end77, !dbg !11529

cond.end77:                                       ; preds = %cond.false75, %cond.true73
  %cond78 = phi i32 [ %call74, %cond.true73 ], [ %call76, %cond.false75 ], !dbg !11529
  %cmp79 = icmp slt i32 %cond78, 0, !dbg !11531
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !11532

if.then81:                                        ; preds = %cond.end77
  br label %err, !dbg !11533

if.end82:                                         ; preds = %cond.end77
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11534
  %demod83 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 1, !dbg !11534
  %36 = load i32, i32* %demod83, align 4, !dbg !11534
  %cmp84 = icmp eq i32 %36, 2, !dbg !11534
  br i1 %cmp84, label %cond.true86, label %cond.false88, !dbg !11534

cond.true86:                                      ; preds = %if.end82
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11534
  %call87 = call i32 @stv090x_write_reg(%struct.stv090x_state* %37, i32 62034, i8 zeroext 64) #9, !dbg !11534
  br label %cond.end90, !dbg !11534

cond.false88:                                     ; preds = %if.end82
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11534
  %call89 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62546, i8 zeroext 64) #9, !dbg !11534
  br label %cond.end90, !dbg !11534

cond.end90:                                       ; preds = %cond.false88, %cond.true86
  %cond91 = phi i32 [ %call87, %cond.true86 ], [ %call89, %cond.false88 ], !dbg !11534
  %cmp92 = icmp slt i32 %cond91, 0, !dbg !11536
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !11537

if.then94:                                        ; preds = %cond.end90
  br label %err, !dbg !11538

if.end95:                                         ; preds = %cond.end90
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11539
  %demod96 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 1, !dbg !11539
  %40 = load i32, i32* %demod96, align 4, !dbg !11539
  %cmp97 = icmp eq i32 %40, 2, !dbg !11539
  br i1 %cmp97, label %cond.true99, label %cond.false101, !dbg !11539

cond.true99:                                      ; preds = %if.end95
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11539
  %call100 = call i32 @stv090x_write_reg(%struct.stv090x_state* %41, i32 62013, i8 zeroext 0) #9, !dbg !11539
  br label %cond.end103, !dbg !11539

cond.false101:                                    ; preds = %if.end95
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11539
  %call102 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62525, i8 zeroext 0) #9, !dbg !11539
  br label %cond.end103, !dbg !11539

cond.end103:                                      ; preds = %cond.false101, %cond.true99
  %cond104 = phi i32 [ %call100, %cond.true99 ], [ %call102, %cond.false101 ], !dbg !11539
  %cmp105 = icmp slt i32 %cond104, 0, !dbg !11541
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !11542

if.then107:                                       ; preds = %cond.end103
  br label %err, !dbg !11543

if.end108:                                        ; preds = %cond.end103
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11544
  %demod109 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %43, i32 0, i32 1, !dbg !11544
  %44 = load i32, i32* %demod109, align 4, !dbg !11544
  %cmp110 = icmp eq i32 %44, 2, !dbg !11544
  br i1 %cmp110, label %cond.true112, label %cond.false114, !dbg !11544

cond.true112:                                     ; preds = %if.end108
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11544
  %call113 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62024, i8 zeroext 0) #9, !dbg !11544
  br label %cond.end116, !dbg !11544

cond.false114:                                    ; preds = %if.end108
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11544
  %call115 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62536, i8 zeroext 0) #9, !dbg !11544
  br label %cond.end116, !dbg !11544

cond.end116:                                      ; preds = %cond.false114, %cond.true112
  %cond117 = phi i32 [ %call113, %cond.true112 ], [ %call115, %cond.false114 ], !dbg !11544
  %cmp118 = icmp slt i32 %cond117, 0, !dbg !11546
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !11547

if.then120:                                       ; preds = %cond.end116
  br label %err, !dbg !11548

if.end121:                                        ; preds = %cond.end116
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11549
  %demod122 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %47, i32 0, i32 1, !dbg !11549
  %48 = load i32, i32* %demod122, align 4, !dbg !11549
  %cmp123 = icmp eq i32 %48, 2, !dbg !11549
  br i1 %cmp123, label %cond.true125, label %cond.false127, !dbg !11549

cond.true125:                                     ; preds = %if.end121
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11549
  %call126 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 62025, i8 zeroext 0) #9, !dbg !11549
  br label %cond.end129, !dbg !11549

cond.false127:                                    ; preds = %if.end121
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11549
  %call128 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62537, i8 zeroext 0) #9, !dbg !11549
  br label %cond.end129, !dbg !11549

cond.end129:                                      ; preds = %cond.false127, %cond.true125
  %cond130 = phi i32 [ %call126, %cond.true125 ], [ %call128, %cond.false127 ], !dbg !11549
  %cmp131 = icmp slt i32 %cond130, 0, !dbg !11551
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !11552

if.then133:                                       ; preds = %cond.end129
  br label %err, !dbg !11553

if.end134:                                        ; preds = %cond.end129
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11554
  %demod135 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %51, i32 0, i32 1, !dbg !11554
  %52 = load i32, i32* %demod135, align 4, !dbg !11554
  %cmp136 = icmp eq i32 %52, 2, !dbg !11554
  br i1 %cmp136, label %cond.true138, label %cond.false140, !dbg !11554

cond.true138:                                     ; preds = %if.end134
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11554
  %call139 = call i32 @stv090x_write_reg(%struct.stv090x_state* %53, i32 61997, i8 zeroext 101) #9, !dbg !11554
  br label %cond.end142, !dbg !11554

cond.false140:                                    ; preds = %if.end134
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11554
  %call141 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 62509, i8 zeroext 101) #9, !dbg !11554
  br label %cond.end142, !dbg !11554

cond.end142:                                      ; preds = %cond.false140, %cond.true138
  %cond143 = phi i32 [ %call139, %cond.true138 ], [ %call141, %cond.false140 ], !dbg !11554
  %cmp144 = icmp slt i32 %cond143, 0, !dbg !11556
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !11557

if.then146:                                       ; preds = %cond.end142
  br label %err, !dbg !11558

if.end147:                                        ; preds = %cond.end142
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11559
  %demod148 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %55, i32 0, i32 1, !dbg !11559
  %56 = load i32, i32* %demod148, align 4, !dbg !11559
  %cmp149 = icmp eq i32 %56, 2, !dbg !11559
  br i1 %cmp149, label %cond.true151, label %cond.false153, !dbg !11559

cond.true151:                                     ; preds = %if.end147
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11559
  %call152 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 61974, i8 zeroext 24) #9, !dbg !11559
  br label %cond.end155, !dbg !11559

cond.false153:                                    ; preds = %if.end147
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11559
  %call154 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62486, i8 zeroext 24) #9, !dbg !11559
  br label %cond.end155, !dbg !11559

cond.end155:                                      ; preds = %cond.false153, %cond.true151
  %cond156 = phi i32 [ %call152, %cond.true151 ], [ %call154, %cond.false153 ], !dbg !11559
  %cmp157 = icmp slt i32 %cond156, 0, !dbg !11561
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !11562

if.then159:                                       ; preds = %cond.end155
  br label %err, !dbg !11563

if.end160:                                        ; preds = %cond.end155
  call void @msleep(i32 10) #9, !dbg !11564
  store i32 0, i32* %i, align 4, !dbg !11565
  br label %for.cond, !dbg !11567

for.cond:                                         ; preds = %for.inc, %if.end160
  %59 = load i32, i32* %i, align 4, !dbg !11568
  %cmp161 = icmp slt i32 %59, 10, !dbg !11570
  br i1 %cmp161, label %for.body, label %for.end, !dbg !11571

for.body:                                         ; preds = %for.cond
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11572
  %demod163 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %60, i32 0, i32 1, !dbg !11572
  %61 = load i32, i32* %demod163, align 4, !dbg !11572
  %cmp164 = icmp eq i32 %61, 2, !dbg !11572
  br i1 %cmp164, label %cond.true166, label %cond.false168, !dbg !11572

cond.true166:                                     ; preds = %for.body
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11572
  %call167 = call i32 @stv090x_read_reg(%struct.stv090x_state* %62, i32 61970) #9, !dbg !11572
  br label %cond.end170, !dbg !11572

cond.false168:                                    ; preds = %for.body
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11572
  %call169 = call i32 @stv090x_read_reg(%struct.stv090x_state* %63, i32 62482) #9, !dbg !11572
  br label %cond.end170, !dbg !11572

cond.end170:                                      ; preds = %cond.false168, %cond.true166
  %cond171 = phi i32 [ %call167, %cond.true166 ], [ %call169, %cond.false168 ], !dbg !11572
  store i32 %cond171, i32* %reg, align 4, !dbg !11574
  %64 = load i32, i32* %reg, align 4, !dbg !11575
  %shr = lshr i32 %64, 5, !dbg !11575
  %and172 = and i32 %shr, 3, !dbg !11575
  %cmp173 = icmp uge i32 %and172, 2, !dbg !11577
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !11578

if.then175:                                       ; preds = %cond.end170
  %65 = load i32, i32* %tmg_cpt, align 4, !dbg !11579
  %inc = add i32 %65, 1, !dbg !11579
  store i32 %inc, i32* %tmg_cpt, align 4, !dbg !11579
  br label %if.end176, !dbg !11580

if.end176:                                        ; preds = %if.then175, %cond.end170
  call void @msleep(i32 1) #9, !dbg !11581
  br label %for.inc, !dbg !11582

for.inc:                                          ; preds = %if.end176
  %66 = load i32, i32* %i, align 4, !dbg !11583
  %inc177 = add i32 %66, 1, !dbg !11583
  store i32 %inc177, i32* %i, align 4, !dbg !11583
  br label %for.cond, !dbg !11584, !llvm.loop !11585

for.end:                                          ; preds = %for.cond
  %67 = load i32, i32* %tmg_cpt, align 4, !dbg !11587
  %cmp178 = icmp sge i32 %67, 3, !dbg !11589
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !11590

if.then180:                                       ; preds = %for.end
  store i32 1, i32* %tmg_lock, align 4, !dbg !11591
  br label %if.end181, !dbg !11592

if.end181:                                        ; preds = %if.then180, %for.end
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11593
  %demod182 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %68, i32 0, i32 1, !dbg !11593
  %69 = load i32, i32* %demod182, align 4, !dbg !11593
  %cmp183 = icmp eq i32 %69, 2, !dbg !11593
  br i1 %cmp183, label %cond.true185, label %cond.false187, !dbg !11593

cond.true185:                                     ; preds = %if.end181
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11593
  %call186 = call i32 @stv090x_write_reg(%struct.stv090x_state* %70, i32 61997, i8 zeroext 56) #9, !dbg !11593
  br label %cond.end189, !dbg !11593

cond.false187:                                    ; preds = %if.end181
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11593
  %call188 = call i32 @stv090x_write_reg(%struct.stv090x_state* %71, i32 62509, i8 zeroext 56) #9, !dbg !11593
  br label %cond.end189, !dbg !11593

cond.end189:                                      ; preds = %cond.false187, %cond.true185
  %cond190 = phi i32 [ %call186, %cond.true185 ], [ %call188, %cond.false187 ], !dbg !11593
  %cmp191 = icmp slt i32 %cond190, 0, !dbg !11595
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !11596

if.then193:                                       ; preds = %cond.end189
  br label %err, !dbg !11597

if.end194:                                        ; preds = %cond.end189
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11598
  %demod195 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %72, i32 0, i32 1, !dbg !11598
  %73 = load i32, i32* %demod195, align 4, !dbg !11598
  %cmp196 = icmp eq i32 %73, 2, !dbg !11598
  br i1 %cmp196, label %cond.true198, label %cond.false200, !dbg !11598

cond.true198:                                     ; preds = %if.end194
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11598
  %call199 = call i32 @stv090x_write_reg(%struct.stv090x_state* %74, i32 62033, i8 zeroext -120) #9, !dbg !11598
  br label %cond.end202, !dbg !11598

cond.false200:                                    ; preds = %if.end194
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11598
  %call201 = call i32 @stv090x_write_reg(%struct.stv090x_state* %75, i32 62545, i8 zeroext -120) #9, !dbg !11598
  br label %cond.end202, !dbg !11598

cond.end202:                                      ; preds = %cond.false200, %cond.true198
  %cond203 = phi i32 [ %call199, %cond.true198 ], [ %call201, %cond.false200 ], !dbg !11598
  %cmp204 = icmp slt i32 %cond203, 0, !dbg !11600
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !11601

if.then206:                                       ; preds = %cond.end202
  br label %err, !dbg !11602

if.end207:                                        ; preds = %cond.end202
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11603
  %demod208 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %76, i32 0, i32 1, !dbg !11603
  %77 = load i32, i32* %demod208, align 4, !dbg !11603
  %cmp209 = icmp eq i32 %77, 2, !dbg !11603
  br i1 %cmp209, label %cond.true211, label %cond.false213, !dbg !11603

cond.true211:                                     ; preds = %if.end207
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11603
  %call212 = call i32 @stv090x_write_reg(%struct.stv090x_state* %78, i32 62034, i8 zeroext 104) #9, !dbg !11603
  br label %cond.end215, !dbg !11603

cond.false213:                                    ; preds = %if.end207
  %79 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11603
  %call214 = call i32 @stv090x_write_reg(%struct.stv090x_state* %79, i32 62546, i8 zeroext 104) #9, !dbg !11603
  br label %cond.end215, !dbg !11603

cond.end215:                                      ; preds = %cond.false213, %cond.true211
  %cond216 = phi i32 [ %call212, %cond.true211 ], [ %call214, %cond.false213 ], !dbg !11603
  %cmp217 = icmp slt i32 %cond216, 0, !dbg !11605
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !11606

if.then219:                                       ; preds = %cond.end215
  br label %err, !dbg !11607

if.end220:                                        ; preds = %cond.end215
  %80 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11608
  %demod221 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %80, i32 0, i32 1, !dbg !11608
  %81 = load i32, i32* %demod221, align 4, !dbg !11608
  %cmp222 = icmp eq i32 %81, 2, !dbg !11608
  br i1 %cmp222, label %cond.true224, label %cond.false226, !dbg !11608

cond.true224:                                     ; preds = %if.end220
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11608
  %83 = load i8, i8* %freq, align 1, !dbg !11608
  %call225 = call i32 @stv090x_write_reg(%struct.stv090x_state* %82, i32 62013, i8 zeroext %83) #9, !dbg !11608
  br label %cond.end228, !dbg !11608

cond.false226:                                    ; preds = %if.end220
  %84 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11608
  %85 = load i8, i8* %freq, align 1, !dbg !11608
  %call227 = call i32 @stv090x_write_reg(%struct.stv090x_state* %84, i32 62525, i8 zeroext %85) #9, !dbg !11608
  br label %cond.end228, !dbg !11608

cond.end228:                                      ; preds = %cond.false226, %cond.true224
  %cond229 = phi i32 [ %call225, %cond.true224 ], [ %call227, %cond.false226 ], !dbg !11608
  %cmp230 = icmp slt i32 %cond229, 0, !dbg !11610
  br i1 %cmp230, label %if.then232, label %if.end233, !dbg !11611

if.then232:                                       ; preds = %cond.end228
  br label %err, !dbg !11612

if.end233:                                        ; preds = %cond.end228
  %86 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11613
  %demod234 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %86, i32 0, i32 1, !dbg !11613
  %87 = load i32, i32* %demod234, align 4, !dbg !11613
  %cmp235 = icmp eq i32 %87, 2, !dbg !11613
  br i1 %cmp235, label %cond.true237, label %cond.false239, !dbg !11613

cond.true237:                                     ; preds = %if.end233
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11613
  %89 = load i8, i8* %tmg_thh, align 1, !dbg !11613
  %call238 = call i32 @stv090x_write_reg(%struct.stv090x_state* %88, i32 62035, i8 zeroext %89) #9, !dbg !11613
  br label %cond.end241, !dbg !11613

cond.false239:                                    ; preds = %if.end233
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11613
  %91 = load i8, i8* %tmg_thh, align 1, !dbg !11613
  %call240 = call i32 @stv090x_write_reg(%struct.stv090x_state* %90, i32 62547, i8 zeroext %91) #9, !dbg !11613
  br label %cond.end241, !dbg !11613

cond.end241:                                      ; preds = %cond.false239, %cond.true237
  %cond242 = phi i32 [ %call238, %cond.true237 ], [ %call240, %cond.false239 ], !dbg !11613
  %cmp243 = icmp slt i32 %cond242, 0, !dbg !11615
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !11616

if.then245:                                       ; preds = %cond.end241
  br label %err, !dbg !11617

if.end246:                                        ; preds = %cond.end241
  %92 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11618
  %demod247 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %92, i32 0, i32 1, !dbg !11618
  %93 = load i32, i32* %demod247, align 4, !dbg !11618
  %cmp248 = icmp eq i32 %93, 2, !dbg !11618
  br i1 %cmp248, label %cond.true250, label %cond.false252, !dbg !11618

cond.true250:                                     ; preds = %if.end246
  %94 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11618
  %95 = load i8, i8* %tmg_thl, align 1, !dbg !11618
  %call251 = call i32 @stv090x_write_reg(%struct.stv090x_state* %94, i32 62036, i8 zeroext %95) #9, !dbg !11618
  br label %cond.end254, !dbg !11618

cond.false252:                                    ; preds = %if.end246
  %96 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11618
  %97 = load i8, i8* %tmg_thl, align 1, !dbg !11618
  %call253 = call i32 @stv090x_write_reg(%struct.stv090x_state* %96, i32 62548, i8 zeroext %97) #9, !dbg !11618
  br label %cond.end254, !dbg !11618

cond.end254:                                      ; preds = %cond.false252, %cond.true250
  %cond255 = phi i32 [ %call251, %cond.true250 ], [ %call253, %cond.false252 ], !dbg !11618
  %cmp256 = icmp slt i32 %cond255, 0, !dbg !11620
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !11621

if.then258:                                       ; preds = %cond.end254
  br label %err, !dbg !11622

if.end259:                                        ; preds = %cond.end254
  %98 = load i32, i32* %tmg_lock, align 4, !dbg !11623
  store i32 %98, i32* %retval, align 4, !dbg !11624
  br label %return, !dbg !11624

err:                                              ; preds = %if.then258, %if.then245, %if.then232, %if.then219, %if.then206, %if.then193, %if.then159, %if.then146, %if.then133, %if.then120, %if.then107, %if.then94, %if.then81, %if.then68, %if.then44, %if.then
  call void @llvm.dbg.label(metadata !11625), !dbg !11626
  br label %do.body, !dbg !11627

do.body:                                          ; preds = %err
  %99 = load i32, i32* @verbose, align 4, !dbg !11628
  %cmp260 = icmp ugt i32 %99, 0, !dbg !11628
  br i1 %cmp260, label %land.lhs.true, label %if.else, !dbg !11628

land.lhs.true:                                    ; preds = %do.body
  %100 = load i32, i32* @verbose, align 4, !dbg !11628
  %cmp262 = icmp ugt i32 %100, 0, !dbg !11628
  br i1 %cmp262, label %if.then264, label %if.else, !dbg !11633

if.then264:                                       ; preds = %land.lhs.true
  %call265 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_chk_tmg, i64 0, i64 0)) #13, !dbg !11628
  br label %if.end292, !dbg !11628

if.else:                                          ; preds = %land.lhs.true, %do.body
  %101 = load i32, i32* @verbose, align 4, !dbg !11634
  %cmp266 = icmp ugt i32 %101, 1, !dbg !11634
  br i1 %cmp266, label %land.lhs.true268, label %if.else273, !dbg !11634

land.lhs.true268:                                 ; preds = %if.else
  %102 = load i32, i32* @verbose, align 4, !dbg !11634
  %cmp269 = icmp ugt i32 %102, 0, !dbg !11634
  br i1 %cmp269, label %if.then271, label %if.else273, !dbg !11628

if.then271:                                       ; preds = %land.lhs.true268
  %call272 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_chk_tmg, i64 0, i64 0)) #13, !dbg !11634
  br label %if.end291, !dbg !11634

if.else273:                                       ; preds = %land.lhs.true268, %if.else
  %103 = load i32, i32* @verbose, align 4, !dbg !11636
  %cmp274 = icmp ugt i32 %103, 2, !dbg !11636
  br i1 %cmp274, label %land.lhs.true276, label %if.else281, !dbg !11636

land.lhs.true276:                                 ; preds = %if.else273
  %104 = load i32, i32* @verbose, align 4, !dbg !11636
  %cmp277 = icmp ugt i32 %104, 0, !dbg !11636
  br i1 %cmp277, label %if.then279, label %if.else281, !dbg !11634

if.then279:                                       ; preds = %land.lhs.true276
  %call280 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_chk_tmg, i64 0, i64 0)) #13, !dbg !11636
  br label %if.end290, !dbg !11636

if.else281:                                       ; preds = %land.lhs.true276, %if.else273
  %105 = load i32, i32* @verbose, align 4, !dbg !11638
  %cmp282 = icmp ugt i32 %105, 3, !dbg !11638
  br i1 %cmp282, label %land.lhs.true284, label %if.end289, !dbg !11638

land.lhs.true284:                                 ; preds = %if.else281
  %106 = load i32, i32* @verbose, align 4, !dbg !11638
  %cmp285 = icmp ugt i32 %106, 0, !dbg !11638
  br i1 %cmp285, label %if.then287, label %if.end289, !dbg !11636

if.then287:                                       ; preds = %land.lhs.true284
  %call288 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_chk_tmg, i64 0, i64 0)) #13, !dbg !11638
  br label %if.end289, !dbg !11638

if.end289:                                        ; preds = %if.then287, %land.lhs.true284, %if.else281
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.then279
  br label %if.end291

if.end291:                                        ; preds = %if.end290, %if.then271
  br label %if.end292

if.end292:                                        ; preds = %if.end291, %if.then264
  br label %do.end, !dbg !11640

do.end:                                           ; preds = %if.end292
  store i32 -1, i32* %retval, align 4, !dbg !11641
  br label %return, !dbg !11641

return:                                           ; preds = %do.end, %if.end259
  %107 = load i32, i32* %retval, align 4, !dbg !11642
  ret i32 %107, !dbg !11642
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_sw_algo(%struct.stv090x_state* %state) #0 !dbg !11643 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %no_signal = alloca i32, align 4
  %zigzag = alloca i32, align 4
  %lock = alloca i32, align 4
  %reg = alloca i32, align 4
  %dvbs2_fly_wheel = alloca i32, align 4
  %inc = alloca i32, align 4
  %timeout_step = alloca i32, align 4
  %trials = alloca i32, align 4
  %steps_max = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !11644, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.declare(metadata i32* %no_signal, metadata !11646, metadata !DIExpression()), !dbg !11647
  call void @llvm.dbg.declare(metadata i32* %zigzag, metadata !11648, metadata !DIExpression()), !dbg !11649
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !11650, metadata !DIExpression()), !dbg !11651
  store i32 0, i32* %lock, align 4, !dbg !11651
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11652, metadata !DIExpression()), !dbg !11653
  call void @llvm.dbg.declare(metadata i32* %dvbs2_fly_wheel, metadata !11654, metadata !DIExpression()), !dbg !11655
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !11656, metadata !DIExpression()), !dbg !11657
  call void @llvm.dbg.declare(metadata i32* %timeout_step, metadata !11658, metadata !DIExpression()), !dbg !11659
  call void @llvm.dbg.declare(metadata i32* %trials, metadata !11660, metadata !DIExpression()), !dbg !11661
  call void @llvm.dbg.declare(metadata i32* %steps_max, metadata !11662, metadata !DIExpression()), !dbg !11663
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11664
  %call = call i32 @stv090x_get_loop_params(%struct.stv090x_state* %0, i32* %inc, i32* %timeout_step, i32* %steps_max) #9, !dbg !11665
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11666
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 12, !dbg !11667
  %2 = load i32, i32* %search_mode, align 8, !dbg !11667
  switch i32 %2, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb18
    i32 3, label %sw.bb46
  ], !dbg !11668

sw.bb:                                            ; preds = %entry, %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11669
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 3, !dbg !11672
  %4 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !11672
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %4, i32 0, i32 5, !dbg !11673
  %5 = load i32, i32* %dev_ver, align 4, !dbg !11673
  %cmp = icmp uge i32 %5, 32, !dbg !11674
  br i1 %cmp, label %if.then, label %if.end6, !dbg !11675

if.then:                                          ; preds = %sw.bb
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11676
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 1, !dbg !11676
  %7 = load i32, i32* %demod, align 4, !dbg !11676
  %cmp1 = icmp eq i32 %7, 2, !dbg !11676
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11676

cond.true:                                        ; preds = %if.then
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11676
  %call2 = call i32 @stv090x_write_reg(%struct.stv090x_state* %8, i32 62013, i8 zeroext 59) #9, !dbg !11676
  br label %cond.end, !dbg !11676

cond.false:                                       ; preds = %if.then
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11676
  %call3 = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 62525, i8 zeroext 59) #9, !dbg !11676
  br label %cond.end, !dbg !11676

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !11676
  %cmp4 = icmp slt i32 %cond, 0, !dbg !11679
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !11680

if.then5:                                         ; preds = %cond.end
  br label %err, !dbg !11681

if.end:                                           ; preds = %cond.end
  br label %if.end6, !dbg !11682

if.end6:                                          ; preds = %if.end, %sw.bb
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11683
  %demod7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !11683
  %11 = load i32, i32* %demod7, align 4, !dbg !11683
  %cmp8 = icmp eq i32 %11, 2, !dbg !11683
  br i1 %cmp8, label %cond.true9, label %cond.false11, !dbg !11683

cond.true9:                                       ; preds = %if.end6
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11683
  %call10 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 61972, i8 zeroext 73) #9, !dbg !11683
  br label %cond.end13, !dbg !11683

cond.false11:                                     ; preds = %if.end6
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11683
  %call12 = call i32 @stv090x_write_reg(%struct.stv090x_state* %13, i32 62484, i8 zeroext 73) #9, !dbg !11683
  br label %cond.end13, !dbg !11683

cond.end13:                                       ; preds = %cond.false11, %cond.true9
  %cond14 = phi i32 [ %call10, %cond.true9 ], [ %call12, %cond.false11 ], !dbg !11683
  %cmp15 = icmp slt i32 %cond14, 0, !dbg !11685
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !11686

if.then16:                                        ; preds = %cond.end13
  br label %err, !dbg !11687

if.end17:                                         ; preds = %cond.end13
  store i32 0, i32* %zigzag, align 4, !dbg !11688
  br label %sw.epilog, !dbg !11689

sw.bb18:                                          ; preds = %entry
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11690
  %internal19 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 3, !dbg !11692
  %15 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal19, align 8, !dbg !11692
  %dev_ver20 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %15, i32 0, i32 5, !dbg !11693
  %16 = load i32, i32* %dev_ver20, align 4, !dbg !11693
  %cmp21 = icmp uge i32 %16, 32, !dbg !11694
  br i1 %cmp21, label %if.then22, label %if.end34, !dbg !11695

if.then22:                                        ; preds = %sw.bb18
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11696
  %demod23 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !11696
  %18 = load i32, i32* %demod23, align 4, !dbg !11696
  %cmp24 = icmp eq i32 %18, 2, !dbg !11696
  br i1 %cmp24, label %cond.true25, label %cond.false27, !dbg !11696

cond.true25:                                      ; preds = %if.then22
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11696
  %call26 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 61985, i8 zeroext 121) #9, !dbg !11696
  br label %cond.end29, !dbg !11696

cond.false27:                                     ; preds = %if.then22
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11696
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62497, i8 zeroext 121) #9, !dbg !11696
  br label %cond.end29, !dbg !11696

cond.end29:                                       ; preds = %cond.false27, %cond.true25
  %cond30 = phi i32 [ %call26, %cond.true25 ], [ %call28, %cond.false27 ], !dbg !11696
  %cmp31 = icmp slt i32 %cond30, 0, !dbg !11699
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !11700

if.then32:                                        ; preds = %cond.end29
  br label %err, !dbg !11701

if.end33:                                         ; preds = %cond.end29
  br label %if.end34, !dbg !11702

if.end34:                                         ; preds = %if.end33, %sw.bb18
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11703
  %demod35 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 1, !dbg !11703
  %22 = load i32, i32* %demod35, align 4, !dbg !11703
  %cmp36 = icmp eq i32 %22, 2, !dbg !11703
  br i1 %cmp36, label %cond.true37, label %cond.false39, !dbg !11703

cond.true37:                                      ; preds = %if.end34
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11703
  %call38 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 61972, i8 zeroext -119) #9, !dbg !11703
  br label %cond.end41, !dbg !11703

cond.false39:                                     ; preds = %if.end34
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11703
  %call40 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 62484, i8 zeroext -119) #9, !dbg !11703
  br label %cond.end41, !dbg !11703

cond.end41:                                       ; preds = %cond.false39, %cond.true37
  %cond42 = phi i32 [ %call38, %cond.true37 ], [ %call40, %cond.false39 ], !dbg !11703
  %cmp43 = icmp slt i32 %cond42, 0, !dbg !11705
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !11706

if.then44:                                        ; preds = %cond.end41
  br label %err, !dbg !11707

if.end45:                                         ; preds = %cond.end41
  store i32 1, i32* %zigzag, align 4, !dbg !11708
  br label %sw.epilog, !dbg !11709

sw.bb46:                                          ; preds = %entry
  br label %sw.default, !dbg !11709

sw.default:                                       ; preds = %entry, %sw.bb46
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11710
  %internal47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 3, !dbg !11712
  %26 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal47, align 8, !dbg !11712
  %dev_ver48 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %26, i32 0, i32 5, !dbg !11713
  %27 = load i32, i32* %dev_ver48, align 4, !dbg !11713
  %cmp49 = icmp uge i32 %27, 32, !dbg !11714
  br i1 %cmp49, label %if.then50, label %if.end73, !dbg !11715

if.then50:                                        ; preds = %sw.default
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11716
  %demod51 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !11716
  %29 = load i32, i32* %demod51, align 4, !dbg !11716
  %cmp52 = icmp eq i32 %29, 2, !dbg !11716
  br i1 %cmp52, label %cond.true53, label %cond.false55, !dbg !11716

cond.true53:                                      ; preds = %if.then50
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11716
  %call54 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62013, i8 zeroext 59) #9, !dbg !11716
  br label %cond.end57, !dbg !11716

cond.false55:                                     ; preds = %if.then50
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11716
  %call56 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62525, i8 zeroext 59) #9, !dbg !11716
  br label %cond.end57, !dbg !11716

cond.end57:                                       ; preds = %cond.false55, %cond.true53
  %cond58 = phi i32 [ %call54, %cond.true53 ], [ %call56, %cond.false55 ], !dbg !11716
  %cmp59 = icmp slt i32 %cond58, 0, !dbg !11719
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !11720

if.then60:                                        ; preds = %cond.end57
  br label %err, !dbg !11721

if.end61:                                         ; preds = %cond.end57
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11722
  %demod62 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !11722
  %33 = load i32, i32* %demod62, align 4, !dbg !11722
  %cmp63 = icmp eq i32 %33, 2, !dbg !11722
  br i1 %cmp63, label %cond.true64, label %cond.false66, !dbg !11722

cond.true64:                                      ; preds = %if.end61
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11722
  %call65 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 61985, i8 zeroext 121) #9, !dbg !11722
  br label %cond.end68, !dbg !11722

cond.false66:                                     ; preds = %if.end61
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11722
  %call67 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62497, i8 zeroext 121) #9, !dbg !11722
  br label %cond.end68, !dbg !11722

cond.end68:                                       ; preds = %cond.false66, %cond.true64
  %cond69 = phi i32 [ %call65, %cond.true64 ], [ %call67, %cond.false66 ], !dbg !11722
  %cmp70 = icmp slt i32 %cond69, 0, !dbg !11724
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !11725

if.then71:                                        ; preds = %cond.end68
  br label %err, !dbg !11726

if.end72:                                         ; preds = %cond.end68
  br label %if.end73, !dbg !11727

if.end73:                                         ; preds = %if.end72, %sw.default
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11728
  %demod74 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !11728
  %37 = load i32, i32* %demod74, align 4, !dbg !11728
  %cmp75 = icmp eq i32 %37, 2, !dbg !11728
  br i1 %cmp75, label %cond.true76, label %cond.false78, !dbg !11728

cond.true76:                                      ; preds = %if.end73
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11728
  %call77 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 61972, i8 zeroext -55) #9, !dbg !11728
  br label %cond.end80, !dbg !11728

cond.false78:                                     ; preds = %if.end73
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11728
  %call79 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62484, i8 zeroext -55) #9, !dbg !11728
  br label %cond.end80, !dbg !11728

cond.end80:                                       ; preds = %cond.false78, %cond.true76
  %cond81 = phi i32 [ %call77, %cond.true76 ], [ %call79, %cond.false78 ], !dbg !11728
  %cmp82 = icmp slt i32 %cond81, 0, !dbg !11730
  br i1 %cmp82, label %if.then83, label %if.end84, !dbg !11731

if.then83:                                        ; preds = %cond.end80
  br label %err, !dbg !11732

if.end84:                                         ; preds = %cond.end80
  store i32 0, i32* %zigzag, align 4, !dbg !11733
  br label %sw.epilog, !dbg !11734

sw.epilog:                                        ; preds = %if.end84, %if.end45, %if.end17
  store i32 0, i32* %trials, align 4, !dbg !11735
  br label %do.body, !dbg !11736

do.body:                                          ; preds = %land.end, %sw.epilog
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11737
  %41 = load i32, i32* %inc, align 4, !dbg !11739
  %42 = load i32, i32* %timeout_step, align 4, !dbg !11740
  %43 = load i32, i32* %zigzag, align 4, !dbg !11741
  %44 = load i32, i32* %steps_max, align 4, !dbg !11742
  %call85 = call i32 @stv090x_search_car_loop(%struct.stv090x_state* %40, i32 %41, i32 %42, i32 %43, i32 %44) #9, !dbg !11743
  store i32 %call85, i32* %lock, align 4, !dbg !11744
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11745
  %call86 = call i32 @stv090x_chk_signal(%struct.stv090x_state* %45) #9, !dbg !11746
  store i32 %call86, i32* %no_signal, align 4, !dbg !11747
  %46 = load i32, i32* %trials, align 4, !dbg !11748
  %inc87 = add i32 %46, 1, !dbg !11748
  store i32 %inc87, i32* %trials, align 4, !dbg !11748
  %47 = load i32, i32* %lock, align 4, !dbg !11749
  %tobool = icmp ne i32 %47, 0, !dbg !11749
  br i1 %tobool, label %if.then91, label %lor.lhs.false, !dbg !11751

lor.lhs.false:                                    ; preds = %do.body
  %48 = load i32, i32* %no_signal, align 4, !dbg !11752
  %tobool88 = icmp ne i32 %48, 0, !dbg !11752
  br i1 %tobool88, label %if.then91, label %lor.lhs.false89, !dbg !11753

lor.lhs.false89:                                  ; preds = %lor.lhs.false
  %49 = load i32, i32* %trials, align 4, !dbg !11754
  %cmp90 = icmp eq i32 %49, 2, !dbg !11755
  br i1 %cmp90, label %if.then91, label %if.end187, !dbg !11756

if.then91:                                        ; preds = %lor.lhs.false89, %lor.lhs.false, %do.body
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11757
  %internal92 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 3, !dbg !11760
  %51 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal92, align 8, !dbg !11760
  %dev_ver93 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %51, i32 0, i32 5, !dbg !11761
  %52 = load i32, i32* %dev_ver93, align 4, !dbg !11761
  %cmp94 = icmp uge i32 %52, 32, !dbg !11762
  br i1 %cmp94, label %if.then95, label %if.end118, !dbg !11763

if.then95:                                        ; preds = %if.then91
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11764
  %demod96 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %53, i32 0, i32 1, !dbg !11764
  %54 = load i32, i32* %demod96, align 4, !dbg !11764
  %cmp97 = icmp eq i32 %54, 2, !dbg !11764
  br i1 %cmp97, label %cond.true98, label %cond.false100, !dbg !11764

cond.true98:                                      ; preds = %if.then95
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11764
  %call99 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 62013, i8 zeroext 73) #9, !dbg !11764
  br label %cond.end102, !dbg !11764

cond.false100:                                    ; preds = %if.then95
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11764
  %call101 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62525, i8 zeroext 73) #9, !dbg !11764
  br label %cond.end102, !dbg !11764

cond.end102:                                      ; preds = %cond.false100, %cond.true98
  %cond103 = phi i32 [ %call99, %cond.true98 ], [ %call101, %cond.false100 ], !dbg !11764
  %cmp104 = icmp slt i32 %cond103, 0, !dbg !11767
  br i1 %cmp104, label %if.then105, label %if.end106, !dbg !11768

if.then105:                                       ; preds = %cond.end102
  br label %err, !dbg !11769

if.end106:                                        ; preds = %cond.end102
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11770
  %demod107 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %57, i32 0, i32 1, !dbg !11770
  %58 = load i32, i32* %demod107, align 4, !dbg !11770
  %cmp108 = icmp eq i32 %58, 2, !dbg !11770
  br i1 %cmp108, label %cond.true109, label %cond.false111, !dbg !11770

cond.true109:                                     ; preds = %if.end106
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11770
  %call110 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 61985, i8 zeroext -98) #9, !dbg !11770
  br label %cond.end113, !dbg !11770

cond.false111:                                    ; preds = %if.end106
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11770
  %call112 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62497, i8 zeroext -98) #9, !dbg !11770
  br label %cond.end113, !dbg !11770

cond.end113:                                      ; preds = %cond.false111, %cond.true109
  %cond114 = phi i32 [ %call110, %cond.true109 ], [ %call112, %cond.false111 ], !dbg !11770
  %cmp115 = icmp slt i32 %cond114, 0, !dbg !11772
  br i1 %cmp115, label %if.then116, label %if.end117, !dbg !11773

if.then116:                                       ; preds = %cond.end113
  br label %err, !dbg !11774

if.end117:                                        ; preds = %cond.end113
  br label %if.end118, !dbg !11775

if.end118:                                        ; preds = %if.end117, %if.then91
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11776
  %demod119 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %61, i32 0, i32 1, !dbg !11776
  %62 = load i32, i32* %demod119, align 4, !dbg !11776
  %cmp120 = icmp eq i32 %62, 2, !dbg !11776
  br i1 %cmp120, label %cond.true121, label %cond.false123, !dbg !11776

cond.true121:                                     ; preds = %if.end118
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11776
  %call122 = call i32 @stv090x_read_reg(%struct.stv090x_state* %63, i32 61979) #9, !dbg !11776
  br label %cond.end125, !dbg !11776

cond.false123:                                    ; preds = %if.end118
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11776
  %call124 = call i32 @stv090x_read_reg(%struct.stv090x_state* %64, i32 62491) #9, !dbg !11776
  br label %cond.end125, !dbg !11776

cond.end125:                                      ; preds = %cond.false123, %cond.true121
  %cond126 = phi i32 [ %call122, %cond.true121 ], [ %call124, %cond.false123 ], !dbg !11776
  store i32 %cond126, i32* %reg, align 4, !dbg !11777
  %65 = load i32, i32* %lock, align 4, !dbg !11778
  %tobool127 = icmp ne i32 %65, 0, !dbg !11780
  br i1 %tobool127, label %land.lhs.true, label %if.end186, !dbg !11781

land.lhs.true:                                    ; preds = %cond.end125
  %66 = load i32, i32* %reg, align 4, !dbg !11782
  %shr = lshr i32 %66, 5, !dbg !11782
  %and = and i32 %shr, 3, !dbg !11782
  %cmp128 = icmp eq i32 %and, 2, !dbg !11783
  br i1 %cmp128, label %if.then129, label %if.end186, !dbg !11784

if.then129:                                       ; preds = %land.lhs.true
  %67 = load i32, i32* %timeout_step, align 4, !dbg !11785
  call void @msleep(i32 %67) #9, !dbg !11787
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11788
  %demod130 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %68, i32 0, i32 1, !dbg !11788
  %69 = load i32, i32* %demod130, align 4, !dbg !11788
  %cmp131 = icmp eq i32 %69, 2, !dbg !11788
  br i1 %cmp131, label %cond.true132, label %cond.false134, !dbg !11788

cond.true132:                                     ; preds = %if.then129
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11788
  %call133 = call i32 @stv090x_read_reg(%struct.stv090x_state* %70, i32 61980) #9, !dbg !11788
  br label %cond.end136, !dbg !11788

cond.false134:                                    ; preds = %if.then129
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11788
  %call135 = call i32 @stv090x_read_reg(%struct.stv090x_state* %71, i32 62492) #9, !dbg !11788
  br label %cond.end136, !dbg !11788

cond.end136:                                      ; preds = %cond.false134, %cond.true132
  %cond137 = phi i32 [ %call133, %cond.true132 ], [ %call135, %cond.false134 ], !dbg !11788
  store i32 %cond137, i32* %reg, align 4, !dbg !11789
  %72 = load i32, i32* %reg, align 4, !dbg !11790
  %shr138 = lshr i32 %72, 0, !dbg !11790
  %and139 = and i32 %shr138, 15, !dbg !11790
  store i32 %and139, i32* %dvbs2_fly_wheel, align 4, !dbg !11791
  %73 = load i32, i32* %dvbs2_fly_wheel, align 4, !dbg !11792
  %cmp140 = icmp slt i32 %73, 13, !dbg !11794
  br i1 %cmp140, label %if.then141, label %if.end152, !dbg !11795

if.then141:                                       ; preds = %cond.end136
  %74 = load i32, i32* %timeout_step, align 4, !dbg !11796
  call void @msleep(i32 %74) #9, !dbg !11798
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11799
  %demod142 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %75, i32 0, i32 1, !dbg !11799
  %76 = load i32, i32* %demod142, align 4, !dbg !11799
  %cmp143 = icmp eq i32 %76, 2, !dbg !11799
  br i1 %cmp143, label %cond.true144, label %cond.false146, !dbg !11799

cond.true144:                                     ; preds = %if.then141
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11799
  %call145 = call i32 @stv090x_read_reg(%struct.stv090x_state* %77, i32 61980) #9, !dbg !11799
  br label %cond.end148, !dbg !11799

cond.false146:                                    ; preds = %if.then141
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11799
  %call147 = call i32 @stv090x_read_reg(%struct.stv090x_state* %78, i32 62492) #9, !dbg !11799
  br label %cond.end148, !dbg !11799

cond.end148:                                      ; preds = %cond.false146, %cond.true144
  %cond149 = phi i32 [ %call145, %cond.true144 ], [ %call147, %cond.false146 ], !dbg !11799
  store i32 %cond149, i32* %reg, align 4, !dbg !11800
  %79 = load i32, i32* %reg, align 4, !dbg !11801
  %shr150 = lshr i32 %79, 0, !dbg !11801
  %and151 = and i32 %shr150, 15, !dbg !11801
  store i32 %and151, i32* %dvbs2_fly_wheel, align 4, !dbg !11802
  br label %if.end152, !dbg !11803

if.end152:                                        ; preds = %cond.end148, %cond.end136
  %80 = load i32, i32* %dvbs2_fly_wheel, align 4, !dbg !11804
  %cmp153 = icmp slt i32 %80, 13, !dbg !11806
  br i1 %cmp153, label %if.then154, label %if.end185, !dbg !11807

if.then154:                                       ; preds = %if.end152
  store i32 0, i32* %lock, align 4, !dbg !11808
  %81 = load i32, i32* %trials, align 4, !dbg !11810
  %cmp155 = icmp slt i32 %81, 2, !dbg !11812
  br i1 %cmp155, label %if.then156, label %if.end184, !dbg !11813

if.then156:                                       ; preds = %if.then154
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11814
  %internal157 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %82, i32 0, i32 3, !dbg !11817
  %83 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal157, align 8, !dbg !11817
  %dev_ver158 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %83, i32 0, i32 5, !dbg !11818
  %84 = load i32, i32* %dev_ver158, align 4, !dbg !11818
  %cmp159 = icmp uge i32 %84, 32, !dbg !11819
  br i1 %cmp159, label %if.then160, label %if.end172, !dbg !11820

if.then160:                                       ; preds = %if.then156
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11821
  %demod161 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %85, i32 0, i32 1, !dbg !11821
  %86 = load i32, i32* %demod161, align 4, !dbg !11821
  %cmp162 = icmp eq i32 %86, 2, !dbg !11821
  br i1 %cmp162, label %cond.true163, label %cond.false165, !dbg !11821

cond.true163:                                     ; preds = %if.then160
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11821
  %call164 = call i32 @stv090x_write_reg(%struct.stv090x_state* %87, i32 61985, i8 zeroext 121) #9, !dbg !11821
  br label %cond.end167, !dbg !11821

cond.false165:                                    ; preds = %if.then160
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11821
  %call166 = call i32 @stv090x_write_reg(%struct.stv090x_state* %88, i32 62497, i8 zeroext 121) #9, !dbg !11821
  br label %cond.end167, !dbg !11821

cond.end167:                                      ; preds = %cond.false165, %cond.true163
  %cond168 = phi i32 [ %call164, %cond.true163 ], [ %call166, %cond.false165 ], !dbg !11821
  %cmp169 = icmp slt i32 %cond168, 0, !dbg !11824
  br i1 %cmp169, label %if.then170, label %if.end171, !dbg !11825

if.then170:                                       ; preds = %cond.end167
  br label %err, !dbg !11826

if.end171:                                        ; preds = %cond.end167
  br label %if.end172, !dbg !11827

if.end172:                                        ; preds = %if.end171, %if.then156
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11828
  %demod173 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %89, i32 0, i32 1, !dbg !11828
  %90 = load i32, i32* %demod173, align 4, !dbg !11828
  %cmp174 = icmp eq i32 %90, 2, !dbg !11828
  br i1 %cmp174, label %cond.true175, label %cond.false177, !dbg !11828

cond.true175:                                     ; preds = %if.end172
  %91 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11828
  %call176 = call i32 @stv090x_write_reg(%struct.stv090x_state* %91, i32 61972, i8 zeroext -119) #9, !dbg !11828
  br label %cond.end179, !dbg !11828

cond.false177:                                    ; preds = %if.end172
  %92 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11828
  %call178 = call i32 @stv090x_write_reg(%struct.stv090x_state* %92, i32 62484, i8 zeroext -119) #9, !dbg !11828
  br label %cond.end179, !dbg !11828

cond.end179:                                      ; preds = %cond.false177, %cond.true175
  %cond180 = phi i32 [ %call176, %cond.true175 ], [ %call178, %cond.false177 ], !dbg !11828
  %cmp181 = icmp slt i32 %cond180, 0, !dbg !11830
  br i1 %cmp181, label %if.then182, label %if.end183, !dbg !11831

if.then182:                                       ; preds = %cond.end179
  br label %err, !dbg !11832

if.end183:                                        ; preds = %cond.end179
  br label %if.end184, !dbg !11833

if.end184:                                        ; preds = %if.end183, %if.then154
  br label %if.end185, !dbg !11834

if.end185:                                        ; preds = %if.end184, %if.end152
  br label %if.end186, !dbg !11835

if.end186:                                        ; preds = %if.end185, %land.lhs.true, %cond.end125
  br label %if.end187, !dbg !11836

if.end187:                                        ; preds = %if.end186, %lor.lhs.false89
  br label %do.cond, !dbg !11837

do.cond:                                          ; preds = %if.end187
  %93 = load i32, i32* %lock, align 4, !dbg !11838
  %tobool188 = icmp ne i32 %93, 0, !dbg !11838
  br i1 %tobool188, label %land.end, label %land.lhs.true189, !dbg !11839

land.lhs.true189:                                 ; preds = %do.cond
  %94 = load i32, i32* %trials, align 4, !dbg !11840
  %cmp190 = icmp slt i32 %94, 2, !dbg !11841
  br i1 %cmp190, label %land.rhs, label %land.end, !dbg !11842

land.rhs:                                         ; preds = %land.lhs.true189
  %95 = load i32, i32* %no_signal, align 4, !dbg !11843
  %tobool191 = icmp ne i32 %95, 0, !dbg !11844
  %lnot = xor i1 %tobool191, true, !dbg !11844
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true189, %do.cond
  %96 = phi i1 [ false, %land.lhs.true189 ], [ false, %do.cond ], [ %lnot, %land.rhs ], !dbg !11845
  br i1 %96, label %do.body, label %do.end, !dbg !11837, !llvm.loop !11846

do.end:                                           ; preds = %land.end
  %97 = load i32, i32* %lock, align 4, !dbg !11848
  store i32 %97, i32* %retval, align 4, !dbg !11849
  br label %return, !dbg !11849

err:                                              ; preds = %if.then182, %if.then170, %if.then116, %if.then105, %if.then83, %if.then71, %if.then60, %if.then44, %if.then32, %if.then16, %if.then5
  call void @llvm.dbg.label(metadata !11850), !dbg !11851
  br label %do.body192, !dbg !11852

do.body192:                                       ; preds = %err
  %98 = load i32, i32* @verbose, align 4, !dbg !11853
  %cmp193 = icmp ugt i32 %98, 0, !dbg !11853
  br i1 %cmp193, label %land.lhs.true194, label %if.else, !dbg !11853

land.lhs.true194:                                 ; preds = %do.body192
  %99 = load i32, i32* @verbose, align 4, !dbg !11853
  %cmp195 = icmp ugt i32 %99, 0, !dbg !11853
  br i1 %cmp195, label %if.then196, label %if.else, !dbg !11858

if.then196:                                       ; preds = %land.lhs.true194
  %call197 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_sw_algo, i64 0, i64 0)) #13, !dbg !11853
  br label %if.end218, !dbg !11853

if.else:                                          ; preds = %land.lhs.true194, %do.body192
  %100 = load i32, i32* @verbose, align 4, !dbg !11859
  %cmp198 = icmp ugt i32 %100, 1, !dbg !11859
  br i1 %cmp198, label %land.lhs.true199, label %if.else203, !dbg !11859

land.lhs.true199:                                 ; preds = %if.else
  %101 = load i32, i32* @verbose, align 4, !dbg !11859
  %cmp200 = icmp ugt i32 %101, 0, !dbg !11859
  br i1 %cmp200, label %if.then201, label %if.else203, !dbg !11853

if.then201:                                       ; preds = %land.lhs.true199
  %call202 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_sw_algo, i64 0, i64 0)) #13, !dbg !11859
  br label %if.end217, !dbg !11859

if.else203:                                       ; preds = %land.lhs.true199, %if.else
  %102 = load i32, i32* @verbose, align 4, !dbg !11861
  %cmp204 = icmp ugt i32 %102, 2, !dbg !11861
  br i1 %cmp204, label %land.lhs.true205, label %if.else209, !dbg !11861

land.lhs.true205:                                 ; preds = %if.else203
  %103 = load i32, i32* @verbose, align 4, !dbg !11861
  %cmp206 = icmp ugt i32 %103, 0, !dbg !11861
  br i1 %cmp206, label %if.then207, label %if.else209, !dbg !11859

if.then207:                                       ; preds = %land.lhs.true205
  %call208 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_sw_algo, i64 0, i64 0)) #13, !dbg !11861
  br label %if.end216, !dbg !11861

if.else209:                                       ; preds = %land.lhs.true205, %if.else203
  %104 = load i32, i32* @verbose, align 4, !dbg !11863
  %cmp210 = icmp ugt i32 %104, 3, !dbg !11863
  br i1 %cmp210, label %land.lhs.true211, label %if.end215, !dbg !11863

land.lhs.true211:                                 ; preds = %if.else209
  %105 = load i32, i32* @verbose, align 4, !dbg !11863
  %cmp212 = icmp ugt i32 %105, 0, !dbg !11863
  br i1 %cmp212, label %if.then213, label %if.end215, !dbg !11861

if.then213:                                       ; preds = %land.lhs.true211
  %call214 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.stv090x_sw_algo, i64 0, i64 0)) #13, !dbg !11863
  br label %if.end215, !dbg !11863

if.end215:                                        ; preds = %if.then213, %land.lhs.true211, %if.else209
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.then207
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then201
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.then196
  br label %do.end220, !dbg !11865

do.end220:                                        ; preds = %if.end218
  store i32 -1, i32* %retval, align 4, !dbg !11866
  br label %return, !dbg !11866

return:                                           ; preds = %do.end220, %do.end
  %106 = load i32, i32* %retval, align 4, !dbg !11867
  ret i32 %106, !dbg !11867
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_sig_params(%struct.stv090x_state* %state) #0 !dbg !11868 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %fe = alloca %struct.dvb_frontend*, align 8
  %tmg = alloca i8, align 1
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  %offst_freq = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x135 = alloca i32, align 4
  %tmp136 = alloca i32, align 4
  %__x154 = alloca i32, align 4
  %tmp155 = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !11869, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe, metadata !11871, metadata !DIExpression()), !dbg !11872
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11873
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 6, !dbg !11874
  store %struct.dvb_frontend* %frontend, %struct.dvb_frontend** %fe, align 8, !dbg !11872
  call void @llvm.dbg.declare(metadata i8* %tmg, metadata !11875, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !11877, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11879, metadata !DIExpression()), !dbg !11880
  store i32 0, i32* %i, align 4, !dbg !11880
  call void @llvm.dbg.declare(metadata i32* %offst_freq, metadata !11881, metadata !DIExpression()), !dbg !11882
  call void @msleep(i32 5) #9, !dbg !11883
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11884
  %algo = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 17, !dbg !11886
  %2 = load i32, i32* %algo, align 4, !dbg !11886
  %cmp = icmp eq i32 %2, 0, !dbg !11887
  br i1 %cmp, label %if.then, label %if.end, !dbg !11888

if.then:                                          ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11889
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 1, !dbg !11889
  %4 = load i32, i32* %demod, align 4, !dbg !11889
  %cmp1 = icmp eq i32 %4, 2, !dbg !11889
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !11889

cond.true:                                        ; preds = %if.then
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11889
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 62056) #9, !dbg !11889
  br label %cond.end, !dbg !11889

cond.false:                                       ; preds = %if.then
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11889
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62568) #9, !dbg !11889
  br label %cond.end, !dbg !11889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !11889
  %conv = trunc i32 %cond to i8, !dbg !11889
  store i8 %conv, i8* %tmg, align 1, !dbg !11891
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11892
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 1, !dbg !11892
  %8 = load i32, i32* %demod3, align 4, !dbg !11892
  %cmp4 = icmp eq i32 %8, 2, !dbg !11892
  br i1 %cmp4, label %cond.true6, label %cond.false8, !dbg !11892

cond.true6:                                       ; preds = %cond.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11892
  %call7 = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 62041, i8 zeroext 92) #9, !dbg !11892
  br label %cond.end10, !dbg !11892

cond.false8:                                      ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11892
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62553, i8 zeroext 92) #9, !dbg !11892
  br label %cond.end10, !dbg !11892

cond.end10:                                       ; preds = %cond.false8, %cond.true6
  %cond11 = phi i32 [ %call7, %cond.true6 ], [ %call9, %cond.false8 ], !dbg !11892
  br label %while.cond, !dbg !11893

while.cond:                                       ; preds = %cond.end27, %cond.end10
  %11 = load i32, i32* %i, align 4, !dbg !11894
  %cmp12 = icmp sle i32 %11, 50, !dbg !11895
  br i1 %cmp12, label %land.lhs.true, label %land.end, !dbg !11896

land.lhs.true:                                    ; preds = %while.cond
  %12 = load i8, i8* %tmg, align 1, !dbg !11897
  %conv14 = zext i8 %12 to i32, !dbg !11897
  %cmp15 = icmp ne i32 %conv14, 0, !dbg !11898
  br i1 %cmp15, label %land.rhs, label %land.end, !dbg !11899

land.rhs:                                         ; preds = %land.lhs.true
  %13 = load i8, i8* %tmg, align 1, !dbg !11900
  %conv17 = zext i8 %13 to i32, !dbg !11900
  %cmp18 = icmp ne i32 %conv17, 255, !dbg !11901
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %while.cond
  %14 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %cmp18, %land.rhs ], !dbg !11902
  br i1 %14, label %while.body, label %while.end, !dbg !11893

while.body:                                       ; preds = %land.end
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11903
  %demod20 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 1, !dbg !11903
  %16 = load i32, i32* %demod20, align 4, !dbg !11903
  %cmp21 = icmp eq i32 %16, 2, !dbg !11903
  br i1 %cmp21, label %cond.true23, label %cond.false25, !dbg !11903

cond.true23:                                      ; preds = %while.body
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11903
  %call24 = call i32 @stv090x_read_reg(%struct.stv090x_state* %17, i32 62056) #9, !dbg !11903
  br label %cond.end27, !dbg !11903

cond.false25:                                     ; preds = %while.body
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11903
  %call26 = call i32 @stv090x_read_reg(%struct.stv090x_state* %18, i32 62568) #9, !dbg !11903
  br label %cond.end27, !dbg !11903

cond.end27:                                       ; preds = %cond.false25, %cond.true23
  %cond28 = phi i32 [ %call24, %cond.true23 ], [ %call26, %cond.false25 ], !dbg !11903
  %conv29 = trunc i32 %cond28 to i8, !dbg !11903
  store i8 %conv29, i8* %tmg, align 1, !dbg !11905
  call void @msleep(i32 5) #9, !dbg !11906
  %19 = load i32, i32* %i, align 4, !dbg !11907
  %add = add i32 %19, 5, !dbg !11907
  store i32 %add, i32* %i, align 4, !dbg !11907
  br label %while.cond, !dbg !11893, !llvm.loop !11908

while.end:                                        ; preds = %land.end
  br label %if.end, !dbg !11910

if.end:                                           ; preds = %while.end, %entry
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11911
  %call30 = call i32 @stv090x_get_std(%struct.stv090x_state* %20) #9, !dbg !11912
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11913
  %delsys = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 8, !dbg !11914
  store i32 %call30, i32* %delsys, align 8, !dbg !11915
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11916
  %call31 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %22, i32 1) #9, !dbg !11918
  %cmp32 = icmp slt i32 %call31, 0, !dbg !11919
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !11920

if.then34:                                        ; preds = %if.end
  br label %err, !dbg !11921

if.end35:                                         ; preds = %if.end
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11922
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %23, i32 0, i32 5, !dbg !11924
  %24 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !11924
  %tuner_get_frequency = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %24, i32 0, i32 20, !dbg !11925
  %25 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_frequency, align 8, !dbg !11925
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32*)* %25, null, !dbg !11922
  br i1 %tobool, label %if.then36, label %if.end44, !dbg !11926

if.then36:                                        ; preds = %if.end35
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11927
  %config37 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 5, !dbg !11930
  %27 = load %struct.stv090x_config*, %struct.stv090x_config** %config37, align 8, !dbg !11930
  %tuner_get_frequency38 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %27, i32 0, i32 20, !dbg !11931
  %28 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_frequency38, align 8, !dbg !11931
  %29 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !11932
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11933
  %frequency = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 18, !dbg !11934
  %call39 = call i32 %28(%struct.dvb_frontend* %29, i32* %frequency) #9, !dbg !11927
  %cmp40 = icmp slt i32 %call39, 0, !dbg !11935
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !11936

if.then42:                                        ; preds = %if.then36
  br label %err_gateoff, !dbg !11937

if.end43:                                         ; preds = %if.then36
  br label %if.end44, !dbg !11938

if.end44:                                         ; preds = %if.end43, %if.end35
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11939
  %call45 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %31, i32 0) #9, !dbg !11941
  %cmp46 = icmp slt i32 %call45, 0, !dbg !11942
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !11943

if.then48:                                        ; preds = %if.end44
  br label %err, !dbg !11944

if.end49:                                         ; preds = %if.end44
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11945
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11946
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 3, !dbg !11947
  %34 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !11947
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %34, i32 0, i32 4, !dbg !11948
  %35 = load i32, i32* %mclk, align 8, !dbg !11948
  %call50 = call i32 @stv090x_get_car_freq(%struct.stv090x_state* %32, i32 %35) #9, !dbg !11949
  %div = sdiv i32 %call50, 1000, !dbg !11950
  store i32 %div, i32* %offst_freq, align 4, !dbg !11951
  %36 = load i32, i32* %offst_freq, align 4, !dbg !11952
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11953
  %frequency51 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 18, !dbg !11954
  %38 = load i32, i32* %frequency51, align 8, !dbg !11955
  %add52 = add i32 %38, %36, !dbg !11955
  store i32 %add52, i32* %frequency51, align 8, !dbg !11955
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11956
  %call53 = call i32 @stv090x_get_viterbi(%struct.stv090x_state* %39) #9, !dbg !11958
  %cmp54 = icmp slt i32 %call53, 0, !dbg !11959
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !11960

if.then56:                                        ; preds = %if.end49
  br label %err, !dbg !11961

if.end57:                                         ; preds = %if.end49
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11962
  %demod58 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !11962
  %41 = load i32, i32* %demod58, align 4, !dbg !11962
  %cmp59 = icmp eq i32 %41, 2, !dbg !11962
  br i1 %cmp59, label %cond.true61, label %cond.false63, !dbg !11962

cond.true61:                                      ; preds = %if.end57
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11962
  %call62 = call i32 @stv090x_read_reg(%struct.stv090x_state* %42, i32 61969) #9, !dbg !11962
  br label %cond.end65, !dbg !11962

cond.false63:                                     ; preds = %if.end57
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11962
  %call64 = call i32 @stv090x_read_reg(%struct.stv090x_state* %43, i32 62481) #9, !dbg !11962
  br label %cond.end65, !dbg !11962

cond.end65:                                       ; preds = %cond.false63, %cond.true61
  %cond66 = phi i32 [ %call62, %cond.true61 ], [ %call64, %cond.false63 ], !dbg !11962
  store i32 %cond66, i32* %reg, align 4, !dbg !11963
  %44 = load i32, i32* %reg, align 4, !dbg !11964
  %shr = lshr i32 %44, 2, !dbg !11964
  %and = and i32 %shr, 31, !dbg !11964
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11965
  %modcod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %45, i32 0, i32 11, !dbg !11966
  store i32 %and, i32* %modcod, align 4, !dbg !11967
  %46 = load i32, i32* %reg, align 4, !dbg !11968
  %shr67 = lshr i32 %46, 0, !dbg !11968
  %and68 = and i32 %shr67, 3, !dbg !11968
  %and69 = and i32 %and68, 1, !dbg !11969
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11970
  %pilots = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %47, i32 0, i32 14, !dbg !11971
  store i32 %and69, i32* %pilots, align 8, !dbg !11972
  %48 = load i32, i32* %reg, align 4, !dbg !11973
  %shr70 = lshr i32 %48, 0, !dbg !11973
  %and71 = and i32 %shr70, 3, !dbg !11973
  %shr72 = lshr i32 %and71, 1, !dbg !11974
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11975
  %frame_len = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %49, i32 0, i32 13, !dbg !11976
  store i32 %shr72, i32* %frame_len, align 4, !dbg !11977
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11978
  %demod73 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 1, !dbg !11978
  %51 = load i32, i32* %demod73, align 4, !dbg !11978
  %cmp74 = icmp eq i32 %51, 2, !dbg !11978
  br i1 %cmp74, label %cond.true76, label %cond.false78, !dbg !11978

cond.true76:                                      ; preds = %cond.end65
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11978
  %call77 = call i32 @stv090x_read_reg(%struct.stv090x_state* %52, i32 62061) #9, !dbg !11978
  br label %cond.end80, !dbg !11978

cond.false78:                                     ; preds = %cond.end65
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11978
  %call79 = call i32 @stv090x_read_reg(%struct.stv090x_state* %53, i32 62573) #9, !dbg !11978
  br label %cond.end80, !dbg !11978

cond.end80:                                       ; preds = %cond.false78, %cond.true76
  %cond81 = phi i32 [ %call77, %cond.true76 ], [ %call79, %cond.false78 ], !dbg !11978
  store i32 %cond81, i32* %reg, align 4, !dbg !11979
  %54 = load i32, i32* %reg, align 4, !dbg !11980
  %shr82 = lshr i32 %54, 6, !dbg !11980
  %and83 = and i32 %shr82, 3, !dbg !11980
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11981
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %55, i32 0, i32 15, !dbg !11982
  store i32 %and83, i32* %rolloff, align 4, !dbg !11983
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11984
  %demod84 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !11984
  %57 = load i32, i32* %demod84, align 4, !dbg !11984
  %cmp85 = icmp eq i32 %57, 2, !dbg !11984
  br i1 %cmp85, label %cond.true87, label %cond.false89, !dbg !11984

cond.true87:                                      ; preds = %cond.end80
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11984
  %call88 = call i32 @stv090x_read_reg(%struct.stv090x_state* %58, i32 62259) #9, !dbg !11984
  br label %cond.end91, !dbg !11984

cond.false89:                                     ; preds = %cond.end80
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11984
  %call90 = call i32 @stv090x_read_reg(%struct.stv090x_state* %59, i32 62771) #9, !dbg !11984
  br label %cond.end91, !dbg !11984

cond.end91:                                       ; preds = %cond.false89, %cond.true87
  %cond92 = phi i32 [ %call88, %cond.true87 ], [ %call90, %cond.false89 ], !dbg !11984
  store i32 %cond92, i32* %reg, align 4, !dbg !11985
  %60 = load i32, i32* %reg, align 4, !dbg !11986
  %shr93 = lshr i32 %60, 0, !dbg !11986
  %and94 = and i32 %shr93, 1, !dbg !11986
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11987
  %inversion = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %61, i32 0, i32 16, !dbg !11988
  store i32 %and94, i32* %inversion, align 8, !dbg !11989
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11990
  %algo95 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %62, i32 0, i32 17, !dbg !11992
  %63 = load i32, i32* %algo95, align 4, !dbg !11992
  %cmp96 = icmp eq i32 %63, 0, !dbg !11993
  br i1 %cmp96, label %if.then100, label %lor.lhs.false, !dbg !11994

lor.lhs.false:                                    ; preds = %cond.end91
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11995
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %64, i32 0, i32 19, !dbg !11996
  %65 = load i32, i32* %srate, align 4, !dbg !11996
  %cmp98 = icmp ult i32 %65, 10000000, !dbg !11997
  br i1 %cmp98, label %if.then100, label %if.else153, !dbg !11998

if.then100:                                       ; preds = %lor.lhs.false, %cond.end91
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !11999
  %call101 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %66, i32 1) #9, !dbg !12002
  %cmp102 = icmp slt i32 %call101, 0, !dbg !12003
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !12004

if.then104:                                       ; preds = %if.then100
  br label %err, !dbg !12005

if.end105:                                        ; preds = %if.then100
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12006
  %config106 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %67, i32 0, i32 5, !dbg !12008
  %68 = load %struct.stv090x_config*, %struct.stv090x_config** %config106, align 8, !dbg !12008
  %tuner_get_frequency107 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %68, i32 0, i32 20, !dbg !12009
  %69 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_frequency107, align 8, !dbg !12009
  %tobool108 = icmp ne i32 (%struct.dvb_frontend*, i32*)* %69, null, !dbg !12006
  br i1 %tobool108, label %if.then109, label %if.end118, !dbg !12010

if.then109:                                       ; preds = %if.end105
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12011
  %config110 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %70, i32 0, i32 5, !dbg !12014
  %71 = load %struct.stv090x_config*, %struct.stv090x_config** %config110, align 8, !dbg !12014
  %tuner_get_frequency111 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %71, i32 0, i32 20, !dbg !12015
  %72 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_frequency111, align 8, !dbg !12015
  %73 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !12016
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12017
  %frequency112 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %74, i32 0, i32 18, !dbg !12018
  %call113 = call i32 %72(%struct.dvb_frontend* %73, i32* %frequency112) #9, !dbg !12011
  %cmp114 = icmp slt i32 %call113, 0, !dbg !12019
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !12020

if.then116:                                       ; preds = %if.then109
  br label %err_gateoff, !dbg !12021

if.end117:                                        ; preds = %if.then109
  br label %if.end118, !dbg !12022

if.end118:                                        ; preds = %if.end117, %if.end105
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12023
  %call119 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %75, i32 0) #9, !dbg !12025
  %cmp120 = icmp slt i32 %call119, 0, !dbg !12026
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !12027

if.then122:                                       ; preds = %if.end118
  br label %err, !dbg !12028

if.end123:                                        ; preds = %if.end118
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !12029, metadata !DIExpression()), !dbg !12032
  %76 = load i32, i32* %offst_freq, align 4, !dbg !12032
  store i32 %76, i32* %__x, align 4, !dbg !12032
  %77 = load i32, i32* %__x, align 4, !dbg !12032
  %cmp124 = icmp slt i32 %77, 0, !dbg !12032
  br i1 %cmp124, label %cond.true126, label %cond.false127, !dbg !12032

cond.true126:                                     ; preds = %if.end123
  %78 = load i32, i32* %__x, align 4, !dbg !12032
  %sub = sub i32 0, %78, !dbg !12032
  br label %cond.end128, !dbg !12032

cond.false127:                                    ; preds = %if.end123
  %79 = load i32, i32* %__x, align 4, !dbg !12032
  br label %cond.end128, !dbg !12032

cond.end128:                                      ; preds = %cond.false127, %cond.true126
  %cond129 = phi i32 [ %sub, %cond.true126 ], [ %79, %cond.false127 ], !dbg !12032
  store i32 %cond129, i32* %tmp, align 4, !dbg !12032
  %80 = load i32, i32* %tmp, align 4, !dbg !12032
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12033
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %81, i32 0, i32 21, !dbg !12034
  %82 = load i32, i32* %search_range, align 4, !dbg !12034
  %div130 = sdiv i32 %82, 2000, !dbg !12035
  %add131 = add i32 %div130, 500, !dbg !12036
  %cmp132 = icmp sle i32 %80, %add131, !dbg !12037
  br i1 %cmp132, label %if.then134, label %if.else, !dbg !12038

if.then134:                                       ; preds = %cond.end128
  store i32 4, i32* %retval, align 4, !dbg !12039
  br label %return, !dbg !12039

if.else:                                          ; preds = %cond.end128
  call void @llvm.dbg.declare(metadata i32* %__x135, metadata !12040, metadata !DIExpression()), !dbg !12043
  %83 = load i32, i32* %offst_freq, align 4, !dbg !12043
  store i32 %83, i32* %__x135, align 4, !dbg !12043
  %84 = load i32, i32* %__x135, align 4, !dbg !12043
  %cmp137 = icmp slt i32 %84, 0, !dbg !12043
  br i1 %cmp137, label %cond.true139, label %cond.false141, !dbg !12043

cond.true139:                                     ; preds = %if.else
  %85 = load i32, i32* %__x135, align 4, !dbg !12043
  %sub140 = sub i32 0, %85, !dbg !12043
  br label %cond.end142, !dbg !12043

cond.false141:                                    ; preds = %if.else
  %86 = load i32, i32* %__x135, align 4, !dbg !12043
  br label %cond.end142, !dbg !12043

cond.end142:                                      ; preds = %cond.false141, %cond.true139
  %cond143 = phi i32 [ %sub140, %cond.true139 ], [ %86, %cond.false141 ], !dbg !12043
  store i32 %cond143, i32* %tmp136, align 4, !dbg !12043
  %87 = load i32, i32* %tmp136, align 4, !dbg !12043
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12044
  %srate144 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %88, i32 0, i32 19, !dbg !12045
  %89 = load i32, i32* %srate144, align 4, !dbg !12045
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12046
  %rolloff145 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %90, i32 0, i32 15, !dbg !12047
  %91 = load i32, i32* %rolloff145, align 4, !dbg !12047
  %call146 = call i32 @stv090x_car_width(i32 %89, i32 %91) #9, !dbg !12048
  %div147 = udiv i32 %call146, 2000, !dbg !12049
  %cmp148 = icmp ule i32 %87, %div147, !dbg !12050
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !12051

if.then150:                                       ; preds = %cond.end142
  store i32 4, i32* %retval, align 4, !dbg !12052
  br label %return, !dbg !12052

if.end151:                                        ; preds = %cond.end142
  br label %if.end152

if.end152:                                        ; preds = %if.end151
  br label %if.end170, !dbg !12053

if.else153:                                       ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %__x154, metadata !12054, metadata !DIExpression()), !dbg !12058
  %92 = load i32, i32* %offst_freq, align 4, !dbg !12058
  store i32 %92, i32* %__x154, align 4, !dbg !12058
  %93 = load i32, i32* %__x154, align 4, !dbg !12058
  %cmp156 = icmp slt i32 %93, 0, !dbg !12058
  br i1 %cmp156, label %cond.true158, label %cond.false160, !dbg !12058

cond.true158:                                     ; preds = %if.else153
  %94 = load i32, i32* %__x154, align 4, !dbg !12058
  %sub159 = sub i32 0, %94, !dbg !12058
  br label %cond.end161, !dbg !12058

cond.false160:                                    ; preds = %if.else153
  %95 = load i32, i32* %__x154, align 4, !dbg !12058
  br label %cond.end161, !dbg !12058

cond.end161:                                      ; preds = %cond.false160, %cond.true158
  %cond162 = phi i32 [ %sub159, %cond.true158 ], [ %95, %cond.false160 ], !dbg !12058
  store i32 %cond162, i32* %tmp155, align 4, !dbg !12058
  %96 = load i32, i32* %tmp155, align 4, !dbg !12058
  %97 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12059
  %search_range163 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %97, i32 0, i32 21, !dbg !12060
  %98 = load i32, i32* %search_range163, align 4, !dbg !12060
  %div164 = sdiv i32 %98, 2000, !dbg !12061
  %add165 = add i32 %div164, 500, !dbg !12062
  %cmp166 = icmp sle i32 %96, %add165, !dbg !12063
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !12064

if.then168:                                       ; preds = %cond.end161
  store i32 4, i32* %retval, align 4, !dbg !12065
  br label %return, !dbg !12065

if.end169:                                        ; preds = %cond.end161
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.end152
  store i32 5, i32* %retval, align 4, !dbg !12066
  br label %return, !dbg !12066

err_gateoff:                                      ; preds = %if.then116, %if.then42
  call void @llvm.dbg.label(metadata !12067), !dbg !12068
  %99 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12069
  %call171 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %99, i32 0) #9, !dbg !12070
  br label %err, !dbg !12070

err:                                              ; preds = %err_gateoff, %if.then122, %if.then104, %if.then56, %if.then48, %if.then34
  call void @llvm.dbg.label(metadata !12071), !dbg !12072
  br label %do.body, !dbg !12073

do.body:                                          ; preds = %err
  %100 = load i32, i32* @verbose, align 4, !dbg !12074
  %cmp172 = icmp ugt i32 %100, 0, !dbg !12074
  br i1 %cmp172, label %land.lhs.true174, label %if.else179, !dbg !12074

land.lhs.true174:                                 ; preds = %do.body
  %101 = load i32, i32* @verbose, align 4, !dbg !12074
  %cmp175 = icmp ugt i32 %101, 0, !dbg !12074
  br i1 %cmp175, label %if.then177, label %if.else179, !dbg !12079

if.then177:                                       ; preds = %land.lhs.true174
  %call178 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_get_sig_params, i64 0, i64 0)) #13, !dbg !12074
  br label %if.end206, !dbg !12074

if.else179:                                       ; preds = %land.lhs.true174, %do.body
  %102 = load i32, i32* @verbose, align 4, !dbg !12080
  %cmp180 = icmp ugt i32 %102, 1, !dbg !12080
  br i1 %cmp180, label %land.lhs.true182, label %if.else187, !dbg !12080

land.lhs.true182:                                 ; preds = %if.else179
  %103 = load i32, i32* @verbose, align 4, !dbg !12080
  %cmp183 = icmp ugt i32 %103, 0, !dbg !12080
  br i1 %cmp183, label %if.then185, label %if.else187, !dbg !12074

if.then185:                                       ; preds = %land.lhs.true182
  %call186 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_get_sig_params, i64 0, i64 0)) #13, !dbg !12080
  br label %if.end205, !dbg !12080

if.else187:                                       ; preds = %land.lhs.true182, %if.else179
  %104 = load i32, i32* @verbose, align 4, !dbg !12082
  %cmp188 = icmp ugt i32 %104, 2, !dbg !12082
  br i1 %cmp188, label %land.lhs.true190, label %if.else195, !dbg !12082

land.lhs.true190:                                 ; preds = %if.else187
  %105 = load i32, i32* @verbose, align 4, !dbg !12082
  %cmp191 = icmp ugt i32 %105, 0, !dbg !12082
  br i1 %cmp191, label %if.then193, label %if.else195, !dbg !12080

if.then193:                                       ; preds = %land.lhs.true190
  %call194 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_get_sig_params, i64 0, i64 0)) #13, !dbg !12082
  br label %if.end204, !dbg !12082

if.else195:                                       ; preds = %land.lhs.true190, %if.else187
  %106 = load i32, i32* @verbose, align 4, !dbg !12084
  %cmp196 = icmp ugt i32 %106, 3, !dbg !12084
  br i1 %cmp196, label %land.lhs.true198, label %if.end203, !dbg !12084

land.lhs.true198:                                 ; preds = %if.else195
  %107 = load i32, i32* @verbose, align 4, !dbg !12084
  %cmp199 = icmp ugt i32 %107, 0, !dbg !12084
  br i1 %cmp199, label %if.then201, label %if.end203, !dbg !12082

if.then201:                                       ; preds = %land.lhs.true198
  %call202 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_get_sig_params, i64 0, i64 0)) #13, !dbg !12084
  br label %if.end203, !dbg !12084

if.end203:                                        ; preds = %if.then201, %land.lhs.true198, %if.else195
  br label %if.end204

if.end204:                                        ; preds = %if.end203, %if.then193
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then185
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then177
  br label %do.end, !dbg !12086

do.end:                                           ; preds = %if.end206
  store i32 -1, i32* %retval, align 4, !dbg !12087
  br label %return, !dbg !12087

return:                                           ; preds = %do.end, %if.end170, %if.then168, %if.then150, %if.then134
  %108 = load i32, i32* %retval, align 4, !dbg !12088
  ret i32 %108, !dbg !12088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_optimize_track(%struct.stv090x_state* %state) #0 !dbg !12089 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %fe = alloca %struct.dvb_frontend*, align 8
  %modcod = alloca i32, align 4
  %srate = alloca i32, align 4
  %pilots = alloca i32, align 4
  %aclc = alloca i32, align 4
  %f_1 = alloca i32, align 4
  %f_0 = alloca i32, align 4
  %i = alloca i32, align 4
  %blind_tune = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !12090, metadata !DIExpression()), !dbg !12091
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe, metadata !12092, metadata !DIExpression()), !dbg !12093
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12094
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 6, !dbg !12095
  store %struct.dvb_frontend* %frontend, %struct.dvb_frontend** %fe, align 8, !dbg !12093
  call void @llvm.dbg.declare(metadata i32* %modcod, metadata !12096, metadata !DIExpression()), !dbg !12097
  call void @llvm.dbg.declare(metadata i32* %srate, metadata !12098, metadata !DIExpression()), !dbg !12099
  call void @llvm.dbg.declare(metadata i32* %pilots, metadata !12100, metadata !DIExpression()), !dbg !12101
  call void @llvm.dbg.declare(metadata i32* %aclc, metadata !12102, metadata !DIExpression()), !dbg !12103
  call void @llvm.dbg.declare(metadata i32* %f_1, metadata !12104, metadata !DIExpression()), !dbg !12105
  call void @llvm.dbg.declare(metadata i32* %f_0, metadata !12106, metadata !DIExpression()), !dbg !12107
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12108, metadata !DIExpression()), !dbg !12109
  store i32 0, i32* %i, align 4, !dbg !12109
  call void @llvm.dbg.declare(metadata i32* %blind_tune, metadata !12110, metadata !DIExpression()), !dbg !12111
  store i32 0, i32* %blind_tune, align 4, !dbg !12111
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12112, metadata !DIExpression()), !dbg !12113
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12114
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12115
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 3, !dbg !12116
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !12116
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 4, !dbg !12117
  %4 = load i32, i32* %mclk, align 8, !dbg !12117
  %call = call i32 @stv090x_get_srate(%struct.stv090x_state* %1, i32 %4) #9, !dbg !12118
  store i32 %call, i32* %srate, align 4, !dbg !12119
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12120
  %6 = load i32, i32* %srate, align 4, !dbg !12121
  %call1 = call i32 @stv090x_get_tmgoffst(%struct.stv090x_state* %5, i32 %6) #9, !dbg !12122
  %7 = load i32, i32* %srate, align 4, !dbg !12123
  %add = add i32 %7, %call1, !dbg !12123
  store i32 %add, i32* %srate, align 4, !dbg !12123
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12124
  %delsys = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 8, !dbg !12125
  %9 = load i32, i32* %delsys, align 8, !dbg !12125
  switch i32 %9, label %sw.default [
    i32 1, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb126
    i32 0, label %sw.bb453
  ], !dbg !12126

sw.bb:                                            ; preds = %entry, %entry
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12127
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 12, !dbg !12130
  %11 = load i32, i32* %search_mode, align 8, !dbg !12130
  %cmp = icmp eq i32 %11, 3, !dbg !12131
  br i1 %cmp, label %if.then, label %if.end18, !dbg !12132

if.then:                                          ; preds = %sw.bb
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12133
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !12133
  %13 = load i32, i32* %demod, align 4, !dbg !12133
  %cmp2 = icmp eq i32 %13, 2, !dbg !12133
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !12133

cond.true:                                        ; preds = %if.then
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12133
  %call3 = call i32 @stv090x_read_reg(%struct.stv090x_state* %14, i32 61972) #9, !dbg !12133
  br label %cond.end, !dbg !12133

cond.false:                                       ; preds = %if.then
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12133
  %call4 = call i32 @stv090x_read_reg(%struct.stv090x_state* %15, i32 62484) #9, !dbg !12133
  br label %cond.end, !dbg !12133

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call3, %cond.true ], [ %call4, %cond.false ], !dbg !12133
  store i32 %cond, i32* %reg, align 4, !dbg !12135
  %16 = load i32, i32* %reg, align 4, !dbg !12136
  %and = and i32 %16, -65, !dbg !12136
  %or = or i32 %and, 64, !dbg !12136
  store i32 %or, i32* %reg, align 4, !dbg !12136
  %17 = load i32, i32* %reg, align 4, !dbg !12137
  %and5 = and i32 %17, -129, !dbg !12137
  store i32 %and5, i32* %reg, align 4, !dbg !12137
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12138
  %demod6 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !12138
  %19 = load i32, i32* %demod6, align 4, !dbg !12138
  %cmp7 = icmp eq i32 %19, 2, !dbg !12138
  br i1 %cmp7, label %cond.true8, label %cond.false10, !dbg !12138

cond.true8:                                       ; preds = %cond.end
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12138
  %21 = load i32, i32* %reg, align 4, !dbg !12138
  %conv = trunc i32 %21 to i8, !dbg !12138
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 61972, i8 zeroext %conv) #9, !dbg !12138
  br label %cond.end13, !dbg !12138

cond.false10:                                     ; preds = %cond.end
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12138
  %23 = load i32, i32* %reg, align 4, !dbg !12138
  %conv11 = trunc i32 %23 to i8, !dbg !12138
  %call12 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62484, i8 zeroext %conv11) #9, !dbg !12138
  br label %cond.end13, !dbg !12138

cond.end13:                                       ; preds = %cond.false10, %cond.true8
  %cond14 = phi i32 [ %call9, %cond.true8 ], [ %call12, %cond.false10 ], !dbg !12138
  %cmp15 = icmp slt i32 %cond14, 0, !dbg !12140
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !12141

if.then17:                                        ; preds = %cond.end13
  br label %err, !dbg !12142

if.end:                                           ; preds = %cond.end13
  br label %if.end18, !dbg !12143

if.end18:                                         ; preds = %if.end, %sw.bb
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12144
  %demod19 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !12144
  %25 = load i32, i32* %demod19, align 4, !dbg !12144
  %cmp20 = icmp eq i32 %25, 2, !dbg !12144
  br i1 %cmp20, label %cond.true22, label %cond.false24, !dbg !12144

cond.true22:                                      ; preds = %if.end18
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12144
  %call23 = call i32 @stv090x_read_reg(%struct.stv090x_state* %26, i32 61968) #9, !dbg !12144
  br label %cond.end26, !dbg !12144

cond.false24:                                     ; preds = %if.end18
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12144
  %call25 = call i32 @stv090x_read_reg(%struct.stv090x_state* %27, i32 62480) #9, !dbg !12144
  br label %cond.end26, !dbg !12144

cond.end26:                                       ; preds = %cond.false24, %cond.true22
  %cond27 = phi i32 [ %call23, %cond.true22 ], [ %call25, %cond.false24 ], !dbg !12144
  store i32 %cond27, i32* %reg, align 4, !dbg !12145
  %28 = load i32, i32* %reg, align 4, !dbg !12146
  %and28 = and i32 %28, -4, !dbg !12146
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12146
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %29, i32 0, i32 15, !dbg !12146
  %30 = load i32, i32* %rolloff, align 4, !dbg !12146
  %shl = shl i32 %30, 0, !dbg !12146
  %or29 = or i32 %and28, %shl, !dbg !12146
  store i32 %or29, i32* %reg, align 4, !dbg !12146
  %31 = load i32, i32* %reg, align 4, !dbg !12147
  %and30 = and i32 %31, -5, !dbg !12147
  %or31 = or i32 %and30, 4, !dbg !12147
  store i32 %or31, i32* %reg, align 4, !dbg !12147
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12148
  %demod32 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !12148
  %33 = load i32, i32* %demod32, align 4, !dbg !12148
  %cmp33 = icmp eq i32 %33, 2, !dbg !12148
  br i1 %cmp33, label %cond.true35, label %cond.false38, !dbg !12148

cond.true35:                                      ; preds = %cond.end26
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12148
  %35 = load i32, i32* %reg, align 4, !dbg !12148
  %conv36 = trunc i32 %35 to i8, !dbg !12148
  %call37 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 61968, i8 zeroext %conv36) #9, !dbg !12148
  br label %cond.end41, !dbg !12148

cond.false38:                                     ; preds = %cond.end26
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12148
  %37 = load i32, i32* %reg, align 4, !dbg !12148
  %conv39 = trunc i32 %37 to i8, !dbg !12148
  %call40 = call i32 @stv090x_write_reg(%struct.stv090x_state* %36, i32 62480, i8 zeroext %conv39) #9, !dbg !12148
  br label %cond.end41, !dbg !12148

cond.end41:                                       ; preds = %cond.false38, %cond.true35
  %cond42 = phi i32 [ %call37, %cond.true35 ], [ %call40, %cond.false38 ], !dbg !12148
  %cmp43 = icmp slt i32 %cond42, 0, !dbg !12150
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !12151

if.then45:                                        ; preds = %cond.end41
  br label %err, !dbg !12152

if.end46:                                         ; preds = %cond.end41
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12153
  %internal47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 3, !dbg !12155
  %39 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal47, align 8, !dbg !12155
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %39, i32 0, i32 5, !dbg !12156
  %40 = load i32, i32* %dev_ver, align 4, !dbg !12156
  %cmp48 = icmp uge i32 %40, 48, !dbg !12157
  br i1 %cmp48, label %if.then50, label %if.end112, !dbg !12158

if.then50:                                        ; preds = %if.end46
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12159
  %call51 = call i32 @stv090x_get_viterbi(%struct.stv090x_state* %41) #9, !dbg !12162
  %cmp52 = icmp slt i32 %call51, 0, !dbg !12163
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !12164

if.then54:                                        ; preds = %if.then50
  br label %err, !dbg !12165

if.end55:                                         ; preds = %if.then50
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12166
  %fec = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 9, !dbg !12168
  %43 = load i32, i32* %fec, align 4, !dbg !12168
  %cmp56 = icmp eq i32 %43, 0, !dbg !12169
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !12170

if.then58:                                        ; preds = %if.end55
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12171
  %demod59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 1, !dbg !12171
  %45 = load i32, i32* %demod59, align 4, !dbg !12171
  %cmp60 = icmp eq i32 %45, 2, !dbg !12171
  br i1 %cmp60, label %cond.true62, label %cond.false64, !dbg !12171

cond.true62:                                      ; preds = %if.then58
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12171
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62144, i8 zeroext -104) #9, !dbg !12171
  br label %cond.end66, !dbg !12171

cond.false64:                                     ; preds = %if.then58
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12171
  %call65 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 62656, i8 zeroext -104) #9, !dbg !12171
  br label %cond.end66, !dbg !12171

cond.end66:                                       ; preds = %cond.false64, %cond.true62
  %cond67 = phi i32 [ %call63, %cond.true62 ], [ %call65, %cond.false64 ], !dbg !12171
  %cmp68 = icmp slt i32 %cond67, 0, !dbg !12174
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !12175

if.then70:                                        ; preds = %cond.end66
  br label %err, !dbg !12176

if.end71:                                         ; preds = %cond.end66
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12177
  %demod72 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 1, !dbg !12177
  %49 = load i32, i32* %demod72, align 4, !dbg !12177
  %cmp73 = icmp eq i32 %49, 2, !dbg !12177
  br i1 %cmp73, label %cond.true75, label %cond.false77, !dbg !12177

cond.true75:                                      ; preds = %if.end71
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12177
  %call76 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62145, i8 zeroext 24) #9, !dbg !12177
  br label %cond.end79, !dbg !12177

cond.false77:                                     ; preds = %if.end71
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12177
  %call78 = call i32 @stv090x_write_reg(%struct.stv090x_state* %51, i32 62657, i8 zeroext 24) #9, !dbg !12177
  br label %cond.end79, !dbg !12177

cond.end79:                                       ; preds = %cond.false77, %cond.true75
  %cond80 = phi i32 [ %call76, %cond.true75 ], [ %call78, %cond.false77 ], !dbg !12177
  %cmp81 = icmp slt i32 %cond80, 0, !dbg !12179
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !12180

if.then83:                                        ; preds = %cond.end79
  br label %err, !dbg !12181

if.end84:                                         ; preds = %cond.end79
  br label %if.end111, !dbg !12182

if.else:                                          ; preds = %if.end55
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12183
  %demod85 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 1, !dbg !12183
  %53 = load i32, i32* %demod85, align 4, !dbg !12183
  %cmp86 = icmp eq i32 %53, 2, !dbg !12183
  br i1 %cmp86, label %cond.true88, label %cond.false90, !dbg !12183

cond.true88:                                      ; preds = %if.else
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12183
  %call89 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 62144, i8 zeroext 24) #9, !dbg !12183
  br label %cond.end92, !dbg !12183

cond.false90:                                     ; preds = %if.else
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12183
  %call91 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 62656, i8 zeroext 24) #9, !dbg !12183
  br label %cond.end92, !dbg !12183

cond.end92:                                       ; preds = %cond.false90, %cond.true88
  %cond93 = phi i32 [ %call89, %cond.true88 ], [ %call91, %cond.false90 ], !dbg !12183
  %cmp94 = icmp slt i32 %cond93, 0, !dbg !12186
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !12187

if.then96:                                        ; preds = %cond.end92
  br label %err, !dbg !12188

if.end97:                                         ; preds = %cond.end92
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12189
  %demod98 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !12189
  %57 = load i32, i32* %demod98, align 4, !dbg !12189
  %cmp99 = icmp eq i32 %57, 2, !dbg !12189
  br i1 %cmp99, label %cond.true101, label %cond.false103, !dbg !12189

cond.true101:                                     ; preds = %if.end97
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12189
  %call102 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62145, i8 zeroext 24) #9, !dbg !12189
  br label %cond.end105, !dbg !12189

cond.false103:                                    ; preds = %if.end97
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12189
  %call104 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 62657, i8 zeroext 24) #9, !dbg !12189
  br label %cond.end105, !dbg !12189

cond.end105:                                      ; preds = %cond.false103, %cond.true101
  %cond106 = phi i32 [ %call102, %cond.true101 ], [ %call104, %cond.false103 ], !dbg !12189
  %cmp107 = icmp slt i32 %cond106, 0, !dbg !12191
  br i1 %cmp107, label %if.then109, label %if.end110, !dbg !12192

if.then109:                                       ; preds = %cond.end105
  br label %err, !dbg !12193

if.end110:                                        ; preds = %cond.end105
  br label %if.end111

if.end111:                                        ; preds = %if.end110, %if.end84
  br label %if.end112, !dbg !12194

if.end112:                                        ; preds = %if.end111, %if.end46
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12195
  %demod113 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %60, i32 0, i32 1, !dbg !12195
  %61 = load i32, i32* %demod113, align 4, !dbg !12195
  %cmp114 = icmp eq i32 %61, 2, !dbg !12195
  br i1 %cmp114, label %cond.true116, label %cond.false118, !dbg !12195

cond.true116:                                     ; preds = %if.end112
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12195
  %call117 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 62360, i8 zeroext 117) #9, !dbg !12195
  br label %cond.end120, !dbg !12195

cond.false118:                                    ; preds = %if.end112
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12195
  %call119 = call i32 @stv090x_write_reg(%struct.stv090x_state* %63, i32 62872, i8 zeroext 117) #9, !dbg !12195
  br label %cond.end120, !dbg !12195

cond.end120:                                      ; preds = %cond.false118, %cond.true116
  %cond121 = phi i32 [ %call117, %cond.true116 ], [ %call119, %cond.false118 ], !dbg !12195
  %cmp122 = icmp slt i32 %cond121, 0, !dbg !12197
  br i1 %cmp122, label %if.then124, label %if.end125, !dbg !12198

if.then124:                                       ; preds = %cond.end120
  br label %err, !dbg !12199

if.end125:                                        ; preds = %cond.end120
  br label %sw.epilog, !dbg !12200

sw.bb126:                                         ; preds = %entry
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12201
  %demod127 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %64, i32 0, i32 1, !dbg !12201
  %65 = load i32, i32* %demod127, align 4, !dbg !12201
  %cmp128 = icmp eq i32 %65, 2, !dbg !12201
  br i1 %cmp128, label %cond.true130, label %cond.false132, !dbg !12201

cond.true130:                                     ; preds = %sw.bb126
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12201
  %call131 = call i32 @stv090x_read_reg(%struct.stv090x_state* %66, i32 61972) #9, !dbg !12201
  br label %cond.end134, !dbg !12201

cond.false132:                                    ; preds = %sw.bb126
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12201
  %call133 = call i32 @stv090x_read_reg(%struct.stv090x_state* %67, i32 62484) #9, !dbg !12201
  br label %cond.end134, !dbg !12201

cond.end134:                                      ; preds = %cond.false132, %cond.true130
  %cond135 = phi i32 [ %call131, %cond.true130 ], [ %call133, %cond.false132 ], !dbg !12201
  store i32 %cond135, i32* %reg, align 4, !dbg !12202
  %68 = load i32, i32* %reg, align 4, !dbg !12203
  %and136 = and i32 %68, -65, !dbg !12203
  store i32 %and136, i32* %reg, align 4, !dbg !12203
  %69 = load i32, i32* %reg, align 4, !dbg !12204
  %and137 = and i32 %69, -129, !dbg !12204
  %or138 = or i32 %and137, 128, !dbg !12204
  store i32 %or138, i32* %reg, align 4, !dbg !12204
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12205
  %demod139 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %70, i32 0, i32 1, !dbg !12205
  %71 = load i32, i32* %demod139, align 4, !dbg !12205
  %cmp140 = icmp eq i32 %71, 2, !dbg !12205
  br i1 %cmp140, label %cond.true142, label %cond.false145, !dbg !12205

cond.true142:                                     ; preds = %cond.end134
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12205
  %73 = load i32, i32* %reg, align 4, !dbg !12205
  %conv143 = trunc i32 %73 to i8, !dbg !12205
  %call144 = call i32 @stv090x_write_reg(%struct.stv090x_state* %72, i32 61972, i8 zeroext %conv143) #9, !dbg !12205
  br label %cond.end148, !dbg !12205

cond.false145:                                    ; preds = %cond.end134
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12205
  %75 = load i32, i32* %reg, align 4, !dbg !12205
  %conv146 = trunc i32 %75 to i8, !dbg !12205
  %call147 = call i32 @stv090x_write_reg(%struct.stv090x_state* %74, i32 62484, i8 zeroext %conv146) #9, !dbg !12205
  br label %cond.end148, !dbg !12205

cond.end148:                                      ; preds = %cond.false145, %cond.true142
  %cond149 = phi i32 [ %call144, %cond.true142 ], [ %call147, %cond.false145 ], !dbg !12205
  %cmp150 = icmp slt i32 %cond149, 0, !dbg !12207
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !12208

if.then152:                                       ; preds = %cond.end148
  br label %err, !dbg !12209

if.end153:                                        ; preds = %cond.end148
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12210
  %internal154 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %76, i32 0, i32 3, !dbg !12212
  %77 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal154, align 8, !dbg !12212
  %dev_ver155 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %77, i32 0, i32 5, !dbg !12213
  %78 = load i32, i32* %dev_ver155, align 4, !dbg !12213
  %cmp156 = icmp uge i32 %78, 48, !dbg !12214
  br i1 %cmp156, label %if.then158, label %if.end185, !dbg !12215

if.then158:                                       ; preds = %if.end153
  %79 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12216
  %demod159 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %79, i32 0, i32 1, !dbg !12216
  %80 = load i32, i32* %demod159, align 4, !dbg !12216
  %cmp160 = icmp eq i32 %80, 2, !dbg !12216
  br i1 %cmp160, label %cond.true162, label %cond.false164, !dbg !12216

cond.true162:                                     ; preds = %if.then158
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12216
  %call163 = call i32 @stv090x_write_reg(%struct.stv090x_state* %81, i32 62009, i8 zeroext 0) #9, !dbg !12216
  br label %cond.end166, !dbg !12216

cond.false164:                                    ; preds = %if.then158
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12216
  %call165 = call i32 @stv090x_write_reg(%struct.stv090x_state* %82, i32 62521, i8 zeroext 0) #9, !dbg !12216
  br label %cond.end166, !dbg !12216

cond.end166:                                      ; preds = %cond.false164, %cond.true162
  %cond167 = phi i32 [ %call163, %cond.true162 ], [ %call165, %cond.false164 ], !dbg !12216
  %cmp168 = icmp slt i32 %cond167, 0, !dbg !12219
  br i1 %cmp168, label %if.then170, label %if.end171, !dbg !12220

if.then170:                                       ; preds = %cond.end166
  br label %err, !dbg !12221

if.end171:                                        ; preds = %cond.end166
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12222
  %demod172 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %83, i32 0, i32 1, !dbg !12222
  %84 = load i32, i32* %demod172, align 4, !dbg !12222
  %cmp173 = icmp eq i32 %84, 2, !dbg !12222
  br i1 %cmp173, label %cond.true175, label %cond.false177, !dbg !12222

cond.true175:                                     ; preds = %if.end171
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12222
  %call176 = call i32 @stv090x_write_reg(%struct.stv090x_state* %85, i32 62010, i8 zeroext 0) #9, !dbg !12222
  br label %cond.end179, !dbg !12222

cond.false177:                                    ; preds = %if.end171
  %86 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12222
  %call178 = call i32 @stv090x_write_reg(%struct.stv090x_state* %86, i32 62522, i8 zeroext 0) #9, !dbg !12222
  br label %cond.end179, !dbg !12222

cond.end179:                                      ; preds = %cond.false177, %cond.true175
  %cond180 = phi i32 [ %call176, %cond.true175 ], [ %call178, %cond.false177 ], !dbg !12222
  %cmp181 = icmp slt i32 %cond180, 0, !dbg !12224
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !12225

if.then183:                                       ; preds = %cond.end179
  br label %err, !dbg !12226

if.end184:                                        ; preds = %cond.end179
  br label %if.end185, !dbg !12227

if.end185:                                        ; preds = %if.end184, %if.end153
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12228
  %frame_len = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %87, i32 0, i32 13, !dbg !12230
  %88 = load i32, i32* %frame_len, align 4, !dbg !12230
  %cmp186 = icmp eq i32 %88, 0, !dbg !12231
  br i1 %cmp186, label %if.then188, label %if.else319, !dbg !12232

if.then188:                                       ; preds = %if.end185
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12233
  %demod189 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %89, i32 0, i32 1, !dbg !12233
  %90 = load i32, i32* %demod189, align 4, !dbg !12233
  %cmp190 = icmp eq i32 %90, 2, !dbg !12233
  br i1 %cmp190, label %cond.true192, label %cond.false194, !dbg !12233

cond.true192:                                     ; preds = %if.then188
  %91 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12233
  %call193 = call i32 @stv090x_read_reg(%struct.stv090x_state* %91, i32 61969) #9, !dbg !12233
  br label %cond.end196, !dbg !12233

cond.false194:                                    ; preds = %if.then188
  %92 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12233
  %call195 = call i32 @stv090x_read_reg(%struct.stv090x_state* %92, i32 62481) #9, !dbg !12233
  br label %cond.end196, !dbg !12233

cond.end196:                                      ; preds = %cond.false194, %cond.true192
  %cond197 = phi i32 [ %call193, %cond.true192 ], [ %call195, %cond.false194 ], !dbg !12233
  store i32 %cond197, i32* %reg, align 4, !dbg !12235
  %93 = load i32, i32* %reg, align 4, !dbg !12236
  %shr = lshr i32 %93, 2, !dbg !12236
  %and198 = and i32 %shr, 31, !dbg !12236
  store i32 %and198, i32* %modcod, align 4, !dbg !12237
  %94 = load i32, i32* %reg, align 4, !dbg !12238
  %shr199 = lshr i32 %94, 0, !dbg !12238
  %and200 = and i32 %shr199, 3, !dbg !12238
  %and201 = and i32 %and200, 1, !dbg !12239
  store i32 %and201, i32* %pilots, align 4, !dbg !12240
  %95 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12241
  %96 = load i32, i32* %modcod, align 4, !dbg !12242
  %97 = load i32, i32* %pilots, align 4, !dbg !12243
  %call202 = call zeroext i8 @stv090x_optimize_carloop(%struct.stv090x_state* %95, i32 %96, i32 %97) #9, !dbg !12244
  %conv203 = zext i8 %call202 to i32, !dbg !12244
  store i32 %conv203, i32* %aclc, align 4, !dbg !12245
  %98 = load i32, i32* %modcod, align 4, !dbg !12246
  %cmp204 = icmp ule i32 %98, 11, !dbg !12248
  br i1 %cmp204, label %if.then206, label %if.else218, !dbg !12249

if.then206:                                       ; preds = %cond.end196
  %99 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12250
  %demod207 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %99, i32 0, i32 1, !dbg !12250
  %100 = load i32, i32* %demod207, align 4, !dbg !12250
  %cmp208 = icmp eq i32 %100, 2, !dbg !12250
  br i1 %cmp208, label %cond.true210, label %cond.false213, !dbg !12250

cond.true210:                                     ; preds = %if.then206
  %101 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12250
  %102 = load i32, i32* %aclc, align 4, !dbg !12250
  %conv211 = trunc i32 %102 to i8, !dbg !12250
  %call212 = call i32 @stv090x_write_reg(%struct.stv090x_state* %101, i32 62103, i8 zeroext %conv211) #9, !dbg !12250
  br label %cond.end216, !dbg !12250

cond.false213:                                    ; preds = %if.then206
  %103 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12250
  %104 = load i32, i32* %aclc, align 4, !dbg !12250
  %conv214 = trunc i32 %104 to i8, !dbg !12250
  %call215 = call i32 @stv090x_write_reg(%struct.stv090x_state* %103, i32 62615, i8 zeroext %conv214) #9, !dbg !12250
  br label %cond.end216, !dbg !12250

cond.end216:                                      ; preds = %cond.false213, %cond.true210
  %cond217 = phi i32 [ %call212, %cond.true210 ], [ %call215, %cond.false213 ], !dbg !12250
  br label %if.end251, !dbg !12252

if.else218:                                       ; preds = %cond.end196
  %105 = load i32, i32* %modcod, align 4, !dbg !12253
  %cmp219 = icmp ule i32 %105, 17, !dbg !12255
  br i1 %cmp219, label %if.then221, label %if.end250, !dbg !12256

if.then221:                                       ; preds = %if.else218
  %106 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12257
  %demod222 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %106, i32 0, i32 1, !dbg !12257
  %107 = load i32, i32* %demod222, align 4, !dbg !12257
  %cmp223 = icmp eq i32 %107, 2, !dbg !12257
  br i1 %cmp223, label %cond.true225, label %cond.false227, !dbg !12257

cond.true225:                                     ; preds = %if.then221
  %108 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12257
  %call226 = call i32 @stv090x_write_reg(%struct.stv090x_state* %108, i32 62103, i8 zeroext 42) #9, !dbg !12257
  br label %cond.end229, !dbg !12257

cond.false227:                                    ; preds = %if.then221
  %109 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12257
  %call228 = call i32 @stv090x_write_reg(%struct.stv090x_state* %109, i32 62615, i8 zeroext 42) #9, !dbg !12257
  br label %cond.end229, !dbg !12257

cond.end229:                                      ; preds = %cond.false227, %cond.true225
  %cond230 = phi i32 [ %call226, %cond.true225 ], [ %call228, %cond.false227 ], !dbg !12257
  %cmp231 = icmp slt i32 %cond230, 0, !dbg !12260
  br i1 %cmp231, label %if.then233, label %if.end234, !dbg !12261

if.then233:                                       ; preds = %cond.end229
  br label %err, !dbg !12262

if.end234:                                        ; preds = %cond.end229
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12263
  %demod235 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %110, i32 0, i32 1, !dbg !12263
  %111 = load i32, i32* %demod235, align 4, !dbg !12263
  %cmp236 = icmp eq i32 %111, 2, !dbg !12263
  br i1 %cmp236, label %cond.true238, label %cond.false241, !dbg !12263

cond.true238:                                     ; preds = %if.end234
  %112 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12263
  %113 = load i32, i32* %aclc, align 4, !dbg !12263
  %conv239 = trunc i32 %113 to i8, !dbg !12263
  %call240 = call i32 @stv090x_write_reg(%struct.stv090x_state* %112, i32 62104, i8 zeroext %conv239) #9, !dbg !12263
  br label %cond.end244, !dbg !12263

cond.false241:                                    ; preds = %if.end234
  %114 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12263
  %115 = load i32, i32* %aclc, align 4, !dbg !12263
  %conv242 = trunc i32 %115 to i8, !dbg !12263
  %call243 = call i32 @stv090x_write_reg(%struct.stv090x_state* %114, i32 62616, i8 zeroext %conv242) #9, !dbg !12263
  br label %cond.end244, !dbg !12263

cond.end244:                                      ; preds = %cond.false241, %cond.true238
  %cond245 = phi i32 [ %call240, %cond.true238 ], [ %call243, %cond.false241 ], !dbg !12263
  %cmp246 = icmp slt i32 %cond245, 0, !dbg !12265
  br i1 %cmp246, label %if.then248, label %if.end249, !dbg !12266

if.then248:                                       ; preds = %cond.end244
  br label %err, !dbg !12267

if.end249:                                        ; preds = %cond.end244
  br label %if.end250, !dbg !12268

if.end250:                                        ; preds = %if.end249, %if.else218
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %cond.end216
  %116 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12269
  %demod_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %116, i32 0, i32 2, !dbg !12271
  %117 = load i32, i32* %demod_mode, align 8, !dbg !12271
  %cmp252 = icmp eq i32 %117, 1, !dbg !12272
  br i1 %cmp252, label %land.lhs.true, label %if.end318, !dbg !12273

land.lhs.true:                                    ; preds = %if.end251
  %118 = load i32, i32* %modcod, align 4, !dbg !12274
  %cmp254 = icmp ugt i32 %118, 17, !dbg !12275
  br i1 %cmp254, label %if.then256, label %if.end318, !dbg !12276

if.then256:                                       ; preds = %land.lhs.true
  %119 = load i32, i32* %modcod, align 4, !dbg !12277
  %cmp257 = icmp ule i32 %119, 23, !dbg !12280
  br i1 %cmp257, label %if.then259, label %if.else288, !dbg !12281

if.then259:                                       ; preds = %if.then256
  %120 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12282
  %demod260 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %120, i32 0, i32 1, !dbg !12282
  %121 = load i32, i32* %demod260, align 4, !dbg !12282
  %cmp261 = icmp eq i32 %121, 2, !dbg !12282
  br i1 %cmp261, label %cond.true263, label %cond.false265, !dbg !12282

cond.true263:                                     ; preds = %if.then259
  %122 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12282
  %call264 = call i32 @stv090x_write_reg(%struct.stv090x_state* %122, i32 62103, i8 zeroext 42) #9, !dbg !12282
  br label %cond.end267, !dbg !12282

cond.false265:                                    ; preds = %if.then259
  %123 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12282
  %call266 = call i32 @stv090x_write_reg(%struct.stv090x_state* %123, i32 62615, i8 zeroext 42) #9, !dbg !12282
  br label %cond.end267, !dbg !12282

cond.end267:                                      ; preds = %cond.false265, %cond.true263
  %cond268 = phi i32 [ %call264, %cond.true263 ], [ %call266, %cond.false265 ], !dbg !12282
  %cmp269 = icmp slt i32 %cond268, 0, !dbg !12285
  br i1 %cmp269, label %if.then271, label %if.end272, !dbg !12286

if.then271:                                       ; preds = %cond.end267
  br label %err, !dbg !12287

if.end272:                                        ; preds = %cond.end267
  %124 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12288
  %demod273 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %124, i32 0, i32 1, !dbg !12288
  %125 = load i32, i32* %demod273, align 4, !dbg !12288
  %cmp274 = icmp eq i32 %125, 2, !dbg !12288
  br i1 %cmp274, label %cond.true276, label %cond.false279, !dbg !12288

cond.true276:                                     ; preds = %if.end272
  %126 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12288
  %127 = load i32, i32* %aclc, align 4, !dbg !12288
  %conv277 = trunc i32 %127 to i8, !dbg !12288
  %call278 = call i32 @stv090x_write_reg(%struct.stv090x_state* %126, i32 62105, i8 zeroext %conv277) #9, !dbg !12288
  br label %cond.end282, !dbg !12288

cond.false279:                                    ; preds = %if.end272
  %128 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12288
  %129 = load i32, i32* %aclc, align 4, !dbg !12288
  %conv280 = trunc i32 %129 to i8, !dbg !12288
  %call281 = call i32 @stv090x_write_reg(%struct.stv090x_state* %128, i32 62617, i8 zeroext %conv280) #9, !dbg !12288
  br label %cond.end282, !dbg !12288

cond.end282:                                      ; preds = %cond.false279, %cond.true276
  %cond283 = phi i32 [ %call278, %cond.true276 ], [ %call281, %cond.false279 ], !dbg !12288
  %cmp284 = icmp slt i32 %cond283, 0, !dbg !12290
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !12291

if.then286:                                       ; preds = %cond.end282
  br label %err, !dbg !12292

if.end287:                                        ; preds = %cond.end282
  br label %if.end317, !dbg !12293

if.else288:                                       ; preds = %if.then256
  %130 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12294
  %demod289 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %130, i32 0, i32 1, !dbg !12294
  %131 = load i32, i32* %demod289, align 4, !dbg !12294
  %cmp290 = icmp eq i32 %131, 2, !dbg !12294
  br i1 %cmp290, label %cond.true292, label %cond.false294, !dbg !12294

cond.true292:                                     ; preds = %if.else288
  %132 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12294
  %call293 = call i32 @stv090x_write_reg(%struct.stv090x_state* %132, i32 62103, i8 zeroext 42) #9, !dbg !12294
  br label %cond.end296, !dbg !12294

cond.false294:                                    ; preds = %if.else288
  %133 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12294
  %call295 = call i32 @stv090x_write_reg(%struct.stv090x_state* %133, i32 62615, i8 zeroext 42) #9, !dbg !12294
  br label %cond.end296, !dbg !12294

cond.end296:                                      ; preds = %cond.false294, %cond.true292
  %cond297 = phi i32 [ %call293, %cond.true292 ], [ %call295, %cond.false294 ], !dbg !12294
  %cmp298 = icmp slt i32 %cond297, 0, !dbg !12297
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !12298

if.then300:                                       ; preds = %cond.end296
  br label %err, !dbg !12299

if.end301:                                        ; preds = %cond.end296
  %134 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12300
  %demod302 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %134, i32 0, i32 1, !dbg !12300
  %135 = load i32, i32* %demod302, align 4, !dbg !12300
  %cmp303 = icmp eq i32 %135, 2, !dbg !12300
  br i1 %cmp303, label %cond.true305, label %cond.false308, !dbg !12300

cond.true305:                                     ; preds = %if.end301
  %136 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12300
  %137 = load i32, i32* %aclc, align 4, !dbg !12300
  %conv306 = trunc i32 %137 to i8, !dbg !12300
  %call307 = call i32 @stv090x_write_reg(%struct.stv090x_state* %136, i32 62106, i8 zeroext %conv306) #9, !dbg !12300
  br label %cond.end311, !dbg !12300

cond.false308:                                    ; preds = %if.end301
  %138 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12300
  %139 = load i32, i32* %aclc, align 4, !dbg !12300
  %conv309 = trunc i32 %139 to i8, !dbg !12300
  %call310 = call i32 @stv090x_write_reg(%struct.stv090x_state* %138, i32 62618, i8 zeroext %conv309) #9, !dbg !12300
  br label %cond.end311, !dbg !12300

cond.end311:                                      ; preds = %cond.false308, %cond.true305
  %cond312 = phi i32 [ %call307, %cond.true305 ], [ %call310, %cond.false308 ], !dbg !12300
  %cmp313 = icmp slt i32 %cond312, 0, !dbg !12302
  br i1 %cmp313, label %if.then315, label %if.end316, !dbg !12303

if.then315:                                       ; preds = %cond.end311
  br label %err, !dbg !12304

if.end316:                                        ; preds = %cond.end311
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.end287
  br label %if.end318, !dbg !12305

if.end318:                                        ; preds = %if.end317, %land.lhs.true, %if.end251
  br label %if.end443, !dbg !12306

if.else319:                                       ; preds = %if.end185
  %140 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12307
  %call320 = call zeroext i8 @stv090x_optimize_carloop_short(%struct.stv090x_state* %140) #9, !dbg !12309
  %conv321 = zext i8 %call320 to i32, !dbg !12309
  store i32 %conv321, i32* %aclc, align 4, !dbg !12310
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12311
  %modulation = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %141, i32 0, i32 10, !dbg !12313
  %142 = load i32, i32* %modulation, align 8, !dbg !12313
  %cmp322 = icmp eq i32 %142, 0, !dbg !12314
  br i1 %cmp322, label %if.then324, label %if.else340, !dbg !12315

if.then324:                                       ; preds = %if.else319
  %143 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12316
  %demod325 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %143, i32 0, i32 1, !dbg !12316
  %144 = load i32, i32* %demod325, align 4, !dbg !12316
  %cmp326 = icmp eq i32 %144, 2, !dbg !12316
  br i1 %cmp326, label %cond.true328, label %cond.false331, !dbg !12316

cond.true328:                                     ; preds = %if.then324
  %145 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12316
  %146 = load i32, i32* %aclc, align 4, !dbg !12316
  %conv329 = trunc i32 %146 to i8, !dbg !12316
  %call330 = call i32 @stv090x_write_reg(%struct.stv090x_state* %145, i32 62103, i8 zeroext %conv329) #9, !dbg !12316
  br label %cond.end334, !dbg !12316

cond.false331:                                    ; preds = %if.then324
  %147 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12316
  %148 = load i32, i32* %aclc, align 4, !dbg !12316
  %conv332 = trunc i32 %148 to i8, !dbg !12316
  %call333 = call i32 @stv090x_write_reg(%struct.stv090x_state* %147, i32 62615, i8 zeroext %conv332) #9, !dbg !12316
  br label %cond.end334, !dbg !12316

cond.end334:                                      ; preds = %cond.false331, %cond.true328
  %cond335 = phi i32 [ %call330, %cond.true328 ], [ %call333, %cond.false331 ], !dbg !12316
  %cmp336 = icmp slt i32 %cond335, 0, !dbg !12319
  br i1 %cmp336, label %if.then338, label %if.end339, !dbg !12320

if.then338:                                       ; preds = %cond.end334
  br label %err, !dbg !12321

if.end339:                                        ; preds = %cond.end334
  br label %if.end442, !dbg !12322

if.else340:                                       ; preds = %if.else319
  %149 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12323
  %modulation341 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %149, i32 0, i32 10, !dbg !12325
  %150 = load i32, i32* %modulation341, align 8, !dbg !12325
  %cmp342 = icmp eq i32 %150, 1, !dbg !12326
  br i1 %cmp342, label %if.then344, label %if.else373, !dbg !12327

if.then344:                                       ; preds = %if.else340
  %151 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12328
  %demod345 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %151, i32 0, i32 1, !dbg !12328
  %152 = load i32, i32* %demod345, align 4, !dbg !12328
  %cmp346 = icmp eq i32 %152, 2, !dbg !12328
  br i1 %cmp346, label %cond.true348, label %cond.false350, !dbg !12328

cond.true348:                                     ; preds = %if.then344
  %153 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12328
  %call349 = call i32 @stv090x_write_reg(%struct.stv090x_state* %153, i32 62103, i8 zeroext 42) #9, !dbg !12328
  br label %cond.end352, !dbg !12328

cond.false350:                                    ; preds = %if.then344
  %154 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12328
  %call351 = call i32 @stv090x_write_reg(%struct.stv090x_state* %154, i32 62615, i8 zeroext 42) #9, !dbg !12328
  br label %cond.end352, !dbg !12328

cond.end352:                                      ; preds = %cond.false350, %cond.true348
  %cond353 = phi i32 [ %call349, %cond.true348 ], [ %call351, %cond.false350 ], !dbg !12328
  %cmp354 = icmp slt i32 %cond353, 0, !dbg !12331
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !12332

if.then356:                                       ; preds = %cond.end352
  br label %err, !dbg !12333

if.end357:                                        ; preds = %cond.end352
  %155 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12334
  %demod358 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %155, i32 0, i32 1, !dbg !12334
  %156 = load i32, i32* %demod358, align 4, !dbg !12334
  %cmp359 = icmp eq i32 %156, 2, !dbg !12334
  br i1 %cmp359, label %cond.true361, label %cond.false364, !dbg !12334

cond.true361:                                     ; preds = %if.end357
  %157 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12334
  %158 = load i32, i32* %aclc, align 4, !dbg !12334
  %conv362 = trunc i32 %158 to i8, !dbg !12334
  %call363 = call i32 @stv090x_write_reg(%struct.stv090x_state* %157, i32 62104, i8 zeroext %conv362) #9, !dbg !12334
  br label %cond.end367, !dbg !12334

cond.false364:                                    ; preds = %if.end357
  %159 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12334
  %160 = load i32, i32* %aclc, align 4, !dbg !12334
  %conv365 = trunc i32 %160 to i8, !dbg !12334
  %call366 = call i32 @stv090x_write_reg(%struct.stv090x_state* %159, i32 62616, i8 zeroext %conv365) #9, !dbg !12334
  br label %cond.end367, !dbg !12334

cond.end367:                                      ; preds = %cond.false364, %cond.true361
  %cond368 = phi i32 [ %call363, %cond.true361 ], [ %call366, %cond.false364 ], !dbg !12334
  %cmp369 = icmp slt i32 %cond368, 0, !dbg !12336
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !12337

if.then371:                                       ; preds = %cond.end367
  br label %err, !dbg !12338

if.end372:                                        ; preds = %cond.end367
  br label %if.end441, !dbg !12339

if.else373:                                       ; preds = %if.else340
  %161 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12340
  %modulation374 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %161, i32 0, i32 10, !dbg !12342
  %162 = load i32, i32* %modulation374, align 8, !dbg !12342
  %cmp375 = icmp eq i32 %162, 2, !dbg !12343
  br i1 %cmp375, label %if.then377, label %if.else406, !dbg !12344

if.then377:                                       ; preds = %if.else373
  %163 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12345
  %demod378 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %163, i32 0, i32 1, !dbg !12345
  %164 = load i32, i32* %demod378, align 4, !dbg !12345
  %cmp379 = icmp eq i32 %164, 2, !dbg !12345
  br i1 %cmp379, label %cond.true381, label %cond.false383, !dbg !12345

cond.true381:                                     ; preds = %if.then377
  %165 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12345
  %call382 = call i32 @stv090x_write_reg(%struct.stv090x_state* %165, i32 62103, i8 zeroext 42) #9, !dbg !12345
  br label %cond.end385, !dbg !12345

cond.false383:                                    ; preds = %if.then377
  %166 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12345
  %call384 = call i32 @stv090x_write_reg(%struct.stv090x_state* %166, i32 62615, i8 zeroext 42) #9, !dbg !12345
  br label %cond.end385, !dbg !12345

cond.end385:                                      ; preds = %cond.false383, %cond.true381
  %cond386 = phi i32 [ %call382, %cond.true381 ], [ %call384, %cond.false383 ], !dbg !12345
  %cmp387 = icmp slt i32 %cond386, 0, !dbg !12348
  br i1 %cmp387, label %if.then389, label %if.end390, !dbg !12349

if.then389:                                       ; preds = %cond.end385
  br label %err, !dbg !12350

if.end390:                                        ; preds = %cond.end385
  %167 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12351
  %demod391 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %167, i32 0, i32 1, !dbg !12351
  %168 = load i32, i32* %demod391, align 4, !dbg !12351
  %cmp392 = icmp eq i32 %168, 2, !dbg !12351
  br i1 %cmp392, label %cond.true394, label %cond.false397, !dbg !12351

cond.true394:                                     ; preds = %if.end390
  %169 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12351
  %170 = load i32, i32* %aclc, align 4, !dbg !12351
  %conv395 = trunc i32 %170 to i8, !dbg !12351
  %call396 = call i32 @stv090x_write_reg(%struct.stv090x_state* %169, i32 62105, i8 zeroext %conv395) #9, !dbg !12351
  br label %cond.end400, !dbg !12351

cond.false397:                                    ; preds = %if.end390
  %171 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12351
  %172 = load i32, i32* %aclc, align 4, !dbg !12351
  %conv398 = trunc i32 %172 to i8, !dbg !12351
  %call399 = call i32 @stv090x_write_reg(%struct.stv090x_state* %171, i32 62617, i8 zeroext %conv398) #9, !dbg !12351
  br label %cond.end400, !dbg !12351

cond.end400:                                      ; preds = %cond.false397, %cond.true394
  %cond401 = phi i32 [ %call396, %cond.true394 ], [ %call399, %cond.false397 ], !dbg !12351
  %cmp402 = icmp slt i32 %cond401, 0, !dbg !12353
  br i1 %cmp402, label %if.then404, label %if.end405, !dbg !12354

if.then404:                                       ; preds = %cond.end400
  br label %err, !dbg !12355

if.end405:                                        ; preds = %cond.end400
  br label %if.end440, !dbg !12356

if.else406:                                       ; preds = %if.else373
  %173 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12357
  %modulation407 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %173, i32 0, i32 10, !dbg !12359
  %174 = load i32, i32* %modulation407, align 8, !dbg !12359
  %cmp408 = icmp eq i32 %174, 3, !dbg !12360
  br i1 %cmp408, label %if.then410, label %if.end439, !dbg !12361

if.then410:                                       ; preds = %if.else406
  %175 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12362
  %demod411 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %175, i32 0, i32 1, !dbg !12362
  %176 = load i32, i32* %demod411, align 4, !dbg !12362
  %cmp412 = icmp eq i32 %176, 2, !dbg !12362
  br i1 %cmp412, label %cond.true414, label %cond.false416, !dbg !12362

cond.true414:                                     ; preds = %if.then410
  %177 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12362
  %call415 = call i32 @stv090x_write_reg(%struct.stv090x_state* %177, i32 62103, i8 zeroext 42) #9, !dbg !12362
  br label %cond.end418, !dbg !12362

cond.false416:                                    ; preds = %if.then410
  %178 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12362
  %call417 = call i32 @stv090x_write_reg(%struct.stv090x_state* %178, i32 62615, i8 zeroext 42) #9, !dbg !12362
  br label %cond.end418, !dbg !12362

cond.end418:                                      ; preds = %cond.false416, %cond.true414
  %cond419 = phi i32 [ %call415, %cond.true414 ], [ %call417, %cond.false416 ], !dbg !12362
  %cmp420 = icmp slt i32 %cond419, 0, !dbg !12365
  br i1 %cmp420, label %if.then422, label %if.end423, !dbg !12366

if.then422:                                       ; preds = %cond.end418
  br label %err, !dbg !12367

if.end423:                                        ; preds = %cond.end418
  %179 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12368
  %demod424 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %179, i32 0, i32 1, !dbg !12368
  %180 = load i32, i32* %demod424, align 4, !dbg !12368
  %cmp425 = icmp eq i32 %180, 2, !dbg !12368
  br i1 %cmp425, label %cond.true427, label %cond.false430, !dbg !12368

cond.true427:                                     ; preds = %if.end423
  %181 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12368
  %182 = load i32, i32* %aclc, align 4, !dbg !12368
  %conv428 = trunc i32 %182 to i8, !dbg !12368
  %call429 = call i32 @stv090x_write_reg(%struct.stv090x_state* %181, i32 62106, i8 zeroext %conv428) #9, !dbg !12368
  br label %cond.end433, !dbg !12368

cond.false430:                                    ; preds = %if.end423
  %183 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12368
  %184 = load i32, i32* %aclc, align 4, !dbg !12368
  %conv431 = trunc i32 %184 to i8, !dbg !12368
  %call432 = call i32 @stv090x_write_reg(%struct.stv090x_state* %183, i32 62618, i8 zeroext %conv431) #9, !dbg !12368
  br label %cond.end433, !dbg !12368

cond.end433:                                      ; preds = %cond.false430, %cond.true427
  %cond434 = phi i32 [ %call429, %cond.true427 ], [ %call432, %cond.false430 ], !dbg !12368
  %cmp435 = icmp slt i32 %cond434, 0, !dbg !12370
  br i1 %cmp435, label %if.then437, label %if.end438, !dbg !12371

if.then437:                                       ; preds = %cond.end433
  br label %err, !dbg !12372

if.end438:                                        ; preds = %cond.end433
  br label %if.end439, !dbg !12373

if.end439:                                        ; preds = %if.end438, %if.else406
  br label %if.end440

if.end440:                                        ; preds = %if.end439, %if.end405
  br label %if.end441

if.end441:                                        ; preds = %if.end440, %if.end372
  br label %if.end442

if.end442:                                        ; preds = %if.end441, %if.end339
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.end318
  %185 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12374
  %demod444 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %185, i32 0, i32 1, !dbg !12374
  %186 = load i32, i32* %demod444, align 4, !dbg !12374
  %cmp445 = icmp eq i32 %186, 2, !dbg !12374
  br i1 %cmp445, label %cond.true447, label %cond.false449, !dbg !12374

cond.true447:                                     ; preds = %if.end443
  %187 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12374
  %call448 = call i32 @stv090x_write_reg(%struct.stv090x_state* %187, i32 62360, i8 zeroext 103) #9, !dbg !12374
  br label %cond.end451, !dbg !12374

cond.false449:                                    ; preds = %if.end443
  %188 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12374
  %call450 = call i32 @stv090x_write_reg(%struct.stv090x_state* %188, i32 62872, i8 zeroext 103) #9, !dbg !12374
  br label %cond.end451, !dbg !12374

cond.end451:                                      ; preds = %cond.false449, %cond.true447
  %cond452 = phi i32 [ %call448, %cond.true447 ], [ %call450, %cond.false449 ], !dbg !12374
  br label %sw.epilog, !dbg !12375

sw.bb453:                                         ; preds = %entry
  br label %sw.default, !dbg !12375

sw.default:                                       ; preds = %entry, %sw.bb453
  %189 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12376
  %demod454 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %189, i32 0, i32 1, !dbg !12376
  %190 = load i32, i32* %demod454, align 4, !dbg !12376
  %cmp455 = icmp eq i32 %190, 2, !dbg !12376
  br i1 %cmp455, label %cond.true457, label %cond.false459, !dbg !12376

cond.true457:                                     ; preds = %sw.default
  %191 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12376
  %call458 = call i32 @stv090x_read_reg(%struct.stv090x_state* %191, i32 61972) #9, !dbg !12376
  br label %cond.end461, !dbg !12376

cond.false459:                                    ; preds = %sw.default
  %192 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12376
  %call460 = call i32 @stv090x_read_reg(%struct.stv090x_state* %192, i32 62484) #9, !dbg !12376
  br label %cond.end461, !dbg !12376

cond.end461:                                      ; preds = %cond.false459, %cond.true457
  %cond462 = phi i32 [ %call458, %cond.true457 ], [ %call460, %cond.false459 ], !dbg !12376
  store i32 %cond462, i32* %reg, align 4, !dbg !12377
  %193 = load i32, i32* %reg, align 4, !dbg !12378
  %and463 = and i32 %193, -65, !dbg !12378
  %or464 = or i32 %and463, 64, !dbg !12378
  store i32 %or464, i32* %reg, align 4, !dbg !12378
  %194 = load i32, i32* %reg, align 4, !dbg !12379
  %and465 = and i32 %194, -129, !dbg !12379
  %or466 = or i32 %and465, 128, !dbg !12379
  store i32 %or466, i32* %reg, align 4, !dbg !12379
  %195 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12380
  %demod467 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %195, i32 0, i32 1, !dbg !12380
  %196 = load i32, i32* %demod467, align 4, !dbg !12380
  %cmp468 = icmp eq i32 %196, 2, !dbg !12380
  br i1 %cmp468, label %cond.true470, label %cond.false473, !dbg !12380

cond.true470:                                     ; preds = %cond.end461
  %197 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12380
  %198 = load i32, i32* %reg, align 4, !dbg !12380
  %conv471 = trunc i32 %198 to i8, !dbg !12380
  %call472 = call i32 @stv090x_write_reg(%struct.stv090x_state* %197, i32 61972, i8 zeroext %conv471) #9, !dbg !12380
  br label %cond.end476, !dbg !12380

cond.false473:                                    ; preds = %cond.end461
  %199 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12380
  %200 = load i32, i32* %reg, align 4, !dbg !12380
  %conv474 = trunc i32 %200 to i8, !dbg !12380
  %call475 = call i32 @stv090x_write_reg(%struct.stv090x_state* %199, i32 62484, i8 zeroext %conv474) #9, !dbg !12380
  br label %cond.end476, !dbg !12380

cond.end476:                                      ; preds = %cond.false473, %cond.true470
  %cond477 = phi i32 [ %call472, %cond.true470 ], [ %call475, %cond.false473 ], !dbg !12380
  %cmp478 = icmp slt i32 %cond477, 0, !dbg !12382
  br i1 %cmp478, label %if.then480, label %if.end481, !dbg !12383

if.then480:                                       ; preds = %cond.end476
  br label %err, !dbg !12384

if.end481:                                        ; preds = %cond.end476
  br label %sw.epilog, !dbg !12385

sw.epilog:                                        ; preds = %if.end481, %cond.end451, %if.end125
  %201 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12386
  %demod482 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %201, i32 0, i32 1, !dbg !12386
  %202 = load i32, i32* %demod482, align 4, !dbg !12386
  %cmp483 = icmp eq i32 %202, 2, !dbg !12386
  br i1 %cmp483, label %cond.true485, label %cond.false487, !dbg !12386

cond.true485:                                     ; preds = %sw.epilog
  %203 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12386
  %call486 = call i32 @stv090x_read_reg(%struct.stv090x_state* %203, i32 62028) #9, !dbg !12386
  br label %cond.end489, !dbg !12386

cond.false487:                                    ; preds = %sw.epilog
  %204 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12386
  %call488 = call i32 @stv090x_read_reg(%struct.stv090x_state* %204, i32 62540) #9, !dbg !12386
  br label %cond.end489, !dbg !12386

cond.end489:                                      ; preds = %cond.false487, %cond.true485
  %cond490 = phi i32 [ %call486, %cond.true485 ], [ %call488, %cond.false487 ], !dbg !12386
  store i32 %cond490, i32* %f_1, align 4, !dbg !12387
  %205 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12388
  %demod491 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %205, i32 0, i32 1, !dbg !12388
  %206 = load i32, i32* %demod491, align 4, !dbg !12388
  %cmp492 = icmp eq i32 %206, 2, !dbg !12388
  br i1 %cmp492, label %cond.true494, label %cond.false496, !dbg !12388

cond.true494:                                     ; preds = %cond.end489
  %207 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12388
  %call495 = call i32 @stv090x_read_reg(%struct.stv090x_state* %207, i32 62029) #9, !dbg !12388
  br label %cond.end498, !dbg !12388

cond.false496:                                    ; preds = %cond.end489
  %208 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12388
  %call497 = call i32 @stv090x_read_reg(%struct.stv090x_state* %208, i32 62541) #9, !dbg !12388
  br label %cond.end498, !dbg !12388

cond.end498:                                      ; preds = %cond.false496, %cond.true494
  %cond499 = phi i32 [ %call495, %cond.true494 ], [ %call497, %cond.false496 ], !dbg !12388
  store i32 %cond499, i32* %f_0, align 4, !dbg !12389
  %209 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12390
  %demod500 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %209, i32 0, i32 1, !dbg !12390
  %210 = load i32, i32* %demod500, align 4, !dbg !12390
  %cmp501 = icmp eq i32 %210, 2, !dbg !12390
  br i1 %cmp501, label %cond.true503, label %cond.false505, !dbg !12390

cond.true503:                                     ; preds = %cond.end498
  %211 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12390
  %call504 = call i32 @stv090x_read_reg(%struct.stv090x_state* %211, i32 62061) #9, !dbg !12390
  br label %cond.end507, !dbg !12390

cond.false505:                                    ; preds = %cond.end498
  %212 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12390
  %call506 = call i32 @stv090x_read_reg(%struct.stv090x_state* %212, i32 62573) #9, !dbg !12390
  br label %cond.end507, !dbg !12390

cond.end507:                                      ; preds = %cond.false505, %cond.true503
  %cond508 = phi i32 [ %call504, %cond.true503 ], [ %call506, %cond.false505 ], !dbg !12390
  store i32 %cond508, i32* %reg, align 4, !dbg !12391
  %213 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12392
  %algo = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %213, i32 0, i32 17, !dbg !12394
  %214 = load i32, i32* %algo, align 4, !dbg !12394
  %cmp509 = icmp eq i32 %214, 0, !dbg !12395
  br i1 %cmp509, label %if.then511, label %if.end570, !dbg !12396

if.then511:                                       ; preds = %cond.end507
  %215 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12397
  %demod512 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %215, i32 0, i32 1, !dbg !12397
  %216 = load i32, i32* %demod512, align 4, !dbg !12397
  %cmp513 = icmp eq i32 %216, 2, !dbg !12397
  br i1 %cmp513, label %cond.true515, label %cond.false517, !dbg !12397

cond.true515:                                     ; preds = %if.then511
  %217 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12397
  %call516 = call i32 @stv090x_write_reg(%struct.stv090x_state* %217, i32 62041, i8 zeroext 0) #9, !dbg !12397
  br label %cond.end519, !dbg !12397

cond.false517:                                    ; preds = %if.then511
  %218 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12397
  %call518 = call i32 @stv090x_write_reg(%struct.stv090x_state* %218, i32 62553, i8 zeroext 0) #9, !dbg !12397
  br label %cond.end519, !dbg !12397

cond.end519:                                      ; preds = %cond.false517, %cond.true515
  %cond520 = phi i32 [ %call516, %cond.true515 ], [ %call518, %cond.false517 ], !dbg !12397
  %219 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12399
  %demod521 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %219, i32 0, i32 1, !dbg !12399
  %220 = load i32, i32* %demod521, align 4, !dbg !12399
  %cmp522 = icmp eq i32 %220, 2, !dbg !12399
  br i1 %cmp522, label %cond.true524, label %cond.false526, !dbg !12399

cond.true524:                                     ; preds = %cond.end519
  %221 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12399
  %call525 = call i32 @stv090x_read_reg(%struct.stv090x_state* %221, i32 61972) #9, !dbg !12399
  br label %cond.end528, !dbg !12399

cond.false526:                                    ; preds = %cond.end519
  %222 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12399
  %call527 = call i32 @stv090x_read_reg(%struct.stv090x_state* %222, i32 62484) #9, !dbg !12399
  br label %cond.end528, !dbg !12399

cond.end528:                                      ; preds = %cond.false526, %cond.true524
  %cond529 = phi i32 [ %call525, %cond.true524 ], [ %call527, %cond.false526 ], !dbg !12399
  store i32 %cond529, i32* %reg, align 4, !dbg !12400
  %223 = load i32, i32* %reg, align 4, !dbg !12401
  %and530 = and i32 %223, -17, !dbg !12401
  store i32 %and530, i32* %reg, align 4, !dbg !12401
  %224 = load i32, i32* %reg, align 4, !dbg !12402
  %and531 = and i32 %224, -9, !dbg !12402
  store i32 %and531, i32* %reg, align 4, !dbg !12402
  %225 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12403
  %demod532 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %225, i32 0, i32 1, !dbg !12403
  %226 = load i32, i32* %demod532, align 4, !dbg !12403
  %cmp533 = icmp eq i32 %226, 2, !dbg !12403
  br i1 %cmp533, label %cond.true535, label %cond.false538, !dbg !12403

cond.true535:                                     ; preds = %cond.end528
  %227 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12403
  %228 = load i32, i32* %reg, align 4, !dbg !12403
  %conv536 = trunc i32 %228 to i8, !dbg !12403
  %call537 = call i32 @stv090x_write_reg(%struct.stv090x_state* %227, i32 61972, i8 zeroext %conv536) #9, !dbg !12403
  br label %cond.end541, !dbg !12403

cond.false538:                                    ; preds = %cond.end528
  %229 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12403
  %230 = load i32, i32* %reg, align 4, !dbg !12403
  %conv539 = trunc i32 %230 to i8, !dbg !12403
  %call540 = call i32 @stv090x_write_reg(%struct.stv090x_state* %229, i32 62484, i8 zeroext %conv539) #9, !dbg !12403
  br label %cond.end541, !dbg !12403

cond.end541:                                      ; preds = %cond.false538, %cond.true535
  %cond542 = phi i32 [ %call537, %cond.true535 ], [ %call540, %cond.false538 ], !dbg !12403
  %cmp543 = icmp slt i32 %cond542, 0, !dbg !12405
  br i1 %cmp543, label %if.then545, label %if.end546, !dbg !12406

if.then545:                                       ; preds = %cond.end541
  br label %err, !dbg !12407

if.end546:                                        ; preds = %cond.end541
  %231 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12408
  %demod547 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %231, i32 0, i32 1, !dbg !12408
  %232 = load i32, i32* %demod547, align 4, !dbg !12408
  %cmp548 = icmp eq i32 %232, 2, !dbg !12408
  br i1 %cmp548, label %cond.true550, label %cond.false552, !dbg !12408

cond.true550:                                     ; preds = %if.end546
  %233 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12408
  %call551 = call i32 @stv090x_write_reg(%struct.stv090x_state* %233, i32 62042, i8 zeroext -63) #9, !dbg !12408
  br label %cond.end554, !dbg !12408

cond.false552:                                    ; preds = %if.end546
  %234 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12408
  %call553 = call i32 @stv090x_write_reg(%struct.stv090x_state* %234, i32 62554, i8 zeroext -63) #9, !dbg !12408
  br label %cond.end554, !dbg !12408

cond.end554:                                      ; preds = %cond.false552, %cond.true550
  %cond555 = phi i32 [ %call551, %cond.true550 ], [ %call553, %cond.false552 ], !dbg !12408
  %cmp556 = icmp slt i32 %cond555, 0, !dbg !12410
  br i1 %cmp556, label %if.then558, label %if.end559, !dbg !12411

if.then558:                                       ; preds = %cond.end554
  br label %err, !dbg !12412

if.end559:                                        ; preds = %cond.end554
  %235 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12413
  %236 = load i32, i32* %srate, align 4, !dbg !12415
  %call560 = call i32 @stv090x_set_srate(%struct.stv090x_state* %235, i32 %236) #9, !dbg !12416
  %cmp561 = icmp slt i32 %call560, 0, !dbg !12417
  br i1 %cmp561, label %if.then563, label %if.end564, !dbg !12418

if.then563:                                       ; preds = %if.end559
  br label %err, !dbg !12419

if.end564:                                        ; preds = %if.end559
  store i32 1, i32* %blind_tune, align 4, !dbg !12420
  %237 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12421
  %call565 = call i32 @stv090x_dvbs_track_crl(%struct.stv090x_state* %237) #9, !dbg !12423
  %cmp566 = icmp slt i32 %call565, 0, !dbg !12424
  br i1 %cmp566, label %if.then568, label %if.end569, !dbg !12425

if.then568:                                       ; preds = %if.end564
  br label %err, !dbg !12426

if.end569:                                        ; preds = %if.end564
  br label %if.end570, !dbg !12427

if.end570:                                        ; preds = %if.end569, %cond.end507
  %238 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12428
  %internal571 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %238, i32 0, i32 3, !dbg !12430
  %239 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal571, align 8, !dbg !12430
  %dev_ver572 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %239, i32 0, i32 5, !dbg !12431
  %240 = load i32, i32* %dev_ver572, align 4, !dbg !12431
  %cmp573 = icmp uge i32 %240, 32, !dbg !12432
  br i1 %cmp573, label %if.then575, label %if.end614, !dbg !12433

if.then575:                                       ; preds = %if.end570
  %241 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12434
  %search_mode576 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %241, i32 0, i32 12, !dbg !12437
  %242 = load i32, i32* %search_mode576, align 8, !dbg !12437
  %cmp577 = icmp eq i32 %242, 1, !dbg !12438
  br i1 %cmp577, label %if.then586, label %lor.lhs.false, !dbg !12439

lor.lhs.false:                                    ; preds = %if.then575
  %243 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12440
  %search_mode579 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %243, i32 0, i32 12, !dbg !12441
  %244 = load i32, i32* %search_mode579, align 8, !dbg !12441
  %cmp580 = icmp eq i32 %244, 0, !dbg !12442
  br i1 %cmp580, label %if.then586, label %lor.lhs.false582, !dbg !12443

lor.lhs.false582:                                 ; preds = %lor.lhs.false
  %245 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12444
  %search_mode583 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %245, i32 0, i32 12, !dbg !12445
  %246 = load i32, i32* %search_mode583, align 8, !dbg !12445
  %cmp584 = icmp eq i32 %246, 3, !dbg !12446
  br i1 %cmp584, label %if.then586, label %if.end613, !dbg !12447

if.then586:                                       ; preds = %lor.lhs.false582, %lor.lhs.false, %if.then575
  %247 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12448
  %demod587 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %247, i32 0, i32 1, !dbg !12448
  %248 = load i32, i32* %demod587, align 4, !dbg !12448
  %cmp588 = icmp eq i32 %248, 2, !dbg !12448
  br i1 %cmp588, label %cond.true590, label %cond.false592, !dbg !12448

cond.true590:                                     ; preds = %if.then586
  %249 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12448
  %call591 = call i32 @stv090x_write_reg(%struct.stv090x_state* %249, i32 62269, i8 zeroext 10) #9, !dbg !12448
  br label %cond.end594, !dbg !12448

cond.false592:                                    ; preds = %if.then586
  %250 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12448
  %call593 = call i32 @stv090x_write_reg(%struct.stv090x_state* %250, i32 62781, i8 zeroext 10) #9, !dbg !12448
  br label %cond.end594, !dbg !12448

cond.end594:                                      ; preds = %cond.false592, %cond.true590
  %cond595 = phi i32 [ %call591, %cond.true590 ], [ %call593, %cond.false592 ], !dbg !12448
  %cmp596 = icmp slt i32 %cond595, 0, !dbg !12451
  br i1 %cmp596, label %if.then598, label %if.end599, !dbg !12452

if.then598:                                       ; preds = %cond.end594
  br label %err, !dbg !12453

if.end599:                                        ; preds = %cond.end594
  %251 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12454
  %demod600 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %251, i32 0, i32 1, !dbg !12454
  %252 = load i32, i32* %demod600, align 4, !dbg !12454
  %cmp601 = icmp eq i32 %252, 2, !dbg !12454
  br i1 %cmp601, label %cond.true603, label %cond.false605, !dbg !12454

cond.true603:                                     ; preds = %if.end599
  %253 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12454
  %call604 = call i32 @stv090x_write_reg(%struct.stv090x_state* %253, i32 62258, i8 zeroext 0) #9, !dbg !12454
  br label %cond.end607, !dbg !12454

cond.false605:                                    ; preds = %if.end599
  %254 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12454
  %call606 = call i32 @stv090x_write_reg(%struct.stv090x_state* %254, i32 62770, i8 zeroext 0) #9, !dbg !12454
  br label %cond.end607, !dbg !12454

cond.end607:                                      ; preds = %cond.false605, %cond.true603
  %cond608 = phi i32 [ %call604, %cond.true603 ], [ %call606, %cond.false605 ], !dbg !12454
  %cmp609 = icmp slt i32 %cond608, 0, !dbg !12456
  br i1 %cmp609, label %if.then611, label %if.end612, !dbg !12457

if.then611:                                       ; preds = %cond.end607
  br label %err, !dbg !12458

if.end612:                                        ; preds = %cond.end607
  br label %if.end613, !dbg !12459

if.end613:                                        ; preds = %if.end612, %lor.lhs.false582
  br label %if.end614, !dbg !12460

if.end614:                                        ; preds = %if.end613, %if.end570
  %255 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12461
  %demod615 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %255, i32 0, i32 1, !dbg !12461
  %256 = load i32, i32* %demod615, align 4, !dbg !12461
  %cmp616 = icmp eq i32 %256, 2, !dbg !12461
  br i1 %cmp616, label %cond.true618, label %cond.false620, !dbg !12461

cond.true618:                                     ; preds = %if.end614
  %257 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12461
  %call619 = call i32 @stv090x_write_reg(%struct.stv090x_state* %257, i32 61997, i8 zeroext 56) #9, !dbg !12461
  br label %cond.end622, !dbg !12461

cond.false620:                                    ; preds = %if.end614
  %258 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12461
  %call621 = call i32 @stv090x_write_reg(%struct.stv090x_state* %258, i32 62509, i8 zeroext 56) #9, !dbg !12461
  br label %cond.end622, !dbg !12461

cond.end622:                                      ; preds = %cond.false620, %cond.true618
  %cond623 = phi i32 [ %call619, %cond.true618 ], [ %call621, %cond.false620 ], !dbg !12461
  %cmp624 = icmp slt i32 %cond623, 0, !dbg !12463
  br i1 %cmp624, label %if.then626, label %if.end627, !dbg !12464

if.then626:                                       ; preds = %cond.end622
  br label %err, !dbg !12465

if.end627:                                        ; preds = %cond.end622
  %259 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12466
  %demod628 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %259, i32 0, i32 1, !dbg !12466
  %260 = load i32, i32* %demod628, align 4, !dbg !12466
  %cmp629 = icmp eq i32 %260, 2, !dbg !12466
  br i1 %cmp629, label %cond.true631, label %cond.false633, !dbg !12466

cond.true631:                                     ; preds = %if.end627
  %261 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12466
  %call632 = call i32 @stv090x_write_reg(%struct.stv090x_state* %261, i32 62048, i8 zeroext -128) #9, !dbg !12466
  br label %cond.end635, !dbg !12466

cond.false633:                                    ; preds = %if.end627
  %262 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12466
  %call634 = call i32 @stv090x_write_reg(%struct.stv090x_state* %262, i32 62560, i8 zeroext -128) #9, !dbg !12466
  br label %cond.end635, !dbg !12466

cond.end635:                                      ; preds = %cond.false633, %cond.true631
  %cond636 = phi i32 [ %call632, %cond.true631 ], [ %call634, %cond.false633 ], !dbg !12466
  %cmp637 = icmp slt i32 %cond636, 0, !dbg !12468
  br i1 %cmp637, label %if.then639, label %if.end640, !dbg !12469

if.then639:                                       ; preds = %cond.end635
  br label %err, !dbg !12470

if.end640:                                        ; preds = %cond.end635
  %263 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12471
  %demod641 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %263, i32 0, i32 1, !dbg !12471
  %264 = load i32, i32* %demod641, align 4, !dbg !12471
  %cmp642 = icmp eq i32 %264, 2, !dbg !12471
  br i1 %cmp642, label %cond.true644, label %cond.false646, !dbg !12471

cond.true644:                                     ; preds = %if.end640
  %265 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12471
  %call645 = call i32 @stv090x_write_reg(%struct.stv090x_state* %265, i32 62050, i8 zeroext -128) #9, !dbg !12471
  br label %cond.end648, !dbg !12471

cond.false646:                                    ; preds = %if.end640
  %266 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12471
  %call647 = call i32 @stv090x_write_reg(%struct.stv090x_state* %266, i32 62562, i8 zeroext -128) #9, !dbg !12471
  br label %cond.end648, !dbg !12471

cond.end648:                                      ; preds = %cond.false646, %cond.true644
  %cond649 = phi i32 [ %call645, %cond.true644 ], [ %call647, %cond.false646 ], !dbg !12471
  %cmp650 = icmp slt i32 %cond649, 0, !dbg !12473
  br i1 %cmp650, label %if.then652, label %if.end653, !dbg !12474

if.then652:                                       ; preds = %cond.end648
  br label %err, !dbg !12475

if.end653:                                        ; preds = %cond.end648
  %267 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12476
  %internal654 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %267, i32 0, i32 3, !dbg !12478
  %268 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal654, align 8, !dbg !12478
  %dev_ver655 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %268, i32 0, i32 5, !dbg !12479
  %269 = load i32, i32* %dev_ver655, align 4, !dbg !12479
  %cmp656 = icmp uge i32 %269, 32, !dbg !12480
  br i1 %cmp656, label %if.then665, label %lor.lhs.false658, !dbg !12481

lor.lhs.false658:                                 ; preds = %if.end653
  %270 = load i32, i32* %blind_tune, align 4, !dbg !12482
  %cmp659 = icmp eq i32 %270, 1, !dbg !12483
  br i1 %cmp659, label %if.then665, label %lor.lhs.false661, !dbg !12484

lor.lhs.false661:                                 ; preds = %lor.lhs.false658
  %271 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12485
  %srate662 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %271, i32 0, i32 19, !dbg !12486
  %272 = load i32, i32* %srate662, align 4, !dbg !12486
  %cmp663 = icmp ult i32 %272, 10000000, !dbg !12487
  br i1 %cmp663, label %if.then665, label %if.end865, !dbg !12488

if.then665:                                       ; preds = %lor.lhs.false661, %lor.lhs.false658, %if.end653
  %273 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12489
  %demod666 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %273, i32 0, i32 1, !dbg !12489
  %274 = load i32, i32* %demod666, align 4, !dbg !12489
  %cmp667 = icmp eq i32 %274, 2, !dbg !12489
  br i1 %cmp667, label %cond.true669, label %cond.false672, !dbg !12489

cond.true669:                                     ; preds = %if.then665
  %275 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12489
  %276 = load i32, i32* %f_1, align 4, !dbg !12489
  %conv670 = trunc i32 %276 to i8, !dbg !12489
  %call671 = call i32 @stv090x_write_reg(%struct.stv090x_state* %275, i32 62024, i8 zeroext %conv670) #9, !dbg !12489
  br label %cond.end675, !dbg !12489

cond.false672:                                    ; preds = %if.then665
  %277 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12489
  %278 = load i32, i32* %f_1, align 4, !dbg !12489
  %conv673 = trunc i32 %278 to i8, !dbg !12489
  %call674 = call i32 @stv090x_write_reg(%struct.stv090x_state* %277, i32 62536, i8 zeroext %conv673) #9, !dbg !12489
  br label %cond.end675, !dbg !12489

cond.end675:                                      ; preds = %cond.false672, %cond.true669
  %cond676 = phi i32 [ %call671, %cond.true669 ], [ %call674, %cond.false672 ], !dbg !12489
  %cmp677 = icmp slt i32 %cond676, 0, !dbg !12492
  br i1 %cmp677, label %if.then679, label %if.end680, !dbg !12493

if.then679:                                       ; preds = %cond.end675
  br label %err, !dbg !12494

if.end680:                                        ; preds = %cond.end675
  %279 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12495
  %demod681 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %279, i32 0, i32 1, !dbg !12495
  %280 = load i32, i32* %demod681, align 4, !dbg !12495
  %cmp682 = icmp eq i32 %280, 2, !dbg !12495
  br i1 %cmp682, label %cond.true684, label %cond.false687, !dbg !12495

cond.true684:                                     ; preds = %if.end680
  %281 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12495
  %282 = load i32, i32* %f_0, align 4, !dbg !12495
  %conv685 = trunc i32 %282 to i8, !dbg !12495
  %call686 = call i32 @stv090x_write_reg(%struct.stv090x_state* %281, i32 62025, i8 zeroext %conv685) #9, !dbg !12495
  br label %cond.end690, !dbg !12495

cond.false687:                                    ; preds = %if.end680
  %283 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12495
  %284 = load i32, i32* %f_0, align 4, !dbg !12495
  %conv688 = trunc i32 %284 to i8, !dbg !12495
  %call689 = call i32 @stv090x_write_reg(%struct.stv090x_state* %283, i32 62537, i8 zeroext %conv688) #9, !dbg !12495
  br label %cond.end690, !dbg !12495

cond.end690:                                      ; preds = %cond.false687, %cond.true684
  %cond691 = phi i32 [ %call686, %cond.true684 ], [ %call689, %cond.false687 ], !dbg !12495
  %cmp692 = icmp slt i32 %cond691, 0, !dbg !12497
  br i1 %cmp692, label %if.then694, label %if.end695, !dbg !12498

if.then694:                                       ; preds = %cond.end690
  br label %err, !dbg !12499

if.end695:                                        ; preds = %cond.end690
  %285 = load i32, i32* %srate, align 4, !dbg !12500
  %286 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12501
  %rolloff696 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %286, i32 0, i32 15, !dbg !12502
  %287 = load i32, i32* %rolloff696, align 4, !dbg !12502
  %call697 = call i32 @stv090x_car_width(i32 %285, i32 %287) #9, !dbg !12503
  %add698 = add i32 %call697, 10000000, !dbg !12504
  %288 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12505
  %tuner_bw = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %288, i32 0, i32 20, !dbg !12506
  store i32 %add698, i32* %tuner_bw, align 8, !dbg !12507
  %289 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12508
  %internal699 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %289, i32 0, i32 3, !dbg !12510
  %290 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal699, align 8, !dbg !12510
  %dev_ver700 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %290, i32 0, i32 5, !dbg !12511
  %291 = load i32, i32* %dev_ver700, align 4, !dbg !12511
  %cmp701 = icmp uge i32 %291, 32, !dbg !12512
  br i1 %cmp701, label %if.then706, label %lor.lhs.false703, !dbg !12513

lor.lhs.false703:                                 ; preds = %if.end695
  %292 = load i32, i32* %blind_tune, align 4, !dbg !12514
  %cmp704 = icmp eq i32 %292, 1, !dbg !12515
  br i1 %cmp704, label %if.then706, label %if.end732, !dbg !12516

if.then706:                                       ; preds = %lor.lhs.false703, %if.end695
  %293 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12517
  %algo707 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %293, i32 0, i32 17, !dbg !12520
  %294 = load i32, i32* %algo707, align 4, !dbg !12520
  %cmp708 = icmp ne i32 %294, 2, !dbg !12521
  br i1 %cmp708, label %if.then710, label %if.end731, !dbg !12522

if.then710:                                       ; preds = %if.then706
  %295 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12523
  %call711 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %295, i32 1) #9, !dbg !12526
  %cmp712 = icmp slt i32 %call711, 0, !dbg !12527
  br i1 %cmp712, label %if.then714, label %if.end715, !dbg !12528

if.then714:                                       ; preds = %if.then710
  br label %err, !dbg !12529

if.end715:                                        ; preds = %if.then710
  %296 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12530
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %296, i32 0, i32 5, !dbg !12532
  %297 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !12532
  %tuner_set_bandwidth = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %297, i32 0, i32 21, !dbg !12533
  %298 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth, align 8, !dbg !12533
  %tobool = icmp ne i32 (%struct.dvb_frontend*, i32)* %298, null, !dbg !12530
  br i1 %tobool, label %if.then716, label %if.end725, !dbg !12534

if.then716:                                       ; preds = %if.end715
  %299 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12535
  %config717 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %299, i32 0, i32 5, !dbg !12538
  %300 = load %struct.stv090x_config*, %struct.stv090x_config** %config717, align 8, !dbg !12538
  %tuner_set_bandwidth718 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %300, i32 0, i32 21, !dbg !12539
  %301 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth718, align 8, !dbg !12539
  %302 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !12540
  %303 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12541
  %tuner_bw719 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %303, i32 0, i32 20, !dbg !12542
  %304 = load i32, i32* %tuner_bw719, align 8, !dbg !12542
  %call720 = call i32 %301(%struct.dvb_frontend* %302, i32 %304) #9, !dbg !12535
  %cmp721 = icmp slt i32 %call720, 0, !dbg !12543
  br i1 %cmp721, label %if.then723, label %if.end724, !dbg !12544

if.then723:                                       ; preds = %if.then716
  br label %err_gateoff, !dbg !12545

if.end724:                                        ; preds = %if.then716
  br label %if.end725, !dbg !12546

if.end725:                                        ; preds = %if.end724, %if.end715
  %305 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12547
  %call726 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %305, i32 0) #9, !dbg !12549
  %cmp727 = icmp slt i32 %call726, 0, !dbg !12550
  br i1 %cmp727, label %if.then729, label %if.end730, !dbg !12551

if.then729:                                       ; preds = %if.end725
  br label %err, !dbg !12552

if.end730:                                        ; preds = %if.end725
  br label %if.end731, !dbg !12553

if.end731:                                        ; preds = %if.end730, %if.then706
  br label %if.end732, !dbg !12554

if.end732:                                        ; preds = %if.end731, %lor.lhs.false703
  %306 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12555
  %algo733 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %306, i32 0, i32 17, !dbg !12557
  %307 = load i32, i32* %algo733, align 4, !dbg !12557
  %cmp734 = icmp eq i32 %307, 0, !dbg !12558
  br i1 %cmp734, label %if.then740, label %lor.lhs.false736, !dbg !12559

lor.lhs.false736:                                 ; preds = %if.end732
  %308 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12560
  %srate737 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %308, i32 0, i32 19, !dbg !12561
  %309 = load i32, i32* %srate737, align 4, !dbg !12561
  %cmp738 = icmp ult i32 %309, 10000000, !dbg !12562
  br i1 %cmp738, label %if.then740, label %if.else741, !dbg !12563

if.then740:                                       ; preds = %lor.lhs.false736, %if.end732
  call void @msleep(i32 50) #9, !dbg !12564
  br label %if.end742, !dbg !12564

if.else741:                                       ; preds = %lor.lhs.false736
  call void @msleep(i32 5) #9, !dbg !12565
  br label %if.end742

if.end742:                                        ; preds = %if.else741, %if.then740
  %310 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12566
  call void @stv090x_get_lock_tmg(%struct.stv090x_state* %310) #9, !dbg !12567
  %311 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12568
  %312 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12570
  %DemodTimeout = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %312, i32 0, i32 22, !dbg !12571
  %313 = load i32, i32* %DemodTimeout, align 8, !dbg !12571
  %div = sdiv i32 %313, 2, !dbg !12572
  %call743 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %311, i32 %div) #9, !dbg !12573
  %tobool744 = icmp ne i32 %call743, 0, !dbg !12573
  br i1 %tobool744, label %if.end864, label %if.then745, !dbg !12574

if.then745:                                       ; preds = %if.end742
  %314 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12575
  %demod746 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %314, i32 0, i32 1, !dbg !12575
  %315 = load i32, i32* %demod746, align 4, !dbg !12575
  %cmp747 = icmp eq i32 %315, 2, !dbg !12575
  br i1 %cmp747, label %cond.true749, label %cond.false751, !dbg !12575

cond.true749:                                     ; preds = %if.then745
  %316 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12575
  %call750 = call i32 @stv090x_write_reg(%struct.stv090x_state* %316, i32 61974, i8 zeroext 31) #9, !dbg !12575
  br label %cond.end753, !dbg !12575

cond.false751:                                    ; preds = %if.then745
  %317 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12575
  %call752 = call i32 @stv090x_write_reg(%struct.stv090x_state* %317, i32 62486, i8 zeroext 31) #9, !dbg !12575
  br label %cond.end753, !dbg !12575

cond.end753:                                      ; preds = %cond.false751, %cond.true749
  %cond754 = phi i32 [ %call750, %cond.true749 ], [ %call752, %cond.false751 ], !dbg !12575
  %cmp755 = icmp slt i32 %cond754, 0, !dbg !12578
  br i1 %cmp755, label %if.then757, label %if.end758, !dbg !12579

if.then757:                                       ; preds = %cond.end753
  br label %err, !dbg !12580

if.end758:                                        ; preds = %cond.end753
  %318 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12581
  %demod759 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %318, i32 0, i32 1, !dbg !12581
  %319 = load i32, i32* %demod759, align 4, !dbg !12581
  %cmp760 = icmp eq i32 %319, 2, !dbg !12581
  br i1 %cmp760, label %cond.true762, label %cond.false765, !dbg !12581

cond.true762:                                     ; preds = %if.end758
  %320 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12581
  %321 = load i32, i32* %f_1, align 4, !dbg !12581
  %conv763 = trunc i32 %321 to i8, !dbg !12581
  %call764 = call i32 @stv090x_write_reg(%struct.stv090x_state* %320, i32 62024, i8 zeroext %conv763) #9, !dbg !12581
  br label %cond.end768, !dbg !12581

cond.false765:                                    ; preds = %if.end758
  %322 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12581
  %323 = load i32, i32* %f_1, align 4, !dbg !12581
  %conv766 = trunc i32 %323 to i8, !dbg !12581
  %call767 = call i32 @stv090x_write_reg(%struct.stv090x_state* %322, i32 62536, i8 zeroext %conv766) #9, !dbg !12581
  br label %cond.end768, !dbg !12581

cond.end768:                                      ; preds = %cond.false765, %cond.true762
  %cond769 = phi i32 [ %call764, %cond.true762 ], [ %call767, %cond.false765 ], !dbg !12581
  %cmp770 = icmp slt i32 %cond769, 0, !dbg !12583
  br i1 %cmp770, label %if.then772, label %if.end773, !dbg !12584

if.then772:                                       ; preds = %cond.end768
  br label %err, !dbg !12585

if.end773:                                        ; preds = %cond.end768
  %324 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12586
  %demod774 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %324, i32 0, i32 1, !dbg !12586
  %325 = load i32, i32* %demod774, align 4, !dbg !12586
  %cmp775 = icmp eq i32 %325, 2, !dbg !12586
  br i1 %cmp775, label %cond.true777, label %cond.false780, !dbg !12586

cond.true777:                                     ; preds = %if.end773
  %326 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12586
  %327 = load i32, i32* %f_0, align 4, !dbg !12586
  %conv778 = trunc i32 %327 to i8, !dbg !12586
  %call779 = call i32 @stv090x_write_reg(%struct.stv090x_state* %326, i32 62025, i8 zeroext %conv778) #9, !dbg !12586
  br label %cond.end783, !dbg !12586

cond.false780:                                    ; preds = %if.end773
  %328 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12586
  %329 = load i32, i32* %f_0, align 4, !dbg !12586
  %conv781 = trunc i32 %329 to i8, !dbg !12586
  %call782 = call i32 @stv090x_write_reg(%struct.stv090x_state* %328, i32 62537, i8 zeroext %conv781) #9, !dbg !12586
  br label %cond.end783, !dbg !12586

cond.end783:                                      ; preds = %cond.false780, %cond.true777
  %cond784 = phi i32 [ %call779, %cond.true777 ], [ %call782, %cond.false780 ], !dbg !12586
  %cmp785 = icmp slt i32 %cond784, 0, !dbg !12588
  br i1 %cmp785, label %if.then787, label %if.end788, !dbg !12589

if.then787:                                       ; preds = %cond.end783
  br label %err, !dbg !12590

if.end788:                                        ; preds = %cond.end783
  %330 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12591
  %demod789 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %330, i32 0, i32 1, !dbg !12591
  %331 = load i32, i32* %demod789, align 4, !dbg !12591
  %cmp790 = icmp eq i32 %331, 2, !dbg !12591
  br i1 %cmp790, label %cond.true792, label %cond.false794, !dbg !12591

cond.true792:                                     ; preds = %if.end788
  %332 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12591
  %call793 = call i32 @stv090x_write_reg(%struct.stv090x_state* %332, i32 61974, i8 zeroext 24) #9, !dbg !12591
  br label %cond.end796, !dbg !12591

cond.false794:                                    ; preds = %if.end788
  %333 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12591
  %call795 = call i32 @stv090x_write_reg(%struct.stv090x_state* %333, i32 62486, i8 zeroext 24) #9, !dbg !12591
  br label %cond.end796, !dbg !12591

cond.end796:                                      ; preds = %cond.false794, %cond.true792
  %cond797 = phi i32 [ %call793, %cond.true792 ], [ %call795, %cond.false794 ], !dbg !12591
  %cmp798 = icmp slt i32 %cond797, 0, !dbg !12593
  br i1 %cmp798, label %if.then800, label %if.end801, !dbg !12594

if.then800:                                       ; preds = %cond.end796
  br label %err, !dbg !12595

if.end801:                                        ; preds = %cond.end796
  store i32 0, i32* %i, align 4, !dbg !12596
  br label %while.cond, !dbg !12597

while.cond:                                       ; preds = %if.end863, %if.end801
  %334 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12598
  %335 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12599
  %DemodTimeout802 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %335, i32 0, i32 22, !dbg !12600
  %336 = load i32, i32* %DemodTimeout802, align 8, !dbg !12600
  %div803 = sdiv i32 %336, 2, !dbg !12601
  %call804 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %334, i32 %div803) #9, !dbg !12602
  %tobool805 = icmp ne i32 %call804, 0, !dbg !12602
  br i1 %tobool805, label %land.end, label %land.rhs, !dbg !12603

land.rhs:                                         ; preds = %while.cond
  %337 = load i32, i32* %i, align 4, !dbg !12604
  %cmp806 = icmp sle i32 %337, 2, !dbg !12605
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %338 = phi i1 [ false, %while.cond ], [ %cmp806, %land.rhs ], !dbg !12606
  br i1 %338, label %while.body, label %while.end, !dbg !12597

while.body:                                       ; preds = %land.end
  %339 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12607
  %demod808 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %339, i32 0, i32 1, !dbg !12607
  %340 = load i32, i32* %demod808, align 4, !dbg !12607
  %cmp809 = icmp eq i32 %340, 2, !dbg !12607
  br i1 %cmp809, label %cond.true811, label %cond.false813, !dbg !12607

cond.true811:                                     ; preds = %while.body
  %341 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12607
  %call812 = call i32 @stv090x_write_reg(%struct.stv090x_state* %341, i32 61974, i8 zeroext 31) #9, !dbg !12607
  br label %cond.end815, !dbg !12607

cond.false813:                                    ; preds = %while.body
  %342 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12607
  %call814 = call i32 @stv090x_write_reg(%struct.stv090x_state* %342, i32 62486, i8 zeroext 31) #9, !dbg !12607
  br label %cond.end815, !dbg !12607

cond.end815:                                      ; preds = %cond.false813, %cond.true811
  %cond816 = phi i32 [ %call812, %cond.true811 ], [ %call814, %cond.false813 ], !dbg !12607
  %cmp817 = icmp slt i32 %cond816, 0, !dbg !12610
  br i1 %cmp817, label %if.then819, label %if.end820, !dbg !12611

if.then819:                                       ; preds = %cond.end815
  br label %err, !dbg !12612

if.end820:                                        ; preds = %cond.end815
  %343 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12613
  %demod821 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %343, i32 0, i32 1, !dbg !12613
  %344 = load i32, i32* %demod821, align 4, !dbg !12613
  %cmp822 = icmp eq i32 %344, 2, !dbg !12613
  br i1 %cmp822, label %cond.true824, label %cond.false827, !dbg !12613

cond.true824:                                     ; preds = %if.end820
  %345 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12613
  %346 = load i32, i32* %f_1, align 4, !dbg !12613
  %conv825 = trunc i32 %346 to i8, !dbg !12613
  %call826 = call i32 @stv090x_write_reg(%struct.stv090x_state* %345, i32 62024, i8 zeroext %conv825) #9, !dbg !12613
  br label %cond.end830, !dbg !12613

cond.false827:                                    ; preds = %if.end820
  %347 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12613
  %348 = load i32, i32* %f_1, align 4, !dbg !12613
  %conv828 = trunc i32 %348 to i8, !dbg !12613
  %call829 = call i32 @stv090x_write_reg(%struct.stv090x_state* %347, i32 62536, i8 zeroext %conv828) #9, !dbg !12613
  br label %cond.end830, !dbg !12613

cond.end830:                                      ; preds = %cond.false827, %cond.true824
  %cond831 = phi i32 [ %call826, %cond.true824 ], [ %call829, %cond.false827 ], !dbg !12613
  %cmp832 = icmp slt i32 %cond831, 0, !dbg !12615
  br i1 %cmp832, label %if.then834, label %if.end835, !dbg !12616

if.then834:                                       ; preds = %cond.end830
  br label %err, !dbg !12617

if.end835:                                        ; preds = %cond.end830
  %349 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12618
  %demod836 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %349, i32 0, i32 1, !dbg !12618
  %350 = load i32, i32* %demod836, align 4, !dbg !12618
  %cmp837 = icmp eq i32 %350, 2, !dbg !12618
  br i1 %cmp837, label %cond.true839, label %cond.false842, !dbg !12618

cond.true839:                                     ; preds = %if.end835
  %351 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12618
  %352 = load i32, i32* %f_0, align 4, !dbg !12618
  %conv840 = trunc i32 %352 to i8, !dbg !12618
  %call841 = call i32 @stv090x_write_reg(%struct.stv090x_state* %351, i32 62025, i8 zeroext %conv840) #9, !dbg !12618
  br label %cond.end845, !dbg !12618

cond.false842:                                    ; preds = %if.end835
  %353 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12618
  %354 = load i32, i32* %f_0, align 4, !dbg !12618
  %conv843 = trunc i32 %354 to i8, !dbg !12618
  %call844 = call i32 @stv090x_write_reg(%struct.stv090x_state* %353, i32 62537, i8 zeroext %conv843) #9, !dbg !12618
  br label %cond.end845, !dbg !12618

cond.end845:                                      ; preds = %cond.false842, %cond.true839
  %cond846 = phi i32 [ %call841, %cond.true839 ], [ %call844, %cond.false842 ], !dbg !12618
  %cmp847 = icmp slt i32 %cond846, 0, !dbg !12620
  br i1 %cmp847, label %if.then849, label %if.end850, !dbg !12621

if.then849:                                       ; preds = %cond.end845
  br label %err, !dbg !12622

if.end850:                                        ; preds = %cond.end845
  %355 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12623
  %demod851 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %355, i32 0, i32 1, !dbg !12623
  %356 = load i32, i32* %demod851, align 4, !dbg !12623
  %cmp852 = icmp eq i32 %356, 2, !dbg !12623
  br i1 %cmp852, label %cond.true854, label %cond.false856, !dbg !12623

cond.true854:                                     ; preds = %if.end850
  %357 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12623
  %call855 = call i32 @stv090x_write_reg(%struct.stv090x_state* %357, i32 61974, i8 zeroext 24) #9, !dbg !12623
  br label %cond.end858, !dbg !12623

cond.false856:                                    ; preds = %if.end850
  %358 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12623
  %call857 = call i32 @stv090x_write_reg(%struct.stv090x_state* %358, i32 62486, i8 zeroext 24) #9, !dbg !12623
  br label %cond.end858, !dbg !12623

cond.end858:                                      ; preds = %cond.false856, %cond.true854
  %cond859 = phi i32 [ %call855, %cond.true854 ], [ %call857, %cond.false856 ], !dbg !12623
  %cmp860 = icmp slt i32 %cond859, 0, !dbg !12625
  br i1 %cmp860, label %if.then862, label %if.end863, !dbg !12626

if.then862:                                       ; preds = %cond.end858
  br label %err, !dbg !12627

if.end863:                                        ; preds = %cond.end858
  %359 = load i32, i32* %i, align 4, !dbg !12628
  %inc = add i32 %359, 1, !dbg !12628
  store i32 %inc, i32* %i, align 4, !dbg !12628
  br label %while.cond, !dbg !12597, !llvm.loop !12629

while.end:                                        ; preds = %land.end
  br label %if.end864, !dbg !12631

if.end864:                                        ; preds = %while.end, %if.end742
  br label %if.end865, !dbg !12632

if.end865:                                        ; preds = %if.end864, %lor.lhs.false661
  %360 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12633
  %internal866 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %360, i32 0, i32 3, !dbg !12635
  %361 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal866, align 8, !dbg !12635
  %dev_ver867 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %361, i32 0, i32 5, !dbg !12636
  %362 = load i32, i32* %dev_ver867, align 4, !dbg !12636
  %cmp868 = icmp uge i32 %362, 32, !dbg !12637
  br i1 %cmp868, label %if.then870, label %if.end884, !dbg !12638

if.then870:                                       ; preds = %if.end865
  %363 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12639
  %demod871 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %363, i32 0, i32 1, !dbg !12639
  %364 = load i32, i32* %demod871, align 4, !dbg !12639
  %cmp872 = icmp eq i32 %364, 2, !dbg !12639
  br i1 %cmp872, label %cond.true874, label %cond.false876, !dbg !12639

cond.true874:                                     ; preds = %if.then870
  %365 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12639
  %call875 = call i32 @stv090x_write_reg(%struct.stv090x_state* %365, i32 62013, i8 zeroext 73) #9, !dbg !12639
  br label %cond.end878, !dbg !12639

cond.false876:                                    ; preds = %if.then870
  %366 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12639
  %call877 = call i32 @stv090x_write_reg(%struct.stv090x_state* %366, i32 62525, i8 zeroext 73) #9, !dbg !12639
  br label %cond.end878, !dbg !12639

cond.end878:                                      ; preds = %cond.false876, %cond.true874
  %cond879 = phi i32 [ %call875, %cond.true874 ], [ %call877, %cond.false876 ], !dbg !12639
  %cmp880 = icmp slt i32 %cond879, 0, !dbg !12642
  br i1 %cmp880, label %if.then882, label %if.end883, !dbg !12643

if.then882:                                       ; preds = %cond.end878
  br label %err, !dbg !12644

if.end883:                                        ; preds = %cond.end878
  br label %if.end884, !dbg !12645

if.end884:                                        ; preds = %if.end883, %if.end865
  %367 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12646
  %delsys885 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %367, i32 0, i32 8, !dbg !12648
  %368 = load i32, i32* %delsys885, align 8, !dbg !12648
  %cmp886 = icmp eq i32 %368, 1, !dbg !12649
  br i1 %cmp886, label %if.then892, label %lor.lhs.false888, !dbg !12650

lor.lhs.false888:                                 ; preds = %if.end884
  %369 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12651
  %delsys889 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %369, i32 0, i32 8, !dbg !12652
  %370 = load i32, i32* %delsys889, align 8, !dbg !12652
  %cmp890 = icmp eq i32 %370, 3, !dbg !12653
  br i1 %cmp890, label %if.then892, label %if.end894, !dbg !12654

if.then892:                                       ; preds = %lor.lhs.false888, %if.end884
  %371 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12655
  %call893 = call i32 @stv090x_set_vit_thtracq(%struct.stv090x_state* %371) #9, !dbg !12656
  br label %if.end894, !dbg !12656

if.end894:                                        ; preds = %if.then892, %lor.lhs.false888
  store i32 0, i32* %retval, align 4, !dbg !12657
  br label %return, !dbg !12657

err_gateoff:                                      ; preds = %if.then723
  call void @llvm.dbg.label(metadata !12658), !dbg !12659
  %372 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12660
  %call895 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %372, i32 0) #9, !dbg !12661
  br label %err, !dbg !12661

err:                                              ; preds = %err_gateoff, %if.then882, %if.then862, %if.then849, %if.then834, %if.then819, %if.then800, %if.then787, %if.then772, %if.then757, %if.then729, %if.then714, %if.then694, %if.then679, %if.then652, %if.then639, %if.then626, %if.then611, %if.then598, %if.then568, %if.then563, %if.then558, %if.then545, %if.then480, %if.then437, %if.then422, %if.then404, %if.then389, %if.then371, %if.then356, %if.then338, %if.then315, %if.then300, %if.then286, %if.then271, %if.then248, %if.then233, %if.then183, %if.then170, %if.then152, %if.then124, %if.then109, %if.then96, %if.then83, %if.then70, %if.then54, %if.then45, %if.then17
  call void @llvm.dbg.label(metadata !12662), !dbg !12663
  br label %do.body, !dbg !12664

do.body:                                          ; preds = %err
  %373 = load i32, i32* @verbose, align 4, !dbg !12665
  %cmp896 = icmp ugt i32 %373, 0, !dbg !12665
  br i1 %cmp896, label %land.lhs.true898, label %if.else903, !dbg !12665

land.lhs.true898:                                 ; preds = %do.body
  %374 = load i32, i32* @verbose, align 4, !dbg !12665
  %cmp899 = icmp ugt i32 %374, 0, !dbg !12665
  br i1 %cmp899, label %if.then901, label %if.else903, !dbg !12670

if.then901:                                       ; preds = %land.lhs.true898
  %call902 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_optimize_track, i64 0, i64 0)) #13, !dbg !12665
  br label %if.end930, !dbg !12665

if.else903:                                       ; preds = %land.lhs.true898, %do.body
  %375 = load i32, i32* @verbose, align 4, !dbg !12671
  %cmp904 = icmp ugt i32 %375, 1, !dbg !12671
  br i1 %cmp904, label %land.lhs.true906, label %if.else911, !dbg !12671

land.lhs.true906:                                 ; preds = %if.else903
  %376 = load i32, i32* @verbose, align 4, !dbg !12671
  %cmp907 = icmp ugt i32 %376, 0, !dbg !12671
  br i1 %cmp907, label %if.then909, label %if.else911, !dbg !12665

if.then909:                                       ; preds = %land.lhs.true906
  %call910 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_optimize_track, i64 0, i64 0)) #13, !dbg !12671
  br label %if.end929, !dbg !12671

if.else911:                                       ; preds = %land.lhs.true906, %if.else903
  %377 = load i32, i32* @verbose, align 4, !dbg !12673
  %cmp912 = icmp ugt i32 %377, 2, !dbg !12673
  br i1 %cmp912, label %land.lhs.true914, label %if.else919, !dbg !12673

land.lhs.true914:                                 ; preds = %if.else911
  %378 = load i32, i32* @verbose, align 4, !dbg !12673
  %cmp915 = icmp ugt i32 %378, 0, !dbg !12673
  br i1 %cmp915, label %if.then917, label %if.else919, !dbg !12671

if.then917:                                       ; preds = %land.lhs.true914
  %call918 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_optimize_track, i64 0, i64 0)) #13, !dbg !12673
  br label %if.end928, !dbg !12673

if.else919:                                       ; preds = %land.lhs.true914, %if.else911
  %379 = load i32, i32* @verbose, align 4, !dbg !12675
  %cmp920 = icmp ugt i32 %379, 3, !dbg !12675
  br i1 %cmp920, label %land.lhs.true922, label %if.end927, !dbg !12675

land.lhs.true922:                                 ; preds = %if.else919
  %380 = load i32, i32* @verbose, align 4, !dbg !12675
  %cmp923 = icmp ugt i32 %380, 0, !dbg !12675
  br i1 %cmp923, label %if.then925, label %if.end927, !dbg !12673

if.then925:                                       ; preds = %land.lhs.true922
  %call926 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_optimize_track, i64 0, i64 0)) #13, !dbg !12675
  br label %if.end927, !dbg !12675

if.end927:                                        ; preds = %if.then925, %land.lhs.true922, %if.else919
  br label %if.end928

if.end928:                                        ; preds = %if.end927, %if.then917
  br label %if.end929

if.end929:                                        ; preds = %if.end928, %if.then909
  br label %if.end930

if.end930:                                        ; preds = %if.end929, %if.then901
  br label %do.end, !dbg !12677

do.end:                                           ; preds = %if.end930
  store i32 -1, i32* %retval, align 4, !dbg !12678
  br label %return, !dbg !12678

return:                                           ; preds = %do.end, %if.end894
  %381 = load i32, i32* %retval, align 4, !dbg !12679
  ret i32 %381, !dbg !12679
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_lock(%struct.stv090x_state* %state, i32 %timeout_dmd, i32 %timeout_fec) #0 !dbg !12680 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %timeout_dmd.addr = alloca i32, align 4
  %timeout_fec.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  %timer = alloca i32, align 4
  %lock = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !12683, metadata !DIExpression()), !dbg !12684
  store i32 %timeout_dmd, i32* %timeout_dmd.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout_dmd.addr, metadata !12685, metadata !DIExpression()), !dbg !12686
  store i32 %timeout_fec, i32* %timeout_fec.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout_fec.addr, metadata !12687, metadata !DIExpression()), !dbg !12688
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12689, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !12691, metadata !DIExpression()), !dbg !12692
  store i32 0, i32* %timer, align 4, !dbg !12692
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !12693, metadata !DIExpression()), !dbg !12694
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12695
  %1 = load i32, i32* %timeout_dmd.addr, align 4, !dbg !12696
  %call = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %0, i32 %1) #9, !dbg !12697
  store i32 %call, i32* %lock, align 4, !dbg !12698
  %2 = load i32, i32* %lock, align 4, !dbg !12699
  %tobool = icmp ne i32 %2, 0, !dbg !12699
  br i1 %tobool, label %if.then, label %if.end, !dbg !12701

if.then:                                          ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12702
  %4 = load i32, i32* %timeout_fec.addr, align 4, !dbg !12703
  %call1 = call i32 @stv090x_get_feclock(%struct.stv090x_state* %3, i32 %4) #9, !dbg !12704
  store i32 %call1, i32* %lock, align 4, !dbg !12705
  br label %if.end, !dbg !12706

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %lock, align 4, !dbg !12707
  %tobool2 = icmp ne i32 %5, 0, !dbg !12707
  br i1 %tobool2, label %if.then3, label %if.end8, !dbg !12709

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %lock, align 4, !dbg !12710
  br label %while.cond, !dbg !12712

while.cond:                                       ; preds = %cond.end, %if.then3
  %6 = load i32, i32* %timer, align 4, !dbg !12713
  %7 = load i32, i32* %timeout_fec.addr, align 4, !dbg !12714
  %cmp = icmp slt i32 %6, %7, !dbg !12715
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12716

land.rhs:                                         ; preds = %while.cond
  %8 = load i32, i32* %lock, align 4, !dbg !12717
  %tobool4 = icmp ne i32 %8, 0, !dbg !12718
  %lnot = xor i1 %tobool4, true, !dbg !12718
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !12719
  br i1 %9, label %while.body, label %while.end, !dbg !12712

while.body:                                       ; preds = %land.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12720
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !12720
  %11 = load i32, i32* %demod, align 4, !dbg !12720
  %cmp5 = icmp eq i32 %11, 2, !dbg !12720
  br i1 %cmp5, label %cond.true, label %cond.false, !dbg !12720

cond.true:                                        ; preds = %while.body
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12720
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 62337) #9, !dbg !12720
  br label %cond.end, !dbg !12720

cond.false:                                       ; preds = %while.body
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12720
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 62849) #9, !dbg !12720
  br label %cond.end, !dbg !12720

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call6, %cond.true ], [ %call7, %cond.false ], !dbg !12720
  store i32 %cond, i32* %reg, align 4, !dbg !12722
  %14 = load i32, i32* %reg, align 4, !dbg !12723
  %shr = lshr i32 %14, 7, !dbg !12723
  %and = and i32 %shr, 1, !dbg !12723
  store i32 %and, i32* %lock, align 4, !dbg !12724
  call void @msleep(i32 1) #9, !dbg !12725
  %15 = load i32, i32* %timer, align 4, !dbg !12726
  %inc = add i32 %15, 1, !dbg !12726
  store i32 %inc, i32* %timer, align 4, !dbg !12726
  br label %while.cond, !dbg !12712, !llvm.loop !12727

while.end:                                        ; preds = %land.end
  br label %if.end8, !dbg !12729

if.end8:                                          ; preds = %while.end, %if.end
  %16 = load i32, i32* %lock, align 4, !dbg !12730
  ret i32 %16, !dbg !12731
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_s2rolloff(%struct.stv090x_state* %state) #0 !dbg !12732 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !12733, metadata !DIExpression()), !dbg !12734
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12735, metadata !DIExpression()), !dbg !12736
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12737
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 3, !dbg !12739
  %1 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !12739
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %1, i32 0, i32 5, !dbg !12740
  %2 = load i32, i32* %dev_ver, align 4, !dbg !12740
  %cmp = icmp ule i32 %2, 32, !dbg !12741
  br i1 %cmp, label %if.then, label %if.else, !dbg !12742

if.then:                                          ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12743
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 1, !dbg !12743
  %4 = load i32, i32* %demod, align 4, !dbg !12743
  %cmp1 = icmp eq i32 %4, 2, !dbg !12743
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !12743

cond.true:                                        ; preds = %if.then
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12743
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %5, i32 61968) #9, !dbg !12743
  br label %cond.end, !dbg !12743

cond.false:                                       ; preds = %if.then
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12743
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62480) #9, !dbg !12743
  br label %cond.end, !dbg !12743

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !12743
  store i32 %cond, i32* %reg, align 4, !dbg !12745
  %7 = load i32, i32* %reg, align 4, !dbg !12746
  %and = and i32 %7, -5, !dbg !12746
  store i32 %and, i32* %reg, align 4, !dbg !12746
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12747
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !12747
  %9 = load i32, i32* %demod3, align 4, !dbg !12747
  %cmp4 = icmp eq i32 %9, 2, !dbg !12747
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !12747

cond.true5:                                       ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12747
  %11 = load i32, i32* %reg, align 4, !dbg !12747
  %conv = trunc i32 %11 to i8, !dbg !12747
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 61968, i8 zeroext %conv) #9, !dbg !12747
  br label %cond.end10, !dbg !12747

cond.false7:                                      ; preds = %cond.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12747
  %13 = load i32, i32* %reg, align 4, !dbg !12747
  %conv8 = trunc i32 %13 to i8, !dbg !12747
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 62480, i8 zeroext %conv8) #9, !dbg !12747
  br label %cond.end10, !dbg !12747

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %call6, %cond.true5 ], [ %call9, %cond.false7 ], !dbg !12747
  %cmp12 = icmp slt i32 %cond11, 0, !dbg !12749
  br i1 %cmp12, label %if.then14, label %if.end, !dbg !12750

if.then14:                                        ; preds = %cond.end10
  br label %err, !dbg !12751

if.end:                                           ; preds = %cond.end10
  br label %if.end40, !dbg !12752

if.else:                                          ; preds = %entry
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12753
  %demod15 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 1, !dbg !12753
  %15 = load i32, i32* %demod15, align 4, !dbg !12753
  %cmp16 = icmp eq i32 %15, 2, !dbg !12753
  br i1 %cmp16, label %cond.true18, label %cond.false20, !dbg !12753

cond.true18:                                      ; preds = %if.else
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12753
  %call19 = call i32 @stv090x_read_reg(%struct.stv090x_state* %16, i32 61968) #9, !dbg !12753
  br label %cond.end22, !dbg !12753

cond.false20:                                     ; preds = %if.else
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12753
  %call21 = call i32 @stv090x_read_reg(%struct.stv090x_state* %17, i32 62480) #9, !dbg !12753
  br label %cond.end22, !dbg !12753

cond.end22:                                       ; preds = %cond.false20, %cond.true18
  %cond23 = phi i32 [ %call19, %cond.true18 ], [ %call21, %cond.false20 ], !dbg !12753
  store i32 %cond23, i32* %reg, align 4, !dbg !12755
  %18 = load i32, i32* %reg, align 4, !dbg !12756
  %and24 = and i32 %18, -129, !dbg !12756
  store i32 %and24, i32* %reg, align 4, !dbg !12756
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12757
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 1, !dbg !12757
  %20 = load i32, i32* %demod25, align 4, !dbg !12757
  %cmp26 = icmp eq i32 %20, 2, !dbg !12757
  br i1 %cmp26, label %cond.true28, label %cond.false31, !dbg !12757

cond.true28:                                      ; preds = %cond.end22
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12757
  %22 = load i32, i32* %reg, align 4, !dbg !12757
  %conv29 = trunc i32 %22 to i8, !dbg !12757
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 61968, i8 zeroext %conv29) #9, !dbg !12757
  br label %cond.end34, !dbg !12757

cond.false31:                                     ; preds = %cond.end22
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12757
  %24 = load i32, i32* %reg, align 4, !dbg !12757
  %conv32 = trunc i32 %24 to i8, !dbg !12757
  %call33 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62480, i8 zeroext %conv32) #9, !dbg !12757
  br label %cond.end34, !dbg !12757

cond.end34:                                       ; preds = %cond.false31, %cond.true28
  %cond35 = phi i32 [ %call30, %cond.true28 ], [ %call33, %cond.false31 ], !dbg !12757
  %cmp36 = icmp slt i32 %cond35, 0, !dbg !12759
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !12760

if.then38:                                        ; preds = %cond.end34
  br label %err, !dbg !12761

if.end39:                                         ; preds = %cond.end34
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12762
  br label %return, !dbg !12762

err:                                              ; preds = %if.then38, %if.then14
  call void @llvm.dbg.label(metadata !12763), !dbg !12764
  br label %do.body, !dbg !12765

do.body:                                          ; preds = %err
  %25 = load i32, i32* @verbose, align 4, !dbg !12766
  %cmp41 = icmp ugt i32 %25, 0, !dbg !12766
  br i1 %cmp41, label %land.lhs.true, label %if.else47, !dbg !12766

land.lhs.true:                                    ; preds = %do.body
  %26 = load i32, i32* @verbose, align 4, !dbg !12766
  %cmp43 = icmp ugt i32 %26, 0, !dbg !12766
  br i1 %cmp43, label %if.then45, label %if.else47, !dbg !12771

if.then45:                                        ; preds = %land.lhs.true
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_s2rolloff, i64 0, i64 0)) #13, !dbg !12766
  br label %if.end74, !dbg !12766

if.else47:                                        ; preds = %land.lhs.true, %do.body
  %27 = load i32, i32* @verbose, align 4, !dbg !12772
  %cmp48 = icmp ugt i32 %27, 1, !dbg !12772
  br i1 %cmp48, label %land.lhs.true50, label %if.else55, !dbg !12772

land.lhs.true50:                                  ; preds = %if.else47
  %28 = load i32, i32* @verbose, align 4, !dbg !12772
  %cmp51 = icmp ugt i32 %28, 0, !dbg !12772
  br i1 %cmp51, label %if.then53, label %if.else55, !dbg !12766

if.then53:                                        ; preds = %land.lhs.true50
  %call54 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_s2rolloff, i64 0, i64 0)) #13, !dbg !12772
  br label %if.end73, !dbg !12772

if.else55:                                        ; preds = %land.lhs.true50, %if.else47
  %29 = load i32, i32* @verbose, align 4, !dbg !12774
  %cmp56 = icmp ugt i32 %29, 2, !dbg !12774
  br i1 %cmp56, label %land.lhs.true58, label %if.else63, !dbg !12774

land.lhs.true58:                                  ; preds = %if.else55
  %30 = load i32, i32* @verbose, align 4, !dbg !12774
  %cmp59 = icmp ugt i32 %30, 0, !dbg !12774
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !12772

if.then61:                                        ; preds = %land.lhs.true58
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_s2rolloff, i64 0, i64 0)) #13, !dbg !12774
  br label %if.end72, !dbg !12774

if.else63:                                        ; preds = %land.lhs.true58, %if.else55
  %31 = load i32, i32* @verbose, align 4, !dbg !12776
  %cmp64 = icmp ugt i32 %31, 3, !dbg !12776
  br i1 %cmp64, label %land.lhs.true66, label %if.end71, !dbg !12776

land.lhs.true66:                                  ; preds = %if.else63
  %32 = load i32, i32* @verbose, align 4, !dbg !12776
  %cmp67 = icmp ugt i32 %32, 0, !dbg !12776
  br i1 %cmp67, label %if.then69, label %if.end71, !dbg !12774

if.then69:                                        ; preds = %land.lhs.true66
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_s2rolloff, i64 0, i64 0)) #13, !dbg !12776
  br label %if.end71, !dbg !12776

if.end71:                                         ; preds = %if.then69, %land.lhs.true66, %if.else63
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then61
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then53
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then45
  br label %do.end, !dbg !12778

do.end:                                           ; preds = %if.end74
  store i32 -1, i32* %retval, align 4, !dbg !12779
  br label %return, !dbg !12779

return:                                           ; preds = %do.end, %if.end40
  %33 = load i32, i32* %retval, align 4, !dbg !12780
  ret i32 %33, !dbg !12780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_chk_signal(%struct.stv090x_state* %state) #0 !dbg !12781 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %offst_car = alloca i32, align 4
  %agc2 = alloca i32, align 4
  %car_max = alloca i32, align 4
  %no_signal = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !12782, metadata !DIExpression()), !dbg !12783
  call void @llvm.dbg.declare(metadata i32* %offst_car, metadata !12784, metadata !DIExpression()), !dbg !12785
  call void @llvm.dbg.declare(metadata i32* %agc2, metadata !12786, metadata !DIExpression()), !dbg !12787
  call void @llvm.dbg.declare(metadata i32* %car_max, metadata !12788, metadata !DIExpression()), !dbg !12789
  call void @llvm.dbg.declare(metadata i32* %no_signal, metadata !12790, metadata !DIExpression()), !dbg !12791
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12792
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !12792
  %1 = load i32, i32* %demod, align 4, !dbg !12792
  %cmp = icmp eq i32 %1, 2, !dbg !12792
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12792

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12792
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 62028) #9, !dbg !12792
  br label %cond.end, !dbg !12792

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12792
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62540) #9, !dbg !12792
  br label %cond.end, !dbg !12792

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !12792
  %shl = shl i32 %cond, 8, !dbg !12793
  store i32 %shl, i32* %offst_car, align 4, !dbg !12794
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12795
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !12795
  %5 = load i32, i32* %demod2, align 4, !dbg !12795
  %cmp3 = icmp eq i32 %5, 2, !dbg !12795
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !12795

cond.true4:                                       ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12795
  %call5 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62029) #9, !dbg !12795
  br label %cond.end8, !dbg !12795

cond.false6:                                      ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12795
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62541) #9, !dbg !12795
  br label %cond.end8, !dbg !12795

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i32 [ %call5, %cond.true4 ], [ %call7, %cond.false6 ], !dbg !12795
  %8 = load i32, i32* %offst_car, align 4, !dbg !12796
  %or = or i32 %8, %cond9, !dbg !12796
  store i32 %or, i32* %offst_car, align 4, !dbg !12796
  %9 = load i32, i32* %offst_car, align 4, !dbg !12797
  %call10 = call i32 @comp2(i32 %9, i32 16) #9, !dbg !12798
  store i32 %call10, i32* %offst_car, align 4, !dbg !12799
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12800
  %demod11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !12800
  %11 = load i32, i32* %demod11, align 4, !dbg !12800
  %cmp12 = icmp eq i32 %11, 2, !dbg !12800
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !12800

cond.true13:                                      ; preds = %cond.end8
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12800
  %call14 = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 62006) #9, !dbg !12800
  br label %cond.end17, !dbg !12800

cond.false15:                                     ; preds = %cond.end8
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12800
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 62518) #9, !dbg !12800
  br label %cond.end17, !dbg !12800

cond.end17:                                       ; preds = %cond.false15, %cond.true13
  %cond18 = phi i32 [ %call14, %cond.true13 ], [ %call16, %cond.false15 ], !dbg !12800
  %shl19 = shl i32 %cond18, 8, !dbg !12801
  store i32 %shl19, i32* %agc2, align 4, !dbg !12802
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12803
  %demod20 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 1, !dbg !12803
  %15 = load i32, i32* %demod20, align 4, !dbg !12803
  %cmp21 = icmp eq i32 %15, 2, !dbg !12803
  br i1 %cmp21, label %cond.true22, label %cond.false24, !dbg !12803

cond.true22:                                      ; preds = %cond.end17
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12803
  %call23 = call i32 @stv090x_read_reg(%struct.stv090x_state* %16, i32 62007) #9, !dbg !12803
  br label %cond.end26, !dbg !12803

cond.false24:                                     ; preds = %cond.end17
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12803
  %call25 = call i32 @stv090x_read_reg(%struct.stv090x_state* %17, i32 62519) #9, !dbg !12803
  br label %cond.end26, !dbg !12803

cond.end26:                                       ; preds = %cond.false24, %cond.true22
  %cond27 = phi i32 [ %call23, %cond.true22 ], [ %call25, %cond.false24 ], !dbg !12803
  %18 = load i32, i32* %agc2, align 4, !dbg !12804
  %or28 = or i32 %18, %cond27, !dbg !12804
  store i32 %or28, i32* %agc2, align 4, !dbg !12804
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12805
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 21, !dbg !12806
  %20 = load i32, i32* %search_range, align 4, !dbg !12806
  %div = sdiv i32 %20, 1000, !dbg !12807
  store i32 %div, i32* %car_max, align 4, !dbg !12808
  %21 = load i32, i32* %car_max, align 4, !dbg !12809
  %div29 = sdiv i32 %21, 10, !dbg !12810
  %22 = load i32, i32* %car_max, align 4, !dbg !12811
  %add = add i32 %22, %div29, !dbg !12811
  store i32 %add, i32* %car_max, align 4, !dbg !12811
  %23 = load i32, i32* %car_max, align 4, !dbg !12812
  %mul = mul i32 65536, %23, !dbg !12813
  %div30 = sdiv i32 %mul, 2, !dbg !12814
  store i32 %div30, i32* %car_max, align 4, !dbg !12815
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12816
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 3, !dbg !12817
  %25 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !12817
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %25, i32 0, i32 4, !dbg !12818
  %26 = load i32, i32* %mclk, align 8, !dbg !12818
  %div31 = sdiv i32 %26, 1000, !dbg !12819
  %27 = load i32, i32* %car_max, align 4, !dbg !12820
  %div32 = sdiv i32 %27, %div31, !dbg !12820
  store i32 %div32, i32* %car_max, align 4, !dbg !12820
  %28 = load i32, i32* %car_max, align 4, !dbg !12821
  %cmp33 = icmp sgt i32 %28, 16384, !dbg !12823
  br i1 %cmp33, label %if.then, label %if.end, !dbg !12824

if.then:                                          ; preds = %cond.end26
  store i32 16384, i32* %car_max, align 4, !dbg !12825
  br label %if.end, !dbg !12826

if.end:                                           ; preds = %if.then, %cond.end26
  %29 = load i32, i32* %agc2, align 4, !dbg !12827
  %cmp34 = icmp sgt i32 %29, 8192, !dbg !12829
  br i1 %cmp34, label %if.then40, label %lor.lhs.false, !dbg !12830

lor.lhs.false:                                    ; preds = %if.end
  %30 = load i32, i32* %offst_car, align 4, !dbg !12831
  %31 = load i32, i32* %car_max, align 4, !dbg !12832
  %mul35 = mul i32 2, %31, !dbg !12833
  %cmp36 = icmp sgt i32 %30, %mul35, !dbg !12834
  br i1 %cmp36, label %if.then40, label %lor.lhs.false37, !dbg !12835

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %32 = load i32, i32* %offst_car, align 4, !dbg !12836
  %33 = load i32, i32* %car_max, align 4, !dbg !12837
  %mul38 = mul i32 -2, %33, !dbg !12838
  %cmp39 = icmp slt i32 %32, %mul38, !dbg !12839
  br i1 %cmp39, label %if.then40, label %if.else66, !dbg !12840

if.then40:                                        ; preds = %lor.lhs.false37, %lor.lhs.false, %if.end
  store i32 1, i32* %no_signal, align 4, !dbg !12841
  br label %do.body, !dbg !12843

do.body:                                          ; preds = %if.then40
  %34 = load i32, i32* @verbose, align 4, !dbg !12844
  %cmp41 = icmp ugt i32 %34, 0, !dbg !12844
  br i1 %cmp41, label %land.lhs.true, label %if.else, !dbg !12844

land.lhs.true:                                    ; preds = %do.body
  %35 = load i32, i32* @verbose, align 4, !dbg !12844
  %cmp42 = icmp ugt i32 %35, 3, !dbg !12844
  br i1 %cmp42, label %if.then43, label %if.else, !dbg !12849

if.then43:                                        ; preds = %land.lhs.true
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.121, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12844
  br label %if.end65, !dbg !12844

if.else:                                          ; preds = %land.lhs.true, %do.body
  %36 = load i32, i32* @verbose, align 4, !dbg !12850
  %cmp45 = icmp ugt i32 %36, 1, !dbg !12850
  br i1 %cmp45, label %land.lhs.true46, label %if.else50, !dbg !12850

land.lhs.true46:                                  ; preds = %if.else
  %37 = load i32, i32* @verbose, align 4, !dbg !12850
  %cmp47 = icmp ugt i32 %37, 3, !dbg !12850
  br i1 %cmp47, label %if.then48, label %if.else50, !dbg !12844

if.then48:                                        ; preds = %land.lhs.true46
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.122, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12850
  br label %if.end64, !dbg !12850

if.else50:                                        ; preds = %land.lhs.true46, %if.else
  %38 = load i32, i32* @verbose, align 4, !dbg !12852
  %cmp51 = icmp ugt i32 %38, 2, !dbg !12852
  br i1 %cmp51, label %land.lhs.true52, label %if.else56, !dbg !12852

land.lhs.true52:                                  ; preds = %if.else50
  %39 = load i32, i32* @verbose, align 4, !dbg !12852
  %cmp53 = icmp ugt i32 %39, 3, !dbg !12852
  br i1 %cmp53, label %if.then54, label %if.else56, !dbg !12850

if.then54:                                        ; preds = %land.lhs.true52
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12852
  br label %if.end63, !dbg !12852

if.else56:                                        ; preds = %land.lhs.true52, %if.else50
  %40 = load i32, i32* @verbose, align 4, !dbg !12854
  %cmp57 = icmp ugt i32 %40, 3, !dbg !12854
  br i1 %cmp57, label %land.lhs.true58, label %if.end62, !dbg !12854

land.lhs.true58:                                  ; preds = %if.else56
  %41 = load i32, i32* @verbose, align 4, !dbg !12854
  %cmp59 = icmp ugt i32 %41, 3, !dbg !12854
  br i1 %cmp59, label %if.then60, label %if.end62, !dbg !12852

if.then60:                                        ; preds = %land.lhs.true58
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12854
  br label %if.end62, !dbg !12854

if.end62:                                         ; preds = %if.then60, %land.lhs.true58, %if.else56
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then54
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.then48
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then43
  br label %do.end, !dbg !12856

do.end:                                           ; preds = %if.end65
  br label %if.end96, !dbg !12857

if.else66:                                        ; preds = %lor.lhs.false37
  store i32 0, i32* %no_signal, align 4, !dbg !12858
  br label %do.body67, !dbg !12860

do.body67:                                        ; preds = %if.else66
  %42 = load i32, i32* @verbose, align 4, !dbg !12861
  %cmp68 = icmp ugt i32 %42, 0, !dbg !12861
  br i1 %cmp68, label %land.lhs.true69, label %if.else73, !dbg !12861

land.lhs.true69:                                  ; preds = %do.body67
  %43 = load i32, i32* @verbose, align 4, !dbg !12861
  %cmp70 = icmp ugt i32 %43, 3, !dbg !12861
  br i1 %cmp70, label %if.then71, label %if.else73, !dbg !12866

if.then71:                                        ; preds = %land.lhs.true69
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.125, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12861
  br label %if.end94, !dbg !12861

if.else73:                                        ; preds = %land.lhs.true69, %do.body67
  %44 = load i32, i32* @verbose, align 4, !dbg !12867
  %cmp74 = icmp ugt i32 %44, 1, !dbg !12867
  br i1 %cmp74, label %land.lhs.true75, label %if.else79, !dbg !12867

land.lhs.true75:                                  ; preds = %if.else73
  %45 = load i32, i32* @verbose, align 4, !dbg !12867
  %cmp76 = icmp ugt i32 %45, 3, !dbg !12867
  br i1 %cmp76, label %if.then77, label %if.else79, !dbg !12861

if.then77:                                        ; preds = %land.lhs.true75
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.126, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12867
  br label %if.end93, !dbg !12867

if.else79:                                        ; preds = %land.lhs.true75, %if.else73
  %46 = load i32, i32* @verbose, align 4, !dbg !12869
  %cmp80 = icmp ugt i32 %46, 2, !dbg !12869
  br i1 %cmp80, label %land.lhs.true81, label %if.else85, !dbg !12869

land.lhs.true81:                                  ; preds = %if.else79
  %47 = load i32, i32* @verbose, align 4, !dbg !12869
  %cmp82 = icmp ugt i32 %47, 3, !dbg !12869
  br i1 %cmp82, label %if.then83, label %if.else85, !dbg !12867

if.then83:                                        ; preds = %land.lhs.true81
  %call84 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.127, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12869
  br label %if.end92, !dbg !12869

if.else85:                                        ; preds = %land.lhs.true81, %if.else79
  %48 = load i32, i32* @verbose, align 4, !dbg !12871
  %cmp86 = icmp ugt i32 %48, 3, !dbg !12871
  br i1 %cmp86, label %land.lhs.true87, label %if.end91, !dbg !12871

land.lhs.true87:                                  ; preds = %if.else85
  %49 = load i32, i32* @verbose, align 4, !dbg !12871
  %cmp88 = icmp ugt i32 %49, 3, !dbg !12871
  br i1 %cmp88, label %if.then89, label %if.end91, !dbg !12869

if.then89:                                        ; preds = %land.lhs.true87
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.128, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_chk_signal, i64 0, i64 0)) #13, !dbg !12871
  br label %if.end91, !dbg !12871

if.end91:                                         ; preds = %if.then89, %land.lhs.true87, %if.else85
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.then83
  br label %if.end93

if.end93:                                         ; preds = %if.end92, %if.then77
  br label %if.end94

if.end94:                                         ; preds = %if.end93, %if.then71
  br label %do.end95, !dbg !12873

do.end95:                                         ; preds = %if.end94
  br label %if.end96

if.end96:                                         ; preds = %do.end95, %do.end
  %50 = load i32, i32* %no_signal, align 4, !dbg !12874
  ret i32 %50, !dbg !12875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_vitclk_ctl(%struct.stv090x_state* %state, i32 %enable) #0 !dbg !12876 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %enable.addr = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !12877, metadata !DIExpression()), !dbg !12878
  store i32 %enable, i32* %enable.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %enable.addr, metadata !12879, metadata !DIExpression()), !dbg !12880
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !12881, metadata !DIExpression()), !dbg !12882
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12883
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !12884
  %1 = load i32, i32* %demod, align 4, !dbg !12884
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb5
  ], !dbg !12885

sw.bb:                                            ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12886
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 3, !dbg !12888
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !12888
  %demod_lock = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 2, !dbg !12889
  call void @mutex_lock(%struct.mutex* %demod_lock) #9, !dbg !12890
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12891
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %4, i32 61891) #9, !dbg !12892
  store i32 %call, i32* %reg, align 4, !dbg !12893
  %5 = load i32, i32* %reg, align 4, !dbg !12894
  %and = and i32 %5, -3, !dbg !12894
  %6 = load i32, i32* %enable.addr, align 4, !dbg !12894
  %shl = shl i32 %6, 1, !dbg !12894
  %or = or i32 %and, %shl, !dbg !12894
  store i32 %or, i32* %reg, align 4, !dbg !12894
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12895
  %8 = load i32, i32* %reg, align 4, !dbg !12897
  %conv = trunc i32 %8 to i8, !dbg !12897
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 61891, i8 zeroext %conv) #9, !dbg !12898
  %cmp = icmp slt i32 %call1, 0, !dbg !12899
  br i1 %cmp, label %if.then, label %if.end, !dbg !12900

if.then:                                          ; preds = %sw.bb
  br label %err, !dbg !12901

if.end:                                           ; preds = %sw.bb
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12902
  %internal3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 3, !dbg !12903
  %10 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal3, align 8, !dbg !12903
  %demod_lock4 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %10, i32 0, i32 2, !dbg !12904
  call void @mutex_unlock(%struct.mutex* %demod_lock4) #9, !dbg !12905
  br label %sw.epilog, !dbg !12906

sw.bb5:                                           ; preds = %entry
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12907
  %internal6 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 3, !dbg !12908
  %12 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal6, align 8, !dbg !12908
  %demod_lock7 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %12, i32 0, i32 2, !dbg !12909
  call void @mutex_lock(%struct.mutex* %demod_lock7) #9, !dbg !12910
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12911
  %call8 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 61891) #9, !dbg !12912
  store i32 %call8, i32* %reg, align 4, !dbg !12913
  %14 = load i32, i32* %reg, align 4, !dbg !12914
  %and9 = and i32 %14, -5, !dbg !12914
  %15 = load i32, i32* %enable.addr, align 4, !dbg !12914
  %shl10 = shl i32 %15, 2, !dbg !12914
  %or11 = or i32 %and9, %shl10, !dbg !12914
  store i32 %or11, i32* %reg, align 4, !dbg !12914
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12915
  %17 = load i32, i32* %reg, align 4, !dbg !12917
  %conv12 = trunc i32 %17 to i8, !dbg !12917
  %call13 = call i32 @stv090x_write_reg(%struct.stv090x_state* %16, i32 61891, i8 zeroext %conv12) #9, !dbg !12918
  %cmp14 = icmp slt i32 %call13, 0, !dbg !12919
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !12920

if.then16:                                        ; preds = %sw.bb5
  br label %err, !dbg !12921

if.end17:                                         ; preds = %sw.bb5
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12922
  %internal18 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 3, !dbg !12923
  %19 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal18, align 8, !dbg !12923
  %demod_lock19 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %19, i32 0, i32 2, !dbg !12924
  call void @mutex_unlock(%struct.mutex* %demod_lock19) #9, !dbg !12925
  br label %sw.epilog, !dbg !12926

sw.default:                                       ; preds = %entry
  br label %do.body, !dbg !12927

do.body:                                          ; preds = %sw.default
  %20 = load i32, i32* @verbose, align 4, !dbg !12928
  %cmp20 = icmp ugt i32 %20, 0, !dbg !12928
  br i1 %cmp20, label %land.lhs.true, label %if.else, !dbg !12928

land.lhs.true:                                    ; preds = %do.body
  %21 = load i32, i32* @verbose, align 4, !dbg !12928
  %cmp22 = icmp ugt i32 %21, 0, !dbg !12928
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !12933

if.then24:                                        ; preds = %land.lhs.true
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12928
  br label %if.end52, !dbg !12928

if.else:                                          ; preds = %land.lhs.true, %do.body
  %22 = load i32, i32* @verbose, align 4, !dbg !12934
  %cmp26 = icmp ugt i32 %22, 1, !dbg !12934
  br i1 %cmp26, label %land.lhs.true28, label %if.else33, !dbg !12934

land.lhs.true28:                                  ; preds = %if.else
  %23 = load i32, i32* @verbose, align 4, !dbg !12934
  %cmp29 = icmp ugt i32 %23, 0, !dbg !12934
  br i1 %cmp29, label %if.then31, label %if.else33, !dbg !12928

if.then31:                                        ; preds = %land.lhs.true28
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12934
  br label %if.end51, !dbg !12934

if.else33:                                        ; preds = %land.lhs.true28, %if.else
  %24 = load i32, i32* @verbose, align 4, !dbg !12936
  %cmp34 = icmp ugt i32 %24, 2, !dbg !12936
  br i1 %cmp34, label %land.lhs.true36, label %if.else41, !dbg !12936

land.lhs.true36:                                  ; preds = %if.else33
  %25 = load i32, i32* @verbose, align 4, !dbg !12936
  %cmp37 = icmp ugt i32 %25, 0, !dbg !12936
  br i1 %cmp37, label %if.then39, label %if.else41, !dbg !12934

if.then39:                                        ; preds = %land.lhs.true36
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12936
  br label %if.end50, !dbg !12936

if.else41:                                        ; preds = %land.lhs.true36, %if.else33
  %26 = load i32, i32* @verbose, align 4, !dbg !12938
  %cmp42 = icmp ugt i32 %26, 3, !dbg !12938
  br i1 %cmp42, label %land.lhs.true44, label %if.end49, !dbg !12938

land.lhs.true44:                                  ; preds = %if.else41
  %27 = load i32, i32* @verbose, align 4, !dbg !12938
  %cmp45 = icmp ugt i32 %27, 0, !dbg !12938
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !12936

if.then47:                                        ; preds = %land.lhs.true44
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12938
  br label %if.end49, !dbg !12938

if.end49:                                         ; preds = %if.then47, %land.lhs.true44, %if.else41
  br label %if.end50

if.end50:                                         ; preds = %if.end49, %if.then39
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then31
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then24
  br label %do.end, !dbg !12940

do.end:                                           ; preds = %if.end52
  br label %sw.epilog, !dbg !12941

sw.epilog:                                        ; preds = %do.end, %if.end17, %if.end
  store i32 0, i32* %retval, align 4, !dbg !12942
  br label %return, !dbg !12942

err:                                              ; preds = %if.then16, %if.then
  call void @llvm.dbg.label(metadata !12943), !dbg !12944
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12945
  %internal53 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 3, !dbg !12946
  %29 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal53, align 8, !dbg !12946
  %demod_lock54 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %29, i32 0, i32 2, !dbg !12947
  call void @mutex_unlock(%struct.mutex* %demod_lock54) #9, !dbg !12948
  br label %do.body55, !dbg !12949

do.body55:                                        ; preds = %err
  %30 = load i32, i32* @verbose, align 4, !dbg !12950
  %cmp56 = icmp ugt i32 %30, 0, !dbg !12950
  br i1 %cmp56, label %land.lhs.true58, label %if.else63, !dbg !12950

land.lhs.true58:                                  ; preds = %do.body55
  %31 = load i32, i32* @verbose, align 4, !dbg !12950
  %cmp59 = icmp ugt i32 %31, 0, !dbg !12950
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !12955

if.then61:                                        ; preds = %land.lhs.true58
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12950
  br label %if.end90, !dbg !12950

if.else63:                                        ; preds = %land.lhs.true58, %do.body55
  %32 = load i32, i32* @verbose, align 4, !dbg !12956
  %cmp64 = icmp ugt i32 %32, 1, !dbg !12956
  br i1 %cmp64, label %land.lhs.true66, label %if.else71, !dbg !12956

land.lhs.true66:                                  ; preds = %if.else63
  %33 = load i32, i32* @verbose, align 4, !dbg !12956
  %cmp67 = icmp ugt i32 %33, 0, !dbg !12956
  br i1 %cmp67, label %if.then69, label %if.else71, !dbg !12950

if.then69:                                        ; preds = %land.lhs.true66
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12956
  br label %if.end89, !dbg !12956

if.else71:                                        ; preds = %land.lhs.true66, %if.else63
  %34 = load i32, i32* @verbose, align 4, !dbg !12958
  %cmp72 = icmp ugt i32 %34, 2, !dbg !12958
  br i1 %cmp72, label %land.lhs.true74, label %if.else79, !dbg !12958

land.lhs.true74:                                  ; preds = %if.else71
  %35 = load i32, i32* @verbose, align 4, !dbg !12958
  %cmp75 = icmp ugt i32 %35, 0, !dbg !12958
  br i1 %cmp75, label %if.then77, label %if.else79, !dbg !12956

if.then77:                                        ; preds = %land.lhs.true74
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12958
  br label %if.end88, !dbg !12958

if.else79:                                        ; preds = %land.lhs.true74, %if.else71
  %36 = load i32, i32* @verbose, align 4, !dbg !12960
  %cmp80 = icmp ugt i32 %36, 3, !dbg !12960
  br i1 %cmp80, label %land.lhs.true82, label %if.end87, !dbg !12960

land.lhs.true82:                                  ; preds = %if.else79
  %37 = load i32, i32* @verbose, align 4, !dbg !12960
  %cmp83 = icmp ugt i32 %37, 0, !dbg !12960
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !12958

if.then85:                                        ; preds = %land.lhs.true82
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.stv090x_vitclk_ctl, i64 0, i64 0)) #13, !dbg !12960
  br label %if.end87, !dbg !12960

if.end87:                                         ; preds = %if.then85, %land.lhs.true82, %if.else79
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then77
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.then69
  br label %if.end90

if.end90:                                         ; preds = %if.end89, %if.then61
  br label %do.end91, !dbg !12962

do.end91:                                         ; preds = %if.end90
  store i32 -1, i32* %retval, align 4, !dbg !12963
  br label %return, !dbg !12963

return:                                           ; preds = %do.end91, %sw.epilog
  %38 = load i32, i32* %retval, align 4, !dbg !12964
  ret i32 %38, !dbg !12964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_dvbs_track_crl(%struct.stv090x_state* %state) #0 !dbg !12965 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !12966, metadata !DIExpression()), !dbg !12967
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12968
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 3, !dbg !12970
  %1 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !12970
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %1, i32 0, i32 5, !dbg !12971
  %2 = load i32, i32* %dev_ver, align 4, !dbg !12971
  %cmp = icmp uge i32 %2, 48, !dbg !12972
  br i1 %cmp, label %if.then, label %if.else74, !dbg !12973

if.then:                                          ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12974
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 19, !dbg !12977
  %4 = load i32, i32* %srate, align 4, !dbg !12977
  %cmp1 = icmp uge i32 %4, 15000000, !dbg !12978
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !12979

if.then2:                                         ; preds = %if.then
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12980
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 1, !dbg !12980
  %6 = load i32, i32* %demod, align 4, !dbg !12980
  %cmp3 = icmp eq i32 %6, 2, !dbg !12980
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !12980

cond.true:                                        ; preds = %if.then2
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12980
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 62009, i8 zeroext 43) #9, !dbg !12980
  br label %cond.end, !dbg !12980

cond.false:                                       ; preds = %if.then2
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12980
  %call4 = call i32 @stv090x_write_reg(%struct.stv090x_state* %8, i32 62521, i8 zeroext 43) #9, !dbg !12980
  br label %cond.end, !dbg !12980

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call4, %cond.false ], !dbg !12980
  %cmp5 = icmp slt i32 %cond, 0, !dbg !12983
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !12984

if.then6:                                         ; preds = %cond.end
  br label %err, !dbg !12985

if.end:                                           ; preds = %cond.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12986
  %demod7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 1, !dbg !12986
  %10 = load i32, i32* %demod7, align 4, !dbg !12986
  %cmp8 = icmp eq i32 %10, 2, !dbg !12986
  br i1 %cmp8, label %cond.true9, label %cond.false11, !dbg !12986

cond.true9:                                       ; preds = %if.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12986
  %call10 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62010, i8 zeroext 26) #9, !dbg !12986
  br label %cond.end13, !dbg !12986

cond.false11:                                     ; preds = %if.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12986
  %call12 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 62522, i8 zeroext 26) #9, !dbg !12986
  br label %cond.end13, !dbg !12986

cond.end13:                                       ; preds = %cond.false11, %cond.true9
  %cond14 = phi i32 [ %call10, %cond.true9 ], [ %call12, %cond.false11 ], !dbg !12986
  %cmp15 = icmp slt i32 %cond14, 0, !dbg !12988
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !12989

if.then16:                                        ; preds = %cond.end13
  br label %err, !dbg !12990

if.end17:                                         ; preds = %cond.end13
  br label %if.end73, !dbg !12991

if.else:                                          ; preds = %if.then
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12992
  %srate18 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 19, !dbg !12994
  %14 = load i32, i32* %srate18, align 4, !dbg !12994
  %cmp19 = icmp uge i32 %14, 7000000, !dbg !12995
  br i1 %cmp19, label %land.lhs.true, label %if.else45, !dbg !12996

land.lhs.true:                                    ; preds = %if.else
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !12997
  %srate20 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 19, !dbg !12998
  %16 = load i32, i32* %srate20, align 4, !dbg !12998
  %cmp21 = icmp ugt i32 15000000, %16, !dbg !12999
  br i1 %cmp21, label %if.then22, label %if.else45, !dbg !13000

if.then22:                                        ; preds = %land.lhs.true
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13001
  %demod23 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !13001
  %18 = load i32, i32* %demod23, align 4, !dbg !13001
  %cmp24 = icmp eq i32 %18, 2, !dbg !13001
  br i1 %cmp24, label %cond.true25, label %cond.false27, !dbg !13001

cond.true25:                                      ; preds = %if.then22
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13001
  %call26 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62009, i8 zeroext 12) #9, !dbg !13001
  br label %cond.end29, !dbg !13001

cond.false27:                                     ; preds = %if.then22
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13001
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62521, i8 zeroext 12) #9, !dbg !13001
  br label %cond.end29, !dbg !13001

cond.end29:                                       ; preds = %cond.false27, %cond.true25
  %cond30 = phi i32 [ %call26, %cond.true25 ], [ %call28, %cond.false27 ], !dbg !13001
  %cmp31 = icmp slt i32 %cond30, 0, !dbg !13004
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !13005

if.then32:                                        ; preds = %cond.end29
  br label %err, !dbg !13006

if.end33:                                         ; preds = %cond.end29
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13007
  %demod34 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 1, !dbg !13007
  %22 = load i32, i32* %demod34, align 4, !dbg !13007
  %cmp35 = icmp eq i32 %22, 2, !dbg !13007
  br i1 %cmp35, label %cond.true36, label %cond.false38, !dbg !13007

cond.true36:                                      ; preds = %if.end33
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13007
  %call37 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62010, i8 zeroext 27) #9, !dbg !13007
  br label %cond.end40, !dbg !13007

cond.false38:                                     ; preds = %if.end33
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13007
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 62522, i8 zeroext 27) #9, !dbg !13007
  br label %cond.end40, !dbg !13007

cond.end40:                                       ; preds = %cond.false38, %cond.true36
  %cond41 = phi i32 [ %call37, %cond.true36 ], [ %call39, %cond.false38 ], !dbg !13007
  %cmp42 = icmp slt i32 %cond41, 0, !dbg !13009
  br i1 %cmp42, label %if.then43, label %if.end44, !dbg !13010

if.then43:                                        ; preds = %cond.end40
  br label %err, !dbg !13011

if.end44:                                         ; preds = %cond.end40
  br label %if.end72, !dbg !13012

if.else45:                                        ; preds = %land.lhs.true, %if.else
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13013
  %srate46 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 19, !dbg !13015
  %26 = load i32, i32* %srate46, align 4, !dbg !13015
  %cmp47 = icmp ult i32 %26, 7000000, !dbg !13016
  br i1 %cmp47, label %if.then48, label %if.end71, !dbg !13017

if.then48:                                        ; preds = %if.else45
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13018
  %demod49 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %27, i32 0, i32 1, !dbg !13018
  %28 = load i32, i32* %demod49, align 4, !dbg !13018
  %cmp50 = icmp eq i32 %28, 2, !dbg !13018
  br i1 %cmp50, label %cond.true51, label %cond.false53, !dbg !13018

cond.true51:                                      ; preds = %if.then48
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13018
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62009, i8 zeroext 44) #9, !dbg !13018
  br label %cond.end55, !dbg !13018

cond.false53:                                     ; preds = %if.then48
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13018
  %call54 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62521, i8 zeroext 44) #9, !dbg !13018
  br label %cond.end55, !dbg !13018

cond.end55:                                       ; preds = %cond.false53, %cond.true51
  %cond56 = phi i32 [ %call52, %cond.true51 ], [ %call54, %cond.false53 ], !dbg !13018
  %cmp57 = icmp slt i32 %cond56, 0, !dbg !13021
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !13022

if.then58:                                        ; preds = %cond.end55
  br label %err, !dbg !13023

if.end59:                                         ; preds = %cond.end55
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13024
  %demod60 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 1, !dbg !13024
  %32 = load i32, i32* %demod60, align 4, !dbg !13024
  %cmp61 = icmp eq i32 %32, 2, !dbg !13024
  br i1 %cmp61, label %cond.true62, label %cond.false64, !dbg !13024

cond.true62:                                      ; preds = %if.end59
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13024
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %33, i32 62010, i8 zeroext 28) #9, !dbg !13024
  br label %cond.end66, !dbg !13024

cond.false64:                                     ; preds = %if.end59
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13024
  %call65 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62522, i8 zeroext 28) #9, !dbg !13024
  br label %cond.end66, !dbg !13024

cond.end66:                                       ; preds = %cond.false64, %cond.true62
  %cond67 = phi i32 [ %call63, %cond.true62 ], [ %call65, %cond.false64 ], !dbg !13024
  %cmp68 = icmp slt i32 %cond67, 0, !dbg !13026
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !13027

if.then69:                                        ; preds = %cond.end66
  br label %err, !dbg !13028

if.end70:                                         ; preds = %cond.end66
  br label %if.end71, !dbg !13029

if.end71:                                         ; preds = %if.end70, %if.else45
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end44
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.end17
  br label %if.end97, !dbg !13030

if.else74:                                        ; preds = %entry
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13031
  %demod75 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 1, !dbg !13031
  %36 = load i32, i32* %demod75, align 4, !dbg !13031
  %cmp76 = icmp eq i32 %36, 2, !dbg !13031
  br i1 %cmp76, label %cond.true77, label %cond.false79, !dbg !13031

cond.true77:                                      ; preds = %if.else74
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13031
  %call78 = call i32 @stv090x_write_reg(%struct.stv090x_state* %37, i32 62009, i8 zeroext 26) #9, !dbg !13031
  br label %cond.end81, !dbg !13031

cond.false79:                                     ; preds = %if.else74
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13031
  %call80 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62521, i8 zeroext 26) #9, !dbg !13031
  br label %cond.end81, !dbg !13031

cond.end81:                                       ; preds = %cond.false79, %cond.true77
  %cond82 = phi i32 [ %call78, %cond.true77 ], [ %call80, %cond.false79 ], !dbg !13031
  %cmp83 = icmp slt i32 %cond82, 0, !dbg !13034
  br i1 %cmp83, label %if.then84, label %if.end85, !dbg !13035

if.then84:                                        ; preds = %cond.end81
  br label %err, !dbg !13036

if.end85:                                         ; preds = %cond.end81
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13037
  %demod86 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %39, i32 0, i32 1, !dbg !13037
  %40 = load i32, i32* %demod86, align 4, !dbg !13037
  %cmp87 = icmp eq i32 %40, 2, !dbg !13037
  br i1 %cmp87, label %cond.true88, label %cond.false90, !dbg !13037

cond.true88:                                      ; preds = %if.end85
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13037
  %call89 = call i32 @stv090x_write_reg(%struct.stv090x_state* %41, i32 62010, i8 zeroext 9) #9, !dbg !13037
  br label %cond.end92, !dbg !13037

cond.false90:                                     ; preds = %if.end85
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13037
  %call91 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62522, i8 zeroext 9) #9, !dbg !13037
  br label %cond.end92, !dbg !13037

cond.end92:                                       ; preds = %cond.false90, %cond.true88
  %cond93 = phi i32 [ %call89, %cond.true88 ], [ %call91, %cond.false90 ], !dbg !13037
  %cmp94 = icmp slt i32 %cond93, 0, !dbg !13039
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !13040

if.then95:                                        ; preds = %cond.end92
  br label %err, !dbg !13041

if.end96:                                         ; preds = %cond.end92
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end73
  store i32 0, i32* %retval, align 4, !dbg !13042
  br label %return, !dbg !13042

err:                                              ; preds = %if.then95, %if.then84, %if.then69, %if.then58, %if.then43, %if.then32, %if.then16, %if.then6
  call void @llvm.dbg.label(metadata !13043), !dbg !13044
  br label %do.body, !dbg !13045

do.body:                                          ; preds = %err
  %43 = load i32, i32* @verbose, align 4, !dbg !13046
  %cmp98 = icmp ugt i32 %43, 0, !dbg !13046
  br i1 %cmp98, label %land.lhs.true99, label %if.else103, !dbg !13046

land.lhs.true99:                                  ; preds = %do.body
  %44 = load i32, i32* @verbose, align 4, !dbg !13046
  %cmp100 = icmp ugt i32 %44, 0, !dbg !13046
  br i1 %cmp100, label %if.then101, label %if.else103, !dbg !13051

if.then101:                                       ; preds = %land.lhs.true99
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_dvbs_track_crl, i64 0, i64 0)) #13, !dbg !13046
  br label %if.end124, !dbg !13046

if.else103:                                       ; preds = %land.lhs.true99, %do.body
  %45 = load i32, i32* @verbose, align 4, !dbg !13052
  %cmp104 = icmp ugt i32 %45, 1, !dbg !13052
  br i1 %cmp104, label %land.lhs.true105, label %if.else109, !dbg !13052

land.lhs.true105:                                 ; preds = %if.else103
  %46 = load i32, i32* @verbose, align 4, !dbg !13052
  %cmp106 = icmp ugt i32 %46, 0, !dbg !13052
  br i1 %cmp106, label %if.then107, label %if.else109, !dbg !13046

if.then107:                                       ; preds = %land.lhs.true105
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_dvbs_track_crl, i64 0, i64 0)) #13, !dbg !13052
  br label %if.end123, !dbg !13052

if.else109:                                       ; preds = %land.lhs.true105, %if.else103
  %47 = load i32, i32* @verbose, align 4, !dbg !13054
  %cmp110 = icmp ugt i32 %47, 2, !dbg !13054
  br i1 %cmp110, label %land.lhs.true111, label %if.else115, !dbg !13054

land.lhs.true111:                                 ; preds = %if.else109
  %48 = load i32, i32* @verbose, align 4, !dbg !13054
  %cmp112 = icmp ugt i32 %48, 0, !dbg !13054
  br i1 %cmp112, label %if.then113, label %if.else115, !dbg !13052

if.then113:                                       ; preds = %land.lhs.true111
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_dvbs_track_crl, i64 0, i64 0)) #13, !dbg !13054
  br label %if.end122, !dbg !13054

if.else115:                                       ; preds = %land.lhs.true111, %if.else109
  %49 = load i32, i32* @verbose, align 4, !dbg !13056
  %cmp116 = icmp ugt i32 %49, 3, !dbg !13056
  br i1 %cmp116, label %land.lhs.true117, label %if.end121, !dbg !13056

land.lhs.true117:                                 ; preds = %if.else115
  %50 = load i32, i32* @verbose, align 4, !dbg !13056
  %cmp118 = icmp ugt i32 %50, 0, !dbg !13056
  br i1 %cmp118, label %if.then119, label %if.end121, !dbg !13054

if.then119:                                       ; preds = %land.lhs.true117
  %call120 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.stv090x_dvbs_track_crl, i64 0, i64 0)) #13, !dbg !13056
  br label %if.end121, !dbg !13056

if.end121:                                        ; preds = %if.then119, %land.lhs.true117, %if.else115
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then113
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then107
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.then101
  br label %do.end, !dbg !13058

do.end:                                           ; preds = %if.end124
  store i32 -1, i32* %retval, align 4, !dbg !13059
  br label %return, !dbg !13059

return:                                           ; preds = %do.end, %if.end97
  %51 = load i32, i32* %retval, align 4, !dbg !13060
  ret i32 %51, !dbg !13060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_vit_thacq(%struct.stv090x_state* %state) #0 !dbg !13061 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !13062, metadata !DIExpression()), !dbg !13063
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13064
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !13064
  %1 = load i32, i32* %demod, align 4, !dbg !13064
  %cmp = icmp eq i32 %1, 2, !dbg !13064
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13064

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13064
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %2, i32 62260, i8 zeroext -106) #9, !dbg !13064
  br label %cond.end, !dbg !13064

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13064
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %3, i32 62772, i8 zeroext -106) #9, !dbg !13064
  br label %cond.end, !dbg !13064

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !13064
  %cmp2 = icmp slt i32 %cond, 0, !dbg !13066
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13067

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !13068

if.end:                                           ; preds = %cond.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13069
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !13069
  %5 = load i32, i32* %demod3, align 4, !dbg !13069
  %cmp4 = icmp eq i32 %5, 2, !dbg !13069
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !13069

cond.true5:                                       ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13069
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %6, i32 62261, i8 zeroext 100) #9, !dbg !13069
  br label %cond.end9, !dbg !13069

cond.false7:                                      ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13069
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 62773, i8 zeroext 100) #9, !dbg !13069
  br label %cond.end9, !dbg !13069

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !13069
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !13071
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13072

if.then12:                                        ; preds = %cond.end9
  br label %err, !dbg !13073

if.end13:                                         ; preds = %cond.end9
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13074
  %demod14 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !13074
  %9 = load i32, i32* %demod14, align 4, !dbg !13074
  %cmp15 = icmp eq i32 %9, 2, !dbg !13074
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !13074

cond.true16:                                      ; preds = %if.end13
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13074
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62262, i8 zeroext 54) #9, !dbg !13074
  br label %cond.end20, !dbg !13074

cond.false18:                                     ; preds = %if.end13
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13074
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62774, i8 zeroext 54) #9, !dbg !13074
  br label %cond.end20, !dbg !13074

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !13074
  %cmp22 = icmp slt i32 %cond21, 0, !dbg !13076
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13077

if.then23:                                        ; preds = %cond.end20
  br label %err, !dbg !13078

if.end24:                                         ; preds = %cond.end20
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13079
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !13079
  %13 = load i32, i32* %demod25, align 4, !dbg !13079
  %cmp26 = icmp eq i32 %13, 2, !dbg !13079
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !13079

cond.true27:                                      ; preds = %if.end24
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13079
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62263, i8 zeroext 35) #9, !dbg !13079
  br label %cond.end31, !dbg !13079

cond.false29:                                     ; preds = %if.end24
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13079
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62775, i8 zeroext 35) #9, !dbg !13079
  br label %cond.end31, !dbg !13079

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !13079
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !13081
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !13082

if.then34:                                        ; preds = %cond.end31
  br label %err, !dbg !13083

if.end35:                                         ; preds = %cond.end31
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13084
  %demod36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !13084
  %17 = load i32, i32* %demod36, align 4, !dbg !13084
  %cmp37 = icmp eq i32 %17, 2, !dbg !13084
  br i1 %cmp37, label %cond.true38, label %cond.false40, !dbg !13084

cond.true38:                                      ; preds = %if.end35
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13084
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62264, i8 zeroext 30) #9, !dbg !13084
  br label %cond.end42, !dbg !13084

cond.false40:                                     ; preds = %if.end35
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13084
  %call41 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62776, i8 zeroext 30) #9, !dbg !13084
  br label %cond.end42, !dbg !13084

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !13084
  %cmp44 = icmp slt i32 %cond43, 0, !dbg !13086
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !13087

if.then45:                                        ; preds = %cond.end42
  br label %err, !dbg !13088

if.end46:                                         ; preds = %cond.end42
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13089
  %demod47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !13089
  %21 = load i32, i32* %demod47, align 4, !dbg !13089
  %cmp48 = icmp eq i32 %21, 2, !dbg !13089
  br i1 %cmp48, label %cond.true49, label %cond.false51, !dbg !13089

cond.true49:                                      ; preds = %if.end46
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13089
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62265, i8 zeroext 25) #9, !dbg !13089
  br label %cond.end53, !dbg !13089

cond.false51:                                     ; preds = %if.end46
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13089
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62777, i8 zeroext 25) #9, !dbg !13089
  br label %cond.end53, !dbg !13089

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !13089
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !13091
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !13092

if.then56:                                        ; preds = %cond.end53
  br label %err, !dbg !13093

if.end57:                                         ; preds = %cond.end53
  store i32 0, i32* %retval, align 4, !dbg !13094
  br label %return, !dbg !13094

err:                                              ; preds = %if.then56, %if.then45, %if.then34, %if.then23, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !13095), !dbg !13096
  br label %do.body, !dbg !13097

do.body:                                          ; preds = %err
  %24 = load i32, i32* @verbose, align 4, !dbg !13098
  %cmp58 = icmp ugt i32 %24, 0, !dbg !13098
  br i1 %cmp58, label %land.lhs.true, label %if.else, !dbg !13098

land.lhs.true:                                    ; preds = %do.body
  %25 = load i32, i32* @verbose, align 4, !dbg !13098
  %cmp59 = icmp ugt i32 %25, 0, !dbg !13098
  br i1 %cmp59, label %if.then60, label %if.else, !dbg !13103

if.then60:                                        ; preds = %land.lhs.true
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_vit_thacq, i64 0, i64 0)) #13, !dbg !13098
  br label %if.end82, !dbg !13098

if.else:                                          ; preds = %land.lhs.true, %do.body
  %26 = load i32, i32* @verbose, align 4, !dbg !13104
  %cmp62 = icmp ugt i32 %26, 1, !dbg !13104
  br i1 %cmp62, label %land.lhs.true63, label %if.else67, !dbg !13104

land.lhs.true63:                                  ; preds = %if.else
  %27 = load i32, i32* @verbose, align 4, !dbg !13104
  %cmp64 = icmp ugt i32 %27, 0, !dbg !13104
  br i1 %cmp64, label %if.then65, label %if.else67, !dbg !13098

if.then65:                                        ; preds = %land.lhs.true63
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_vit_thacq, i64 0, i64 0)) #13, !dbg !13104
  br label %if.end81, !dbg !13104

if.else67:                                        ; preds = %land.lhs.true63, %if.else
  %28 = load i32, i32* @verbose, align 4, !dbg !13106
  %cmp68 = icmp ugt i32 %28, 2, !dbg !13106
  br i1 %cmp68, label %land.lhs.true69, label %if.else73, !dbg !13106

land.lhs.true69:                                  ; preds = %if.else67
  %29 = load i32, i32* @verbose, align 4, !dbg !13106
  %cmp70 = icmp ugt i32 %29, 0, !dbg !13106
  br i1 %cmp70, label %if.then71, label %if.else73, !dbg !13104

if.then71:                                        ; preds = %land.lhs.true69
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_vit_thacq, i64 0, i64 0)) #13, !dbg !13106
  br label %if.end80, !dbg !13106

if.else73:                                        ; preds = %land.lhs.true69, %if.else67
  %30 = load i32, i32* @verbose, align 4, !dbg !13108
  %cmp74 = icmp ugt i32 %30, 3, !dbg !13108
  br i1 %cmp74, label %land.lhs.true75, label %if.end79, !dbg !13108

land.lhs.true75:                                  ; preds = %if.else73
  %31 = load i32, i32* @verbose, align 4, !dbg !13108
  %cmp76 = icmp ugt i32 %31, 0, !dbg !13108
  br i1 %cmp76, label %if.then77, label %if.end79, !dbg !13106

if.then77:                                        ; preds = %land.lhs.true75
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.stv090x_set_vit_thacq, i64 0, i64 0)) #13, !dbg !13108
  br label %if.end79, !dbg !13108

if.end79:                                         ; preds = %if.then77, %land.lhs.true75, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then71
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then65
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then60
  br label %do.end, !dbg !13110

do.end:                                           ; preds = %if.end82
  store i32 -1, i32* %retval, align 4, !dbg !13111
  br label %return, !dbg !13111

return:                                           ; preds = %do.end, %if.end57
  %32 = load i32, i32* %retval, align 4, !dbg !13112
  ret i32 %32, !dbg !13112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_viterbi(%struct.stv090x_state* %state) #0 !dbg !13113 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !13114, metadata !DIExpression()), !dbg !13115
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13116
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 12, !dbg !13117
  %1 = load i32, i32* %search_mode, align 8, !dbg !13117
  switch i32 %1, label %sw.default159 [
    i32 3, label %sw.bb
    i32 1, label %sw.bb14
    i32 0, label %sw.bb97
  ], !dbg !13118

sw.bb:                                            ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13119
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 1, !dbg !13119
  %3 = load i32, i32* %demod, align 4, !dbg !13119
  %cmp = icmp eq i32 %3, 2, !dbg !13119
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13119

cond.true:                                        ; preds = %sw.bb
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13119
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %4, i32 62259, i8 zeroext 16) #9, !dbg !13119
  br label %cond.end, !dbg !13119

cond.false:                                       ; preds = %sw.bb
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13119
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %5, i32 62771, i8 zeroext 16) #9, !dbg !13119
  br label %cond.end, !dbg !13119

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !13119
  %cmp2 = icmp slt i32 %cond, 0, !dbg !13122
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13123

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !13124

if.end:                                           ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13125
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 1, !dbg !13125
  %7 = load i32, i32* %demod3, align 4, !dbg !13125
  %cmp4 = icmp eq i32 %7, 2, !dbg !13125
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !13125

cond.true5:                                       ; preds = %if.end
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13125
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %8, i32 62268, i8 zeroext 63) #9, !dbg !13125
  br label %cond.end9, !dbg !13125

cond.false7:                                      ; preds = %if.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13125
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 62780, i8 zeroext 63) #9, !dbg !13125
  br label %cond.end9, !dbg !13125

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !13125
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !13127
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13128

if.then12:                                        ; preds = %cond.end9
  br label %err, !dbg !13129

if.end13:                                         ; preds = %cond.end9
  br label %sw.epilog160, !dbg !13130

sw.bb14:                                          ; preds = %entry
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13131
  %demod15 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !13131
  %11 = load i32, i32* %demod15, align 4, !dbg !13131
  %cmp16 = icmp eq i32 %11, 2, !dbg !13131
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !13131

cond.true17:                                      ; preds = %sw.bb14
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13131
  %call18 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 62259, i8 zeroext 0) #9, !dbg !13131
  br label %cond.end21, !dbg !13131

cond.false19:                                     ; preds = %sw.bb14
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13131
  %call20 = call i32 @stv090x_write_reg(%struct.stv090x_state* %13, i32 62771, i8 zeroext 0) #9, !dbg !13131
  br label %cond.end21, !dbg !13131

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !13131
  %cmp23 = icmp slt i32 %cond22, 0, !dbg !13133
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !13134

if.then24:                                        ; preds = %cond.end21
  br label %err, !dbg !13135

if.end25:                                         ; preds = %cond.end21
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13136
  %fec = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %14, i32 0, i32 9, !dbg !13137
  %15 = load i32, i32* %fec, align 4, !dbg !13137
  switch i32 %15, label %sw.default [
    i32 0, label %sw.bb26
    i32 1, label %sw.bb38
    i32 2, label %sw.bb50
    i32 4, label %sw.bb62
    i32 6, label %sw.bb74
  ], !dbg !13138

sw.bb26:                                          ; preds = %if.end25
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13139
  %demod27 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !13139
  %17 = load i32, i32* %demod27, align 4, !dbg !13139
  %cmp28 = icmp eq i32 %17, 2, !dbg !13139
  br i1 %cmp28, label %cond.true29, label %cond.false31, !dbg !13139

cond.true29:                                      ; preds = %sw.bb26
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13139
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62268, i8 zeroext 1) #9, !dbg !13139
  br label %cond.end33, !dbg !13139

cond.false31:                                     ; preds = %sw.bb26
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13139
  %call32 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62780, i8 zeroext 1) #9, !dbg !13139
  br label %cond.end33, !dbg !13139

cond.end33:                                       ; preds = %cond.false31, %cond.true29
  %cond34 = phi i32 [ %call30, %cond.true29 ], [ %call32, %cond.false31 ], !dbg !13139
  %cmp35 = icmp slt i32 %cond34, 0, !dbg !13142
  br i1 %cmp35, label %if.then36, label %if.end37, !dbg !13143

if.then36:                                        ; preds = %cond.end33
  br label %err, !dbg !13144

if.end37:                                         ; preds = %cond.end33
  br label %sw.epilog, !dbg !13145

sw.bb38:                                          ; preds = %if.end25
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13146
  %demod39 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !13146
  %21 = load i32, i32* %demod39, align 4, !dbg !13146
  %cmp40 = icmp eq i32 %21, 2, !dbg !13146
  br i1 %cmp40, label %cond.true41, label %cond.false43, !dbg !13146

cond.true41:                                      ; preds = %sw.bb38
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13146
  %call42 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62268, i8 zeroext 2) #9, !dbg !13146
  br label %cond.end45, !dbg !13146

cond.false43:                                     ; preds = %sw.bb38
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13146
  %call44 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62780, i8 zeroext 2) #9, !dbg !13146
  br label %cond.end45, !dbg !13146

cond.end45:                                       ; preds = %cond.false43, %cond.true41
  %cond46 = phi i32 [ %call42, %cond.true41 ], [ %call44, %cond.false43 ], !dbg !13146
  %cmp47 = icmp slt i32 %cond46, 0, !dbg !13148
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !13149

if.then48:                                        ; preds = %cond.end45
  br label %err, !dbg !13150

if.end49:                                         ; preds = %cond.end45
  br label %sw.epilog, !dbg !13151

sw.bb50:                                          ; preds = %if.end25
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13152
  %demod51 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !13152
  %25 = load i32, i32* %demod51, align 4, !dbg !13152
  %cmp52 = icmp eq i32 %25, 2, !dbg !13152
  br i1 %cmp52, label %cond.true53, label %cond.false55, !dbg !13152

cond.true53:                                      ; preds = %sw.bb50
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13152
  %call54 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62268, i8 zeroext 4) #9, !dbg !13152
  br label %cond.end57, !dbg !13152

cond.false55:                                     ; preds = %sw.bb50
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13152
  %call56 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62780, i8 zeroext 4) #9, !dbg !13152
  br label %cond.end57, !dbg !13152

cond.end57:                                       ; preds = %cond.false55, %cond.true53
  %cond58 = phi i32 [ %call54, %cond.true53 ], [ %call56, %cond.false55 ], !dbg !13152
  %cmp59 = icmp slt i32 %cond58, 0, !dbg !13154
  br i1 %cmp59, label %if.then60, label %if.end61, !dbg !13155

if.then60:                                        ; preds = %cond.end57
  br label %err, !dbg !13156

if.end61:                                         ; preds = %cond.end57
  br label %sw.epilog, !dbg !13157

sw.bb62:                                          ; preds = %if.end25
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13158
  %demod63 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !13158
  %29 = load i32, i32* %demod63, align 4, !dbg !13158
  %cmp64 = icmp eq i32 %29, 2, !dbg !13158
  br i1 %cmp64, label %cond.true65, label %cond.false67, !dbg !13158

cond.true65:                                      ; preds = %sw.bb62
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13158
  %call66 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62268, i8 zeroext 8) #9, !dbg !13158
  br label %cond.end69, !dbg !13158

cond.false67:                                     ; preds = %sw.bb62
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13158
  %call68 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62780, i8 zeroext 8) #9, !dbg !13158
  br label %cond.end69, !dbg !13158

cond.end69:                                       ; preds = %cond.false67, %cond.true65
  %cond70 = phi i32 [ %call66, %cond.true65 ], [ %call68, %cond.false67 ], !dbg !13158
  %cmp71 = icmp slt i32 %cond70, 0, !dbg !13160
  br i1 %cmp71, label %if.then72, label %if.end73, !dbg !13161

if.then72:                                        ; preds = %cond.end69
  br label %err, !dbg !13162

if.end73:                                         ; preds = %cond.end69
  br label %sw.epilog, !dbg !13163

sw.bb74:                                          ; preds = %if.end25
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13164
  %demod75 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !13164
  %33 = load i32, i32* %demod75, align 4, !dbg !13164
  %cmp76 = icmp eq i32 %33, 2, !dbg !13164
  br i1 %cmp76, label %cond.true77, label %cond.false79, !dbg !13164

cond.true77:                                      ; preds = %sw.bb74
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13164
  %call78 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62268, i8 zeroext 32) #9, !dbg !13164
  br label %cond.end81, !dbg !13164

cond.false79:                                     ; preds = %sw.bb74
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13164
  %call80 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62780, i8 zeroext 32) #9, !dbg !13164
  br label %cond.end81, !dbg !13164

cond.end81:                                       ; preds = %cond.false79, %cond.true77
  %cond82 = phi i32 [ %call78, %cond.true77 ], [ %call80, %cond.false79 ], !dbg !13164
  %cmp83 = icmp slt i32 %cond82, 0, !dbg !13166
  br i1 %cmp83, label %if.then84, label %if.end85, !dbg !13167

if.then84:                                        ; preds = %cond.end81
  br label %err, !dbg !13168

if.end85:                                         ; preds = %cond.end81
  br label %sw.epilog, !dbg !13169

sw.default:                                       ; preds = %if.end25
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13170
  %demod86 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !13170
  %37 = load i32, i32* %demod86, align 4, !dbg !13170
  %cmp87 = icmp eq i32 %37, 2, !dbg !13170
  br i1 %cmp87, label %cond.true88, label %cond.false90, !dbg !13170

cond.true88:                                      ; preds = %sw.default
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13170
  %call89 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62268, i8 zeroext 47) #9, !dbg !13170
  br label %cond.end92, !dbg !13170

cond.false90:                                     ; preds = %sw.default
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13170
  %call91 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62780, i8 zeroext 47) #9, !dbg !13170
  br label %cond.end92, !dbg !13170

cond.end92:                                       ; preds = %cond.false90, %cond.true88
  %cond93 = phi i32 [ %call89, %cond.true88 ], [ %call91, %cond.false90 ], !dbg !13170
  %cmp94 = icmp slt i32 %cond93, 0, !dbg !13172
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !13173

if.then95:                                        ; preds = %cond.end92
  br label %err, !dbg !13174

if.end96:                                         ; preds = %cond.end92
  br label %sw.epilog, !dbg !13175

sw.epilog:                                        ; preds = %if.end96, %if.end85, %if.end73, %if.end61, %if.end49, %if.end37
  br label %sw.epilog160, !dbg !13176

sw.bb97:                                          ; preds = %entry
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13177
  %demod98 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !13177
  %41 = load i32, i32* %demod98, align 4, !dbg !13177
  %cmp99 = icmp eq i32 %41, 2, !dbg !13177
  br i1 %cmp99, label %cond.true100, label %cond.false102, !dbg !13177

cond.true100:                                     ; preds = %sw.bb97
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13177
  %call101 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62259, i8 zeroext -128) #9, !dbg !13177
  br label %cond.end104, !dbg !13177

cond.false102:                                    ; preds = %sw.bb97
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13177
  %call103 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62771, i8 zeroext -128) #9, !dbg !13177
  br label %cond.end104, !dbg !13177

cond.end104:                                      ; preds = %cond.false102, %cond.true100
  %cond105 = phi i32 [ %call101, %cond.true100 ], [ %call103, %cond.false102 ], !dbg !13177
  %cmp106 = icmp slt i32 %cond105, 0, !dbg !13179
  br i1 %cmp106, label %if.then107, label %if.end108, !dbg !13180

if.then107:                                       ; preds = %cond.end104
  br label %err, !dbg !13181

if.end108:                                        ; preds = %cond.end104
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13182
  %fec109 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 9, !dbg !13183
  %45 = load i32, i32* %fec109, align 4, !dbg !13183
  switch i32 %45, label %sw.default146 [
    i32 0, label %sw.bb110
    i32 1, label %sw.bb122
    i32 5, label %sw.bb134
  ], !dbg !13184

sw.bb110:                                         ; preds = %if.end108
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13185
  %demod111 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %46, i32 0, i32 1, !dbg !13185
  %47 = load i32, i32* %demod111, align 4, !dbg !13185
  %cmp112 = icmp eq i32 %47, 2, !dbg !13185
  br i1 %cmp112, label %cond.true113, label %cond.false115, !dbg !13185

cond.true113:                                     ; preds = %sw.bb110
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13185
  %call114 = call i32 @stv090x_write_reg(%struct.stv090x_state* %48, i32 62268, i8 zeroext 1) #9, !dbg !13185
  br label %cond.end117, !dbg !13185

cond.false115:                                    ; preds = %sw.bb110
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13185
  %call116 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 62780, i8 zeroext 1) #9, !dbg !13185
  br label %cond.end117, !dbg !13185

cond.end117:                                      ; preds = %cond.false115, %cond.true113
  %cond118 = phi i32 [ %call114, %cond.true113 ], [ %call116, %cond.false115 ], !dbg !13185
  %cmp119 = icmp slt i32 %cond118, 0, !dbg !13188
  br i1 %cmp119, label %if.then120, label %if.end121, !dbg !13189

if.then120:                                       ; preds = %cond.end117
  br label %err, !dbg !13190

if.end121:                                        ; preds = %cond.end117
  br label %sw.epilog158, !dbg !13191

sw.bb122:                                         ; preds = %if.end108
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13192
  %demod123 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %50, i32 0, i32 1, !dbg !13192
  %51 = load i32, i32* %demod123, align 4, !dbg !13192
  %cmp124 = icmp eq i32 %51, 2, !dbg !13192
  br i1 %cmp124, label %cond.true125, label %cond.false127, !dbg !13192

cond.true125:                                     ; preds = %sw.bb122
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13192
  %call126 = call i32 @stv090x_write_reg(%struct.stv090x_state* %52, i32 62268, i8 zeroext 2) #9, !dbg !13192
  br label %cond.end129, !dbg !13192

cond.false127:                                    ; preds = %sw.bb122
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13192
  %call128 = call i32 @stv090x_write_reg(%struct.stv090x_state* %53, i32 62780, i8 zeroext 2) #9, !dbg !13192
  br label %cond.end129, !dbg !13192

cond.end129:                                      ; preds = %cond.false127, %cond.true125
  %cond130 = phi i32 [ %call126, %cond.true125 ], [ %call128, %cond.false127 ], !dbg !13192
  %cmp131 = icmp slt i32 %cond130, 0, !dbg !13194
  br i1 %cmp131, label %if.then132, label %if.end133, !dbg !13195

if.then132:                                       ; preds = %cond.end129
  br label %err, !dbg !13196

if.end133:                                        ; preds = %cond.end129
  br label %sw.epilog158, !dbg !13197

sw.bb134:                                         ; preds = %if.end108
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13198
  %demod135 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %54, i32 0, i32 1, !dbg !13198
  %55 = load i32, i32* %demod135, align 4, !dbg !13198
  %cmp136 = icmp eq i32 %55, 2, !dbg !13198
  br i1 %cmp136, label %cond.true137, label %cond.false139, !dbg !13198

cond.true137:                                     ; preds = %sw.bb134
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13198
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62268, i8 zeroext 16) #9, !dbg !13198
  br label %cond.end141, !dbg !13198

cond.false139:                                    ; preds = %sw.bb134
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13198
  %call140 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62780, i8 zeroext 16) #9, !dbg !13198
  br label %cond.end141, !dbg !13198

cond.end141:                                      ; preds = %cond.false139, %cond.true137
  %cond142 = phi i32 [ %call138, %cond.true137 ], [ %call140, %cond.false139 ], !dbg !13198
  %cmp143 = icmp slt i32 %cond142, 0, !dbg !13200
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !13201

if.then144:                                       ; preds = %cond.end141
  br label %err, !dbg !13202

if.end145:                                        ; preds = %cond.end141
  br label %sw.epilog158, !dbg !13203

sw.default146:                                    ; preds = %if.end108
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13204
  %demod147 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 1, !dbg !13204
  %59 = load i32, i32* %demod147, align 4, !dbg !13204
  %cmp148 = icmp eq i32 %59, 2, !dbg !13204
  br i1 %cmp148, label %cond.true149, label %cond.false151, !dbg !13204

cond.true149:                                     ; preds = %sw.default146
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13204
  %call150 = call i32 @stv090x_write_reg(%struct.stv090x_state* %60, i32 62268, i8 zeroext 19) #9, !dbg !13204
  br label %cond.end153, !dbg !13204

cond.false151:                                    ; preds = %sw.default146
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13204
  %call152 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 62780, i8 zeroext 19) #9, !dbg !13204
  br label %cond.end153, !dbg !13204

cond.end153:                                      ; preds = %cond.false151, %cond.true149
  %cond154 = phi i32 [ %call150, %cond.true149 ], [ %call152, %cond.false151 ], !dbg !13204
  %cmp155 = icmp slt i32 %cond154, 0, !dbg !13206
  br i1 %cmp155, label %if.then156, label %if.end157, !dbg !13207

if.then156:                                       ; preds = %cond.end153
  br label %err, !dbg !13208

if.end157:                                        ; preds = %cond.end153
  br label %sw.epilog158, !dbg !13209

sw.epilog158:                                     ; preds = %if.end157, %if.end145, %if.end133, %if.end121
  br label %sw.epilog160, !dbg !13210

sw.default159:                                    ; preds = %entry
  br label %sw.epilog160, !dbg !13211

sw.epilog160:                                     ; preds = %sw.default159, %sw.epilog158, %sw.epilog, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !13212
  br label %return, !dbg !13212

err:                                              ; preds = %if.then156, %if.then144, %if.then132, %if.then120, %if.then107, %if.then95, %if.then84, %if.then72, %if.then60, %if.then48, %if.then36, %if.then24, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !13213), !dbg !13214
  br label %do.body, !dbg !13215

do.body:                                          ; preds = %err
  %62 = load i32, i32* @verbose, align 4, !dbg !13216
  %cmp161 = icmp ugt i32 %62, 0, !dbg !13216
  br i1 %cmp161, label %land.lhs.true, label %if.else, !dbg !13216

land.lhs.true:                                    ; preds = %do.body
  %63 = load i32, i32* @verbose, align 4, !dbg !13216
  %cmp162 = icmp ugt i32 %63, 0, !dbg !13216
  br i1 %cmp162, label %if.then163, label %if.else, !dbg !13221

if.then163:                                       ; preds = %land.lhs.true
  %call164 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_set_viterbi, i64 0, i64 0)) #13, !dbg !13216
  br label %if.end185, !dbg !13216

if.else:                                          ; preds = %land.lhs.true, %do.body
  %64 = load i32, i32* @verbose, align 4, !dbg !13222
  %cmp165 = icmp ugt i32 %64, 1, !dbg !13222
  br i1 %cmp165, label %land.lhs.true166, label %if.else170, !dbg !13222

land.lhs.true166:                                 ; preds = %if.else
  %65 = load i32, i32* @verbose, align 4, !dbg !13222
  %cmp167 = icmp ugt i32 %65, 0, !dbg !13222
  br i1 %cmp167, label %if.then168, label %if.else170, !dbg !13216

if.then168:                                       ; preds = %land.lhs.true166
  %call169 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_set_viterbi, i64 0, i64 0)) #13, !dbg !13222
  br label %if.end184, !dbg !13222

if.else170:                                       ; preds = %land.lhs.true166, %if.else
  %66 = load i32, i32* @verbose, align 4, !dbg !13224
  %cmp171 = icmp ugt i32 %66, 2, !dbg !13224
  br i1 %cmp171, label %land.lhs.true172, label %if.else176, !dbg !13224

land.lhs.true172:                                 ; preds = %if.else170
  %67 = load i32, i32* @verbose, align 4, !dbg !13224
  %cmp173 = icmp ugt i32 %67, 0, !dbg !13224
  br i1 %cmp173, label %if.then174, label %if.else176, !dbg !13222

if.then174:                                       ; preds = %land.lhs.true172
  %call175 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_set_viterbi, i64 0, i64 0)) #13, !dbg !13224
  br label %if.end183, !dbg !13224

if.else176:                                       ; preds = %land.lhs.true172, %if.else170
  %68 = load i32, i32* @verbose, align 4, !dbg !13226
  %cmp177 = icmp ugt i32 %68, 3, !dbg !13226
  br i1 %cmp177, label %land.lhs.true178, label %if.end182, !dbg !13226

land.lhs.true178:                                 ; preds = %if.else176
  %69 = load i32, i32* @verbose, align 4, !dbg !13226
  %cmp179 = icmp ugt i32 %69, 0, !dbg !13226
  br i1 %cmp179, label %if.then180, label %if.end182, !dbg !13224

if.then180:                                       ; preds = %land.lhs.true178
  %call181 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.stv090x_set_viterbi, i64 0, i64 0)) #13, !dbg !13226
  br label %if.end182, !dbg !13226

if.end182:                                        ; preds = %if.then180, %land.lhs.true178, %if.else176
  br label %if.end183

if.end183:                                        ; preds = %if.end182, %if.then174
  br label %if.end184

if.end184:                                        ; preds = %if.end183, %if.then168
  br label %if.end185

if.end185:                                        ; preds = %if.end184, %if.then163
  br label %do.end, !dbg !13228

do.end:                                           ; preds = %if.end185
  store i32 -1, i32* %retval, align 4, !dbg !13229
  br label %return, !dbg !13229

return:                                           ; preds = %do.end, %sw.epilog160
  %70 = load i32, i32* %retval, align 4, !dbg !13230
  ret i32 %70, !dbg !13230
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_activate_modcod(%struct.stv090x_state* %state) #0 !dbg !13231 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !13232, metadata !DIExpression()), !dbg !13233
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13234
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !13234
  %1 = load i32, i32* %demod, align 4, !dbg !13234
  %cmp = icmp eq i32 %1, 2, !dbg !13234
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13234

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13234
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %2, i32 62128, i8 zeroext -1) #9, !dbg !13234
  br label %cond.end, !dbg !13234

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13234
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %3, i32 62640, i8 zeroext -1) #9, !dbg !13234
  br label %cond.end, !dbg !13234

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !13234
  %cmp2 = icmp slt i32 %cond, 0, !dbg !13236
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13237

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !13238

if.end:                                           ; preds = %cond.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13239
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !13239
  %5 = load i32, i32* %demod3, align 4, !dbg !13239
  %cmp4 = icmp eq i32 %5, 2, !dbg !13239
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !13239

cond.true5:                                       ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13239
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %6, i32 62129, i8 zeroext -4) #9, !dbg !13239
  br label %cond.end9, !dbg !13239

cond.false7:                                      ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13239
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 62641, i8 zeroext -4) #9, !dbg !13239
  br label %cond.end9, !dbg !13239

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !13239
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !13241
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13242

if.then12:                                        ; preds = %cond.end9
  br label %err, !dbg !13243

if.end13:                                         ; preds = %cond.end9
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13244
  %demod14 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !13244
  %9 = load i32, i32* %demod14, align 4, !dbg !13244
  %cmp15 = icmp eq i32 %9, 2, !dbg !13244
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !13244

cond.true16:                                      ; preds = %if.end13
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13244
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62130, i8 zeroext -52) #9, !dbg !13244
  br label %cond.end20, !dbg !13244

cond.false18:                                     ; preds = %if.end13
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13244
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62642, i8 zeroext -52) #9, !dbg !13244
  br label %cond.end20, !dbg !13244

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !13244
  %cmp22 = icmp slt i32 %cond21, 0, !dbg !13246
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13247

if.then23:                                        ; preds = %cond.end20
  br label %err, !dbg !13248

if.end24:                                         ; preds = %cond.end20
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13249
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !13249
  %13 = load i32, i32* %demod25, align 4, !dbg !13249
  %cmp26 = icmp eq i32 %13, 2, !dbg !13249
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !13249

cond.true27:                                      ; preds = %if.end24
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13249
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62131, i8 zeroext -52) #9, !dbg !13249
  br label %cond.end31, !dbg !13249

cond.false29:                                     ; preds = %if.end24
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13249
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62643, i8 zeroext -52) #9, !dbg !13249
  br label %cond.end31, !dbg !13249

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !13249
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !13251
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !13252

if.then34:                                        ; preds = %cond.end31
  br label %err, !dbg !13253

if.end35:                                         ; preds = %cond.end31
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13254
  %demod36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !13254
  %17 = load i32, i32* %demod36, align 4, !dbg !13254
  %cmp37 = icmp eq i32 %17, 2, !dbg !13254
  br i1 %cmp37, label %cond.true38, label %cond.false40, !dbg !13254

cond.true38:                                      ; preds = %if.end35
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13254
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62132, i8 zeroext -52) #9, !dbg !13254
  br label %cond.end42, !dbg !13254

cond.false40:                                     ; preds = %if.end35
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13254
  %call41 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62644, i8 zeroext -52) #9, !dbg !13254
  br label %cond.end42, !dbg !13254

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !13254
  %cmp44 = icmp slt i32 %cond43, 0, !dbg !13256
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !13257

if.then45:                                        ; preds = %cond.end42
  br label %err, !dbg !13258

if.end46:                                         ; preds = %cond.end42
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13259
  %demod47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !13259
  %21 = load i32, i32* %demod47, align 4, !dbg !13259
  %cmp48 = icmp eq i32 %21, 2, !dbg !13259
  br i1 %cmp48, label %cond.true49, label %cond.false51, !dbg !13259

cond.true49:                                      ; preds = %if.end46
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13259
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62133, i8 zeroext -52) #9, !dbg !13259
  br label %cond.end53, !dbg !13259

cond.false51:                                     ; preds = %if.end46
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13259
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62645, i8 zeroext -52) #9, !dbg !13259
  br label %cond.end53, !dbg !13259

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !13259
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !13261
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !13262

if.then56:                                        ; preds = %cond.end53
  br label %err, !dbg !13263

if.end57:                                         ; preds = %cond.end53
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13264
  %demod58 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !13264
  %25 = load i32, i32* %demod58, align 4, !dbg !13264
  %cmp59 = icmp eq i32 %25, 2, !dbg !13264
  br i1 %cmp59, label %cond.true60, label %cond.false62, !dbg !13264

cond.true60:                                      ; preds = %if.end57
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13264
  %call61 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62134, i8 zeroext -52) #9, !dbg !13264
  br label %cond.end64, !dbg !13264

cond.false62:                                     ; preds = %if.end57
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13264
  %call63 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62646, i8 zeroext -52) #9, !dbg !13264
  br label %cond.end64, !dbg !13264

cond.end64:                                       ; preds = %cond.false62, %cond.true60
  %cond65 = phi i32 [ %call61, %cond.true60 ], [ %call63, %cond.false62 ], !dbg !13264
  %cmp66 = icmp slt i32 %cond65, 0, !dbg !13266
  br i1 %cmp66, label %if.then67, label %if.end68, !dbg !13267

if.then67:                                        ; preds = %cond.end64
  br label %err, !dbg !13268

if.end68:                                         ; preds = %cond.end64
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13269
  %demod69 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !13269
  %29 = load i32, i32* %demod69, align 4, !dbg !13269
  %cmp70 = icmp eq i32 %29, 2, !dbg !13269
  br i1 %cmp70, label %cond.true71, label %cond.false73, !dbg !13269

cond.true71:                                      ; preds = %if.end68
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13269
  %call72 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62135, i8 zeroext -52) #9, !dbg !13269
  br label %cond.end75, !dbg !13269

cond.false73:                                     ; preds = %if.end68
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13269
  %call74 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62647, i8 zeroext -52) #9, !dbg !13269
  br label %cond.end75, !dbg !13269

cond.end75:                                       ; preds = %cond.false73, %cond.true71
  %cond76 = phi i32 [ %call72, %cond.true71 ], [ %call74, %cond.false73 ], !dbg !13269
  %cmp77 = icmp slt i32 %cond76, 0, !dbg !13271
  br i1 %cmp77, label %if.then78, label %if.end79, !dbg !13272

if.then78:                                        ; preds = %cond.end75
  br label %err, !dbg !13273

if.end79:                                         ; preds = %cond.end75
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13274
  %demod80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !13274
  %33 = load i32, i32* %demod80, align 4, !dbg !13274
  %cmp81 = icmp eq i32 %33, 2, !dbg !13274
  br i1 %cmp81, label %cond.true82, label %cond.false84, !dbg !13274

cond.true82:                                      ; preds = %if.end79
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13274
  %call83 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 62136, i8 zeroext -52) #9, !dbg !13274
  br label %cond.end86, !dbg !13274

cond.false84:                                     ; preds = %if.end79
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13274
  %call85 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62648, i8 zeroext -52) #9, !dbg !13274
  br label %cond.end86, !dbg !13274

cond.end86:                                       ; preds = %cond.false84, %cond.true82
  %cond87 = phi i32 [ %call83, %cond.true82 ], [ %call85, %cond.false84 ], !dbg !13274
  %cmp88 = icmp slt i32 %cond87, 0, !dbg !13276
  br i1 %cmp88, label %if.then89, label %if.end90, !dbg !13277

if.then89:                                        ; preds = %cond.end86
  br label %err, !dbg !13278

if.end90:                                         ; preds = %cond.end86
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13279
  %demod91 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %36, i32 0, i32 1, !dbg !13279
  %37 = load i32, i32* %demod91, align 4, !dbg !13279
  %cmp92 = icmp eq i32 %37, 2, !dbg !13279
  br i1 %cmp92, label %cond.true93, label %cond.false95, !dbg !13279

cond.true93:                                      ; preds = %if.end90
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13279
  %call94 = call i32 @stv090x_write_reg(%struct.stv090x_state* %38, i32 62137, i8 zeroext -52) #9, !dbg !13279
  br label %cond.end97, !dbg !13279

cond.false95:                                     ; preds = %if.end90
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13279
  %call96 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 62649, i8 zeroext -52) #9, !dbg !13279
  br label %cond.end97, !dbg !13279

cond.end97:                                       ; preds = %cond.false95, %cond.true93
  %cond98 = phi i32 [ %call94, %cond.true93 ], [ %call96, %cond.false95 ], !dbg !13279
  %cmp99 = icmp slt i32 %cond98, 0, !dbg !13281
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !13282

if.then100:                                       ; preds = %cond.end97
  br label %err, !dbg !13283

if.end101:                                        ; preds = %cond.end97
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13284
  %demod102 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 1, !dbg !13284
  %41 = load i32, i32* %demod102, align 4, !dbg !13284
  %cmp103 = icmp eq i32 %41, 2, !dbg !13284
  br i1 %cmp103, label %cond.true104, label %cond.false106, !dbg !13284

cond.true104:                                     ; preds = %if.end101
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13284
  %call105 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62138, i8 zeroext -52) #9, !dbg !13284
  br label %cond.end108, !dbg !13284

cond.false106:                                    ; preds = %if.end101
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13284
  %call107 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 62650, i8 zeroext -52) #9, !dbg !13284
  br label %cond.end108, !dbg !13284

cond.end108:                                      ; preds = %cond.false106, %cond.true104
  %cond109 = phi i32 [ %call105, %cond.true104 ], [ %call107, %cond.false106 ], !dbg !13284
  %cmp110 = icmp slt i32 %cond109, 0, !dbg !13286
  br i1 %cmp110, label %if.then111, label %if.end112, !dbg !13287

if.then111:                                       ; preds = %cond.end108
  br label %err, !dbg !13288

if.end112:                                        ; preds = %cond.end108
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13289
  %demod113 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %44, i32 0, i32 1, !dbg !13289
  %45 = load i32, i32* %demod113, align 4, !dbg !13289
  %cmp114 = icmp eq i32 %45, 2, !dbg !13289
  br i1 %cmp114, label %cond.true115, label %cond.false117, !dbg !13289

cond.true115:                                     ; preds = %if.end112
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13289
  %call116 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62139, i8 zeroext -52) #9, !dbg !13289
  br label %cond.end119, !dbg !13289

cond.false117:                                    ; preds = %if.end112
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13289
  %call118 = call i32 @stv090x_write_reg(%struct.stv090x_state* %47, i32 62651, i8 zeroext -52) #9, !dbg !13289
  br label %cond.end119, !dbg !13289

cond.end119:                                      ; preds = %cond.false117, %cond.true115
  %cond120 = phi i32 [ %call116, %cond.true115 ], [ %call118, %cond.false117 ], !dbg !13289
  %cmp121 = icmp slt i32 %cond120, 0, !dbg !13291
  br i1 %cmp121, label %if.then122, label %if.end123, !dbg !13292

if.then122:                                       ; preds = %cond.end119
  br label %err, !dbg !13293

if.end123:                                        ; preds = %cond.end119
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13294
  %demod124 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 1, !dbg !13294
  %49 = load i32, i32* %demod124, align 4, !dbg !13294
  %cmp125 = icmp eq i32 %49, 2, !dbg !13294
  br i1 %cmp125, label %cond.true126, label %cond.false128, !dbg !13294

cond.true126:                                     ; preds = %if.end123
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13294
  %call127 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62140, i8 zeroext -52) #9, !dbg !13294
  br label %cond.end130, !dbg !13294

cond.false128:                                    ; preds = %if.end123
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13294
  %call129 = call i32 @stv090x_write_reg(%struct.stv090x_state* %51, i32 62652, i8 zeroext -52) #9, !dbg !13294
  br label %cond.end130, !dbg !13294

cond.end130:                                      ; preds = %cond.false128, %cond.true126
  %cond131 = phi i32 [ %call127, %cond.true126 ], [ %call129, %cond.false128 ], !dbg !13294
  %cmp132 = icmp slt i32 %cond131, 0, !dbg !13296
  br i1 %cmp132, label %if.then133, label %if.end134, !dbg !13297

if.then133:                                       ; preds = %cond.end130
  br label %err, !dbg !13298

if.end134:                                        ; preds = %cond.end130
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13299
  %demod135 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 1, !dbg !13299
  %53 = load i32, i32* %demod135, align 4, !dbg !13299
  %cmp136 = icmp eq i32 %53, 2, !dbg !13299
  br i1 %cmp136, label %cond.true137, label %cond.false139, !dbg !13299

cond.true137:                                     ; preds = %if.end134
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13299
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 62141, i8 zeroext -52) #9, !dbg !13299
  br label %cond.end141, !dbg !13299

cond.false139:                                    ; preds = %if.end134
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13299
  %call140 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 62653, i8 zeroext -52) #9, !dbg !13299
  br label %cond.end141, !dbg !13299

cond.end141:                                      ; preds = %cond.false139, %cond.true137
  %cond142 = phi i32 [ %call138, %cond.true137 ], [ %call140, %cond.false139 ], !dbg !13299
  %cmp143 = icmp slt i32 %cond142, 0, !dbg !13301
  br i1 %cmp143, label %if.then144, label %if.end145, !dbg !13302

if.then144:                                       ; preds = %cond.end141
  br label %err, !dbg !13303

if.end145:                                        ; preds = %cond.end141
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13304
  %demod146 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %56, i32 0, i32 1, !dbg !13304
  %57 = load i32, i32* %demod146, align 4, !dbg !13304
  %cmp147 = icmp eq i32 %57, 2, !dbg !13304
  br i1 %cmp147, label %cond.true148, label %cond.false150, !dbg !13304

cond.true148:                                     ; preds = %if.end145
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13304
  %call149 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62142, i8 zeroext -52) #9, !dbg !13304
  br label %cond.end152, !dbg !13304

cond.false150:                                    ; preds = %if.end145
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13304
  %call151 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 62654, i8 zeroext -52) #9, !dbg !13304
  br label %cond.end152, !dbg !13304

cond.end152:                                      ; preds = %cond.false150, %cond.true148
  %cond153 = phi i32 [ %call149, %cond.true148 ], [ %call151, %cond.false150 ], !dbg !13304
  %cmp154 = icmp slt i32 %cond153, 0, !dbg !13306
  br i1 %cmp154, label %if.then155, label %if.end156, !dbg !13307

if.then155:                                       ; preds = %cond.end152
  br label %err, !dbg !13308

if.end156:                                        ; preds = %cond.end152
  %60 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13309
  %demod157 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %60, i32 0, i32 1, !dbg !13309
  %61 = load i32, i32* %demod157, align 4, !dbg !13309
  %cmp158 = icmp eq i32 %61, 2, !dbg !13309
  br i1 %cmp158, label %cond.true159, label %cond.false161, !dbg !13309

cond.true159:                                     ; preds = %if.end156
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13309
  %call160 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 62143, i8 zeroext -49) #9, !dbg !13309
  br label %cond.end163, !dbg !13309

cond.false161:                                    ; preds = %if.end156
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13309
  %call162 = call i32 @stv090x_write_reg(%struct.stv090x_state* %63, i32 62655, i8 zeroext -49) #9, !dbg !13309
  br label %cond.end163, !dbg !13309

cond.end163:                                      ; preds = %cond.false161, %cond.true159
  %cond164 = phi i32 [ %call160, %cond.true159 ], [ %call162, %cond.false161 ], !dbg !13309
  %cmp165 = icmp slt i32 %cond164, 0, !dbg !13311
  br i1 %cmp165, label %if.then166, label %if.end167, !dbg !13312

if.then166:                                       ; preds = %cond.end163
  br label %err, !dbg !13313

if.end167:                                        ; preds = %cond.end163
  store i32 0, i32* %retval, align 4, !dbg !13314
  br label %return, !dbg !13314

err:                                              ; preds = %if.then166, %if.then155, %if.then144, %if.then133, %if.then122, %if.then111, %if.then100, %if.then89, %if.then78, %if.then67, %if.then56, %if.then45, %if.then34, %if.then23, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !13315), !dbg !13316
  br label %do.body, !dbg !13317

do.body:                                          ; preds = %err
  %64 = load i32, i32* @verbose, align 4, !dbg !13318
  %cmp168 = icmp ugt i32 %64, 0, !dbg !13318
  br i1 %cmp168, label %land.lhs.true, label %if.else, !dbg !13318

land.lhs.true:                                    ; preds = %do.body
  %65 = load i32, i32* @verbose, align 4, !dbg !13318
  %cmp169 = icmp ugt i32 %65, 0, !dbg !13318
  br i1 %cmp169, label %if.then170, label %if.else, !dbg !13323

if.then170:                                       ; preds = %land.lhs.true
  %call171 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_activate_modcod, i64 0, i64 0)) #13, !dbg !13318
  br label %if.end192, !dbg !13318

if.else:                                          ; preds = %land.lhs.true, %do.body
  %66 = load i32, i32* @verbose, align 4, !dbg !13324
  %cmp172 = icmp ugt i32 %66, 1, !dbg !13324
  br i1 %cmp172, label %land.lhs.true173, label %if.else177, !dbg !13324

land.lhs.true173:                                 ; preds = %if.else
  %67 = load i32, i32* @verbose, align 4, !dbg !13324
  %cmp174 = icmp ugt i32 %67, 0, !dbg !13324
  br i1 %cmp174, label %if.then175, label %if.else177, !dbg !13318

if.then175:                                       ; preds = %land.lhs.true173
  %call176 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_activate_modcod, i64 0, i64 0)) #13, !dbg !13324
  br label %if.end191, !dbg !13324

if.else177:                                       ; preds = %land.lhs.true173, %if.else
  %68 = load i32, i32* @verbose, align 4, !dbg !13326
  %cmp178 = icmp ugt i32 %68, 2, !dbg !13326
  br i1 %cmp178, label %land.lhs.true179, label %if.else183, !dbg !13326

land.lhs.true179:                                 ; preds = %if.else177
  %69 = load i32, i32* @verbose, align 4, !dbg !13326
  %cmp180 = icmp ugt i32 %69, 0, !dbg !13326
  br i1 %cmp180, label %if.then181, label %if.else183, !dbg !13324

if.then181:                                       ; preds = %land.lhs.true179
  %call182 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_activate_modcod, i64 0, i64 0)) #13, !dbg !13326
  br label %if.end190, !dbg !13326

if.else183:                                       ; preds = %land.lhs.true179, %if.else177
  %70 = load i32, i32* @verbose, align 4, !dbg !13328
  %cmp184 = icmp ugt i32 %70, 3, !dbg !13328
  br i1 %cmp184, label %land.lhs.true185, label %if.end189, !dbg !13328

land.lhs.true185:                                 ; preds = %if.else183
  %71 = load i32, i32* @verbose, align 4, !dbg !13328
  %cmp186 = icmp ugt i32 %71, 0, !dbg !13328
  br i1 %cmp186, label %if.then187, label %if.end189, !dbg !13326

if.then187:                                       ; preds = %land.lhs.true185
  %call188 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_activate_modcod, i64 0, i64 0)) #13, !dbg !13328
  br label %if.end189, !dbg !13328

if.end189:                                        ; preds = %if.then187, %land.lhs.true185, %if.else183
  br label %if.end190

if.end190:                                        ; preds = %if.end189, %if.then181
  br label %if.end191

if.end191:                                        ; preds = %if.end190, %if.then175
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then170
  br label %do.end, !dbg !13330

do.end:                                           ; preds = %if.end192
  store i32 -1, i32* %retval, align 4, !dbg !13331
  br label %return, !dbg !13331

return:                                           ; preds = %do.end, %if.end167
  %72 = load i32, i32* %retval, align 4, !dbg !13332
  ret i32 %72, !dbg !13332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_vit_thtracq(%struct.stv090x_state* %state) #0 !dbg !13333 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !13334, metadata !DIExpression()), !dbg !13335
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13336
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !13336
  %1 = load i32, i32* %demod, align 4, !dbg !13336
  %cmp = icmp eq i32 %1, 2, !dbg !13336
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13336

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13336
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %2, i32 62260, i8 zeroext -48) #9, !dbg !13336
  br label %cond.end, !dbg !13336

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13336
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %3, i32 62772, i8 zeroext -48) #9, !dbg !13336
  br label %cond.end, !dbg !13336

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !13336
  %cmp2 = icmp slt i32 %cond, 0, !dbg !13338
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13339

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !13340

if.end:                                           ; preds = %cond.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13341
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !13341
  %5 = load i32, i32* %demod3, align 4, !dbg !13341
  %cmp4 = icmp eq i32 %5, 2, !dbg !13341
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !13341

cond.true5:                                       ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13341
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %6, i32 62261, i8 zeroext 125) #9, !dbg !13341
  br label %cond.end9, !dbg !13341

cond.false7:                                      ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13341
  %call8 = call i32 @stv090x_write_reg(%struct.stv090x_state* %7, i32 62773, i8 zeroext 125) #9, !dbg !13341
  br label %cond.end9, !dbg !13341

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !13341
  %cmp11 = icmp slt i32 %cond10, 0, !dbg !13343
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !13344

if.then12:                                        ; preds = %cond.end9
  br label %err, !dbg !13345

if.end13:                                         ; preds = %cond.end9
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13346
  %demod14 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !13346
  %9 = load i32, i32* %demod14, align 4, !dbg !13346
  %cmp15 = icmp eq i32 %9, 2, !dbg !13346
  br i1 %cmp15, label %cond.true16, label %cond.false18, !dbg !13346

cond.true16:                                      ; preds = %if.end13
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13346
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %10, i32 62262, i8 zeroext 83) #9, !dbg !13346
  br label %cond.end20, !dbg !13346

cond.false18:                                     ; preds = %if.end13
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13346
  %call19 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 62774, i8 zeroext 83) #9, !dbg !13346
  br label %cond.end20, !dbg !13346

cond.end20:                                       ; preds = %cond.false18, %cond.true16
  %cond21 = phi i32 [ %call17, %cond.true16 ], [ %call19, %cond.false18 ], !dbg !13346
  %cmp22 = icmp slt i32 %cond21, 0, !dbg !13348
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !13349

if.then23:                                        ; preds = %cond.end20
  br label %err, !dbg !13350

if.end24:                                         ; preds = %cond.end20
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13351
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !13351
  %13 = load i32, i32* %demod25, align 4, !dbg !13351
  %cmp26 = icmp eq i32 %13, 2, !dbg !13351
  br i1 %cmp26, label %cond.true27, label %cond.false29, !dbg !13351

cond.true27:                                      ; preds = %if.end24
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13351
  %call28 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62263, i8 zeroext 47) #9, !dbg !13351
  br label %cond.end31, !dbg !13351

cond.false29:                                     ; preds = %if.end24
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13351
  %call30 = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 62775, i8 zeroext 47) #9, !dbg !13351
  br label %cond.end31, !dbg !13351

cond.end31:                                       ; preds = %cond.false29, %cond.true27
  %cond32 = phi i32 [ %call28, %cond.true27 ], [ %call30, %cond.false29 ], !dbg !13351
  %cmp33 = icmp slt i32 %cond32, 0, !dbg !13353
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !13354

if.then34:                                        ; preds = %cond.end31
  br label %err, !dbg !13355

if.end35:                                         ; preds = %cond.end31
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13356
  %demod36 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !13356
  %17 = load i32, i32* %demod36, align 4, !dbg !13356
  %cmp37 = icmp eq i32 %17, 2, !dbg !13356
  br i1 %cmp37, label %cond.true38, label %cond.false40, !dbg !13356

cond.true38:                                      ; preds = %if.end35
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13356
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62264, i8 zeroext 36) #9, !dbg !13356
  br label %cond.end42, !dbg !13356

cond.false40:                                     ; preds = %if.end35
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13356
  %call41 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62776, i8 zeroext 36) #9, !dbg !13356
  br label %cond.end42, !dbg !13356

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi i32 [ %call39, %cond.true38 ], [ %call41, %cond.false40 ], !dbg !13356
  %cmp44 = icmp slt i32 %cond43, 0, !dbg !13358
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !13359

if.then45:                                        ; preds = %cond.end42
  br label %err, !dbg !13360

if.end46:                                         ; preds = %cond.end42
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13361
  %demod47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !13361
  %21 = load i32, i32* %demod47, align 4, !dbg !13361
  %cmp48 = icmp eq i32 %21, 2, !dbg !13361
  br i1 %cmp48, label %cond.true49, label %cond.false51, !dbg !13361

cond.true49:                                      ; preds = %if.end46
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13361
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62265, i8 zeroext 31) #9, !dbg !13361
  br label %cond.end53, !dbg !13361

cond.false51:                                     ; preds = %if.end46
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13361
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62777, i8 zeroext 31) #9, !dbg !13361
  br label %cond.end53, !dbg !13361

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !13361
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !13363
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !13364

if.then56:                                        ; preds = %cond.end53
  br label %err, !dbg !13365

if.end57:                                         ; preds = %cond.end53
  store i32 0, i32* %retval, align 4, !dbg !13366
  br label %return, !dbg !13366

err:                                              ; preds = %if.then56, %if.then45, %if.then34, %if.then23, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !13367), !dbg !13368
  br label %do.body, !dbg !13369

do.body:                                          ; preds = %err
  %24 = load i32, i32* @verbose, align 4, !dbg !13370
  %cmp58 = icmp ugt i32 %24, 0, !dbg !13370
  br i1 %cmp58, label %land.lhs.true, label %if.else, !dbg !13370

land.lhs.true:                                    ; preds = %do.body
  %25 = load i32, i32* @verbose, align 4, !dbg !13370
  %cmp59 = icmp ugt i32 %25, 0, !dbg !13370
  br i1 %cmp59, label %if.then60, label %if.else, !dbg !13375

if.then60:                                        ; preds = %land.lhs.true
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_set_vit_thtracq, i64 0, i64 0)) #13, !dbg !13370
  br label %if.end82, !dbg !13370

if.else:                                          ; preds = %land.lhs.true, %do.body
  %26 = load i32, i32* @verbose, align 4, !dbg !13376
  %cmp62 = icmp ugt i32 %26, 1, !dbg !13376
  br i1 %cmp62, label %land.lhs.true63, label %if.else67, !dbg !13376

land.lhs.true63:                                  ; preds = %if.else
  %27 = load i32, i32* @verbose, align 4, !dbg !13376
  %cmp64 = icmp ugt i32 %27, 0, !dbg !13376
  br i1 %cmp64, label %if.then65, label %if.else67, !dbg !13370

if.then65:                                        ; preds = %land.lhs.true63
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_set_vit_thtracq, i64 0, i64 0)) #13, !dbg !13376
  br label %if.end81, !dbg !13376

if.else67:                                        ; preds = %land.lhs.true63, %if.else
  %28 = load i32, i32* @verbose, align 4, !dbg !13378
  %cmp68 = icmp ugt i32 %28, 2, !dbg !13378
  br i1 %cmp68, label %land.lhs.true69, label %if.else73, !dbg !13378

land.lhs.true69:                                  ; preds = %if.else67
  %29 = load i32, i32* @verbose, align 4, !dbg !13378
  %cmp70 = icmp ugt i32 %29, 0, !dbg !13378
  br i1 %cmp70, label %if.then71, label %if.else73, !dbg !13376

if.then71:                                        ; preds = %land.lhs.true69
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_set_vit_thtracq, i64 0, i64 0)) #13, !dbg !13378
  br label %if.end80, !dbg !13378

if.else73:                                        ; preds = %land.lhs.true69, %if.else67
  %30 = load i32, i32* @verbose, align 4, !dbg !13380
  %cmp74 = icmp ugt i32 %30, 3, !dbg !13380
  br i1 %cmp74, label %land.lhs.true75, label %if.end79, !dbg !13380

land.lhs.true75:                                  ; preds = %if.else73
  %31 = load i32, i32* @verbose, align 4, !dbg !13380
  %cmp76 = icmp ugt i32 %31, 0, !dbg !13380
  br i1 %cmp76, label %if.then77, label %if.end79, !dbg !13378

if.then77:                                        ; preds = %land.lhs.true75
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_set_vit_thtracq, i64 0, i64 0)) #13, !dbg !13380
  br label %if.end79, !dbg !13380

if.end79:                                         ; preds = %if.then77, %land.lhs.true75, %if.else73
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then71
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then65
  br label %if.end82

if.end82:                                         ; preds = %if.end81, %if.then60
  br label %do.end, !dbg !13382

do.end:                                           ; preds = %if.end82
  store i32 -1, i32* %retval, align 4, !dbg !13383
  br label %return, !dbg !13383

return:                                           ; preds = %do.end, %if.end57
  %32 = load i32, i32* %retval, align 4, !dbg !13384
  ret i32 %32, !dbg !13384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_agc2_min_level(%struct.stv090x_state* %state) #0 !dbg !13385 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %agc2_min = alloca i32, align 4
  %agc2 = alloca i32, align 4
  %freq_init = alloca i32, align 4
  %freq_step = alloca i32, align 4
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %steps = alloca i32, align 4
  %dir = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !13386, metadata !DIExpression()), !dbg !13387
  call void @llvm.dbg.declare(metadata i32* %agc2_min, metadata !13388, metadata !DIExpression()), !dbg !13389
  store i32 65535, i32* %agc2_min, align 4, !dbg !13389
  call void @llvm.dbg.declare(metadata i32* %agc2, metadata !13390, metadata !DIExpression()), !dbg !13391
  store i32 0, i32* %agc2, align 4, !dbg !13391
  call void @llvm.dbg.declare(metadata i32* %freq_init, metadata !13392, metadata !DIExpression()), !dbg !13393
  call void @llvm.dbg.declare(metadata i32* %freq_step, metadata !13394, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !13396, metadata !DIExpression()), !dbg !13397
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13398, metadata !DIExpression()), !dbg !13399
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13400, metadata !DIExpression()), !dbg !13401
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !13402, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !13404, metadata !DIExpression()), !dbg !13405
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13406
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !13406
  %1 = load i32, i32* %demod, align 4, !dbg !13406
  %cmp = icmp eq i32 %1, 2, !dbg !13406
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13406

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13406
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %2, i32 61997, i8 zeroext 56) #9, !dbg !13406
  br label %cond.end, !dbg !13406

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13406
  %call1 = call i32 @stv090x_write_reg(%struct.stv090x_state* %3, i32 62509, i8 zeroext 56) #9, !dbg !13406
  br label %cond.end, !dbg !13406

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !13406
  %cmp2 = icmp slt i32 %cond, 0, !dbg !13408
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13409

if.then:                                          ; preds = %cond.end
  br label %err, !dbg !13410

if.end:                                           ; preds = %cond.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13411
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !13411
  %5 = load i32, i32* %demod3, align 4, !dbg !13411
  %cmp4 = icmp eq i32 %5, 2, !dbg !13411
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !13411

cond.true5:                                       ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13411
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61972) #9, !dbg !13411
  br label %cond.end9, !dbg !13411

cond.false7:                                      ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13411
  %call8 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62484) #9, !dbg !13411
  br label %cond.end9, !dbg !13411

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !13411
  store i32 %cond10, i32* %reg, align 4, !dbg !13412
  %8 = load i32, i32* %reg, align 4, !dbg !13413
  %and = and i32 %8, -17, !dbg !13413
  store i32 %and, i32* %reg, align 4, !dbg !13413
  %9 = load i32, i32* %reg, align 4, !dbg !13414
  %and11 = and i32 %9, -9, !dbg !13414
  store i32 %and11, i32* %reg, align 4, !dbg !13414
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13415
  %demod12 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !13415
  %11 = load i32, i32* %demod12, align 4, !dbg !13415
  %cmp13 = icmp eq i32 %11, 2, !dbg !13415
  br i1 %cmp13, label %cond.true14, label %cond.false16, !dbg !13415

cond.true14:                                      ; preds = %cond.end9
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13415
  %13 = load i32, i32* %reg, align 4, !dbg !13415
  %conv = trunc i32 %13 to i8, !dbg !13415
  %call15 = call i32 @stv090x_write_reg(%struct.stv090x_state* %12, i32 61972, i8 zeroext %conv) #9, !dbg !13415
  br label %cond.end19, !dbg !13415

cond.false16:                                     ; preds = %cond.end9
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13415
  %15 = load i32, i32* %reg, align 4, !dbg !13415
  %conv17 = trunc i32 %15 to i8, !dbg !13415
  %call18 = call i32 @stv090x_write_reg(%struct.stv090x_state* %14, i32 62484, i8 zeroext %conv17) #9, !dbg !13415
  br label %cond.end19, !dbg !13415

cond.end19:                                       ; preds = %cond.false16, %cond.true14
  %cond20 = phi i32 [ %call15, %cond.true14 ], [ %call18, %cond.false16 ], !dbg !13415
  %cmp21 = icmp slt i32 %cond20, 0, !dbg !13417
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !13418

if.then23:                                        ; preds = %cond.end19
  br label %err, !dbg !13419

if.end24:                                         ; preds = %cond.end19
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13420
  %demod25 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %16, i32 0, i32 1, !dbg !13420
  %17 = load i32, i32* %demod25, align 4, !dbg !13420
  %cmp26 = icmp eq i32 %17, 2, !dbg !13420
  br i1 %cmp26, label %cond.true28, label %cond.false30, !dbg !13420

cond.true28:                                      ; preds = %if.end24
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13420
  %call29 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62048, i8 zeroext -125) #9, !dbg !13420
  br label %cond.end32, !dbg !13420

cond.false30:                                     ; preds = %if.end24
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13420
  %call31 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62560, i8 zeroext -125) #9, !dbg !13420
  br label %cond.end32, !dbg !13420

cond.end32:                                       ; preds = %cond.false30, %cond.true28
  %cond33 = phi i32 [ %call29, %cond.true28 ], [ %call31, %cond.false30 ], !dbg !13420
  %cmp34 = icmp slt i32 %cond33, 0, !dbg !13422
  br i1 %cmp34, label %if.then36, label %if.end37, !dbg !13423

if.then36:                                        ; preds = %cond.end32
  br label %err, !dbg !13424

if.end37:                                         ; preds = %cond.end32
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13425
  %demod38 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 1, !dbg !13425
  %21 = load i32, i32* %demod38, align 4, !dbg !13425
  %cmp39 = icmp eq i32 %21, 2, !dbg !13425
  br i1 %cmp39, label %cond.true41, label %cond.false43, !dbg !13425

cond.true41:                                      ; preds = %if.end37
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13425
  %call42 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62049, i8 zeroext -64) #9, !dbg !13425
  br label %cond.end45, !dbg !13425

cond.false43:                                     ; preds = %if.end37
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13425
  %call44 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62561, i8 zeroext -64) #9, !dbg !13425
  br label %cond.end45, !dbg !13425

cond.end45:                                       ; preds = %cond.false43, %cond.true41
  %cond46 = phi i32 [ %call42, %cond.true41 ], [ %call44, %cond.false43 ], !dbg !13425
  %cmp47 = icmp slt i32 %cond46, 0, !dbg !13427
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !13428

if.then49:                                        ; preds = %cond.end45
  br label %err, !dbg !13429

if.end50:                                         ; preds = %cond.end45
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13430
  %demod51 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 1, !dbg !13430
  %25 = load i32, i32* %demod51, align 4, !dbg !13430
  %cmp52 = icmp eq i32 %25, 2, !dbg !13430
  br i1 %cmp52, label %cond.true54, label %cond.false56, !dbg !13430

cond.true54:                                      ; preds = %if.end50
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13430
  %call55 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62050, i8 zeroext -126) #9, !dbg !13430
  br label %cond.end58, !dbg !13430

cond.false56:                                     ; preds = %if.end50
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13430
  %call57 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62562, i8 zeroext -126) #9, !dbg !13430
  br label %cond.end58, !dbg !13430

cond.end58:                                       ; preds = %cond.false56, %cond.true54
  %cond59 = phi i32 [ %call55, %cond.true54 ], [ %call57, %cond.false56 ], !dbg !13430
  %cmp60 = icmp slt i32 %cond59, 0, !dbg !13432
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !13433

if.then62:                                        ; preds = %cond.end58
  br label %err, !dbg !13434

if.end63:                                         ; preds = %cond.end58
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13435
  %demod64 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %28, i32 0, i32 1, !dbg !13435
  %29 = load i32, i32* %demod64, align 4, !dbg !13435
  %cmp65 = icmp eq i32 %29, 2, !dbg !13435
  br i1 %cmp65, label %cond.true67, label %cond.false69, !dbg !13435

cond.true67:                                      ; preds = %if.end63
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13435
  %call68 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62051, i8 zeroext -96) #9, !dbg !13435
  br label %cond.end71, !dbg !13435

cond.false69:                                     ; preds = %if.end63
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13435
  %call70 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62563, i8 zeroext -96) #9, !dbg !13435
  br label %cond.end71, !dbg !13435

cond.end71:                                       ; preds = %cond.false69, %cond.true67
  %cond72 = phi i32 [ %call68, %cond.true67 ], [ %call70, %cond.false69 ], !dbg !13435
  %cmp73 = icmp slt i32 %cond72, 0, !dbg !13437
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !13438

if.then75:                                        ; preds = %cond.end71
  br label %err, !dbg !13439

if.end76:                                         ; preds = %cond.end71
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13440
  %demod77 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %32, i32 0, i32 1, !dbg !13440
  %33 = load i32, i32* %demod77, align 4, !dbg !13440
  %cmp78 = icmp eq i32 %33, 2, !dbg !13440
  br i1 %cmp78, label %cond.true80, label %cond.false82, !dbg !13440

cond.true80:                                      ; preds = %if.end76
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13440
  %call81 = call i32 @stv090x_write_reg(%struct.stv090x_state* %34, i32 61975, i8 zeroext 0) #9, !dbg !13440
  br label %cond.end84, !dbg !13440

cond.false82:                                     ; preds = %if.end76
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13440
  %call83 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62487, i8 zeroext 0) #9, !dbg !13440
  br label %cond.end84, !dbg !13440

cond.end84:                                       ; preds = %cond.false82, %cond.true80
  %cond85 = phi i32 [ %call81, %cond.true80 ], [ %call83, %cond.false82 ], !dbg !13440
  %cmp86 = icmp slt i32 %cond85, 0, !dbg !13442
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !13443

if.then88:                                        ; preds = %cond.end84
  br label %err, !dbg !13444

if.end89:                                         ; preds = %cond.end84
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13445
  %call90 = call i32 @stv090x_set_srate(%struct.stv090x_state* %36, i32 1000000) #9, !dbg !13447
  %cmp91 = icmp slt i32 %call90, 0, !dbg !13448
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !13449

if.then93:                                        ; preds = %if.end89
  br label %err, !dbg !13450

if.end94:                                         ; preds = %if.end89
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13451
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 21, !dbg !13452
  %38 = load i32, i32* %search_range, align 4, !dbg !13452
  %div = sdiv i32 %38, 1000000, !dbg !13453
  store i32 %div, i32* %steps, align 4, !dbg !13454
  %39 = load i32, i32* %steps, align 4, !dbg !13455
  %cmp95 = icmp sle i32 %39, 0, !dbg !13457
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !13458

if.then97:                                        ; preds = %if.end94
  store i32 1, i32* %steps, align 4, !dbg !13459
  br label %if.end98, !dbg !13460

if.end98:                                         ; preds = %if.then97, %if.end94
  store i32 1, i32* %dir, align 4, !dbg !13461
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13462
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 3, !dbg !13463
  %41 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !13463
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %41, i32 0, i32 4, !dbg !13464
  %42 = load i32, i32* %mclk, align 8, !dbg !13464
  %div99 = sdiv i32 %42, 256, !dbg !13465
  %div100 = sdiv i32 256000000, %div99, !dbg !13466
  store i32 %div100, i32* %freq_step, align 4, !dbg !13467
  store i32 0, i32* %freq_init, align 4, !dbg !13468
  store i32 0, i32* %i, align 4, !dbg !13469
  br label %for.cond, !dbg !13471

for.cond:                                         ; preds = %for.inc198, %if.end98
  %43 = load i32, i32* %i, align 4, !dbg !13472
  %44 = load i32, i32* %steps, align 4, !dbg !13474
  %cmp101 = icmp slt i32 %43, %44, !dbg !13475
  br i1 %cmp101, label %for.body, label %for.end200, !dbg !13476

for.body:                                         ; preds = %for.cond
  %45 = load i32, i32* %dir, align 4, !dbg !13477
  %cmp103 = icmp sgt i32 %45, 0, !dbg !13480
  br i1 %cmp103, label %if.then105, label %if.else, !dbg !13481

if.then105:                                       ; preds = %for.body
  %46 = load i32, i32* %freq_init, align 4, !dbg !13482
  %47 = load i32, i32* %freq_step, align 4, !dbg !13483
  %48 = load i32, i32* %i, align 4, !dbg !13484
  %mul = mul i32 %47, %48, !dbg !13485
  %add = add i32 %46, %mul, !dbg !13486
  store i32 %add, i32* %freq_init, align 4, !dbg !13487
  br label %if.end107, !dbg !13488

if.else:                                          ; preds = %for.body
  %49 = load i32, i32* %freq_init, align 4, !dbg !13489
  %50 = load i32, i32* %freq_step, align 4, !dbg !13490
  %51 = load i32, i32* %i, align 4, !dbg !13491
  %mul106 = mul i32 %50, %51, !dbg !13492
  %sub = sub i32 %49, %mul106, !dbg !13493
  store i32 %sub, i32* %freq_init, align 4, !dbg !13494
  br label %if.end107

if.end107:                                        ; preds = %if.else, %if.then105
  %52 = load i32, i32* %dir, align 4, !dbg !13495
  %mul108 = mul i32 %52, -1, !dbg !13495
  store i32 %mul108, i32* %dir, align 4, !dbg !13495
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13496
  %demod109 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %53, i32 0, i32 1, !dbg !13496
  %54 = load i32, i32* %demod109, align 4, !dbg !13496
  %cmp110 = icmp eq i32 %54, 2, !dbg !13496
  br i1 %cmp110, label %cond.true112, label %cond.false114, !dbg !13496

cond.true112:                                     ; preds = %if.end107
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13496
  %call113 = call i32 @stv090x_write_reg(%struct.stv090x_state* %55, i32 61974, i8 zeroext 92) #9, !dbg !13496
  br label %cond.end116, !dbg !13496

cond.false114:                                    ; preds = %if.end107
  %56 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13496
  %call115 = call i32 @stv090x_write_reg(%struct.stv090x_state* %56, i32 62486, i8 zeroext 92) #9, !dbg !13496
  br label %cond.end116, !dbg !13496

cond.end116:                                      ; preds = %cond.false114, %cond.true112
  %cond117 = phi i32 [ %call113, %cond.true112 ], [ %call115, %cond.false114 ], !dbg !13496
  %cmp118 = icmp slt i32 %cond117, 0, !dbg !13498
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !13499

if.then120:                                       ; preds = %cond.end116
  br label %err, !dbg !13500

if.end121:                                        ; preds = %cond.end116
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13501
  %demod122 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %57, i32 0, i32 1, !dbg !13501
  %58 = load i32, i32* %demod122, align 4, !dbg !13501
  %cmp123 = icmp eq i32 %58, 2, !dbg !13501
  br i1 %cmp123, label %cond.true125, label %cond.false129, !dbg !13501

cond.true125:                                     ; preds = %if.end121
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13501
  %60 = load i32, i32* %freq_init, align 4, !dbg !13501
  %shr = lshr i32 %60, 8, !dbg !13501
  %and126 = and i32 %shr, 255, !dbg !13501
  %conv127 = trunc i32 %and126 to i8, !dbg !13501
  %call128 = call i32 @stv090x_write_reg(%struct.stv090x_state* %59, i32 62024, i8 zeroext %conv127) #9, !dbg !13501
  br label %cond.end134, !dbg !13501

cond.false129:                                    ; preds = %if.end121
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13501
  %62 = load i32, i32* %freq_init, align 4, !dbg !13501
  %shr130 = lshr i32 %62, 8, !dbg !13501
  %and131 = and i32 %shr130, 255, !dbg !13501
  %conv132 = trunc i32 %and131 to i8, !dbg !13501
  %call133 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 62536, i8 zeroext %conv132) #9, !dbg !13501
  br label %cond.end134, !dbg !13501

cond.end134:                                      ; preds = %cond.false129, %cond.true125
  %cond135 = phi i32 [ %call128, %cond.true125 ], [ %call133, %cond.false129 ], !dbg !13501
  %cmp136 = icmp slt i32 %cond135, 0, !dbg !13503
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !13504

if.then138:                                       ; preds = %cond.end134
  br label %err, !dbg !13505

if.end139:                                        ; preds = %cond.end134
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13506
  %demod140 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %63, i32 0, i32 1, !dbg !13506
  %64 = load i32, i32* %demod140, align 4, !dbg !13506
  %cmp141 = icmp eq i32 %64, 2, !dbg !13506
  br i1 %cmp141, label %cond.true143, label %cond.false147, !dbg !13506

cond.true143:                                     ; preds = %if.end139
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13506
  %66 = load i32, i32* %freq_init, align 4, !dbg !13506
  %and144 = and i32 %66, 255, !dbg !13506
  %conv145 = trunc i32 %and144 to i8, !dbg !13506
  %call146 = call i32 @stv090x_write_reg(%struct.stv090x_state* %65, i32 62025, i8 zeroext %conv145) #9, !dbg !13506
  br label %cond.end151, !dbg !13506

cond.false147:                                    ; preds = %if.end139
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13506
  %68 = load i32, i32* %freq_init, align 4, !dbg !13506
  %and148 = and i32 %68, 255, !dbg !13506
  %conv149 = trunc i32 %and148 to i8, !dbg !13506
  %call150 = call i32 @stv090x_write_reg(%struct.stv090x_state* %67, i32 62537, i8 zeroext %conv149) #9, !dbg !13506
  br label %cond.end151, !dbg !13506

cond.end151:                                      ; preds = %cond.false147, %cond.true143
  %cond152 = phi i32 [ %call146, %cond.true143 ], [ %call150, %cond.false147 ], !dbg !13506
  %cmp153 = icmp slt i32 %cond152, 0, !dbg !13508
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !13509

if.then155:                                       ; preds = %cond.end151
  br label %err, !dbg !13510

if.end156:                                        ; preds = %cond.end151
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13511
  %demod157 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %69, i32 0, i32 1, !dbg !13511
  %70 = load i32, i32* %demod157, align 4, !dbg !13511
  %cmp158 = icmp eq i32 %70, 2, !dbg !13511
  br i1 %cmp158, label %cond.true160, label %cond.false162, !dbg !13511

cond.true160:                                     ; preds = %if.end156
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13511
  %call161 = call i32 @stv090x_write_reg(%struct.stv090x_state* %71, i32 61974, i8 zeroext 88) #9, !dbg !13511
  br label %cond.end164, !dbg !13511

cond.false162:                                    ; preds = %if.end156
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13511
  %call163 = call i32 @stv090x_write_reg(%struct.stv090x_state* %72, i32 62486, i8 zeroext 88) #9, !dbg !13511
  br label %cond.end164, !dbg !13511

cond.end164:                                      ; preds = %cond.false162, %cond.true160
  %cond165 = phi i32 [ %call161, %cond.true160 ], [ %call163, %cond.false162 ], !dbg !13511
  %cmp166 = icmp slt i32 %cond165, 0, !dbg !13513
  br i1 %cmp166, label %if.then168, label %if.end169, !dbg !13514

if.then168:                                       ; preds = %cond.end164
  br label %err, !dbg !13515

if.end169:                                        ; preds = %cond.end164
  call void @msleep(i32 10) #9, !dbg !13516
  store i32 0, i32* %agc2, align 4, !dbg !13517
  store i32 0, i32* %j, align 4, !dbg !13518
  br label %for.cond170, !dbg !13520

for.cond170:                                      ; preds = %for.inc, %if.end169
  %73 = load i32, i32* %j, align 4, !dbg !13521
  %cmp171 = icmp slt i32 %73, 10, !dbg !13523
  br i1 %cmp171, label %for.body173, label %for.end, !dbg !13524

for.body173:                                      ; preds = %for.cond170
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13525
  %demod174 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %74, i32 0, i32 1, !dbg !13525
  %75 = load i32, i32* %demod174, align 4, !dbg !13525
  %cmp175 = icmp eq i32 %75, 2, !dbg !13525
  br i1 %cmp175, label %cond.true177, label %cond.false179, !dbg !13525

cond.true177:                                     ; preds = %for.body173
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13525
  %call178 = call i32 @stv090x_read_reg(%struct.stv090x_state* %76, i32 62006) #9, !dbg !13525
  br label %cond.end181, !dbg !13525

cond.false179:                                    ; preds = %for.body173
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13525
  %call180 = call i32 @stv090x_read_reg(%struct.stv090x_state* %77, i32 62518) #9, !dbg !13525
  br label %cond.end181, !dbg !13525

cond.end181:                                      ; preds = %cond.false179, %cond.true177
  %cond182 = phi i32 [ %call178, %cond.true177 ], [ %call180, %cond.false179 ], !dbg !13525
  %shl = shl i32 %cond182, 8, !dbg !13527
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13528
  %demod183 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %78, i32 0, i32 1, !dbg !13528
  %79 = load i32, i32* %demod183, align 4, !dbg !13528
  %cmp184 = icmp eq i32 %79, 2, !dbg !13528
  br i1 %cmp184, label %cond.true186, label %cond.false188, !dbg !13528

cond.true186:                                     ; preds = %cond.end181
  %80 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13528
  %call187 = call i32 @stv090x_read_reg(%struct.stv090x_state* %80, i32 62007) #9, !dbg !13528
  br label %cond.end190, !dbg !13528

cond.false188:                                    ; preds = %cond.end181
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13528
  %call189 = call i32 @stv090x_read_reg(%struct.stv090x_state* %81, i32 62519) #9, !dbg !13528
  br label %cond.end190, !dbg !13528

cond.end190:                                      ; preds = %cond.false188, %cond.true186
  %cond191 = phi i32 [ %call187, %cond.true186 ], [ %call189, %cond.false188 ], !dbg !13528
  %or = or i32 %shl, %cond191, !dbg !13529
  %82 = load i32, i32* %agc2, align 4, !dbg !13530
  %add192 = add i32 %82, %or, !dbg !13530
  store i32 %add192, i32* %agc2, align 4, !dbg !13530
  br label %for.inc, !dbg !13531

for.inc:                                          ; preds = %cond.end190
  %83 = load i32, i32* %j, align 4, !dbg !13532
  %inc = add i32 %83, 1, !dbg !13532
  store i32 %inc, i32* %j, align 4, !dbg !13532
  br label %for.cond170, !dbg !13533, !llvm.loop !13534

for.end:                                          ; preds = %for.cond170
  %84 = load i32, i32* %agc2, align 4, !dbg !13536
  %div193 = udiv i32 %84, 10, !dbg !13536
  store i32 %div193, i32* %agc2, align 4, !dbg !13536
  %85 = load i32, i32* %agc2, align 4, !dbg !13537
  %86 = load i32, i32* %agc2_min, align 4, !dbg !13539
  %cmp194 = icmp ult i32 %85, %86, !dbg !13540
  br i1 %cmp194, label %if.then196, label %if.end197, !dbg !13541

if.then196:                                       ; preds = %for.end
  %87 = load i32, i32* %agc2, align 4, !dbg !13542
  store i32 %87, i32* %agc2_min, align 4, !dbg !13543
  br label %if.end197, !dbg !13544

if.end197:                                        ; preds = %if.then196, %for.end
  br label %for.inc198, !dbg !13545

for.inc198:                                       ; preds = %if.end197
  %88 = load i32, i32* %i, align 4, !dbg !13546
  %inc199 = add i32 %88, 1, !dbg !13546
  store i32 %inc199, i32* %i, align 4, !dbg !13546
  br label %for.cond, !dbg !13547, !llvm.loop !13548

for.end200:                                       ; preds = %for.cond
  %89 = load i32, i32* %agc2_min, align 4, !dbg !13550
  store i32 %89, i32* %retval, align 4, !dbg !13551
  br label %return, !dbg !13551

err:                                              ; preds = %if.then168, %if.then155, %if.then138, %if.then120, %if.then93, %if.then88, %if.then75, %if.then62, %if.then49, %if.then36, %if.then23, %if.then
  call void @llvm.dbg.label(metadata !13552), !dbg !13553
  br label %do.body, !dbg !13554

do.body:                                          ; preds = %err
  %90 = load i32, i32* @verbose, align 4, !dbg !13555
  %cmp201 = icmp ugt i32 %90, 0, !dbg !13555
  br i1 %cmp201, label %land.lhs.true, label %if.else207, !dbg !13555

land.lhs.true:                                    ; preds = %do.body
  %91 = load i32, i32* @verbose, align 4, !dbg !13555
  %cmp203 = icmp ugt i32 %91, 0, !dbg !13555
  br i1 %cmp203, label %if.then205, label %if.else207, !dbg !13560

if.then205:                                       ; preds = %land.lhs.true
  %call206 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stv090x_get_agc2_min_level, i64 0, i64 0)) #13, !dbg !13555
  br label %if.end234, !dbg !13555

if.else207:                                       ; preds = %land.lhs.true, %do.body
  %92 = load i32, i32* @verbose, align 4, !dbg !13561
  %cmp208 = icmp ugt i32 %92, 1, !dbg !13561
  br i1 %cmp208, label %land.lhs.true210, label %if.else215, !dbg !13561

land.lhs.true210:                                 ; preds = %if.else207
  %93 = load i32, i32* @verbose, align 4, !dbg !13561
  %cmp211 = icmp ugt i32 %93, 0, !dbg !13561
  br i1 %cmp211, label %if.then213, label %if.else215, !dbg !13555

if.then213:                                       ; preds = %land.lhs.true210
  %call214 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stv090x_get_agc2_min_level, i64 0, i64 0)) #13, !dbg !13561
  br label %if.end233, !dbg !13561

if.else215:                                       ; preds = %land.lhs.true210, %if.else207
  %94 = load i32, i32* @verbose, align 4, !dbg !13563
  %cmp216 = icmp ugt i32 %94, 2, !dbg !13563
  br i1 %cmp216, label %land.lhs.true218, label %if.else223, !dbg !13563

land.lhs.true218:                                 ; preds = %if.else215
  %95 = load i32, i32* @verbose, align 4, !dbg !13563
  %cmp219 = icmp ugt i32 %95, 0, !dbg !13563
  br i1 %cmp219, label %if.then221, label %if.else223, !dbg !13561

if.then221:                                       ; preds = %land.lhs.true218
  %call222 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stv090x_get_agc2_min_level, i64 0, i64 0)) #13, !dbg !13563
  br label %if.end232, !dbg !13563

if.else223:                                       ; preds = %land.lhs.true218, %if.else215
  %96 = load i32, i32* @verbose, align 4, !dbg !13565
  %cmp224 = icmp ugt i32 %96, 3, !dbg !13565
  br i1 %cmp224, label %land.lhs.true226, label %if.end231, !dbg !13565

land.lhs.true226:                                 ; preds = %if.else223
  %97 = load i32, i32* @verbose, align 4, !dbg !13565
  %cmp227 = icmp ugt i32 %97, 0, !dbg !13565
  br i1 %cmp227, label %if.then229, label %if.end231, !dbg !13563

if.then229:                                       ; preds = %land.lhs.true226
  %call230 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.stv090x_get_agc2_min_level, i64 0, i64 0)) #13, !dbg !13565
  br label %if.end231, !dbg !13565

if.end231:                                        ; preds = %if.then229, %land.lhs.true226, %if.else223
  br label %if.end232

if.end232:                                        ; preds = %if.end231, %if.then221
  br label %if.end233

if.end233:                                        ; preds = %if.end232, %if.then213
  br label %if.end234

if.end234:                                        ; preds = %if.end233, %if.then205
  br label %do.end, !dbg !13567

do.end:                                           ; preds = %if.end234
  store i32 -1, i32* %retval, align 4, !dbg !13568
  br label %return, !dbg !13568

return:                                           ; preds = %do.end, %for.end200
  %98 = load i32, i32* %retval, align 4, !dbg !13569
  ret i32 %98, !dbg !13569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_srate_srch_coarse(%struct.stv090x_state* %state) #0 !dbg !13570 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %fe = alloca %struct.dvb_frontend*, align 8
  %tmg_lock = alloca i32, align 4
  %i = alloca i32, align 4
  %tmg_cpt = alloca i32, align 4
  %dir = alloca i32, align 4
  %steps = alloca i32, align 4
  %cur_step = alloca i32, align 4
  %freq = alloca i32, align 4
  %srate_coarse = alloca i32, align 4
  %agc2 = alloca i32, align 4
  %car_step = alloca i32, align 4
  %reg = alloca i32, align 4
  %agc2th = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !13571, metadata !DIExpression()), !dbg !13572
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe, metadata !13573, metadata !DIExpression()), !dbg !13574
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13575
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 6, !dbg !13576
  store %struct.dvb_frontend* %frontend, %struct.dvb_frontend** %fe, align 8, !dbg !13574
  call void @llvm.dbg.declare(metadata i32* %tmg_lock, metadata !13577, metadata !DIExpression()), !dbg !13578
  store i32 0, i32* %tmg_lock, align 4, !dbg !13578
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13579, metadata !DIExpression()), !dbg !13580
  call void @llvm.dbg.declare(metadata i32* %tmg_cpt, metadata !13581, metadata !DIExpression()), !dbg !13582
  store i32 0, i32* %tmg_cpt, align 4, !dbg !13582
  call void @llvm.dbg.declare(metadata i32* %dir, metadata !13583, metadata !DIExpression()), !dbg !13584
  store i32 1, i32* %dir, align 4, !dbg !13584
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !13585, metadata !DIExpression()), !dbg !13586
  call void @llvm.dbg.declare(metadata i32* %cur_step, metadata !13587, metadata !DIExpression()), !dbg !13588
  store i32 0, i32* %cur_step, align 4, !dbg !13588
  call void @llvm.dbg.declare(metadata i32* %freq, metadata !13589, metadata !DIExpression()), !dbg !13590
  call void @llvm.dbg.declare(metadata i32* %srate_coarse, metadata !13591, metadata !DIExpression()), !dbg !13592
  store i32 0, i32* %srate_coarse, align 4, !dbg !13592
  call void @llvm.dbg.declare(metadata i32* %agc2, metadata !13593, metadata !DIExpression()), !dbg !13594
  store i32 0, i32* %agc2, align 4, !dbg !13594
  call void @llvm.dbg.declare(metadata i32* %car_step, metadata !13595, metadata !DIExpression()), !dbg !13596
  store i32 1200, i32* %car_step, align 4, !dbg !13596
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !13597, metadata !DIExpression()), !dbg !13598
  call void @llvm.dbg.declare(metadata i32* %agc2th, metadata !13599, metadata !DIExpression()), !dbg !13600
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13601
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 3, !dbg !13603
  %2 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !13603
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %2, i32 0, i32 5, !dbg !13604
  %3 = load i32, i32* %dev_ver, align 4, !dbg !13604
  %cmp = icmp uge i32 %3, 48, !dbg !13605
  br i1 %cmp, label %if.then, label %if.else, !dbg !13606

if.then:                                          ; preds = %entry
  store i32 11776, i32* %agc2th, align 4, !dbg !13607
  br label %if.end, !dbg !13608

if.else:                                          ; preds = %entry
  store i32 7936, i32* %agc2th, align 4, !dbg !13609
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13610
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !13610
  %5 = load i32, i32* %demod, align 4, !dbg !13610
  %cmp1 = icmp eq i32 %5, 2, !dbg !13610
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !13610

cond.true:                                        ; preds = %if.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13610
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61974) #9, !dbg !13610
  br label %cond.end, !dbg !13610

cond.false:                                       ; preds = %if.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13610
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62486) #9, !dbg !13610
  br label %cond.end, !dbg !13610

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !13610
  store i32 %cond, i32* %reg, align 4, !dbg !13611
  %8 = load i32, i32* %reg, align 4, !dbg !13612
  %and = and i32 %8, -32, !dbg !13612
  %or = or i32 %and, 31, !dbg !13612
  store i32 %or, i32* %reg, align 4, !dbg !13612
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13613
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 1, !dbg !13613
  %10 = load i32, i32* %demod3, align 4, !dbg !13613
  %cmp4 = icmp eq i32 %10, 2, !dbg !13613
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !13613

cond.true5:                                       ; preds = %cond.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13613
  %12 = load i32, i32* %reg, align 4, !dbg !13613
  %conv = trunc i32 %12 to i8, !dbg !13613
  %call6 = call i32 @stv090x_write_reg(%struct.stv090x_state* %11, i32 61974, i8 zeroext %conv) #9, !dbg !13613
  br label %cond.end10, !dbg !13613

cond.false7:                                      ; preds = %cond.end
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13613
  %14 = load i32, i32* %reg, align 4, !dbg !13613
  %conv8 = trunc i32 %14 to i8, !dbg !13613
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %13, i32 62486, i8 zeroext %conv8) #9, !dbg !13613
  br label %cond.end10, !dbg !13613

cond.end10:                                       ; preds = %cond.false7, %cond.true5
  %cond11 = phi i32 [ %call6, %cond.true5 ], [ %call9, %cond.false7 ], !dbg !13613
  %cmp12 = icmp slt i32 %cond11, 0, !dbg !13615
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !13616

if.then14:                                        ; preds = %cond.end10
  br label %err, !dbg !13617

if.end15:                                         ; preds = %cond.end10
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13618
  %demod16 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 1, !dbg !13618
  %16 = load i32, i32* %demod16, align 4, !dbg !13618
  %cmp17 = icmp eq i32 %16, 2, !dbg !13618
  br i1 %cmp17, label %cond.true19, label %cond.false21, !dbg !13618

cond.true19:                                      ; preds = %if.end15
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13618
  %call20 = call i32 @stv090x_write_reg(%struct.stv090x_state* %17, i32 62032, i8 zeroext 18) #9, !dbg !13618
  br label %cond.end23, !dbg !13618

cond.false21:                                     ; preds = %if.end15
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13618
  %call22 = call i32 @stv090x_write_reg(%struct.stv090x_state* %18, i32 62544, i8 zeroext 18) #9, !dbg !13618
  br label %cond.end23, !dbg !13618

cond.end23:                                       ; preds = %cond.false21, %cond.true19
  %cond24 = phi i32 [ %call20, %cond.true19 ], [ %call22, %cond.false21 ], !dbg !13618
  %cmp25 = icmp slt i32 %cond24, 0, !dbg !13620
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !13621

if.then27:                                        ; preds = %cond.end23
  br label %err, !dbg !13622

if.end28:                                         ; preds = %cond.end23
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13623
  %demod29 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %19, i32 0, i32 1, !dbg !13623
  %20 = load i32, i32* %demod29, align 4, !dbg !13623
  %cmp30 = icmp eq i32 %20, 2, !dbg !13623
  br i1 %cmp30, label %cond.true32, label %cond.false34, !dbg !13623

cond.true32:                                      ; preds = %if.end28
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13623
  %call33 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 62042, i8 zeroext -64) #9, !dbg !13623
  br label %cond.end36, !dbg !13623

cond.false34:                                     ; preds = %if.end28
  %22 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13623
  %call35 = call i32 @stv090x_write_reg(%struct.stv090x_state* %22, i32 62554, i8 zeroext -64) #9, !dbg !13623
  br label %cond.end36, !dbg !13623

cond.end36:                                       ; preds = %cond.false34, %cond.true32
  %cond37 = phi i32 [ %call33, %cond.true32 ], [ %call35, %cond.false34 ], !dbg !13623
  %cmp38 = icmp slt i32 %cond37, 0, !dbg !13625
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !13626

if.then40:                                        ; preds = %cond.end36
  br label %err, !dbg !13627

if.end41:                                         ; preds = %cond.end36
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13628
  %demod42 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %23, i32 0, i32 1, !dbg !13628
  %24 = load i32, i32* %demod42, align 4, !dbg !13628
  %cmp43 = icmp eq i32 %24, 2, !dbg !13628
  br i1 %cmp43, label %cond.true45, label %cond.false47, !dbg !13628

cond.true45:                                      ; preds = %if.end41
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13628
  %call46 = call i32 @stv090x_write_reg(%struct.stv090x_state* %25, i32 62035, i8 zeroext -16) #9, !dbg !13628
  br label %cond.end49, !dbg !13628

cond.false47:                                     ; preds = %if.end41
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13628
  %call48 = call i32 @stv090x_write_reg(%struct.stv090x_state* %26, i32 62547, i8 zeroext -16) #9, !dbg !13628
  br label %cond.end49, !dbg !13628

cond.end49:                                       ; preds = %cond.false47, %cond.true45
  %cond50 = phi i32 [ %call46, %cond.true45 ], [ %call48, %cond.false47 ], !dbg !13628
  %cmp51 = icmp slt i32 %cond50, 0, !dbg !13630
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !13631

if.then53:                                        ; preds = %cond.end49
  br label %err, !dbg !13632

if.end54:                                         ; preds = %cond.end49
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13633
  %demod55 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %27, i32 0, i32 1, !dbg !13633
  %28 = load i32, i32* %demod55, align 4, !dbg !13633
  %cmp56 = icmp eq i32 %28, 2, !dbg !13633
  br i1 %cmp56, label %cond.true58, label %cond.false60, !dbg !13633

cond.true58:                                      ; preds = %if.end54
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13633
  %call59 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62036, i8 zeroext -32) #9, !dbg !13633
  br label %cond.end62, !dbg !13633

cond.false60:                                     ; preds = %if.end54
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13633
  %call61 = call i32 @stv090x_write_reg(%struct.stv090x_state* %30, i32 62548, i8 zeroext -32) #9, !dbg !13633
  br label %cond.end62, !dbg !13633

cond.end62:                                       ; preds = %cond.false60, %cond.true58
  %cond63 = phi i32 [ %call59, %cond.true58 ], [ %call61, %cond.false60 ], !dbg !13633
  %cmp64 = icmp slt i32 %cond63, 0, !dbg !13635
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !13636

if.then66:                                        ; preds = %cond.end62
  br label %err, !dbg !13637

if.end67:                                         ; preds = %cond.end62
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13638
  %demod68 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %31, i32 0, i32 1, !dbg !13638
  %32 = load i32, i32* %demod68, align 4, !dbg !13638
  %cmp69 = icmp eq i32 %32, 2, !dbg !13638
  br i1 %cmp69, label %cond.true71, label %cond.false73, !dbg !13638

cond.true71:                                      ; preds = %if.end67
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13638
  %call72 = call i32 @stv090x_read_reg(%struct.stv090x_state* %33, i32 61972) #9, !dbg !13638
  br label %cond.end75, !dbg !13638

cond.false73:                                     ; preds = %if.end67
  %34 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13638
  %call74 = call i32 @stv090x_read_reg(%struct.stv090x_state* %34, i32 62484) #9, !dbg !13638
  br label %cond.end75, !dbg !13638

cond.end75:                                       ; preds = %cond.false73, %cond.true71
  %cond76 = phi i32 [ %call72, %cond.true71 ], [ %call74, %cond.false73 ], !dbg !13638
  store i32 %cond76, i32* %reg, align 4, !dbg !13639
  %35 = load i32, i32* %reg, align 4, !dbg !13640
  %and77 = and i32 %35, -17, !dbg !13640
  %or78 = or i32 %and77, 16, !dbg !13640
  store i32 %or78, i32* %reg, align 4, !dbg !13640
  %36 = load i32, i32* %reg, align 4, !dbg !13641
  %and79 = and i32 %36, -9, !dbg !13641
  store i32 %and79, i32* %reg, align 4, !dbg !13641
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13642
  %demod80 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 1, !dbg !13642
  %38 = load i32, i32* %demod80, align 4, !dbg !13642
  %cmp81 = icmp eq i32 %38, 2, !dbg !13642
  br i1 %cmp81, label %cond.true83, label %cond.false86, !dbg !13642

cond.true83:                                      ; preds = %cond.end75
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13642
  %40 = load i32, i32* %reg, align 4, !dbg !13642
  %conv84 = trunc i32 %40 to i8, !dbg !13642
  %call85 = call i32 @stv090x_write_reg(%struct.stv090x_state* %39, i32 61972, i8 zeroext %conv84) #9, !dbg !13642
  br label %cond.end89, !dbg !13642

cond.false86:                                     ; preds = %cond.end75
  %41 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13642
  %42 = load i32, i32* %reg, align 4, !dbg !13642
  %conv87 = trunc i32 %42 to i8, !dbg !13642
  %call88 = call i32 @stv090x_write_reg(%struct.stv090x_state* %41, i32 62484, i8 zeroext %conv87) #9, !dbg !13642
  br label %cond.end89, !dbg !13642

cond.end89:                                       ; preds = %cond.false86, %cond.true83
  %cond90 = phi i32 [ %call85, %cond.true83 ], [ %call88, %cond.false86 ], !dbg !13642
  %cmp91 = icmp slt i32 %cond90, 0, !dbg !13644
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !13645

if.then93:                                        ; preds = %cond.end89
  br label %err, !dbg !13646

if.end94:                                         ; preds = %cond.end89
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13647
  %demod95 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %43, i32 0, i32 1, !dbg !13647
  %44 = load i32, i32* %demod95, align 4, !dbg !13647
  %cmp96 = icmp eq i32 %44, 2, !dbg !13647
  br i1 %cmp96, label %cond.true98, label %cond.false100, !dbg !13647

cond.true98:                                      ; preds = %if.end94
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13647
  %call99 = call i32 @stv090x_write_reg(%struct.stv090x_state* %45, i32 62048, i8 zeroext -125) #9, !dbg !13647
  br label %cond.end102, !dbg !13647

cond.false100:                                    ; preds = %if.end94
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13647
  %call101 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62560, i8 zeroext -125) #9, !dbg !13647
  br label %cond.end102, !dbg !13647

cond.end102:                                      ; preds = %cond.false100, %cond.true98
  %cond103 = phi i32 [ %call99, %cond.true98 ], [ %call101, %cond.false100 ], !dbg !13647
  %cmp104 = icmp slt i32 %cond103, 0, !dbg !13649
  br i1 %cmp104, label %if.then106, label %if.end107, !dbg !13650

if.then106:                                       ; preds = %cond.end102
  br label %err, !dbg !13651

if.end107:                                        ; preds = %cond.end102
  %47 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13652
  %demod108 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %47, i32 0, i32 1, !dbg !13652
  %48 = load i32, i32* %demod108, align 4, !dbg !13652
  %cmp109 = icmp eq i32 %48, 2, !dbg !13652
  br i1 %cmp109, label %cond.true111, label %cond.false113, !dbg !13652

cond.true111:                                     ; preds = %if.end107
  %49 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13652
  %call112 = call i32 @stv090x_write_reg(%struct.stv090x_state* %49, i32 62049, i8 zeroext -64) #9, !dbg !13652
  br label %cond.end115, !dbg !13652

cond.false113:                                    ; preds = %if.end107
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13652
  %call114 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 62561, i8 zeroext -64) #9, !dbg !13652
  br label %cond.end115, !dbg !13652

cond.end115:                                      ; preds = %cond.false113, %cond.true111
  %cond116 = phi i32 [ %call112, %cond.true111 ], [ %call114, %cond.false113 ], !dbg !13652
  %cmp117 = icmp slt i32 %cond116, 0, !dbg !13654
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !13655

if.then119:                                       ; preds = %cond.end115
  br label %err, !dbg !13656

if.end120:                                        ; preds = %cond.end115
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13657
  %demod121 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %51, i32 0, i32 1, !dbg !13657
  %52 = load i32, i32* %demod121, align 4, !dbg !13657
  %cmp122 = icmp eq i32 %52, 2, !dbg !13657
  br i1 %cmp122, label %cond.true124, label %cond.false126, !dbg !13657

cond.true124:                                     ; preds = %if.end120
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13657
  %call125 = call i32 @stv090x_write_reg(%struct.stv090x_state* %53, i32 62050, i8 zeroext -126) #9, !dbg !13657
  br label %cond.end128, !dbg !13657

cond.false126:                                    ; preds = %if.end120
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13657
  %call127 = call i32 @stv090x_write_reg(%struct.stv090x_state* %54, i32 62562, i8 zeroext -126) #9, !dbg !13657
  br label %cond.end128, !dbg !13657

cond.end128:                                      ; preds = %cond.false126, %cond.true124
  %cond129 = phi i32 [ %call125, %cond.true124 ], [ %call127, %cond.false126 ], !dbg !13657
  %cmp130 = icmp slt i32 %cond129, 0, !dbg !13659
  br i1 %cmp130, label %if.then132, label %if.end133, !dbg !13660

if.then132:                                       ; preds = %cond.end128
  br label %err, !dbg !13661

if.end133:                                        ; preds = %cond.end128
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13662
  %demod134 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %55, i32 0, i32 1, !dbg !13662
  %56 = load i32, i32* %demod134, align 4, !dbg !13662
  %cmp135 = icmp eq i32 %56, 2, !dbg !13662
  br i1 %cmp135, label %cond.true137, label %cond.false139, !dbg !13662

cond.true137:                                     ; preds = %if.end133
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13662
  %call138 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62051, i8 zeroext -96) #9, !dbg !13662
  br label %cond.end141, !dbg !13662

cond.false139:                                    ; preds = %if.end133
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13662
  %call140 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62563, i8 zeroext -96) #9, !dbg !13662
  br label %cond.end141, !dbg !13662

cond.end141:                                      ; preds = %cond.false139, %cond.true137
  %cond142 = phi i32 [ %call138, %cond.true137 ], [ %call140, %cond.false139 ], !dbg !13662
  %cmp143 = icmp slt i32 %cond142, 0, !dbg !13664
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !13665

if.then145:                                       ; preds = %cond.end141
  br label %err, !dbg !13666

if.end146:                                        ; preds = %cond.end141
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13667
  %demod147 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %59, i32 0, i32 1, !dbg !13667
  %60 = load i32, i32* %demod147, align 4, !dbg !13667
  %cmp148 = icmp eq i32 %60, 2, !dbg !13667
  br i1 %cmp148, label %cond.true150, label %cond.false152, !dbg !13667

cond.true150:                                     ; preds = %if.end146
  %61 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13667
  %call151 = call i32 @stv090x_write_reg(%struct.stv090x_state* %61, i32 61975, i8 zeroext 0) #9, !dbg !13667
  br label %cond.end154, !dbg !13667

cond.false152:                                    ; preds = %if.end146
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13667
  %call153 = call i32 @stv090x_write_reg(%struct.stv090x_state* %62, i32 62487, i8 zeroext 0) #9, !dbg !13667
  br label %cond.end154, !dbg !13667

cond.end154:                                      ; preds = %cond.false152, %cond.true150
  %cond155 = phi i32 [ %call151, %cond.true150 ], [ %call153, %cond.false152 ], !dbg !13667
  %cmp156 = icmp slt i32 %cond155, 0, !dbg !13669
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !13670

if.then158:                                       ; preds = %cond.end154
  br label %err, !dbg !13671

if.end159:                                        ; preds = %cond.end154
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13672
  %demod160 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %63, i32 0, i32 1, !dbg !13672
  %64 = load i32, i32* %demod160, align 4, !dbg !13672
  %cmp161 = icmp eq i32 %64, 2, !dbg !13672
  br i1 %cmp161, label %cond.true163, label %cond.false165, !dbg !13672

cond.true163:                                     ; preds = %if.end159
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13672
  %call164 = call i32 @stv090x_write_reg(%struct.stv090x_state* %65, i32 61997, i8 zeroext 80) #9, !dbg !13672
  br label %cond.end167, !dbg !13672

cond.false165:                                    ; preds = %if.end159
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13672
  %call166 = call i32 @stv090x_write_reg(%struct.stv090x_state* %66, i32 62509, i8 zeroext 80) #9, !dbg !13672
  br label %cond.end167, !dbg !13672

cond.end167:                                      ; preds = %cond.false165, %cond.true163
  %cond168 = phi i32 [ %call164, %cond.true163 ], [ %call166, %cond.false165 ], !dbg !13672
  %cmp169 = icmp slt i32 %cond168, 0, !dbg !13674
  br i1 %cmp169, label %if.then171, label %if.end172, !dbg !13675

if.then171:                                       ; preds = %cond.end167
  br label %err, !dbg !13676

if.end172:                                        ; preds = %cond.end167
  %67 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13677
  %internal173 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %67, i32 0, i32 3, !dbg !13679
  %68 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal173, align 8, !dbg !13679
  %dev_ver174 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %68, i32 0, i32 5, !dbg !13680
  %69 = load i32, i32* %dev_ver174, align 4, !dbg !13680
  %cmp175 = icmp uge i32 %69, 48, !dbg !13681
  br i1 %cmp175, label %if.then177, label %if.else204, !dbg !13682

if.then177:                                       ; preds = %if.end172
  %70 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13683
  %demod178 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %70, i32 0, i32 1, !dbg !13683
  %71 = load i32, i32* %demod178, align 4, !dbg !13683
  %cmp179 = icmp eq i32 %71, 2, !dbg !13683
  br i1 %cmp179, label %cond.true181, label %cond.false183, !dbg !13683

cond.true181:                                     ; preds = %if.then177
  %72 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13683
  %call182 = call i32 @stv090x_write_reg(%struct.stv090x_state* %72, i32 62013, i8 zeroext -103) #9, !dbg !13683
  br label %cond.end185, !dbg !13683

cond.false183:                                    ; preds = %if.then177
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13683
  %call184 = call i32 @stv090x_write_reg(%struct.stv090x_state* %73, i32 62525, i8 zeroext -103) #9, !dbg !13683
  br label %cond.end185, !dbg !13683

cond.end185:                                      ; preds = %cond.false183, %cond.true181
  %cond186 = phi i32 [ %call182, %cond.true181 ], [ %call184, %cond.false183 ], !dbg !13683
  %cmp187 = icmp slt i32 %cond186, 0, !dbg !13686
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !13687

if.then189:                                       ; preds = %cond.end185
  br label %err, !dbg !13688

if.end190:                                        ; preds = %cond.end185
  %74 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13689
  %demod191 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %74, i32 0, i32 1, !dbg !13689
  %75 = load i32, i32* %demod191, align 4, !dbg !13689
  %cmp192 = icmp eq i32 %75, 2, !dbg !13689
  br i1 %cmp192, label %cond.true194, label %cond.false196, !dbg !13689

cond.true194:                                     ; preds = %if.end190
  %76 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13689
  %call195 = call i32 @stv090x_write_reg(%struct.stv090x_state* %76, i32 62041, i8 zeroext -104) #9, !dbg !13689
  br label %cond.end198, !dbg !13689

cond.false196:                                    ; preds = %if.end190
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13689
  %call197 = call i32 @stv090x_write_reg(%struct.stv090x_state* %77, i32 62553, i8 zeroext -104) #9, !dbg !13689
  br label %cond.end198, !dbg !13689

cond.end198:                                      ; preds = %cond.false196, %cond.true194
  %cond199 = phi i32 [ %call195, %cond.true194 ], [ %call197, %cond.false196 ], !dbg !13689
  %cmp200 = icmp slt i32 %cond199, 0, !dbg !13691
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !13692

if.then202:                                       ; preds = %cond.end198
  br label %err, !dbg !13693

if.end203:                                        ; preds = %cond.end198
  br label %if.end237, !dbg !13694

if.else204:                                       ; preds = %if.end172
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13695
  %internal205 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %78, i32 0, i32 3, !dbg !13697
  %79 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal205, align 8, !dbg !13697
  %dev_ver206 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %79, i32 0, i32 5, !dbg !13698
  %80 = load i32, i32* %dev_ver206, align 4, !dbg !13698
  %cmp207 = icmp uge i32 %80, 32, !dbg !13699
  br i1 %cmp207, label %if.then209, label %if.end236, !dbg !13700

if.then209:                                       ; preds = %if.else204
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13701
  %demod210 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %81, i32 0, i32 1, !dbg !13701
  %82 = load i32, i32* %demod210, align 4, !dbg !13701
  %cmp211 = icmp eq i32 %82, 2, !dbg !13701
  br i1 %cmp211, label %cond.true213, label %cond.false215, !dbg !13701

cond.true213:                                     ; preds = %if.then209
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13701
  %call214 = call i32 @stv090x_write_reg(%struct.stv090x_state* %83, i32 62013, i8 zeroext 106) #9, !dbg !13701
  br label %cond.end217, !dbg !13701

cond.false215:                                    ; preds = %if.then209
  %84 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13701
  %call216 = call i32 @stv090x_write_reg(%struct.stv090x_state* %84, i32 62525, i8 zeroext 106) #9, !dbg !13701
  br label %cond.end217, !dbg !13701

cond.end217:                                      ; preds = %cond.false215, %cond.true213
  %cond218 = phi i32 [ %call214, %cond.true213 ], [ %call216, %cond.false215 ], !dbg !13701
  %cmp219 = icmp slt i32 %cond218, 0, !dbg !13704
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !13705

if.then221:                                       ; preds = %cond.end217
  br label %err, !dbg !13706

if.end222:                                        ; preds = %cond.end217
  %85 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13707
  %demod223 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %85, i32 0, i32 1, !dbg !13707
  %86 = load i32, i32* %demod223, align 4, !dbg !13707
  %cmp224 = icmp eq i32 %86, 2, !dbg !13707
  br i1 %cmp224, label %cond.true226, label %cond.false228, !dbg !13707

cond.true226:                                     ; preds = %if.end222
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13707
  %call227 = call i32 @stv090x_write_reg(%struct.stv090x_state* %87, i32 62041, i8 zeroext -107) #9, !dbg !13707
  br label %cond.end230, !dbg !13707

cond.false228:                                    ; preds = %if.end222
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13707
  %call229 = call i32 @stv090x_write_reg(%struct.stv090x_state* %88, i32 62553, i8 zeroext -107) #9, !dbg !13707
  br label %cond.end230, !dbg !13707

cond.end230:                                      ; preds = %cond.false228, %cond.true226
  %cond231 = phi i32 [ %call227, %cond.true226 ], [ %call229, %cond.false228 ], !dbg !13707
  %cmp232 = icmp slt i32 %cond231, 0, !dbg !13709
  br i1 %cmp232, label %if.then234, label %if.end235, !dbg !13710

if.then234:                                       ; preds = %cond.end230
  br label %err, !dbg !13711

if.end235:                                        ; preds = %cond.end230
  br label %if.end236, !dbg !13712

if.end236:                                        ; preds = %if.end235, %if.else204
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.end203
  %89 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13713
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %89, i32 0, i32 19, !dbg !13715
  %90 = load i32, i32* %srate, align 4, !dbg !13715
  %cmp238 = icmp ule i32 %90, 2000000, !dbg !13716
  br i1 %cmp238, label %if.then240, label %if.else241, !dbg !13717

if.then240:                                       ; preds = %if.end237
  store i32 1000, i32* %car_step, align 4, !dbg !13718
  br label %if.end254, !dbg !13719

if.else241:                                       ; preds = %if.end237
  %91 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13720
  %srate242 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %91, i32 0, i32 19, !dbg !13722
  %92 = load i32, i32* %srate242, align 4, !dbg !13722
  %cmp243 = icmp ule i32 %92, 5000000, !dbg !13723
  br i1 %cmp243, label %if.then245, label %if.else246, !dbg !13724

if.then245:                                       ; preds = %if.else241
  store i32 2000, i32* %car_step, align 4, !dbg !13725
  br label %if.end253, !dbg !13726

if.else246:                                       ; preds = %if.else241
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13727
  %srate247 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %93, i32 0, i32 19, !dbg !13729
  %94 = load i32, i32* %srate247, align 4, !dbg !13729
  %cmp248 = icmp ule i32 %94, 12000000, !dbg !13730
  br i1 %cmp248, label %if.then250, label %if.else251, !dbg !13731

if.then250:                                       ; preds = %if.else246
  store i32 3000, i32* %car_step, align 4, !dbg !13732
  br label %if.end252, !dbg !13733

if.else251:                                       ; preds = %if.else246
  store i32 5000, i32* %car_step, align 4, !dbg !13734
  br label %if.end252

if.end252:                                        ; preds = %if.else251, %if.then250
  br label %if.end253

if.end253:                                        ; preds = %if.end252, %if.then245
  br label %if.end254

if.end254:                                        ; preds = %if.end253, %if.then240
  %95 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13735
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %95, i32 0, i32 21, !dbg !13736
  %96 = load i32, i32* %search_range, align 4, !dbg !13736
  %div = sdiv i32 %96, 1000, !dbg !13737
  %97 = load i32, i32* %car_step, align 4, !dbg !13738
  %div255 = udiv i32 %div, %97, !dbg !13739
  %add = add i32 -1, %div255, !dbg !13740
  store i32 %add, i32* %steps, align 4, !dbg !13741
  %98 = load i32, i32* %steps, align 4, !dbg !13742
  %div256 = sdiv i32 %98, 2, !dbg !13742
  store i32 %div256, i32* %steps, align 4, !dbg !13742
  %99 = load i32, i32* %steps, align 4, !dbg !13743
  %mul = mul i32 2, %99, !dbg !13744
  %add257 = add i32 %mul, 1, !dbg !13745
  store i32 %add257, i32* %steps, align 4, !dbg !13746
  %100 = load i32, i32* %steps, align 4, !dbg !13747
  %cmp258 = icmp slt i32 %100, 0, !dbg !13749
  br i1 %cmp258, label %if.then260, label %if.else261, !dbg !13750

if.then260:                                       ; preds = %if.end254
  store i32 1, i32* %steps, align 4, !dbg !13751
  br label %if.end269, !dbg !13752

if.else261:                                       ; preds = %if.end254
  %101 = load i32, i32* %steps, align 4, !dbg !13753
  %cmp262 = icmp sgt i32 %101, 10, !dbg !13755
  br i1 %cmp262, label %if.then264, label %if.end268, !dbg !13756

if.then264:                                       ; preds = %if.else261
  store i32 11, i32* %steps, align 4, !dbg !13757
  %102 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13759
  %search_range265 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %102, i32 0, i32 21, !dbg !13760
  %103 = load i32, i32* %search_range265, align 4, !dbg !13760
  %div266 = sdiv i32 %103, 1000, !dbg !13761
  %div267 = sdiv i32 %div266, 10, !dbg !13762
  store i32 %div267, i32* %car_step, align 4, !dbg !13763
  br label %if.end268, !dbg !13764

if.end268:                                        ; preds = %if.then264, %if.else261
  br label %if.end269

if.end269:                                        ; preds = %if.end268, %if.then260
  store i32 0, i32* %cur_step, align 4, !dbg !13765
  store i32 1, i32* %dir, align 4, !dbg !13766
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13767
  %frequency = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %104, i32 0, i32 18, !dbg !13768
  %105 = load i32, i32* %frequency, align 8, !dbg !13768
  store i32 %105, i32* %freq, align 4, !dbg !13769
  br label %while.cond, !dbg !13770

while.cond:                                       ; preds = %if.end544, %if.end269
  %106 = load i32, i32* %tmg_lock, align 4, !dbg !13771
  %tobool = icmp ne i32 %106, 0, !dbg !13771
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !13772

land.rhs:                                         ; preds = %while.cond
  %107 = load i32, i32* %cur_step, align 4, !dbg !13773
  %108 = load i32, i32* %steps, align 4, !dbg !13774
  %cmp270 = icmp slt i32 %107, %108, !dbg !13775
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %109 = phi i1 [ false, %while.cond ], [ %cmp270, %land.rhs ], !dbg !13776
  br i1 %109, label %while.body, label %while.end, !dbg !13770

while.body:                                       ; preds = %land.end
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13777
  %demod272 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %110, i32 0, i32 1, !dbg !13777
  %111 = load i32, i32* %demod272, align 4, !dbg !13777
  %cmp273 = icmp eq i32 %111, 2, !dbg !13777
  br i1 %cmp273, label %cond.true275, label %cond.false277, !dbg !13777

cond.true275:                                     ; preds = %while.body
  %112 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13777
  %call276 = call i32 @stv090x_write_reg(%struct.stv090x_state* %112, i32 61974, i8 zeroext 95) #9, !dbg !13777
  br label %cond.end279, !dbg !13777

cond.false277:                                    ; preds = %while.body
  %113 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13777
  %call278 = call i32 @stv090x_write_reg(%struct.stv090x_state* %113, i32 62486, i8 zeroext 95) #9, !dbg !13777
  br label %cond.end279, !dbg !13777

cond.end279:                                      ; preds = %cond.false277, %cond.true275
  %cond280 = phi i32 [ %call276, %cond.true275 ], [ %call278, %cond.false277 ], !dbg !13777
  %cmp281 = icmp slt i32 %cond280, 0, !dbg !13780
  br i1 %cmp281, label %if.then283, label %if.end284, !dbg !13781

if.then283:                                       ; preds = %cond.end279
  br label %err, !dbg !13782

if.end284:                                        ; preds = %cond.end279
  %114 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13783
  %demod285 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %114, i32 0, i32 1, !dbg !13783
  %115 = load i32, i32* %demod285, align 4, !dbg !13783
  %cmp286 = icmp eq i32 %115, 2, !dbg !13783
  br i1 %cmp286, label %cond.true288, label %cond.false290, !dbg !13783

cond.true288:                                     ; preds = %if.end284
  %116 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13783
  %call289 = call i32 @stv090x_write_reg(%struct.stv090x_state* %116, i32 62024, i8 zeroext 0) #9, !dbg !13783
  br label %cond.end292, !dbg !13783

cond.false290:                                    ; preds = %if.end284
  %117 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13783
  %call291 = call i32 @stv090x_write_reg(%struct.stv090x_state* %117, i32 62536, i8 zeroext 0) #9, !dbg !13783
  br label %cond.end292, !dbg !13783

cond.end292:                                      ; preds = %cond.false290, %cond.true288
  %cond293 = phi i32 [ %call289, %cond.true288 ], [ %call291, %cond.false290 ], !dbg !13783
  %cmp294 = icmp slt i32 %cond293, 0, !dbg !13785
  br i1 %cmp294, label %if.then296, label %if.end297, !dbg !13786

if.then296:                                       ; preds = %cond.end292
  br label %err, !dbg !13787

if.end297:                                        ; preds = %cond.end292
  %118 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13788
  %demod298 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %118, i32 0, i32 1, !dbg !13788
  %119 = load i32, i32* %demod298, align 4, !dbg !13788
  %cmp299 = icmp eq i32 %119, 2, !dbg !13788
  br i1 %cmp299, label %cond.true301, label %cond.false303, !dbg !13788

cond.true301:                                     ; preds = %if.end297
  %120 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13788
  %call302 = call i32 @stv090x_write_reg(%struct.stv090x_state* %120, i32 62025, i8 zeroext 0) #9, !dbg !13788
  br label %cond.end305, !dbg !13788

cond.false303:                                    ; preds = %if.end297
  %121 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13788
  %call304 = call i32 @stv090x_write_reg(%struct.stv090x_state* %121, i32 62537, i8 zeroext 0) #9, !dbg !13788
  br label %cond.end305, !dbg !13788

cond.end305:                                      ; preds = %cond.false303, %cond.true301
  %cond306 = phi i32 [ %call302, %cond.true301 ], [ %call304, %cond.false303 ], !dbg !13788
  %cmp307 = icmp slt i32 %cond306, 0, !dbg !13790
  br i1 %cmp307, label %if.then309, label %if.end310, !dbg !13791

if.then309:                                       ; preds = %cond.end305
  br label %err, !dbg !13792

if.end310:                                        ; preds = %cond.end305
  %122 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13793
  %demod311 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %122, i32 0, i32 1, !dbg !13793
  %123 = load i32, i32* %demod311, align 4, !dbg !13793
  %cmp312 = icmp eq i32 %123, 2, !dbg !13793
  br i1 %cmp312, label %cond.true314, label %cond.false316, !dbg !13793

cond.true314:                                     ; preds = %if.end310
  %124 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13793
  %call315 = call i32 @stv090x_write_reg(%struct.stv090x_state* %124, i32 62046, i8 zeroext 0) #9, !dbg !13793
  br label %cond.end318, !dbg !13793

cond.false316:                                    ; preds = %if.end310
  %125 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13793
  %call317 = call i32 @stv090x_write_reg(%struct.stv090x_state* %125, i32 62558, i8 zeroext 0) #9, !dbg !13793
  br label %cond.end318, !dbg !13793

cond.end318:                                      ; preds = %cond.false316, %cond.true314
  %cond319 = phi i32 [ %call315, %cond.true314 ], [ %call317, %cond.false316 ], !dbg !13793
  %cmp320 = icmp slt i32 %cond319, 0, !dbg !13795
  br i1 %cmp320, label %if.then322, label %if.end323, !dbg !13796

if.then322:                                       ; preds = %cond.end318
  br label %err, !dbg !13797

if.end323:                                        ; preds = %cond.end318
  %126 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13798
  %demod324 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %126, i32 0, i32 1, !dbg !13798
  %127 = load i32, i32* %demod324, align 4, !dbg !13798
  %cmp325 = icmp eq i32 %127, 2, !dbg !13798
  br i1 %cmp325, label %cond.true327, label %cond.false329, !dbg !13798

cond.true327:                                     ; preds = %if.end323
  %128 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13798
  %call328 = call i32 @stv090x_write_reg(%struct.stv090x_state* %128, i32 62047, i8 zeroext 0) #9, !dbg !13798
  br label %cond.end331, !dbg !13798

cond.false329:                                    ; preds = %if.end323
  %129 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13798
  %call330 = call i32 @stv090x_write_reg(%struct.stv090x_state* %129, i32 62559, i8 zeroext 0) #9, !dbg !13798
  br label %cond.end331, !dbg !13798

cond.end331:                                      ; preds = %cond.false329, %cond.true327
  %cond332 = phi i32 [ %call328, %cond.true327 ], [ %call330, %cond.false329 ], !dbg !13798
  %cmp333 = icmp slt i32 %cond332, 0, !dbg !13800
  br i1 %cmp333, label %if.then335, label %if.end336, !dbg !13801

if.then335:                                       ; preds = %cond.end331
  br label %err, !dbg !13802

if.end336:                                        ; preds = %cond.end331
  %130 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13803
  %demod337 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %130, i32 0, i32 1, !dbg !13803
  %131 = load i32, i32* %demod337, align 4, !dbg !13803
  %cmp338 = icmp eq i32 %131, 2, !dbg !13803
  br i1 %cmp338, label %cond.true340, label %cond.false342, !dbg !13803

cond.true340:                                     ; preds = %if.end336
  %132 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13803
  %call341 = call i32 @stv090x_write_reg(%struct.stv090x_state* %132, i32 61974, i8 zeroext 64) #9, !dbg !13803
  br label %cond.end344, !dbg !13803

cond.false342:                                    ; preds = %if.end336
  %133 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13803
  %call343 = call i32 @stv090x_write_reg(%struct.stv090x_state* %133, i32 62486, i8 zeroext 64) #9, !dbg !13803
  br label %cond.end344, !dbg !13803

cond.end344:                                      ; preds = %cond.false342, %cond.true340
  %cond345 = phi i32 [ %call341, %cond.true340 ], [ %call343, %cond.false342 ], !dbg !13803
  %cmp346 = icmp slt i32 %cond345, 0, !dbg !13805
  br i1 %cmp346, label %if.then348, label %if.end349, !dbg !13806

if.then348:                                       ; preds = %cond.end344
  br label %err, !dbg !13807

if.end349:                                        ; preds = %cond.end344
  call void @msleep(i32 50) #9, !dbg !13808
  store i32 0, i32* %i, align 4, !dbg !13809
  br label %for.cond, !dbg !13811

for.cond:                                         ; preds = %for.inc, %if.end349
  %134 = load i32, i32* %i, align 4, !dbg !13812
  %cmp350 = icmp slt i32 %134, 10, !dbg !13814
  br i1 %cmp350, label %for.body, label %for.end, !dbg !13815

for.body:                                         ; preds = %for.cond
  %135 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13816
  %demod352 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %135, i32 0, i32 1, !dbg !13816
  %136 = load i32, i32* %demod352, align 4, !dbg !13816
  %cmp353 = icmp eq i32 %136, 2, !dbg !13816
  br i1 %cmp353, label %cond.true355, label %cond.false357, !dbg !13816

cond.true355:                                     ; preds = %for.body
  %137 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13816
  %call356 = call i32 @stv090x_read_reg(%struct.stv090x_state* %137, i32 61970) #9, !dbg !13816
  br label %cond.end359, !dbg !13816

cond.false357:                                    ; preds = %for.body
  %138 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13816
  %call358 = call i32 @stv090x_read_reg(%struct.stv090x_state* %138, i32 62482) #9, !dbg !13816
  br label %cond.end359, !dbg !13816

cond.end359:                                      ; preds = %cond.false357, %cond.true355
  %cond360 = phi i32 [ %call356, %cond.true355 ], [ %call358, %cond.false357 ], !dbg !13816
  store i32 %cond360, i32* %reg, align 4, !dbg !13818
  %139 = load i32, i32* %reg, align 4, !dbg !13819
  %shr = lshr i32 %139, 5, !dbg !13819
  %and361 = and i32 %shr, 3, !dbg !13819
  %cmp362 = icmp uge i32 %and361, 2, !dbg !13821
  br i1 %cmp362, label %if.then364, label %if.end365, !dbg !13822

if.then364:                                       ; preds = %cond.end359
  %140 = load i32, i32* %tmg_cpt, align 4, !dbg !13823
  %inc = add i32 %140, 1, !dbg !13823
  store i32 %inc, i32* %tmg_cpt, align 4, !dbg !13823
  br label %if.end365, !dbg !13824

if.end365:                                        ; preds = %if.then364, %cond.end359
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13825
  %demod366 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %141, i32 0, i32 1, !dbg !13825
  %142 = load i32, i32* %demod366, align 4, !dbg !13825
  %cmp367 = icmp eq i32 %142, 2, !dbg !13825
  br i1 %cmp367, label %cond.true369, label %cond.false371, !dbg !13825

cond.true369:                                     ; preds = %if.end365
  %143 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13825
  %call370 = call i32 @stv090x_read_reg(%struct.stv090x_state* %143, i32 62006) #9, !dbg !13825
  br label %cond.end373, !dbg !13825

cond.false371:                                    ; preds = %if.end365
  %144 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13825
  %call372 = call i32 @stv090x_read_reg(%struct.stv090x_state* %144, i32 62518) #9, !dbg !13825
  br label %cond.end373, !dbg !13825

cond.end373:                                      ; preds = %cond.false371, %cond.true369
  %cond374 = phi i32 [ %call370, %cond.true369 ], [ %call372, %cond.false371 ], !dbg !13825
  %shl = shl i32 %cond374, 8, !dbg !13826
  %145 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13827
  %demod375 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %145, i32 0, i32 1, !dbg !13827
  %146 = load i32, i32* %demod375, align 4, !dbg !13827
  %cmp376 = icmp eq i32 %146, 2, !dbg !13827
  br i1 %cmp376, label %cond.true378, label %cond.false380, !dbg !13827

cond.true378:                                     ; preds = %cond.end373
  %147 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13827
  %call379 = call i32 @stv090x_read_reg(%struct.stv090x_state* %147, i32 62007) #9, !dbg !13827
  br label %cond.end382, !dbg !13827

cond.false380:                                    ; preds = %cond.end373
  %148 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13827
  %call381 = call i32 @stv090x_read_reg(%struct.stv090x_state* %148, i32 62519) #9, !dbg !13827
  br label %cond.end382, !dbg !13827

cond.end382:                                      ; preds = %cond.false380, %cond.true378
  %cond383 = phi i32 [ %call379, %cond.true378 ], [ %call381, %cond.false380 ], !dbg !13827
  %or384 = or i32 %shl, %cond383, !dbg !13828
  %149 = load i32, i32* %agc2, align 4, !dbg !13829
  %add385 = add i32 %149, %or384, !dbg !13829
  store i32 %add385, i32* %agc2, align 4, !dbg !13829
  br label %for.inc, !dbg !13830

for.inc:                                          ; preds = %cond.end382
  %150 = load i32, i32* %i, align 4, !dbg !13831
  %inc386 = add i32 %150, 1, !dbg !13831
  store i32 %inc386, i32* %i, align 4, !dbg !13831
  br label %for.cond, !dbg !13832, !llvm.loop !13833

for.end:                                          ; preds = %for.cond
  %151 = load i32, i32* %agc2, align 4, !dbg !13835
  %div387 = udiv i32 %151, 10, !dbg !13835
  store i32 %div387, i32* %agc2, align 4, !dbg !13835
  %152 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13836
  %153 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13837
  %internal388 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %153, i32 0, i32 3, !dbg !13838
  %154 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal388, align 8, !dbg !13838
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %154, i32 0, i32 4, !dbg !13839
  %155 = load i32, i32* %mclk, align 8, !dbg !13839
  %call389 = call i32 @stv090x_get_srate(%struct.stv090x_state* %152, i32 %155) #9, !dbg !13840
  store i32 %call389, i32* %srate_coarse, align 4, !dbg !13841
  %156 = load i32, i32* %cur_step, align 4, !dbg !13842
  %inc390 = add i32 %156, 1, !dbg !13842
  store i32 %inc390, i32* %cur_step, align 4, !dbg !13842
  %157 = load i32, i32* %dir, align 4, !dbg !13843
  %mul391 = mul i32 %157, -1, !dbg !13843
  store i32 %mul391, i32* %dir, align 4, !dbg !13843
  %158 = load i32, i32* %tmg_cpt, align 4, !dbg !13844
  %cmp392 = icmp sge i32 %158, 5, !dbg !13846
  br i1 %cmp392, label %land.lhs.true, label %if.else403, !dbg !13847

land.lhs.true:                                    ; preds = %for.end
  %159 = load i32, i32* %agc2, align 4, !dbg !13848
  %160 = load i32, i32* %agc2th, align 4, !dbg !13849
  %cmp394 = icmp ult i32 %159, %160, !dbg !13850
  br i1 %cmp394, label %land.lhs.true396, label %if.else403, !dbg !13851

land.lhs.true396:                                 ; preds = %land.lhs.true
  %161 = load i32, i32* %srate_coarse, align 4, !dbg !13852
  %cmp397 = icmp ult i32 %161, 50000000, !dbg !13853
  br i1 %cmp397, label %land.lhs.true399, label %if.else403, !dbg !13854

land.lhs.true399:                                 ; preds = %land.lhs.true396
  %162 = load i32, i32* %srate_coarse, align 4, !dbg !13855
  %cmp400 = icmp ugt i32 %162, 850000, !dbg !13856
  br i1 %cmp400, label %if.then402, label %if.else403, !dbg !13857

if.then402:                                       ; preds = %land.lhs.true399
  store i32 1, i32* %tmg_lock, align 4, !dbg !13858
  br label %if.end544, !dbg !13859

if.else403:                                       ; preds = %land.lhs.true399, %land.lhs.true396, %land.lhs.true, %for.end
  %163 = load i32, i32* %cur_step, align 4, !dbg !13860
  %164 = load i32, i32* %steps, align 4, !dbg !13862
  %cmp404 = icmp slt i32 %163, %164, !dbg !13863
  br i1 %cmp404, label %if.then406, label %if.end543, !dbg !13864

if.then406:                                       ; preds = %if.else403
  %165 = load i32, i32* %dir, align 4, !dbg !13865
  %cmp407 = icmp sgt i32 %165, 0, !dbg !13868
  br i1 %cmp407, label %if.then409, label %if.else412, !dbg !13869

if.then409:                                       ; preds = %if.then406
  %166 = load i32, i32* %cur_step, align 4, !dbg !13870
  %167 = load i32, i32* %car_step, align 4, !dbg !13871
  %mul410 = mul i32 %166, %167, !dbg !13872
  %168 = load i32, i32* %freq, align 4, !dbg !13873
  %add411 = add i32 %168, %mul410, !dbg !13873
  store i32 %add411, i32* %freq, align 4, !dbg !13873
  br label %if.end414, !dbg !13874

if.else412:                                       ; preds = %if.then406
  %169 = load i32, i32* %cur_step, align 4, !dbg !13875
  %170 = load i32, i32* %car_step, align 4, !dbg !13876
  %mul413 = mul i32 %169, %170, !dbg !13877
  %171 = load i32, i32* %freq, align 4, !dbg !13878
  %sub = sub i32 %171, %mul413, !dbg !13878
  store i32 %sub, i32* %freq, align 4, !dbg !13878
  br label %if.end414

if.end414:                                        ; preds = %if.else412, %if.then409
  %172 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13879
  %call415 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %172, i32 1) #9, !dbg !13881
  %cmp416 = icmp slt i32 %call415, 0, !dbg !13882
  br i1 %cmp416, label %if.then418, label %if.end419, !dbg !13883

if.then418:                                       ; preds = %if.end414
  br label %err, !dbg !13884

if.end419:                                        ; preds = %if.end414
  %173 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13885
  %config = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %173, i32 0, i32 5, !dbg !13887
  %174 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !13887
  %tuner_set_frequency = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %174, i32 0, i32 19, !dbg !13888
  %175 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_frequency, align 8, !dbg !13888
  %tobool420 = icmp ne i32 (%struct.dvb_frontend*, i32)* %175, null, !dbg !13885
  br i1 %tobool420, label %if.then421, label %if.end429, !dbg !13889

if.then421:                                       ; preds = %if.end419
  %176 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13890
  %config422 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %176, i32 0, i32 5, !dbg !13893
  %177 = load %struct.stv090x_config*, %struct.stv090x_config** %config422, align 8, !dbg !13893
  %tuner_set_frequency423 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %177, i32 0, i32 19, !dbg !13894
  %178 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_frequency423, align 8, !dbg !13894
  %179 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !13895
  %180 = load i32, i32* %freq, align 4, !dbg !13896
  %call424 = call i32 %178(%struct.dvb_frontend* %179, i32 %180) #9, !dbg !13890
  %cmp425 = icmp slt i32 %call424, 0, !dbg !13897
  br i1 %cmp425, label %if.then427, label %if.end428, !dbg !13898

if.then427:                                       ; preds = %if.then421
  br label %err_gateoff, !dbg !13899

if.end428:                                        ; preds = %if.then421
  br label %if.end429, !dbg !13900

if.end429:                                        ; preds = %if.end428, %if.end419
  %181 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13901
  %config430 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %181, i32 0, i32 5, !dbg !13903
  %182 = load %struct.stv090x_config*, %struct.stv090x_config** %config430, align 8, !dbg !13903
  %tuner_set_bandwidth = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %182, i32 0, i32 21, !dbg !13904
  %183 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth, align 8, !dbg !13904
  %tobool431 = icmp ne i32 (%struct.dvb_frontend*, i32)* %183, null, !dbg !13901
  br i1 %tobool431, label %if.then432, label %if.end440, !dbg !13905

if.then432:                                       ; preds = %if.end429
  %184 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13906
  %config433 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %184, i32 0, i32 5, !dbg !13909
  %185 = load %struct.stv090x_config*, %struct.stv090x_config** %config433, align 8, !dbg !13909
  %tuner_set_bandwidth434 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %185, i32 0, i32 21, !dbg !13910
  %186 = load i32 (%struct.dvb_frontend*, i32)*, i32 (%struct.dvb_frontend*, i32)** %tuner_set_bandwidth434, align 8, !dbg !13910
  %187 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !13911
  %188 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13912
  %tuner_bw = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %188, i32 0, i32 20, !dbg !13913
  %189 = load i32, i32* %tuner_bw, align 8, !dbg !13913
  %call435 = call i32 %186(%struct.dvb_frontend* %187, i32 %189) #9, !dbg !13906
  %cmp436 = icmp slt i32 %call435, 0, !dbg !13914
  br i1 %cmp436, label %if.then438, label %if.end439, !dbg !13915

if.then438:                                       ; preds = %if.then432
  br label %err_gateoff, !dbg !13916

if.end439:                                        ; preds = %if.then432
  br label %if.end440, !dbg !13917

if.end440:                                        ; preds = %if.end439, %if.end429
  %190 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13918
  %call441 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %190, i32 0) #9, !dbg !13920
  %cmp442 = icmp slt i32 %call441, 0, !dbg !13921
  br i1 %cmp442, label %if.then444, label %if.end445, !dbg !13922

if.then444:                                       ; preds = %if.end440
  br label %err, !dbg !13923

if.end445:                                        ; preds = %if.end440
  call void @msleep(i32 50) #9, !dbg !13924
  %191 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13925
  %call446 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %191, i32 1) #9, !dbg !13927
  %cmp447 = icmp slt i32 %call446, 0, !dbg !13928
  br i1 %cmp447, label %if.then449, label %if.end450, !dbg !13929

if.then449:                                       ; preds = %if.end445
  br label %err, !dbg !13930

if.end450:                                        ; preds = %if.end445
  %192 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13931
  %config451 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %192, i32 0, i32 5, !dbg !13933
  %193 = load %struct.stv090x_config*, %struct.stv090x_config** %config451, align 8, !dbg !13933
  %tuner_get_status = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %193, i32 0, i32 26, !dbg !13934
  %194 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_status, align 8, !dbg !13934
  %tobool452 = icmp ne i32 (%struct.dvb_frontend*, i32*)* %194, null, !dbg !13931
  br i1 %tobool452, label %if.then453, label %if.end461, !dbg !13935

if.then453:                                       ; preds = %if.end450
  %195 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13936
  %config454 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %195, i32 0, i32 5, !dbg !13939
  %196 = load %struct.stv090x_config*, %struct.stv090x_config** %config454, align 8, !dbg !13939
  %tuner_get_status455 = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %196, i32 0, i32 26, !dbg !13940
  %197 = load i32 (%struct.dvb_frontend*, i32*)*, i32 (%struct.dvb_frontend*, i32*)** %tuner_get_status455, align 8, !dbg !13940
  %198 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe, align 8, !dbg !13941
  %call456 = call i32 %197(%struct.dvb_frontend* %198, i32* %reg) #9, !dbg !13936
  %cmp457 = icmp slt i32 %call456, 0, !dbg !13942
  br i1 %cmp457, label %if.then459, label %if.end460, !dbg !13943

if.then459:                                       ; preds = %if.then453
  br label %err_gateoff, !dbg !13944

if.end460:                                        ; preds = %if.then453
  br label %if.end461, !dbg !13945

if.end461:                                        ; preds = %if.end460, %if.end450
  %199 = load i32, i32* %reg, align 4, !dbg !13946
  %tobool462 = icmp ne i32 %199, 0, !dbg !13946
  br i1 %tobool462, label %if.then463, label %if.else499, !dbg !13948

if.then463:                                       ; preds = %if.end461
  br label %do.body, !dbg !13949

do.body:                                          ; preds = %if.then463
  %200 = load i32, i32* @verbose, align 4, !dbg !13950
  %cmp464 = icmp ugt i32 %200, 0, !dbg !13950
  br i1 %cmp464, label %land.lhs.true466, label %if.else471, !dbg !13950

land.lhs.true466:                                 ; preds = %do.body
  %201 = load i32, i32* @verbose, align 4, !dbg !13950
  %cmp467 = icmp ugt i32 %201, 3, !dbg !13950
  br i1 %cmp467, label %if.then469, label %if.else471, !dbg !13955

if.then469:                                       ; preds = %land.lhs.true466
  %call470 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.93, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13950
  br label %if.end498, !dbg !13950

if.else471:                                       ; preds = %land.lhs.true466, %do.body
  %202 = load i32, i32* @verbose, align 4, !dbg !13956
  %cmp472 = icmp ugt i32 %202, 1, !dbg !13956
  br i1 %cmp472, label %land.lhs.true474, label %if.else479, !dbg !13956

land.lhs.true474:                                 ; preds = %if.else471
  %203 = load i32, i32* @verbose, align 4, !dbg !13956
  %cmp475 = icmp ugt i32 %203, 3, !dbg !13956
  br i1 %cmp475, label %if.then477, label %if.else479, !dbg !13950

if.then477:                                       ; preds = %land.lhs.true474
  %call478 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13956
  br label %if.end497, !dbg !13956

if.else479:                                       ; preds = %land.lhs.true474, %if.else471
  %204 = load i32, i32* @verbose, align 4, !dbg !13958
  %cmp480 = icmp ugt i32 %204, 2, !dbg !13958
  br i1 %cmp480, label %land.lhs.true482, label %if.else487, !dbg !13958

land.lhs.true482:                                 ; preds = %if.else479
  %205 = load i32, i32* @verbose, align 4, !dbg !13958
  %cmp483 = icmp ugt i32 %205, 3, !dbg !13958
  br i1 %cmp483, label %if.then485, label %if.else487, !dbg !13956

if.then485:                                       ; preds = %land.lhs.true482
  %call486 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.95, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13958
  br label %if.end496, !dbg !13958

if.else487:                                       ; preds = %land.lhs.true482, %if.else479
  %206 = load i32, i32* @verbose, align 4, !dbg !13960
  %cmp488 = icmp ugt i32 %206, 3, !dbg !13960
  br i1 %cmp488, label %land.lhs.true490, label %if.end495, !dbg !13960

land.lhs.true490:                                 ; preds = %if.else487
  %207 = load i32, i32* @verbose, align 4, !dbg !13960
  %cmp491 = icmp ugt i32 %207, 3, !dbg !13960
  br i1 %cmp491, label %if.then493, label %if.end495, !dbg !13958

if.then493:                                       ; preds = %land.lhs.true490
  %call494 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13960
  br label %if.end495, !dbg !13960

if.end495:                                        ; preds = %if.then493, %land.lhs.true490, %if.else487
  br label %if.end496

if.end496:                                        ; preds = %if.end495, %if.then485
  br label %if.end497

if.end497:                                        ; preds = %if.end496, %if.then477
  br label %if.end498

if.end498:                                        ; preds = %if.end497, %if.then469
  br label %do.end, !dbg !13962

do.end:                                           ; preds = %if.end498
  br label %if.end537, !dbg !13962

if.else499:                                       ; preds = %if.end461
  br label %do.body500, !dbg !13963

do.body500:                                       ; preds = %if.else499
  %208 = load i32, i32* @verbose, align 4, !dbg !13964
  %cmp501 = icmp ugt i32 %208, 0, !dbg !13964
  br i1 %cmp501, label %land.lhs.true503, label %if.else508, !dbg !13964

land.lhs.true503:                                 ; preds = %do.body500
  %209 = load i32, i32* @verbose, align 4, !dbg !13964
  %cmp504 = icmp ugt i32 %209, 3, !dbg !13964
  br i1 %cmp504, label %if.then506, label %if.else508, !dbg !13969

if.then506:                                       ; preds = %land.lhs.true503
  %call507 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.97, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13964
  br label %if.end535, !dbg !13964

if.else508:                                       ; preds = %land.lhs.true503, %do.body500
  %210 = load i32, i32* @verbose, align 4, !dbg !13970
  %cmp509 = icmp ugt i32 %210, 1, !dbg !13970
  br i1 %cmp509, label %land.lhs.true511, label %if.else516, !dbg !13970

land.lhs.true511:                                 ; preds = %if.else508
  %211 = load i32, i32* @verbose, align 4, !dbg !13970
  %cmp512 = icmp ugt i32 %211, 3, !dbg !13970
  br i1 %cmp512, label %if.then514, label %if.else516, !dbg !13964

if.then514:                                       ; preds = %land.lhs.true511
  %call515 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13970
  br label %if.end534, !dbg !13970

if.else516:                                       ; preds = %land.lhs.true511, %if.else508
  %212 = load i32, i32* @verbose, align 4, !dbg !13972
  %cmp517 = icmp ugt i32 %212, 2, !dbg !13972
  br i1 %cmp517, label %land.lhs.true519, label %if.else524, !dbg !13972

land.lhs.true519:                                 ; preds = %if.else516
  %213 = load i32, i32* @verbose, align 4, !dbg !13972
  %cmp520 = icmp ugt i32 %213, 3, !dbg !13972
  br i1 %cmp520, label %if.then522, label %if.else524, !dbg !13970

if.then522:                                       ; preds = %land.lhs.true519
  %call523 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.99, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13972
  br label %if.end533, !dbg !13972

if.else524:                                       ; preds = %land.lhs.true519, %if.else516
  %214 = load i32, i32* @verbose, align 4, !dbg !13974
  %cmp525 = icmp ugt i32 %214, 3, !dbg !13974
  br i1 %cmp525, label %land.lhs.true527, label %if.end532, !dbg !13974

land.lhs.true527:                                 ; preds = %if.else524
  %215 = load i32, i32* @verbose, align 4, !dbg !13974
  %cmp528 = icmp ugt i32 %215, 3, !dbg !13974
  br i1 %cmp528, label %if.then530, label %if.end532, !dbg !13972

if.then530:                                       ; preds = %land.lhs.true527
  %call531 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.100, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !13974
  br label %if.end532, !dbg !13974

if.end532:                                        ; preds = %if.then530, %land.lhs.true527, %if.else524
  br label %if.end533

if.end533:                                        ; preds = %if.end532, %if.then522
  br label %if.end534

if.end534:                                        ; preds = %if.end533, %if.then514
  br label %if.end535

if.end535:                                        ; preds = %if.end534, %if.then506
  br label %do.end536, !dbg !13976

do.end536:                                        ; preds = %if.end535
  br label %if.end537

if.end537:                                        ; preds = %do.end536, %do.end
  %216 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13977
  %call538 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %216, i32 0) #9, !dbg !13979
  %cmp539 = icmp slt i32 %call538, 0, !dbg !13980
  br i1 %cmp539, label %if.then541, label %if.end542, !dbg !13981

if.then541:                                       ; preds = %if.end537
  br label %err, !dbg !13982

if.end542:                                        ; preds = %if.end537
  br label %if.end543, !dbg !13983

if.end543:                                        ; preds = %if.end542, %if.else403
  br label %if.end544

if.end544:                                        ; preds = %if.end543, %if.then402
  br label %while.cond, !dbg !13770, !llvm.loop !13984

while.end:                                        ; preds = %land.end
  %217 = load i32, i32* %tmg_lock, align 4, !dbg !13986
  %tobool545 = icmp ne i32 %217, 0, !dbg !13986
  br i1 %tobool545, label %if.else547, label %if.then546, !dbg !13988

if.then546:                                       ; preds = %while.end
  store i32 0, i32* %srate_coarse, align 4, !dbg !13989
  br label %if.end551, !dbg !13990

if.else547:                                       ; preds = %while.end
  %218 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13991
  %219 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !13992
  %internal548 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %219, i32 0, i32 3, !dbg !13993
  %220 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal548, align 8, !dbg !13993
  %mclk549 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %220, i32 0, i32 4, !dbg !13994
  %221 = load i32, i32* %mclk549, align 8, !dbg !13994
  %call550 = call i32 @stv090x_get_srate(%struct.stv090x_state* %218, i32 %221) #9, !dbg !13995
  store i32 %call550, i32* %srate_coarse, align 4, !dbg !13996
  br label %if.end551

if.end551:                                        ; preds = %if.else547, %if.then546
  %222 = load i32, i32* %srate_coarse, align 4, !dbg !13997
  store i32 %222, i32* %retval, align 4, !dbg !13998
  br label %return, !dbg !13998

err_gateoff:                                      ; preds = %if.then459, %if.then438, %if.then427
  call void @llvm.dbg.label(metadata !13999), !dbg !14000
  %223 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14001
  %call552 = call i32 @stv090x_i2c_gate_ctrl(%struct.stv090x_state* %223, i32 0) #9, !dbg !14002
  br label %err, !dbg !14002

err:                                              ; preds = %err_gateoff, %if.then541, %if.then449, %if.then444, %if.then418, %if.then348, %if.then335, %if.then322, %if.then309, %if.then296, %if.then283, %if.then234, %if.then221, %if.then202, %if.then189, %if.then171, %if.then158, %if.then145, %if.then132, %if.then119, %if.then106, %if.then93, %if.then66, %if.then53, %if.then40, %if.then27, %if.then14
  call void @llvm.dbg.label(metadata !14003), !dbg !14004
  br label %do.body553, !dbg !14005

do.body553:                                       ; preds = %err
  %224 = load i32, i32* @verbose, align 4, !dbg !14006
  %cmp554 = icmp ugt i32 %224, 0, !dbg !14006
  br i1 %cmp554, label %land.lhs.true556, label %if.else561, !dbg !14006

land.lhs.true556:                                 ; preds = %do.body553
  %225 = load i32, i32* @verbose, align 4, !dbg !14006
  %cmp557 = icmp ugt i32 %225, 0, !dbg !14006
  br i1 %cmp557, label %if.then559, label %if.else561, !dbg !14011

if.then559:                                       ; preds = %land.lhs.true556
  %call560 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !14006
  br label %if.end588, !dbg !14006

if.else561:                                       ; preds = %land.lhs.true556, %do.body553
  %226 = load i32, i32* @verbose, align 4, !dbg !14012
  %cmp562 = icmp ugt i32 %226, 1, !dbg !14012
  br i1 %cmp562, label %land.lhs.true564, label %if.else569, !dbg !14012

land.lhs.true564:                                 ; preds = %if.else561
  %227 = load i32, i32* @verbose, align 4, !dbg !14012
  %cmp565 = icmp ugt i32 %227, 0, !dbg !14012
  br i1 %cmp565, label %if.then567, label %if.else569, !dbg !14006

if.then567:                                       ; preds = %land.lhs.true564
  %call568 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !14012
  br label %if.end587, !dbg !14012

if.else569:                                       ; preds = %land.lhs.true564, %if.else561
  %228 = load i32, i32* @verbose, align 4, !dbg !14014
  %cmp570 = icmp ugt i32 %228, 2, !dbg !14014
  br i1 %cmp570, label %land.lhs.true572, label %if.else577, !dbg !14014

land.lhs.true572:                                 ; preds = %if.else569
  %229 = load i32, i32* @verbose, align 4, !dbg !14014
  %cmp573 = icmp ugt i32 %229, 0, !dbg !14014
  br i1 %cmp573, label %if.then575, label %if.else577, !dbg !14012

if.then575:                                       ; preds = %land.lhs.true572
  %call576 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !14014
  br label %if.end586, !dbg !14014

if.else577:                                       ; preds = %land.lhs.true572, %if.else569
  %230 = load i32, i32* @verbose, align 4, !dbg !14016
  %cmp578 = icmp ugt i32 %230, 3, !dbg !14016
  br i1 %cmp578, label %land.lhs.true580, label %if.end585, !dbg !14016

land.lhs.true580:                                 ; preds = %if.else577
  %231 = load i32, i32* @verbose, align 4, !dbg !14016
  %cmp581 = icmp ugt i32 %231, 0, !dbg !14016
  br i1 %cmp581, label %if.then583, label %if.end585, !dbg !14014

if.then583:                                       ; preds = %land.lhs.true580
  %call584 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.stv090x_srate_srch_coarse, i64 0, i64 0)) #13, !dbg !14016
  br label %if.end585, !dbg !14016

if.end585:                                        ; preds = %if.then583, %land.lhs.true580, %if.else577
  br label %if.end586

if.end586:                                        ; preds = %if.end585, %if.then575
  br label %if.end587

if.end587:                                        ; preds = %if.end586, %if.then567
  br label %if.end588

if.end588:                                        ; preds = %if.end587, %if.then559
  br label %do.end589, !dbg !14018

do.end589:                                        ; preds = %if.end588
  store i32 -1, i32* %retval, align 4, !dbg !14019
  br label %return, !dbg !14019

return:                                           ; preds = %do.end589, %if.end551
  %232 = load i32, i32* %retval, align 4, !dbg !14020
  ret i32 %232, !dbg !14020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_srate_srch_fine(%struct.stv090x_state* %state) #0 !dbg !14021 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %srate_coarse = alloca i32, align 4
  %freq_coarse = alloca i32, align 4
  %sym = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14022, metadata !DIExpression()), !dbg !14023
  call void @llvm.dbg.declare(metadata i32* %srate_coarse, metadata !14024, metadata !DIExpression()), !dbg !14025
  call void @llvm.dbg.declare(metadata i32* %freq_coarse, metadata !14026, metadata !DIExpression()), !dbg !14027
  call void @llvm.dbg.declare(metadata i32* %sym, metadata !14028, metadata !DIExpression()), !dbg !14029
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14030, metadata !DIExpression()), !dbg !14031
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14032
  %1 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14033
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %1, i32 0, i32 3, !dbg !14034
  %2 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !14034
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %2, i32 0, i32 4, !dbg !14035
  %3 = load i32, i32* %mclk, align 8, !dbg !14035
  %call = call i32 @stv090x_get_srate(%struct.stv090x_state* %0, i32 %3) #9, !dbg !14036
  store i32 %call, i32* %srate_coarse, align 4, !dbg !14037
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14038
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !14038
  %5 = load i32, i32* %demod, align 4, !dbg !14038
  %cmp = icmp eq i32 %5, 2, !dbg !14038
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14038

cond.true:                                        ; preds = %entry
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14038
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62028) #9, !dbg !14038
  br label %cond.end, !dbg !14038

cond.false:                                       ; preds = %entry
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14038
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62540) #9, !dbg !14038
  br label %cond.end, !dbg !14038

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call1, %cond.true ], [ %call2, %cond.false ], !dbg !14038
  %shl = shl i32 %cond, 8, !dbg !14039
  store i32 %shl, i32* %freq_coarse, align 4, !dbg !14040
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14041
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !14041
  %9 = load i32, i32* %demod3, align 4, !dbg !14041
  %cmp4 = icmp eq i32 %9, 2, !dbg !14041
  br i1 %cmp4, label %cond.true5, label %cond.false7, !dbg !14041

cond.true5:                                       ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14041
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %10, i32 62029) #9, !dbg !14041
  br label %cond.end9, !dbg !14041

cond.false7:                                      ; preds = %cond.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14041
  %call8 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62541) #9, !dbg !14041
  br label %cond.end9, !dbg !14041

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !14041
  %12 = load i32, i32* %freq_coarse, align 4, !dbg !14042
  %or = or i32 %12, %cond10, !dbg !14042
  store i32 %or, i32* %freq_coarse, align 4, !dbg !14042
  %13 = load i32, i32* %srate_coarse, align 4, !dbg !14043
  %div = udiv i32 %13, 10, !dbg !14044
  %mul = mul i32 13, %div, !dbg !14045
  store i32 %mul, i32* %sym, align 4, !dbg !14046
  %14 = load i32, i32* %sym, align 4, !dbg !14047
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14049
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 19, !dbg !14050
  %16 = load i32, i32* %srate, align 4, !dbg !14050
  %cmp11 = icmp ult i32 %14, %16, !dbg !14051
  br i1 %cmp11, label %if.then, label %if.else, !dbg !14052

if.then:                                          ; preds = %cond.end9
  store i32 0, i32* %srate_coarse, align 4, !dbg !14053
  br label %if.end464, !dbg !14054

if.else:                                          ; preds = %cond.end9
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14055
  %demod12 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !14055
  %18 = load i32, i32* %demod12, align 4, !dbg !14055
  %cmp13 = icmp eq i32 %18, 2, !dbg !14055
  br i1 %cmp13, label %cond.true14, label %cond.false16, !dbg !14055

cond.true14:                                      ; preds = %if.else
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14055
  %call15 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 61974, i8 zeroext 31) #9, !dbg !14055
  br label %cond.end18, !dbg !14055

cond.false16:                                     ; preds = %if.else
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14055
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %20, i32 62486, i8 zeroext 31) #9, !dbg !14055
  br label %cond.end18, !dbg !14055

cond.end18:                                       ; preds = %cond.false16, %cond.true14
  %cond19 = phi i32 [ %call15, %cond.true14 ], [ %call17, %cond.false16 ], !dbg !14055
  %cmp20 = icmp slt i32 %cond19, 0, !dbg !14058
  br i1 %cmp20, label %if.then21, label %if.end, !dbg !14059

if.then21:                                        ; preds = %cond.end18
  br label %err, !dbg !14060

if.end:                                           ; preds = %cond.end18
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14061
  %demod22 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 1, !dbg !14061
  %22 = load i32, i32* %demod22, align 4, !dbg !14061
  %cmp23 = icmp eq i32 %22, 2, !dbg !14061
  br i1 %cmp23, label %cond.true24, label %cond.false26, !dbg !14061

cond.true24:                                      ; preds = %if.end
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14061
  %call25 = call i32 @stv090x_write_reg(%struct.stv090x_state* %23, i32 62042, i8 zeroext -63) #9, !dbg !14061
  br label %cond.end28, !dbg !14061

cond.false26:                                     ; preds = %if.end
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14061
  %call27 = call i32 @stv090x_write_reg(%struct.stv090x_state* %24, i32 62554, i8 zeroext -63) #9, !dbg !14061
  br label %cond.end28, !dbg !14061

cond.end28:                                       ; preds = %cond.false26, %cond.true24
  %cond29 = phi i32 [ %call25, %cond.true24 ], [ %call27, %cond.false26 ], !dbg !14061
  %cmp30 = icmp slt i32 %cond29, 0, !dbg !14063
  br i1 %cmp30, label %if.then31, label %if.end32, !dbg !14064

if.then31:                                        ; preds = %cond.end28
  br label %err, !dbg !14065

if.end32:                                         ; preds = %cond.end28
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14066
  %demod33 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 1, !dbg !14066
  %26 = load i32, i32* %demod33, align 4, !dbg !14066
  %cmp34 = icmp eq i32 %26, 2, !dbg !14066
  br i1 %cmp34, label %cond.true35, label %cond.false37, !dbg !14066

cond.true35:                                      ; preds = %if.end32
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14066
  %call36 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62035, i8 zeroext 32) #9, !dbg !14066
  br label %cond.end39, !dbg !14066

cond.false37:                                     ; preds = %if.end32
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14066
  %call38 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 62547, i8 zeroext 32) #9, !dbg !14066
  br label %cond.end39, !dbg !14066

cond.end39:                                       ; preds = %cond.false37, %cond.true35
  %cond40 = phi i32 [ %call36, %cond.true35 ], [ %call38, %cond.false37 ], !dbg !14066
  %cmp41 = icmp slt i32 %cond40, 0, !dbg !14068
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !14069

if.then42:                                        ; preds = %cond.end39
  br label %err, !dbg !14070

if.end43:                                         ; preds = %cond.end39
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14071
  %demod44 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %29, i32 0, i32 1, !dbg !14071
  %30 = load i32, i32* %demod44, align 4, !dbg !14071
  %cmp45 = icmp eq i32 %30, 2, !dbg !14071
  br i1 %cmp45, label %cond.true46, label %cond.false48, !dbg !14071

cond.true46:                                      ; preds = %if.end43
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14071
  %call47 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 62036, i8 zeroext 0) #9, !dbg !14071
  br label %cond.end50, !dbg !14071

cond.false48:                                     ; preds = %if.end43
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14071
  %call49 = call i32 @stv090x_write_reg(%struct.stv090x_state* %32, i32 62548, i8 zeroext 0) #9, !dbg !14071
  br label %cond.end50, !dbg !14071

cond.end50:                                       ; preds = %cond.false48, %cond.true46
  %cond51 = phi i32 [ %call47, %cond.true46 ], [ %call49, %cond.false48 ], !dbg !14071
  %cmp52 = icmp slt i32 %cond51, 0, !dbg !14073
  br i1 %cmp52, label %if.then53, label %if.end54, !dbg !14074

if.then53:                                        ; preds = %cond.end50
  br label %err, !dbg !14075

if.end54:                                         ; preds = %cond.end50
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14076
  %demod55 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 1, !dbg !14076
  %34 = load i32, i32* %demod55, align 4, !dbg !14076
  %cmp56 = icmp eq i32 %34, 2, !dbg !14076
  br i1 %cmp56, label %cond.true57, label %cond.false59, !dbg !14076

cond.true57:                                      ; preds = %if.end54
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14076
  %call58 = call i32 @stv090x_write_reg(%struct.stv090x_state* %35, i32 62032, i8 zeroext -46) #9, !dbg !14076
  br label %cond.end61, !dbg !14076

cond.false59:                                     ; preds = %if.end54
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14076
  %call60 = call i32 @stv090x_write_reg(%struct.stv090x_state* %36, i32 62544, i8 zeroext -46) #9, !dbg !14076
  br label %cond.end61, !dbg !14076

cond.end61:                                       ; preds = %cond.false59, %cond.true57
  %cond62 = phi i32 [ %call58, %cond.true57 ], [ %call60, %cond.false59 ], !dbg !14076
  %cmp63 = icmp slt i32 %cond62, 0, !dbg !14078
  br i1 %cmp63, label %if.then64, label %if.end65, !dbg !14079

if.then64:                                        ; preds = %cond.end61
  br label %err, !dbg !14080

if.end65:                                         ; preds = %cond.end61
  %37 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14081
  %demod66 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %37, i32 0, i32 1, !dbg !14081
  %38 = load i32, i32* %demod66, align 4, !dbg !14081
  %cmp67 = icmp eq i32 %38, 2, !dbg !14081
  br i1 %cmp67, label %cond.true68, label %cond.false70, !dbg !14081

cond.true68:                                      ; preds = %if.end65
  %39 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14081
  %call69 = call i32 @stv090x_read_reg(%struct.stv090x_state* %39, i32 61972) #9, !dbg !14081
  br label %cond.end72, !dbg !14081

cond.false70:                                     ; preds = %if.end65
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14081
  %call71 = call i32 @stv090x_read_reg(%struct.stv090x_state* %40, i32 62484) #9, !dbg !14081
  br label %cond.end72, !dbg !14081

cond.end72:                                       ; preds = %cond.false70, %cond.true68
  %cond73 = phi i32 [ %call69, %cond.true68 ], [ %call71, %cond.false70 ], !dbg !14081
  store i32 %cond73, i32* %reg, align 4, !dbg !14082
  %41 = load i32, i32* %reg, align 4, !dbg !14083
  %and = and i32 %41, -9, !dbg !14083
  store i32 %and, i32* %reg, align 4, !dbg !14083
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14084
  %demod74 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %42, i32 0, i32 1, !dbg !14084
  %43 = load i32, i32* %demod74, align 4, !dbg !14084
  %cmp75 = icmp eq i32 %43, 2, !dbg !14084
  br i1 %cmp75, label %cond.true76, label %cond.false78, !dbg !14084

cond.true76:                                      ; preds = %cond.end72
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14084
  %45 = load i32, i32* %reg, align 4, !dbg !14084
  %conv = trunc i32 %45 to i8, !dbg !14084
  %call77 = call i32 @stv090x_write_reg(%struct.stv090x_state* %44, i32 61972, i8 zeroext %conv) #9, !dbg !14084
  br label %cond.end81, !dbg !14084

cond.false78:                                     ; preds = %cond.end72
  %46 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14084
  %47 = load i32, i32* %reg, align 4, !dbg !14084
  %conv79 = trunc i32 %47 to i8, !dbg !14084
  %call80 = call i32 @stv090x_write_reg(%struct.stv090x_state* %46, i32 62484, i8 zeroext %conv79) #9, !dbg !14084
  br label %cond.end81, !dbg !14084

cond.end81:                                       ; preds = %cond.false78, %cond.true76
  %cond82 = phi i32 [ %call77, %cond.true76 ], [ %call80, %cond.false78 ], !dbg !14084
  %cmp83 = icmp slt i32 %cond82, 0, !dbg !14086
  br i1 %cmp83, label %if.then85, label %if.end86, !dbg !14087

if.then85:                                        ; preds = %cond.end81
  br label %err, !dbg !14088

if.end86:                                         ; preds = %cond.end81
  %48 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14089
  %demod87 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %48, i32 0, i32 1, !dbg !14089
  %49 = load i32, i32* %demod87, align 4, !dbg !14089
  %cmp88 = icmp eq i32 %49, 2, !dbg !14089
  br i1 %cmp88, label %cond.true90, label %cond.false92, !dbg !14089

cond.true90:                                      ; preds = %if.end86
  %50 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14089
  %call91 = call i32 @stv090x_write_reg(%struct.stv090x_state* %50, i32 61997, i8 zeroext 56) #9, !dbg !14089
  br label %cond.end94, !dbg !14089

cond.false92:                                     ; preds = %if.end86
  %51 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14089
  %call93 = call i32 @stv090x_write_reg(%struct.stv090x_state* %51, i32 62509, i8 zeroext 56) #9, !dbg !14089
  br label %cond.end94, !dbg !14089

cond.end94:                                       ; preds = %cond.false92, %cond.true90
  %cond95 = phi i32 [ %call91, %cond.true90 ], [ %call93, %cond.false92 ], !dbg !14089
  %cmp96 = icmp slt i32 %cond95, 0, !dbg !14091
  br i1 %cmp96, label %if.then98, label %if.end99, !dbg !14092

if.then98:                                        ; preds = %cond.end94
  br label %err, !dbg !14093

if.end99:                                         ; preds = %cond.end94
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14094
  %internal100 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %52, i32 0, i32 3, !dbg !14096
  %53 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal100, align 8, !dbg !14096
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %53, i32 0, i32 5, !dbg !14097
  %54 = load i32, i32* %dev_ver, align 4, !dbg !14097
  %cmp101 = icmp uge i32 %54, 48, !dbg !14098
  br i1 %cmp101, label %if.then103, label %if.else117, !dbg !14099

if.then103:                                       ; preds = %if.end99
  %55 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14100
  %demod104 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %55, i32 0, i32 1, !dbg !14100
  %56 = load i32, i32* %demod104, align 4, !dbg !14100
  %cmp105 = icmp eq i32 %56, 2, !dbg !14100
  br i1 %cmp105, label %cond.true107, label %cond.false109, !dbg !14100

cond.true107:                                     ; preds = %if.then103
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14100
  %call108 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 62013, i8 zeroext 121) #9, !dbg !14100
  br label %cond.end111, !dbg !14100

cond.false109:                                    ; preds = %if.then103
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14100
  %call110 = call i32 @stv090x_write_reg(%struct.stv090x_state* %58, i32 62525, i8 zeroext 121) #9, !dbg !14100
  br label %cond.end111, !dbg !14100

cond.end111:                                      ; preds = %cond.false109, %cond.true107
  %cond112 = phi i32 [ %call108, %cond.true107 ], [ %call110, %cond.false109 ], !dbg !14100
  %cmp113 = icmp slt i32 %cond112, 0, !dbg !14103
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !14104

if.then115:                                       ; preds = %cond.end111
  br label %err, !dbg !14105

if.end116:                                        ; preds = %cond.end111
  br label %if.end137, !dbg !14106

if.else117:                                       ; preds = %if.end99
  %59 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14107
  %internal118 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %59, i32 0, i32 3, !dbg !14109
  %60 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal118, align 8, !dbg !14109
  %dev_ver119 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %60, i32 0, i32 5, !dbg !14110
  %61 = load i32, i32* %dev_ver119, align 4, !dbg !14110
  %cmp120 = icmp uge i32 %61, 32, !dbg !14111
  br i1 %cmp120, label %if.then122, label %if.end136, !dbg !14112

if.then122:                                       ; preds = %if.else117
  %62 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14113
  %demod123 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %62, i32 0, i32 1, !dbg !14113
  %63 = load i32, i32* %demod123, align 4, !dbg !14113
  %cmp124 = icmp eq i32 %63, 2, !dbg !14113
  br i1 %cmp124, label %cond.true126, label %cond.false128, !dbg !14113

cond.true126:                                     ; preds = %if.then122
  %64 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14113
  %call127 = call i32 @stv090x_write_reg(%struct.stv090x_state* %64, i32 62013, i8 zeroext 73) #9, !dbg !14113
  br label %cond.end130, !dbg !14113

cond.false128:                                    ; preds = %if.then122
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14113
  %call129 = call i32 @stv090x_write_reg(%struct.stv090x_state* %65, i32 62525, i8 zeroext 73) #9, !dbg !14113
  br label %cond.end130, !dbg !14113

cond.end130:                                      ; preds = %cond.false128, %cond.true126
  %cond131 = phi i32 [ %call127, %cond.true126 ], [ %call129, %cond.false128 ], !dbg !14113
  %cmp132 = icmp slt i32 %cond131, 0, !dbg !14116
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !14117

if.then134:                                       ; preds = %cond.end130
  br label %err, !dbg !14118

if.end135:                                        ; preds = %cond.end130
  br label %if.end136, !dbg !14119

if.end136:                                        ; preds = %if.end135, %if.else117
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.end116
  %66 = load i32, i32* %srate_coarse, align 4, !dbg !14120
  %cmp138 = icmp ugt i32 %66, 3000000, !dbg !14122
  br i1 %cmp138, label %if.then140, label %if.else270, !dbg !14123

if.then140:                                       ; preds = %if.end137
  %67 = load i32, i32* %srate_coarse, align 4, !dbg !14124
  %div141 = udiv i32 %67, 10, !dbg !14126
  %mul142 = mul i32 13, %div141, !dbg !14127
  store i32 %mul142, i32* %sym, align 4, !dbg !14128
  %68 = load i32, i32* %sym, align 4, !dbg !14129
  %div143 = udiv i32 %68, 1000, !dbg !14130
  %mul144 = mul i32 %div143, 65536, !dbg !14131
  store i32 %mul144, i32* %sym, align 4, !dbg !14132
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14133
  %internal145 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %69, i32 0, i32 3, !dbg !14134
  %70 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal145, align 8, !dbg !14134
  %mclk146 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %70, i32 0, i32 4, !dbg !14135
  %71 = load i32, i32* %mclk146, align 8, !dbg !14135
  %div147 = sdiv i32 %71, 1000, !dbg !14136
  %72 = load i32, i32* %sym, align 4, !dbg !14137
  %div148 = udiv i32 %72, %div147, !dbg !14137
  store i32 %div148, i32* %sym, align 4, !dbg !14137
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14138
  %demod149 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %73, i32 0, i32 1, !dbg !14138
  %74 = load i32, i32* %demod149, align 4, !dbg !14138
  %cmp150 = icmp eq i32 %74, 2, !dbg !14138
  br i1 %cmp150, label %cond.true152, label %cond.false156, !dbg !14138

cond.true152:                                     ; preds = %if.then140
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14138
  %76 = load i32, i32* %sym, align 4, !dbg !14138
  %shr = lshr i32 %76, 8, !dbg !14138
  %and153 = and i32 %shr, 127, !dbg !14138
  %conv154 = trunc i32 %and153 to i8, !dbg !14138
  %call155 = call i32 @stv090x_write_reg(%struct.stv090x_state* %75, i32 62048, i8 zeroext %conv154) #9, !dbg !14138
  br label %cond.end161, !dbg !14138

cond.false156:                                    ; preds = %if.then140
  %77 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14138
  %78 = load i32, i32* %sym, align 4, !dbg !14138
  %shr157 = lshr i32 %78, 8, !dbg !14138
  %and158 = and i32 %shr157, 127, !dbg !14138
  %conv159 = trunc i32 %and158 to i8, !dbg !14138
  %call160 = call i32 @stv090x_write_reg(%struct.stv090x_state* %77, i32 62560, i8 zeroext %conv159) #9, !dbg !14138
  br label %cond.end161, !dbg !14138

cond.end161:                                      ; preds = %cond.false156, %cond.true152
  %cond162 = phi i32 [ %call155, %cond.true152 ], [ %call160, %cond.false156 ], !dbg !14138
  %cmp163 = icmp slt i32 %cond162, 0, !dbg !14140
  br i1 %cmp163, label %if.then165, label %if.end166, !dbg !14141

if.then165:                                       ; preds = %cond.end161
  br label %err, !dbg !14142

if.end166:                                        ; preds = %cond.end161
  %79 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14143
  %demod167 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %79, i32 0, i32 1, !dbg !14143
  %80 = load i32, i32* %demod167, align 4, !dbg !14143
  %cmp168 = icmp eq i32 %80, 2, !dbg !14143
  br i1 %cmp168, label %cond.true170, label %cond.false174, !dbg !14143

cond.true170:                                     ; preds = %if.end166
  %81 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14143
  %82 = load i32, i32* %sym, align 4, !dbg !14143
  %and171 = and i32 %82, 255, !dbg !14143
  %conv172 = trunc i32 %and171 to i8, !dbg !14143
  %call173 = call i32 @stv090x_write_reg(%struct.stv090x_state* %81, i32 62049, i8 zeroext %conv172) #9, !dbg !14143
  br label %cond.end178, !dbg !14143

cond.false174:                                    ; preds = %if.end166
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14143
  %84 = load i32, i32* %sym, align 4, !dbg !14143
  %and175 = and i32 %84, 255, !dbg !14143
  %conv176 = trunc i32 %and175 to i8, !dbg !14143
  %call177 = call i32 @stv090x_write_reg(%struct.stv090x_state* %83, i32 62561, i8 zeroext %conv176) #9, !dbg !14143
  br label %cond.end178, !dbg !14143

cond.end178:                                      ; preds = %cond.false174, %cond.true170
  %cond179 = phi i32 [ %call173, %cond.true170 ], [ %call177, %cond.false174 ], !dbg !14143
  %cmp180 = icmp slt i32 %cond179, 0, !dbg !14145
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !14146

if.then182:                                       ; preds = %cond.end178
  br label %err, !dbg !14147

if.end183:                                        ; preds = %cond.end178
  %85 = load i32, i32* %srate_coarse, align 4, !dbg !14148
  %div184 = udiv i32 %85, 13, !dbg !14149
  %mul185 = mul i32 10, %div184, !dbg !14150
  store i32 %mul185, i32* %sym, align 4, !dbg !14151
  %86 = load i32, i32* %sym, align 4, !dbg !14152
  %div186 = udiv i32 %86, 1000, !dbg !14153
  %mul187 = mul i32 %div186, 65536, !dbg !14154
  store i32 %mul187, i32* %sym, align 4, !dbg !14155
  %87 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14156
  %internal188 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %87, i32 0, i32 3, !dbg !14157
  %88 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal188, align 8, !dbg !14157
  %mclk189 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %88, i32 0, i32 4, !dbg !14158
  %89 = load i32, i32* %mclk189, align 8, !dbg !14158
  %div190 = sdiv i32 %89, 1000, !dbg !14159
  %90 = load i32, i32* %sym, align 4, !dbg !14160
  %div191 = udiv i32 %90, %div190, !dbg !14160
  store i32 %div191, i32* %sym, align 4, !dbg !14160
  %91 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14161
  %demod192 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %91, i32 0, i32 1, !dbg !14161
  %92 = load i32, i32* %demod192, align 4, !dbg !14161
  %cmp193 = icmp eq i32 %92, 2, !dbg !14161
  br i1 %cmp193, label %cond.true195, label %cond.false200, !dbg !14161

cond.true195:                                     ; preds = %if.end183
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14161
  %94 = load i32, i32* %sym, align 4, !dbg !14161
  %shr196 = lshr i32 %94, 8, !dbg !14161
  %and197 = and i32 %shr196, 127, !dbg !14161
  %conv198 = trunc i32 %and197 to i8, !dbg !14161
  %call199 = call i32 @stv090x_write_reg(%struct.stv090x_state* %93, i32 62050, i8 zeroext %conv198) #9, !dbg !14161
  br label %cond.end205, !dbg !14161

cond.false200:                                    ; preds = %if.end183
  %95 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14161
  %96 = load i32, i32* %sym, align 4, !dbg !14161
  %shr201 = lshr i32 %96, 8, !dbg !14161
  %and202 = and i32 %shr201, 127, !dbg !14161
  %conv203 = trunc i32 %and202 to i8, !dbg !14161
  %call204 = call i32 @stv090x_write_reg(%struct.stv090x_state* %95, i32 62562, i8 zeroext %conv203) #9, !dbg !14161
  br label %cond.end205, !dbg !14161

cond.end205:                                      ; preds = %cond.false200, %cond.true195
  %cond206 = phi i32 [ %call199, %cond.true195 ], [ %call204, %cond.false200 ], !dbg !14161
  %cmp207 = icmp slt i32 %cond206, 0, !dbg !14163
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !14164

if.then209:                                       ; preds = %cond.end205
  br label %err, !dbg !14165

if.end210:                                        ; preds = %cond.end205
  %97 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14166
  %demod211 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %97, i32 0, i32 1, !dbg !14166
  %98 = load i32, i32* %demod211, align 4, !dbg !14166
  %cmp212 = icmp eq i32 %98, 2, !dbg !14166
  br i1 %cmp212, label %cond.true214, label %cond.false218, !dbg !14166

cond.true214:                                     ; preds = %if.end210
  %99 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14166
  %100 = load i32, i32* %sym, align 4, !dbg !14166
  %and215 = and i32 %100, 255, !dbg !14166
  %conv216 = trunc i32 %and215 to i8, !dbg !14166
  %call217 = call i32 @stv090x_write_reg(%struct.stv090x_state* %99, i32 62051, i8 zeroext %conv216) #9, !dbg !14166
  br label %cond.end222, !dbg !14166

cond.false218:                                    ; preds = %if.end210
  %101 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14166
  %102 = load i32, i32* %sym, align 4, !dbg !14166
  %and219 = and i32 %102, 255, !dbg !14166
  %conv220 = trunc i32 %and219 to i8, !dbg !14166
  %call221 = call i32 @stv090x_write_reg(%struct.stv090x_state* %101, i32 62563, i8 zeroext %conv220) #9, !dbg !14166
  br label %cond.end222, !dbg !14166

cond.end222:                                      ; preds = %cond.false218, %cond.true214
  %cond223 = phi i32 [ %call217, %cond.true214 ], [ %call221, %cond.false218 ], !dbg !14166
  %cmp224 = icmp slt i32 %cond223, 0, !dbg !14168
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !14169

if.then226:                                       ; preds = %cond.end222
  br label %err, !dbg !14170

if.end227:                                        ; preds = %cond.end222
  %103 = load i32, i32* %srate_coarse, align 4, !dbg !14171
  %div228 = udiv i32 %103, 1000, !dbg !14172
  %mul229 = mul i32 %div228, 65536, !dbg !14173
  store i32 %mul229, i32* %sym, align 4, !dbg !14174
  %104 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14175
  %internal230 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %104, i32 0, i32 3, !dbg !14176
  %105 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal230, align 8, !dbg !14176
  %mclk231 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %105, i32 0, i32 4, !dbg !14177
  %106 = load i32, i32* %mclk231, align 8, !dbg !14177
  %div232 = sdiv i32 %106, 1000, !dbg !14178
  %107 = load i32, i32* %sym, align 4, !dbg !14179
  %div233 = udiv i32 %107, %div232, !dbg !14179
  store i32 %div233, i32* %sym, align 4, !dbg !14179
  %108 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14180
  %demod234 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %108, i32 0, i32 1, !dbg !14180
  %109 = load i32, i32* %demod234, align 4, !dbg !14180
  %cmp235 = icmp eq i32 %109, 2, !dbg !14180
  br i1 %cmp235, label %cond.true237, label %cond.false242, !dbg !14180

cond.true237:                                     ; preds = %if.end227
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14180
  %111 = load i32, i32* %sym, align 4, !dbg !14180
  %shr238 = lshr i32 %111, 8, !dbg !14180
  %and239 = and i32 %shr238, 255, !dbg !14180
  %conv240 = trunc i32 %and239 to i8, !dbg !14180
  %call241 = call i32 @stv090x_write_reg(%struct.stv090x_state* %110, i32 62046, i8 zeroext %conv240) #9, !dbg !14180
  br label %cond.end247, !dbg !14180

cond.false242:                                    ; preds = %if.end227
  %112 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14180
  %113 = load i32, i32* %sym, align 4, !dbg !14180
  %shr243 = lshr i32 %113, 8, !dbg !14180
  %and244 = and i32 %shr243, 255, !dbg !14180
  %conv245 = trunc i32 %and244 to i8, !dbg !14180
  %call246 = call i32 @stv090x_write_reg(%struct.stv090x_state* %112, i32 62558, i8 zeroext %conv245) #9, !dbg !14180
  br label %cond.end247, !dbg !14180

cond.end247:                                      ; preds = %cond.false242, %cond.true237
  %cond248 = phi i32 [ %call241, %cond.true237 ], [ %call246, %cond.false242 ], !dbg !14180
  %cmp249 = icmp slt i32 %cond248, 0, !dbg !14182
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !14183

if.then251:                                       ; preds = %cond.end247
  br label %err, !dbg !14184

if.end252:                                        ; preds = %cond.end247
  %114 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14185
  %demod253 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %114, i32 0, i32 1, !dbg !14185
  %115 = load i32, i32* %demod253, align 4, !dbg !14185
  %cmp254 = icmp eq i32 %115, 2, !dbg !14185
  br i1 %cmp254, label %cond.true256, label %cond.false260, !dbg !14185

cond.true256:                                     ; preds = %if.end252
  %116 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14185
  %117 = load i32, i32* %sym, align 4, !dbg !14185
  %and257 = and i32 %117, 255, !dbg !14185
  %conv258 = trunc i32 %and257 to i8, !dbg !14185
  %call259 = call i32 @stv090x_write_reg(%struct.stv090x_state* %116, i32 62047, i8 zeroext %conv258) #9, !dbg !14185
  br label %cond.end264, !dbg !14185

cond.false260:                                    ; preds = %if.end252
  %118 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14185
  %119 = load i32, i32* %sym, align 4, !dbg !14185
  %and261 = and i32 %119, 255, !dbg !14185
  %conv262 = trunc i32 %and261 to i8, !dbg !14185
  %call263 = call i32 @stv090x_write_reg(%struct.stv090x_state* %118, i32 62559, i8 zeroext %conv262) #9, !dbg !14185
  br label %cond.end264, !dbg !14185

cond.end264:                                      ; preds = %cond.false260, %cond.true256
  %cond265 = phi i32 [ %call259, %cond.true256 ], [ %call263, %cond.false260 ], !dbg !14185
  %cmp266 = icmp slt i32 %cond265, 0, !dbg !14187
  br i1 %cmp266, label %if.then268, label %if.end269, !dbg !14188

if.then268:                                       ; preds = %cond.end264
  br label %err, !dbg !14189

if.end269:                                        ; preds = %cond.end264
  br label %if.end401, !dbg !14190

if.else270:                                       ; preds = %if.end137
  %120 = load i32, i32* %srate_coarse, align 4, !dbg !14191
  %div271 = udiv i32 %120, 10, !dbg !14193
  %mul272 = mul i32 13, %div271, !dbg !14194
  store i32 %mul272, i32* %sym, align 4, !dbg !14195
  %121 = load i32, i32* %sym, align 4, !dbg !14196
  %div273 = udiv i32 %121, 100, !dbg !14197
  %mul274 = mul i32 %div273, 65536, !dbg !14198
  store i32 %mul274, i32* %sym, align 4, !dbg !14199
  %122 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14200
  %internal275 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %122, i32 0, i32 3, !dbg !14201
  %123 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal275, align 8, !dbg !14201
  %mclk276 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %123, i32 0, i32 4, !dbg !14202
  %124 = load i32, i32* %mclk276, align 8, !dbg !14202
  %div277 = sdiv i32 %124, 100, !dbg !14203
  %125 = load i32, i32* %sym, align 4, !dbg !14204
  %div278 = udiv i32 %125, %div277, !dbg !14204
  store i32 %div278, i32* %sym, align 4, !dbg !14204
  %126 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14205
  %demod279 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %126, i32 0, i32 1, !dbg !14205
  %127 = load i32, i32* %demod279, align 4, !dbg !14205
  %cmp280 = icmp eq i32 %127, 2, !dbg !14205
  br i1 %cmp280, label %cond.true282, label %cond.false287, !dbg !14205

cond.true282:                                     ; preds = %if.else270
  %128 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14205
  %129 = load i32, i32* %sym, align 4, !dbg !14205
  %shr283 = lshr i32 %129, 8, !dbg !14205
  %and284 = and i32 %shr283, 127, !dbg !14205
  %conv285 = trunc i32 %and284 to i8, !dbg !14205
  %call286 = call i32 @stv090x_write_reg(%struct.stv090x_state* %128, i32 62048, i8 zeroext %conv285) #9, !dbg !14205
  br label %cond.end292, !dbg !14205

cond.false287:                                    ; preds = %if.else270
  %130 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14205
  %131 = load i32, i32* %sym, align 4, !dbg !14205
  %shr288 = lshr i32 %131, 8, !dbg !14205
  %and289 = and i32 %shr288, 127, !dbg !14205
  %conv290 = trunc i32 %and289 to i8, !dbg !14205
  %call291 = call i32 @stv090x_write_reg(%struct.stv090x_state* %130, i32 62560, i8 zeroext %conv290) #9, !dbg !14205
  br label %cond.end292, !dbg !14205

cond.end292:                                      ; preds = %cond.false287, %cond.true282
  %cond293 = phi i32 [ %call286, %cond.true282 ], [ %call291, %cond.false287 ], !dbg !14205
  %cmp294 = icmp slt i32 %cond293, 0, !dbg !14207
  br i1 %cmp294, label %if.then296, label %if.end297, !dbg !14208

if.then296:                                       ; preds = %cond.end292
  br label %err, !dbg !14209

if.end297:                                        ; preds = %cond.end292
  %132 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14210
  %demod298 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %132, i32 0, i32 1, !dbg !14210
  %133 = load i32, i32* %demod298, align 4, !dbg !14210
  %cmp299 = icmp eq i32 %133, 2, !dbg !14210
  br i1 %cmp299, label %cond.true301, label %cond.false305, !dbg !14210

cond.true301:                                     ; preds = %if.end297
  %134 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14210
  %135 = load i32, i32* %sym, align 4, !dbg !14210
  %and302 = and i32 %135, 255, !dbg !14210
  %conv303 = trunc i32 %and302 to i8, !dbg !14210
  %call304 = call i32 @stv090x_write_reg(%struct.stv090x_state* %134, i32 62049, i8 zeroext %conv303) #9, !dbg !14210
  br label %cond.end309, !dbg !14210

cond.false305:                                    ; preds = %if.end297
  %136 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14210
  %137 = load i32, i32* %sym, align 4, !dbg !14210
  %and306 = and i32 %137, 255, !dbg !14210
  %conv307 = trunc i32 %and306 to i8, !dbg !14210
  %call308 = call i32 @stv090x_write_reg(%struct.stv090x_state* %136, i32 62561, i8 zeroext %conv307) #9, !dbg !14210
  br label %cond.end309, !dbg !14210

cond.end309:                                      ; preds = %cond.false305, %cond.true301
  %cond310 = phi i32 [ %call304, %cond.true301 ], [ %call308, %cond.false305 ], !dbg !14210
  %cmp311 = icmp slt i32 %cond310, 0, !dbg !14212
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !14213

if.then313:                                       ; preds = %cond.end309
  br label %err, !dbg !14214

if.end314:                                        ; preds = %cond.end309
  %138 = load i32, i32* %srate_coarse, align 4, !dbg !14215
  %div315 = udiv i32 %138, 14, !dbg !14216
  %mul316 = mul i32 10, %div315, !dbg !14217
  store i32 %mul316, i32* %sym, align 4, !dbg !14218
  %139 = load i32, i32* %sym, align 4, !dbg !14219
  %div317 = udiv i32 %139, 100, !dbg !14220
  %mul318 = mul i32 %div317, 65536, !dbg !14221
  store i32 %mul318, i32* %sym, align 4, !dbg !14222
  %140 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14223
  %internal319 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %140, i32 0, i32 3, !dbg !14224
  %141 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal319, align 8, !dbg !14224
  %mclk320 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %141, i32 0, i32 4, !dbg !14225
  %142 = load i32, i32* %mclk320, align 8, !dbg !14225
  %div321 = sdiv i32 %142, 100, !dbg !14226
  %143 = load i32, i32* %sym, align 4, !dbg !14227
  %div322 = udiv i32 %143, %div321, !dbg !14227
  store i32 %div322, i32* %sym, align 4, !dbg !14227
  %144 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14228
  %demod323 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %144, i32 0, i32 1, !dbg !14228
  %145 = load i32, i32* %demod323, align 4, !dbg !14228
  %cmp324 = icmp eq i32 %145, 2, !dbg !14228
  br i1 %cmp324, label %cond.true326, label %cond.false331, !dbg !14228

cond.true326:                                     ; preds = %if.end314
  %146 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14228
  %147 = load i32, i32* %sym, align 4, !dbg !14228
  %shr327 = lshr i32 %147, 8, !dbg !14228
  %and328 = and i32 %shr327, 127, !dbg !14228
  %conv329 = trunc i32 %and328 to i8, !dbg !14228
  %call330 = call i32 @stv090x_write_reg(%struct.stv090x_state* %146, i32 62050, i8 zeroext %conv329) #9, !dbg !14228
  br label %cond.end336, !dbg !14228

cond.false331:                                    ; preds = %if.end314
  %148 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14228
  %149 = load i32, i32* %sym, align 4, !dbg !14228
  %shr332 = lshr i32 %149, 8, !dbg !14228
  %and333 = and i32 %shr332, 127, !dbg !14228
  %conv334 = trunc i32 %and333 to i8, !dbg !14228
  %call335 = call i32 @stv090x_write_reg(%struct.stv090x_state* %148, i32 62562, i8 zeroext %conv334) #9, !dbg !14228
  br label %cond.end336, !dbg !14228

cond.end336:                                      ; preds = %cond.false331, %cond.true326
  %cond337 = phi i32 [ %call330, %cond.true326 ], [ %call335, %cond.false331 ], !dbg !14228
  %cmp338 = icmp slt i32 %cond337, 0, !dbg !14230
  br i1 %cmp338, label %if.then340, label %if.end341, !dbg !14231

if.then340:                                       ; preds = %cond.end336
  br label %err, !dbg !14232

if.end341:                                        ; preds = %cond.end336
  %150 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14233
  %demod342 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %150, i32 0, i32 1, !dbg !14233
  %151 = load i32, i32* %demod342, align 4, !dbg !14233
  %cmp343 = icmp eq i32 %151, 2, !dbg !14233
  br i1 %cmp343, label %cond.true345, label %cond.false349, !dbg !14233

cond.true345:                                     ; preds = %if.end341
  %152 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14233
  %153 = load i32, i32* %sym, align 4, !dbg !14233
  %and346 = and i32 %153, 255, !dbg !14233
  %conv347 = trunc i32 %and346 to i8, !dbg !14233
  %call348 = call i32 @stv090x_write_reg(%struct.stv090x_state* %152, i32 62051, i8 zeroext %conv347) #9, !dbg !14233
  br label %cond.end353, !dbg !14233

cond.false349:                                    ; preds = %if.end341
  %154 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14233
  %155 = load i32, i32* %sym, align 4, !dbg !14233
  %and350 = and i32 %155, 255, !dbg !14233
  %conv351 = trunc i32 %and350 to i8, !dbg !14233
  %call352 = call i32 @stv090x_write_reg(%struct.stv090x_state* %154, i32 62563, i8 zeroext %conv351) #9, !dbg !14233
  br label %cond.end353, !dbg !14233

cond.end353:                                      ; preds = %cond.false349, %cond.true345
  %cond354 = phi i32 [ %call348, %cond.true345 ], [ %call352, %cond.false349 ], !dbg !14233
  %cmp355 = icmp slt i32 %cond354, 0, !dbg !14235
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !14236

if.then357:                                       ; preds = %cond.end353
  br label %err, !dbg !14237

if.end358:                                        ; preds = %cond.end353
  %156 = load i32, i32* %srate_coarse, align 4, !dbg !14238
  %div359 = udiv i32 %156, 100, !dbg !14239
  %mul360 = mul i32 %div359, 65536, !dbg !14240
  store i32 %mul360, i32* %sym, align 4, !dbg !14241
  %157 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14242
  %internal361 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %157, i32 0, i32 3, !dbg !14243
  %158 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal361, align 8, !dbg !14243
  %mclk362 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %158, i32 0, i32 4, !dbg !14244
  %159 = load i32, i32* %mclk362, align 8, !dbg !14244
  %div363 = sdiv i32 %159, 100, !dbg !14245
  %160 = load i32, i32* %sym, align 4, !dbg !14246
  %div364 = udiv i32 %160, %div363, !dbg !14246
  store i32 %div364, i32* %sym, align 4, !dbg !14246
  %161 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14247
  %demod365 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %161, i32 0, i32 1, !dbg !14247
  %162 = load i32, i32* %demod365, align 4, !dbg !14247
  %cmp366 = icmp eq i32 %162, 2, !dbg !14247
  br i1 %cmp366, label %cond.true368, label %cond.false373, !dbg !14247

cond.true368:                                     ; preds = %if.end358
  %163 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14247
  %164 = load i32, i32* %sym, align 4, !dbg !14247
  %shr369 = lshr i32 %164, 8, !dbg !14247
  %and370 = and i32 %shr369, 255, !dbg !14247
  %conv371 = trunc i32 %and370 to i8, !dbg !14247
  %call372 = call i32 @stv090x_write_reg(%struct.stv090x_state* %163, i32 62046, i8 zeroext %conv371) #9, !dbg !14247
  br label %cond.end378, !dbg !14247

cond.false373:                                    ; preds = %if.end358
  %165 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14247
  %166 = load i32, i32* %sym, align 4, !dbg !14247
  %shr374 = lshr i32 %166, 8, !dbg !14247
  %and375 = and i32 %shr374, 255, !dbg !14247
  %conv376 = trunc i32 %and375 to i8, !dbg !14247
  %call377 = call i32 @stv090x_write_reg(%struct.stv090x_state* %165, i32 62558, i8 zeroext %conv376) #9, !dbg !14247
  br label %cond.end378, !dbg !14247

cond.end378:                                      ; preds = %cond.false373, %cond.true368
  %cond379 = phi i32 [ %call372, %cond.true368 ], [ %call377, %cond.false373 ], !dbg !14247
  %cmp380 = icmp slt i32 %cond379, 0, !dbg !14249
  br i1 %cmp380, label %if.then382, label %if.end383, !dbg !14250

if.then382:                                       ; preds = %cond.end378
  br label %err, !dbg !14251

if.end383:                                        ; preds = %cond.end378
  %167 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14252
  %demod384 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %167, i32 0, i32 1, !dbg !14252
  %168 = load i32, i32* %demod384, align 4, !dbg !14252
  %cmp385 = icmp eq i32 %168, 2, !dbg !14252
  br i1 %cmp385, label %cond.true387, label %cond.false391, !dbg !14252

cond.true387:                                     ; preds = %if.end383
  %169 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14252
  %170 = load i32, i32* %sym, align 4, !dbg !14252
  %and388 = and i32 %170, 255, !dbg !14252
  %conv389 = trunc i32 %and388 to i8, !dbg !14252
  %call390 = call i32 @stv090x_write_reg(%struct.stv090x_state* %169, i32 62047, i8 zeroext %conv389) #9, !dbg !14252
  br label %cond.end395, !dbg !14252

cond.false391:                                    ; preds = %if.end383
  %171 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14252
  %172 = load i32, i32* %sym, align 4, !dbg !14252
  %and392 = and i32 %172, 255, !dbg !14252
  %conv393 = trunc i32 %and392 to i8, !dbg !14252
  %call394 = call i32 @stv090x_write_reg(%struct.stv090x_state* %171, i32 62559, i8 zeroext %conv393) #9, !dbg !14252
  br label %cond.end395, !dbg !14252

cond.end395:                                      ; preds = %cond.false391, %cond.true387
  %cond396 = phi i32 [ %call390, %cond.true387 ], [ %call394, %cond.false391 ], !dbg !14252
  %cmp397 = icmp slt i32 %cond396, 0, !dbg !14254
  br i1 %cmp397, label %if.then399, label %if.end400, !dbg !14255

if.then399:                                       ; preds = %cond.end395
  br label %err, !dbg !14256

if.end400:                                        ; preds = %cond.end395
  br label %if.end401

if.end401:                                        ; preds = %if.end400, %if.end269
  %173 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14257
  %demod402 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %173, i32 0, i32 1, !dbg !14257
  %174 = load i32, i32* %demod402, align 4, !dbg !14257
  %cmp403 = icmp eq i32 %174, 2, !dbg !14257
  br i1 %cmp403, label %cond.true405, label %cond.false407, !dbg !14257

cond.true405:                                     ; preds = %if.end401
  %175 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14257
  %call406 = call i32 @stv090x_write_reg(%struct.stv090x_state* %175, i32 61975, i8 zeroext 32) #9, !dbg !14257
  br label %cond.end409, !dbg !14257

cond.false407:                                    ; preds = %if.end401
  %176 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14257
  %call408 = call i32 @stv090x_write_reg(%struct.stv090x_state* %176, i32 62487, i8 zeroext 32) #9, !dbg !14257
  br label %cond.end409, !dbg !14257

cond.end409:                                      ; preds = %cond.false407, %cond.true405
  %cond410 = phi i32 [ %call406, %cond.true405 ], [ %call408, %cond.false407 ], !dbg !14257
  %cmp411 = icmp slt i32 %cond410, 0, !dbg !14259
  br i1 %cmp411, label %if.then413, label %if.end414, !dbg !14260

if.then413:                                       ; preds = %cond.end409
  br label %err, !dbg !14261

if.end414:                                        ; preds = %cond.end409
  %177 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14262
  %demod415 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %177, i32 0, i32 1, !dbg !14262
  %178 = load i32, i32* %demod415, align 4, !dbg !14262
  %cmp416 = icmp eq i32 %178, 2, !dbg !14262
  br i1 %cmp416, label %cond.true418, label %cond.false423, !dbg !14262

cond.true418:                                     ; preds = %if.end414
  %179 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14262
  %180 = load i32, i32* %freq_coarse, align 4, !dbg !14262
  %shr419 = lshr i32 %180, 8, !dbg !14262
  %and420 = and i32 %shr419, 255, !dbg !14262
  %conv421 = trunc i32 %and420 to i8, !dbg !14262
  %call422 = call i32 @stv090x_write_reg(%struct.stv090x_state* %179, i32 62024, i8 zeroext %conv421) #9, !dbg !14262
  br label %cond.end428, !dbg !14262

cond.false423:                                    ; preds = %if.end414
  %181 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14262
  %182 = load i32, i32* %freq_coarse, align 4, !dbg !14262
  %shr424 = lshr i32 %182, 8, !dbg !14262
  %and425 = and i32 %shr424, 255, !dbg !14262
  %conv426 = trunc i32 %and425 to i8, !dbg !14262
  %call427 = call i32 @stv090x_write_reg(%struct.stv090x_state* %181, i32 62536, i8 zeroext %conv426) #9, !dbg !14262
  br label %cond.end428, !dbg !14262

cond.end428:                                      ; preds = %cond.false423, %cond.true418
  %cond429 = phi i32 [ %call422, %cond.true418 ], [ %call427, %cond.false423 ], !dbg !14262
  %cmp430 = icmp slt i32 %cond429, 0, !dbg !14264
  br i1 %cmp430, label %if.then432, label %if.end433, !dbg !14265

if.then432:                                       ; preds = %cond.end428
  br label %err, !dbg !14266

if.end433:                                        ; preds = %cond.end428
  %183 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14267
  %demod434 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %183, i32 0, i32 1, !dbg !14267
  %184 = load i32, i32* %demod434, align 4, !dbg !14267
  %cmp435 = icmp eq i32 %184, 2, !dbg !14267
  br i1 %cmp435, label %cond.true437, label %cond.false441, !dbg !14267

cond.true437:                                     ; preds = %if.end433
  %185 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14267
  %186 = load i32, i32* %freq_coarse, align 4, !dbg !14267
  %and438 = and i32 %186, 255, !dbg !14267
  %conv439 = trunc i32 %and438 to i8, !dbg !14267
  %call440 = call i32 @stv090x_write_reg(%struct.stv090x_state* %185, i32 62025, i8 zeroext %conv439) #9, !dbg !14267
  br label %cond.end445, !dbg !14267

cond.false441:                                    ; preds = %if.end433
  %187 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14267
  %188 = load i32, i32* %freq_coarse, align 4, !dbg !14267
  %and442 = and i32 %188, 255, !dbg !14267
  %conv443 = trunc i32 %and442 to i8, !dbg !14267
  %call444 = call i32 @stv090x_write_reg(%struct.stv090x_state* %187, i32 62537, i8 zeroext %conv443) #9, !dbg !14267
  br label %cond.end445, !dbg !14267

cond.end445:                                      ; preds = %cond.false441, %cond.true437
  %cond446 = phi i32 [ %call440, %cond.true437 ], [ %call444, %cond.false441 ], !dbg !14267
  %cmp447 = icmp slt i32 %cond446, 0, !dbg !14269
  br i1 %cmp447, label %if.then449, label %if.end450, !dbg !14270

if.then449:                                       ; preds = %cond.end445
  br label %err, !dbg !14271

if.end450:                                        ; preds = %cond.end445
  %189 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14272
  %demod451 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %189, i32 0, i32 1, !dbg !14272
  %190 = load i32, i32* %demod451, align 4, !dbg !14272
  %cmp452 = icmp eq i32 %190, 2, !dbg !14272
  br i1 %cmp452, label %cond.true454, label %cond.false456, !dbg !14272

cond.true454:                                     ; preds = %if.end450
  %191 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14272
  %call455 = call i32 @stv090x_write_reg(%struct.stv090x_state* %191, i32 61974, i8 zeroext 21) #9, !dbg !14272
  br label %cond.end458, !dbg !14272

cond.false456:                                    ; preds = %if.end450
  %192 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14272
  %call457 = call i32 @stv090x_write_reg(%struct.stv090x_state* %192, i32 62486, i8 zeroext 21) #9, !dbg !14272
  br label %cond.end458, !dbg !14272

cond.end458:                                      ; preds = %cond.false456, %cond.true454
  %cond459 = phi i32 [ %call455, %cond.true454 ], [ %call457, %cond.false456 ], !dbg !14272
  %cmp460 = icmp slt i32 %cond459, 0, !dbg !14274
  br i1 %cmp460, label %if.then462, label %if.end463, !dbg !14275

if.then462:                                       ; preds = %cond.end458
  br label %err, !dbg !14276

if.end463:                                        ; preds = %cond.end458
  br label %if.end464

if.end464:                                        ; preds = %if.end463, %if.then
  %193 = load i32, i32* %srate_coarse, align 4, !dbg !14277
  store i32 %193, i32* %retval, align 4, !dbg !14278
  br label %return, !dbg !14278

err:                                              ; preds = %if.then462, %if.then449, %if.then432, %if.then413, %if.then399, %if.then382, %if.then357, %if.then340, %if.then313, %if.then296, %if.then268, %if.then251, %if.then226, %if.then209, %if.then182, %if.then165, %if.then134, %if.then115, %if.then98, %if.then85, %if.then64, %if.then53, %if.then42, %if.then31, %if.then21
  call void @llvm.dbg.label(metadata !14279), !dbg !14280
  br label %do.body, !dbg !14281

do.body:                                          ; preds = %err
  %194 = load i32, i32* @verbose, align 4, !dbg !14282
  %cmp465 = icmp ugt i32 %194, 0, !dbg !14282
  br i1 %cmp465, label %land.lhs.true, label %if.else471, !dbg !14282

land.lhs.true:                                    ; preds = %do.body
  %195 = load i32, i32* @verbose, align 4, !dbg !14282
  %cmp467 = icmp ugt i32 %195, 0, !dbg !14282
  br i1 %cmp467, label %if.then469, label %if.else471, !dbg !14287

if.then469:                                       ; preds = %land.lhs.true
  %call470 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_srate_srch_fine, i64 0, i64 0)) #13, !dbg !14282
  br label %if.end498, !dbg !14282

if.else471:                                       ; preds = %land.lhs.true, %do.body
  %196 = load i32, i32* @verbose, align 4, !dbg !14288
  %cmp472 = icmp ugt i32 %196, 1, !dbg !14288
  br i1 %cmp472, label %land.lhs.true474, label %if.else479, !dbg !14288

land.lhs.true474:                                 ; preds = %if.else471
  %197 = load i32, i32* @verbose, align 4, !dbg !14288
  %cmp475 = icmp ugt i32 %197, 0, !dbg !14288
  br i1 %cmp475, label %if.then477, label %if.else479, !dbg !14282

if.then477:                                       ; preds = %land.lhs.true474
  %call478 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_srate_srch_fine, i64 0, i64 0)) #13, !dbg !14288
  br label %if.end497, !dbg !14288

if.else479:                                       ; preds = %land.lhs.true474, %if.else471
  %198 = load i32, i32* @verbose, align 4, !dbg !14290
  %cmp480 = icmp ugt i32 %198, 2, !dbg !14290
  br i1 %cmp480, label %land.lhs.true482, label %if.else487, !dbg !14290

land.lhs.true482:                                 ; preds = %if.else479
  %199 = load i32, i32* @verbose, align 4, !dbg !14290
  %cmp483 = icmp ugt i32 %199, 0, !dbg !14290
  br i1 %cmp483, label %if.then485, label %if.else487, !dbg !14288

if.then485:                                       ; preds = %land.lhs.true482
  %call486 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_srate_srch_fine, i64 0, i64 0)) #13, !dbg !14290
  br label %if.end496, !dbg !14290

if.else487:                                       ; preds = %land.lhs.true482, %if.else479
  %200 = load i32, i32* @verbose, align 4, !dbg !14292
  %cmp488 = icmp ugt i32 %200, 3, !dbg !14292
  br i1 %cmp488, label %land.lhs.true490, label %if.end495, !dbg !14292

land.lhs.true490:                                 ; preds = %if.else487
  %201 = load i32, i32* @verbose, align 4, !dbg !14292
  %cmp491 = icmp ugt i32 %201, 0, !dbg !14292
  br i1 %cmp491, label %if.then493, label %if.end495, !dbg !14290

if.then493:                                       ; preds = %land.lhs.true490
  %call494 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_srate_srch_fine, i64 0, i64 0)) #13, !dbg !14292
  br label %if.end495, !dbg !14292

if.end495:                                        ; preds = %if.then493, %land.lhs.true490, %if.else487
  br label %if.end496

if.end496:                                        ; preds = %if.end495, %if.then485
  br label %if.end497

if.end497:                                        ; preds = %if.end496, %if.then477
  br label %if.end498

if.end498:                                        ; preds = %if.end497, %if.then469
  br label %do.end, !dbg !14294

do.end:                                           ; preds = %if.end498
  store i32 -1, i32* %retval, align 4, !dbg !14295
  br label %return, !dbg !14295

return:                                           ; preds = %do.end, %if.end464
  %202 = load i32, i32* %retval, align 4, !dbg !14296
  ret i32 %202, !dbg !14296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_srate(%struct.stv090x_state* %state, i32 %clk) #0 !dbg !14297 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %clk.addr = alloca i32, align 4
  %r3 = alloca i8, align 1
  %r2 = alloca i8, align 1
  %r1 = alloca i8, align 1
  %r0 = alloca i8, align 1
  %srate = alloca i32, align 4
  %int_1 = alloca i32, align 4
  %int_2 = alloca i32, align 4
  %tmp_1 = alloca i32, align 4
  %tmp_2 = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14300, metadata !DIExpression()), !dbg !14301
  store i32 %clk, i32* %clk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clk.addr, metadata !14302, metadata !DIExpression()), !dbg !14303
  call void @llvm.dbg.declare(metadata i8* %r3, metadata !14304, metadata !DIExpression()), !dbg !14305
  call void @llvm.dbg.declare(metadata i8* %r2, metadata !14306, metadata !DIExpression()), !dbg !14307
  call void @llvm.dbg.declare(metadata i8* %r1, metadata !14308, metadata !DIExpression()), !dbg !14309
  call void @llvm.dbg.declare(metadata i8* %r0, metadata !14310, metadata !DIExpression()), !dbg !14311
  call void @llvm.dbg.declare(metadata i32* %srate, metadata !14312, metadata !DIExpression()), !dbg !14313
  call void @llvm.dbg.declare(metadata i32* %int_1, metadata !14314, metadata !DIExpression()), !dbg !14315
  call void @llvm.dbg.declare(metadata i32* %int_2, metadata !14316, metadata !DIExpression()), !dbg !14317
  call void @llvm.dbg.declare(metadata i32* %tmp_1, metadata !14318, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.declare(metadata i32* %tmp_2, metadata !14320, metadata !DIExpression()), !dbg !14321
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14322
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !14322
  %1 = load i32, i32* %demod, align 4, !dbg !14322
  %cmp = icmp eq i32 %1, 2, !dbg !14322
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14322

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14322
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 62052) #9, !dbg !14322
  br label %cond.end, !dbg !14322

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14322
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62564) #9, !dbg !14322
  br label %cond.end, !dbg !14322

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !14322
  %conv = trunc i32 %cond to i8, !dbg !14322
  store i8 %conv, i8* %r3, align 1, !dbg !14323
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14324
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !14324
  %5 = load i32, i32* %demod2, align 4, !dbg !14324
  %cmp3 = icmp eq i32 %5, 2, !dbg !14324
  br i1 %cmp3, label %cond.true5, label %cond.false7, !dbg !14324

cond.true5:                                       ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14324
  %call6 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62053) #9, !dbg !14324
  br label %cond.end9, !dbg !14324

cond.false7:                                      ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14324
  %call8 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62565) #9, !dbg !14324
  br label %cond.end9, !dbg !14324

cond.end9:                                        ; preds = %cond.false7, %cond.true5
  %cond10 = phi i32 [ %call6, %cond.true5 ], [ %call8, %cond.false7 ], !dbg !14324
  %conv11 = trunc i32 %cond10 to i8, !dbg !14324
  store i8 %conv11, i8* %r2, align 1, !dbg !14325
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14326
  %demod12 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 1, !dbg !14326
  %9 = load i32, i32* %demod12, align 4, !dbg !14326
  %cmp13 = icmp eq i32 %9, 2, !dbg !14326
  br i1 %cmp13, label %cond.true15, label %cond.false17, !dbg !14326

cond.true15:                                      ; preds = %cond.end9
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14326
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %10, i32 62054) #9, !dbg !14326
  br label %cond.end19, !dbg !14326

cond.false17:                                     ; preds = %cond.end9
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14326
  %call18 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62566) #9, !dbg !14326
  br label %cond.end19, !dbg !14326

cond.end19:                                       ; preds = %cond.false17, %cond.true15
  %cond20 = phi i32 [ %call16, %cond.true15 ], [ %call18, %cond.false17 ], !dbg !14326
  %conv21 = trunc i32 %cond20 to i8, !dbg !14326
  store i8 %conv21, i8* %r1, align 1, !dbg !14327
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14328
  %demod22 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 1, !dbg !14328
  %13 = load i32, i32* %demod22, align 4, !dbg !14328
  %cmp23 = icmp eq i32 %13, 2, !dbg !14328
  br i1 %cmp23, label %cond.true25, label %cond.false27, !dbg !14328

cond.true25:                                      ; preds = %cond.end19
  %14 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14328
  %call26 = call i32 @stv090x_read_reg(%struct.stv090x_state* %14, i32 62055) #9, !dbg !14328
  br label %cond.end29, !dbg !14328

cond.false27:                                     ; preds = %cond.end19
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14328
  %call28 = call i32 @stv090x_read_reg(%struct.stv090x_state* %15, i32 62567) #9, !dbg !14328
  br label %cond.end29, !dbg !14328

cond.end29:                                       ; preds = %cond.false27, %cond.true25
  %cond30 = phi i32 [ %call26, %cond.true25 ], [ %call28, %cond.false27 ], !dbg !14328
  %conv31 = trunc i32 %cond30 to i8, !dbg !14328
  store i8 %conv31, i8* %r0, align 1, !dbg !14329
  %16 = load i8, i8* %r3, align 1, !dbg !14330
  %conv32 = zext i8 %16 to i32, !dbg !14330
  %shl = shl i32 %conv32, 24, !dbg !14331
  %17 = load i8, i8* %r2, align 1, !dbg !14332
  %conv33 = zext i8 %17 to i32, !dbg !14332
  %shl34 = shl i32 %conv33, 16, !dbg !14333
  %or = or i32 %shl, %shl34, !dbg !14334
  %18 = load i8, i8* %r1, align 1, !dbg !14335
  %conv35 = zext i8 %18 to i32, !dbg !14335
  %shl36 = shl i32 %conv35, 8, !dbg !14336
  %or37 = or i32 %or, %shl36, !dbg !14337
  %19 = load i8, i8* %r0, align 1, !dbg !14338
  %conv38 = zext i8 %19 to i32, !dbg !14338
  %or39 = or i32 %or37, %conv38, !dbg !14339
  store i32 %or39, i32* %srate, align 4, !dbg !14340
  %20 = load i32, i32* %clk.addr, align 4, !dbg !14341
  %shr = lshr i32 %20, 16, !dbg !14342
  store i32 %shr, i32* %int_1, align 4, !dbg !14343
  %21 = load i32, i32* %srate, align 4, !dbg !14344
  %shr40 = ashr i32 %21, 16, !dbg !14345
  store i32 %shr40, i32* %int_2, align 4, !dbg !14346
  %22 = load i32, i32* %clk.addr, align 4, !dbg !14347
  %rem = urem i32 %22, 65536, !dbg !14348
  store i32 %rem, i32* %tmp_1, align 4, !dbg !14349
  %23 = load i32, i32* %srate, align 4, !dbg !14350
  %rem41 = srem i32 %23, 65536, !dbg !14351
  store i32 %rem41, i32* %tmp_2, align 4, !dbg !14352
  %24 = load i32, i32* %int_1, align 4, !dbg !14353
  %25 = load i32, i32* %int_2, align 4, !dbg !14354
  %mul = mul i32 %24, %25, !dbg !14355
  %26 = load i32, i32* %int_1, align 4, !dbg !14356
  %27 = load i32, i32* %tmp_2, align 4, !dbg !14357
  %mul42 = mul i32 %26, %27, !dbg !14358
  %shr43 = ashr i32 %mul42, 16, !dbg !14359
  %add = add i32 %mul, %shr43, !dbg !14360
  %28 = load i32, i32* %int_2, align 4, !dbg !14361
  %29 = load i32, i32* %tmp_1, align 4, !dbg !14362
  %mul44 = mul i32 %28, %29, !dbg !14363
  %shr45 = ashr i32 %mul44, 16, !dbg !14364
  %add46 = add i32 %add, %shr45, !dbg !14365
  store i32 %add46, i32* %srate, align 4, !dbg !14366
  %30 = load i32, i32* %srate, align 4, !dbg !14367
  ret i32 %30, !dbg !14368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_loop_params(%struct.stv090x_state* %state, i32* %freq_inc, i32* %timeout_sw, i32* %steps) #0 !dbg !14369 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %freq_inc.addr = alloca i32*, align 8
  %timeout_sw.addr = alloca i32*, align 8
  %steps.addr = alloca i32*, align 8
  %timeout = alloca i32, align 4
  %inc = alloca i32, align 4
  %steps_max = alloca i32, align 4
  %srate = alloca i32, align 4
  %car_max = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14372, metadata !DIExpression()), !dbg !14373
  store i32* %freq_inc, i32** %freq_inc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %freq_inc.addr, metadata !14374, metadata !DIExpression()), !dbg !14375
  store i32* %timeout_sw, i32** %timeout_sw.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %timeout_sw.addr, metadata !14376, metadata !DIExpression()), !dbg !14377
  store i32* %steps, i32** %steps.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %steps.addr, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.declare(metadata i32* %timeout, metadata !14380, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.declare(metadata i32* %inc, metadata !14382, metadata !DIExpression()), !dbg !14383
  call void @llvm.dbg.declare(metadata i32* %steps_max, metadata !14384, metadata !DIExpression()), !dbg !14385
  call void @llvm.dbg.declare(metadata i32* %srate, metadata !14386, metadata !DIExpression()), !dbg !14387
  call void @llvm.dbg.declare(metadata i32* %car_max, metadata !14388, metadata !DIExpression()), !dbg !14389
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14390
  %srate1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 19, !dbg !14391
  %1 = load i32, i32* %srate1, align 4, !dbg !14391
  store i32 %1, i32* %srate, align 4, !dbg !14392
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14393
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 21, !dbg !14394
  %3 = load i32, i32* %search_range, align 4, !dbg !14394
  %div = sdiv i32 %3, 1000, !dbg !14395
  store i32 %div, i32* %car_max, align 4, !dbg !14396
  %4 = load i32, i32* %car_max, align 4, !dbg !14397
  %div2 = sdiv i32 %4, 10, !dbg !14398
  %5 = load i32, i32* %car_max, align 4, !dbg !14399
  %add = add i32 %5, %div2, !dbg !14399
  store i32 %add, i32* %car_max, align 4, !dbg !14399
  %6 = load i32, i32* %car_max, align 4, !dbg !14400
  %div3 = sdiv i32 %6, 2, !dbg !14401
  %mul = mul i32 65536, %div3, !dbg !14402
  store i32 %mul, i32* %car_max, align 4, !dbg !14403
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14404
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 3, !dbg !14405
  %8 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !14405
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %8, i32 0, i32 4, !dbg !14406
  %9 = load i32, i32* %mclk, align 8, !dbg !14406
  %div4 = sdiv i32 %9, 1000, !dbg !14407
  %10 = load i32, i32* %car_max, align 4, !dbg !14408
  %div5 = sdiv i32 %10, %div4, !dbg !14408
  store i32 %div5, i32* %car_max, align 4, !dbg !14408
  %11 = load i32, i32* %car_max, align 4, !dbg !14409
  %cmp = icmp sgt i32 %11, 16384, !dbg !14411
  br i1 %cmp, label %if.then, label %if.end, !dbg !14412

if.then:                                          ; preds = %entry
  store i32 16384, i32* %car_max, align 4, !dbg !14413
  br label %if.end, !dbg !14414

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32, i32* %srate, align 4, !dbg !14415
  store i32 %12, i32* %inc, align 4, !dbg !14416
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14417
  %internal6 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 3, !dbg !14418
  %14 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal6, align 8, !dbg !14418
  %mclk7 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %14, i32 0, i32 4, !dbg !14419
  %15 = load i32, i32* %mclk7, align 8, !dbg !14419
  %div8 = sdiv i32 %15, 1000, !dbg !14420
  %16 = load i32, i32* %inc, align 4, !dbg !14421
  %div9 = sdiv i32 %16, %div8, !dbg !14421
  store i32 %div9, i32* %inc, align 4, !dbg !14421
  %17 = load i32, i32* %inc, align 4, !dbg !14422
  %mul10 = mul i32 %17, 256, !dbg !14422
  store i32 %mul10, i32* %inc, align 4, !dbg !14422
  %18 = load i32, i32* %inc, align 4, !dbg !14423
  %mul11 = mul i32 %18, 256, !dbg !14423
  store i32 %mul11, i32* %inc, align 4, !dbg !14423
  %19 = load i32, i32* %inc, align 4, !dbg !14424
  %div12 = sdiv i32 %19, 1000, !dbg !14424
  store i32 %div12, i32* %inc, align 4, !dbg !14424
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14425
  %search_mode = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 12, !dbg !14426
  %21 = load i32, i32* %search_mode, align 8, !dbg !14426
  switch i32 %21, label %sw.default [
    i32 1, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb14
    i32 3, label %sw.bb16
  ], !dbg !14427

sw.bb:                                            ; preds = %if.end, %if.end
  %22 = load i32, i32* %inc, align 4, !dbg !14428
  %mul13 = mul i32 %22, 3, !dbg !14428
  store i32 %mul13, i32* %inc, align 4, !dbg !14428
  store i32 20, i32* %timeout, align 4, !dbg !14430
  br label %sw.epilog, !dbg !14431

sw.bb14:                                          ; preds = %if.end
  %23 = load i32, i32* %inc, align 4, !dbg !14432
  %mul15 = mul i32 %23, 4, !dbg !14432
  store i32 %mul15, i32* %inc, align 4, !dbg !14432
  store i32 25, i32* %timeout, align 4, !dbg !14433
  br label %sw.epilog, !dbg !14434

sw.bb16:                                          ; preds = %if.end
  br label %sw.default, !dbg !14434

sw.default:                                       ; preds = %if.end, %sw.bb16
  %24 = load i32, i32* %inc, align 4, !dbg !14435
  %mul17 = mul i32 %24, 3, !dbg !14435
  store i32 %mul17, i32* %inc, align 4, !dbg !14435
  store i32 25, i32* %timeout, align 4, !dbg !14436
  br label %sw.epilog, !dbg !14437

sw.epilog:                                        ; preds = %sw.default, %sw.bb14, %sw.bb
  %25 = load i32, i32* %inc, align 4, !dbg !14438
  %div18 = sdiv i32 %25, 100, !dbg !14438
  store i32 %div18, i32* %inc, align 4, !dbg !14438
  %26 = load i32, i32* %inc, align 4, !dbg !14439
  %27 = load i32, i32* %car_max, align 4, !dbg !14441
  %cmp19 = icmp sgt i32 %26, %27, !dbg !14442
  br i1 %cmp19, label %if.then21, label %lor.lhs.false, !dbg !14443

lor.lhs.false:                                    ; preds = %sw.epilog
  %28 = load i32, i32* %inc, align 4, !dbg !14444
  %cmp20 = icmp slt i32 %28, 0, !dbg !14445
  br i1 %cmp20, label %if.then21, label %if.end23, !dbg !14446

if.then21:                                        ; preds = %lor.lhs.false, %sw.epilog
  %29 = load i32, i32* %car_max, align 4, !dbg !14447
  %div22 = sdiv i32 %29, 2, !dbg !14448
  store i32 %div22, i32* %inc, align 4, !dbg !14449
  br label %if.end23, !dbg !14450

if.end23:                                         ; preds = %if.then21, %lor.lhs.false
  %30 = load i32, i32* %timeout, align 4, !dbg !14451
  %mul24 = mul i32 %30, 27500, !dbg !14451
  store i32 %mul24, i32* %timeout, align 4, !dbg !14451
  %31 = load i32, i32* %srate, align 4, !dbg !14452
  %cmp25 = icmp sgt i32 %31, 0, !dbg !14454
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !14455

if.then26:                                        ; preds = %if.end23
  %32 = load i32, i32* %srate, align 4, !dbg !14456
  %div27 = sdiv i32 %32, 1000, !dbg !14457
  %33 = load i32, i32* %timeout, align 4, !dbg !14458
  %div28 = sdiv i32 %33, %div27, !dbg !14458
  store i32 %div28, i32* %timeout, align 4, !dbg !14458
  br label %if.end29, !dbg !14459

if.end29:                                         ; preds = %if.then26, %if.end23
  %34 = load i32, i32* %timeout, align 4, !dbg !14460
  %cmp30 = icmp sgt i32 %34, 100, !dbg !14462
  br i1 %cmp30, label %if.then33, label %lor.lhs.false31, !dbg !14463

lor.lhs.false31:                                  ; preds = %if.end29
  %35 = load i32, i32* %timeout, align 4, !dbg !14464
  %cmp32 = icmp slt i32 %35, 0, !dbg !14465
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !14466

if.then33:                                        ; preds = %lor.lhs.false31, %if.end29
  store i32 100, i32* %timeout, align 4, !dbg !14467
  br label %if.end34, !dbg !14468

if.end34:                                         ; preds = %if.then33, %lor.lhs.false31
  %36 = load i32, i32* %car_max, align 4, !dbg !14469
  %37 = load i32, i32* %inc, align 4, !dbg !14470
  %div35 = sdiv i32 %36, %37, !dbg !14471
  %add36 = add i32 %div35, 1, !dbg !14472
  store i32 %add36, i32* %steps_max, align 4, !dbg !14473
  %38 = load i32, i32* %steps_max, align 4, !dbg !14474
  %cmp37 = icmp sgt i32 %38, 100, !dbg !14476
  br i1 %cmp37, label %if.then40, label %lor.lhs.false38, !dbg !14477

lor.lhs.false38:                                  ; preds = %if.end34
  %39 = load i32, i32* %steps_max, align 4, !dbg !14478
  %cmp39 = icmp slt i32 %39, 0, !dbg !14479
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !14480

if.then40:                                        ; preds = %lor.lhs.false38, %if.end34
  store i32 100, i32* %steps_max, align 4, !dbg !14481
  %40 = load i32, i32* %car_max, align 4, !dbg !14483
  %41 = load i32, i32* %steps_max, align 4, !dbg !14484
  %div41 = sdiv i32 %40, %41, !dbg !14485
  store i32 %div41, i32* %inc, align 4, !dbg !14486
  br label %if.end42, !dbg !14487

if.end42:                                         ; preds = %if.then40, %lor.lhs.false38
  %42 = load i32, i32* %inc, align 4, !dbg !14488
  %43 = load i32*, i32** %freq_inc.addr, align 8, !dbg !14489
  store i32 %42, i32* %43, align 4, !dbg !14490
  %44 = load i32, i32* %timeout, align 4, !dbg !14491
  %45 = load i32*, i32** %timeout_sw.addr, align 8, !dbg !14492
  store i32 %44, i32* %45, align 4, !dbg !14493
  %46 = load i32, i32* %steps_max, align 4, !dbg !14494
  %47 = load i32*, i32** %steps.addr, align 8, !dbg !14495
  store i32 %46, i32* %47, align 4, !dbg !14496
  ret i32 0, !dbg !14497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_search_car_loop(%struct.stv090x_state* %state, i32 %inc, i32 %timeout, i32 %zigzag, i32 %steps_max) #0 !dbg !14498 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.stv090x_state*, align 8
  %inc.addr = alloca i32, align 4
  %timeout.addr = alloca i32, align 4
  %zigzag.addr = alloca i32, align 4
  %steps_max.addr = alloca i32, align 4
  %no_signal = alloca i32, align 4
  %lock = alloca i32, align 4
  %cpt_step = alloca i32, align 4
  %offst_freq = alloca i32, align 4
  %car_max = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14501, metadata !DIExpression()), !dbg !14502
  store i32 %inc, i32* %inc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inc.addr, metadata !14503, metadata !DIExpression()), !dbg !14504
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !14505, metadata !DIExpression()), !dbg !14506
  store i32 %zigzag, i32* %zigzag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %zigzag.addr, metadata !14507, metadata !DIExpression()), !dbg !14508
  store i32 %steps_max, i32* %steps_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %steps_max.addr, metadata !14509, metadata !DIExpression()), !dbg !14510
  call void @llvm.dbg.declare(metadata i32* %no_signal, metadata !14511, metadata !DIExpression()), !dbg !14512
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !14513, metadata !DIExpression()), !dbg !14514
  store i32 0, i32* %lock, align 4, !dbg !14514
  call void @llvm.dbg.declare(metadata i32* %cpt_step, metadata !14515, metadata !DIExpression()), !dbg !14516
  store i32 0, i32* %cpt_step, align 4, !dbg !14516
  call void @llvm.dbg.declare(metadata i32* %offst_freq, metadata !14517, metadata !DIExpression()), !dbg !14518
  call void @llvm.dbg.declare(metadata i32* %car_max, metadata !14519, metadata !DIExpression()), !dbg !14520
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14521, metadata !DIExpression()), !dbg !14522
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14523
  %search_range = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 21, !dbg !14524
  %1 = load i32, i32* %search_range, align 4, !dbg !14524
  %div = sdiv i32 %1, 1000, !dbg !14525
  store i32 %div, i32* %car_max, align 4, !dbg !14526
  %2 = load i32, i32* %car_max, align 4, !dbg !14527
  %div1 = sdiv i32 %2, 10, !dbg !14528
  %3 = load i32, i32* %car_max, align 4, !dbg !14529
  %add = add i32 %3, %div1, !dbg !14529
  store i32 %add, i32* %car_max, align 4, !dbg !14529
  %4 = load i32, i32* %car_max, align 4, !dbg !14530
  %mul = mul i32 65536, %4, !dbg !14531
  %div2 = sdiv i32 %mul, 2, !dbg !14532
  store i32 %div2, i32* %car_max, align 4, !dbg !14533
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14534
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 3, !dbg !14535
  %6 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !14535
  %mclk = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %6, i32 0, i32 4, !dbg !14536
  %7 = load i32, i32* %mclk, align 8, !dbg !14536
  %div3 = sdiv i32 %7, 1000, !dbg !14537
  %8 = load i32, i32* %car_max, align 4, !dbg !14538
  %div4 = sdiv i32 %8, %div3, !dbg !14538
  store i32 %div4, i32* %car_max, align 4, !dbg !14538
  %9 = load i32, i32* %car_max, align 4, !dbg !14539
  %cmp = icmp sgt i32 %9, 16384, !dbg !14541
  br i1 %cmp, label %if.then, label %if.end, !dbg !14542

if.then:                                          ; preds = %entry
  store i32 16384, i32* %car_max, align 4, !dbg !14543
  br label %if.end, !dbg !14544

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %zigzag.addr, align 4, !dbg !14545
  %tobool = icmp ne i32 %10, 0, !dbg !14545
  br i1 %tobool, label %if.then5, label %if.else, !dbg !14547

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %offst_freq, align 4, !dbg !14548
  br label %if.end7, !dbg !14549

if.else:                                          ; preds = %if.end
  %11 = load i32, i32* %car_max, align 4, !dbg !14550
  %sub = sub i32 0, %11, !dbg !14551
  %12 = load i32, i32* %inc.addr, align 4, !dbg !14552
  %add6 = add i32 %sub, %12, !dbg !14553
  store i32 %add6, i32* %offst_freq, align 4, !dbg !14554
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then5
  br label %do.body, !dbg !14555

do.body:                                          ; preds = %land.end, %if.end7
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14556
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %13, i32 0, i32 1, !dbg !14556
  %14 = load i32, i32* %demod, align 4, !dbg !14556
  %cmp8 = icmp eq i32 %14, 2, !dbg !14556
  br i1 %cmp8, label %cond.true, label %cond.false, !dbg !14556

cond.true:                                        ; preds = %do.body
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14556
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %15, i32 61974, i8 zeroext 28) #9, !dbg !14556
  br label %cond.end, !dbg !14556

cond.false:                                       ; preds = %do.body
  %16 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14556
  %call9 = call i32 @stv090x_write_reg(%struct.stv090x_state* %16, i32 62486, i8 zeroext 28) #9, !dbg !14556
  br label %cond.end, !dbg !14556

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call9, %cond.false ], !dbg !14556
  %cmp10 = icmp slt i32 %cond, 0, !dbg !14559
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !14560

if.then11:                                        ; preds = %cond.end
  br label %err, !dbg !14561

if.end12:                                         ; preds = %cond.end
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14562
  %demod13 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %17, i32 0, i32 1, !dbg !14562
  %18 = load i32, i32* %demod13, align 4, !dbg !14562
  %cmp14 = icmp eq i32 %18, 2, !dbg !14562
  br i1 %cmp14, label %cond.true15, label %cond.false18, !dbg !14562

cond.true15:                                      ; preds = %if.end12
  %19 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14562
  %20 = load i32, i32* %offst_freq, align 4, !dbg !14562
  %div16 = sdiv i32 %20, 256, !dbg !14562
  %and = and i32 %div16, 255, !dbg !14562
  %conv = trunc i32 %and to i8, !dbg !14562
  %call17 = call i32 @stv090x_write_reg(%struct.stv090x_state* %19, i32 62024, i8 zeroext %conv) #9, !dbg !14562
  br label %cond.end23, !dbg !14562

cond.false18:                                     ; preds = %if.end12
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14562
  %22 = load i32, i32* %offst_freq, align 4, !dbg !14562
  %div19 = sdiv i32 %22, 256, !dbg !14562
  %and20 = and i32 %div19, 255, !dbg !14562
  %conv21 = trunc i32 %and20 to i8, !dbg !14562
  %call22 = call i32 @stv090x_write_reg(%struct.stv090x_state* %21, i32 62536, i8 zeroext %conv21) #9, !dbg !14562
  br label %cond.end23, !dbg !14562

cond.end23:                                       ; preds = %cond.false18, %cond.true15
  %cond24 = phi i32 [ %call17, %cond.true15 ], [ %call22, %cond.false18 ], !dbg !14562
  %cmp25 = icmp slt i32 %cond24, 0, !dbg !14564
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !14565

if.then27:                                        ; preds = %cond.end23
  br label %err, !dbg !14566

if.end28:                                         ; preds = %cond.end23
  %23 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14567
  %demod29 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %23, i32 0, i32 1, !dbg !14567
  %24 = load i32, i32* %demod29, align 4, !dbg !14567
  %cmp30 = icmp eq i32 %24, 2, !dbg !14567
  br i1 %cmp30, label %cond.true32, label %cond.false36, !dbg !14567

cond.true32:                                      ; preds = %if.end28
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14567
  %26 = load i32, i32* %offst_freq, align 4, !dbg !14567
  %and33 = and i32 %26, 255, !dbg !14567
  %conv34 = trunc i32 %and33 to i8, !dbg !14567
  %call35 = call i32 @stv090x_write_reg(%struct.stv090x_state* %25, i32 62025, i8 zeroext %conv34) #9, !dbg !14567
  br label %cond.end40, !dbg !14567

cond.false36:                                     ; preds = %if.end28
  %27 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14567
  %28 = load i32, i32* %offst_freq, align 4, !dbg !14567
  %and37 = and i32 %28, 255, !dbg !14567
  %conv38 = trunc i32 %and37 to i8, !dbg !14567
  %call39 = call i32 @stv090x_write_reg(%struct.stv090x_state* %27, i32 62537, i8 zeroext %conv38) #9, !dbg !14567
  br label %cond.end40, !dbg !14567

cond.end40:                                       ; preds = %cond.false36, %cond.true32
  %cond41 = phi i32 [ %call35, %cond.true32 ], [ %call39, %cond.false36 ], !dbg !14567
  %cmp42 = icmp slt i32 %cond41, 0, !dbg !14569
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !14570

if.then44:                                        ; preds = %cond.end40
  br label %err, !dbg !14571

if.end45:                                         ; preds = %cond.end40
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14572
  %demod46 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %29, i32 0, i32 1, !dbg !14572
  %30 = load i32, i32* %demod46, align 4, !dbg !14572
  %cmp47 = icmp eq i32 %30, 2, !dbg !14572
  br i1 %cmp47, label %cond.true49, label %cond.false51, !dbg !14572

cond.true49:                                      ; preds = %if.end45
  %31 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14572
  %call50 = call i32 @stv090x_write_reg(%struct.stv090x_state* %31, i32 61974, i8 zeroext 24) #9, !dbg !14572
  br label %cond.end53, !dbg !14572

cond.false51:                                     ; preds = %if.end45
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14572
  %call52 = call i32 @stv090x_write_reg(%struct.stv090x_state* %32, i32 62486, i8 zeroext 24) #9, !dbg !14572
  br label %cond.end53, !dbg !14572

cond.end53:                                       ; preds = %cond.false51, %cond.true49
  %cond54 = phi i32 [ %call50, %cond.true49 ], [ %call52, %cond.false51 ], !dbg !14572
  %cmp55 = icmp slt i32 %cond54, 0, !dbg !14574
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !14575

if.then57:                                        ; preds = %cond.end53
  br label %err, !dbg !14576

if.end58:                                         ; preds = %cond.end53
  %33 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14577
  %demod59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %33, i32 0, i32 1, !dbg !14577
  %34 = load i32, i32* %demod59, align 4, !dbg !14577
  %cmp60 = icmp eq i32 %34, 2, !dbg !14577
  br i1 %cmp60, label %cond.true62, label %cond.false64, !dbg !14577

cond.true62:                                      ; preds = %if.end58
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14577
  %call63 = call i32 @stv090x_read_reg(%struct.stv090x_state* %35, i32 62288) #9, !dbg !14577
  br label %cond.end66, !dbg !14577

cond.false64:                                     ; preds = %if.end58
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14577
  %call65 = call i32 @stv090x_read_reg(%struct.stv090x_state* %36, i32 62800) #9, !dbg !14577
  br label %cond.end66, !dbg !14577

cond.end66:                                       ; preds = %cond.false64, %cond.true62
  %cond67 = phi i32 [ %call63, %cond.true62 ], [ %call65, %cond.false64 ], !dbg !14577
  store i32 %cond67, i32* %reg, align 4, !dbg !14578
  %37 = load i32, i32* %reg, align 4, !dbg !14579
  %and68 = and i32 %37, -2, !dbg !14579
  %or = or i32 %and68, 1, !dbg !14579
  store i32 %or, i32* %reg, align 4, !dbg !14579
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14580
  %demod69 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 1, !dbg !14580
  %39 = load i32, i32* %demod69, align 4, !dbg !14580
  %cmp70 = icmp eq i32 %39, 2, !dbg !14580
  br i1 %cmp70, label %cond.true72, label %cond.false75, !dbg !14580

cond.true72:                                      ; preds = %cond.end66
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14580
  %41 = load i32, i32* %reg, align 4, !dbg !14580
  %conv73 = trunc i32 %41 to i8, !dbg !14580
  %call74 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 62288, i8 zeroext %conv73) #9, !dbg !14580
  br label %cond.end78, !dbg !14580

cond.false75:                                     ; preds = %cond.end66
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14580
  %43 = load i32, i32* %reg, align 4, !dbg !14580
  %conv76 = trunc i32 %43 to i8, !dbg !14580
  %call77 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 62800, i8 zeroext %conv76) #9, !dbg !14580
  br label %cond.end78, !dbg !14580

cond.end78:                                       ; preds = %cond.false75, %cond.true72
  %cond79 = phi i32 [ %call74, %cond.true72 ], [ %call77, %cond.false75 ], !dbg !14580
  %cmp80 = icmp slt i32 %cond79, 0, !dbg !14582
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !14583

if.then82:                                        ; preds = %cond.end78
  br label %err, !dbg !14584

if.end83:                                         ; preds = %cond.end78
  %44 = load i32, i32* %zigzag.addr, align 4, !dbg !14585
  %tobool84 = icmp ne i32 %44, 0, !dbg !14585
  br i1 %tobool84, label %if.then85, label %if.else95, !dbg !14587

if.then85:                                        ; preds = %if.end83
  %45 = load i32, i32* %offst_freq, align 4, !dbg !14588
  %cmp86 = icmp sge i32 %45, 0, !dbg !14591
  br i1 %cmp86, label %if.then88, label %if.else92, !dbg !14592

if.then88:                                        ; preds = %if.then85
  %46 = load i32, i32* %offst_freq, align 4, !dbg !14593
  %sub89 = sub i32 0, %46, !dbg !14594
  %47 = load i32, i32* %inc.addr, align 4, !dbg !14595
  %mul90 = mul i32 2, %47, !dbg !14596
  %sub91 = sub i32 %sub89, %mul90, !dbg !14597
  store i32 %sub91, i32* %offst_freq, align 4, !dbg !14598
  br label %if.end94, !dbg !14599

if.else92:                                        ; preds = %if.then85
  %48 = load i32, i32* %offst_freq, align 4, !dbg !14600
  %sub93 = sub i32 0, %48, !dbg !14601
  store i32 %sub93, i32* %offst_freq, align 4, !dbg !14602
  br label %if.end94

if.end94:                                         ; preds = %if.else92, %if.then88
  br label %if.end98, !dbg !14603

if.else95:                                        ; preds = %if.end83
  %49 = load i32, i32* %inc.addr, align 4, !dbg !14604
  %mul96 = mul i32 2, %49, !dbg !14606
  %50 = load i32, i32* %offst_freq, align 4, !dbg !14607
  %add97 = add i32 %50, %mul96, !dbg !14607
  store i32 %add97, i32* %offst_freq, align 4, !dbg !14607
  br label %if.end98

if.end98:                                         ; preds = %if.else95, %if.end94
  %51 = load i32, i32* %cpt_step, align 4, !dbg !14608
  %inc99 = add i32 %51, 1, !dbg !14608
  store i32 %inc99, i32* %cpt_step, align 4, !dbg !14608
  %52 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14609
  %53 = load i32, i32* %timeout.addr, align 4, !dbg !14610
  %call100 = call i32 @stv090x_get_dmdlock(%struct.stv090x_state* %52, i32 %53) #9, !dbg !14611
  store i32 %call100, i32* %lock, align 4, !dbg !14612
  %54 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14613
  %call101 = call i32 @stv090x_chk_signal(%struct.stv090x_state* %54) #9, !dbg !14614
  store i32 %call101, i32* %no_signal, align 4, !dbg !14615
  br label %do.cond, !dbg !14616

do.cond:                                          ; preds = %if.end98
  %55 = load i32, i32* %lock, align 4, !dbg !14617
  %tobool102 = icmp ne i32 %55, 0, !dbg !14617
  br i1 %tobool102, label %land.end, label %land.lhs.true, !dbg !14618

land.lhs.true:                                    ; preds = %do.cond
  %56 = load i32, i32* %no_signal, align 4, !dbg !14619
  %tobool103 = icmp ne i32 %56, 0, !dbg !14619
  br i1 %tobool103, label %land.end, label %land.lhs.true104, !dbg !14620

land.lhs.true104:                                 ; preds = %land.lhs.true
  %57 = load i32, i32* %offst_freq, align 4, !dbg !14621
  %58 = load i32, i32* %inc.addr, align 4, !dbg !14622
  %sub105 = sub i32 %57, %58, !dbg !14623
  %59 = load i32, i32* %car_max, align 4, !dbg !14624
  %cmp106 = icmp slt i32 %sub105, %59, !dbg !14625
  br i1 %cmp106, label %land.lhs.true108, label %land.end, !dbg !14626

land.lhs.true108:                                 ; preds = %land.lhs.true104
  %60 = load i32, i32* %offst_freq, align 4, !dbg !14627
  %61 = load i32, i32* %inc.addr, align 4, !dbg !14628
  %add109 = add i32 %60, %61, !dbg !14629
  %62 = load i32, i32* %car_max, align 4, !dbg !14630
  %sub110 = sub i32 0, %62, !dbg !14631
  %cmp111 = icmp sgt i32 %add109, %sub110, !dbg !14632
  br i1 %cmp111, label %land.rhs, label %land.end, !dbg !14633

land.rhs:                                         ; preds = %land.lhs.true108
  %63 = load i32, i32* %cpt_step, align 4, !dbg !14634
  %64 = load i32, i32* %steps_max.addr, align 4, !dbg !14635
  %cmp113 = icmp slt i32 %63, %64, !dbg !14636
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true108, %land.lhs.true104, %land.lhs.true, %do.cond
  %65 = phi i1 [ false, %land.lhs.true108 ], [ false, %land.lhs.true104 ], [ false, %land.lhs.true ], [ false, %do.cond ], [ %cmp113, %land.rhs ], !dbg !14637
  br i1 %65, label %do.body, label %do.end, !dbg !14616, !llvm.loop !14638

do.end:                                           ; preds = %land.end
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14640
  %demod115 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %66, i32 0, i32 1, !dbg !14640
  %67 = load i32, i32* %demod115, align 4, !dbg !14640
  %cmp116 = icmp eq i32 %67, 2, !dbg !14640
  br i1 %cmp116, label %cond.true118, label %cond.false120, !dbg !14640

cond.true118:                                     ; preds = %do.end
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14640
  %call119 = call i32 @stv090x_read_reg(%struct.stv090x_state* %68, i32 62288) #9, !dbg !14640
  br label %cond.end122, !dbg !14640

cond.false120:                                    ; preds = %do.end
  %69 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14640
  %call121 = call i32 @stv090x_read_reg(%struct.stv090x_state* %69, i32 62800) #9, !dbg !14640
  br label %cond.end122, !dbg !14640

cond.end122:                                      ; preds = %cond.false120, %cond.true118
  %cond123 = phi i32 [ %call119, %cond.true118 ], [ %call121, %cond.false120 ], !dbg !14640
  store i32 %cond123, i32* %reg, align 4, !dbg !14641
  %70 = load i32, i32* %reg, align 4, !dbg !14642
  %and124 = and i32 %70, -2, !dbg !14642
  store i32 %and124, i32* %reg, align 4, !dbg !14642
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14643
  %demod125 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %71, i32 0, i32 1, !dbg !14643
  %72 = load i32, i32* %demod125, align 4, !dbg !14643
  %cmp126 = icmp eq i32 %72, 2, !dbg !14643
  br i1 %cmp126, label %cond.true128, label %cond.false131, !dbg !14643

cond.true128:                                     ; preds = %cond.end122
  %73 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14643
  %74 = load i32, i32* %reg, align 4, !dbg !14643
  %conv129 = trunc i32 %74 to i8, !dbg !14643
  %call130 = call i32 @stv090x_write_reg(%struct.stv090x_state* %73, i32 62288, i8 zeroext %conv129) #9, !dbg !14643
  br label %cond.end134, !dbg !14643

cond.false131:                                    ; preds = %cond.end122
  %75 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14643
  %76 = load i32, i32* %reg, align 4, !dbg !14643
  %conv132 = trunc i32 %76 to i8, !dbg !14643
  %call133 = call i32 @stv090x_write_reg(%struct.stv090x_state* %75, i32 62800, i8 zeroext %conv132) #9, !dbg !14643
  br label %cond.end134, !dbg !14643

cond.end134:                                      ; preds = %cond.false131, %cond.true128
  %cond135 = phi i32 [ %call130, %cond.true128 ], [ %call133, %cond.false131 ], !dbg !14643
  %cmp136 = icmp slt i32 %cond135, 0, !dbg !14645
  br i1 %cmp136, label %if.then138, label %if.end139, !dbg !14646

if.then138:                                       ; preds = %cond.end134
  br label %err, !dbg !14647

if.end139:                                        ; preds = %cond.end134
  %77 = load i32, i32* %lock, align 4, !dbg !14648
  store i32 %77, i32* %retval, align 4, !dbg !14649
  br label %return, !dbg !14649

err:                                              ; preds = %if.then138, %if.then82, %if.then57, %if.then44, %if.then27, %if.then11
  call void @llvm.dbg.label(metadata !14650), !dbg !14651
  br label %do.body140, !dbg !14652

do.body140:                                       ; preds = %err
  %78 = load i32, i32* @verbose, align 4, !dbg !14653
  %cmp141 = icmp ugt i32 %78, 0, !dbg !14653
  br i1 %cmp141, label %land.lhs.true143, label %if.else148, !dbg !14653

land.lhs.true143:                                 ; preds = %do.body140
  %79 = load i32, i32* @verbose, align 4, !dbg !14653
  %cmp144 = icmp ugt i32 %79, 0, !dbg !14653
  br i1 %cmp144, label %if.then146, label %if.else148, !dbg !14658

if.then146:                                       ; preds = %land.lhs.true143
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_search_car_loop, i64 0, i64 0)) #13, !dbg !14653
  br label %if.end175, !dbg !14653

if.else148:                                       ; preds = %land.lhs.true143, %do.body140
  %80 = load i32, i32* @verbose, align 4, !dbg !14659
  %cmp149 = icmp ugt i32 %80, 1, !dbg !14659
  br i1 %cmp149, label %land.lhs.true151, label %if.else156, !dbg !14659

land.lhs.true151:                                 ; preds = %if.else148
  %81 = load i32, i32* @verbose, align 4, !dbg !14659
  %cmp152 = icmp ugt i32 %81, 0, !dbg !14659
  br i1 %cmp152, label %if.then154, label %if.else156, !dbg !14653

if.then154:                                       ; preds = %land.lhs.true151
  %call155 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_search_car_loop, i64 0, i64 0)) #13, !dbg !14659
  br label %if.end174, !dbg !14659

if.else156:                                       ; preds = %land.lhs.true151, %if.else148
  %82 = load i32, i32* @verbose, align 4, !dbg !14661
  %cmp157 = icmp ugt i32 %82, 2, !dbg !14661
  br i1 %cmp157, label %land.lhs.true159, label %if.else164, !dbg !14661

land.lhs.true159:                                 ; preds = %if.else156
  %83 = load i32, i32* @verbose, align 4, !dbg !14661
  %cmp160 = icmp ugt i32 %83, 0, !dbg !14661
  br i1 %cmp160, label %if.then162, label %if.else164, !dbg !14659

if.then162:                                       ; preds = %land.lhs.true159
  %call163 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_search_car_loop, i64 0, i64 0)) #13, !dbg !14661
  br label %if.end173, !dbg !14661

if.else164:                                       ; preds = %land.lhs.true159, %if.else156
  %84 = load i32, i32* @verbose, align 4, !dbg !14663
  %cmp165 = icmp ugt i32 %84, 3, !dbg !14663
  br i1 %cmp165, label %land.lhs.true167, label %if.end172, !dbg !14663

land.lhs.true167:                                 ; preds = %if.else164
  %85 = load i32, i32* @verbose, align 4, !dbg !14663
  %cmp168 = icmp ugt i32 %85, 0, !dbg !14663
  br i1 %cmp168, label %if.then170, label %if.end172, !dbg !14661

if.then170:                                       ; preds = %land.lhs.true167
  %call171 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.stv090x_search_car_loop, i64 0, i64 0)) #13, !dbg !14663
  br label %if.end172, !dbg !14663

if.end172:                                        ; preds = %if.then170, %land.lhs.true167, %if.else164
  br label %if.end173

if.end173:                                        ; preds = %if.end172, %if.then162
  br label %if.end174

if.end174:                                        ; preds = %if.end173, %if.then154
  br label %if.end175

if.end175:                                        ; preds = %if.end174, %if.then146
  br label %do.end177, !dbg !14665

do.end177:                                        ; preds = %if.end175
  store i32 -1, i32* %retval, align 4, !dbg !14666
  br label %return, !dbg !14666

return:                                           ; preds = %do.end177, %if.end139
  %86 = load i32, i32* %retval, align 4, !dbg !14667
  ret i32 %86, !dbg !14667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_std(%struct.stv090x_state* %state) #0 !dbg !14668 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %delsys = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14671, metadata !DIExpression()), !dbg !14672
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14673, metadata !DIExpression()), !dbg !14674
  call void @llvm.dbg.declare(metadata i32* %delsys, metadata !14675, metadata !DIExpression()), !dbg !14676
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14677
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !14677
  %1 = load i32, i32* %demod, align 4, !dbg !14677
  %cmp = icmp eq i32 %1, 2, !dbg !14677
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14677

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14677
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 61979) #9, !dbg !14677
  br label %cond.end, !dbg !14677

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14677
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62491) #9, !dbg !14677
  br label %cond.end, !dbg !14677

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !14677
  store i32 %cond, i32* %reg, align 4, !dbg !14678
  %4 = load i32, i32* %reg, align 4, !dbg !14679
  %shr = lshr i32 %4, 5, !dbg !14679
  %and = and i32 %shr, 3, !dbg !14679
  %cmp2 = icmp eq i32 %and, 2, !dbg !14681
  br i1 %cmp2, label %if.then, label %if.else, !dbg !14682

if.then:                                          ; preds = %cond.end
  store i32 2, i32* %delsys, align 4, !dbg !14683
  br label %if.end22, !dbg !14684

if.else:                                          ; preds = %cond.end
  %5 = load i32, i32* %reg, align 4, !dbg !14685
  %shr3 = lshr i32 %5, 5, !dbg !14685
  %and4 = and i32 %shr3, 3, !dbg !14685
  %cmp5 = icmp eq i32 %and4, 3, !dbg !14687
  br i1 %cmp5, label %if.then6, label %if.else20, !dbg !14688

if.then6:                                         ; preds = %if.else
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14689
  %demod7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 1, !dbg !14689
  %7 = load i32, i32* %demod7, align 4, !dbg !14689
  %cmp8 = icmp eq i32 %7, 2, !dbg !14689
  br i1 %cmp8, label %cond.true9, label %cond.false11, !dbg !14689

cond.true9:                                       ; preds = %if.then6
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14689
  %call10 = call i32 @stv090x_read_reg(%struct.stv090x_state* %8, i32 62259) #9, !dbg !14689
  br label %cond.end13, !dbg !14689

cond.false11:                                     ; preds = %if.then6
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14689
  %call12 = call i32 @stv090x_read_reg(%struct.stv090x_state* %9, i32 62771) #9, !dbg !14689
  br label %cond.end13, !dbg !14689

cond.end13:                                       ; preds = %cond.false11, %cond.true9
  %cond14 = phi i32 [ %call10, %cond.true9 ], [ %call12, %cond.false11 ], !dbg !14689
  store i32 %cond14, i32* %reg, align 4, !dbg !14691
  %10 = load i32, i32* %reg, align 4, !dbg !14692
  %shr15 = lshr i32 %10, 7, !dbg !14692
  %and16 = and i32 %shr15, 1, !dbg !14692
  %cmp17 = icmp eq i32 %and16, 1, !dbg !14694
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !14695

if.then18:                                        ; preds = %cond.end13
  store i32 3, i32* %delsys, align 4, !dbg !14696
  br label %if.end, !dbg !14697

if.else19:                                        ; preds = %cond.end13
  store i32 1, i32* %delsys, align 4, !dbg !14698
  br label %if.end

if.end:                                           ; preds = %if.else19, %if.then18
  br label %if.end21, !dbg !14699

if.else20:                                        ; preds = %if.else
  store i32 0, i32* %delsys, align 4, !dbg !14700
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  %11 = load i32, i32* %delsys, align 4, !dbg !14702
  ret i32 %11, !dbg !14703
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_car_freq(%struct.stv090x_state* %state, i32 %mclk) #0 !dbg !14704 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %mclk.addr = alloca i32, align 4
  %derot = alloca i32, align 4
  %int_1 = alloca i32, align 4
  %int_2 = alloca i32, align 4
  %tmp_1 = alloca i32, align 4
  %tmp_2 = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14707, metadata !DIExpression()), !dbg !14708
  store i32 %mclk, i32* %mclk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mclk.addr, metadata !14709, metadata !DIExpression()), !dbg !14710
  call void @llvm.dbg.declare(metadata i32* %derot, metadata !14711, metadata !DIExpression()), !dbg !14712
  call void @llvm.dbg.declare(metadata i32* %int_1, metadata !14713, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.declare(metadata i32* %int_2, metadata !14715, metadata !DIExpression()), !dbg !14716
  call void @llvm.dbg.declare(metadata i32* %tmp_1, metadata !14717, metadata !DIExpression()), !dbg !14718
  call void @llvm.dbg.declare(metadata i32* %tmp_2, metadata !14719, metadata !DIExpression()), !dbg !14720
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14721
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !14721
  %1 = load i32, i32* %demod, align 4, !dbg !14721
  %cmp = icmp eq i32 %1, 2, !dbg !14721
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14721

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14721
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 62028) #9, !dbg !14721
  br label %cond.end, !dbg !14721

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14721
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62540) #9, !dbg !14721
  br label %cond.end, !dbg !14721

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !14721
  %shl = shl i32 %cond, 16, !dbg !14722
  store i32 %shl, i32* %derot, align 4, !dbg !14723
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14724
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !14724
  %5 = load i32, i32* %demod2, align 4, !dbg !14724
  %cmp3 = icmp eq i32 %5, 2, !dbg !14724
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !14724

cond.true4:                                       ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14724
  %call5 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62029) #9, !dbg !14724
  br label %cond.end8, !dbg !14724

cond.false6:                                      ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14724
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62541) #9, !dbg !14724
  br label %cond.end8, !dbg !14724

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i32 [ %call5, %cond.true4 ], [ %call7, %cond.false6 ], !dbg !14724
  %shl10 = shl i32 %cond9, 8, !dbg !14725
  %8 = load i32, i32* %derot, align 4, !dbg !14726
  %or = or i32 %8, %shl10, !dbg !14726
  store i32 %or, i32* %derot, align 4, !dbg !14726
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14727
  %demod11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 1, !dbg !14727
  %10 = load i32, i32* %demod11, align 4, !dbg !14727
  %cmp12 = icmp eq i32 %10, 2, !dbg !14727
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !14727

cond.true13:                                      ; preds = %cond.end8
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14727
  %call14 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62030) #9, !dbg !14727
  br label %cond.end17, !dbg !14727

cond.false15:                                     ; preds = %cond.end8
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14727
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 62542) #9, !dbg !14727
  br label %cond.end17, !dbg !14727

cond.end17:                                       ; preds = %cond.false15, %cond.true13
  %cond18 = phi i32 [ %call14, %cond.true13 ], [ %call16, %cond.false15 ], !dbg !14727
  %13 = load i32, i32* %derot, align 4, !dbg !14728
  %or19 = or i32 %13, %cond18, !dbg !14728
  store i32 %or19, i32* %derot, align 4, !dbg !14728
  %14 = load i32, i32* %derot, align 4, !dbg !14729
  %call20 = call i32 @comp2(i32 %14, i32 24) #9, !dbg !14730
  store i32 %call20, i32* %derot, align 4, !dbg !14731
  %15 = load i32, i32* %mclk.addr, align 4, !dbg !14732
  %shr = lshr i32 %15, 12, !dbg !14733
  store i32 %shr, i32* %int_1, align 4, !dbg !14734
  %16 = load i32, i32* %derot, align 4, !dbg !14735
  %shr21 = ashr i32 %16, 12, !dbg !14736
  store i32 %shr21, i32* %int_2, align 4, !dbg !14737
  %17 = load i32, i32* %mclk.addr, align 4, !dbg !14738
  %rem = urem i32 %17, 4096, !dbg !14739
  store i32 %rem, i32* %tmp_1, align 4, !dbg !14740
  %18 = load i32, i32* %derot, align 4, !dbg !14741
  %rem22 = srem i32 %18, 4096, !dbg !14742
  store i32 %rem22, i32* %tmp_2, align 4, !dbg !14743
  %19 = load i32, i32* %int_1, align 4, !dbg !14744
  %20 = load i32, i32* %int_2, align 4, !dbg !14745
  %mul = mul i32 %19, %20, !dbg !14746
  %21 = load i32, i32* %int_1, align 4, !dbg !14747
  %22 = load i32, i32* %tmp_2, align 4, !dbg !14748
  %mul23 = mul i32 %21, %22, !dbg !14749
  %shr24 = ashr i32 %mul23, 12, !dbg !14750
  %add = add i32 %mul, %shr24, !dbg !14751
  %23 = load i32, i32* %int_2, align 4, !dbg !14752
  %24 = load i32, i32* %tmp_1, align 4, !dbg !14753
  %mul25 = mul i32 %23, %24, !dbg !14754
  %shr26 = ashr i32 %mul25, 12, !dbg !14755
  %add27 = add i32 %add, %shr26, !dbg !14756
  store i32 %add27, i32* %derot, align 4, !dbg !14757
  %25 = load i32, i32* %derot, align 4, !dbg !14758
  ret i32 %25, !dbg !14759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_viterbi(%struct.stv090x_state* %state) #0 !dbg !14760 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %reg = alloca i32, align 4
  %rate = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14761, metadata !DIExpression()), !dbg !14762
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !14763, metadata !DIExpression()), !dbg !14764
  call void @llvm.dbg.declare(metadata i32* %rate, metadata !14765, metadata !DIExpression()), !dbg !14766
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14767
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !14767
  %1 = load i32, i32* %demod, align 4, !dbg !14767
  %cmp = icmp eq i32 %1, 2, !dbg !14767
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14767

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14767
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 62266) #9, !dbg !14767
  br label %cond.end, !dbg !14767

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14767
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62778) #9, !dbg !14767
  br label %cond.end, !dbg !14767

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !14767
  store i32 %cond, i32* %reg, align 4, !dbg !14768
  %4 = load i32, i32* %reg, align 4, !dbg !14769
  %shr = lshr i32 %4, 0, !dbg !14769
  %and = and i32 %shr, 31, !dbg !14769
  store i32 %and, i32* %rate, align 4, !dbg !14770
  %5 = load i32, i32* %rate, align 4, !dbg !14771
  switch i32 %5, label %sw.default [
    i32 13, label %sw.bb
    i32 18, label %sw.bb2
    i32 21, label %sw.bb4
    i32 24, label %sw.bb6
    i32 25, label %sw.bb8
    i32 26, label %sw.bb10
  ], !dbg !14772

sw.bb:                                            ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14773
  %fec = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %6, i32 0, i32 9, !dbg !14775
  store i32 0, i32* %fec, align 4, !dbg !14776
  br label %sw.epilog, !dbg !14777

sw.bb2:                                           ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14778
  %fec3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 9, !dbg !14779
  store i32 1, i32* %fec3, align 4, !dbg !14780
  br label %sw.epilog, !dbg !14781

sw.bb4:                                           ; preds = %cond.end
  %8 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14782
  %fec5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %8, i32 0, i32 9, !dbg !14783
  store i32 2, i32* %fec5, align 4, !dbg !14784
  br label %sw.epilog, !dbg !14785

sw.bb6:                                           ; preds = %cond.end
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14786
  %fec7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 9, !dbg !14787
  store i32 4, i32* %fec7, align 4, !dbg !14788
  br label %sw.epilog, !dbg !14789

sw.bb8:                                           ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14790
  %fec9 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 9, !dbg !14791
  store i32 5, i32* %fec9, align 4, !dbg !14792
  br label %sw.epilog, !dbg !14793

sw.bb10:                                          ; preds = %cond.end
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14794
  %fec11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 9, !dbg !14795
  store i32 6, i32* %fec11, align 4, !dbg !14796
  br label %sw.epilog, !dbg !14797

sw.default:                                       ; preds = %cond.end
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14798
  %fec12 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %12, i32 0, i32 9, !dbg !14799
  store i32 9, i32* %fec12, align 4, !dbg !14800
  br label %sw.epilog, !dbg !14801

sw.epilog:                                        ; preds = %sw.default, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2, %sw.bb
  ret i32 0, !dbg !14802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @comp2(i32 %__x, i32 %__width) #0 !dbg !14803 {
entry:
  %retval = alloca i32, align 4
  %__x.addr = alloca i32, align 4
  %__width.addr = alloca i32, align 4
  store i32 %__x, i32* %__x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %__x.addr, metadata !14806, metadata !DIExpression()), !dbg !14807
  store i32 %__width, i32* %__width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %__width.addr, metadata !14808, metadata !DIExpression()), !dbg !14809
  %0 = load i32, i32* %__width.addr, align 4, !dbg !14810
  %cmp = icmp eq i32 %0, 32, !dbg !14812
  br i1 %cmp, label %if.then, label %if.else, !dbg !14813

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %__x.addr, align 4, !dbg !14814
  store i32 %1, i32* %retval, align 4, !dbg !14815
  br label %return, !dbg !14815

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %__x.addr, align 4, !dbg !14816
  %3 = load i32, i32* %__width.addr, align 4, !dbg !14817
  %sub = sub i32 %3, 1, !dbg !14818
  %shl = shl i32 1, %sub, !dbg !14819
  %cmp1 = icmp sge i32 %2, %shl, !dbg !14820
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !14821

cond.true:                                        ; preds = %if.else
  %4 = load i32, i32* %__x.addr, align 4, !dbg !14822
  %5 = load i32, i32* %__width.addr, align 4, !dbg !14823
  %shl2 = shl i32 1, %5, !dbg !14824
  %sub3 = sub i32 %4, %shl2, !dbg !14825
  br label %cond.end, !dbg !14821

cond.false:                                       ; preds = %if.else
  %6 = load i32, i32* %__x.addr, align 4, !dbg !14826
  br label %cond.end, !dbg !14821

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub3, %cond.true ], [ %6, %cond.false ], !dbg !14821
  store i32 %cond, i32* %retval, align 4, !dbg !14827
  br label %return, !dbg !14827

return:                                           ; preds = %cond.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !14828
  ret i32 %7, !dbg !14828
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_tmgoffst(%struct.stv090x_state* %state, i32 %srate) #0 !dbg !14829 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %srate.addr = alloca i32, align 4
  %offst_tmg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14830, metadata !DIExpression()), !dbg !14831
  store i32 %srate, i32* %srate.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %srate.addr, metadata !14832, metadata !DIExpression()), !dbg !14833
  call void @llvm.dbg.declare(metadata i32* %offst_tmg, metadata !14834, metadata !DIExpression()), !dbg !14835
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14836
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 1, !dbg !14836
  %1 = load i32, i32* %demod, align 4, !dbg !14836
  %cmp = icmp eq i32 %1, 2, !dbg !14836
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14836

cond.true:                                        ; preds = %entry
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14836
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %2, i32 62056) #9, !dbg !14836
  br label %cond.end, !dbg !14836

cond.false:                                       ; preds = %entry
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14836
  %call1 = call i32 @stv090x_read_reg(%struct.stv090x_state* %3, i32 62568) #9, !dbg !14836
  br label %cond.end, !dbg !14836

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call1, %cond.false ], !dbg !14836
  %shl = shl i32 %cond, 16, !dbg !14837
  store i32 %shl, i32* %offst_tmg, align 4, !dbg !14838
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14839
  %demod2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !14839
  %5 = load i32, i32* %demod2, align 4, !dbg !14839
  %cmp3 = icmp eq i32 %5, 2, !dbg !14839
  br i1 %cmp3, label %cond.true4, label %cond.false6, !dbg !14839

cond.true4:                                       ; preds = %cond.end
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14839
  %call5 = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 62057) #9, !dbg !14839
  br label %cond.end8, !dbg !14839

cond.false6:                                      ; preds = %cond.end
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14839
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62569) #9, !dbg !14839
  br label %cond.end8, !dbg !14839

cond.end8:                                        ; preds = %cond.false6, %cond.true4
  %cond9 = phi i32 [ %call5, %cond.true4 ], [ %call7, %cond.false6 ], !dbg !14839
  %shl10 = shl i32 %cond9, 8, !dbg !14840
  %8 = load i32, i32* %offst_tmg, align 4, !dbg !14841
  %or = or i32 %8, %shl10, !dbg !14841
  store i32 %or, i32* %offst_tmg, align 4, !dbg !14841
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14842
  %demod11 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %9, i32 0, i32 1, !dbg !14842
  %10 = load i32, i32* %demod11, align 4, !dbg !14842
  %cmp12 = icmp eq i32 %10, 2, !dbg !14842
  br i1 %cmp12, label %cond.true13, label %cond.false15, !dbg !14842

cond.true13:                                      ; preds = %cond.end8
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14842
  %call14 = call i32 @stv090x_read_reg(%struct.stv090x_state* %11, i32 62058) #9, !dbg !14842
  br label %cond.end17, !dbg !14842

cond.false15:                                     ; preds = %cond.end8
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14842
  %call16 = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 62570) #9, !dbg !14842
  br label %cond.end17, !dbg !14842

cond.end17:                                       ; preds = %cond.false15, %cond.true13
  %cond18 = phi i32 [ %call14, %cond.true13 ], [ %call16, %cond.false15 ], !dbg !14842
  %13 = load i32, i32* %offst_tmg, align 4, !dbg !14843
  %or19 = or i32 %13, %cond18, !dbg !14843
  store i32 %or19, i32* %offst_tmg, align 4, !dbg !14843
  %14 = load i32, i32* %offst_tmg, align 4, !dbg !14844
  %call20 = call i32 @comp2(i32 %14, i32 24) #9, !dbg !14845
  store i32 %call20, i32* %offst_tmg, align 4, !dbg !14846
  %15 = load i32, i32* %offst_tmg, align 4, !dbg !14847
  %tobool = icmp ne i32 %15, 0, !dbg !14847
  br i1 %tobool, label %if.end, label %if.then, !dbg !14849

if.then:                                          ; preds = %cond.end17
  store i32 1, i32* %offst_tmg, align 4, !dbg !14850
  br label %if.end, !dbg !14851

if.end:                                           ; preds = %if.then, %cond.end17
  %16 = load i32, i32* %srate.addr, align 4, !dbg !14852
  %mul = mul i32 %16, 10, !dbg !14853
  %17 = load i32, i32* %offst_tmg, align 4, !dbg !14854
  %div = sdiv i32 16777216, %17, !dbg !14855
  %div21 = sdiv i32 %mul, %div, !dbg !14856
  store i32 %div21, i32* %offst_tmg, align 4, !dbg !14857
  %18 = load i32, i32* %offst_tmg, align 4, !dbg !14858
  %div22 = sdiv i32 %18, 320, !dbg !14858
  store i32 %div22, i32* %offst_tmg, align 4, !dbg !14858
  %19 = load i32, i32* %offst_tmg, align 4, !dbg !14859
  ret i32 %19, !dbg !14860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @stv090x_optimize_carloop(%struct.stv090x_state* %state, i32 %modcod, i32 %pilots) #0 !dbg !14861 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %modcod.addr = alloca i32, align 4
  %pilots.addr = alloca i32, align 4
  %aclc = alloca i8, align 1
  %i = alloca i32, align 4
  %car_loop = alloca %struct.stv090x_long_frame_crloop*, align 8
  %car_loop_qpsk_low = alloca %struct.stv090x_long_frame_crloop*, align 8
  %car_loop_apsk_low = alloca %struct.stv090x_long_frame_crloop*, align 8
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !14864, metadata !DIExpression()), !dbg !14865
  store i32 %modcod, i32* %modcod.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %modcod.addr, metadata !14866, metadata !DIExpression()), !dbg !14867
  store i32 %pilots, i32* %pilots.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pilots.addr, metadata !14868, metadata !DIExpression()), !dbg !14869
  call void @llvm.dbg.declare(metadata i8* %aclc, metadata !14870, metadata !DIExpression()), !dbg !14871
  store i8 41, i8* %aclc, align 1, !dbg !14871
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14872, metadata !DIExpression()), !dbg !14873
  call void @llvm.dbg.declare(metadata %struct.stv090x_long_frame_crloop** %car_loop, metadata !14874, metadata !DIExpression()), !dbg !14876
  call void @llvm.dbg.declare(metadata %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, metadata !14877, metadata !DIExpression()), !dbg !14878
  call void @llvm.dbg.declare(metadata %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, metadata !14879, metadata !DIExpression()), !dbg !14880
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14881
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 3, !dbg !14883
  %1 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !14883
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %1, i32 0, i32 5, !dbg !14884
  %2 = load i32, i32* %dev_ver, align 4, !dbg !14884
  %cmp = icmp eq i32 %2, 32, !dbg !14885
  br i1 %cmp, label %if.then, label %if.else, !dbg !14886

if.then:                                          ; preds = %entry
  store %struct.stv090x_long_frame_crloop* getelementptr inbounds ([14 x %struct.stv090x_long_frame_crloop], [14 x %struct.stv090x_long_frame_crloop]* @stv090x_s2_crl_cut20, i64 0, i64 0), %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !14887
  store %struct.stv090x_long_frame_crloop* getelementptr inbounds ([3 x %struct.stv090x_long_frame_crloop], [3 x %struct.stv090x_long_frame_crloop]* @stv090x_s2_lowqpsk_crl_cut20, i64 0, i64 0), %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !14889
  store %struct.stv090x_long_frame_crloop* getelementptr inbounds ([11 x %struct.stv090x_long_frame_crloop], [11 x %struct.stv090x_long_frame_crloop]* @stv090x_s2_apsk_crl_cut20, i64 0, i64 0), %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !14890
  br label %if.end, !dbg !14891

if.else:                                          ; preds = %entry
  store %struct.stv090x_long_frame_crloop* getelementptr inbounds ([14 x %struct.stv090x_long_frame_crloop], [14 x %struct.stv090x_long_frame_crloop]* @stv090x_s2_crl_cut30, i64 0, i64 0), %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !14892
  store %struct.stv090x_long_frame_crloop* getelementptr inbounds ([3 x %struct.stv090x_long_frame_crloop], [3 x %struct.stv090x_long_frame_crloop]* @stv090x_s2_lowqpsk_crl_cut30, i64 0, i64 0), %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !14894
  store %struct.stv090x_long_frame_crloop* getelementptr inbounds ([11 x %struct.stv090x_long_frame_crloop], [11 x %struct.stv090x_long_frame_crloop]* @stv090x_s2_apsk_crl_cut30, i64 0, i64 0), %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !14895
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load i32, i32* %modcod.addr, align 4, !dbg !14896
  %cmp1 = icmp ult i32 %3, 4, !dbg !14898
  br i1 %cmp1, label %if.then2, label %if.else9, !dbg !14899

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !14900
  br label %while.cond, !dbg !14902

while.cond:                                       ; preds = %while.body, %if.then2
  %4 = load i32, i32* %i, align 4, !dbg !14903
  %cmp3 = icmp slt i32 %4, 3, !dbg !14904
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !14905

land.rhs:                                         ; preds = %while.cond
  %5 = load i32, i32* %modcod.addr, align 4, !dbg !14906
  %6 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !14907
  %7 = load i32, i32* %i, align 4, !dbg !14908
  %idxprom = sext i32 %7 to i64, !dbg !14907
  %arrayidx = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %6, i64 %idxprom, !dbg !14907
  %modcod4 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx, i32 0, i32 0, !dbg !14909
  %8 = load i32, i32* %modcod4, align 4, !dbg !14909
  %cmp5 = icmp ne i32 %5, %8, !dbg !14910
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %9 = phi i1 [ false, %while.cond ], [ %cmp5, %land.rhs ], !dbg !14911
  br i1 %9, label %while.body, label %while.end, !dbg !14902

while.body:                                       ; preds = %land.end
  %10 = load i32, i32* %i, align 4, !dbg !14912
  %inc = add i32 %10, 1, !dbg !14912
  store i32 %inc, i32* %i, align 4, !dbg !14912
  br label %while.cond, !dbg !14902, !llvm.loop !14913

while.end:                                        ; preds = %land.end
  %11 = load i32, i32* %i, align 4, !dbg !14914
  %cmp6 = icmp sge i32 %11, 3, !dbg !14916
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !14917

if.then7:                                         ; preds = %while.end
  store i32 2, i32* %i, align 4, !dbg !14918
  br label %if.end8, !dbg !14919

if.end8:                                          ; preds = %if.then7, %while.end
  br label %if.end38, !dbg !14920

if.else9:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !14921
  br label %while.cond10, !dbg !14923

while.cond10:                                     ; preds = %while.body18, %if.else9
  %12 = load i32, i32* %i, align 4, !dbg !14924
  %cmp11 = icmp slt i32 %12, 14, !dbg !14925
  br i1 %cmp11, label %land.rhs12, label %land.end17, !dbg !14926

land.rhs12:                                       ; preds = %while.cond10
  %13 = load i32, i32* %modcod.addr, align 4, !dbg !14927
  %14 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !14928
  %15 = load i32, i32* %i, align 4, !dbg !14929
  %idxprom13 = sext i32 %15 to i64, !dbg !14928
  %arrayidx14 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %14, i64 %idxprom13, !dbg !14928
  %modcod15 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx14, i32 0, i32 0, !dbg !14930
  %16 = load i32, i32* %modcod15, align 4, !dbg !14930
  %cmp16 = icmp ne i32 %13, %16, !dbg !14931
  br label %land.end17

land.end17:                                       ; preds = %land.rhs12, %while.cond10
  %17 = phi i1 [ false, %while.cond10 ], [ %cmp16, %land.rhs12 ], !dbg !14932
  br i1 %17, label %while.body18, label %while.end20, !dbg !14923

while.body18:                                     ; preds = %land.end17
  %18 = load i32, i32* %i, align 4, !dbg !14933
  %inc19 = add i32 %18, 1, !dbg !14933
  store i32 %inc19, i32* %i, align 4, !dbg !14933
  br label %while.cond10, !dbg !14923, !llvm.loop !14934

while.end20:                                      ; preds = %land.end17
  %19 = load i32, i32* %i, align 4, !dbg !14935
  %cmp21 = icmp sge i32 %19, 14, !dbg !14937
  br i1 %cmp21, label %if.then22, label %if.end37, !dbg !14938

if.then22:                                        ; preds = %while.end20
  store i32 0, i32* %i, align 4, !dbg !14939
  br label %while.cond23, !dbg !14941

while.cond23:                                     ; preds = %while.body31, %if.then22
  %20 = load i32, i32* %i, align 4, !dbg !14942
  %cmp24 = icmp slt i32 %20, 11, !dbg !14943
  br i1 %cmp24, label %land.rhs25, label %land.end30, !dbg !14944

land.rhs25:                                       ; preds = %while.cond23
  %21 = load i32, i32* %modcod.addr, align 4, !dbg !14945
  %22 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !14946
  %23 = load i32, i32* %i, align 4, !dbg !14947
  %idxprom26 = sext i32 %23 to i64, !dbg !14946
  %arrayidx27 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %22, i64 %idxprom26, !dbg !14946
  %modcod28 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx27, i32 0, i32 0, !dbg !14948
  %24 = load i32, i32* %modcod28, align 4, !dbg !14948
  %cmp29 = icmp ne i32 %21, %24, !dbg !14949
  br label %land.end30

land.end30:                                       ; preds = %land.rhs25, %while.cond23
  %25 = phi i1 [ false, %while.cond23 ], [ %cmp29, %land.rhs25 ], !dbg !14950
  br i1 %25, label %while.body31, label %while.end33, !dbg !14941

while.body31:                                     ; preds = %land.end30
  %26 = load i32, i32* %i, align 4, !dbg !14951
  %inc32 = add i32 %26, 1, !dbg !14951
  store i32 %inc32, i32* %i, align 4, !dbg !14951
  br label %while.cond23, !dbg !14941, !llvm.loop !14952

while.end33:                                      ; preds = %land.end30
  %27 = load i32, i32* %i, align 4, !dbg !14953
  %cmp34 = icmp sge i32 %27, 11, !dbg !14955
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !14956

if.then35:                                        ; preds = %while.end33
  store i32 10, i32* %i, align 4, !dbg !14957
  br label %if.end36, !dbg !14958

if.end36:                                         ; preds = %if.then35, %while.end33
  br label %if.end37, !dbg !14959

if.end37:                                         ; preds = %if.end36, %while.end20
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.end8
  %28 = load i32, i32* %modcod.addr, align 4, !dbg !14960
  %cmp39 = icmp ule i32 %28, 3, !dbg !14962
  br i1 %cmp39, label %if.then40, label %if.else103, !dbg !14963

if.then40:                                        ; preds = %if.end38
  %29 = load i32, i32* %pilots.addr, align 4, !dbg !14964
  %tobool = icmp ne i32 %29, 0, !dbg !14964
  br i1 %tobool, label %if.then41, label %if.else71, !dbg !14967

if.then41:                                        ; preds = %if.then40
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14968
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 19, !dbg !14971
  %31 = load i32, i32* %srate, align 4, !dbg !14971
  %cmp42 = icmp ule i32 %31, 3000000, !dbg !14972
  br i1 %cmp42, label %if.then43, label %if.else46, !dbg !14973

if.then43:                                        ; preds = %if.then41
  %32 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !14974
  %33 = load i32, i32* %i, align 4, !dbg !14975
  %idxprom44 = sext i32 %33 to i64, !dbg !14974
  %arrayidx45 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %32, i64 %idxprom44, !dbg !14974
  %crl_pilots_on_2 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx45, i32 0, i32 1, !dbg !14976
  %34 = load i8, i8* %crl_pilots_on_2, align 4, !dbg !14976
  store i8 %34, i8* %aclc, align 1, !dbg !14977
  br label %if.end70, !dbg !14978

if.else46:                                        ; preds = %if.then41
  %35 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14979
  %srate47 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %35, i32 0, i32 19, !dbg !14981
  %36 = load i32, i32* %srate47, align 4, !dbg !14981
  %cmp48 = icmp ule i32 %36, 7000000, !dbg !14982
  br i1 %cmp48, label %if.then49, label %if.else52, !dbg !14983

if.then49:                                        ; preds = %if.else46
  %37 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !14984
  %38 = load i32, i32* %i, align 4, !dbg !14985
  %idxprom50 = sext i32 %38 to i64, !dbg !14984
  %arrayidx51 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %37, i64 %idxprom50, !dbg !14984
  %crl_pilots_on_5 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx51, i32 0, i32 3, !dbg !14986
  %39 = load i8, i8* %crl_pilots_on_5, align 2, !dbg !14986
  store i8 %39, i8* %aclc, align 1, !dbg !14987
  br label %if.end69, !dbg !14988

if.else52:                                        ; preds = %if.else46
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14989
  %srate53 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %40, i32 0, i32 19, !dbg !14991
  %41 = load i32, i32* %srate53, align 4, !dbg !14991
  %cmp54 = icmp ule i32 %41, 15000000, !dbg !14992
  br i1 %cmp54, label %if.then55, label %if.else58, !dbg !14993

if.then55:                                        ; preds = %if.else52
  %42 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !14994
  %43 = load i32, i32* %i, align 4, !dbg !14995
  %idxprom56 = sext i32 %43 to i64, !dbg !14994
  %arrayidx57 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %42, i64 %idxprom56, !dbg !14994
  %crl_pilots_on_10 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx57, i32 0, i32 5, !dbg !14996
  %44 = load i8, i8* %crl_pilots_on_10, align 4, !dbg !14996
  store i8 %44, i8* %aclc, align 1, !dbg !14997
  br label %if.end68, !dbg !14998

if.else58:                                        ; preds = %if.else52
  %45 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !14999
  %srate59 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %45, i32 0, i32 19, !dbg !15001
  %46 = load i32, i32* %srate59, align 4, !dbg !15001
  %cmp60 = icmp ule i32 %46, 25000000, !dbg !15002
  br i1 %cmp60, label %if.then61, label %if.else64, !dbg !15003

if.then61:                                        ; preds = %if.else58
  %47 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15004
  %48 = load i32, i32* %i, align 4, !dbg !15005
  %idxprom62 = sext i32 %48 to i64, !dbg !15004
  %arrayidx63 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %47, i64 %idxprom62, !dbg !15004
  %crl_pilots_on_20 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx63, i32 0, i32 7, !dbg !15006
  %49 = load i8, i8* %crl_pilots_on_20, align 2, !dbg !15006
  store i8 %49, i8* %aclc, align 1, !dbg !15007
  br label %if.end67, !dbg !15008

if.else64:                                        ; preds = %if.else58
  %50 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15009
  %51 = load i32, i32* %i, align 4, !dbg !15010
  %idxprom65 = sext i32 %51 to i64, !dbg !15009
  %arrayidx66 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %50, i64 %idxprom65, !dbg !15009
  %crl_pilots_on_30 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx66, i32 0, i32 9, !dbg !15011
  %52 = load i8, i8* %crl_pilots_on_30, align 4, !dbg !15011
  store i8 %52, i8* %aclc, align 1, !dbg !15012
  br label %if.end67

if.end67:                                         ; preds = %if.else64, %if.then61
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.then55
  br label %if.end69

if.end69:                                         ; preds = %if.end68, %if.then49
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then43
  br label %if.end102, !dbg !15013

if.else71:                                        ; preds = %if.then40
  %53 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15014
  %srate72 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %53, i32 0, i32 19, !dbg !15017
  %54 = load i32, i32* %srate72, align 4, !dbg !15017
  %cmp73 = icmp ule i32 %54, 3000000, !dbg !15018
  br i1 %cmp73, label %if.then74, label %if.else77, !dbg !15019

if.then74:                                        ; preds = %if.else71
  %55 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15020
  %56 = load i32, i32* %i, align 4, !dbg !15021
  %idxprom75 = sext i32 %56 to i64, !dbg !15020
  %arrayidx76 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %55, i64 %idxprom75, !dbg !15020
  %crl_pilots_off_2 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx76, i32 0, i32 2, !dbg !15022
  %57 = load i8, i8* %crl_pilots_off_2, align 1, !dbg !15022
  store i8 %57, i8* %aclc, align 1, !dbg !15023
  br label %if.end101, !dbg !15024

if.else77:                                        ; preds = %if.else71
  %58 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15025
  %srate78 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %58, i32 0, i32 19, !dbg !15027
  %59 = load i32, i32* %srate78, align 4, !dbg !15027
  %cmp79 = icmp ule i32 %59, 7000000, !dbg !15028
  br i1 %cmp79, label %if.then80, label %if.else83, !dbg !15029

if.then80:                                        ; preds = %if.else77
  %60 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15030
  %61 = load i32, i32* %i, align 4, !dbg !15031
  %idxprom81 = sext i32 %61 to i64, !dbg !15030
  %arrayidx82 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %60, i64 %idxprom81, !dbg !15030
  %crl_pilots_off_5 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx82, i32 0, i32 4, !dbg !15032
  %62 = load i8, i8* %crl_pilots_off_5, align 1, !dbg !15032
  store i8 %62, i8* %aclc, align 1, !dbg !15033
  br label %if.end100, !dbg !15034

if.else83:                                        ; preds = %if.else77
  %63 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15035
  %srate84 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %63, i32 0, i32 19, !dbg !15037
  %64 = load i32, i32* %srate84, align 4, !dbg !15037
  %cmp85 = icmp ule i32 %64, 15000000, !dbg !15038
  br i1 %cmp85, label %if.then86, label %if.else89, !dbg !15039

if.then86:                                        ; preds = %if.else83
  %65 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15040
  %66 = load i32, i32* %i, align 4, !dbg !15041
  %idxprom87 = sext i32 %66 to i64, !dbg !15040
  %arrayidx88 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %65, i64 %idxprom87, !dbg !15040
  %crl_pilots_off_10 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx88, i32 0, i32 6, !dbg !15042
  %67 = load i8, i8* %crl_pilots_off_10, align 1, !dbg !15042
  store i8 %67, i8* %aclc, align 1, !dbg !15043
  br label %if.end99, !dbg !15044

if.else89:                                        ; preds = %if.else83
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15045
  %srate90 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %68, i32 0, i32 19, !dbg !15047
  %69 = load i32, i32* %srate90, align 4, !dbg !15047
  %cmp91 = icmp ule i32 %69, 25000000, !dbg !15048
  br i1 %cmp91, label %if.then92, label %if.else95, !dbg !15049

if.then92:                                        ; preds = %if.else89
  %70 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15050
  %71 = load i32, i32* %i, align 4, !dbg !15051
  %idxprom93 = sext i32 %71 to i64, !dbg !15050
  %arrayidx94 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %70, i64 %idxprom93, !dbg !15050
  %crl_pilots_off_20 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx94, i32 0, i32 8, !dbg !15052
  %72 = load i8, i8* %crl_pilots_off_20, align 1, !dbg !15052
  store i8 %72, i8* %aclc, align 1, !dbg !15053
  br label %if.end98, !dbg !15054

if.else95:                                        ; preds = %if.else89
  %73 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_qpsk_low, align 8, !dbg !15055
  %74 = load i32, i32* %i, align 4, !dbg !15056
  %idxprom96 = sext i32 %74 to i64, !dbg !15055
  %arrayidx97 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %73, i64 %idxprom96, !dbg !15055
  %crl_pilots_off_30 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx97, i32 0, i32 10, !dbg !15057
  %75 = load i8, i8* %crl_pilots_off_30, align 1, !dbg !15057
  store i8 %75, i8* %aclc, align 1, !dbg !15058
  br label %if.end98

if.end98:                                         ; preds = %if.else95, %if.then92
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then86
  br label %if.end100

if.end100:                                        ; preds = %if.end99, %if.then80
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then74
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end70
  br label %if.end220, !dbg !15059

if.else103:                                       ; preds = %if.end38
  %76 = load i32, i32* %modcod.addr, align 4, !dbg !15060
  %cmp104 = icmp ule i32 %76, 17, !dbg !15062
  br i1 %cmp104, label %if.then105, label %if.else180, !dbg !15063

if.then105:                                       ; preds = %if.else103
  %77 = load i32, i32* %pilots.addr, align 4, !dbg !15064
  %tobool106 = icmp ne i32 %77, 0, !dbg !15064
  br i1 %tobool106, label %if.then107, label %if.else143, !dbg !15067

if.then107:                                       ; preds = %if.then105
  %78 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15068
  %srate108 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %78, i32 0, i32 19, !dbg !15071
  %79 = load i32, i32* %srate108, align 4, !dbg !15071
  %cmp109 = icmp ule i32 %79, 3000000, !dbg !15072
  br i1 %cmp109, label %if.then110, label %if.else114, !dbg !15073

if.then110:                                       ; preds = %if.then107
  %80 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15074
  %81 = load i32, i32* %i, align 4, !dbg !15075
  %idxprom111 = sext i32 %81 to i64, !dbg !15074
  %arrayidx112 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %80, i64 %idxprom111, !dbg !15074
  %crl_pilots_on_2113 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx112, i32 0, i32 1, !dbg !15076
  %82 = load i8, i8* %crl_pilots_on_2113, align 4, !dbg !15076
  store i8 %82, i8* %aclc, align 1, !dbg !15077
  br label %if.end142, !dbg !15078

if.else114:                                       ; preds = %if.then107
  %83 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15079
  %srate115 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %83, i32 0, i32 19, !dbg !15081
  %84 = load i32, i32* %srate115, align 4, !dbg !15081
  %cmp116 = icmp ule i32 %84, 7000000, !dbg !15082
  br i1 %cmp116, label %if.then117, label %if.else121, !dbg !15083

if.then117:                                       ; preds = %if.else114
  %85 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15084
  %86 = load i32, i32* %i, align 4, !dbg !15085
  %idxprom118 = sext i32 %86 to i64, !dbg !15084
  %arrayidx119 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %85, i64 %idxprom118, !dbg !15084
  %crl_pilots_on_5120 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx119, i32 0, i32 3, !dbg !15086
  %87 = load i8, i8* %crl_pilots_on_5120, align 2, !dbg !15086
  store i8 %87, i8* %aclc, align 1, !dbg !15087
  br label %if.end141, !dbg !15088

if.else121:                                       ; preds = %if.else114
  %88 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15089
  %srate122 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %88, i32 0, i32 19, !dbg !15091
  %89 = load i32, i32* %srate122, align 4, !dbg !15091
  %cmp123 = icmp ule i32 %89, 15000000, !dbg !15092
  br i1 %cmp123, label %if.then124, label %if.else128, !dbg !15093

if.then124:                                       ; preds = %if.else121
  %90 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15094
  %91 = load i32, i32* %i, align 4, !dbg !15095
  %idxprom125 = sext i32 %91 to i64, !dbg !15094
  %arrayidx126 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %90, i64 %idxprom125, !dbg !15094
  %crl_pilots_on_10127 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx126, i32 0, i32 5, !dbg !15096
  %92 = load i8, i8* %crl_pilots_on_10127, align 4, !dbg !15096
  store i8 %92, i8* %aclc, align 1, !dbg !15097
  br label %if.end140, !dbg !15098

if.else128:                                       ; preds = %if.else121
  %93 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15099
  %srate129 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %93, i32 0, i32 19, !dbg !15101
  %94 = load i32, i32* %srate129, align 4, !dbg !15101
  %cmp130 = icmp ule i32 %94, 25000000, !dbg !15102
  br i1 %cmp130, label %if.then131, label %if.else135, !dbg !15103

if.then131:                                       ; preds = %if.else128
  %95 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15104
  %96 = load i32, i32* %i, align 4, !dbg !15105
  %idxprom132 = sext i32 %96 to i64, !dbg !15104
  %arrayidx133 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %95, i64 %idxprom132, !dbg !15104
  %crl_pilots_on_20134 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx133, i32 0, i32 7, !dbg !15106
  %97 = load i8, i8* %crl_pilots_on_20134, align 2, !dbg !15106
  store i8 %97, i8* %aclc, align 1, !dbg !15107
  br label %if.end139, !dbg !15108

if.else135:                                       ; preds = %if.else128
  %98 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15109
  %99 = load i32, i32* %i, align 4, !dbg !15110
  %idxprom136 = sext i32 %99 to i64, !dbg !15109
  %arrayidx137 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %98, i64 %idxprom136, !dbg !15109
  %crl_pilots_on_30138 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx137, i32 0, i32 9, !dbg !15111
  %100 = load i8, i8* %crl_pilots_on_30138, align 4, !dbg !15111
  store i8 %100, i8* %aclc, align 1, !dbg !15112
  br label %if.end139

if.end139:                                        ; preds = %if.else135, %if.then131
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then124
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then117
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.then110
  br label %if.end179, !dbg !15113

if.else143:                                       ; preds = %if.then105
  %101 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15114
  %srate144 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %101, i32 0, i32 19, !dbg !15117
  %102 = load i32, i32* %srate144, align 4, !dbg !15117
  %cmp145 = icmp ule i32 %102, 3000000, !dbg !15118
  br i1 %cmp145, label %if.then146, label %if.else150, !dbg !15119

if.then146:                                       ; preds = %if.else143
  %103 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15120
  %104 = load i32, i32* %i, align 4, !dbg !15121
  %idxprom147 = sext i32 %104 to i64, !dbg !15120
  %arrayidx148 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %103, i64 %idxprom147, !dbg !15120
  %crl_pilots_off_2149 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx148, i32 0, i32 2, !dbg !15122
  %105 = load i8, i8* %crl_pilots_off_2149, align 1, !dbg !15122
  store i8 %105, i8* %aclc, align 1, !dbg !15123
  br label %if.end178, !dbg !15124

if.else150:                                       ; preds = %if.else143
  %106 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15125
  %srate151 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %106, i32 0, i32 19, !dbg !15127
  %107 = load i32, i32* %srate151, align 4, !dbg !15127
  %cmp152 = icmp ule i32 %107, 7000000, !dbg !15128
  br i1 %cmp152, label %if.then153, label %if.else157, !dbg !15129

if.then153:                                       ; preds = %if.else150
  %108 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15130
  %109 = load i32, i32* %i, align 4, !dbg !15131
  %idxprom154 = sext i32 %109 to i64, !dbg !15130
  %arrayidx155 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %108, i64 %idxprom154, !dbg !15130
  %crl_pilots_off_5156 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx155, i32 0, i32 4, !dbg !15132
  %110 = load i8, i8* %crl_pilots_off_5156, align 1, !dbg !15132
  store i8 %110, i8* %aclc, align 1, !dbg !15133
  br label %if.end177, !dbg !15134

if.else157:                                       ; preds = %if.else150
  %111 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15135
  %srate158 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %111, i32 0, i32 19, !dbg !15137
  %112 = load i32, i32* %srate158, align 4, !dbg !15137
  %cmp159 = icmp ule i32 %112, 15000000, !dbg !15138
  br i1 %cmp159, label %if.then160, label %if.else164, !dbg !15139

if.then160:                                       ; preds = %if.else157
  %113 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15140
  %114 = load i32, i32* %i, align 4, !dbg !15141
  %idxprom161 = sext i32 %114 to i64, !dbg !15140
  %arrayidx162 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %113, i64 %idxprom161, !dbg !15140
  %crl_pilots_off_10163 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx162, i32 0, i32 6, !dbg !15142
  %115 = load i8, i8* %crl_pilots_off_10163, align 1, !dbg !15142
  store i8 %115, i8* %aclc, align 1, !dbg !15143
  br label %if.end176, !dbg !15144

if.else164:                                       ; preds = %if.else157
  %116 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15145
  %srate165 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %116, i32 0, i32 19, !dbg !15147
  %117 = load i32, i32* %srate165, align 4, !dbg !15147
  %cmp166 = icmp ule i32 %117, 25000000, !dbg !15148
  br i1 %cmp166, label %if.then167, label %if.else171, !dbg !15149

if.then167:                                       ; preds = %if.else164
  %118 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15150
  %119 = load i32, i32* %i, align 4, !dbg !15151
  %idxprom168 = sext i32 %119 to i64, !dbg !15150
  %arrayidx169 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %118, i64 %idxprom168, !dbg !15150
  %crl_pilots_off_20170 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx169, i32 0, i32 8, !dbg !15152
  %120 = load i8, i8* %crl_pilots_off_20170, align 1, !dbg !15152
  store i8 %120, i8* %aclc, align 1, !dbg !15153
  br label %if.end175, !dbg !15154

if.else171:                                       ; preds = %if.else164
  %121 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop, align 8, !dbg !15155
  %122 = load i32, i32* %i, align 4, !dbg !15156
  %idxprom172 = sext i32 %122 to i64, !dbg !15155
  %arrayidx173 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %121, i64 %idxprom172, !dbg !15155
  %crl_pilots_off_30174 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx173, i32 0, i32 10, !dbg !15157
  %123 = load i8, i8* %crl_pilots_off_30174, align 1, !dbg !15157
  store i8 %123, i8* %aclc, align 1, !dbg !15158
  br label %if.end175

if.end175:                                        ; preds = %if.else171, %if.then167
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then160
  br label %if.end177

if.end177:                                        ; preds = %if.end176, %if.then153
  br label %if.end178

if.end178:                                        ; preds = %if.end177, %if.then146
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.end142
  br label %if.end219, !dbg !15159

if.else180:                                       ; preds = %if.else103
  %124 = load i32, i32* %i, align 4, !dbg !15160
  %cmp181 = icmp sge i32 %124, 11, !dbg !15163
  br i1 %cmp181, label %if.then182, label %if.end183, !dbg !15164

if.then182:                                       ; preds = %if.else180
  store i32 10, i32* %i, align 4, !dbg !15165
  br label %if.end183, !dbg !15166

if.end183:                                        ; preds = %if.then182, %if.else180
  %125 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15167
  %srate184 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %125, i32 0, i32 19, !dbg !15169
  %126 = load i32, i32* %srate184, align 4, !dbg !15169
  %cmp185 = icmp ule i32 %126, 3000000, !dbg !15170
  br i1 %cmp185, label %if.then186, label %if.else190, !dbg !15171

if.then186:                                       ; preds = %if.end183
  %127 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !15172
  %128 = load i32, i32* %i, align 4, !dbg !15173
  %idxprom187 = sext i32 %128 to i64, !dbg !15172
  %arrayidx188 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %127, i64 %idxprom187, !dbg !15172
  %crl_pilots_on_2189 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx188, i32 0, i32 1, !dbg !15174
  %129 = load i8, i8* %crl_pilots_on_2189, align 4, !dbg !15174
  store i8 %129, i8* %aclc, align 1, !dbg !15175
  br label %if.end218, !dbg !15176

if.else190:                                       ; preds = %if.end183
  %130 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15177
  %srate191 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %130, i32 0, i32 19, !dbg !15179
  %131 = load i32, i32* %srate191, align 4, !dbg !15179
  %cmp192 = icmp ule i32 %131, 7000000, !dbg !15180
  br i1 %cmp192, label %if.then193, label %if.else197, !dbg !15181

if.then193:                                       ; preds = %if.else190
  %132 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !15182
  %133 = load i32, i32* %i, align 4, !dbg !15183
  %idxprom194 = sext i32 %133 to i64, !dbg !15182
  %arrayidx195 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %132, i64 %idxprom194, !dbg !15182
  %crl_pilots_on_5196 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx195, i32 0, i32 3, !dbg !15184
  %134 = load i8, i8* %crl_pilots_on_5196, align 2, !dbg !15184
  store i8 %134, i8* %aclc, align 1, !dbg !15185
  br label %if.end217, !dbg !15186

if.else197:                                       ; preds = %if.else190
  %135 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15187
  %srate198 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %135, i32 0, i32 19, !dbg !15189
  %136 = load i32, i32* %srate198, align 4, !dbg !15189
  %cmp199 = icmp ule i32 %136, 15000000, !dbg !15190
  br i1 %cmp199, label %if.then200, label %if.else204, !dbg !15191

if.then200:                                       ; preds = %if.else197
  %137 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !15192
  %138 = load i32, i32* %i, align 4, !dbg !15193
  %idxprom201 = sext i32 %138 to i64, !dbg !15192
  %arrayidx202 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %137, i64 %idxprom201, !dbg !15192
  %crl_pilots_on_10203 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx202, i32 0, i32 5, !dbg !15194
  %139 = load i8, i8* %crl_pilots_on_10203, align 4, !dbg !15194
  store i8 %139, i8* %aclc, align 1, !dbg !15195
  br label %if.end216, !dbg !15196

if.else204:                                       ; preds = %if.else197
  %140 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15197
  %srate205 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %140, i32 0, i32 19, !dbg !15199
  %141 = load i32, i32* %srate205, align 4, !dbg !15199
  %cmp206 = icmp ule i32 %141, 25000000, !dbg !15200
  br i1 %cmp206, label %if.then207, label %if.else211, !dbg !15201

if.then207:                                       ; preds = %if.else204
  %142 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !15202
  %143 = load i32, i32* %i, align 4, !dbg !15203
  %idxprom208 = sext i32 %143 to i64, !dbg !15202
  %arrayidx209 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %142, i64 %idxprom208, !dbg !15202
  %crl_pilots_on_20210 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx209, i32 0, i32 7, !dbg !15204
  %144 = load i8, i8* %crl_pilots_on_20210, align 2, !dbg !15204
  store i8 %144, i8* %aclc, align 1, !dbg !15205
  br label %if.end215, !dbg !15206

if.else211:                                       ; preds = %if.else204
  %145 = load %struct.stv090x_long_frame_crloop*, %struct.stv090x_long_frame_crloop** %car_loop_apsk_low, align 8, !dbg !15207
  %146 = load i32, i32* %i, align 4, !dbg !15208
  %idxprom212 = sext i32 %146 to i64, !dbg !15207
  %arrayidx213 = getelementptr %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %145, i64 %idxprom212, !dbg !15207
  %crl_pilots_on_30214 = getelementptr inbounds %struct.stv090x_long_frame_crloop, %struct.stv090x_long_frame_crloop* %arrayidx213, i32 0, i32 9, !dbg !15209
  %147 = load i8, i8* %crl_pilots_on_30214, align 4, !dbg !15209
  store i8 %147, i8* %aclc, align 1, !dbg !15210
  br label %if.end215

if.end215:                                        ; preds = %if.else211, %if.then207
  br label %if.end216

if.end216:                                        ; preds = %if.end215, %if.then200
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.then193
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.then186
  br label %if.end219

if.end219:                                        ; preds = %if.end218, %if.end179
  br label %if.end220

if.end220:                                        ; preds = %if.end219, %if.end102
  %148 = load i8, i8* %aclc, align 1, !dbg !15211
  ret i8 %148, !dbg !15212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @stv090x_optimize_carloop_short(%struct.stv090x_state* %state) #0 !dbg !15213 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %short_crl = alloca %struct.stv090x_short_frame_crloop*, align 8
  %index = alloca i32, align 4
  %aclc = alloca i8, align 1
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !15216, metadata !DIExpression()), !dbg !15217
  call void @llvm.dbg.declare(metadata %struct.stv090x_short_frame_crloop** %short_crl, metadata !15218, metadata !DIExpression()), !dbg !15220
  store %struct.stv090x_short_frame_crloop* null, %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15220
  call void @llvm.dbg.declare(metadata i32* %index, metadata !15221, metadata !DIExpression()), !dbg !15222
  store i32 0, i32* %index, align 4, !dbg !15222
  call void @llvm.dbg.declare(metadata i8* %aclc, metadata !15223, metadata !DIExpression()), !dbg !15224
  store i8 11, i8* %aclc, align 1, !dbg !15224
  %0 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15225
  %modulation = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %0, i32 0, i32 10, !dbg !15226
  %1 = load i32, i32* %modulation, align 8, !dbg !15226
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !15227

sw.bb:                                            ; preds = %entry
  br label %sw.default, !dbg !15228

sw.default:                                       ; preds = %entry, %sw.bb
  store i32 0, i32* %index, align 4, !dbg !15229
  br label %sw.epilog, !dbg !15231

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %index, align 4, !dbg !15232
  br label %sw.epilog, !dbg !15233

sw.bb2:                                           ; preds = %entry
  store i32 2, i32* %index, align 4, !dbg !15234
  br label %sw.epilog, !dbg !15235

sw.bb3:                                           ; preds = %entry
  store i32 3, i32* %index, align 4, !dbg !15236
  br label %sw.epilog, !dbg !15237

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %sw.default
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15238
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 3, !dbg !15240
  %3 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !15240
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %3, i32 0, i32 5, !dbg !15241
  %4 = load i32, i32* %dev_ver, align 4, !dbg !15241
  %cmp = icmp uge i32 %4, 48, !dbg !15242
  br i1 %cmp, label %if.then, label %if.else, !dbg !15243

if.then:                                          ; preds = %sw.epilog
  store %struct.stv090x_short_frame_crloop* getelementptr inbounds ([4 x %struct.stv090x_short_frame_crloop], [4 x %struct.stv090x_short_frame_crloop]* @stv090x_s2_short_crl_cut30, i64 0, i64 0), %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15244
  br label %if.end, !dbg !15246

if.else:                                          ; preds = %sw.epilog
  store %struct.stv090x_short_frame_crloop* getelementptr inbounds ([4 x %struct.stv090x_short_frame_crloop], [4 x %struct.stv090x_short_frame_crloop]* @stv090x_s2_short_crl_cut20, i64 0, i64 0), %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15247
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15249
  %srate = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 19, !dbg !15251
  %6 = load i32, i32* %srate, align 4, !dbg !15251
  %cmp4 = icmp ule i32 %6, 3000000, !dbg !15252
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !15253

if.then5:                                         ; preds = %if.end
  %7 = load %struct.stv090x_short_frame_crloop*, %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15254
  %8 = load i32, i32* %index, align 4, !dbg !15255
  %idxprom = sext i32 %8 to i64, !dbg !15254
  %arrayidx = getelementptr %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %7, i64 %idxprom, !dbg !15254
  %crl_2 = getelementptr inbounds %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %arrayidx, i32 0, i32 1, !dbg !15256
  %9 = load i8, i8* %crl_2, align 4, !dbg !15256
  store i8 %9, i8* %aclc, align 1, !dbg !15257
  br label %if.end30, !dbg !15258

if.else6:                                         ; preds = %if.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15259
  %srate7 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 19, !dbg !15261
  %11 = load i32, i32* %srate7, align 4, !dbg !15261
  %cmp8 = icmp ule i32 %11, 7000000, !dbg !15262
  br i1 %cmp8, label %if.then9, label %if.else12, !dbg !15263

if.then9:                                         ; preds = %if.else6
  %12 = load %struct.stv090x_short_frame_crloop*, %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15264
  %13 = load i32, i32* %index, align 4, !dbg !15265
  %idxprom10 = sext i32 %13 to i64, !dbg !15264
  %arrayidx11 = getelementptr %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %12, i64 %idxprom10, !dbg !15264
  %crl_5 = getelementptr inbounds %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %arrayidx11, i32 0, i32 2, !dbg !15266
  %14 = load i8, i8* %crl_5, align 1, !dbg !15266
  store i8 %14, i8* %aclc, align 1, !dbg !15267
  br label %if.end29, !dbg !15268

if.else12:                                        ; preds = %if.else6
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15269
  %srate13 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 19, !dbg !15271
  %16 = load i32, i32* %srate13, align 4, !dbg !15271
  %cmp14 = icmp ule i32 %16, 15000000, !dbg !15272
  br i1 %cmp14, label %if.then15, label %if.else18, !dbg !15273

if.then15:                                        ; preds = %if.else12
  %17 = load %struct.stv090x_short_frame_crloop*, %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15274
  %18 = load i32, i32* %index, align 4, !dbg !15275
  %idxprom16 = sext i32 %18 to i64, !dbg !15274
  %arrayidx17 = getelementptr %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %17, i64 %idxprom16, !dbg !15274
  %crl_10 = getelementptr inbounds %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %arrayidx17, i32 0, i32 3, !dbg !15276
  %19 = load i8, i8* %crl_10, align 2, !dbg !15276
  store i8 %19, i8* %aclc, align 1, !dbg !15277
  br label %if.end28, !dbg !15278

if.else18:                                        ; preds = %if.else12
  %20 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15279
  %srate19 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %20, i32 0, i32 19, !dbg !15281
  %21 = load i32, i32* %srate19, align 4, !dbg !15281
  %cmp20 = icmp ule i32 %21, 25000000, !dbg !15282
  br i1 %cmp20, label %if.then21, label %if.else24, !dbg !15283

if.then21:                                        ; preds = %if.else18
  %22 = load %struct.stv090x_short_frame_crloop*, %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15284
  %23 = load i32, i32* %index, align 4, !dbg !15285
  %idxprom22 = sext i32 %23 to i64, !dbg !15284
  %arrayidx23 = getelementptr %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %22, i64 %idxprom22, !dbg !15284
  %crl_20 = getelementptr inbounds %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %arrayidx23, i32 0, i32 4, !dbg !15286
  %24 = load i8, i8* %crl_20, align 1, !dbg !15286
  store i8 %24, i8* %aclc, align 1, !dbg !15287
  br label %if.end27, !dbg !15288

if.else24:                                        ; preds = %if.else18
  %25 = load %struct.stv090x_short_frame_crloop*, %struct.stv090x_short_frame_crloop** %short_crl, align 8, !dbg !15289
  %26 = load i32, i32* %index, align 4, !dbg !15290
  %idxprom25 = sext i32 %26 to i64, !dbg !15289
  %arrayidx26 = getelementptr %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %25, i64 %idxprom25, !dbg !15289
  %crl_30 = getelementptr inbounds %struct.stv090x_short_frame_crloop, %struct.stv090x_short_frame_crloop* %arrayidx26, i32 0, i32 5, !dbg !15291
  %27 = load i8, i8* %crl_30, align 4, !dbg !15291
  store i8 %27, i8* %aclc, align 1, !dbg !15292
  br label %if.end27

if.end27:                                         ; preds = %if.else24, %if.then21
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then15
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then9
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then5
  %28 = load i8, i8* %aclc, align 1, !dbg !15293
  ret i8 %28, !dbg !15294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_get_feclock(%struct.stv090x_state* %state, i32 %timeout) #0 !dbg !15295 {
entry:
  %state.addr = alloca %struct.stv090x_state*, align 8
  %timeout.addr = alloca i32, align 4
  %timer = alloca i32, align 4
  %lock = alloca i32, align 4
  %stat = alloca i32, align 4
  %reg = alloca i32, align 4
  store %struct.stv090x_state* %state, %struct.stv090x_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state.addr, metadata !15296, metadata !DIExpression()), !dbg !15297
  store i32 %timeout, i32* %timeout.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %timeout.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  call void @llvm.dbg.declare(metadata i32* %timer, metadata !15300, metadata !DIExpression()), !dbg !15301
  store i32 0, i32* %timer, align 4, !dbg !15301
  call void @llvm.dbg.declare(metadata i32* %lock, metadata !15302, metadata !DIExpression()), !dbg !15303
  store i32 0, i32* %lock, align 4, !dbg !15303
  call void @llvm.dbg.declare(metadata i32* %stat, metadata !15304, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !15306, metadata !DIExpression()), !dbg !15307
  br label %while.cond, !dbg !15308

while.cond:                                       ; preds = %if.end, %entry
  %0 = load i32, i32* %timer, align 4, !dbg !15309
  %1 = load i32, i32* %timeout.addr, align 4, !dbg !15310
  %cmp = icmp slt i32 %0, %1, !dbg !15311
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !15312

land.rhs:                                         ; preds = %while.cond
  %2 = load i32, i32* %lock, align 4, !dbg !15313
  %tobool = icmp ne i32 %2, 0, !dbg !15314
  %lnot = xor i1 %tobool, true, !dbg !15314
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %3 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !15315
  br i1 %3, label %while.body, label %while.end, !dbg !15308

while.body:                                       ; preds = %land.end
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15316
  %demod = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %4, i32 0, i32 1, !dbg !15316
  %5 = load i32, i32* %demod, align 4, !dbg !15316
  %cmp1 = icmp eq i32 %5, 2, !dbg !15316
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !15316

cond.true:                                        ; preds = %while.body
  %6 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15316
  %call = call i32 @stv090x_read_reg(%struct.stv090x_state* %6, i32 61979) #9, !dbg !15316
  br label %cond.end, !dbg !15316

cond.false:                                       ; preds = %while.body
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15316
  %call2 = call i32 @stv090x_read_reg(%struct.stv090x_state* %7, i32 62491) #9, !dbg !15316
  br label %cond.end, !dbg !15316

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %call2, %cond.false ], !dbg !15316
  store i32 %cond, i32* %reg, align 4, !dbg !15318
  %8 = load i32, i32* %reg, align 4, !dbg !15319
  %shr = lshr i32 %8, 5, !dbg !15319
  %and = and i32 %shr, 3, !dbg !15319
  store i32 %and, i32* %stat, align 4, !dbg !15320
  %9 = load i32, i32* %stat, align 4, !dbg !15321
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb14
  ], !dbg !15322

sw.bb:                                            ; preds = %cond.end, %cond.end
  br label %sw.default, !dbg !15323

sw.default:                                       ; preds = %cond.end, %sw.bb
  store i32 0, i32* %lock, align 4, !dbg !15324
  br label %sw.epilog, !dbg !15326

sw.bb3:                                           ; preds = %cond.end
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15327
  %demod4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 1, !dbg !15327
  %11 = load i32, i32* %demod4, align 4, !dbg !15327
  %cmp5 = icmp eq i32 %11, 2, !dbg !15327
  br i1 %cmp5, label %cond.true6, label %cond.false8, !dbg !15327

cond.true6:                                       ; preds = %sw.bb3
  %12 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15327
  %call7 = call i32 @stv090x_read_reg(%struct.stv090x_state* %12, i32 62313) #9, !dbg !15327
  br label %cond.end10, !dbg !15327

cond.false8:                                      ; preds = %sw.bb3
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15327
  %call9 = call i32 @stv090x_read_reg(%struct.stv090x_state* %13, i32 62825) #9, !dbg !15327
  br label %cond.end10, !dbg !15327

cond.end10:                                       ; preds = %cond.false8, %cond.true6
  %cond11 = phi i32 [ %call7, %cond.true6 ], [ %call9, %cond.false8 ], !dbg !15327
  store i32 %cond11, i32* %reg, align 4, !dbg !15328
  %14 = load i32, i32* %reg, align 4, !dbg !15329
  %shr12 = lshr i32 %14, 1, !dbg !15329
  %and13 = and i32 %shr12, 1, !dbg !15329
  store i32 %and13, i32* %lock, align 4, !dbg !15330
  br label %sw.epilog, !dbg !15331

sw.bb14:                                          ; preds = %cond.end
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15332
  %demod15 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 1, !dbg !15332
  %16 = load i32, i32* %demod15, align 4, !dbg !15332
  %cmp16 = icmp eq i32 %16, 2, !dbg !15332
  br i1 %cmp16, label %cond.true17, label %cond.false19, !dbg !15332

cond.true17:                                      ; preds = %sw.bb14
  %17 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15332
  %call18 = call i32 @stv090x_read_reg(%struct.stv090x_state* %17, i32 62270) #9, !dbg !15332
  br label %cond.end21, !dbg !15332

cond.false19:                                     ; preds = %sw.bb14
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state.addr, align 8, !dbg !15332
  %call20 = call i32 @stv090x_read_reg(%struct.stv090x_state* %18, i32 62782) #9, !dbg !15332
  br label %cond.end21, !dbg !15332

cond.end21:                                       ; preds = %cond.false19, %cond.true17
  %cond22 = phi i32 [ %call18, %cond.true17 ], [ %call20, %cond.false19 ], !dbg !15332
  store i32 %cond22, i32* %reg, align 4, !dbg !15333
  %19 = load i32, i32* %reg, align 4, !dbg !15334
  %shr23 = lshr i32 %19, 3, !dbg !15334
  %and24 = and i32 %shr23, 1, !dbg !15334
  store i32 %and24, i32* %lock, align 4, !dbg !15335
  br label %sw.epilog, !dbg !15336

sw.epilog:                                        ; preds = %cond.end21, %cond.end10, %sw.default
  %20 = load i32, i32* %lock, align 4, !dbg !15337
  %tobool25 = icmp ne i32 %20, 0, !dbg !15337
  br i1 %tobool25, label %if.end, label %if.then, !dbg !15339

if.then:                                          ; preds = %sw.epilog
  call void @msleep(i32 10) #9, !dbg !15340
  %21 = load i32, i32* %timer, align 4, !dbg !15342
  %add = add i32 %21, 10, !dbg !15342
  store i32 %add, i32* %timer, align 4, !dbg !15342
  br label %if.end, !dbg !15343

if.end:                                           ; preds = %if.then, %sw.epilog
  br label %while.cond, !dbg !15308, !llvm.loop !15344

while.end:                                        ; preds = %land.end
  %22 = load i32, i32* %lock, align 4, !dbg !15346
  ret i32 %22, !dbg !15347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.stv090x_dev* @append_internal(%struct.stv090x_internal* %internal) #0 !dbg !15348 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !4942, metadata !DIExpression()), !dbg !15351
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !4952, metadata !DIExpression()), !dbg !15354
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !4954, metadata !DIExpression()), !dbg !15355
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !4956, metadata !DIExpression()), !dbg !15356
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !4958, metadata !DIExpression()), !dbg !15357
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !4964, metadata !DIExpression()), !dbg !15359
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !4970, metadata !DIExpression()), !dbg !15361
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !4979, metadata !DIExpression()), !dbg !15364
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !4981, metadata !DIExpression()), !dbg !15365
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !4983, metadata !DIExpression()), !dbg !15366
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !4985, metadata !DIExpression()), !dbg !15367
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !4987, metadata !DIExpression()), !dbg !15368
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !4989, metadata !DIExpression()), !dbg !15369
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !4991, metadata !DIExpression()), !dbg !15370
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !4993, metadata !DIExpression()), !dbg !15371
  %internal.addr = alloca %struct.stv090x_internal*, align 8
  %new_dev = alloca %struct.stv090x_dev*, align 8
  %temp_dev = alloca %struct.stv090x_dev*, align 8
  store %struct.stv090x_internal* %internal, %struct.stv090x_internal** %internal.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stv090x_internal** %internal.addr, metadata !15372, metadata !DIExpression()), !dbg !15373
  call void @llvm.dbg.declare(metadata %struct.stv090x_dev** %new_dev, metadata !15374, metadata !DIExpression()), !dbg !15375
  call void @llvm.dbg.declare(metadata %struct.stv090x_dev** %temp_dev, metadata !15376, metadata !DIExpression()), !dbg !15377
  store i64 16, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !15378
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #10, !dbg !15379
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !15380

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !15381
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !15382
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15383

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !15384
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !15385
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !15386
  %call.i.i = call i32 @get_order(i64 %5) #11, !dbg !15387
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !15368
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !15388
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !15389
  %8 = load i32, i32* %order.i.i, align 4, !dbg !15390
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !15391
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !15392
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !15393
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #12, !dbg !15394
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !15394
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !15394
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !15394
  call void @llvm.assume(i1 %maskcond.i.i.i) #10, !dbg !15394
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !15395
  br label %kmalloc.exit, !dbg !15395

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !15396
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15397
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !15397
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !15398

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !15399
  br label %kmalloc_index.exit.i, !dbg !15399

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15400
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !15401
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !15402

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15403
  br label %kmalloc_index.exit.i, !dbg !15403

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15404
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !15405
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !15406

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15407
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !15408
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !15409

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !15410
  br label %kmalloc_index.exit.i, !dbg !15410

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15411
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !15412
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !15413

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15414
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !15415
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !15416

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !15417
  br label %kmalloc_index.exit.i, !dbg !15417

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15418
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !15419
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !15420

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !15421
  br label %kmalloc_index.exit.i, !dbg !15421

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15422
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !15423
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !15424

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !15425
  br label %kmalloc_index.exit.i, !dbg !15425

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15426
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !15427
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !15428

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !15429
  br label %kmalloc_index.exit.i, !dbg !15429

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15430
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !15431
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !15432

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !15433
  br label %kmalloc_index.exit.i, !dbg !15433

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15434
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !15435
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !15436

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !15437
  br label %kmalloc_index.exit.i, !dbg !15437

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15438
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !15439
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !15440

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !15441
  br label %kmalloc_index.exit.i, !dbg !15441

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15442
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !15443
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !15444

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !15445
  br label %kmalloc_index.exit.i, !dbg !15445

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15446
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !15447
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !15448

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !15449
  br label %kmalloc_index.exit.i, !dbg !15449

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15450
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !15451
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !15452

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !15453
  br label %kmalloc_index.exit.i, !dbg !15453

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15454
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !15455
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !15456

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !15457
  br label %kmalloc_index.exit.i, !dbg !15457

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15458
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !15459
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !15460

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !15461
  br label %kmalloc_index.exit.i, !dbg !15461

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15462
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !15463
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !15464

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !15465
  br label %kmalloc_index.exit.i, !dbg !15465

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15466
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !15467
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !15468

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !15469
  br label %kmalloc_index.exit.i, !dbg !15469

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15470
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !15471
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !15472

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !15473
  br label %kmalloc_index.exit.i, !dbg !15473

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15474
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !15475
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !15476

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !15477
  br label %kmalloc_index.exit.i, !dbg !15477

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15478
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !15479
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !15480

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !15481
  br label %kmalloc_index.exit.i, !dbg !15481

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15482
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !15483
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !15484

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !15485
  br label %kmalloc_index.exit.i, !dbg !15485

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15486
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !15487
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !15488

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !15489
  br label %kmalloc_index.exit.i, !dbg !15489

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15490
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !15491
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !15492

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !15493
  br label %kmalloc_index.exit.i, !dbg !15493

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15494
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !15495
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !15496

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !15497
  br label %kmalloc_index.exit.i, !dbg !15497

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15498
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !15499
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !15500

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !15501
  br label %kmalloc_index.exit.i, !dbg !15501

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15502
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !15503
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !15504

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !15505
  br label %kmalloc_index.exit.i, !dbg !15505

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15506
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !15507
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !15508

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !15509
  br label %kmalloc_index.exit.i, !dbg !15509

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !15510
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !15511
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !15512

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !15513
  br label %kmalloc_index.exit.i, !dbg !15513

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i32 382, i32 0, i64 12) #10, !dbg !15514, !srcloc !5169
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 105) #10, !dbg !15515, !srcloc !5173
  unreachable, !dbg !15516

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !15517
  store i32 %43, i32* %index.i, align 4, !dbg !15518
  %44 = load i32, i32* %index.i, align 4, !dbg !15519
  %tobool.i = icmp ne i32 %44, 0, !dbg !15519
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !15520

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !15521
  br label %kmalloc.exit, !dbg !15521

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !15522
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15523
  %and.i.i = and i32 %46, 17, !dbg !15523
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !15523
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !15523
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !15523
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !15523
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !15524

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !15525
  br label %kmalloc_type.exit.i, !dbg !15525

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !15526
  %and2.i.i = and i32 %47, 1, !dbg !15527
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !15526
  %48 = zext i1 %tobool3.i.i to i64, !dbg !15526
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !15526
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !15528
  br label %kmalloc_type.exit.i, !dbg !15528

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !15529
  %idxprom.i = zext i32 %49 to i64, !dbg !15530
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !15530
  %50 = load i32, i32* %index.i, align 4, !dbg !15531
  %idxprom6.i = zext i32 %50 to i64, !dbg !15530
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !15530
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !15530
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !15532
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !15533
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15534
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15535
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #12, !dbg !15536
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !15536
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !15536
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !15536
  call void @llvm.assume(i1 %maskcond.i.i) #10, !dbg !15536
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !15356
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !15537
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !15538
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !15539
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !15540
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #12, !dbg !15541
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !15542
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !15543
  store i8* %60, i8** %retval.i, align 8, !dbg !15544
  br label %kmalloc.exit, !dbg !15544

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !15545
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !15546
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #12, !dbg !15547
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !15547
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !15547
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !15547
  call void @llvm.assume(i1 %maskcond.i) #10, !dbg !15547
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !15548
  br label %kmalloc.exit, !dbg !15548

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !15549
  %64 = bitcast i8* %63 to %struct.stv090x_dev*, !dbg !15550
  store %struct.stv090x_dev* %64, %struct.stv090x_dev** %new_dev, align 8, !dbg !15551
  %65 = load %struct.stv090x_dev*, %struct.stv090x_dev** %new_dev, align 8, !dbg !15552
  %cmp = icmp ne %struct.stv090x_dev* %65, null, !dbg !15554
  br i1 %cmp, label %if.then, label %if.end8, !dbg !15555

if.then:                                          ; preds = %kmalloc.exit
  %66 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal.addr, align 8, !dbg !15556
  %67 = load %struct.stv090x_dev*, %struct.stv090x_dev** %new_dev, align 8, !dbg !15558
  %internal1 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %67, i32 0, i32 0, !dbg !15559
  store %struct.stv090x_internal* %66, %struct.stv090x_internal** %internal1, align 8, !dbg !15560
  %68 = load %struct.stv090x_dev*, %struct.stv090x_dev** %new_dev, align 8, !dbg !15561
  %next_dev = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %68, i32 0, i32 1, !dbg !15562
  store %struct.stv090x_dev* null, %struct.stv090x_dev** %next_dev, align 8, !dbg !15563
  %69 = load %struct.stv090x_dev*, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !15564
  %cmp2 = icmp eq %struct.stv090x_dev* %69, null, !dbg !15566
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !15567

if.then3:                                         ; preds = %if.then
  %70 = load %struct.stv090x_dev*, %struct.stv090x_dev** %new_dev, align 8, !dbg !15568
  store %struct.stv090x_dev* %70, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !15570
  br label %if.end, !dbg !15571

if.else:                                          ; preds = %if.then
  %71 = load %struct.stv090x_dev*, %struct.stv090x_dev** @stv090x_first_dev, align 8, !dbg !15572
  store %struct.stv090x_dev* %71, %struct.stv090x_dev** %temp_dev, align 8, !dbg !15574
  br label %while.cond, !dbg !15575

while.cond:                                       ; preds = %while.body, %if.else
  %72 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !15576
  %next_dev4 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %72, i32 0, i32 1, !dbg !15577
  %73 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev4, align 8, !dbg !15577
  %cmp5 = icmp ne %struct.stv090x_dev* %73, null, !dbg !15578
  br i1 %cmp5, label %while.body, label %while.end, !dbg !15575

while.body:                                       ; preds = %while.cond
  %74 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !15579
  %next_dev6 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %74, i32 0, i32 1, !dbg !15580
  %75 = load %struct.stv090x_dev*, %struct.stv090x_dev** %next_dev6, align 8, !dbg !15580
  store %struct.stv090x_dev* %75, %struct.stv090x_dev** %temp_dev, align 8, !dbg !15581
  br label %while.cond, !dbg !15575, !llvm.loop !15582

while.end:                                        ; preds = %while.cond
  %76 = load %struct.stv090x_dev*, %struct.stv090x_dev** %new_dev, align 8, !dbg !15583
  %77 = load %struct.stv090x_dev*, %struct.stv090x_dev** %temp_dev, align 8, !dbg !15584
  %next_dev7 = getelementptr inbounds %struct.stv090x_dev, %struct.stv090x_dev* %77, i32 0, i32 1, !dbg !15585
  store %struct.stv090x_dev* %76, %struct.stv090x_dev** %next_dev7, align 8, !dbg !15586
  br label %if.end

if.end:                                           ; preds = %while.end, %if.then3
  br label %if.end8, !dbg !15587

if.end8:                                          ; preds = %if.end, %kmalloc.exit
  %78 = load %struct.stv090x_dev*, %struct.stv090x_dev** %new_dev, align 8, !dbg !15588
  ret %struct.stv090x_dev* %78, !dbg !15589
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_setup(%struct.dvb_frontend* %fe) #0 !dbg !15590 {
entry:
  %retval = alloca i32, align 4
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  %config = alloca %struct.stv090x_config*, align 8
  %stv090x_initval = alloca %struct.stv090x_reg*, align 8
  %stv090x_cut20_val = alloca %struct.stv090x_reg*, align 8
  %t1_size = alloca i64, align 8
  %t2_size = alloca i64, align 8
  %reg = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !15591, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !15593, metadata !DIExpression()), !dbg !15594
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !15595
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !15596
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !15596
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !15595
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !15594
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !15597, metadata !DIExpression()), !dbg !15598
  %3 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15599
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %3, i32 0, i32 5, !dbg !15600
  %4 = load %struct.stv090x_config*, %struct.stv090x_config** %config1, align 8, !dbg !15600
  store %struct.stv090x_config* %4, %struct.stv090x_config** %config, align 8, !dbg !15598
  call void @llvm.dbg.declare(metadata %struct.stv090x_reg** %stv090x_initval, metadata !15601, metadata !DIExpression()), !dbg !15604
  store %struct.stv090x_reg* null, %struct.stv090x_reg** %stv090x_initval, align 8, !dbg !15604
  call void @llvm.dbg.declare(metadata %struct.stv090x_reg** %stv090x_cut20_val, metadata !15605, metadata !DIExpression()), !dbg !15606
  store %struct.stv090x_reg* null, %struct.stv090x_reg** %stv090x_cut20_val, align 8, !dbg !15606
  call void @llvm.dbg.declare(metadata i64* %t1_size, metadata !15607, metadata !DIExpression()), !dbg !15608
  store i64 0, i64* %t1_size, align 8, !dbg !15608
  call void @llvm.dbg.declare(metadata i64* %t2_size, metadata !15609, metadata !DIExpression()), !dbg !15610
  store i64 0, i64* %t2_size, align 8, !dbg !15610
  call void @llvm.dbg.declare(metadata i32* %reg, metadata !15611, metadata !DIExpression()), !dbg !15612
  store i32 0, i32* %reg, align 4, !dbg !15612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15613, metadata !DIExpression()), !dbg !15614
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15615
  %device = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 0, !dbg !15617
  %6 = load i32, i32* %device, align 8, !dbg !15617
  %cmp = icmp eq i32 %6, 1, !dbg !15618
  br i1 %cmp, label %if.then, label %if.else25, !dbg !15619

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !15620

do.body:                                          ; preds = %if.then
  %7 = load i32, i32* @verbose, align 4, !dbg !15622
  %cmp2 = icmp ugt i32 %7, 0, !dbg !15622
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !15622

land.lhs.true:                                    ; preds = %do.body
  %8 = load i32, i32* @verbose, align 4, !dbg !15622
  %cmp3 = icmp ugt i32 %8, 3, !dbg !15622
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !15627

if.then4:                                         ; preds = %land.lhs.true
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.148, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15622
  br label %if.end24, !dbg !15622

if.else:                                          ; preds = %land.lhs.true, %do.body
  %9 = load i32, i32* @verbose, align 4, !dbg !15628
  %cmp5 = icmp ugt i32 %9, 1, !dbg !15628
  br i1 %cmp5, label %land.lhs.true6, label %if.else10, !dbg !15628

land.lhs.true6:                                   ; preds = %if.else
  %10 = load i32, i32* @verbose, align 4, !dbg !15628
  %cmp7 = icmp ugt i32 %10, 3, !dbg !15628
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !15622

if.then8:                                         ; preds = %land.lhs.true6
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.149, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15628
  br label %if.end23, !dbg !15628

if.else10:                                        ; preds = %land.lhs.true6, %if.else
  %11 = load i32, i32* @verbose, align 4, !dbg !15630
  %cmp11 = icmp ugt i32 %11, 2, !dbg !15630
  br i1 %cmp11, label %land.lhs.true12, label %if.else16, !dbg !15630

land.lhs.true12:                                  ; preds = %if.else10
  %12 = load i32, i32* @verbose, align 4, !dbg !15630
  %cmp13 = icmp ugt i32 %12, 3, !dbg !15630
  br i1 %cmp13, label %if.then14, label %if.else16, !dbg !15628

if.then14:                                        ; preds = %land.lhs.true12
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.150, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15630
  br label %if.end22, !dbg !15630

if.else16:                                        ; preds = %land.lhs.true12, %if.else10
  %13 = load i32, i32* @verbose, align 4, !dbg !15632
  %cmp17 = icmp ugt i32 %13, 3, !dbg !15632
  br i1 %cmp17, label %land.lhs.true18, label %if.end, !dbg !15632

land.lhs.true18:                                  ; preds = %if.else16
  %14 = load i32, i32* @verbose, align 4, !dbg !15632
  %cmp19 = icmp ugt i32 %14, 3, !dbg !15632
  br i1 %cmp19, label %if.then20, label %if.end, !dbg !15630

if.then20:                                        ; preds = %land.lhs.true18
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.151, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15632
  br label %if.end, !dbg !15632

if.end:                                           ; preds = %if.then20, %land.lhs.true18, %if.else16
  br label %if.end22

if.end22:                                         ; preds = %if.end, %if.then14
  br label %if.end23

if.end23:                                         ; preds = %if.end22, %if.then8
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then4
  br label %do.end, !dbg !15634

do.end:                                           ; preds = %if.end24
  store %struct.stv090x_reg* getelementptr inbounds ([161 x %struct.stv090x_reg], [161 x %struct.stv090x_reg]* @stv0900_initval, i64 0, i64 0), %struct.stv090x_reg** %stv090x_initval, align 8, !dbg !15635
  store i64 161, i64* %t1_size, align 8, !dbg !15636
  store %struct.stv090x_reg* getelementptr inbounds ([32 x %struct.stv090x_reg], [32 x %struct.stv090x_reg]* @stv0900_cut20_val, i64 0, i64 0), %struct.stv090x_reg** %stv090x_cut20_val, align 8, !dbg !15637
  store i64 32, i64* %t2_size, align 8, !dbg !15638
  br label %if.end59, !dbg !15639

if.else25:                                        ; preds = %entry
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15640
  %device26 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 0, !dbg !15642
  %16 = load i32, i32* %device26, align 8, !dbg !15642
  %cmp27 = icmp eq i32 %16, 0, !dbg !15643
  br i1 %cmp27, label %if.then28, label %if.end58, !dbg !15644

if.then28:                                        ; preds = %if.else25
  br label %do.body29, !dbg !15645

do.body29:                                        ; preds = %if.then28
  %17 = load i32, i32* @verbose, align 4, !dbg !15647
  %cmp30 = icmp ugt i32 %17, 0, !dbg !15647
  br i1 %cmp30, label %land.lhs.true31, label %if.else35, !dbg !15647

land.lhs.true31:                                  ; preds = %do.body29
  %18 = load i32, i32* @verbose, align 4, !dbg !15647
  %cmp32 = icmp ugt i32 %18, 3, !dbg !15647
  br i1 %cmp32, label %if.then33, label %if.else35, !dbg !15652

if.then33:                                        ; preds = %land.lhs.true31
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.152, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15647
  br label %if.end56, !dbg !15647

if.else35:                                        ; preds = %land.lhs.true31, %do.body29
  %19 = load i32, i32* @verbose, align 4, !dbg !15653
  %cmp36 = icmp ugt i32 %19, 1, !dbg !15653
  br i1 %cmp36, label %land.lhs.true37, label %if.else41, !dbg !15653

land.lhs.true37:                                  ; preds = %if.else35
  %20 = load i32, i32* @verbose, align 4, !dbg !15653
  %cmp38 = icmp ugt i32 %20, 3, !dbg !15653
  br i1 %cmp38, label %if.then39, label %if.else41, !dbg !15647

if.then39:                                        ; preds = %land.lhs.true37
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.153, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15653
  br label %if.end55, !dbg !15653

if.else41:                                        ; preds = %land.lhs.true37, %if.else35
  %21 = load i32, i32* @verbose, align 4, !dbg !15655
  %cmp42 = icmp ugt i32 %21, 2, !dbg !15655
  br i1 %cmp42, label %land.lhs.true43, label %if.else47, !dbg !15655

land.lhs.true43:                                  ; preds = %if.else41
  %22 = load i32, i32* @verbose, align 4, !dbg !15655
  %cmp44 = icmp ugt i32 %22, 3, !dbg !15655
  br i1 %cmp44, label %if.then45, label %if.else47, !dbg !15653

if.then45:                                        ; preds = %land.lhs.true43
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.154, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15655
  br label %if.end54, !dbg !15655

if.else47:                                        ; preds = %land.lhs.true43, %if.else41
  %23 = load i32, i32* @verbose, align 4, !dbg !15657
  %cmp48 = icmp ugt i32 %23, 3, !dbg !15657
  br i1 %cmp48, label %land.lhs.true49, label %if.end53, !dbg !15657

land.lhs.true49:                                  ; preds = %if.else47
  %24 = load i32, i32* @verbose, align 4, !dbg !15657
  %cmp50 = icmp ugt i32 %24, 3, !dbg !15657
  br i1 %cmp50, label %if.then51, label %if.end53, !dbg !15655

if.then51:                                        ; preds = %land.lhs.true49
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.155, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15657
  br label %if.end53, !dbg !15657

if.end53:                                         ; preds = %if.then51, %land.lhs.true49, %if.else47
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.then45
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then39
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then33
  br label %do.end57, !dbg !15659

do.end57:                                         ; preds = %if.end56
  store %struct.stv090x_reg* getelementptr inbounds ([99 x %struct.stv090x_reg], [99 x %struct.stv090x_reg]* @stv0903_initval, i64 0, i64 0), %struct.stv090x_reg** %stv090x_initval, align 8, !dbg !15660
  store i64 99, i64* %t1_size, align 8, !dbg !15661
  store %struct.stv090x_reg* getelementptr inbounds ([23 x %struct.stv090x_reg], [23 x %struct.stv090x_reg]* @stv0903_cut20_val, i64 0, i64 0), %struct.stv090x_reg** %stv090x_cut20_val, align 8, !dbg !15662
  store i64 23, i64* %t2_size, align 8, !dbg !15663
  br label %if.end58, !dbg !15664

if.end58:                                         ; preds = %do.end57, %if.else25
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %do.end
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15665
  %call60 = call i32 @stv090x_write_reg(%struct.stv090x_state* %25, i32 62486, i8 zeroext 92) #9, !dbg !15667
  %cmp61 = icmp slt i32 %call60, 0, !dbg !15668
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !15669

if.then62:                                        ; preds = %if.end59
  br label %err, !dbg !15670

if.end63:                                         ; preds = %if.end59
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15671
  %device64 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %26, i32 0, i32 0, !dbg !15673
  %27 = load i32, i32* %device64, align 8, !dbg !15673
  %cmp65 = icmp eq i32 %27, 1, !dbg !15674
  br i1 %cmp65, label %if.then66, label %if.end71, !dbg !15675

if.then66:                                        ; preds = %if.end63
  %28 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15676
  %call67 = call i32 @stv090x_write_reg(%struct.stv090x_state* %28, i32 61974, i8 zeroext 92) #9, !dbg !15678
  %cmp68 = icmp slt i32 %call67, 0, !dbg !15679
  br i1 %cmp68, label %if.then69, label %if.end70, !dbg !15680

if.then69:                                        ; preds = %if.then66
  br label %err, !dbg !15681

if.end70:                                         ; preds = %if.then66
  br label %if.end71, !dbg !15682

if.end71:                                         ; preds = %if.end70, %if.end63
  call void @msleep(i32 5) #9, !dbg !15683
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15684
  %call72 = call i32 @stv090x_write_reg(%struct.stv090x_state* %29, i32 62688, i8 zeroext 108) #9, !dbg !15686
  %cmp73 = icmp slt i32 %call72, 0, !dbg !15687
  br i1 %cmp73, label %if.then74, label %if.end75, !dbg !15688

if.then74:                                        ; preds = %if.end71
  br label %err, !dbg !15689

if.end75:                                         ; preds = %if.end71
  %30 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15690
  %device76 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %30, i32 0, i32 0, !dbg !15692
  %31 = load i32, i32* %device76, align 8, !dbg !15692
  %cmp77 = icmp eq i32 %31, 1, !dbg !15693
  br i1 %cmp77, label %if.then78, label %if.end83, !dbg !15694

if.then78:                                        ; preds = %if.end75
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15695
  %call79 = call i32 @stv090x_write_reg(%struct.stv090x_state* %32, i32 62176, i8 zeroext 108) #9, !dbg !15697
  %cmp80 = icmp slt i32 %call79, 0, !dbg !15698
  br i1 %cmp80, label %if.then81, label %if.end82, !dbg !15699

if.then81:                                        ; preds = %if.then78
  br label %err, !dbg !15700

if.end82:                                         ; preds = %if.then78
  br label %if.end83, !dbg !15701

if.end83:                                         ; preds = %if.end82, %if.end75
  %33 = load i32, i32* %reg, align 4, !dbg !15702
  %and = and i32 %33, -113, !dbg !15702
  %34 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !15702
  %repeater_level = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %34, i32 0, i32 11, !dbg !15702
  %35 = load i32, i32* %repeater_level, align 4, !dbg !15702
  %shl = shl i32 %35, 4, !dbg !15702
  %or = or i32 %and, %shl, !dbg !15702
  store i32 %or, i32* %reg, align 4, !dbg !15702
  %36 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15703
  %37 = load i32, i32* %reg, align 4, !dbg !15705
  %conv = trunc i32 %37 to i8, !dbg !15705
  %call84 = call i32 @stv090x_write_reg(%struct.stv090x_state* %36, i32 61738, i8 zeroext %conv) #9, !dbg !15706
  %cmp85 = icmp slt i32 %call84, 0, !dbg !15707
  br i1 %cmp85, label %if.then87, label %if.end88, !dbg !15708

if.then87:                                        ; preds = %if.end83
  br label %err, !dbg !15709

if.end88:                                         ; preds = %if.end83
  %38 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15710
  %device89 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %38, i32 0, i32 0, !dbg !15712
  %39 = load i32, i32* %device89, align 8, !dbg !15712
  %cmp90 = icmp eq i32 %39, 1, !dbg !15713
  br i1 %cmp90, label %if.then92, label %if.end99, !dbg !15714

if.then92:                                        ; preds = %if.end88
  %40 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15715
  %41 = load i32, i32* %reg, align 4, !dbg !15717
  %conv93 = trunc i32 %41 to i8, !dbg !15717
  %call94 = call i32 @stv090x_write_reg(%struct.stv090x_state* %40, i32 61739, i8 zeroext %conv93) #9, !dbg !15718
  %cmp95 = icmp slt i32 %call94, 0, !dbg !15719
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !15720

if.then97:                                        ; preds = %if.then92
  br label %err, !dbg !15721

if.end98:                                         ; preds = %if.then92
  br label %if.end99, !dbg !15722

if.end99:                                         ; preds = %if.end98, %if.end88
  %42 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15723
  %call100 = call i32 @stv090x_write_reg(%struct.stv090x_state* %42, i32 61875, i8 zeroext 19) #9, !dbg !15725
  %cmp101 = icmp slt i32 %call100, 0, !dbg !15726
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !15727

if.then103:                                       ; preds = %if.end99
  br label %err, !dbg !15728

if.end104:                                        ; preds = %if.end99
  call void @msleep(i32 5) #9, !dbg !15729
  %43 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15730
  %call105 = call i32 @stv090x_write_reg(%struct.stv090x_state* %43, i32 61737, i8 zeroext 8) #9, !dbg !15732
  %cmp106 = icmp slt i32 %call105, 0, !dbg !15733
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !15734

if.then108:                                       ; preds = %if.end104
  br label %err, !dbg !15735

if.end109:                                        ; preds = %if.end104
  %44 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15736
  %45 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !15738
  %clk_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %45, i32 0, i32 2, !dbg !15739
  %46 = load i32, i32* %clk_mode, align 8, !dbg !15739
  %or110 = or i32 32, %46, !dbg !15740
  %conv111 = trunc i32 %or110 to i8, !dbg !15741
  %call112 = call i32 @stv090x_write_reg(%struct.stv090x_state* %44, i32 61878, i8 zeroext %conv111) #9, !dbg !15742
  %cmp113 = icmp slt i32 %call112, 0, !dbg !15743
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !15744

if.then115:                                       ; preds = %if.end109
  br label %err, !dbg !15745

if.end116:                                        ; preds = %if.end109
  call void @msleep(i32 5) #9, !dbg !15746
  br label %do.body117, !dbg !15747

do.body117:                                       ; preds = %if.end116
  %47 = load i32, i32* @verbose, align 4, !dbg !15748
  %cmp118 = icmp ugt i32 %47, 0, !dbg !15748
  br i1 %cmp118, label %land.lhs.true120, label %if.else125, !dbg !15748

land.lhs.true120:                                 ; preds = %do.body117
  %48 = load i32, i32* @verbose, align 4, !dbg !15748
  %cmp121 = icmp ugt i32 %48, 3, !dbg !15748
  br i1 %cmp121, label %if.then123, label %if.else125, !dbg !15753

if.then123:                                       ; preds = %land.lhs.true120
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.156, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15748
  br label %if.end152, !dbg !15748

if.else125:                                       ; preds = %land.lhs.true120, %do.body117
  %49 = load i32, i32* @verbose, align 4, !dbg !15754
  %cmp126 = icmp ugt i32 %49, 1, !dbg !15754
  br i1 %cmp126, label %land.lhs.true128, label %if.else133, !dbg !15754

land.lhs.true128:                                 ; preds = %if.else125
  %50 = load i32, i32* @verbose, align 4, !dbg !15754
  %cmp129 = icmp ugt i32 %50, 3, !dbg !15754
  br i1 %cmp129, label %if.then131, label %if.else133, !dbg !15748

if.then131:                                       ; preds = %land.lhs.true128
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.157, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15754
  br label %if.end151, !dbg !15754

if.else133:                                       ; preds = %land.lhs.true128, %if.else125
  %51 = load i32, i32* @verbose, align 4, !dbg !15756
  %cmp134 = icmp ugt i32 %51, 2, !dbg !15756
  br i1 %cmp134, label %land.lhs.true136, label %if.else141, !dbg !15756

land.lhs.true136:                                 ; preds = %if.else133
  %52 = load i32, i32* @verbose, align 4, !dbg !15756
  %cmp137 = icmp ugt i32 %52, 3, !dbg !15756
  br i1 %cmp137, label %if.then139, label %if.else141, !dbg !15754

if.then139:                                       ; preds = %land.lhs.true136
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.158, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15756
  br label %if.end150, !dbg !15756

if.else141:                                       ; preds = %land.lhs.true136, %if.else133
  %53 = load i32, i32* @verbose, align 4, !dbg !15758
  %cmp142 = icmp ugt i32 %53, 3, !dbg !15758
  br i1 %cmp142, label %land.lhs.true144, label %if.end149, !dbg !15758

land.lhs.true144:                                 ; preds = %if.else141
  %54 = load i32, i32* @verbose, align 4, !dbg !15758
  %cmp145 = icmp ugt i32 %54, 3, !dbg !15758
  br i1 %cmp145, label %if.then147, label %if.end149, !dbg !15756

if.then147:                                       ; preds = %land.lhs.true144
  %call148 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.159, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15758
  br label %if.end149, !dbg !15758

if.end149:                                        ; preds = %if.then147, %land.lhs.true144, %if.else141
  br label %if.end150

if.end150:                                        ; preds = %if.end149, %if.then139
  br label %if.end151

if.end151:                                        ; preds = %if.end150, %if.then131
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then123
  br label %do.end153, !dbg !15760

do.end153:                                        ; preds = %if.end152
  store i32 0, i32* %i, align 4, !dbg !15761
  br label %for.cond, !dbg !15763

for.cond:                                         ; preds = %for.inc, %do.end153
  %55 = load i32, i32* %i, align 4, !dbg !15764
  %conv154 = sext i32 %55 to i64, !dbg !15764
  %56 = load i64, i64* %t1_size, align 8, !dbg !15766
  %cmp155 = icmp ult i64 %conv154, %56, !dbg !15767
  br i1 %cmp155, label %for.body, label %for.end, !dbg !15768

for.body:                                         ; preds = %for.cond
  %57 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15769
  %58 = load %struct.stv090x_reg*, %struct.stv090x_reg** %stv090x_initval, align 8, !dbg !15772
  %59 = load i32, i32* %i, align 4, !dbg !15773
  %idxprom = sext i32 %59 to i64, !dbg !15772
  %arrayidx = getelementptr %struct.stv090x_reg, %struct.stv090x_reg* %58, i64 %idxprom, !dbg !15772
  %addr = getelementptr inbounds %struct.stv090x_reg, %struct.stv090x_reg* %arrayidx, i32 0, i32 0, !dbg !15774
  %60 = load i16, i16* %addr, align 2, !dbg !15774
  %conv157 = zext i16 %60 to i32, !dbg !15772
  %61 = load %struct.stv090x_reg*, %struct.stv090x_reg** %stv090x_initval, align 8, !dbg !15775
  %62 = load i32, i32* %i, align 4, !dbg !15776
  %idxprom158 = sext i32 %62 to i64, !dbg !15775
  %arrayidx159 = getelementptr %struct.stv090x_reg, %struct.stv090x_reg* %61, i64 %idxprom158, !dbg !15775
  %data = getelementptr inbounds %struct.stv090x_reg, %struct.stv090x_reg* %arrayidx159, i32 0, i32 1, !dbg !15777
  %63 = load i8, i8* %data, align 2, !dbg !15777
  %call160 = call i32 @stv090x_write_reg(%struct.stv090x_state* %57, i32 %conv157, i8 zeroext %63) #9, !dbg !15778
  %cmp161 = icmp slt i32 %call160, 0, !dbg !15779
  br i1 %cmp161, label %if.then163, label %if.end164, !dbg !15780

if.then163:                                       ; preds = %for.body
  br label %err, !dbg !15781

if.end164:                                        ; preds = %for.body
  br label %for.inc, !dbg !15782

for.inc:                                          ; preds = %if.end164
  %64 = load i32, i32* %i, align 4, !dbg !15783
  %inc = add i32 %64, 1, !dbg !15783
  store i32 %inc, i32* %i, align 4, !dbg !15783
  br label %for.cond, !dbg !15784, !llvm.loop !15785

for.end:                                          ; preds = %for.cond
  %65 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15787
  %call165 = call i32 @stv090x_read_reg(%struct.stv090x_state* %65, i32 61696) #9, !dbg !15788
  %66 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15789
  %internal = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %66, i32 0, i32 3, !dbg !15790
  %67 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal, align 8, !dbg !15790
  %dev_ver = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %67, i32 0, i32 5, !dbg !15791
  store i32 %call165, i32* %dev_ver, align 4, !dbg !15792
  %68 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15793
  %internal166 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %68, i32 0, i32 3, !dbg !15795
  %69 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal166, align 8, !dbg !15795
  %dev_ver167 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %69, i32 0, i32 5, !dbg !15796
  %70 = load i32, i32* %dev_ver167, align 4, !dbg !15796
  %cmp168 = icmp uge i32 %70, 32, !dbg !15797
  br i1 %cmp168, label %if.then170, label %if.else233, !dbg !15798

if.then170:                                       ; preds = %for.end
  %71 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15799
  %call171 = call i32 @stv090x_write_reg(%struct.stv090x_state* %71, i32 63024, i8 zeroext 12) #9, !dbg !15802
  %cmp172 = icmp slt i32 %call171, 0, !dbg !15803
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !15804

if.then174:                                       ; preds = %if.then170
  br label %err, !dbg !15805

if.end175:                                        ; preds = %if.then170
  br label %do.body176, !dbg !15806

do.body176:                                       ; preds = %if.end175
  %72 = load i32, i32* @verbose, align 4, !dbg !15807
  %cmp177 = icmp ugt i32 %72, 0, !dbg !15807
  br i1 %cmp177, label %land.lhs.true179, label %if.else184, !dbg !15807

land.lhs.true179:                                 ; preds = %do.body176
  %73 = load i32, i32* @verbose, align 4, !dbg !15807
  %cmp180 = icmp ugt i32 %73, 3, !dbg !15807
  br i1 %cmp180, label %if.then182, label %if.else184, !dbg !15812

if.then182:                                       ; preds = %land.lhs.true179
  %call183 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.160, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15807
  br label %if.end211, !dbg !15807

if.else184:                                       ; preds = %land.lhs.true179, %do.body176
  %74 = load i32, i32* @verbose, align 4, !dbg !15813
  %cmp185 = icmp ugt i32 %74, 1, !dbg !15813
  br i1 %cmp185, label %land.lhs.true187, label %if.else192, !dbg !15813

land.lhs.true187:                                 ; preds = %if.else184
  %75 = load i32, i32* @verbose, align 4, !dbg !15813
  %cmp188 = icmp ugt i32 %75, 3, !dbg !15813
  br i1 %cmp188, label %if.then190, label %if.else192, !dbg !15807

if.then190:                                       ; preds = %land.lhs.true187
  %call191 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15813
  br label %if.end210, !dbg !15813

if.else192:                                       ; preds = %land.lhs.true187, %if.else184
  %76 = load i32, i32* @verbose, align 4, !dbg !15815
  %cmp193 = icmp ugt i32 %76, 2, !dbg !15815
  br i1 %cmp193, label %land.lhs.true195, label %if.else200, !dbg !15815

land.lhs.true195:                                 ; preds = %if.else192
  %77 = load i32, i32* @verbose, align 4, !dbg !15815
  %cmp196 = icmp ugt i32 %77, 3, !dbg !15815
  br i1 %cmp196, label %if.then198, label %if.else200, !dbg !15813

if.then198:                                       ; preds = %land.lhs.true195
  %call199 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.162, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15815
  br label %if.end209, !dbg !15815

if.else200:                                       ; preds = %land.lhs.true195, %if.else192
  %78 = load i32, i32* @verbose, align 4, !dbg !15817
  %cmp201 = icmp ugt i32 %78, 3, !dbg !15817
  br i1 %cmp201, label %land.lhs.true203, label %if.end208, !dbg !15817

land.lhs.true203:                                 ; preds = %if.else200
  %79 = load i32, i32* @verbose, align 4, !dbg !15817
  %cmp204 = icmp ugt i32 %79, 3, !dbg !15817
  br i1 %cmp204, label %if.then206, label %if.end208, !dbg !15815

if.then206:                                       ; preds = %land.lhs.true203
  %call207 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15817
  br label %if.end208, !dbg !15817

if.end208:                                        ; preds = %if.then206, %land.lhs.true203, %if.else200
  br label %if.end209

if.end209:                                        ; preds = %if.end208, %if.then198
  br label %if.end210

if.end210:                                        ; preds = %if.end209, %if.then190
  br label %if.end211

if.end211:                                        ; preds = %if.end210, %if.then182
  br label %do.end212, !dbg !15819

do.end212:                                        ; preds = %if.end211
  store i32 0, i32* %i, align 4, !dbg !15820
  br label %for.cond213, !dbg !15822

for.cond213:                                      ; preds = %for.inc230, %do.end212
  %80 = load i32, i32* %i, align 4, !dbg !15823
  %conv214 = sext i32 %80 to i64, !dbg !15823
  %81 = load i64, i64* %t2_size, align 8, !dbg !15825
  %cmp215 = icmp ult i64 %conv214, %81, !dbg !15826
  br i1 %cmp215, label %for.body217, label %for.end232, !dbg !15827

for.body217:                                      ; preds = %for.cond213
  %82 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15828
  %83 = load %struct.stv090x_reg*, %struct.stv090x_reg** %stv090x_cut20_val, align 8, !dbg !15831
  %84 = load i32, i32* %i, align 4, !dbg !15832
  %idxprom218 = sext i32 %84 to i64, !dbg !15831
  %arrayidx219 = getelementptr %struct.stv090x_reg, %struct.stv090x_reg* %83, i64 %idxprom218, !dbg !15831
  %addr220 = getelementptr inbounds %struct.stv090x_reg, %struct.stv090x_reg* %arrayidx219, i32 0, i32 0, !dbg !15833
  %85 = load i16, i16* %addr220, align 2, !dbg !15833
  %conv221 = zext i16 %85 to i32, !dbg !15831
  %86 = load %struct.stv090x_reg*, %struct.stv090x_reg** %stv090x_cut20_val, align 8, !dbg !15834
  %87 = load i32, i32* %i, align 4, !dbg !15835
  %idxprom222 = sext i32 %87 to i64, !dbg !15834
  %arrayidx223 = getelementptr %struct.stv090x_reg, %struct.stv090x_reg* %86, i64 %idxprom222, !dbg !15834
  %data224 = getelementptr inbounds %struct.stv090x_reg, %struct.stv090x_reg* %arrayidx223, i32 0, i32 1, !dbg !15836
  %88 = load i8, i8* %data224, align 2, !dbg !15836
  %call225 = call i32 @stv090x_write_reg(%struct.stv090x_state* %82, i32 %conv221, i8 zeroext %88) #9, !dbg !15837
  %cmp226 = icmp slt i32 %call225, 0, !dbg !15838
  br i1 %cmp226, label %if.then228, label %if.end229, !dbg !15839

if.then228:                                       ; preds = %for.body217
  br label %err, !dbg !15840

if.end229:                                        ; preds = %for.body217
  br label %for.inc230, !dbg !15841

for.inc230:                                       ; preds = %if.end229
  %89 = load i32, i32* %i, align 4, !dbg !15842
  %inc231 = add i32 %89, 1, !dbg !15842
  store i32 %inc231, i32* %i, align 4, !dbg !15842
  br label %for.cond213, !dbg !15843, !llvm.loop !15844

for.end232:                                       ; preds = %for.cond213
  br label %if.end337, !dbg !15846

if.else233:                                       ; preds = %for.end
  %90 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15847
  %internal234 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %90, i32 0, i32 3, !dbg !15849
  %91 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal234, align 8, !dbg !15849
  %dev_ver235 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %91, i32 0, i32 5, !dbg !15850
  %92 = load i32, i32* %dev_ver235, align 4, !dbg !15850
  %cmp236 = icmp ult i32 %92, 32, !dbg !15851
  br i1 %cmp236, label %if.then238, label %if.else284, !dbg !15852

if.then238:                                       ; preds = %if.else233
  br label %do.body239, !dbg !15853

do.body239:                                       ; preds = %if.then238
  %93 = load i32, i32* @verbose, align 4, !dbg !15855
  %cmp240 = icmp ugt i32 %93, 0, !dbg !15855
  br i1 %cmp240, label %land.lhs.true242, label %if.else249, !dbg !15855

land.lhs.true242:                                 ; preds = %do.body239
  %94 = load i32, i32* @verbose, align 4, !dbg !15855
  %cmp243 = icmp ugt i32 %94, 0, !dbg !15855
  br i1 %cmp243, label %if.then245, label %if.else249, !dbg !15860

if.then245:                                       ; preds = %land.lhs.true242
  %95 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15855
  %internal246 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %95, i32 0, i32 3, !dbg !15855
  %96 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal246, align 8, !dbg !15855
  %dev_ver247 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %96, i32 0, i32 5, !dbg !15855
  %97 = load i32, i32* %dev_ver247, align 4, !dbg !15855
  %call248 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.164, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %97) #13, !dbg !15855
  br label %if.end282, !dbg !15855

if.else249:                                       ; preds = %land.lhs.true242, %do.body239
  %98 = load i32, i32* @verbose, align 4, !dbg !15861
  %cmp250 = icmp ugt i32 %98, 1, !dbg !15861
  br i1 %cmp250, label %land.lhs.true252, label %if.else259, !dbg !15861

land.lhs.true252:                                 ; preds = %if.else249
  %99 = load i32, i32* @verbose, align 4, !dbg !15861
  %cmp253 = icmp ugt i32 %99, 0, !dbg !15861
  br i1 %cmp253, label %if.then255, label %if.else259, !dbg !15855

if.then255:                                       ; preds = %land.lhs.true252
  %100 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15861
  %internal256 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %100, i32 0, i32 3, !dbg !15861
  %101 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal256, align 8, !dbg !15861
  %dev_ver257 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %101, i32 0, i32 5, !dbg !15861
  %102 = load i32, i32* %dev_ver257, align 4, !dbg !15861
  %call258 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.165, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %102) #13, !dbg !15861
  br label %if.end281, !dbg !15861

if.else259:                                       ; preds = %land.lhs.true252, %if.else249
  %103 = load i32, i32* @verbose, align 4, !dbg !15863
  %cmp260 = icmp ugt i32 %103, 2, !dbg !15863
  br i1 %cmp260, label %land.lhs.true262, label %if.else269, !dbg !15863

land.lhs.true262:                                 ; preds = %if.else259
  %104 = load i32, i32* @verbose, align 4, !dbg !15863
  %cmp263 = icmp ugt i32 %104, 0, !dbg !15863
  br i1 %cmp263, label %if.then265, label %if.else269, !dbg !15861

if.then265:                                       ; preds = %land.lhs.true262
  %105 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15863
  %internal266 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %105, i32 0, i32 3, !dbg !15863
  %106 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal266, align 8, !dbg !15863
  %dev_ver267 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %106, i32 0, i32 5, !dbg !15863
  %107 = load i32, i32* %dev_ver267, align 4, !dbg !15863
  %call268 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.166, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %107) #13, !dbg !15863
  br label %if.end280, !dbg !15863

if.else269:                                       ; preds = %land.lhs.true262, %if.else259
  %108 = load i32, i32* @verbose, align 4, !dbg !15865
  %cmp270 = icmp ugt i32 %108, 3, !dbg !15865
  br i1 %cmp270, label %land.lhs.true272, label %if.end279, !dbg !15865

land.lhs.true272:                                 ; preds = %if.else269
  %109 = load i32, i32* @verbose, align 4, !dbg !15865
  %cmp273 = icmp ugt i32 %109, 0, !dbg !15865
  br i1 %cmp273, label %if.then275, label %if.end279, !dbg !15863

if.then275:                                       ; preds = %land.lhs.true272
  %110 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15865
  %internal276 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %110, i32 0, i32 3, !dbg !15865
  %111 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal276, align 8, !dbg !15865
  %dev_ver277 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %111, i32 0, i32 5, !dbg !15865
  %112 = load i32, i32* %dev_ver277, align 4, !dbg !15865
  %call278 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.167, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %112) #13, !dbg !15865
  br label %if.end279, !dbg !15865

if.end279:                                        ; preds = %if.then275, %land.lhs.true272, %if.else269
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %if.then265
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.then255
  br label %if.end282

if.end282:                                        ; preds = %if.end281, %if.then245
  br label %do.end283, !dbg !15867

do.end283:                                        ; preds = %if.end282
  br label %err, !dbg !15868

if.else284:                                       ; preds = %if.else233
  %113 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15869
  %internal285 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %113, i32 0, i32 3, !dbg !15871
  %114 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal285, align 8, !dbg !15871
  %dev_ver286 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %114, i32 0, i32 5, !dbg !15872
  %115 = load i32, i32* %dev_ver286, align 4, !dbg !15872
  %cmp287 = icmp ugt i32 %115, 48, !dbg !15873
  br i1 %cmp287, label %if.then289, label %if.end335, !dbg !15874

if.then289:                                       ; preds = %if.else284
  br label %do.body290, !dbg !15875

do.body290:                                       ; preds = %if.then289
  %116 = load i32, i32* @verbose, align 4, !dbg !15877
  %cmp291 = icmp ugt i32 %116, 0, !dbg !15877
  br i1 %cmp291, label %land.lhs.true293, label %if.else300, !dbg !15877

land.lhs.true293:                                 ; preds = %do.body290
  %117 = load i32, i32* @verbose, align 4, !dbg !15877
  %cmp294 = icmp ugt i32 %117, 0, !dbg !15877
  br i1 %cmp294, label %if.then296, label %if.else300, !dbg !15882

if.then296:                                       ; preds = %land.lhs.true293
  %118 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15877
  %internal297 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %118, i32 0, i32 3, !dbg !15877
  %119 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal297, align 8, !dbg !15877
  %dev_ver298 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %119, i32 0, i32 5, !dbg !15877
  %120 = load i32, i32* %dev_ver298, align 4, !dbg !15877
  %call299 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.168, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %120) #13, !dbg !15877
  br label %if.end333, !dbg !15877

if.else300:                                       ; preds = %land.lhs.true293, %do.body290
  %121 = load i32, i32* @verbose, align 4, !dbg !15883
  %cmp301 = icmp ugt i32 %121, 1, !dbg !15883
  br i1 %cmp301, label %land.lhs.true303, label %if.else310, !dbg !15883

land.lhs.true303:                                 ; preds = %if.else300
  %122 = load i32, i32* @verbose, align 4, !dbg !15883
  %cmp304 = icmp ugt i32 %122, 0, !dbg !15883
  br i1 %cmp304, label %if.then306, label %if.else310, !dbg !15877

if.then306:                                       ; preds = %land.lhs.true303
  %123 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15883
  %internal307 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %123, i32 0, i32 3, !dbg !15883
  %124 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal307, align 8, !dbg !15883
  %dev_ver308 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %124, i32 0, i32 5, !dbg !15883
  %125 = load i32, i32* %dev_ver308, align 4, !dbg !15883
  %call309 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.169, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %125) #13, !dbg !15883
  br label %if.end332, !dbg !15883

if.else310:                                       ; preds = %land.lhs.true303, %if.else300
  %126 = load i32, i32* @verbose, align 4, !dbg !15885
  %cmp311 = icmp ugt i32 %126, 2, !dbg !15885
  br i1 %cmp311, label %land.lhs.true313, label %if.else320, !dbg !15885

land.lhs.true313:                                 ; preds = %if.else310
  %127 = load i32, i32* @verbose, align 4, !dbg !15885
  %cmp314 = icmp ugt i32 %127, 0, !dbg !15885
  br i1 %cmp314, label %if.then316, label %if.else320, !dbg !15883

if.then316:                                       ; preds = %land.lhs.true313
  %128 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15885
  %internal317 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %128, i32 0, i32 3, !dbg !15885
  %129 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal317, align 8, !dbg !15885
  %dev_ver318 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %129, i32 0, i32 5, !dbg !15885
  %130 = load i32, i32* %dev_ver318, align 4, !dbg !15885
  %call319 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.170, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %130) #13, !dbg !15885
  br label %if.end331, !dbg !15885

if.else320:                                       ; preds = %land.lhs.true313, %if.else310
  %131 = load i32, i32* @verbose, align 4, !dbg !15887
  %cmp321 = icmp ugt i32 %131, 3, !dbg !15887
  br i1 %cmp321, label %land.lhs.true323, label %if.end330, !dbg !15887

land.lhs.true323:                                 ; preds = %if.else320
  %132 = load i32, i32* @verbose, align 4, !dbg !15887
  %cmp324 = icmp ugt i32 %132, 0, !dbg !15887
  br i1 %cmp324, label %if.then326, label %if.end330, !dbg !15885

if.then326:                                       ; preds = %land.lhs.true323
  %133 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15887
  %internal327 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %133, i32 0, i32 3, !dbg !15887
  %134 = load %struct.stv090x_internal*, %struct.stv090x_internal** %internal327, align 8, !dbg !15887
  %dev_ver328 = getelementptr inbounds %struct.stv090x_internal, %struct.stv090x_internal* %134, i32 0, i32 5, !dbg !15887
  %135 = load i32, i32* %dev_ver328, align 4, !dbg !15887
  %call329 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.171, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0), i32 %135) #13, !dbg !15887
  br label %if.end330, !dbg !15887

if.end330:                                        ; preds = %if.then326, %land.lhs.true323, %if.else320
  br label %if.end331

if.end331:                                        ; preds = %if.end330, %if.then316
  br label %if.end332

if.end332:                                        ; preds = %if.end331, %if.then306
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.then296
  br label %do.end334, !dbg !15889

do.end334:                                        ; preds = %if.end333
  br label %if.end335, !dbg !15890

if.end335:                                        ; preds = %do.end334, %if.else284
  br label %if.end336

if.end336:                                        ; preds = %if.end335
  br label %if.end337

if.end337:                                        ; preds = %if.end336, %for.end232
  %136 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15891
  %call338 = call i32 @stv090x_read_reg(%struct.stv090x_state* %136, i32 61920) #9, !dbg !15892
  store i32 %call338, i32* %reg, align 4, !dbg !15893
  %137 = load i32, i32* %reg, align 4, !dbg !15894
  %and339 = and i32 %137, -2, !dbg !15894
  %138 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !15894
  %adc1_range = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %138, i32 0, i32 13, !dbg !15894
  %139 = load i32, i32* %adc1_range, align 4, !dbg !15894
  %cmp340 = icmp eq i32 %139, 1, !dbg !15894
  %140 = zext i1 %cmp340 to i64, !dbg !15894
  %cond = select i1 %cmp340, i32 0, i32 1, !dbg !15894
  %or342 = or i32 %and339, %cond, !dbg !15894
  store i32 %or342, i32* %reg, align 4, !dbg !15894
  %141 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15895
  %142 = load i32, i32* %reg, align 4, !dbg !15897
  %conv343 = trunc i32 %142 to i8, !dbg !15897
  %call344 = call i32 @stv090x_write_reg(%struct.stv090x_state* %141, i32 61920, i8 zeroext %conv343) #9, !dbg !15898
  %cmp345 = icmp slt i32 %call344, 0, !dbg !15899
  br i1 %cmp345, label %if.then347, label %if.end348, !dbg !15900

if.then347:                                       ; preds = %if.end337
  br label %err, !dbg !15901

if.end348:                                        ; preds = %if.end337
  %143 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15902
  %call349 = call i32 @stv090x_read_reg(%struct.stv090x_state* %143, i32 61922) #9, !dbg !15903
  store i32 %call349, i32* %reg, align 4, !dbg !15904
  %144 = load i32, i32* %reg, align 4, !dbg !15905
  %and350 = and i32 %144, -2, !dbg !15905
  %145 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !15905
  %adc2_range = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %145, i32 0, i32 14, !dbg !15905
  %146 = load i32, i32* %adc2_range, align 8, !dbg !15905
  %cmp351 = icmp eq i32 %146, 1, !dbg !15905
  %147 = zext i1 %cmp351 to i64, !dbg !15905
  %cond353 = select i1 %cmp351, i32 0, i32 1, !dbg !15905
  %or354 = or i32 %and350, %cond353, !dbg !15905
  store i32 %or354, i32* %reg, align 4, !dbg !15905
  %148 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15906
  %149 = load i32, i32* %reg, align 4, !dbg !15908
  %conv355 = trunc i32 %149 to i8, !dbg !15908
  %call356 = call i32 @stv090x_write_reg(%struct.stv090x_state* %148, i32 61922, i8 zeroext %conv355) #9, !dbg !15909
  %cmp357 = icmp slt i32 %call356, 0, !dbg !15910
  br i1 %cmp357, label %if.then359, label %if.end360, !dbg !15911

if.then359:                                       ; preds = %if.end348
  br label %err, !dbg !15912

if.end360:                                        ; preds = %if.end348
  %150 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15913
  %call361 = call i32 @stv090x_write_reg(%struct.stv090x_state* %150, i32 65297, i8 zeroext -128) #9, !dbg !15915
  %cmp362 = icmp slt i32 %call361, 0, !dbg !15916
  br i1 %cmp362, label %if.then364, label %if.end365, !dbg !15917

if.then364:                                       ; preds = %if.end360
  br label %err, !dbg !15918

if.end365:                                        ; preds = %if.end360
  %151 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15919
  %call366 = call i32 @stv090x_write_reg(%struct.stv090x_state* %151, i32 65297, i8 zeroext 0) #9, !dbg !15921
  %cmp367 = icmp slt i32 %call366, 0, !dbg !15922
  br i1 %cmp367, label %if.then369, label %if.end370, !dbg !15923

if.then369:                                       ; preds = %if.end365
  br label %err, !dbg !15924

if.end370:                                        ; preds = %if.end365
  store i32 0, i32* %retval, align 4, !dbg !15925
  br label %return, !dbg !15925

err:                                              ; preds = %if.then369, %if.then364, %if.then359, %if.then347, %do.end283, %if.then228, %if.then174, %if.then163, %if.then115, %if.then108, %if.then103, %if.then97, %if.then87, %if.then81, %if.then74, %if.then69, %if.then62
  call void @llvm.dbg.label(metadata !15926), !dbg !15927
  br label %do.body371, !dbg !15928

do.body371:                                       ; preds = %err
  %152 = load i32, i32* @verbose, align 4, !dbg !15929
  %cmp372 = icmp ugt i32 %152, 0, !dbg !15929
  br i1 %cmp372, label %land.lhs.true374, label %if.else379, !dbg !15929

land.lhs.true374:                                 ; preds = %do.body371
  %153 = load i32, i32* @verbose, align 4, !dbg !15929
  %cmp375 = icmp ugt i32 %153, 0, !dbg !15929
  br i1 %cmp375, label %if.then377, label %if.else379, !dbg !15934

if.then377:                                       ; preds = %land.lhs.true374
  %call378 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15929
  br label %if.end406, !dbg !15929

if.else379:                                       ; preds = %land.lhs.true374, %do.body371
  %154 = load i32, i32* @verbose, align 4, !dbg !15935
  %cmp380 = icmp ugt i32 %154, 1, !dbg !15935
  br i1 %cmp380, label %land.lhs.true382, label %if.else387, !dbg !15935

land.lhs.true382:                                 ; preds = %if.else379
  %155 = load i32, i32* @verbose, align 4, !dbg !15935
  %cmp383 = icmp ugt i32 %155, 0, !dbg !15935
  br i1 %cmp383, label %if.then385, label %if.else387, !dbg !15929

if.then385:                                       ; preds = %land.lhs.true382
  %call386 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15935
  br label %if.end405, !dbg !15935

if.else387:                                       ; preds = %land.lhs.true382, %if.else379
  %156 = load i32, i32* @verbose, align 4, !dbg !15937
  %cmp388 = icmp ugt i32 %156, 2, !dbg !15937
  br i1 %cmp388, label %land.lhs.true390, label %if.else395, !dbg !15937

land.lhs.true390:                                 ; preds = %if.else387
  %157 = load i32, i32* @verbose, align 4, !dbg !15937
  %cmp391 = icmp ugt i32 %157, 0, !dbg !15937
  br i1 %cmp391, label %if.then393, label %if.else395, !dbg !15935

if.then393:                                       ; preds = %land.lhs.true390
  %call394 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15937
  br label %if.end404, !dbg !15937

if.else395:                                       ; preds = %land.lhs.true390, %if.else387
  %158 = load i32, i32* @verbose, align 4, !dbg !15939
  %cmp396 = icmp ugt i32 %158, 3, !dbg !15939
  br i1 %cmp396, label %land.lhs.true398, label %if.end403, !dbg !15939

land.lhs.true398:                                 ; preds = %if.else395
  %159 = load i32, i32* @verbose, align 4, !dbg !15939
  %cmp399 = icmp ugt i32 %159, 0, !dbg !15939
  br i1 %cmp399, label %if.then401, label %if.end403, !dbg !15937

if.then401:                                       ; preds = %land.lhs.true398
  %call402 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.stv090x_setup, i64 0, i64 0)) #13, !dbg !15939
  br label %if.end403, !dbg !15939

if.end403:                                        ; preds = %if.then401, %land.lhs.true398, %if.else395
  br label %if.end404

if.end404:                                        ; preds = %if.end403, %if.then393
  br label %if.end405

if.end405:                                        ; preds = %if.end404, %if.then385
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.then377
  br label %do.end407, !dbg !15941

do.end407:                                        ; preds = %if.end406
  store i32 -1, i32* %retval, align 4, !dbg !15942
  br label %return, !dbg !15942

return:                                           ; preds = %do.end407, %if.end370
  %160 = load i32, i32* %retval, align 4, !dbg !15943
  ret i32 %160, !dbg !15943
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_set_gpio(%struct.dvb_frontend* %fe, i8 zeroext %gpio, i8 zeroext %dir, i8 zeroext %value, i8 zeroext %xor_value) #0 !dbg !15944 {
entry:
  %fe.addr = alloca %struct.dvb_frontend*, align 8
  %gpio.addr = alloca i8, align 1
  %dir.addr = alloca i8, align 1
  %value.addr = alloca i8, align 1
  %xor_value.addr = alloca i8, align 1
  %state = alloca %struct.stv090x_state*, align 8
  %reg = alloca i8, align 1
  store %struct.dvb_frontend* %fe, %struct.dvb_frontend** %fe.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dvb_frontend** %fe.addr, metadata !15945, metadata !DIExpression()), !dbg !15946
  store i8 %gpio, i8* %gpio.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %gpio.addr, metadata !15947, metadata !DIExpression()), !dbg !15948
  store i8 %dir, i8* %dir.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dir.addr, metadata !15949, metadata !DIExpression()), !dbg !15950
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !15951, metadata !DIExpression()), !dbg !15952
  store i8 %xor_value, i8* %xor_value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %xor_value.addr, metadata !15953, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !15955, metadata !DIExpression()), !dbg !15956
  %0 = load %struct.dvb_frontend*, %struct.dvb_frontend** %fe.addr, align 8, !dbg !15957
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %0, i32 0, i32 3, !dbg !15958
  %1 = load i8*, i8** %demodulator_priv, align 8, !dbg !15958
  %2 = bitcast i8* %1 to %struct.stv090x_state*, !dbg !15957
  store %struct.stv090x_state* %2, %struct.stv090x_state** %state, align 8, !dbg !15956
  call void @llvm.dbg.declare(metadata i8* %reg, metadata !15959, metadata !DIExpression()), !dbg !15960
  store i8 0, i8* %reg, align 1, !dbg !15960
  %3 = load i8, i8* %reg, align 1, !dbg !15961
  %conv = zext i8 %3 to i32, !dbg !15961
  %and = and i32 %conv, -129, !dbg !15961
  %4 = load i8, i8* %dir.addr, align 1, !dbg !15961
  %conv1 = zext i8 %4 to i32, !dbg !15961
  %shl = shl i32 %conv1, 7, !dbg !15961
  %or = or i32 %and, %shl, !dbg !15961
  %conv2 = trunc i32 %or to i8, !dbg !15961
  store i8 %conv2, i8* %reg, align 1, !dbg !15961
  %5 = load i8, i8* %reg, align 1, !dbg !15962
  %conv3 = zext i8 %5 to i32, !dbg !15962
  %and4 = and i32 %conv3, -127, !dbg !15962
  %6 = load i8, i8* %value.addr, align 1, !dbg !15962
  %conv5 = zext i8 %6 to i32, !dbg !15962
  %shl6 = shl i32 %conv5, 1, !dbg !15962
  %or7 = or i32 %and4, %shl6, !dbg !15962
  %conv8 = trunc i32 %or7 to i8, !dbg !15962
  store i8 %conv8, i8* %reg, align 1, !dbg !15962
  %7 = load i8, i8* %reg, align 1, !dbg !15963
  %conv9 = zext i8 %7 to i32, !dbg !15963
  %and10 = and i32 %conv9, -2, !dbg !15963
  %8 = load i8, i8* %xor_value.addr, align 1, !dbg !15963
  %conv11 = zext i8 %8 to i32, !dbg !15963
  %shl12 = shl i32 %conv11, 0, !dbg !15963
  %or13 = or i32 %and10, %shl12, !dbg !15963
  %conv14 = trunc i32 %or13 to i8, !dbg !15963
  store i8 %conv14, i8* %reg, align 1, !dbg !15963
  %9 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15964
  %10 = load i8, i8* %gpio.addr, align 1, !dbg !15965
  %conv15 = zext i8 %10 to i32, !dbg !15965
  %sub = sub i32 %conv15, 1, !dbg !15965
  %add = add i32 61761, %sub, !dbg !15965
  %11 = load i8, i8* %reg, align 1, !dbg !15966
  %call = call i32 @stv090x_write_reg(%struct.stv090x_state* %9, i32 %add, i8 zeroext %11) #9, !dbg !15967
  ret i32 %call, !dbg !15968
}

; Function Attrs: noredzone
declare dso_local i32 @i2c_register_driver(%struct.module*, %struct.i2c_driver*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_probe(%struct.i2c_client* %client, %struct.i2c_device_id* %id) #0 !dbg !15969 {
entry:
  %retval = alloca i32, align 4
  %client.addr = alloca %struct.i2c_client*, align 8
  %id.addr = alloca %struct.i2c_device_id*, align 8
  %ret = alloca i32, align 4
  %config = alloca %struct.stv090x_config*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  store %struct.i2c_client* %client, %struct.i2c_client** %client.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_client** %client.addr, metadata !15970, metadata !DIExpression()), !dbg !15971
  store %struct.i2c_device_id* %id, %struct.i2c_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_device_id** %id.addr, metadata !15972, metadata !DIExpression()), !dbg !15973
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15974, metadata !DIExpression()), !dbg !15975
  store i32 0, i32* %ret, align 4, !dbg !15975
  call void @llvm.dbg.declare(metadata %struct.stv090x_config** %config, metadata !15976, metadata !DIExpression()), !dbg !15977
  %0 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !15978
  %dev = getelementptr inbounds %struct.i2c_client, %struct.i2c_client* %0, i32 0, i32 4, !dbg !15979
  %platform_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 7, !dbg !15980
  %1 = load i8*, i8** %platform_data, align 8, !dbg !15980
  %2 = bitcast i8* %1 to %struct.stv090x_config*, !dbg !15978
  store %struct.stv090x_config* %2, %struct.stv090x_config** %config, align 8, !dbg !15977
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !15981, metadata !DIExpression()), !dbg !15982
  store %struct.stv090x_state* null, %struct.stv090x_state** %state, align 8, !dbg !15982
  %call = call i8* @kzalloc(i64 1392, i32 3264) #9, !dbg !15983
  %3 = bitcast i8* %call to %struct.stv090x_state*, !dbg !15983
  store %struct.stv090x_state* %3, %struct.stv090x_state** %state, align 8, !dbg !15984
  %4 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15985
  %tobool = icmp ne %struct.stv090x_state* %4, null, !dbg !15985
  br i1 %tobool, label %if.end, label %if.then, !dbg !15987

if.then:                                          ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !15988
  br label %error, !dbg !15990

if.end:                                           ; preds = %entry
  %5 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15991
  %verbose = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %5, i32 0, i32 7, !dbg !15992
  store i32* @verbose, i32** %verbose, align 8, !dbg !15993
  %6 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !15994
  %7 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !15995
  %config1 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %7, i32 0, i32 5, !dbg !15996
  store %struct.stv090x_config* %6, %struct.stv090x_config** %config1, align 8, !dbg !15997
  %8 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !15998
  %adapter = getelementptr inbounds %struct.i2c_client, %struct.i2c_client* %8, i32 0, i32 3, !dbg !15999
  %9 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter, align 8, !dbg !15999
  %10 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16000
  %i2c = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %10, i32 0, i32 4, !dbg !16001
  store %struct.i2c_adapter* %9, %struct.i2c_adapter** %i2c, align 8, !dbg !16002
  %11 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16003
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %11, i32 0, i32 6, !dbg !16004
  %ops = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend, i32 0, i32 1, !dbg !16005
  %12 = bitcast %struct.dvb_frontend_ops* %ops to i8*, !dbg !16006
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 getelementptr inbounds (%struct.dvb_frontend_ops, %struct.dvb_frontend_ops* @stv090x_ops, i32 0, i32 0, i32 0, i32 0), i64 752, i1 false), !dbg !16006
  %13 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16007
  %14 = bitcast %struct.stv090x_state* %13 to i8*, !dbg !16007
  %15 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16008
  %frontend2 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %15, i32 0, i32 6, !dbg !16009
  %demodulator_priv = getelementptr inbounds %struct.dvb_frontend, %struct.dvb_frontend* %frontend2, i32 0, i32 3, !dbg !16010
  store i8* %14, i8** %demodulator_priv, align 8, !dbg !16011
  %16 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !16012
  %demod = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %16, i32 0, i32 3, !dbg !16013
  %17 = load i32, i32* %demod, align 4, !dbg !16013
  %18 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16014
  %demod3 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %18, i32 0, i32 1, !dbg !16015
  store i32 %17, i32* %demod3, align 4, !dbg !16016
  %19 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !16017
  %demod_mode = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %19, i32 0, i32 1, !dbg !16018
  %20 = load i32, i32* %demod_mode, align 4, !dbg !16018
  %21 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16019
  %demod_mode4 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %21, i32 0, i32 2, !dbg !16020
  store i32 %20, i32* %demod_mode4, align 8, !dbg !16021
  %22 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !16022
  %device = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %22, i32 0, i32 0, !dbg !16023
  %23 = load i32, i32* %device, align 8, !dbg !16023
  %24 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16024
  %device5 = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %24, i32 0, i32 0, !dbg !16025
  store i32 %23, i32* %device5, align 8, !dbg !16026
  %25 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16027
  %rolloff = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %25, i32 0, i32 15, !dbg !16028
  store i32 0, i32* %rolloff, align 4, !dbg !16029
  %26 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16030
  %call6 = call i32 @stv090x_setup_compound(%struct.stv090x_state* %26) #9, !dbg !16031
  store i32 %call6, i32* %ret, align 4, !dbg !16032
  %27 = load i32, i32* %ret, align 4, !dbg !16033
  %tobool7 = icmp ne i32 %27, 0, !dbg !16033
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !16035

if.then8:                                         ; preds = %if.end
  br label %error, !dbg !16036

if.end9:                                          ; preds = %if.end
  %28 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !16037
  %29 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16038
  %30 = bitcast %struct.stv090x_state* %29 to i8*, !dbg !16038
  call void @i2c_set_clientdata(%struct.i2c_client* %28, i8* %30) #9, !dbg !16039
  %31 = load %struct.stv090x_config*, %struct.stv090x_config** %config, align 8, !dbg !16040
  %get_dvb_frontend = getelementptr inbounds %struct.stv090x_config, %struct.stv090x_config* %31, i32 0, i32 29, !dbg !16041
  store %struct.dvb_frontend* (%struct.i2c_client*)* @stv090x_get_dvb_frontend, %struct.dvb_frontend* (%struct.i2c_client*)** %get_dvb_frontend, align 8, !dbg !16042
  store i32 0, i32* %retval, align 4, !dbg !16043
  br label %return, !dbg !16043

error:                                            ; preds = %if.then8, %if.then
  call void @llvm.dbg.label(metadata !16044), !dbg !16045
  %32 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16046
  %33 = bitcast %struct.stv090x_state* %32 to i8*, !dbg !16046
  call void @kfree(i8* %33) #9, !dbg !16047
  %34 = load i32, i32* %ret, align 4, !dbg !16048
  store i32 %34, i32* %retval, align 4, !dbg !16049
  br label %return, !dbg !16049

return:                                           ; preds = %error, %if.end9
  %35 = load i32, i32* %retval, align 4, !dbg !16050
  ret i32 %35, !dbg !16050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stv090x_remove(%struct.i2c_client* %client) #0 !dbg !16051 {
entry:
  %client.addr = alloca %struct.i2c_client*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  store %struct.i2c_client* %client, %struct.i2c_client** %client.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_client** %client.addr, metadata !16052, metadata !DIExpression()), !dbg !16053
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !16054, metadata !DIExpression()), !dbg !16055
  %0 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !16056
  %call = call i8* @i2c_get_clientdata(%struct.i2c_client* %0) #9, !dbg !16057
  %1 = bitcast i8* %call to %struct.stv090x_state*, !dbg !16057
  store %struct.stv090x_state* %1, %struct.stv090x_state** %state, align 8, !dbg !16055
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16058
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 6, !dbg !16059
  call void @stv090x_release(%struct.dvb_frontend* %frontend) #9, !dbg !16060
  ret i32 0, !dbg !16061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @i2c_set_clientdata(%struct.i2c_client* %client, i8* %data) #0 !dbg !16062 {
entry:
  %client.addr = alloca %struct.i2c_client*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.i2c_client* %client, %struct.i2c_client** %client.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_client** %client.addr, metadata !16065, metadata !DIExpression()), !dbg !16066
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16067, metadata !DIExpression()), !dbg !16068
  %0 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !16069
  %dev = getelementptr inbounds %struct.i2c_client, %struct.i2c_client* %0, i32 0, i32 4, !dbg !16070
  %1 = load i8*, i8** %data.addr, align 8, !dbg !16071
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #9, !dbg !16072
  ret void, !dbg !16073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dvb_frontend* @stv090x_get_dvb_frontend(%struct.i2c_client* %client) #0 !dbg !16074 {
entry:
  %client.addr = alloca %struct.i2c_client*, align 8
  %state = alloca %struct.stv090x_state*, align 8
  store %struct.i2c_client* %client, %struct.i2c_client** %client.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_client** %client.addr, metadata !16075, metadata !DIExpression()), !dbg !16076
  call void @llvm.dbg.declare(metadata %struct.stv090x_state** %state, metadata !16077, metadata !DIExpression()), !dbg !16078
  %0 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !16079
  %call = call i8* @i2c_get_clientdata(%struct.i2c_client* %0) #9, !dbg !16080
  %1 = bitcast i8* %call to %struct.stv090x_state*, !dbg !16080
  store %struct.stv090x_state* %1, %struct.stv090x_state** %state, align 8, !dbg !16078
  %2 = load %struct.stv090x_state*, %struct.stv090x_state** %state, align 8, !dbg !16081
  %frontend = getelementptr inbounds %struct.stv090x_state, %struct.stv090x_state* %2, i32 0, i32 6, !dbg !16082
  ret %struct.dvb_frontend* %frontend, !dbg !16083
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !16084 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16087, metadata !DIExpression()), !dbg !16088
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16089, metadata !DIExpression()), !dbg !16090
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16091
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16092
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !16093
  store i8* %0, i8** %driver_data, align 8, !dbg !16094
  ret void, !dbg !16095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @i2c_get_clientdata(%struct.i2c_client* %client) #0 !dbg !16096 {
entry:
  %client.addr = alloca %struct.i2c_client*, align 8
  store %struct.i2c_client* %client, %struct.i2c_client** %client.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_client** %client.addr, metadata !16101, metadata !DIExpression()), !dbg !16102
  %0 = load %struct.i2c_client*, %struct.i2c_client** %client.addr, align 8, !dbg !16103
  %dev = getelementptr inbounds %struct.i2c_client, %struct.i2c_client* %0, i32 0, i32 4, !dbg !16104
  %call = call i8* @dev_get_drvdata(%struct.device* %dev) #9, !dbg !16105
  ret i8* %call, !dbg !16106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_get_drvdata(%struct.device* %dev) #0 !dbg !16107 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !16110, metadata !DIExpression()), !dbg !16111
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !16112
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 8, !dbg !16113
  %1 = load i8*, i8** %driver_data, align 8, !dbg !16113
  ret i8* %1, !dbg !16114
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { nounwind }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { cold noredzone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4862, !4863, !4864, !4865}
!llvm.ident = !{!4866}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__param_str_verbose", scope: !2, file: !3, line: 30, type: !4861, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !435, globals: !450, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/media/dvb-frontends/stv090x.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !40, !50, !57, !73, !78, !82, !87, !102, !113, !126, !133, !138, !144, !165, !171, !175, !183, !190, !195, !201, !207, !216, !224, !230, !236, !243, !251, !257, !271, !283, !288, !292, !296, !300, !310, !314, !319, !326, !338, !345, !377, !383, !387, !391, !396, !401, !406, !413, !421, !426}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_caps", file: !6, line: 72, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/uapi/linux/dvb/frontend.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!9 = !DIEnumerator(name: "FE_IS_STUPID", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "FE_CAN_INVERSION_AUTO", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "FE_CAN_FEC_1_2", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "FE_CAN_FEC_2_3", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "FE_CAN_FEC_3_4", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "FE_CAN_FEC_4_5", value: 16, isUnsigned: true)
!15 = !DIEnumerator(name: "FE_CAN_FEC_5_6", value: 32, isUnsigned: true)
!16 = !DIEnumerator(name: "FE_CAN_FEC_6_7", value: 64, isUnsigned: true)
!17 = !DIEnumerator(name: "FE_CAN_FEC_7_8", value: 128, isUnsigned: true)
!18 = !DIEnumerator(name: "FE_CAN_FEC_8_9", value: 256, isUnsigned: true)
!19 = !DIEnumerator(name: "FE_CAN_FEC_AUTO", value: 512, isUnsigned: true)
!20 = !DIEnumerator(name: "FE_CAN_QPSK", value: 1024, isUnsigned: true)
!21 = !DIEnumerator(name: "FE_CAN_QAM_16", value: 2048, isUnsigned: true)
!22 = !DIEnumerator(name: "FE_CAN_QAM_32", value: 4096, isUnsigned: true)
!23 = !DIEnumerator(name: "FE_CAN_QAM_64", value: 8192, isUnsigned: true)
!24 = !DIEnumerator(name: "FE_CAN_QAM_128", value: 16384, isUnsigned: true)
!25 = !DIEnumerator(name: "FE_CAN_QAM_256", value: 32768, isUnsigned: true)
!26 = !DIEnumerator(name: "FE_CAN_QAM_AUTO", value: 65536, isUnsigned: true)
!27 = !DIEnumerator(name: "FE_CAN_TRANSMISSION_MODE_AUTO", value: 131072, isUnsigned: true)
!28 = !DIEnumerator(name: "FE_CAN_BANDWIDTH_AUTO", value: 262144, isUnsigned: true)
!29 = !DIEnumerator(name: "FE_CAN_GUARD_INTERVAL_AUTO", value: 524288, isUnsigned: true)
!30 = !DIEnumerator(name: "FE_CAN_HIERARCHY_AUTO", value: 1048576, isUnsigned: true)
!31 = !DIEnumerator(name: "FE_CAN_8VSB", value: 2097152, isUnsigned: true)
!32 = !DIEnumerator(name: "FE_CAN_16VSB", value: 4194304, isUnsigned: true)
!33 = !DIEnumerator(name: "FE_HAS_EXTENDED_CAPS", value: 8388608, isUnsigned: true)
!34 = !DIEnumerator(name: "FE_CAN_MULTISTREAM", value: 67108864, isUnsigned: true)
!35 = !DIEnumerator(name: "FE_CAN_TURBO_FEC", value: 134217728, isUnsigned: true)
!36 = !DIEnumerator(name: "FE_CAN_2G_MODULATION", value: 268435456, isUnsigned: true)
!37 = !DIEnumerator(name: "FE_NEEDS_BENDING", value: 536870912, isUnsigned: true)
!38 = !DIEnumerator(name: "FE_CAN_RECOVER", value: 1073741824, isUnsigned: true)
!39 = !DIEnumerator(name: "FE_CAN_MUTE_TS", value: 2147483648, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_status", file: !6, line: 252, baseType: !7, size: 32, elements: !41)
!41 = !{!42, !43, !44, !45, !46, !47, !48, !49}
!42 = !DIEnumerator(name: "FE_NONE", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "FE_HAS_SIGNAL", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "FE_HAS_CARRIER", value: 2, isUnsigned: true)
!45 = !DIEnumerator(name: "FE_HAS_VITERBI", value: 4, isUnsigned: true)
!46 = !DIEnumerator(name: "FE_HAS_SYNC", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "FE_HAS_LOCK", value: 16, isUnsigned: true)
!48 = !DIEnumerator(name: "FE_TIMEDOUT", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "FE_REINIT", value: 64, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_algo", file: !51, line: 144, baseType: !7, size: 32, elements: !52)
!51 = !DIFile(filename: "./include/media/dvb_frontend.h", directory: "/home/lizy2001/genbc/linux")
!52 = !{!53, !54, !55, !56}
!53 = !DIEnumerator(name: "DVBFE_ALGO_HW", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "DVBFE_ALGO_SW", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "DVBFE_ALGO_CUSTOM", value: 4, isUnsigned: true)
!56 = !DIEnumerator(name: "DVBFE_ALGO_RECOVERY", value: 2147483648, isUnsigned: true)
!57 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_modulation", file: !6, line: 338, baseType: !7, size: 32, elements: !58)
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72}
!59 = !DIEnumerator(name: "QPSK", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "QAM_16", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "QAM_32", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "QAM_64", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "QAM_128", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "QAM_256", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "QAM_AUTO", value: 6, isUnsigned: true)
!66 = !DIEnumerator(name: "VSB_8", value: 7, isUnsigned: true)
!67 = !DIEnumerator(name: "VSB_16", value: 8, isUnsigned: true)
!68 = !DIEnumerator(name: "PSK_8", value: 9, isUnsigned: true)
!69 = !DIEnumerator(name: "APSK_16", value: 10, isUnsigned: true)
!70 = !DIEnumerator(name: "APSK_32", value: 11, isUnsigned: true)
!71 = !DIEnumerator(name: "DQPSK", value: 12, isUnsigned: true)
!72 = !DIEnumerator(name: "QAM_4_NR", value: 13, isUnsigned: true)
!73 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_voltage", file: !6, line: 208, baseType: !7, size: 32, elements: !74)
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "SEC_VOLTAGE_13", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "SEC_VOLTAGE_18", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "SEC_VOLTAGE_OFF", value: 2, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_tone_mode", file: !6, line: 220, baseType: !7, size: 32, elements: !79)
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "SEC_TONE_ON", value: 0, isUnsigned: true)
!81 = !DIEnumerator(name: "SEC_TONE_OFF", value: 1, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_spectral_inversion", file: !6, line: 276, baseType: !7, size: 32, elements: !83)
!83 = !{!84, !85, !86}
!84 = !DIEnumerator(name: "INVERSION_OFF", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "INVERSION_ON", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "INVERSION_AUTO", value: 2, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_code_rate", file: !6, line: 302, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101}
!89 = !DIEnumerator(name: "FEC_NONE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "FEC_1_2", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "FEC_2_3", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "FEC_3_4", value: 3, isUnsigned: true)
!93 = !DIEnumerator(name: "FEC_4_5", value: 4, isUnsigned: true)
!94 = !DIEnumerator(name: "FEC_5_6", value: 5, isUnsigned: true)
!95 = !DIEnumerator(name: "FEC_6_7", value: 6, isUnsigned: true)
!96 = !DIEnumerator(name: "FEC_7_8", value: 7, isUnsigned: true)
!97 = !DIEnumerator(name: "FEC_8_9", value: 8, isUnsigned: true)
!98 = !DIEnumerator(name: "FEC_AUTO", value: 9, isUnsigned: true)
!99 = !DIEnumerator(name: "FEC_3_5", value: 10, isUnsigned: true)
!100 = !DIEnumerator(name: "FEC_9_10", value: 11, isUnsigned: true)
!101 = !DIEnumerator(name: "FEC_2_5", value: 12, isUnsigned: true)
!102 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_transmit_mode", file: !6, line: 381, baseType: !7, size: 32, elements: !103)
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112}
!104 = !DIEnumerator(name: "TRANSMISSION_MODE_2K", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "TRANSMISSION_MODE_8K", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "TRANSMISSION_MODE_AUTO", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TRANSMISSION_MODE_4K", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "TRANSMISSION_MODE_1K", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "TRANSMISSION_MODE_16K", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "TRANSMISSION_MODE_32K", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "TRANSMISSION_MODE_C1", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "TRANSMISSION_MODE_C3780", value: 8, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_guard_interval", file: !6, line: 410, baseType: !7, size: 32, elements: !114)
!114 = !{!115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!115 = !DIEnumerator(name: "GUARD_INTERVAL_1_32", value: 0, isUnsigned: true)
!116 = !DIEnumerator(name: "GUARD_INTERVAL_1_16", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "GUARD_INTERVAL_1_8", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "GUARD_INTERVAL_1_4", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "GUARD_INTERVAL_AUTO", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "GUARD_INTERVAL_1_128", value: 5, isUnsigned: true)
!121 = !DIEnumerator(name: "GUARD_INTERVAL_19_128", value: 6, isUnsigned: true)
!122 = !DIEnumerator(name: "GUARD_INTERVAL_19_256", value: 7, isUnsigned: true)
!123 = !DIEnumerator(name: "GUARD_INTERVAL_PN420", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "GUARD_INTERVAL_PN595", value: 9, isUnsigned: true)
!125 = !DIEnumerator(name: "GUARD_INTERVAL_PN945", value: 10, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_hierarchy", file: !6, line: 434, baseType: !7, size: 32, elements: !127)
!127 = !{!128, !129, !130, !131, !132}
!128 = !DIEnumerator(name: "HIERARCHY_NONE", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "HIERARCHY_1", value: 1, isUnsigned: true)
!130 = !DIEnumerator(name: "HIERARCHY_2", value: 2, isUnsigned: true)
!131 = !DIEnumerator(name: "HIERARCHY_4", value: 3, isUnsigned: true)
!132 = !DIEnumerator(name: "HIERARCHY_AUTO", value: 4, isUnsigned: true)
!133 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_pilot", file: !6, line: 562, baseType: !7, size: 32, elements: !134)
!134 = !{!135, !136, !137}
!135 = !DIEnumerator(name: "PILOT_ON", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PILOT_OFF", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PILOT_AUTO", value: 2, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_rolloff", file: !6, line: 579, baseType: !7, size: 32, elements: !139)
!139 = !{!140, !141, !142, !143}
!140 = !DIEnumerator(name: "ROLLOFF_35", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "ROLLOFF_20", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "ROLLOFF_25", value: 2, isUnsigned: true)
!143 = !DIEnumerator(name: "ROLLOFF_AUTO", value: 3, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_delivery_system", file: !6, line: 628, baseType: !7, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164}
!146 = !DIEnumerator(name: "SYS_UNDEFINED", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "SYS_DVBC_ANNEX_A", value: 1, isUnsigned: true)
!148 = !DIEnumerator(name: "SYS_DVBC_ANNEX_B", value: 2, isUnsigned: true)
!149 = !DIEnumerator(name: "SYS_DVBT", value: 3, isUnsigned: true)
!150 = !DIEnumerator(name: "SYS_DSS", value: 4, isUnsigned: true)
!151 = !DIEnumerator(name: "SYS_DVBS", value: 5, isUnsigned: true)
!152 = !DIEnumerator(name: "SYS_DVBS2", value: 6, isUnsigned: true)
!153 = !DIEnumerator(name: "SYS_DVBH", value: 7, isUnsigned: true)
!154 = !DIEnumerator(name: "SYS_ISDBT", value: 8, isUnsigned: true)
!155 = !DIEnumerator(name: "SYS_ISDBS", value: 9, isUnsigned: true)
!156 = !DIEnumerator(name: "SYS_ISDBC", value: 10, isUnsigned: true)
!157 = !DIEnumerator(name: "SYS_ATSC", value: 11, isUnsigned: true)
!158 = !DIEnumerator(name: "SYS_ATSCMH", value: 12, isUnsigned: true)
!159 = !DIEnumerator(name: "SYS_DTMB", value: 13, isUnsigned: true)
!160 = !DIEnumerator(name: "SYS_CMMB", value: 14, isUnsigned: true)
!161 = !DIEnumerator(name: "SYS_DAB", value: 15, isUnsigned: true)
!162 = !DIEnumerator(name: "SYS_DVBT2", value: 16, isUnsigned: true)
!163 = !DIEnumerator(name: "SYS_TURBO", value: 17, isUnsigned: true)
!164 = !DIEnumerator(name: "SYS_DVBC_ANNEX_C", value: 18, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_interleaving", file: !6, line: 451, baseType: !7, size: 32, elements: !166)
!166 = !{!167, !168, !169, !170}
!167 = !DIEnumerator(name: "INTERLEAVING_NONE", value: 0, isUnsigned: true)
!168 = !DIEnumerator(name: "INTERLEAVING_AUTO", value: 1, isUnsigned: true)
!169 = !DIEnumerator(name: "INTERLEAVING_240", value: 2, isUnsigned: true)
!170 = !DIEnumerator(name: "INTERLEAVING_720", value: 3, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fe_sec_mini_cmd", file: !6, line: 233, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174}
!173 = !DIEnumerator(name: "SEC_MINI_A", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "SEC_MINI_B", value: 1, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvbfe_search", file: !51, line: 173, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181, !182}
!177 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_SUCCESS", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ASLEEP", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_FAILED", value: 4, isUnsigned: true)
!180 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_INVALID", value: 8, isUnsigned: true)
!181 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_AGAIN", value: 16, isUnsigned: true)
!182 = !DIEnumerator(name: "DVBFE_ALGO_SEARCH_ERROR", value: 2147483648, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !184, line: 15, baseType: !7, size: 32, elements: !185)
!184 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!185 = !{!186, !187, !188, !189}
!186 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!187 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!188 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!189 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !191, line: 65, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194}
!193 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !196, line: 16, baseType: !7, size: 32, elements: !197)
!196 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!197 = !{!198, !199, !200}
!198 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!201 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !202, line: 54, baseType: !7, size: 32, elements: !203)
!202 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!203 = !{!204, !205, !206}
!204 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!205 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !208, line: 296, baseType: !7, size: 32, elements: !209)
!208 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !211, !212, !213, !214, !215}
!210 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !217, line: 9, baseType: !7, size: 32, elements: !218)
!217 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!218 = !{!219, !220, !221, !222, !223}
!219 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!223 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!224 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !225, line: 26, baseType: !7, size: 32, elements: !226)
!225 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!226 = !{!227, !228, !229}
!227 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !231, line: 44, baseType: !7, size: 32, elements: !232)
!231 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !234, !235}
!233 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !237, line: 343, baseType: !7, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !242}
!239 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !244, line: 524, baseType: !7, size: 32, elements: !245)
!244 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!245 = !{!246, !247, !248, !249, !250}
!246 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!248 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!249 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!250 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!251 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !244, line: 502, baseType: !7, size: 32, elements: !252)
!252 = !{!253, !254, !255, !256}
!253 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!257 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !258, line: 76, baseType: !7, size: 32, elements: !259)
!258 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!259 = !{!260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270}
!260 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!261 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!262 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!263 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!264 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!265 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!266 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!267 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!268 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!269 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!270 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!271 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dvb_device_type", file: !272, line: 57, baseType: !7, size: 32, elements: !273)
!272 = !DIFile(filename: "./include/media/dvbdev.h", directory: "/home/lizy2001/genbc/linux")
!273 = !{!274, !275, !276, !277, !278, !279, !280, !281, !282}
!274 = !DIEnumerator(name: "DVB_DEVICE_SEC", value: 0, isUnsigned: true)
!275 = !DIEnumerator(name: "DVB_DEVICE_FRONTEND", value: 1, isUnsigned: true)
!276 = !DIEnumerator(name: "DVB_DEVICE_DEMUX", value: 2, isUnsigned: true)
!277 = !DIEnumerator(name: "DVB_DEVICE_DVR", value: 3, isUnsigned: true)
!278 = !DIEnumerator(name: "DVB_DEVICE_CA", value: 4, isUnsigned: true)
!279 = !DIEnumerator(name: "DVB_DEVICE_NET", value: 5, isUnsigned: true)
!280 = !DIEnumerator(name: "DVB_DEVICE_VIDEO", value: 6, isUnsigned: true)
!281 = !DIEnumerator(name: "DVB_DEVICE_AUDIO", value: 7, isUnsigned: true)
!282 = !DIEnumerator(name: "DVB_DEVICE_OSD", value: 8, isUnsigned: true)
!283 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_device", file: !284, line: 18, baseType: !7, size: 32, elements: !285)
!284 = !DIFile(filename: "drivers/media/dvb-frontends/stv090x.h", directory: "/home/lizy2001/genbc/linux")
!285 = !{!286, !287}
!286 = !DIEnumerator(name: "STV0903", value: 0, isUnsigned: true)
!287 = !DIEnumerator(name: "STV0900", value: 1, isUnsigned: true)
!288 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_mode", file: !284, line: 23, baseType: !7, size: 32, elements: !289)
!289 = !{!290, !291}
!290 = !DIEnumerator(name: "STV090x_DUAL", value: 0, isUnsigned: true)
!291 = !DIEnumerator(name: "STV090x_SINGLE", value: 1, isUnsigned: true)
!292 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_clkmode", file: !284, line: 35, baseType: !7, size: 32, elements: !293)
!293 = !{!294, !295}
!294 = !DIEnumerator(name: "STV090x_CLK_INT", value: 0, isUnsigned: true)
!295 = !DIEnumerator(name: "STV090x_CLK_EXT", value: 2, isUnsigned: true)
!296 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_demodulator", file: !284, line: 13, baseType: !7, size: 32, elements: !297)
!297 = !{!298, !299}
!298 = !DIEnumerator(name: "STV090x_DEMODULATOR_0", value: 1, isUnsigned: true)
!299 = !DIEnumerator(name: "STV090x_DEMODULATOR_1", value: 2, isUnsigned: true)
!300 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_i2crpt", file: !284, line: 40, baseType: !7, size: 32, elements: !301)
!301 = !{!302, !303, !304, !305, !306, !307, !308, !309}
!302 = !DIEnumerator(name: "STV090x_RPTLEVEL_256", value: 0, isUnsigned: true)
!303 = !DIEnumerator(name: "STV090x_RPTLEVEL_128", value: 1, isUnsigned: true)
!304 = !DIEnumerator(name: "STV090x_RPTLEVEL_64", value: 2, isUnsigned: true)
!305 = !DIEnumerator(name: "STV090x_RPTLEVEL_32", value: 3, isUnsigned: true)
!306 = !DIEnumerator(name: "STV090x_RPTLEVEL_16", value: 4, isUnsigned: true)
!307 = !DIEnumerator(name: "STV090x_RPTLEVEL_8", value: 5, isUnsigned: true)
!308 = !DIEnumerator(name: "STV090x_RPTLEVEL_4", value: 6, isUnsigned: true)
!309 = !DIEnumerator(name: "STV090x_RPTLEVEL_2", value: 7, isUnsigned: true)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_adc_range", file: !284, line: 51, baseType: !7, size: 32, elements: !311)
!311 = !{!312, !313}
!312 = !DIEnumerator(name: "STV090x_ADC_2Vpp", value: 0, isUnsigned: true)
!313 = !DIEnumerator(name: "STV090x_ADC_1Vpp", value: 1, isUnsigned: true)
!314 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tuner_mode", file: !315, line: 23, baseType: !7, size: 32, elements: !316)
!315 = !DIFile(filename: "drivers/media/dvb-frontends/stv6110x.h", directory: "/home/lizy2001/genbc/linux")
!316 = !{!317, !318}
!317 = !DIEnumerator(name: "TUNER_SLEEP", value: 1, isUnsigned: true)
!318 = !DIEnumerator(name: "TUNER_WAKE", value: 2, isUnsigned: true)
!319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_delsys", file: !320, line: 179, baseType: !7, size: 32, elements: !321)
!320 = !DIFile(filename: "drivers/media/dvb-frontends/stv090x_priv.h", directory: "/home/lizy2001/genbc/linux")
!321 = !{!322, !323, !324, !325}
!322 = !DIEnumerator(name: "STV090x_ERROR", value: 0, isUnsigned: true)
!323 = !DIEnumerator(name: "STV090x_DVBS1", value: 1, isUnsigned: true)
!324 = !DIEnumerator(name: "STV090x_DVBS2", value: 2, isUnsigned: true)
!325 = !DIEnumerator(name: "STV090x_DSS", value: 3, isUnsigned: true)
!326 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_fec", file: !320, line: 90, baseType: !7, size: 32, elements: !327)
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337}
!328 = !DIEnumerator(name: "STV090x_PR12", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "STV090x_PR23", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "STV090x_PR34", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "STV090x_PR45", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "STV090x_PR56", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "STV090x_PR67", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "STV090x_PR78", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "STV090x_PR89", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "STV090x_PR910", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "STV090x_PRERR", value: 9, isUnsigned: true)
!338 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_modulation", file: !320, line: 103, baseType: !7, size: 32, elements: !339)
!339 = !{!340, !341, !342, !343, !344}
!340 = !DIEnumerator(name: "STV090x_QPSK", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "STV090x_8PSK", value: 1, isUnsigned: true)
!342 = !DIEnumerator(name: "STV090x_16APSK", value: 2, isUnsigned: true)
!343 = !DIEnumerator(name: "STV090x_32APSK", value: 3, isUnsigned: true)
!344 = !DIEnumerator(name: "STV090x_UNKNOWN", value: 4, isUnsigned: true)
!345 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_modcod", file: !320, line: 133, baseType: !7, size: 32, elements: !346)
!346 = !{!347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!347 = !DIEnumerator(name: "STV090x_DUMMY_PLF", value: 0, isUnsigned: true)
!348 = !DIEnumerator(name: "STV090x_QPSK_14", value: 1, isUnsigned: true)
!349 = !DIEnumerator(name: "STV090x_QPSK_13", value: 2, isUnsigned: true)
!350 = !DIEnumerator(name: "STV090x_QPSK_25", value: 3, isUnsigned: true)
!351 = !DIEnumerator(name: "STV090x_QPSK_12", value: 4, isUnsigned: true)
!352 = !DIEnumerator(name: "STV090x_QPSK_35", value: 5, isUnsigned: true)
!353 = !DIEnumerator(name: "STV090x_QPSK_23", value: 6, isUnsigned: true)
!354 = !DIEnumerator(name: "STV090x_QPSK_34", value: 7, isUnsigned: true)
!355 = !DIEnumerator(name: "STV090x_QPSK_45", value: 8, isUnsigned: true)
!356 = !DIEnumerator(name: "STV090x_QPSK_56", value: 9, isUnsigned: true)
!357 = !DIEnumerator(name: "STV090x_QPSK_89", value: 10, isUnsigned: true)
!358 = !DIEnumerator(name: "STV090x_QPSK_910", value: 11, isUnsigned: true)
!359 = !DIEnumerator(name: "STV090x_8PSK_35", value: 12, isUnsigned: true)
!360 = !DIEnumerator(name: "STV090x_8PSK_23", value: 13, isUnsigned: true)
!361 = !DIEnumerator(name: "STV090x_8PSK_34", value: 14, isUnsigned: true)
!362 = !DIEnumerator(name: "STV090x_8PSK_56", value: 15, isUnsigned: true)
!363 = !DIEnumerator(name: "STV090x_8PSK_89", value: 16, isUnsigned: true)
!364 = !DIEnumerator(name: "STV090x_8PSK_910", value: 17, isUnsigned: true)
!365 = !DIEnumerator(name: "STV090x_16APSK_23", value: 18, isUnsigned: true)
!366 = !DIEnumerator(name: "STV090x_16APSK_34", value: 19, isUnsigned: true)
!367 = !DIEnumerator(name: "STV090x_16APSK_45", value: 20, isUnsigned: true)
!368 = !DIEnumerator(name: "STV090x_16APSK_56", value: 21, isUnsigned: true)
!369 = !DIEnumerator(name: "STV090x_16APSK_89", value: 22, isUnsigned: true)
!370 = !DIEnumerator(name: "STV090x_16APSK_910", value: 23, isUnsigned: true)
!371 = !DIEnumerator(name: "STV090x_32APSK_34", value: 24, isUnsigned: true)
!372 = !DIEnumerator(name: "STV090x_32APSK_45", value: 25, isUnsigned: true)
!373 = !DIEnumerator(name: "STV090x_32APSK_56", value: 26, isUnsigned: true)
!374 = !DIEnumerator(name: "STV090x_32APSK_89", value: 27, isUnsigned: true)
!375 = !DIEnumerator(name: "STV090x_32APSK_910", value: 28, isUnsigned: true)
!376 = !DIEnumerator(name: "STV090x_MODCODE_UNKNOWN", value: 29, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_search", file: !320, line: 166, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382}
!379 = !DIEnumerator(name: "STV090x_SEARCH_DSS", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "STV090x_SEARCH_DVBS1", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "STV090x_SEARCH_DVBS2", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "STV090x_SEARCH_AUTO", value: 3, isUnsigned: true)
!383 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_frame", file: !320, line: 111, baseType: !7, size: 32, elements: !384)
!384 = !{!385, !386}
!385 = !DIEnumerator(name: "STV090x_LONG_FRAME", value: 0, isUnsigned: true)
!386 = !DIEnumerator(name: "STV090x_SHORT_FRAME", value: 1, isUnsigned: true)
!387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_pilot", file: !320, line: 116, baseType: !7, size: 32, elements: !388)
!388 = !{!389, !390}
!389 = !DIEnumerator(name: "STV090x_PILOTS_OFF", value: 0, isUnsigned: true)
!390 = !DIEnumerator(name: "STV090x_PILOTS_ON", value: 1, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_rolloff", file: !320, line: 121, baseType: !7, size: 32, elements: !392)
!392 = !{!393, !394, !395}
!393 = !DIEnumerator(name: "STV090x_RO_35", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "STV090x_RO_25", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "STV090x_RO_20", value: 2, isUnsigned: true)
!396 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_inversion", file: !320, line: 127, baseType: !7, size: 32, elements: !397)
!397 = !{!398, !399, !400}
!398 = !DIEnumerator(name: "STV090x_IQ_AUTO", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "STV090x_IQ_NORMAL", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "STV090x_IQ_SWAP", value: 2, isUnsigned: true)
!401 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_algo", file: !320, line: 173, baseType: !7, size: 32, elements: !402)
!402 = !{!403, !404, !405}
!403 = !DIEnumerator(name: "STV090x_BLIND_SEARCH", value: 0, isUnsigned: true)
!404 = !DIEnumerator(name: "STV090x_COLD_SEARCH", value: 1, isUnsigned: true)
!405 = !DIEnumerator(name: "STV090x_WARM_SEARCH", value: 2, isUnsigned: true)
!406 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !407, line: 305, baseType: !7, size: 32, elements: !408)
!407 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!408 = !{!409, !410, !411, !412}
!409 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!410 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!411 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!412 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!413 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "stv090x_signal_state", file: !320, line: 81, baseType: !7, size: 32, elements: !414)
!414 = !{!415, !416, !417, !418, !419, !420}
!415 = !DIEnumerator(name: "STV090x_NOAGC1", value: 0, isUnsigned: true)
!416 = !DIEnumerator(name: "STV090x_NOCARRIER", value: 1, isUnsigned: true)
!417 = !DIEnumerator(name: "STV090x_NODATA", value: 2, isUnsigned: true)
!418 = !DIEnumerator(name: "STV090x_DATAOK", value: 3, isUnsigned: true)
!419 = !DIEnumerator(name: "STV090x_RANGEOK", value: 4, isUnsigned: true)
!420 = !DIEnumerator(name: "STV090x_OUTOFRANGE", value: 5, isUnsigned: true)
!421 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "i2c_alert_protocol", file: !422, line: 215, baseType: !7, size: 32, elements: !423)
!422 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!423 = !{!424, !425}
!424 = !DIEnumerator(name: "I2C_PROTOCOL_SMBUS_ALERT", value: 0, isUnsigned: true)
!425 = !DIEnumerator(name: "I2C_PROTOCOL_SMBUS_HOST_NOTIFY", value: 1, isUnsigned: true)
!426 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_prop_type", file: !427, line: 19, baseType: !7, size: 32, elements: !428)
!427 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!428 = !{!429, !430, !431, !432, !433, !434}
!429 = !DIEnumerator(name: "DEV_PROP_U8", value: 0, isUnsigned: true)
!430 = !DIEnumerator(name: "DEV_PROP_U16", value: 1, isUnsigned: true)
!431 = !DIEnumerator(name: "DEV_PROP_U32", value: 2, isUnsigned: true)
!432 = !DIEnumerator(name: "DEV_PROP_U64", value: 3, isUnsigned: true)
!433 = !DIEnumerator(name: "DEV_PROP_STRING", value: 4, isUnsigned: true)
!434 = !DIEnumerator(name: "DEV_PROP_REF", value: 5, isUnsigned: true)
!435 = !{!436, !438, !7, !439, !440, !445, !447}
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !437, line: 148, baseType: !7)
!437 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!439 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!440 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !441, line: 18, baseType: !442)
!441 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!442 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !443, line: 23, baseType: !444)
!443 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!444 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!445 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !441, line: 20, baseType: !446)
!446 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !443, line: 26, baseType: !439)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !449, line: 76, flags: DIFlagFwdDecl)
!449 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!450 = !{!451, !517, !522, !524, !531, !536, !541, !546, !551, !556, !0, !558, !4448, !4586, !4596, !4601, !4606, !4622, !4625, !4630, !4632, !4634, !4636, !4647, !4649, !4739, !4741, !4750, !4753, !4758, !4763, !4858}
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "__param_verbose", scope: !2, file: !3, line: 30, type: !453, isLocal: true, isDefinition: true, align: 64)
!453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !454)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !455, line: 69, size: 320, elements: !456)
!455 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!456 = !{!457, !461, !462, !482, !487, !491, !495}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !454, file: !455, line: 70, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !460)
!460 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !454, file: !455, line: 71, baseType: !447, size: 64, offset: 64)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !454, file: !455, line: 72, baseType: !463, size: 64, offset: 128)
!463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !464, size: 64)
!464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !465)
!465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !455, line: 47, size: 256, elements: !466)
!466 = !{!467, !468, !473, !478}
!467 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !465, file: !455, line: 49, baseType: !7, size: 32)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !465, file: !455, line: 51, baseType: !469, size: 64, offset: 64)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DISubroutineType(types: !471)
!471 = !{!439, !458, !472}
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !465, file: !455, line: 53, baseType: !474, size: 64, offset: 128)
!474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!475 = !DISubroutineType(types: !476)
!476 = !{!439, !477, !472}
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !460, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !465, file: !455, line: 55, baseType: !479, size: 64, offset: 192)
!479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !480, size: 64)
!480 = !DISubroutineType(types: !481)
!481 = !{null, !438}
!482 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !454, file: !455, line: 73, baseType: !483, size: 16, offset: 192)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !441, line: 19, baseType: !485)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !443, line: 24, baseType: !486)
!486 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !454, file: !455, line: 74, baseType: !488, size: 8, offset: 208)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !441, line: 16, baseType: !489)
!489 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !443, line: 20, baseType: !490)
!490 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !454, file: !455, line: 75, baseType: !492, size: 8, offset: 216)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !441, line: 17, baseType: !493)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !443, line: 21, baseType: !494)
!494 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!495 = !DIDerivedType(tag: DW_TAG_member, scope: !454, file: !455, line: 76, baseType: !496, size: 64, offset: 256)
!496 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !454, file: !455, line: 76, size: 64, elements: !497)
!497 = !{!498, !499, !506}
!498 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !496, file: !455, line: 77, baseType: !438, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !496, file: !455, line: 78, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !501, size: 64)
!501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !502)
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !455, line: 86, size: 128, elements: !503)
!503 = !{!504, !505}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !502, file: !455, line: 87, baseType: !7, size: 32)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !502, file: !455, line: 88, baseType: !477, size: 64, offset: 64)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !496, file: !455, line: 79, baseType: !507, size: 64)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !509)
!509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !455, line: 92, size: 256, elements: !510)
!510 = !{!511, !512, !513, !515, !516}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !509, file: !455, line: 94, baseType: !7, size: 32)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !509, file: !455, line: 95, baseType: !7, size: 32, offset: 32)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !509, file: !455, line: 96, baseType: !514, size: 64, offset: 64)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !509, file: !455, line: 97, baseType: !463, size: 64, offset: 128)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !509, file: !455, line: 98, baseType: !438, size: 64, offset: 192)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_verbosetype220", scope: !2, file: !3, line: 30, type: !519, isLocal: true, isDefinition: true, align: 8)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 232, elements: !520)
!520 = !{!521}
!521 = !DISubrange(count: 29)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_stv090x_driver_init221", scope: !2, file: !3, line: 5094, type: !438, isLocal: true, isDefinition: true)
!524 = !DIGlobalVariableExpression(var: !525, expr: !DIExpression())
!525 = distinct !DIGlobalVariable(name: "__exitcall_stv090x_driver_exit", scope: !2, file: !3, line: 5094, type: !526, isLocal: true, isDefinition: true)
!526 = !DIDerivedType(tag: DW_TAG_typedef, name: "exitcall_t", file: !527, line: 117, baseType: !528)
!527 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DISubroutineType(types: !530)
!530 = !{null}
!531 = !DIGlobalVariableExpression(var: !532, expr: !DIExpression())
!532 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_verbose222", scope: !2, file: !3, line: 5096, type: !533, isLocal: true, isDefinition: true, align: 8)
!533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 328, elements: !534)
!534 = !{!535}
!535 = !DISubrange(count: 41)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_author223", scope: !2, file: !3, line: 5097, type: !538, isLocal: true, isDefinition: true, align: 8)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 224, elements: !539)
!539 = !{!540}
!540 = !DISubrange(count: 28)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_description224", scope: !2, file: !3, line: 5098, type: !543, isLocal: true, isDefinition: true, align: 8)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 456, elements: !544)
!544 = !{!545}
!545 = !DISubrange(count: 57)
!546 = !DIGlobalVariableExpression(var: !547, expr: !DIExpression())
!547 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_file225", scope: !2, file: !3, line: 5099, type: !548, isLocal: true, isDefinition: true, align: 8)
!548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 392, elements: !549)
!549 = !{!550}
!550 = !DISubrange(count: 49)
!551 = !DIGlobalVariableExpression(var: !552, expr: !DIExpression())
!552 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_license226", scope: !2, file: !3, line: 5099, type: !553, isLocal: true, isDefinition: true, align: 8)
!553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 160, elements: !554)
!554 = !{!555}
!555 = !DISubrange(count: 20)
!556 = !DIGlobalVariableExpression(var: !557, expr: !DIExpression())
!557 = distinct !DIGlobalVariable(name: "verbose", scope: !2, file: !3, line: 29, type: !7, isLocal: true, isDefinition: true)
!558 = !DIGlobalVariableExpression(var: !559, expr: !DIExpression())
!559 = distinct !DIGlobalVariable(name: "stv090x_ops", scope: !2, file: !3, line: 4952, type: !560, isLocal: true, isDefinition: true)
!560 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !561)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_ops", file: !51, line: 435, size: 6016, elements: !562)
!562 = !{!563, !580, !584, !4271, !4272, !4273, !4277, !4278, !4284, !4289, !4293, !4294, !4304, !4309, !4313, !4317, !4322, !4323, !4324, !4325, !4335, !4346, !4350, !4354, !4358, !4362, !4366, !4370, !4371, !4372, !4376, !4430}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !561, file: !51, line: 436, baseType: !564, size: 1280)
!564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_internal_info", file: !51, line: 338, size: 1280, elements: !565)
!565 = !{!566, !570, !573, !574, !575, !576, !577, !578, !579}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !564, file: !51, line: 339, baseType: !567, size: 1024)
!567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 1024, elements: !568)
!568 = !{!569}
!569 = !DISubrange(count: 128)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !564, file: !51, line: 340, baseType: !571, size: 32, offset: 1024)
!571 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !441, line: 21, baseType: !572)
!572 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !443, line: 27, baseType: !7)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !564, file: !51, line: 341, baseType: !571, size: 32, offset: 1056)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_stepsize_hz", scope: !564, file: !51, line: 342, baseType: !571, size: 32, offset: 1088)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_tolerance_hz", scope: !564, file: !51, line: 343, baseType: !571, size: 32, offset: 1120)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_min", scope: !564, file: !51, line: 344, baseType: !571, size: 32, offset: 1152)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_max", scope: !564, file: !51, line: 345, baseType: !571, size: 32, offset: 1184)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate_tolerance", scope: !564, file: !51, line: 346, baseType: !571, size: 32, offset: 1216)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !564, file: !51, line: 347, baseType: !5, size: 32, offset: 1248)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !561, file: !51, line: 438, baseType: !581, size: 64, offset: 1280)
!581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 64, elements: !582)
!582 = !{!583}
!583 = !DISubrange(count: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !561, file: !51, line: 440, baseType: !585, size: 64, offset: 1344)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = !DISubroutineType(types: !587)
!587 = !{null, !588}
!588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !589, size: 64)
!589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend", file: !51, line: 686, size: 10240, elements: !590)
!590 = !{!591, !605, !606, !4187, !4188, !4189, !4190, !4191, !4192, !4265, !4269, !4270}
!591 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !589, file: !51, line: 687, baseType: !592, size: 32)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !593, line: 19, size: 32, elements: !594)
!593 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!594 = !{!595}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !592, file: !593, line: 20, baseType: !596, size: 32)
!596 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !597, line: 113, baseType: !598)
!597 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !597, line: 111, size: 32, elements: !599)
!599 = !{!600}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !598, file: !597, line: 112, baseType: !601, size: 32)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !437, line: 168, baseType: !602)
!602 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !437, line: 166, size: 32, elements: !603)
!603 = !{!604}
!604 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !602, file: !437, line: 167, baseType: !439, size: 32)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !589, file: !51, line: 688, baseType: !561, size: 6016, offset: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "dvb", scope: !589, file: !51, line: 689, baseType: !607, size: 64, offset: 6080)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !608, size: 64)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_adapter", file: !272, line: 101, size: 960, elements: !609)
!609 = !{!610, !611, !617, !618, !619, !623, !624, !4165, !4166, !4167, !4186}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !608, file: !272, line: 102, baseType: !439, size: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !608, file: !272, line: 103, baseType: !612, size: 128, offset: 64)
!612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !437, line: 178, size: 128, elements: !613)
!613 = !{!614, !616}
!614 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !612, file: !437, line: 179, baseType: !615, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !612, file: !437, line: 179, baseType: !615, size: 64, offset: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "device_list", scope: !608, file: !272, line: 104, baseType: !612, size: 128, offset: 192)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !608, file: !272, line: 105, baseType: !458, size: 64, offset: 320)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "proposed_mac", scope: !608, file: !272, line: 106, baseType: !620, size: 48, offset: 384)
!620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 48, elements: !621)
!621 = !{!622}
!622 = !DISubrange(count: 6)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !608, file: !272, line: 107, baseType: !438, size: 64, offset: 448)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !608, file: !272, line: 109, baseType: !625, size: 64, offset: 512)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !626, size: 64)
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !237, line: 461, size: 5568, elements: !627)
!627 = !{!628, !3622, !3623, !3626, !3627, !3678, !3766, !3767, !3768, !3769, !3770, !3779, !3884, !3897, !4092, !4093, !4097, !4099, !4100, !4101, !4105, !4111, !4112, !4115, !4116, !4117, !4118, !4119, !4120, !4121, !4153, !4154, !4155, !4158, !4161, !4162, !4163, !4164}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !626, file: !237, line: 462, baseType: !629, size: 512)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !630, line: 64, size: 512, elements: !631)
!630 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!631 = !{!632, !633, !634, !636, !695, !3477, !3616, !3617, !3618, !3619, !3620, !3621}
!632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !629, file: !630, line: 65, baseType: !458, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !629, file: !630, line: 66, baseType: !612, size: 128, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !629, file: !630, line: 67, baseType: !635, size: 64, offset: 192)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !629, file: !630, line: 68, baseType: !637, size: 64, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !630, line: 192, size: 704, elements: !639)
!639 = !{!640, !641, !657, !658}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !638, file: !630, line: 193, baseType: !612, size: 128)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !638, file: !630, line: 194, baseType: !642, offset: 128)
!642 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !643, line: 83, baseType: !644)
!643 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !643, line: 71, elements: !645)
!645 = !{!646}
!646 = !DIDerivedType(tag: DW_TAG_member, scope: !644, file: !643, line: 72, baseType: !647)
!647 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !643, line: 72, elements: !648)
!648 = !{!649}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !647, file: !643, line: 73, baseType: !650)
!650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !643, line: 20, elements: !651)
!651 = !{!652}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !650, file: !643, line: 21, baseType: !653)
!653 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !654, line: 25, baseType: !655)
!654 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 25, elements: !656)
!656 = !{}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !638, file: !630, line: 195, baseType: !629, size: 512, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !638, file: !630, line: 196, baseType: !659, size: 64, offset: 640)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !630, line: 156, size: 192, elements: !662)
!662 = !{!663, !668, !673}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !661, file: !630, line: 157, baseType: !664, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !666, size: 64)
!666 = !DISubroutineType(types: !667)
!667 = !{!439, !637, !635}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !661, file: !630, line: 158, baseType: !669, size: 64, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !670)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{!458, !637, !635}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !661, file: !630, line: 159, baseType: !674, size: 64, offset: 128)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!439, !637, !635, !678}
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !630, line: 148, size: 20736, elements: !680)
!680 = !{!681, !685, !689, !690, !694}
!681 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !679, file: !630, line: 149, baseType: !682, size: 192)
!682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 192, elements: !683)
!683 = !{!684}
!684 = !DISubrange(count: 3)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !679, file: !630, line: 150, baseType: !686, size: 4096, offset: 192)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !477, size: 4096, elements: !687)
!687 = !{!688}
!688 = !DISubrange(count: 64)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !679, file: !630, line: 151, baseType: !439, size: 32, offset: 4288)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !679, file: !630, line: 152, baseType: !691, size: 16384, offset: 4320)
!691 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 16384, elements: !692)
!692 = !{!693}
!693 = !DISubrange(count: 2048)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !679, file: !630, line: 153, baseType: !439, size: 32, offset: 20704)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !629, file: !630, line: 69, baseType: !696, size: 64, offset: 320)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !630, line: 138, size: 448, elements: !698)
!698 = !{!699, !703, !732, !734, !3439, !3467, !3471}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !697, file: !630, line: 139, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !635}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !697, file: !630, line: 140, baseType: !704, size: 64, offset: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !706)
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !707, line: 230, size: 128, elements: !708)
!707 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!708 = !{!709, !724}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !706, file: !707, line: 231, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !711, size: 64)
!711 = !DISubroutineType(types: !712)
!712 = !{!713, !635, !718, !477}
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !437, line: 60, baseType: !714)
!714 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !715, line: 73, baseType: !716)
!715 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !715, line: 15, baseType: !717)
!717 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !707, line: 30, size: 128, elements: !720)
!720 = !{!721, !722}
!721 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !719, file: !707, line: 31, baseType: !458, size: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !719, file: !707, line: 32, baseType: !723, size: 16, offset: 64)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !437, line: 19, baseType: !486)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !706, file: !707, line: 232, baseType: !725, size: 64, offset: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{!713, !635, !718, !458, !728}
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !437, line: 55, baseType: !729)
!729 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !715, line: 72, baseType: !730)
!730 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !715, line: 16, baseType: !731)
!731 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !697, file: !630, line: 141, baseType: !733, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !697, file: !630, line: 142, baseType: !735, size: 64, offset: 192)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !738)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !707, line: 84, size: 320, elements: !739)
!739 = !{!740, !741, !745, !3436, !3437}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !738, file: !707, line: 85, baseType: !458, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !738, file: !707, line: 86, baseType: !742, size: 64, offset: 64)
!742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !743, size: 64)
!743 = !DISubroutineType(types: !744)
!744 = !{!723, !635, !718, !439}
!745 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !738, file: !707, line: 88, baseType: !746, size: 64, offset: 128)
!746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !747, size: 64)
!747 = !DISubroutineType(types: !748)
!748 = !{!723, !635, !749, !439}
!749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !707, line: 168, size: 448, elements: !751)
!751 = !{!752, !753, !754, !755, !3431, !3432}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !750, file: !707, line: 169, baseType: !719, size: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !750, file: !707, line: 170, baseType: !728, size: 64, offset: 128)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !750, file: !707, line: 171, baseType: !438, size: 64, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !750, file: !707, line: 172, baseType: !756, size: 64, offset: 256)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!713, !759, !635, !749, !477, !930, !728}
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !208, line: 916, size: 1856, align: 32, elements: !761)
!761 = !{!762, !780, !3396, !3397, !3398, !3399, !3400, !3401, !3402, !3403, !3404, !3405, !3414, !3415, !3424, !3425, !3426, !3427, !3428, !3429, !3430}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !760, file: !208, line: 920, baseType: !763, size: 128)
!763 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !760, file: !208, line: 917, size: 128, elements: !764)
!764 = !{!765, !771}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !763, file: !208, line: 918, baseType: !766, size: 64)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !767, line: 58, size: 64, elements: !768)
!767 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!768 = !{!769}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !766, file: !767, line: 59, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !763, file: !208, line: 919, baseType: !772, size: 128, align: 64)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !437, line: 216, size: 128, align: 64, elements: !773)
!773 = !{!774, !776}
!774 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !772, file: !437, line: 217, baseType: !775, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !772, file: !437, line: 218, baseType: !777, size: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DISubroutineType(types: !779)
!779 = !{null, !775}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !760, file: !208, line: 921, baseType: !781, size: 128, offset: 128)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !782, line: 8, size: 128, elements: !783)
!782 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!783 = !{!784, !788}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !781, file: !782, line: 9, baseType: !785, size: 64)
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !786, size: 64)
!786 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !787, line: 18, flags: DIFlagFwdDecl)
!787 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!788 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !781, file: !782, line: 10, baseType: !789, size: 64, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !790, size: 64)
!790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !787, line: 89, size: 1536, elements: !791)
!791 = !{!792, !793, !803, !811, !812, !830, !3365, !3367, !3379, !3380, !3381, !3382, !3383, !3388, !3389, !3390}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !790, file: !787, line: 91, baseType: !7, size: 32)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !790, file: !787, line: 92, baseType: !794, size: 32, offset: 32)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !795, line: 277, baseType: !796)
!795 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !795, line: 277, size: 32, elements: !797)
!797 = !{!798}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !796, file: !795, line: 277, baseType: !799, size: 32)
!799 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !795, line: 70, baseType: !800)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !795, line: 65, size: 32, elements: !801)
!801 = !{!802}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !800, file: !795, line: 66, baseType: !7, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !790, file: !787, line: 93, baseType: !804, size: 128, offset: 64)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !805, line: 38, size: 128, elements: !806)
!805 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!806 = !{!807, !809}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !804, file: !805, line: 39, baseType: !808, size: 64)
!808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !804, size: 64)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !804, file: !805, line: 39, baseType: !810, size: 64, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !790, file: !787, line: 94, baseType: !789, size: 64, offset: 192)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !790, file: !787, line: 95, baseType: !813, size: 128, offset: 256)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !787, line: 47, size: 128, elements: !814)
!814 = !{!815, !827}
!815 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !787, line: 48, baseType: !816, size: 64)
!816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !813, file: !787, line: 48, size: 64, elements: !817)
!817 = !{!818, !823}
!818 = !DIDerivedType(tag: DW_TAG_member, scope: !816, file: !787, line: 49, baseType: !819, size: 64)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !816, file: !787, line: 49, size: 64, elements: !820)
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !819, file: !787, line: 50, baseType: !571, size: 32)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !819, file: !787, line: 50, baseType: !571, size: 32, offset: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !816, file: !787, line: 52, baseType: !824, size: 64)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !441, line: 23, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !443, line: 31, baseType: !826)
!826 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !813, file: !787, line: 54, baseType: !828, size: 64, offset: 64)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !790, file: !787, line: 96, baseType: !831, size: 64, offset: 384)
!831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !832, size: 64)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !208, line: 610, size: 4224, elements: !833)
!833 = !{!834, !835, !836, !844, !851, !852, !997, !3059, !3060, !3061, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3333, !3341, !3342, !3343, !3361, !3362, !3363, !3364}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !832, file: !208, line: 611, baseType: !723, size: 16)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !832, file: !208, line: 612, baseType: !486, size: 16, offset: 16)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !832, file: !208, line: 613, baseType: !837, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !838, line: 23, baseType: !839)
!838 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !838, line: 21, size: 32, elements: !840)
!840 = !{!841}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !839, file: !838, line: 22, baseType: !842, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !437, line: 32, baseType: !843)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !715, line: 49, baseType: !7)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !832, file: !208, line: 614, baseType: !845, size: 32, offset: 64)
!845 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !838, line: 28, baseType: !846)
!846 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !838, line: 26, size: 32, elements: !847)
!847 = !{!848}
!848 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !846, file: !838, line: 27, baseType: !849, size: 32)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !437, line: 33, baseType: !850)
!850 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !715, line: 50, baseType: !7)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !832, file: !208, line: 615, baseType: !7, size: 32, offset: 96)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !832, file: !208, line: 622, baseType: !853, size: 64, offset: 128)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !208, line: 1864, size: 1536, align: 512, elements: !856)
!856 = !{!857, !861, !871, !875, !881, !885, !891, !895, !899, !903, !907, !908, !914, !918, !944, !973, !977, !983, !988, !992, !993}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !855, file: !208, line: 1865, baseType: !858, size: 64)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!789, !831, !789, !7}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !855, file: !208, line: 1866, baseType: !862, size: 64, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!458, !789, !831, !865}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !867, line: 10, size: 128, elements: !868)
!867 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!868 = !{!869, !870}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !866, file: !867, line: 11, baseType: !479, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !866, file: !867, line: 12, baseType: !438, size: 64, offset: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !855, file: !208, line: 1867, baseType: !872, size: 64, offset: 128)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!439, !831, !439}
!875 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !855, file: !208, line: 1868, baseType: !876, size: 64, offset: 192)
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DISubroutineType(types: !878)
!878 = !{!879, !831, !439}
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !208, line: 581, flags: DIFlagFwdDecl)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !855, file: !208, line: 1870, baseType: !882, size: 64, offset: 256)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DISubroutineType(types: !884)
!884 = !{!439, !789, !477, !439}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !855, file: !208, line: 1872, baseType: !886, size: 64, offset: 320)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DISubroutineType(types: !888)
!888 = !{!439, !831, !789, !723, !889}
!889 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !437, line: 30, baseType: !890)
!890 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !855, file: !208, line: 1873, baseType: !892, size: 64, offset: 384)
!892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !893, size: 64)
!893 = !DISubroutineType(types: !894)
!894 = !{!439, !789, !831, !789}
!895 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !855, file: !208, line: 1874, baseType: !896, size: 64, offset: 448)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DISubroutineType(types: !898)
!898 = !{!439, !831, !789}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !855, file: !208, line: 1875, baseType: !900, size: 64, offset: 512)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DISubroutineType(types: !902)
!902 = !{!439, !831, !789, !458}
!903 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !855, file: !208, line: 1876, baseType: !904, size: 64, offset: 576)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DISubroutineType(types: !906)
!906 = !{!439, !831, !789, !723}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !855, file: !208, line: 1877, baseType: !896, size: 64, offset: 640)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !855, file: !208, line: 1878, baseType: !909, size: 64, offset: 704)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DISubroutineType(types: !911)
!911 = !{!439, !831, !789, !723, !912}
!912 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !437, line: 16, baseType: !913)
!913 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !437, line: 13, baseType: !571)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !855, file: !208, line: 1879, baseType: !915, size: 64, offset: 768)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!439, !831, !789, !831, !789, !7}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !855, file: !208, line: 1881, baseType: !919, size: 64, offset: 832)
!919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !920, size: 64)
!920 = !DISubroutineType(types: !921)
!921 = !{!439, !789, !922}
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !208, line: 219, size: 640, elements: !924)
!924 = !{!925, !926, !927, !928, !929, !933, !941, !942, !943}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !923, file: !208, line: 220, baseType: !7, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !923, file: !208, line: 221, baseType: !723, size: 16, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !923, file: !208, line: 222, baseType: !837, size: 32, offset: 64)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !923, file: !208, line: 223, baseType: !845, size: 32, offset: 96)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !923, file: !208, line: 224, baseType: !930, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !437, line: 46, baseType: !931)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !715, line: 88, baseType: !932)
!932 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !923, file: !208, line: 225, baseType: !934, size: 128, offset: 192)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !935, line: 13, size: 128, elements: !936)
!935 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!936 = !{!937, !940}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !934, file: !935, line: 14, baseType: !938, size: 64)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !935, line: 8, baseType: !939)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !443, line: 30, baseType: !932)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !934, file: !935, line: 15, baseType: !717, size: 64, offset: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !923, file: !208, line: 226, baseType: !934, size: 128, offset: 320)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !923, file: !208, line: 227, baseType: !934, size: 128, offset: 448)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !923, file: !208, line: 234, baseType: !759, size: 64, offset: 576)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !855, file: !208, line: 1882, baseType: !945, size: 64, offset: 896)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!439, !948, !950, !571, !7}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !952, line: 22, size: 1152, elements: !953)
!952 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!953 = !{!954, !955, !956, !957, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !951, file: !952, line: 23, baseType: !571, size: 32)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !951, file: !952, line: 24, baseType: !723, size: 16, offset: 32)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !951, file: !952, line: 25, baseType: !7, size: 32, offset: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !951, file: !952, line: 26, baseType: !958, size: 32, offset: 96)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !437, line: 104, baseType: !571)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !951, file: !952, line: 27, baseType: !824, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !951, file: !952, line: 28, baseType: !824, size: 64, offset: 192)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !951, file: !952, line: 37, baseType: !824, size: 64, offset: 256)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !951, file: !952, line: 38, baseType: !912, size: 32, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !951, file: !952, line: 39, baseType: !912, size: 32, offset: 352)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !951, file: !952, line: 40, baseType: !837, size: 32, offset: 384)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !951, file: !952, line: 41, baseType: !845, size: 32, offset: 416)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !951, file: !952, line: 42, baseType: !930, size: 64, offset: 448)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !951, file: !952, line: 43, baseType: !934, size: 128, offset: 512)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !951, file: !952, line: 44, baseType: !934, size: 128, offset: 640)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !951, file: !952, line: 45, baseType: !934, size: 128, offset: 768)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !951, file: !952, line: 46, baseType: !934, size: 128, offset: 896)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !951, file: !952, line: 47, baseType: !824, size: 64, offset: 1024)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !951, file: !952, line: 48, baseType: !824, size: 64, offset: 1088)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !855, file: !208, line: 1883, baseType: !974, size: 64, offset: 960)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{!713, !789, !477, !728}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !855, file: !208, line: 1884, baseType: !978, size: 64, offset: 1024)
!978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !979, size: 64)
!979 = !DISubroutineType(types: !980)
!980 = !{!439, !831, !981, !824, !824}
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !208, line: 50, flags: DIFlagFwdDecl)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !855, file: !208, line: 1886, baseType: !984, size: 64, offset: 1088)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!439, !831, !987, !439}
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !855, file: !208, line: 1887, baseType: !989, size: 64, offset: 1152)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DISubroutineType(types: !991)
!991 = !{!439, !831, !789, !759, !7, !723}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !855, file: !208, line: 1890, baseType: !904, size: 64, offset: 1216)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !855, file: !208, line: 1891, baseType: !994, size: 64, offset: 1280)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = !DISubroutineType(types: !996)
!996 = !{!439, !831, !879, !439}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !832, file: !208, line: 623, baseType: !998, size: 64, offset: 192)
!998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !999, size: 64)
!999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !208, line: 1416, size: 9472, elements: !1000)
!1000 = !{!1001, !1002, !1003, !1004, !1005, !1006, !1053, !2667, !2749, !2832, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2848, !2852, !2853, !2856, !2857, !2860, !2861, !2862, !2903, !2929, !2930, !2931, !2932, !2933, !2934, !2937, !2939, !2946, !2947, !2949, !2950, !2951, !3010, !3011, !3026, !3027, !3028, !3029, !3030, !3033, !3034, !3035, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058}
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !999, file: !208, line: 1417, baseType: !612, size: 128)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !999, file: !208, line: 1418, baseType: !912, size: 32, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !999, file: !208, line: 1419, baseType: !494, size: 8, offset: 160)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !999, file: !208, line: 1420, baseType: !731, size: 64, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !999, file: !208, line: 1421, baseType: !930, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !999, file: !208, line: 1422, baseType: !1007, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1008, size: 64)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !208, line: 2228, size: 576, elements: !1009)
!1009 = !{!1010, !1011, !1012, !1019, !1023, !1027, !1031, !1032, !1033, !1043, !1046, !1047, !1048, !1050, !1051, !1052}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1008, file: !208, line: 2229, baseType: !458, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1008, file: !208, line: 2230, baseType: !439, size: 32, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1008, file: !208, line: 2238, baseType: !1013, size: 64, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = !DISubroutineType(types: !1015)
!1015 = !{!439, !1016}
!1016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1017, size: 64)
!1017 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1018, line: 28, flags: DIFlagFwdDecl)
!1018 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1008, file: !208, line: 2239, baseType: !1020, size: 64, offset: 192)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1022)
!1022 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !208, line: 70, flags: DIFlagFwdDecl)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1008, file: !208, line: 2240, baseType: !1024, size: 64, offset: 256)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DISubroutineType(types: !1026)
!1026 = !{!789, !1007, !439, !458, !438}
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1008, file: !208, line: 2242, baseType: !1028, size: 64, offset: 320)
!1028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1029, size: 64)
!1029 = !DISubroutineType(types: !1030)
!1030 = !{null, !998}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1008, file: !208, line: 2243, baseType: !447, size: 64, offset: 384)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1008, file: !208, line: 2244, baseType: !1007, size: 64, offset: 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1008, file: !208, line: 2245, baseType: !1034, size: 64, offset: 512)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !437, line: 182, size: 64, elements: !1035)
!1035 = !{!1036}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1034, file: !437, line: 183, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1038, size: 64)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !437, line: 186, size: 128, elements: !1039)
!1039 = !{!1040, !1041}
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1038, file: !437, line: 187, baseType: !1037, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1038, file: !437, line: 187, baseType: !1042, size: 64, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1008, file: !208, line: 2247, baseType: !1044, offset: 576)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1045, line: 187, elements: !656)
!1045 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1008, file: !208, line: 2248, baseType: !1044, offset: 576)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1008, file: !208, line: 2249, baseType: !1044, offset: 576)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1008, file: !208, line: 2250, baseType: !1049, offset: 576)
!1049 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1044, elements: !683)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1008, file: !208, line: 2252, baseType: !1044, offset: 576)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1008, file: !208, line: 2253, baseType: !1044, offset: 576)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1008, file: !208, line: 2254, baseType: !1044, offset: 576)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !999, file: !208, line: 1423, baseType: !1054, size: 64, offset: 384)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !208, line: 1935, size: 1472, elements: !1057)
!1057 = !{!1058, !1062, !1066, !1067, !1071, !1077, !1081, !1082, !1083, !1087, !1091, !1092, !1093, !1094, !1100, !1105, !1106, !1113, !1114, !1115, !1116, !2651, !2666}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1056, file: !208, line: 1936, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1060, size: 64)
!1060 = !DISubroutineType(types: !1061)
!1061 = !{!831, !998}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1056, file: !208, line: 1937, baseType: !1063, size: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1064 = !DISubroutineType(types: !1065)
!1065 = !{null, !831}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1056, file: !208, line: 1938, baseType: !1063, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1056, file: !208, line: 1940, baseType: !1068, size: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1069, size: 64)
!1069 = !DISubroutineType(types: !1070)
!1070 = !{null, !831, !439}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1056, file: !208, line: 1941, baseType: !1072, size: 64, offset: 256)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!439, !831, !1075}
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !208, line: 289, flags: DIFlagFwdDecl)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1056, file: !208, line: 1942, baseType: !1078, size: 64, offset: 320)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{!439, !831}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1056, file: !208, line: 1943, baseType: !1063, size: 64, offset: 384)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1056, file: !208, line: 1944, baseType: !1028, size: 64, offset: 448)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1056, file: !208, line: 1945, baseType: !1084, size: 64, offset: 512)
!1084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1085, size: 64)
!1085 = !DISubroutineType(types: !1086)
!1086 = !{!439, !998, !439}
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1056, file: !208, line: 1946, baseType: !1088, size: 64, offset: 576)
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{!439, !998}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1056, file: !208, line: 1947, baseType: !1088, size: 64, offset: 640)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1056, file: !208, line: 1948, baseType: !1088, size: 64, offset: 704)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1056, file: !208, line: 1949, baseType: !1088, size: 64, offset: 768)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1056, file: !208, line: 1950, baseType: !1095, size: 64, offset: 832)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = !DISubroutineType(types: !1097)
!1097 = !{!439, !789, !1098}
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !208, line: 57, flags: DIFlagFwdDecl)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1056, file: !208, line: 1951, baseType: !1101, size: 64, offset: 896)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{!439, !998, !1104, !477}
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1056, file: !208, line: 1952, baseType: !1028, size: 64, offset: 960)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1056, file: !208, line: 1954, baseType: !1107, size: 64, offset: 1024)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!439, !1110, !789}
!1110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1111, size: 64)
!1111 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1112, line: 539, flags: DIFlagFwdDecl)
!1112 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1056, file: !208, line: 1955, baseType: !1107, size: 64, offset: 1088)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1056, file: !208, line: 1956, baseType: !1107, size: 64, offset: 1152)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1056, file: !208, line: 1957, baseType: !1107, size: 64, offset: 1216)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1056, file: !208, line: 1963, baseType: !1117, size: 64, offset: 1280)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = !DISubroutineType(types: !1119)
!1119 = !{!439, !998, !1120, !436}
!1120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1121, size: 64)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1122, line: 68, size: 512, align: 128, elements: !1123)
!1122 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1123 = !{!1124, !1125, !2643, !2650}
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1121, file: !1122, line: 69, baseType: !731, size: 64)
!1125 = !DIDerivedType(tag: DW_TAG_member, scope: !1121, file: !1122, line: 77, baseType: !1126, size: 320, offset: 64)
!1126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1121, file: !1122, line: 77, size: 320, elements: !1127)
!1127 = !{!1128, !1309, !1314, !1342, !1350, !1356, !2635, !2642}
!1128 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 78, baseType: !1129, size: 320)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 78, size: 320, elements: !1130)
!1130 = !{!1131, !1132, !1307, !1308}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1129, file: !1122, line: 84, baseType: !612, size: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1129, file: !1122, line: 86, baseType: !1133, size: 64, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !208, line: 451, size: 1216, align: 64, elements: !1135)
!1135 = !{!1136, !1137, !1144, !1145, !1146, !1161, !1177, !1178, !1179, !1180, !1300, !1301, !1304, !1305, !1306}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1134, file: !208, line: 452, baseType: !831, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1134, file: !208, line: 453, baseType: !1138, size: 128, offset: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1139, line: 292, size: 128, elements: !1140)
!1139 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1140 = !{!1141, !1142, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1138, file: !1139, line: 293, baseType: !642)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1138, file: !1139, line: 295, baseType: !436, size: 32)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1138, file: !1139, line: 296, baseType: !438, size: 64, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1134, file: !208, line: 454, baseType: !436, size: 32, offset: 192)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1134, file: !208, line: 455, baseType: !601, size: 32, offset: 224)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1134, file: !208, line: 460, baseType: !1147, size: 128, offset: 256)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1148, line: 125, size: 128, elements: !1149)
!1148 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1149 = !{!1150, !1160}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1147, file: !1148, line: 126, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1148, line: 31, size: 64, elements: !1152)
!1152 = !{!1153}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1151, file: !1148, line: 32, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1148, line: 24, size: 192, align: 64, elements: !1156)
!1156 = !{!1157, !1158, !1159}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1155, file: !1148, line: 25, baseType: !731, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1155, file: !1148, line: 26, baseType: !1154, size: 64, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1155, file: !1148, line: 27, baseType: !1154, size: 64, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1147, file: !1148, line: 127, baseType: !1154, size: 64, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1134, file: !208, line: 461, baseType: !1162, size: 256, offset: 384)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1163, line: 35, size: 256, elements: !1164)
!1163 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1173, !1174, !1176}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1162, file: !1163, line: 36, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1167, line: 13, baseType: !1168)
!1167 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !437, line: 175, baseType: !1169)
!1169 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !437, line: 173, size: 64, elements: !1170)
!1170 = !{!1171}
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1169, file: !437, line: 174, baseType: !1172, size: 64)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !441, line: 22, baseType: !939)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1162, file: !1163, line: 42, baseType: !1166, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1162, file: !1163, line: 46, baseType: !1175, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !643, line: 29, baseType: !650)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1162, file: !1163, line: 47, baseType: !612, size: 128, offset: 128)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1134, file: !208, line: 462, baseType: !731, size: 64, offset: 640)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1134, file: !208, line: 463, baseType: !731, size: 64, offset: 704)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1134, file: !208, line: 464, baseType: !731, size: 64, offset: 768)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1134, file: !208, line: 465, baseType: !1181, size: 64, offset: 832)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1183)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !208, line: 367, size: 1408, elements: !1184)
!1184 = !{!1185, !1189, !1193, !1197, !1201, !1205, !1211, !1217, !1221, !1226, !1230, !1234, !1238, !1264, !1268, !1274, !1275, !1276, !1280, !1285, !1289, !1296}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1183, file: !208, line: 368, baseType: !1186, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DISubroutineType(types: !1188)
!1188 = !{!439, !1120, !1075}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1183, file: !208, line: 369, baseType: !1190, size: 64, offset: 64)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = !DISubroutineType(types: !1192)
!1192 = !{!439, !759, !1120}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1183, file: !208, line: 372, baseType: !1194, size: 64, offset: 128)
!1194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1195, size: 64)
!1195 = !DISubroutineType(types: !1196)
!1196 = !{!439, !1133, !1075}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1183, file: !208, line: 375, baseType: !1198, size: 64, offset: 192)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = !DISubroutineType(types: !1200)
!1200 = !{!439, !1120}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1183, file: !208, line: 381, baseType: !1202, size: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DISubroutineType(types: !1204)
!1204 = !{!439, !759, !1133, !615, !7}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1183, file: !208, line: 383, baseType: !1206, size: 64, offset: 320)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DISubroutineType(types: !1208)
!1208 = !{null, !1209}
!1209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1210, size: 64)
!1210 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !208, line: 290, flags: DIFlagFwdDecl)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1183, file: !208, line: 385, baseType: !1212, size: 64, offset: 384)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1213, size: 64)
!1213 = !DISubroutineType(types: !1214)
!1214 = !{!439, !759, !1133, !930, !7, !7, !1215, !1216}
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1183, file: !208, line: 388, baseType: !1218, size: 64, offset: 448)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = !DISubroutineType(types: !1220)
!1220 = !{!439, !759, !1133, !930, !7, !7, !1120, !438}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1183, file: !208, line: 393, baseType: !1222, size: 64, offset: 512)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!1225, !1133, !1225}
!1225 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !437, line: 125, baseType: !824)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1183, file: !208, line: 394, baseType: !1227, size: 64, offset: 576)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{null, !1120, !7, !7}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1183, file: !208, line: 395, baseType: !1231, size: 64, offset: 640)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DISubroutineType(types: !1233)
!1233 = !{!439, !1120, !436}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1183, file: !208, line: 396, baseType: !1235, size: 64, offset: 704)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !1120}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1183, file: !208, line: 397, baseType: !1239, size: 64, offset: 768)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{!713, !1242, !1262}
!1242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1243, size: 64)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !208, line: 320, size: 384, elements: !1244)
!1244 = !{!1245, !1246, !1247, !1251, !1252, !1253, !1254, !1255}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1243, file: !208, line: 321, baseType: !759, size: 64)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1243, file: !208, line: 326, baseType: !930, size: 64, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1243, file: !208, line: 327, baseType: !1248, size: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{null, !1242, !717, !717}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1243, file: !208, line: 328, baseType: !438, size: 64, offset: 192)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1243, file: !208, line: 329, baseType: !439, size: 32, offset: 256)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1243, file: !208, line: 330, baseType: !484, size: 16, offset: 288)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1243, file: !208, line: 331, baseType: !484, size: 16, offset: 304)
!1255 = !DIDerivedType(tag: DW_TAG_member, scope: !1243, file: !208, line: 332, baseType: !1256, size: 64, offset: 320)
!1256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1243, file: !208, line: 332, size: 64, elements: !1257)
!1257 = !{!1258, !1259}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1256, file: !208, line: 333, baseType: !7, size: 32)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1256, file: !208, line: 334, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1261, size: 64)
!1261 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !208, line: 334, flags: DIFlagFwdDecl)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !208, line: 64, flags: DIFlagFwdDecl)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1183, file: !208, line: 402, baseType: !1265, size: 64, offset: 832)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!439, !1133, !1120, !1120, !183}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1183, file: !208, line: 404, baseType: !1269, size: 64, offset: 896)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!889, !1120, !1272}
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1273, line: 305, baseType: !7)
!1273 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1183, file: !208, line: 405, baseType: !1235, size: 64, offset: 960)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1183, file: !208, line: 406, baseType: !1198, size: 64, offset: 1024)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1183, file: !208, line: 407, baseType: !1277, size: 64, offset: 1088)
!1277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1278, size: 64)
!1278 = !DISubroutineType(types: !1279)
!1279 = !{!439, !1120, !731, !731}
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1183, file: !208, line: 409, baseType: !1281, size: 64, offset: 1152)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DISubroutineType(types: !1283)
!1283 = !{null, !1120, !1284, !1284}
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1183, file: !208, line: 410, baseType: !1286, size: 64, offset: 1216)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{!439, !1133, !1120}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1183, file: !208, line: 413, baseType: !1290, size: 64, offset: 1280)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!439, !1293, !759, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !208, line: 61, flags: DIFlagFwdDecl)
!1295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1225, size: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1183, file: !208, line: 415, baseType: !1297, size: 64, offset: 1344)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = !DISubroutineType(types: !1299)
!1299 = !{null, !759}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1134, file: !208, line: 466, baseType: !731, size: 64, offset: 896)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1134, file: !208, line: 467, baseType: !1302, size: 32, offset: 960)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1303, line: 8, baseType: !571)
!1303 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1134, file: !208, line: 468, baseType: !642, offset: 992)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1134, file: !208, line: 469, baseType: !612, size: 128, offset: 1024)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1134, file: !208, line: 470, baseType: !438, size: 64, offset: 1152)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1129, file: !1122, line: 87, baseType: !731, size: 64, offset: 192)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1129, file: !1122, line: 94, baseType: !731, size: 64, offset: 256)
!1309 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 96, baseType: !1310, size: 64)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 96, size: 64, elements: !1311)
!1311 = !{!1312}
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1310, file: !1122, line: 101, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !437, line: 143, baseType: !824)
!1314 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 103, baseType: !1315, size: 320)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 103, size: 320, elements: !1316)
!1316 = !{!1317, !1327, !1330, !1331}
!1317 = !DIDerivedType(tag: DW_TAG_member, scope: !1315, file: !1122, line: 104, baseType: !1318, size: 128)
!1318 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1315, file: !1122, line: 104, size: 128, elements: !1319)
!1319 = !{!1320, !1321}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1318, file: !1122, line: 105, baseType: !612, size: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, scope: !1318, file: !1122, line: 106, baseType: !1322, size: 128)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1318, file: !1122, line: 106, size: 128, elements: !1323)
!1323 = !{!1324, !1325, !1326}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1322, file: !1122, line: 107, baseType: !1120, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1322, file: !1122, line: 109, baseType: !439, size: 32, offset: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1322, file: !1122, line: 110, baseType: !439, size: 32, offset: 96)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1315, file: !1122, line: 117, baseType: !1328, size: 64, offset: 128)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1122, line: 117, flags: DIFlagFwdDecl)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1315, file: !1122, line: 119, baseType: !438, size: 64, offset: 192)
!1331 = !DIDerivedType(tag: DW_TAG_member, scope: !1315, file: !1122, line: 120, baseType: !1332, size: 64, offset: 256)
!1332 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1315, file: !1122, line: 120, size: 64, elements: !1333)
!1333 = !{!1334, !1335, !1336}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1332, file: !1122, line: 121, baseType: !438, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1332, file: !1122, line: 122, baseType: !731, size: 64)
!1336 = !DIDerivedType(tag: DW_TAG_member, scope: !1332, file: !1122, line: 123, baseType: !1337, size: 32)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1332, file: !1122, line: 123, size: 32, elements: !1338)
!1338 = !{!1339, !1340, !1341}
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1337, file: !1122, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1337, file: !1122, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1337, file: !1122, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1342 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 130, baseType: !1343, size: 192)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 130, size: 192, elements: !1344)
!1344 = !{!1345, !1346, !1347, !1348, !1349}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1343, file: !1122, line: 131, baseType: !731, size: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1343, file: !1122, line: 134, baseType: !494, size: 8, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1343, file: !1122, line: 135, baseType: !494, size: 8, offset: 72)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1343, file: !1122, line: 136, baseType: !601, size: 32, offset: 96)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1343, file: !1122, line: 137, baseType: !7, size: 32, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 139, baseType: !1351, size: 256)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 139, size: 256, elements: !1352)
!1352 = !{!1353, !1354, !1355}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1351, file: !1122, line: 140, baseType: !731, size: 64)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1351, file: !1122, line: 141, baseType: !601, size: 32, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1351, file: !1122, line: 143, baseType: !612, size: 128, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 145, baseType: !1357, size: 256)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 145, size: 256, elements: !1358)
!1358 = !{!1359, !1360, !1362, !1363, !2634}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1357, file: !1122, line: 146, baseType: !731, size: 64)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1357, file: !1122, line: 147, baseType: !1361, size: 64, offset: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1112, line: 509, baseType: !1120)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1357, file: !1122, line: 148, baseType: !731, size: 64, offset: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, scope: !1357, file: !1122, line: 149, baseType: !1364, size: 64, offset: 192)
!1364 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1357, file: !1122, line: 149, size: 64, elements: !1365)
!1365 = !{!1366, !2633}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1364, file: !1122, line: 150, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1122, line: 388, size: 7296, elements: !1369)
!1369 = !{!1370, !2629}
!1370 = !DIDerivedType(tag: DW_TAG_member, scope: !1368, file: !1122, line: 389, baseType: !1371, size: 7296)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1368, file: !1122, line: 389, size: 7296, elements: !1372)
!1372 = !{!1373, !1411, !1412, !1413, !1417, !1418, !1419, !1420, !1421, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1462, !1470, !1473, !1516, !1517, !2613, !2614, !2617, !2618, !2619, !2622, !2623, !2624, !2627, !2628}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1371, file: !1122, line: 390, baseType: !1374, size: 64)
!1374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1122, line: 305, size: 1472, elements: !1376)
!1376 = !{!1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1391, !1392, !1397, !1398, !1401, !1405, !1406, !1407, !1408, !1409}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1375, file: !1122, line: 308, baseType: !731, size: 64)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1375, file: !1122, line: 309, baseType: !731, size: 64, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1375, file: !1122, line: 313, baseType: !1374, size: 64, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1375, file: !1122, line: 313, baseType: !1374, size: 64, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1375, file: !1122, line: 315, baseType: !1155, size: 192, align: 64, offset: 256)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1375, file: !1122, line: 323, baseType: !731, size: 64, offset: 448)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1375, file: !1122, line: 327, baseType: !1367, size: 64, offset: 512)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1375, file: !1122, line: 333, baseType: !1385, size: 64, offset: 576)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1112, line: 284, baseType: !1386)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1112, line: 284, size: 64, elements: !1387)
!1387 = !{!1388}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1386, file: !1112, line: 284, baseType: !1389, size: 64)
!1389 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1390, line: 19, baseType: !731)
!1390 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1375, file: !1122, line: 334, baseType: !731, size: 64, offset: 640)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1375, file: !1122, line: 343, baseType: !1393, size: 256, offset: 704)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1375, file: !1122, line: 340, size: 256, elements: !1394)
!1394 = !{!1395, !1396}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1393, file: !1122, line: 341, baseType: !1155, size: 192, align: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1393, file: !1122, line: 342, baseType: !731, size: 64, offset: 192)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1375, file: !1122, line: 351, baseType: !612, size: 128, offset: 960)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1375, file: !1122, line: 353, baseType: !1399, size: 64, offset: 1088)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1122, line: 353, flags: DIFlagFwdDecl)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1375, file: !1122, line: 356, baseType: !1402, size: 64, offset: 1152)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1404)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1122, line: 356, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1375, file: !1122, line: 359, baseType: !731, size: 64, offset: 1216)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1375, file: !1122, line: 361, baseType: !759, size: 64, offset: 1280)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1375, file: !1122, line: 362, baseType: !438, size: 64, offset: 1344)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1375, file: !1122, line: 365, baseType: !1166, size: 64, offset: 1408)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1375, file: !1122, line: 373, baseType: !1410, offset: 1472)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1122, line: 296, elements: !656)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1371, file: !1122, line: 391, baseType: !1151, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1371, file: !1122, line: 392, baseType: !824, size: 64, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1371, file: !1122, line: 394, baseType: !1414, size: 64, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!731, !759, !731, !731, !731, !731}
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1371, file: !1122, line: 398, baseType: !731, size: 64, offset: 256)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1371, file: !1122, line: 399, baseType: !731, size: 64, offset: 320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1371, file: !1122, line: 405, baseType: !731, size: 64, offset: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1371, file: !1122, line: 406, baseType: !731, size: 64, offset: 448)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1371, file: !1122, line: 407, baseType: !1422, size: 64, offset: 512)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1112, line: 286, baseType: !1424)
!1424 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1112, line: 286, size: 64, elements: !1425)
!1425 = !{!1426}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1424, file: !1112, line: 286, baseType: !1427, size: 64)
!1427 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1390, line: 18, baseType: !731)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1371, file: !1122, line: 416, baseType: !601, size: 32, offset: 576)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1371, file: !1122, line: 428, baseType: !601, size: 32, offset: 608)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1371, file: !1122, line: 437, baseType: !601, size: 32, offset: 640)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1371, file: !1122, line: 447, baseType: !601, size: 32, offset: 672)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1371, file: !1122, line: 450, baseType: !1166, size: 64, offset: 704)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1371, file: !1122, line: 452, baseType: !439, size: 32, offset: 768)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1371, file: !1122, line: 454, baseType: !642, offset: 800)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1371, file: !1122, line: 457, baseType: !1162, size: 256, offset: 832)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1371, file: !1122, line: 459, baseType: !612, size: 128, offset: 1088)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1371, file: !1122, line: 466, baseType: !731, size: 64, offset: 1216)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1371, file: !1122, line: 467, baseType: !731, size: 64, offset: 1280)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1371, file: !1122, line: 469, baseType: !731, size: 64, offset: 1344)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1371, file: !1122, line: 470, baseType: !731, size: 64, offset: 1408)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1371, file: !1122, line: 471, baseType: !1168, size: 64, offset: 1472)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1371, file: !1122, line: 472, baseType: !731, size: 64, offset: 1536)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1371, file: !1122, line: 473, baseType: !731, size: 64, offset: 1600)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1371, file: !1122, line: 474, baseType: !731, size: 64, offset: 1664)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1371, file: !1122, line: 475, baseType: !731, size: 64, offset: 1728)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1371, file: !1122, line: 477, baseType: !642, offset: 1792)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1371, file: !1122, line: 478, baseType: !731, size: 64, offset: 1792)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1371, file: !1122, line: 478, baseType: !731, size: 64, offset: 1856)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1371, file: !1122, line: 478, baseType: !731, size: 64, offset: 1920)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1371, file: !1122, line: 478, baseType: !731, size: 64, offset: 1984)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1371, file: !1122, line: 479, baseType: !731, size: 64, offset: 2048)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1371, file: !1122, line: 479, baseType: !731, size: 64, offset: 2112)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1371, file: !1122, line: 479, baseType: !731, size: 64, offset: 2176)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1371, file: !1122, line: 480, baseType: !731, size: 64, offset: 2240)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1371, file: !1122, line: 480, baseType: !731, size: 64, offset: 2304)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1371, file: !1122, line: 480, baseType: !731, size: 64, offset: 2368)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1371, file: !1122, line: 480, baseType: !731, size: 64, offset: 2432)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1371, file: !1122, line: 482, baseType: !1459, size: 2816, offset: 2496)
!1459 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 2816, elements: !1460)
!1460 = !{!1461}
!1461 = !DISubrange(count: 44)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1371, file: !1122, line: 488, baseType: !1463, size: 256, offset: 5312)
!1463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1464, line: 60, size: 256, elements: !1465)
!1464 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1465 = !{!1466}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1463, file: !1464, line: 61, baseType: !1467, size: 256)
!1467 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1166, size: 256, elements: !1468)
!1468 = !{!1469}
!1469 = !DISubrange(count: 4)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1371, file: !1122, line: 490, baseType: !1471, size: 64, offset: 5568)
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1472, size: 64)
!1472 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1122, line: 490, flags: DIFlagFwdDecl)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1371, file: !1122, line: 493, baseType: !1474, size: 896, offset: 5632)
!1474 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1475, line: 53, baseType: !1476)
!1475 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1475, line: 13, size: 896, elements: !1477)
!1477 = !{!1478, !1479, !1480, !1481, !1484, !1485, !1492, !1493, !1513, !1514, !1515}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1476, file: !1475, line: 18, baseType: !824, size: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1476, file: !1475, line: 28, baseType: !1168, size: 64, offset: 64)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1476, file: !1475, line: 31, baseType: !1162, size: 256, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1476, file: !1475, line: 32, baseType: !1482, size: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1483, size: 64)
!1483 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1475, line: 32, flags: DIFlagFwdDecl)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1476, file: !1475, line: 37, baseType: !486, size: 16, offset: 448)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1476, file: !1475, line: 40, baseType: !1486, size: 192, offset: 512)
!1486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1487, line: 53, size: 192, elements: !1488)
!1487 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1488 = !{!1489, !1490, !1491}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1486, file: !1487, line: 54, baseType: !1166, size: 64)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1486, file: !1487, line: 55, baseType: !642, offset: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1486, file: !1487, line: 59, baseType: !612, size: 128, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1476, file: !1475, line: 41, baseType: !438, size: 64, offset: 704)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1476, file: !1475, line: 42, baseType: !1494, size: 64, offset: 768)
!1494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1496)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1497, line: 13, size: 896, elements: !1498)
!1497 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1498 = !{!1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1496, file: !1497, line: 14, baseType: !438, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1496, file: !1497, line: 15, baseType: !731, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1496, file: !1497, line: 17, baseType: !731, size: 64, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1496, file: !1497, line: 17, baseType: !731, size: 64, offset: 192)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1496, file: !1497, line: 19, baseType: !717, size: 64, offset: 256)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1496, file: !1497, line: 21, baseType: !717, size: 64, offset: 320)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1496, file: !1497, line: 22, baseType: !717, size: 64, offset: 384)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1496, file: !1497, line: 23, baseType: !717, size: 64, offset: 448)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1496, file: !1497, line: 24, baseType: !717, size: 64, offset: 512)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1496, file: !1497, line: 25, baseType: !717, size: 64, offset: 576)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1496, file: !1497, line: 26, baseType: !717, size: 64, offset: 640)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1496, file: !1497, line: 27, baseType: !717, size: 64, offset: 704)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1496, file: !1497, line: 28, baseType: !717, size: 64, offset: 768)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1496, file: !1497, line: 29, baseType: !717, size: 64, offset: 832)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1476, file: !1475, line: 44, baseType: !601, size: 32, offset: 832)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1476, file: !1475, line: 50, baseType: !484, size: 16, offset: 864)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1476, file: !1475, line: 51, baseType: !440, size: 16, offset: 880)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1371, file: !1122, line: 495, baseType: !731, size: 64, offset: 6528)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1371, file: !1122, line: 497, baseType: !1518, size: 64, offset: 6592)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1122, line: 381, size: 384, elements: !1520)
!1520 = !{!1521, !1522, !2612}
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1519, file: !1122, line: 382, baseType: !601, size: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1519, file: !1122, line: 383, baseType: !1523, size: 128, offset: 64)
!1523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1122, line: 376, size: 128, elements: !1524)
!1524 = !{!1525, !2610}
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1523, file: !1122, line: 377, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1528, line: 640, size: 48640, elements: !1529)
!1528 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1529 = !{!1530, !1536, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1551, !1569, !1580, !1661, !1662, !1663, !1674, !1675, !1677, !1678, !1679, !1680, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1762, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1800, !1802, !1803, !1804, !1816, !1817, !1818, !1819, !1820, !1821, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1845, !1850, !2032, !2033, !2034, !2035, !2039, !2042, !2045, !2048, !2051, !2055, !2156, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2200, !2201, !2202, !2203, !2204, !2209, !2210, !2211, !2214, !2215, !2218, !2221, !2224, !2227, !2270, !2273, !2274, !2353, !2354, !2357, !2358, !2361, !2362, !2363, !2367, !2368, !2369, !2382, !2383, !2384, !2394, !2399, !2402, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1527, file: !1528, line: 646, baseType: !1531, size: 128)
!1531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1532, line: 56, size: 128, elements: !1533)
!1532 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1533 = !{!1534, !1535}
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1531, file: !1532, line: 57, baseType: !731, size: 64)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1531, file: !1532, line: 58, baseType: !571, size: 32, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1527, file: !1528, line: 649, baseType: !1537, size: 64, offset: 128)
!1537 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !717)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1527, file: !1528, line: 657, baseType: !438, size: 64, offset: 192)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1527, file: !1528, line: 658, baseType: !596, size: 32, offset: 256)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1527, file: !1528, line: 660, baseType: !7, size: 32, offset: 288)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1527, file: !1528, line: 661, baseType: !7, size: 32, offset: 320)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1527, file: !1528, line: 684, baseType: !439, size: 32, offset: 352)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1527, file: !1528, line: 686, baseType: !439, size: 32, offset: 384)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1527, file: !1528, line: 687, baseType: !439, size: 32, offset: 416)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1527, file: !1528, line: 688, baseType: !439, size: 32, offset: 448)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1527, file: !1528, line: 689, baseType: !7, size: 32, offset: 480)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1527, file: !1528, line: 691, baseType: !1548, size: 64, offset: 512)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1528, line: 691, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1527, file: !1528, line: 692, baseType: !1552, size: 832, offset: 576)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1528, line: 451, size: 832, elements: !1553)
!1553 = !{!1554, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1552, file: !1528, line: 453, baseType: !1555, size: 128)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1528, line: 325, size: 128, elements: !1556)
!1556 = !{!1557, !1558}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1555, file: !1528, line: 326, baseType: !731, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1555, file: !1528, line: 327, baseType: !571, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1552, file: !1528, line: 454, baseType: !1155, size: 192, align: 64, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1552, file: !1528, line: 455, baseType: !612, size: 128, offset: 320)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1552, file: !1528, line: 456, baseType: !7, size: 32, offset: 448)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1552, file: !1528, line: 458, baseType: !824, size: 64, offset: 512)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1552, file: !1528, line: 459, baseType: !824, size: 64, offset: 576)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1552, file: !1528, line: 460, baseType: !824, size: 64, offset: 640)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1552, file: !1528, line: 461, baseType: !824, size: 64, offset: 704)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1552, file: !1528, line: 463, baseType: !824, size: 64, offset: 768)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1552, file: !1528, line: 465, baseType: !1568, offset: 832)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1528, line: 415, elements: !656)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1527, file: !1528, line: 693, baseType: !1570, size: 384, offset: 1408)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1528, line: 489, size: 384, elements: !1571)
!1571 = !{!1572, !1573, !1574, !1575, !1576, !1577, !1578}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1570, file: !1528, line: 490, baseType: !612, size: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1570, file: !1528, line: 491, baseType: !731, size: 64, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1570, file: !1528, line: 492, baseType: !731, size: 64, offset: 192)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1570, file: !1528, line: 493, baseType: !7, size: 32, offset: 256)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1570, file: !1528, line: 494, baseType: !486, size: 16, offset: 288)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1570, file: !1528, line: 495, baseType: !486, size: 16, offset: 304)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1570, file: !1528, line: 497, baseType: !1579, size: 64, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1527, file: !1528, line: 697, baseType: !1581, size: 1792, offset: 1792)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1528, line: 507, size: 1792, elements: !1582)
!1582 = !{!1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1658, !1659}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1581, file: !1528, line: 508, baseType: !1155, size: 192, align: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1581, file: !1528, line: 515, baseType: !824, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1581, file: !1528, line: 516, baseType: !824, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1581, file: !1528, line: 517, baseType: !824, size: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1581, file: !1528, line: 518, baseType: !824, size: 64, offset: 384)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1581, file: !1528, line: 519, baseType: !824, size: 64, offset: 448)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1581, file: !1528, line: 526, baseType: !1172, size: 64, offset: 512)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1581, file: !1528, line: 527, baseType: !824, size: 64, offset: 576)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1581, file: !1528, line: 528, baseType: !7, size: 32, offset: 640)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1581, file: !1528, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1581, file: !1528, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1581, file: !1528, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1581, file: !1528, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1581, file: !1528, line: 563, baseType: !1597, size: 512, offset: 704)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !191, line: 118, size: 512, elements: !1598)
!1598 = !{!1599, !1607, !1608, !1613, !1654, !1655, !1656, !1657}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1597, file: !191, line: 119, baseType: !1600, size: 256)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1601, line: 9, size: 256, elements: !1602)
!1601 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1602 = !{!1603, !1604}
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1600, file: !1601, line: 10, baseType: !1155, size: 192, align: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1600, file: !1601, line: 11, baseType: !1605, size: 64, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1606, line: 29, baseType: !1172)
!1606 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1597, file: !191, line: 120, baseType: !1605, size: 64, offset: 256)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1597, file: !191, line: 121, baseType: !1609, size: 64, offset: 320)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DISubroutineType(types: !1611)
!1611 = !{!190, !1612}
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1597, file: !191, line: 122, baseType: !1614, size: 64, offset: 384)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !191, line: 159, size: 512, align: 512, elements: !1616)
!1616 = !{!1617, !1635, !1636, !1639, !1644, !1645, !1649, !1653}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1615, file: !191, line: 160, baseType: !1618, size: 64)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !191, line: 214, size: 4608, align: 512, elements: !1620)
!1620 = !{!1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1619, file: !191, line: 215, baseType: !1175)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1619, file: !191, line: 216, baseType: !7, size: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1619, file: !191, line: 217, baseType: !7, size: 32, offset: 32)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1619, file: !191, line: 218, baseType: !7, size: 32, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1619, file: !191, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1619, file: !191, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1619, file: !191, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1619, file: !191, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1619, file: !191, line: 233, baseType: !1605, size: 64, offset: 128)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1619, file: !191, line: 234, baseType: !1612, size: 64, offset: 192)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1619, file: !191, line: 235, baseType: !1605, size: 64, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1619, file: !191, line: 236, baseType: !1612, size: 64, offset: 320)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1619, file: !191, line: 237, baseType: !1634, size: 4096, offset: 512)
!1634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1615, size: 4096, elements: !582)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1615, file: !191, line: 161, baseType: !7, size: 32, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1615, file: !191, line: 162, baseType: !1637, size: 32, offset: 96)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !437, line: 27, baseType: !1638)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !715, line: 96, baseType: !439)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1615, file: !191, line: 163, baseType: !1640, size: 32, offset: 128)
!1640 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !795, line: 276, baseType: !1641)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !795, line: 276, size: 32, elements: !1642)
!1642 = !{!1643}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1641, file: !795, line: 276, baseType: !799, size: 32)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1615, file: !191, line: 164, baseType: !1612, size: 64, offset: 192)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1615, file: !191, line: 165, baseType: !1646, size: 128, offset: 256)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1601, line: 14, size: 128, elements: !1647)
!1647 = !{!1648}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1646, file: !1601, line: 15, baseType: !1147, size: 128)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1615, file: !191, line: 166, baseType: !1650, size: 64, offset: 384)
!1650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1651, size: 64)
!1651 = !DISubroutineType(types: !1652)
!1652 = !{!1605}
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1615, file: !191, line: 167, baseType: !1605, size: 64, offset: 448)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1597, file: !191, line: 123, baseType: !492, size: 8, offset: 448)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1597, file: !191, line: 124, baseType: !492, size: 8, offset: 456)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1597, file: !191, line: 125, baseType: !492, size: 8, offset: 464)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1597, file: !191, line: 126, baseType: !492, size: 8, offset: 472)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1581, file: !1528, line: 572, baseType: !1597, size: 512, offset: 1216)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1581, file: !1528, line: 580, baseType: !1660, size: 64, offset: 1728)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1527, file: !1528, line: 721, baseType: !7, size: 32, offset: 3584)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1527, file: !1528, line: 722, baseType: !439, size: 32, offset: 3616)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1527, file: !1528, line: 723, baseType: !1664, size: 64, offset: 3648)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1667, line: 17, baseType: !1668)
!1667 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1667, line: 17, size: 64, elements: !1669)
!1669 = !{!1670}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1668, file: !1667, line: 17, baseType: !1671, size: 64)
!1671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, size: 64, elements: !1672)
!1672 = !{!1673}
!1673 = !DISubrange(count: 1)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1527, file: !1528, line: 724, baseType: !1666, size: 64, offset: 3712)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1527, file: !1528, line: 749, baseType: !1676, offset: 3776)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1528, line: 290, elements: !656)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1527, file: !1528, line: 751, baseType: !612, size: 128, offset: 3776)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1527, file: !1528, line: 757, baseType: !1367, size: 64, offset: 3904)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1527, file: !1528, line: 758, baseType: !1367, size: 64, offset: 3968)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1527, file: !1528, line: 761, baseType: !1681, size: 320, offset: 4032)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1464, line: 34, size: 320, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1681, file: !1464, line: 35, baseType: !824, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1681, file: !1464, line: 36, baseType: !1685, size: 256, offset: 64)
!1685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1374, size: 256, elements: !1468)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1527, file: !1528, line: 766, baseType: !439, size: 32, offset: 4352)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1527, file: !1528, line: 767, baseType: !439, size: 32, offset: 4384)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1527, file: !1528, line: 768, baseType: !439, size: 32, offset: 4416)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1527, file: !1528, line: 770, baseType: !439, size: 32, offset: 4448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1527, file: !1528, line: 772, baseType: !731, size: 64, offset: 4480)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1527, file: !1528, line: 775, baseType: !7, size: 32, offset: 4544)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1527, file: !1528, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1527, file: !1528, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1527, file: !1528, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1527, file: !1528, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1527, file: !1528, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1527, file: !1528, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1527, file: !1528, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1527, file: !1528, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1527, file: !1528, line: 831, baseType: !731, size: 64, offset: 4672)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1527, file: !1528, line: 833, baseType: !1702, size: 384, offset: 4736)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !196, line: 25, size: 384, elements: !1703)
!1703 = !{!1704, !1709}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1702, file: !196, line: 26, baseType: !1705, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!717, !1708}
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1709 = !DIDerivedType(tag: DW_TAG_member, scope: !1702, file: !196, line: 27, baseType: !1710, size: 320, offset: 64)
!1710 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1702, file: !196, line: 27, size: 320, elements: !1711)
!1711 = !{!1712, !1722, !1747}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1710, file: !196, line: 36, baseType: !1713, size: 320)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1710, file: !196, line: 29, size: 320, elements: !1714)
!1714 = !{!1715, !1717, !1718, !1719, !1720, !1721}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1713, file: !196, line: 30, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1713, file: !196, line: 31, baseType: !571, size: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1713, file: !196, line: 32, baseType: !571, size: 32, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1713, file: !196, line: 33, baseType: !571, size: 32, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1713, file: !196, line: 34, baseType: !824, size: 64, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1713, file: !196, line: 35, baseType: !1716, size: 64, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1710, file: !196, line: 46, baseType: !1723, size: 192)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1710, file: !196, line: 38, size: 192, elements: !1724)
!1724 = !{!1725, !1726, !1727, !1746}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1723, file: !196, line: 39, baseType: !1637, size: 32)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1723, file: !196, line: 40, baseType: !195, size: 32, offset: 32)
!1727 = !DIDerivedType(tag: DW_TAG_member, scope: !1723, file: !196, line: 41, baseType: !1728, size: 64, offset: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1723, file: !196, line: 41, size: 64, elements: !1729)
!1729 = !{!1730, !1738}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1728, file: !196, line: 42, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1733, line: 7, size: 128, elements: !1734)
!1733 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1734 = !{!1735, !1737}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1732, file: !1733, line: 8, baseType: !1736, size: 64)
!1736 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !715, line: 93, baseType: !932)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1732, file: !1733, line: 9, baseType: !932, size: 64, offset: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1728, file: !196, line: 43, baseType: !1739, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1741, line: 7, size: 64, elements: !1742)
!1741 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1742 = !{!1743, !1745}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1740, file: !1741, line: 8, baseType: !1744, size: 32)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1741, line: 5, baseType: !445)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1740, file: !1741, line: 9, baseType: !445, size: 32, offset: 32)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1723, file: !196, line: 45, baseType: !824, size: 64, offset: 128)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1710, file: !196, line: 54, baseType: !1748, size: 256)
!1748 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1710, file: !196, line: 48, size: 256, elements: !1749)
!1749 = !{!1750, !1758, !1759, !1760, !1761}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1748, file: !196, line: 49, baseType: !1751, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1753, line: 36, size: 64, elements: !1754)
!1753 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1754 = !{!1755, !1756, !1757}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1752, file: !1753, line: 37, baseType: !439, size: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1752, file: !1753, line: 38, baseType: !444, size: 16, offset: 32)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1752, file: !1753, line: 39, baseType: !444, size: 16, offset: 48)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1748, file: !196, line: 50, baseType: !439, size: 32, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1748, file: !196, line: 51, baseType: !439, size: 32, offset: 96)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1748, file: !196, line: 52, baseType: !731, size: 64, offset: 128)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1748, file: !196, line: 53, baseType: !731, size: 64, offset: 192)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1527, file: !1528, line: 835, baseType: !1763, size: 32, offset: 5120)
!1763 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !437, line: 22, baseType: !1764)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !715, line: 28, baseType: !439)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1527, file: !1528, line: 836, baseType: !1763, size: 32, offset: 5152)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1527, file: !1528, line: 840, baseType: !731, size: 64, offset: 5184)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1527, file: !1528, line: 849, baseType: !1526, size: 64, offset: 5248)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1527, file: !1528, line: 852, baseType: !1526, size: 64, offset: 5312)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1527, file: !1528, line: 857, baseType: !612, size: 128, offset: 5376)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1527, file: !1528, line: 858, baseType: !612, size: 128, offset: 5504)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1527, file: !1528, line: 859, baseType: !1526, size: 64, offset: 5632)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1527, file: !1528, line: 867, baseType: !612, size: 128, offset: 5696)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1527, file: !1528, line: 868, baseType: !612, size: 128, offset: 5824)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1527, file: !1528, line: 871, baseType: !1775, size: 64, offset: 5952)
!1775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1776, size: 64)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !217, line: 59, size: 768, elements: !1777)
!1777 = !{!1778, !1779, !1780, !1781, !1783, !1784, !1791, !1792}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1776, file: !217, line: 61, baseType: !596, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1776, file: !217, line: 62, baseType: !7, size: 32, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1776, file: !217, line: 63, baseType: !642, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1776, file: !217, line: 65, baseType: !1782, size: 256, offset: 64)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 256, elements: !1468)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1776, file: !217, line: 66, baseType: !1034, size: 64, offset: 320)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1776, file: !217, line: 68, baseType: !1785, size: 128, offset: 384)
!1785 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1786, line: 40, baseType: !1787)
!1786 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1786, line: 36, size: 128, elements: !1788)
!1788 = !{!1789, !1790}
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1787, file: !1786, line: 37, baseType: !642)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1787, file: !1786, line: 38, baseType: !612, size: 128)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1776, file: !217, line: 69, baseType: !772, size: 128, align: 64, offset: 512)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1776, file: !217, line: 70, baseType: !1793, size: 128, offset: 640)
!1793 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1794, size: 128, elements: !1672)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !217, line: 54, size: 128, elements: !1795)
!1795 = !{!1796, !1797}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1794, file: !217, line: 55, baseType: !439, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1794, file: !217, line: 56, baseType: !1798, size: 64, offset: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !217, line: 56, flags: DIFlagFwdDecl)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1527, file: !1528, line: 872, baseType: !1801, size: 512, offset: 6016)
!1801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1038, size: 512, elements: !1468)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1527, file: !1528, line: 873, baseType: !612, size: 128, offset: 6528)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1527, file: !1528, line: 874, baseType: !612, size: 128, offset: 6656)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1527, file: !1528, line: 876, baseType: !1805, size: 64, offset: 6784)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1807, line: 26, size: 192, elements: !1808)
!1807 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1806, file: !1807, line: 27, baseType: !7, size: 32)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1806, file: !1807, line: 28, baseType: !1811, size: 128, offset: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1812, line: 43, size: 128, elements: !1813)
!1812 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1813 = !{!1814, !1815}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1811, file: !1812, line: 44, baseType: !1175)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1811, file: !1812, line: 45, baseType: !612, size: 128)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1527, file: !1528, line: 879, baseType: !1104, size: 64, offset: 6848)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1527, file: !1528, line: 882, baseType: !1104, size: 64, offset: 6912)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1527, file: !1528, line: 884, baseType: !824, size: 64, offset: 6976)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1527, file: !1528, line: 885, baseType: !824, size: 64, offset: 7040)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1527, file: !1528, line: 890, baseType: !824, size: 64, offset: 7104)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1527, file: !1528, line: 891, baseType: !1822, size: 128, offset: 7168)
!1822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1528, line: 242, size: 128, elements: !1823)
!1823 = !{!1824, !1825, !1826}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1822, file: !1528, line: 244, baseType: !824, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1822, file: !1528, line: 245, baseType: !824, size: 64, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1822, file: !1528, line: 246, baseType: !1175, offset: 128)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1527, file: !1528, line: 900, baseType: !731, size: 64, offset: 7296)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1527, file: !1528, line: 901, baseType: !731, size: 64, offset: 7360)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1527, file: !1528, line: 904, baseType: !824, size: 64, offset: 7424)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1527, file: !1528, line: 907, baseType: !824, size: 64, offset: 7488)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1527, file: !1528, line: 910, baseType: !731, size: 64, offset: 7552)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1527, file: !1528, line: 911, baseType: !731, size: 64, offset: 7616)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1527, file: !1528, line: 914, baseType: !1834, size: 640, offset: 7680)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1835, line: 123, size: 640, elements: !1836)
!1835 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1836 = !{!1837, !1843, !1844}
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1834, file: !1835, line: 124, baseType: !1838, size: 576)
!1838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1839, size: 576, elements: !683)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1835, line: 108, size: 192, elements: !1840)
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1839, file: !1835, line: 109, baseType: !824, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1839, file: !1835, line: 110, baseType: !1646, size: 128, offset: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1834, file: !1835, line: 125, baseType: !7, size: 32, offset: 576)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1834, file: !1835, line: 126, baseType: !7, size: 32, offset: 608)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1527, file: !1528, line: 917, baseType: !1846, size: 192, offset: 8320)
!1846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1835, line: 134, size: 192, elements: !1847)
!1847 = !{!1848, !1849}
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1846, file: !1835, line: 135, baseType: !772, size: 128, align: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1846, file: !1835, line: 136, baseType: !7, size: 32, offset: 128)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1527, file: !1528, line: 923, baseType: !1851, size: 64, offset: 8512)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1853)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1854, line: 111, size: 1280, elements: !1855)
!1854 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1855 = !{!1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1875, !1876, !1877, !1878, !1879, !1880, !1985, !1986, !1987, !1988, !2014, !2017, !2027}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1853, file: !1854, line: 112, baseType: !601, size: 32)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1853, file: !1854, line: 120, baseType: !837, size: 32, offset: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1853, file: !1854, line: 121, baseType: !845, size: 32, offset: 64)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1853, file: !1854, line: 122, baseType: !837, size: 32, offset: 96)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1853, file: !1854, line: 123, baseType: !845, size: 32, offset: 128)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1853, file: !1854, line: 124, baseType: !837, size: 32, offset: 160)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1853, file: !1854, line: 125, baseType: !845, size: 32, offset: 192)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1853, file: !1854, line: 126, baseType: !837, size: 32, offset: 224)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1853, file: !1854, line: 127, baseType: !845, size: 32, offset: 256)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1853, file: !1854, line: 128, baseType: !7, size: 32, offset: 288)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1853, file: !1854, line: 129, baseType: !1867, size: 64, offset: 320)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1868, line: 26, baseType: !1869)
!1868 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1868, line: 24, size: 64, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1869, file: !1868, line: 25, baseType: !1872, size: 64)
!1872 = !DICompositeType(tag: DW_TAG_array_type, baseType: !572, size: 64, elements: !1873)
!1873 = !{!1874}
!1874 = !DISubrange(count: 2)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1853, file: !1854, line: 130, baseType: !1867, size: 64, offset: 384)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1853, file: !1854, line: 131, baseType: !1867, size: 64, offset: 448)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1853, file: !1854, line: 132, baseType: !1867, size: 64, offset: 512)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1853, file: !1854, line: 133, baseType: !1867, size: 64, offset: 576)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1853, file: !1854, line: 135, baseType: !494, size: 8, offset: 640)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1853, file: !1854, line: 137, baseType: !1881, size: 64, offset: 704)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1882, size: 64)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1883, line: 189, size: 1664, elements: !1884)
!1883 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1884 = !{!1885, !1886, !1889, !1894, !1895, !1898, !1899, !1904, !1905, !1906, !1907, !1909, !1910, !1911, !1912, !1913, !1949, !1970}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1882, file: !1883, line: 190, baseType: !596, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1882, file: !1883, line: 191, baseType: !1887, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1883, line: 28, baseType: !1888)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !437, line: 98, baseType: !445)
!1889 = !DIDerivedType(tag: DW_TAG_member, scope: !1882, file: !1883, line: 192, baseType: !1890, size: 192, offset: 64)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1882, file: !1883, line: 192, size: 192, elements: !1891)
!1891 = !{!1892, !1893}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1890, file: !1883, line: 193, baseType: !612, size: 128)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1890, file: !1883, line: 194, baseType: !1155, size: 192, align: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1882, file: !1883, line: 199, baseType: !1162, size: 256, offset: 256)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1882, file: !1883, line: 200, baseType: !1896, size: 64, offset: 512)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1883, line: 200, flags: DIFlagFwdDecl)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1882, file: !1883, line: 201, baseType: !438, size: 64, offset: 576)
!1899 = !DIDerivedType(tag: DW_TAG_member, scope: !1882, file: !1883, line: 202, baseType: !1900, size: 64, offset: 640)
!1900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1882, file: !1883, line: 202, size: 64, elements: !1901)
!1901 = !{!1902, !1903}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1900, file: !1883, line: 203, baseType: !938, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1900, file: !1883, line: 204, baseType: !938, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1882, file: !1883, line: 206, baseType: !938, size: 64, offset: 704)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1882, file: !1883, line: 207, baseType: !837, size: 32, offset: 768)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1882, file: !1883, line: 208, baseType: !845, size: 32, offset: 800)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1882, file: !1883, line: 209, baseType: !1908, size: 32, offset: 832)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1883, line: 31, baseType: !958)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1882, file: !1883, line: 210, baseType: !486, size: 16, offset: 864)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1882, file: !1883, line: 211, baseType: !486, size: 16, offset: 880)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1882, file: !1883, line: 215, baseType: !444, size: 16, offset: 896)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1882, file: !1883, line: 222, baseType: !731, size: 64, offset: 960)
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1882, file: !1883, line: 239, baseType: !1914, size: 320, offset: 1024)
!1914 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1882, file: !1883, line: 239, size: 320, elements: !1915)
!1915 = !{!1916, !1941}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1914, file: !1883, line: 240, baseType: !1917, size: 320)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1883, line: 108, size: 320, elements: !1918)
!1918 = !{!1919, !1920, !1930, !1933, !1940}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1917, file: !1883, line: 110, baseType: !731, size: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !1883, line: 111, baseType: !1921, size: 64, offset: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1917, file: !1883, line: 111, size: 64, elements: !1922)
!1922 = !{!1923, !1929}
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1921, file: !1883, line: 112, baseType: !1924, size: 64)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1921, file: !1883, line: 112, size: 64, elements: !1925)
!1925 = !{!1926, !1927}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1924, file: !1883, line: 114, baseType: !484, size: 16)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1924, file: !1883, line: 115, baseType: !1928, size: 48, offset: 16)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 48, elements: !621)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1921, file: !1883, line: 121, baseType: !731, size: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1917, file: !1883, line: 123, baseType: !1931, size: 64, offset: 128)
!1931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1932, size: 64)
!1932 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1883, line: 96, flags: DIFlagFwdDecl)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1917, file: !1883, line: 124, baseType: !1934, size: 64, offset: 192)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1883, line: 102, size: 192, elements: !1936)
!1936 = !{!1937, !1938, !1939}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1935, file: !1883, line: 103, baseType: !772, size: 128, align: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1935, file: !1883, line: 104, baseType: !596, size: 32, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1935, file: !1883, line: 105, baseType: !889, size: 8, offset: 160)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1917, file: !1883, line: 125, baseType: !458, size: 64, offset: 256)
!1941 = !DIDerivedType(tag: DW_TAG_member, scope: !1914, file: !1883, line: 241, baseType: !1942, size: 320)
!1942 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1914, file: !1883, line: 241, size: 320, elements: !1943)
!1943 = !{!1944, !1945, !1946, !1947, !1948}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1942, file: !1883, line: 242, baseType: !731, size: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1942, file: !1883, line: 243, baseType: !731, size: 64, offset: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1942, file: !1883, line: 244, baseType: !1931, size: 64, offset: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1942, file: !1883, line: 245, baseType: !1934, size: 64, offset: 192)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1942, file: !1883, line: 246, baseType: !477, size: 64, offset: 256)
!1949 = !DIDerivedType(tag: DW_TAG_member, scope: !1882, file: !1883, line: 254, baseType: !1950, size: 256, offset: 1344)
!1950 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1882, file: !1883, line: 254, size: 256, elements: !1951)
!1951 = !{!1952, !1958}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1950, file: !1883, line: 255, baseType: !1953, size: 256)
!1953 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1883, line: 128, size: 256, elements: !1954)
!1954 = !{!1955, !1956}
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1953, file: !1883, line: 129, baseType: !438, size: 64)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1953, file: !1883, line: 130, baseType: !1957, size: 256)
!1957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 256, elements: !1468)
!1958 = !DIDerivedType(tag: DW_TAG_member, scope: !1950, file: !1883, line: 256, baseType: !1959, size: 256)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1883, line: 256, size: 256, elements: !1960)
!1960 = !{!1961, !1962}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1959, file: !1883, line: 258, baseType: !612, size: 128)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1959, file: !1883, line: 259, baseType: !1963, size: 128, offset: 128)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1964, line: 22, size: 128, elements: !1965)
!1964 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1965 = !{!1966, !1969}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1963, file: !1964, line: 23, baseType: !1967, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1964, line: 23, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1963, file: !1964, line: 24, baseType: !731, size: 64, offset: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1882, file: !1883, line: 274, baseType: !1971, size: 64, offset: 1600)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1883, line: 170, size: 192, elements: !1973)
!1973 = !{!1974, !1983, !1984}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1972, file: !1883, line: 171, baseType: !1975, size: 64)
!1975 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1883, line: 165, baseType: !1976)
!1976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1977, size: 64)
!1977 = !DISubroutineType(types: !1978)
!1978 = !{!439, !1881, !1979, !1981, !1881}
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1932)
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1953)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1972, file: !1883, line: 172, baseType: !1881, size: 64, offset: 64)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1972, file: !1883, line: 173, baseType: !1931, size: 64, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1853, file: !1854, line: 138, baseType: !1881, size: 64, offset: 768)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1853, file: !1854, line: 139, baseType: !1881, size: 64, offset: 832)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1853, file: !1854, line: 140, baseType: !1881, size: 64, offset: 896)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1853, file: !1854, line: 145, baseType: !1989, size: 64, offset: 960)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1991, line: 13, size: 896, elements: !1992)
!1991 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1990, file: !1991, line: 14, baseType: !596, size: 32)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1990, file: !1991, line: 15, baseType: !601, size: 32, offset: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1990, file: !1991, line: 16, baseType: !601, size: 32, offset: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1990, file: !1991, line: 21, baseType: !1166, size: 64, offset: 128)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1990, file: !1991, line: 27, baseType: !731, size: 64, offset: 192)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1990, file: !1991, line: 28, baseType: !731, size: 64, offset: 256)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1990, file: !1991, line: 29, baseType: !1166, size: 64, offset: 320)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1990, file: !1991, line: 32, baseType: !1038, size: 128, offset: 384)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1990, file: !1991, line: 33, baseType: !837, size: 32, offset: 512)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1990, file: !1991, line: 37, baseType: !1166, size: 64, offset: 576)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1990, file: !1991, line: 44, baseType: !2004, size: 256, offset: 640)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2005, line: 15, size: 256, elements: !2006)
!2005 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !{!2007, !2008, !2009, !2010, !2011, !2012, !2013}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2004, file: !2005, line: 16, baseType: !1175)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2004, file: !2005, line: 18, baseType: !439, size: 32)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2004, file: !2005, line: 19, baseType: !439, size: 32, offset: 32)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2004, file: !2005, line: 20, baseType: !439, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2004, file: !2005, line: 21, baseType: !439, size: 32, offset: 96)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2004, file: !2005, line: 22, baseType: !731, size: 64, offset: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2004, file: !2005, line: 23, baseType: !731, size: 64, offset: 192)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1853, file: !1854, line: 146, baseType: !2015, size: 64, offset: 1024)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !838, line: 18, flags: DIFlagFwdDecl)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1853, file: !1854, line: 147, baseType: !2018, size: 64, offset: 1088)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1854, line: 25, size: 64, elements: !2020)
!2020 = !{!2021, !2022, !2023}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2019, file: !1854, line: 26, baseType: !601, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2019, file: !1854, line: 27, baseType: !439, size: 32, offset: 32)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2019, file: !1854, line: 28, baseType: !2024, offset: 64)
!2024 = !DICompositeType(tag: DW_TAG_array_type, baseType: !845, elements: !2025)
!2025 = !{!2026}
!2026 = !DISubrange(count: 0)
!2027 = !DIDerivedType(tag: DW_TAG_member, scope: !1853, file: !1854, line: 149, baseType: !2028, size: 128, offset: 1152)
!2028 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1853, file: !1854, line: 149, size: 128, elements: !2029)
!2029 = !{!2030, !2031}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2028, file: !1854, line: 150, baseType: !439, size: 32)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2028, file: !1854, line: 151, baseType: !772, size: 128, align: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1527, file: !1528, line: 926, baseType: !1851, size: 64, offset: 8576)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1527, file: !1528, line: 929, baseType: !1851, size: 64, offset: 8640)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1527, file: !1528, line: 933, baseType: !1881, size: 64, offset: 8704)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1527, file: !1528, line: 943, baseType: !2036, size: 128, offset: 8768)
!2036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 128, elements: !2037)
!2037 = !{!2038}
!2038 = !DISubrange(count: 16)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1527, file: !1528, line: 945, baseType: !2040, size: 64, offset: 8896)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1528, line: 49, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1527, file: !1528, line: 956, baseType: !2043, size: 64, offset: 8960)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1528, line: 45, flags: DIFlagFwdDecl)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1527, file: !1528, line: 959, baseType: !2046, size: 64, offset: 9024)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1528, line: 959, flags: DIFlagFwdDecl)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1527, file: !1528, line: 962, baseType: !2049, size: 64, offset: 9088)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1528, line: 66, flags: DIFlagFwdDecl)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1527, file: !1528, line: 966, baseType: !2052, size: 64, offset: 9152)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2054, line: 35, flags: DIFlagFwdDecl)
!2054 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1527, file: !1528, line: 969, baseType: !2056, size: 64, offset: 9216)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2058, line: 82, size: 7296, elements: !2059)
!2058 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2095, !2104, !2105, !2107, !2108, !2109, !2112, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2142, !2143, !2150, !2151, !2152, !2153, !2154, !2155}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2057, file: !2058, line: 83, baseType: !596, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2057, file: !2058, line: 84, baseType: !601, size: 32, offset: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2057, file: !2058, line: 85, baseType: !439, size: 32, offset: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2057, file: !2058, line: 86, baseType: !612, size: 128, offset: 128)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2057, file: !2058, line: 88, baseType: !1785, size: 128, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2057, file: !2058, line: 91, baseType: !1526, size: 64, offset: 384)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2057, file: !2058, line: 94, baseType: !2067, size: 192, offset: 448)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2068, line: 30, size: 192, elements: !2069)
!2068 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2069 = !{!2070, !2071}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2067, file: !2068, line: 31, baseType: !612, size: 128)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2067, file: !2068, line: 32, baseType: !2072, size: 64, offset: 128)
!2072 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2073, line: 25, baseType: !2074)
!2073 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2073, line: 23, size: 64, elements: !2075)
!2075 = !{!2076}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2074, file: !2073, line: 24, baseType: !1671, size: 64)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2057, file: !2058, line: 97, baseType: !1034, size: 64, offset: 640)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2057, file: !2058, line: 100, baseType: !439, size: 32, offset: 704)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2057, file: !2058, line: 106, baseType: !439, size: 32, offset: 736)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2057, file: !2058, line: 107, baseType: !1526, size: 64, offset: 768)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2057, file: !2058, line: 110, baseType: !439, size: 32, offset: 832)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2057, file: !2058, line: 111, baseType: !7, size: 32, offset: 864)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2057, file: !2058, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2057, file: !2058, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2057, file: !2058, line: 128, baseType: !439, size: 32, offset: 928)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2057, file: !2058, line: 129, baseType: !612, size: 128, offset: 960)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2057, file: !2058, line: 132, baseType: !1597, size: 512, offset: 1088)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2057, file: !2058, line: 133, baseType: !1605, size: 64, offset: 1600)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2057, file: !2058, line: 140, baseType: !2090, size: 256, offset: 1664)
!2090 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2091, size: 256, elements: !1873)
!2091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2058, line: 38, size: 128, elements: !2092)
!2092 = !{!2093, !2094}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2091, file: !2058, line: 39, baseType: !824, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2091, file: !2058, line: 40, baseType: !824, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2057, file: !2058, line: 146, baseType: !2096, size: 192, offset: 1920)
!2096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2058, line: 66, size: 192, elements: !2097)
!2097 = !{!2098}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2096, file: !2058, line: 67, baseType: !2099, size: 192)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2058, line: 47, size: 192, elements: !2100)
!2100 = !{!2101, !2102, !2103}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2099, file: !2058, line: 48, baseType: !1168, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2099, file: !2058, line: 49, baseType: !1168, size: 64, offset: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2099, file: !2058, line: 50, baseType: !1168, size: 64, offset: 128)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2057, file: !2058, line: 150, baseType: !1834, size: 640, offset: 2112)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2057, file: !2058, line: 153, baseType: !2106, size: 256, offset: 2752)
!2106 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1775, size: 256, elements: !1468)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2057, file: !2058, line: 159, baseType: !1775, size: 64, offset: 3008)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2057, file: !2058, line: 162, baseType: !439, size: 32, offset: 3072)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2057, file: !2058, line: 164, baseType: !2110, size: 64, offset: 3136)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2058, line: 164, flags: DIFlagFwdDecl)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2057, file: !2058, line: 175, baseType: !2113, size: 32, offset: 3200)
!2113 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !795, line: 805, baseType: !2114)
!2114 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !795, line: 798, size: 32, elements: !2115)
!2115 = !{!2116, !2117}
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2114, file: !795, line: 803, baseType: !794, size: 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2114, file: !795, line: 804, baseType: !642, offset: 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2057, file: !2058, line: 176, baseType: !824, size: 64, offset: 3264)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2057, file: !2058, line: 176, baseType: !824, size: 64, offset: 3328)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2057, file: !2058, line: 176, baseType: !824, size: 64, offset: 3392)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2057, file: !2058, line: 176, baseType: !824, size: 64, offset: 3456)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2057, file: !2058, line: 177, baseType: !824, size: 64, offset: 3520)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2057, file: !2058, line: 178, baseType: !824, size: 64, offset: 3584)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2057, file: !2058, line: 179, baseType: !1822, size: 128, offset: 3648)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2057, file: !2058, line: 180, baseType: !731, size: 64, offset: 3776)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2057, file: !2058, line: 180, baseType: !731, size: 64, offset: 3840)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2057, file: !2058, line: 180, baseType: !731, size: 64, offset: 3904)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2057, file: !2058, line: 180, baseType: !731, size: 64, offset: 3968)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2057, file: !2058, line: 181, baseType: !731, size: 64, offset: 4032)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2057, file: !2058, line: 181, baseType: !731, size: 64, offset: 4096)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2057, file: !2058, line: 181, baseType: !731, size: 64, offset: 4160)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2057, file: !2058, line: 181, baseType: !731, size: 64, offset: 4224)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2057, file: !2058, line: 182, baseType: !731, size: 64, offset: 4288)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2057, file: !2058, line: 182, baseType: !731, size: 64, offset: 4352)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2057, file: !2058, line: 182, baseType: !731, size: 64, offset: 4416)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2057, file: !2058, line: 182, baseType: !731, size: 64, offset: 4480)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2057, file: !2058, line: 183, baseType: !731, size: 64, offset: 4544)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2057, file: !2058, line: 183, baseType: !731, size: 64, offset: 4608)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2057, file: !2058, line: 184, baseType: !2140, offset: 4672)
!2140 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2141, line: 12, elements: !656)
!2141 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2057, file: !2058, line: 192, baseType: !826, size: 64, offset: 4672)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2057, file: !2058, line: 203, baseType: !2144, size: 2048, offset: 4736)
!2144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2145, size: 2048, elements: !2037)
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2146, line: 43, size: 128, elements: !2147)
!2146 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2147 = !{!2148, !2149}
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2145, file: !2146, line: 44, baseType: !730, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2145, file: !2146, line: 45, baseType: !730, size: 64, offset: 64)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2057, file: !2058, line: 220, baseType: !889, size: 8, offset: 6784)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2057, file: !2058, line: 221, baseType: !444, size: 16, offset: 6800)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2057, file: !2058, line: 222, baseType: !444, size: 16, offset: 6816)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2057, file: !2058, line: 224, baseType: !1367, size: 64, offset: 6848)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2057, file: !2058, line: 227, baseType: !1486, size: 192, offset: 6912)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2057, file: !2058, line: 233, baseType: !1486, size: 192, offset: 7104)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1527, file: !1528, line: 970, baseType: !2157, size: 64, offset: 9280)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2058, line: 20, size: 16576, elements: !2159)
!2159 = !{!2160, !2161, !2162, !2163}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2158, file: !2058, line: 21, baseType: !642)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2158, file: !2058, line: 22, baseType: !596, size: 32)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2158, file: !2058, line: 23, baseType: !1785, size: 128, offset: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2158, file: !2058, line: 24, baseType: !2164, size: 16384, offset: 192)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2165, size: 16384, elements: !687)
!2165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2068, line: 49, size: 256, elements: !2166)
!2166 = !{!2167}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2165, file: !2068, line: 50, baseType: !2168, size: 256)
!2168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2068, line: 35, size: 256, elements: !2169)
!2169 = !{!2170, !2177, !2178, !2182}
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2168, file: !2068, line: 37, baseType: !2171, size: 64)
!2171 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2172, line: 19, baseType: !2173)
!2172 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2172, line: 18, baseType: !2175)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !439}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2168, file: !2068, line: 38, baseType: !731, size: 64, offset: 64)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2168, file: !2068, line: 44, baseType: !2179, size: 64, offset: 128)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2172, line: 22, baseType: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2181, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2172, line: 21, baseType: !529)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2168, file: !2068, line: 46, baseType: !2072, size: 64, offset: 192)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1527, file: !1528, line: 971, baseType: !2072, size: 64, offset: 9344)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1527, file: !1528, line: 972, baseType: !2072, size: 64, offset: 9408)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1527, file: !1528, line: 974, baseType: !2072, size: 64, offset: 9472)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1527, file: !1528, line: 975, baseType: !2067, size: 192, offset: 9536)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1527, file: !1528, line: 976, baseType: !731, size: 64, offset: 9728)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1527, file: !1528, line: 977, baseType: !728, size: 64, offset: 9792)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1527, file: !1528, line: 978, baseType: !7, size: 32, offset: 9856)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1527, file: !1528, line: 980, baseType: !775, size: 64, offset: 9920)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1527, file: !1528, line: 989, baseType: !2192, size: 128, offset: 9984)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2193, line: 35, size: 128, elements: !2194)
!2193 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2194 = !{!2195, !2196, !2197}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2192, file: !2193, line: 36, baseType: !439, size: 32)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2192, file: !2193, line: 37, baseType: !601, size: 32, offset: 32)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2192, file: !2193, line: 38, baseType: !2198, size: 64, offset: 64)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2193, line: 23, flags: DIFlagFwdDecl)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1527, file: !1528, line: 992, baseType: !824, size: 64, offset: 10112)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1527, file: !1528, line: 993, baseType: !824, size: 64, offset: 10176)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1527, file: !1528, line: 996, baseType: !642, offset: 10240)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1527, file: !1528, line: 999, baseType: !1175, offset: 10240)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1527, file: !1528, line: 1001, baseType: !2205, size: 64, offset: 10240)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1528, line: 636, size: 64, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2205, file: !1528, line: 637, baseType: !2208, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2205, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1527, file: !1528, line: 1005, baseType: !1147, size: 128, offset: 10304)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1527, file: !1528, line: 1007, baseType: !1526, size: 64, offset: 10432)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1527, file: !1528, line: 1009, baseType: !2212, size: 64, offset: 10496)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1528, line: 1009, flags: DIFlagFwdDecl)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1527, file: !1528, line: 1043, baseType: !438, size: 64, offset: 10560)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1527, file: !1528, line: 1046, baseType: !2216, size: 64, offset: 10624)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1528, line: 41, flags: DIFlagFwdDecl)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1527, file: !1528, line: 1050, baseType: !2219, size: 64, offset: 10688)
!2219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2220, size: 64)
!2220 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1528, line: 42, flags: DIFlagFwdDecl)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1527, file: !1528, line: 1054, baseType: !2222, size: 64, offset: 10752)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1528, line: 55, flags: DIFlagFwdDecl)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1527, file: !1528, line: 1056, baseType: !2225, size: 64, offset: 10816)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1528, line: 40, flags: DIFlagFwdDecl)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1527, file: !1528, line: 1058, baseType: !2228, size: 64, offset: 10880)
!2228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2229, size: 64)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2230, line: 99, size: 704, elements: !2231)
!2230 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2231 = !{!2232, !2233, !2234, !2235, !2236, !2237, !2238, !2257, !2258}
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2229, file: !2230, line: 100, baseType: !1166, size: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2229, file: !2230, line: 101, baseType: !601, size: 32, offset: 64)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2229, file: !2230, line: 102, baseType: !601, size: 32, offset: 96)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2229, file: !2230, line: 105, baseType: !642, offset: 128)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2229, file: !2230, line: 107, baseType: !486, size: 16, offset: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2229, file: !2230, line: 109, baseType: !1138, size: 128, offset: 192)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2229, file: !2230, line: 110, baseType: !2239, size: 64, offset: 320)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2230, line: 73, size: 448, elements: !2241)
!2241 = !{!2242, !2245, !2246, !2251, !2256}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2240, file: !2230, line: 74, baseType: !2243, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2230, line: 74, flags: DIFlagFwdDecl)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2240, file: !2230, line: 75, baseType: !2228, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !2230, line: 83, baseType: !2247, size: 128, offset: 128)
!2247 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2240, file: !2230, line: 83, size: 128, elements: !2248)
!2248 = !{!2249, !2250}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2247, file: !2230, line: 84, baseType: !612, size: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2247, file: !2230, line: 85, baseType: !1328, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, scope: !2240, file: !2230, line: 87, baseType: !2252, size: 128, offset: 256)
!2252 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2240, file: !2230, line: 87, size: 128, elements: !2253)
!2253 = !{!2254, !2255}
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2252, file: !2230, line: 88, baseType: !1038, size: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2252, file: !2230, line: 89, baseType: !772, size: 128, align: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2240, file: !2230, line: 92, baseType: !7, size: 32, offset: 384)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2229, file: !2230, line: 111, baseType: !1034, size: 64, offset: 384)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2229, file: !2230, line: 113, baseType: !2259, size: 256, offset: 448)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2260, line: 102, size: 256, elements: !2261)
!2260 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2261 = !{!2262, !2263, !2264}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2259, file: !2260, line: 103, baseType: !1166, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2259, file: !2260, line: 104, baseType: !612, size: 128, offset: 64)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2259, file: !2260, line: 105, baseType: !2265, size: 64, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2260, line: 21, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2269}
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1527, file: !1528, line: 1061, baseType: !2271, size: 64, offset: 10944)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1528, line: 43, flags: DIFlagFwdDecl)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1527, file: !1528, line: 1064, baseType: !731, size: 64, offset: 11008)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1527, file: !1528, line: 1065, baseType: !2275, size: 64, offset: 11072)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2068, line: 14, baseType: !2277)
!2277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2068, line: 12, size: 384, elements: !2278)
!2278 = !{!2279}
!2279 = !DIDerivedType(tag: DW_TAG_member, scope: !2277, file: !2068, line: 13, baseType: !2280, size: 384)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2277, file: !2068, line: 13, size: 384, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2280, file: !2068, line: 13, baseType: !439, size: 32)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2280, file: !2068, line: 13, baseType: !439, size: 32, offset: 32)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2280, file: !2068, line: 13, baseType: !439, size: 32, offset: 64)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2280, file: !2068, line: 13, baseType: !2286, size: 256, offset: 128)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2287, line: 32, size: 256, elements: !2288)
!2287 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2288 = !{!2289, !2294, !2307, !2313, !2322, !2342, !2347}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2286, file: !2287, line: 37, baseType: !2290, size: 64)
!2290 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 34, size: 64, elements: !2291)
!2291 = !{!2292, !2293}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2290, file: !2287, line: 35, baseType: !1764, size: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2290, file: !2287, line: 36, baseType: !843, size: 32, offset: 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2286, file: !2287, line: 45, baseType: !2295, size: 192)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 40, size: 192, elements: !2296)
!2296 = !{!2297, !2299, !2300, !2306}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2295, file: !2287, line: 41, baseType: !2298, size: 32)
!2298 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !715, line: 95, baseType: !439)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2295, file: !2287, line: 42, baseType: !439, size: 32, offset: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2295, file: !2287, line: 43, baseType: !2301, size: 64, offset: 64)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2287, line: 11, baseType: !2302)
!2302 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2287, line: 8, size: 64, elements: !2303)
!2303 = !{!2304, !2305}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2302, file: !2287, line: 9, baseType: !439, size: 32)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2302, file: !2287, line: 10, baseType: !438, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2295, file: !2287, line: 44, baseType: !439, size: 32, offset: 128)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2286, file: !2287, line: 52, baseType: !2308, size: 128)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 48, size: 128, elements: !2309)
!2309 = !{!2310, !2311, !2312}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2308, file: !2287, line: 49, baseType: !1764, size: 32)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2308, file: !2287, line: 50, baseType: !843, size: 32, offset: 32)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2308, file: !2287, line: 51, baseType: !2301, size: 64, offset: 64)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2286, file: !2287, line: 61, baseType: !2314, size: 256)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 55, size: 256, elements: !2315)
!2315 = !{!2316, !2317, !2318, !2319, !2321}
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2314, file: !2287, line: 56, baseType: !1764, size: 32)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2314, file: !2287, line: 57, baseType: !843, size: 32, offset: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2314, file: !2287, line: 58, baseType: !439, size: 32, offset: 64)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2314, file: !2287, line: 59, baseType: !2320, size: 64, offset: 128)
!2320 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !715, line: 94, baseType: !716)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2314, file: !2287, line: 60, baseType: !2320, size: 64, offset: 192)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2286, file: !2287, line: 95, baseType: !2323, size: 256)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 64, size: 256, elements: !2324)
!2324 = !{!2325, !2326}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2323, file: !2287, line: 65, baseType: !438, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !2323, file: !2287, line: 77, baseType: !2327, size: 192, offset: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2323, file: !2287, line: 77, size: 192, elements: !2328)
!2328 = !{!2329, !2330, !2337}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2327, file: !2287, line: 82, baseType: !444, size: 16)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2327, file: !2287, line: 88, baseType: !2331, size: 192)
!2331 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2327, file: !2287, line: 84, size: 192, elements: !2332)
!2332 = !{!2333, !2335, !2336}
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2331, file: !2287, line: 85, baseType: !2334, size: 64)
!2334 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 64, elements: !582)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2331, file: !2287, line: 86, baseType: !438, size: 64, offset: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2331, file: !2287, line: 87, baseType: !438, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2327, file: !2287, line: 93, baseType: !2338, size: 96)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2327, file: !2287, line: 90, size: 96, elements: !2339)
!2339 = !{!2340, !2341}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2338, file: !2287, line: 91, baseType: !2334, size: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2338, file: !2287, line: 92, baseType: !572, size: 32, offset: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2286, file: !2287, line: 101, baseType: !2343, size: 128)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 98, size: 128, elements: !2344)
!2344 = !{!2345, !2346}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2343, file: !2287, line: 99, baseType: !717, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2343, file: !2287, line: 100, baseType: !439, size: 32, offset: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2286, file: !2287, line: 108, baseType: !2348, size: 128)
!2348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2286, file: !2287, line: 104, size: 128, elements: !2349)
!2349 = !{!2350, !2351, !2352}
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2348, file: !2287, line: 105, baseType: !438, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2348, file: !2287, line: 106, baseType: !439, size: 32, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2348, file: !2287, line: 107, baseType: !7, size: 32, offset: 96)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1527, file: !1528, line: 1067, baseType: !2140, offset: 11136)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1527, file: !1528, line: 1099, baseType: !2355, size: 64, offset: 11136)
!2355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2356, size: 64)
!2356 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1528, line: 56, flags: DIFlagFwdDecl)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1527, file: !1528, line: 1103, baseType: !612, size: 128, offset: 11200)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1527, file: !1528, line: 1104, baseType: !2359, size: 64, offset: 11328)
!2359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2360, size: 64)
!2360 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1528, line: 46, flags: DIFlagFwdDecl)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1527, file: !1528, line: 1105, baseType: !1486, size: 192, offset: 11392)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1527, file: !1528, line: 1106, baseType: !7, size: 32, offset: 11584)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1527, file: !1528, line: 1109, baseType: !2364, size: 128, offset: 11648)
!2364 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2365, size: 128, elements: !1873)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1528, line: 51, flags: DIFlagFwdDecl)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1527, file: !1528, line: 1110, baseType: !1486, size: 192, offset: 11776)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1527, file: !1528, line: 1111, baseType: !612, size: 128, offset: 11968)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1527, file: !1528, line: 1173, baseType: !2370, size: 64, offset: 12096)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2372, line: 62, size: 256, align: 256, elements: !2373)
!2372 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2373 = !{!2374, !2375, !2376, !2381}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2371, file: !2372, line: 75, baseType: !572, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2371, file: !2372, line: 90, baseType: !572, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2371, file: !2372, line: 124, baseType: !2377, size: 64, offset: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2371, file: !2372, line: 109, size: 64, elements: !2378)
!2378 = !{!2379, !2380}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2377, file: !2372, line: 110, baseType: !825, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2377, file: !2372, line: 112, baseType: !825, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2371, file: !2372, line: 144, baseType: !572, size: 32, offset: 128)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1527, file: !1528, line: 1174, baseType: !571, size: 32, offset: 12160)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1527, file: !1528, line: 1179, baseType: !731, size: 64, offset: 12224)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1527, file: !1528, line: 1182, baseType: !2385, size: 128, offset: 12288)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1464, line: 76, size: 128, elements: !2386)
!2386 = !{!2387, !2392, !2393}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2385, file: !1464, line: 85, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2389, line: 7, size: 64, elements: !2390)
!2389 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2390 = !{!2391}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2388, file: !2389, line: 12, baseType: !1668, size: 64)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2385, file: !1464, line: 88, baseType: !889, size: 8, offset: 64)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2385, file: !1464, line: 95, baseType: !889, size: 8, offset: 72)
!2394 = !DIDerivedType(tag: DW_TAG_member, scope: !1527, file: !1528, line: 1184, baseType: !2395, size: 128, offset: 12416)
!2395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1527, file: !1528, line: 1184, size: 128, elements: !2396)
!2396 = !{!2397, !2398}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2395, file: !1528, line: 1185, baseType: !596, size: 32)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2395, file: !1528, line: 1186, baseType: !772, size: 128, align: 64)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1527, file: !1528, line: 1190, baseType: !2400, size: 64, offset: 12544)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1528, line: 53, flags: DIFlagFwdDecl)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1527, file: !1528, line: 1192, baseType: !2403, size: 128, offset: 12608)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1464, line: 64, size: 128, elements: !2404)
!2404 = !{!2405, !2406, !2407}
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2403, file: !1464, line: 65, baseType: !1120, size: 64)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2403, file: !1464, line: 67, baseType: !572, size: 32, offset: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2403, file: !1464, line: 68, baseType: !572, size: 32, offset: 96)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1527, file: !1528, line: 1206, baseType: !439, size: 32, offset: 12736)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1527, file: !1528, line: 1207, baseType: !439, size: 32, offset: 12768)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1527, file: !1528, line: 1209, baseType: !731, size: 64, offset: 12800)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1527, file: !1528, line: 1219, baseType: !824, size: 64, offset: 12864)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1527, file: !1528, line: 1220, baseType: !824, size: 64, offset: 12928)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1527, file: !1528, line: 1317, baseType: !439, size: 32, offset: 12992)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1527, file: !1528, line: 1319, baseType: !1526, size: 64, offset: 13056)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1527, file: !1528, line: 1322, baseType: !2416, size: 64, offset: 13120)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2418, line: 56, size: 512, elements: !2419)
!2418 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2419 = !{!2420, !2421, !2422, !2423, !2424, !2425, !2426, !2428}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2417, file: !2418, line: 57, baseType: !2416, size: 64)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2417, file: !2418, line: 58, baseType: !438, size: 64, offset: 64)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2417, file: !2418, line: 59, baseType: !731, size: 64, offset: 128)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2417, file: !2418, line: 60, baseType: !731, size: 64, offset: 192)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2417, file: !2418, line: 61, baseType: !1215, size: 64, offset: 256)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2417, file: !2418, line: 62, baseType: !7, size: 32, offset: 320)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2417, file: !2418, line: 63, baseType: !2427, size: 64, offset: 384)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !437, line: 153, baseType: !824)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2417, file: !2418, line: 64, baseType: !2429, size: 64, offset: 448)
!2429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2430, size: 64)
!2430 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1527, file: !1528, line: 1326, baseType: !596, size: 32, offset: 13184)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1527, file: !1528, line: 1342, baseType: !438, size: 64, offset: 13248)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1527, file: !1528, line: 1343, baseType: !825, size: 64, offset: 13312)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1527, file: !1528, line: 1344, baseType: !824, size: 64, offset: 13376)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1527, file: !1528, line: 1345, baseType: !825, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1527, file: !1528, line: 1346, baseType: !825, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1527, file: !1528, line: 1347, baseType: !825, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1527, file: !1528, line: 1348, baseType: !772, size: 128, align: 64, offset: 13504)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1527, file: !1528, line: 1358, baseType: !2440, size: 34816, offset: 13824)
!2440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2441, line: 485, size: 34816, elements: !2442)
!2441 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2442 = !{!2443, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2472, !2473, !2474, !2475, !2476, !2477, !2480, !2481, !2482}
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2440, file: !2441, line: 487, baseType: !2444, size: 192)
!2444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2445, size: 192, elements: !683)
!2445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2446, line: 16, size: 64, elements: !2447)
!2446 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2447 = !{!2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460}
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2445, file: !2446, line: 17, baseType: !484, size: 16)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2445, file: !2446, line: 18, baseType: !484, size: 16, offset: 16)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2445, file: !2446, line: 19, baseType: !484, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2445, file: !2446, line: 19, baseType: !484, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2445, file: !2446, line: 19, baseType: !484, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2445, file: !2446, line: 19, baseType: !484, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2445, file: !2446, line: 19, baseType: !484, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2445, file: !2446, line: 20, baseType: !484, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2445, file: !2446, line: 20, baseType: !484, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2445, file: !2446, line: 20, baseType: !484, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2445, file: !2446, line: 20, baseType: !484, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2445, file: !2446, line: 20, baseType: !484, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2445, file: !2446, line: 20, baseType: !484, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2440, file: !2441, line: 491, baseType: !731, size: 64, offset: 192)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2440, file: !2441, line: 495, baseType: !486, size: 16, offset: 256)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2440, file: !2441, line: 496, baseType: !486, size: 16, offset: 272)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2440, file: !2441, line: 497, baseType: !486, size: 16, offset: 288)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2440, file: !2441, line: 498, baseType: !486, size: 16, offset: 304)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2440, file: !2441, line: 502, baseType: !731, size: 64, offset: 320)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2440, file: !2441, line: 503, baseType: !731, size: 64, offset: 384)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2440, file: !2441, line: 514, baseType: !2469, size: 256, offset: 448)
!2469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2470, size: 256, elements: !1468)
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2441, line: 483, flags: DIFlagFwdDecl)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2440, file: !2441, line: 516, baseType: !731, size: 64, offset: 704)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2440, file: !2441, line: 518, baseType: !731, size: 64, offset: 768)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2440, file: !2441, line: 520, baseType: !731, size: 64, offset: 832)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2440, file: !2441, line: 521, baseType: !731, size: 64, offset: 896)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2440, file: !2441, line: 522, baseType: !731, size: 64, offset: 960)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2440, file: !2441, line: 528, baseType: !2478, size: 64, offset: 1024)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2441, line: 10, flags: DIFlagFwdDecl)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2440, file: !2441, line: 535, baseType: !731, size: 64, offset: 1088)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2440, file: !2441, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2440, file: !2441, line: 540, baseType: !2483, size: 33280, offset: 1536)
!2483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2484, line: 317, size: 33280, elements: !2485)
!2484 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2485 = !{!2486, !2487, !2488}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2483, file: !2484, line: 330, baseType: !7, size: 32)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2483, file: !2484, line: 337, baseType: !731, size: 64, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2483, file: !2484, line: 348, baseType: !2489, size: 32768, offset: 512)
!2489 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2484, line: 304, size: 32768, elements: !2490)
!2490 = !{!2491, !2504, !2543, !2593, !2606}
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2489, file: !2484, line: 305, baseType: !2492, size: 896)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2484, line: 12, size: 896, elements: !2493)
!2493 = !{!2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2503}
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2492, file: !2484, line: 13, baseType: !571, size: 32)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2492, file: !2484, line: 14, baseType: !571, size: 32, offset: 32)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2492, file: !2484, line: 15, baseType: !571, size: 32, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2492, file: !2484, line: 16, baseType: !571, size: 32, offset: 96)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2492, file: !2484, line: 17, baseType: !571, size: 32, offset: 128)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2492, file: !2484, line: 18, baseType: !571, size: 32, offset: 160)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2492, file: !2484, line: 19, baseType: !571, size: 32, offset: 192)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2492, file: !2484, line: 22, baseType: !2502, size: 640, offset: 224)
!2502 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 640, elements: !554)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2492, file: !2484, line: 25, baseType: !571, size: 32, offset: 864)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2489, file: !2484, line: 306, baseType: !2505, size: 4096, align: 128)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2484, line: 34, size: 4096, align: 128, elements: !2506)
!2506 = !{!2507, !2508, !2509, !2510, !2511, !2526, !2527, !2528, !2532, !2534, !2538}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2505, file: !2484, line: 35, baseType: !484, size: 16)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2505, file: !2484, line: 36, baseType: !484, size: 16, offset: 16)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2505, file: !2484, line: 37, baseType: !484, size: 16, offset: 32)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2505, file: !2484, line: 38, baseType: !484, size: 16, offset: 48)
!2511 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !2484, line: 39, baseType: !2512, size: 128, offset: 64)
!2512 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !2484, line: 39, size: 128, elements: !2513)
!2513 = !{!2514, !2519}
!2514 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2484, line: 40, baseType: !2515, size: 128)
!2515 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2512, file: !2484, line: 40, size: 128, elements: !2516)
!2516 = !{!2517, !2518}
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2515, file: !2484, line: 41, baseType: !824, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2515, file: !2484, line: 42, baseType: !824, size: 64, offset: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2484, line: 44, baseType: !2520, size: 128)
!2520 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2512, file: !2484, line: 44, size: 128, elements: !2521)
!2521 = !{!2522, !2523, !2524, !2525}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2520, file: !2484, line: 45, baseType: !571, size: 32)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2520, file: !2484, line: 46, baseType: !571, size: 32, offset: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2520, file: !2484, line: 47, baseType: !571, size: 32, offset: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2520, file: !2484, line: 48, baseType: !571, size: 32, offset: 96)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2505, file: !2484, line: 51, baseType: !571, size: 32, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2505, file: !2484, line: 52, baseType: !571, size: 32, offset: 224)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2505, file: !2484, line: 55, baseType: !2529, size: 1024, offset: 256)
!2529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 1024, elements: !2530)
!2530 = !{!2531}
!2531 = !DISubrange(count: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2505, file: !2484, line: 58, baseType: !2533, size: 2048, offset: 1280)
!2533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 2048, elements: !687)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2505, file: !2484, line: 60, baseType: !2535, size: 384, offset: 3328)
!2535 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 384, elements: !2536)
!2536 = !{!2537}
!2537 = !DISubrange(count: 12)
!2538 = !DIDerivedType(tag: DW_TAG_member, scope: !2505, file: !2484, line: 62, baseType: !2539, size: 384, offset: 3712)
!2539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2505, file: !2484, line: 62, size: 384, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2539, file: !2484, line: 63, baseType: !2535, size: 384)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2539, file: !2484, line: 64, baseType: !2535, size: 384)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2489, file: !2484, line: 307, baseType: !2544, size: 1088)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2484, line: 79, size: 1088, elements: !2545)
!2545 = !{!2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2592}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2544, file: !2484, line: 80, baseType: !571, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2544, file: !2484, line: 81, baseType: !571, size: 32, offset: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2544, file: !2484, line: 82, baseType: !571, size: 32, offset: 64)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2544, file: !2484, line: 83, baseType: !571, size: 32, offset: 96)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2544, file: !2484, line: 84, baseType: !571, size: 32, offset: 128)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2544, file: !2484, line: 85, baseType: !571, size: 32, offset: 160)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2544, file: !2484, line: 86, baseType: !571, size: 32, offset: 192)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2544, file: !2484, line: 88, baseType: !2502, size: 640, offset: 224)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2544, file: !2484, line: 89, baseType: !492, size: 8, offset: 864)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2544, file: !2484, line: 90, baseType: !492, size: 8, offset: 872)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2544, file: !2484, line: 91, baseType: !492, size: 8, offset: 880)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2544, file: !2484, line: 92, baseType: !492, size: 8, offset: 888)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2544, file: !2484, line: 93, baseType: !492, size: 8, offset: 896)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2544, file: !2484, line: 94, baseType: !492, size: 8, offset: 904)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2544, file: !2484, line: 95, baseType: !2561, size: 64, offset: 960)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2563, line: 11, size: 128, elements: !2564)
!2563 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2564 = !{!2565, !2566}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2562, file: !2563, line: 12, baseType: !717, size: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2562, file: !2563, line: 13, baseType: !2567, size: 64, offset: 64)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2569, line: 56, size: 1344, elements: !2570)
!2569 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2570 = !{!2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2568, file: !2569, line: 61, baseType: !731, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2568, file: !2569, line: 62, baseType: !731, size: 64, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2568, file: !2569, line: 63, baseType: !731, size: 64, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2568, file: !2569, line: 64, baseType: !731, size: 64, offset: 192)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2568, file: !2569, line: 65, baseType: !731, size: 64, offset: 256)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2568, file: !2569, line: 66, baseType: !731, size: 64, offset: 320)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2568, file: !2569, line: 68, baseType: !731, size: 64, offset: 384)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2568, file: !2569, line: 69, baseType: !731, size: 64, offset: 448)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2568, file: !2569, line: 70, baseType: !731, size: 64, offset: 512)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2568, file: !2569, line: 71, baseType: !731, size: 64, offset: 576)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2568, file: !2569, line: 72, baseType: !731, size: 64, offset: 640)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2568, file: !2569, line: 73, baseType: !731, size: 64, offset: 704)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2568, file: !2569, line: 74, baseType: !731, size: 64, offset: 768)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2568, file: !2569, line: 75, baseType: !731, size: 64, offset: 832)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2568, file: !2569, line: 76, baseType: !731, size: 64, offset: 896)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2568, file: !2569, line: 81, baseType: !731, size: 64, offset: 960)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2568, file: !2569, line: 83, baseType: !731, size: 64, offset: 1024)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2568, file: !2569, line: 84, baseType: !731, size: 64, offset: 1088)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2568, file: !2569, line: 85, baseType: !731, size: 64, offset: 1152)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2568, file: !2569, line: 86, baseType: !731, size: 64, offset: 1216)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2568, file: !2569, line: 87, baseType: !731, size: 64, offset: 1280)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2544, file: !2484, line: 96, baseType: !571, size: 32, offset: 1024)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2489, file: !2484, line: 308, baseType: !2594, size: 4608, align: 512)
!2594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2484, line: 289, size: 4608, align: 512, elements: !2595)
!2595 = !{!2596, !2597, !2604}
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2594, file: !2484, line: 290, baseType: !2505, size: 4096, align: 128)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2594, file: !2484, line: 291, baseType: !2598, size: 512, offset: 4096)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2484, line: 268, size: 512, elements: !2599)
!2599 = !{!2600, !2601, !2602}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2598, file: !2484, line: 269, baseType: !824, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2598, file: !2484, line: 270, baseType: !824, size: 64, offset: 64)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2598, file: !2484, line: 271, baseType: !2603, size: 384, offset: 128)
!2603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 384, elements: !621)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2594, file: !2484, line: 292, baseType: !2605, offset: 4608)
!2605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, elements: !2025)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2489, file: !2484, line: 309, baseType: !2607, size: 32768)
!2607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 32768, elements: !2608)
!2608 = !{!2609}
!2609 = !DISubrange(count: 4096)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1523, file: !1122, line: 378, baseType: !2611, size: 64, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1519, file: !1122, line: 384, baseType: !1806, size: 192, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1371, file: !1122, line: 500, baseType: !642, offset: 6656)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1371, file: !1122, line: 501, baseType: !2615, size: 64, offset: 6656)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2616, size: 64)
!2616 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1122, line: 387, flags: DIFlagFwdDecl)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1371, file: !1122, line: 516, baseType: !2015, size: 64, offset: 6720)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1371, file: !1122, line: 519, baseType: !759, size: 64, offset: 6784)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1371, file: !1122, line: 521, baseType: !2620, size: 64, offset: 6848)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1122, line: 521, flags: DIFlagFwdDecl)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1371, file: !1122, line: 545, baseType: !601, size: 32, offset: 6912)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1371, file: !1122, line: 548, baseType: !889, size: 8, offset: 6944)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1371, file: !1122, line: 550, baseType: !2625, offset: 6952)
!2625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2626, line: 142, elements: !656)
!2626 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1371, file: !1122, line: 554, baseType: !2259, size: 256, offset: 6976)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1371, file: !1122, line: 557, baseType: !571, size: 32, offset: 7232)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1368, file: !1122, line: 565, baseType: !2630, offset: 7296)
!2630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !731, elements: !2631)
!2631 = !{!2632}
!2632 = !DISubrange(count: -1)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1364, file: !1122, line: 151, baseType: !601, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1357, file: !1122, line: 156, baseType: !642, offset: 256)
!2635 = !DIDerivedType(tag: DW_TAG_member, scope: !1126, file: !1122, line: 159, baseType: !2636, size: 128)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1126, file: !1122, line: 159, size: 128, elements: !2637)
!2637 = !{!2638, !2641}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2636, file: !1122, line: 161, baseType: !2639, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2640, size: 64)
!2640 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !1122, line: 161, flags: DIFlagFwdDecl)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2636, file: !1122, line: 162, baseType: !438, size: 64, offset: 64)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1126, file: !1122, line: 176, baseType: !772, size: 128, align: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, scope: !1121, file: !1122, line: 179, baseType: !2644, size: 32, offset: 384)
!2644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1121, file: !1122, line: 179, size: 32, elements: !2645)
!2645 = !{!2646, !2647, !2648, !2649}
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2644, file: !1122, line: 184, baseType: !601, size: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2644, file: !1122, line: 192, baseType: !7, size: 32)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2644, file: !1122, line: 194, baseType: !7, size: 32)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2644, file: !1122, line: 195, baseType: !439, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1121, file: !1122, line: 199, baseType: !601, size: 32, offset: 416)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1056, file: !208, line: 1964, baseType: !2652, size: 64, offset: 1344)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!717, !998, !2655}
!2655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2656, size: 64)
!2656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2657, line: 12, size: 256, elements: !2658)
!2657 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2658 = !{!2659, !2660, !2661, !2662, !2663}
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2656, file: !2657, line: 13, baseType: !436, size: 32)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2656, file: !2657, line: 16, baseType: !439, size: 32, offset: 32)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2656, file: !2657, line: 23, baseType: !731, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2656, file: !2657, line: 30, baseType: !731, size: 64, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2656, file: !2657, line: 33, baseType: !2664, size: 64, offset: 192)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1122, line: 27, flags: DIFlagFwdDecl)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1056, file: !208, line: 1966, baseType: !2652, size: 64, offset: 1408)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !999, file: !208, line: 1424, baseType: !2668, size: 64, offset: 448)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2670)
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !202, line: 322, size: 704, elements: !2671)
!2671 = !{!2672, !2718, !2722, !2726, !2727, !2728, !2729, !2730, !2735, !2740, !2744}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2670, file: !202, line: 323, baseType: !2673, size: 64)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!439, !2676}
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !202, line: 294, size: 1600, elements: !2678)
!2678 = !{!2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2703, !2704, !2705}
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2677, file: !202, line: 295, baseType: !1038, size: 128)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2677, file: !202, line: 296, baseType: !612, size: 128, offset: 128)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2677, file: !202, line: 297, baseType: !612, size: 128, offset: 256)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2677, file: !202, line: 298, baseType: !612, size: 128, offset: 384)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2677, file: !202, line: 299, baseType: !1486, size: 192, offset: 512)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2677, file: !202, line: 300, baseType: !642, offset: 704)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2677, file: !202, line: 301, baseType: !601, size: 32, offset: 704)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2677, file: !202, line: 302, baseType: !998, size: 64, offset: 768)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2677, file: !202, line: 303, baseType: !2688, size: 64, offset: 832)
!2688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !202, line: 68, size: 64, elements: !2689)
!2689 = !{!2690, !2702}
!2690 = !DIDerivedType(tag: DW_TAG_member, scope: !2688, file: !202, line: 69, baseType: !2691, size: 32)
!2691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2688, file: !202, line: 69, size: 32, elements: !2692)
!2692 = !{!2693, !2694, !2695}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2691, file: !202, line: 70, baseType: !837, size: 32)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2691, file: !202, line: 71, baseType: !845, size: 32)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2691, file: !202, line: 72, baseType: !2696, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2697, line: 24, baseType: !2698)
!2697 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2697, line: 22, size: 32, elements: !2699)
!2699 = !{!2700}
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2698, file: !2697, line: 23, baseType: !2701, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2697, line: 20, baseType: !843)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2688, file: !202, line: 74, baseType: !201, size: 32, offset: 32)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2677, file: !202, line: 304, baseType: !930, size: 64, offset: 896)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2677, file: !202, line: 305, baseType: !731, size: 64, offset: 960)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2677, file: !202, line: 306, baseType: !2706, size: 576, offset: 1024)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !202, line: 205, size: 576, elements: !2707)
!2707 = !{!2708, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2706, file: !202, line: 206, baseType: !2709, size: 64)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !202, line: 66, baseType: !932)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2706, file: !202, line: 207, baseType: !2709, size: 64, offset: 64)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2706, file: !202, line: 208, baseType: !2709, size: 64, offset: 128)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2706, file: !202, line: 209, baseType: !2709, size: 64, offset: 192)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2706, file: !202, line: 210, baseType: !2709, size: 64, offset: 256)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2706, file: !202, line: 211, baseType: !2709, size: 64, offset: 320)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2706, file: !202, line: 212, baseType: !2709, size: 64, offset: 384)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2706, file: !202, line: 213, baseType: !938, size: 64, offset: 448)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2706, file: !202, line: 214, baseType: !938, size: 64, offset: 512)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2670, file: !202, line: 324, baseType: !2719, size: 64, offset: 64)
!2719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2720, size: 64)
!2720 = !DISubroutineType(types: !2721)
!2721 = !{!2676, !998, !439}
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2670, file: !202, line: 325, baseType: !2723, size: 64, offset: 128)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{null, !2676}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2670, file: !202, line: 326, baseType: !2673, size: 64, offset: 192)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2670, file: !202, line: 327, baseType: !2673, size: 64, offset: 256)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2670, file: !202, line: 328, baseType: !2673, size: 64, offset: 320)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2670, file: !202, line: 329, baseType: !1084, size: 64, offset: 384)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2670, file: !202, line: 332, baseType: !2731, size: 64, offset: 448)
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = !DISubroutineType(types: !2733)
!2733 = !{!2734, !831}
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2670, file: !202, line: 333, baseType: !2736, size: 64, offset: 512)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!439, !831, !2739}
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2696, size: 64)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2670, file: !202, line: 335, baseType: !2741, size: 64, offset: 576)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!439, !831, !2734}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2670, file: !202, line: 337, baseType: !2745, size: 64, offset: 640)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!439, !998, !2748}
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2688, size: 64)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !999, file: !208, line: 1425, baseType: !2750, size: 64, offset: 512)
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2752)
!2752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !202, line: 428, size: 704, elements: !2753)
!2753 = !{!2754, !2758, !2759, !2763, !2764, !2765, !2780, !2803, !2807, !2808, !2831}
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2752, file: !202, line: 429, baseType: !2755, size: 64)
!2755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2756, size: 64)
!2756 = !DISubroutineType(types: !2757)
!2757 = !{!439, !998, !439, !439, !948}
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2752, file: !202, line: 430, baseType: !1084, size: 64, offset: 64)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2752, file: !202, line: 431, baseType: !2760, size: 64, offset: 128)
!2760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2761, size: 64)
!2761 = !DISubroutineType(types: !2762)
!2762 = !{!439, !998, !7}
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2752, file: !202, line: 432, baseType: !2760, size: 64, offset: 192)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2752, file: !202, line: 433, baseType: !1084, size: 64, offset: 256)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2752, file: !202, line: 434, baseType: !2766, size: 64, offset: 320)
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DISubroutineType(types: !2768)
!2768 = !{!439, !998, !439, !2769}
!2769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2770, size: 64)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !202, line: 415, size: 256, elements: !2771)
!2771 = !{!2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2770, file: !202, line: 416, baseType: !439, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2770, file: !202, line: 417, baseType: !7, size: 32, offset: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2770, file: !202, line: 418, baseType: !7, size: 32, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2770, file: !202, line: 420, baseType: !7, size: 32, offset: 96)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2770, file: !202, line: 421, baseType: !7, size: 32, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2770, file: !202, line: 422, baseType: !7, size: 32, offset: 160)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2770, file: !202, line: 423, baseType: !7, size: 32, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2770, file: !202, line: 424, baseType: !7, size: 32, offset: 224)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2752, file: !202, line: 435, baseType: !2781, size: 64, offset: 384)
!2781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2782, size: 64)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!439, !998, !2688, !2784}
!2784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2785, size: 64)
!2785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !202, line: 343, size: 960, elements: !2786)
!2786 = !{!2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802}
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2785, file: !202, line: 344, baseType: !439, size: 32)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2785, file: !202, line: 345, baseType: !824, size: 64, offset: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2785, file: !202, line: 346, baseType: !824, size: 64, offset: 128)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2785, file: !202, line: 347, baseType: !824, size: 64, offset: 192)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2785, file: !202, line: 348, baseType: !824, size: 64, offset: 256)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2785, file: !202, line: 349, baseType: !824, size: 64, offset: 320)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2785, file: !202, line: 350, baseType: !824, size: 64, offset: 384)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2785, file: !202, line: 351, baseType: !1172, size: 64, offset: 448)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2785, file: !202, line: 353, baseType: !1172, size: 64, offset: 512)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2785, file: !202, line: 354, baseType: !439, size: 32, offset: 576)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2785, file: !202, line: 355, baseType: !439, size: 32, offset: 608)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2785, file: !202, line: 356, baseType: !824, size: 64, offset: 640)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2785, file: !202, line: 357, baseType: !824, size: 64, offset: 704)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2785, file: !202, line: 358, baseType: !824, size: 64, offset: 768)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2785, file: !202, line: 359, baseType: !1172, size: 64, offset: 832)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2785, file: !202, line: 360, baseType: !439, size: 32, offset: 896)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2752, file: !202, line: 436, baseType: !2804, size: 64, offset: 448)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!439, !998, !2748, !2784}
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2752, file: !202, line: 438, baseType: !2781, size: 64, offset: 512)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2752, file: !202, line: 439, baseType: !2809, size: 64, offset: 576)
!2809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2810 = !DISubroutineType(types: !2811)
!2811 = !{!439, !998, !2812}
!2812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2813, size: 64)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !202, line: 409, size: 1408, elements: !2814)
!2814 = !{!2815, !2816}
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2813, file: !202, line: 410, baseType: !7, size: 32)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2813, file: !202, line: 411, baseType: !2817, size: 1344, offset: 64)
!2817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2818, size: 1344, elements: !683)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !202, line: 395, size: 448, elements: !2819)
!2819 = !{!2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2830}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2818, file: !202, line: 396, baseType: !7, size: 32)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2818, file: !202, line: 397, baseType: !7, size: 32, offset: 32)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2818, file: !202, line: 399, baseType: !7, size: 32, offset: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2818, file: !202, line: 400, baseType: !7, size: 32, offset: 96)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2818, file: !202, line: 401, baseType: !7, size: 32, offset: 128)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2818, file: !202, line: 402, baseType: !7, size: 32, offset: 160)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2818, file: !202, line: 403, baseType: !7, size: 32, offset: 192)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2818, file: !202, line: 404, baseType: !826, size: 64, offset: 256)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2818, file: !202, line: 405, baseType: !2829, size: 64, offset: 320)
!2829 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !437, line: 126, baseType: !824)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2818, file: !202, line: 406, baseType: !2829, size: 64, offset: 384)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2752, file: !202, line: 440, baseType: !2760, size: 64, offset: 640)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !999, file: !208, line: 1426, baseType: !2833, size: 64, offset: 576)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2835)
!2835 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !208, line: 49, flags: DIFlagFwdDecl)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !999, file: !208, line: 1427, baseType: !731, size: 64, offset: 640)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !999, file: !208, line: 1428, baseType: !731, size: 64, offset: 704)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !999, file: !208, line: 1429, baseType: !731, size: 64, offset: 768)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !999, file: !208, line: 1430, baseType: !789, size: 64, offset: 832)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !999, file: !208, line: 1431, baseType: !1162, size: 256, offset: 896)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !999, file: !208, line: 1432, baseType: !439, size: 32, offset: 1152)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !999, file: !208, line: 1433, baseType: !601, size: 32, offset: 1184)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !999, file: !208, line: 1437, baseType: !2844, size: 64, offset: 1216)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2847)
!2847 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !208, line: 1437, flags: DIFlagFwdDecl)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !999, file: !208, line: 1449, baseType: !2849, size: 64, offset: 1280)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !805, line: 34, size: 64, elements: !2850)
!2850 = !{!2851}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2849, file: !805, line: 35, baseType: !808, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !999, file: !208, line: 1450, baseType: !612, size: 128, offset: 1344)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !999, file: !208, line: 1451, baseType: !2854, size: 64, offset: 1472)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !208, line: 699, flags: DIFlagFwdDecl)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !999, file: !208, line: 1452, baseType: !2225, size: 64, offset: 1536)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !999, file: !208, line: 1453, baseType: !2858, size: 64, offset: 1600)
!2858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2859, size: 64)
!2859 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !208, line: 1453, flags: DIFlagFwdDecl)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !999, file: !208, line: 1454, baseType: !1038, size: 128, offset: 1664)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !999, file: !208, line: 1455, baseType: !7, size: 32, offset: 1792)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !999, file: !208, line: 1456, baseType: !2863, size: 2432, offset: 1856)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !202, line: 518, size: 2432, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2869, !2901}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2863, file: !202, line: 519, baseType: !7, size: 32)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2863, file: !202, line: 520, baseType: !1162, size: 256, offset: 64)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2863, file: !202, line: 521, baseType: !2868, size: 192, offset: 320)
!2868 = !DICompositeType(tag: DW_TAG_array_type, baseType: !831, size: 192, elements: !683)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2863, file: !202, line: 522, baseType: !2870, size: 1728, offset: 512)
!2870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2871, size: 1728, elements: !683)
!2871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !202, line: 222, size: 576, elements: !2872)
!2872 = !{!2873, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900}
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2871, file: !202, line: 223, baseType: !2874, size: 64)
!2874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2875, size: 64)
!2875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !202, line: 443, size: 256, elements: !2876)
!2876 = !{!2877, !2878, !2891, !2892}
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2875, file: !202, line: 444, baseType: !439, size: 32)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2875, file: !202, line: 445, baseType: !2879, size: 64, offset: 64)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2881)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !202, line: 310, size: 512, elements: !2882)
!2882 = !{!2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2881, file: !202, line: 311, baseType: !1084, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2881, file: !202, line: 312, baseType: !1084, size: 64, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2881, file: !202, line: 313, baseType: !1084, size: 64, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2881, file: !202, line: 314, baseType: !1084, size: 64, offset: 192)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2881, file: !202, line: 315, baseType: !2673, size: 64, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2881, file: !202, line: 316, baseType: !2673, size: 64, offset: 320)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2881, file: !202, line: 317, baseType: !2673, size: 64, offset: 384)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2881, file: !202, line: 318, baseType: !2745, size: 64, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2875, file: !202, line: 446, baseType: !447, size: 64, offset: 128)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2875, file: !202, line: 447, baseType: !2874, size: 64, offset: 192)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2871, file: !202, line: 224, baseType: !439, size: 32, offset: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2871, file: !202, line: 226, baseType: !612, size: 128, offset: 128)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2871, file: !202, line: 227, baseType: !731, size: 64, offset: 256)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2871, file: !202, line: 228, baseType: !7, size: 32, offset: 320)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2871, file: !202, line: 229, baseType: !7, size: 32, offset: 352)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2871, file: !202, line: 230, baseType: !2709, size: 64, offset: 384)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2871, file: !202, line: 231, baseType: !2709, size: 64, offset: 448)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2871, file: !202, line: 232, baseType: !438, size: 64, offset: 512)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2863, file: !202, line: 523, baseType: !2902, size: 192, offset: 2240)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2879, size: 192, elements: !683)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !999, file: !208, line: 1458, baseType: !2904, size: 2112, offset: 4288)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !208, line: 1410, size: 2112, elements: !2905)
!2905 = !{!2906, !2907, !2908}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2904, file: !208, line: 1411, baseType: !439, size: 32)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2904, file: !208, line: 1412, baseType: !1785, size: 128, offset: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2904, file: !208, line: 1413, baseType: !2909, size: 1920, offset: 192)
!2909 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2910, size: 1920, elements: !683)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2911, line: 12, size: 640, elements: !2912)
!2911 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2912 = !{!2913, !2921, !2922, !2927, !2928}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2910, file: !2911, line: 13, baseType: !2914, size: 320)
!2914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2915, line: 17, size: 320, elements: !2916)
!2915 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2916 = !{!2917, !2918, !2919, !2920}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2914, file: !2915, line: 18, baseType: !439, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2914, file: !2915, line: 19, baseType: !439, size: 32, offset: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2914, file: !2915, line: 20, baseType: !1785, size: 128, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2914, file: !2915, line: 22, baseType: !772, size: 128, align: 64, offset: 192)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2910, file: !2911, line: 14, baseType: !514, size: 64, offset: 320)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2910, file: !2911, line: 15, baseType: !2923, size: 64, offset: 384)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2924, line: 16, size: 64, elements: !2925)
!2924 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2925 = !{!2926}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2923, file: !2924, line: 17, baseType: !1526, size: 64)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2910, file: !2911, line: 16, baseType: !1785, size: 128, offset: 448)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2910, file: !2911, line: 17, baseType: !601, size: 32, offset: 576)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !999, file: !208, line: 1465, baseType: !438, size: 64, offset: 6400)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !999, file: !208, line: 1468, baseType: !571, size: 32, offset: 6464)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !999, file: !208, line: 1470, baseType: !938, size: 64, offset: 6528)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !999, file: !208, line: 1471, baseType: !938, size: 64, offset: 6592)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !999, file: !208, line: 1473, baseType: !572, size: 32, offset: 6656)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !999, file: !208, line: 1474, baseType: !2935, size: 64, offset: 6720)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !208, line: 603, flags: DIFlagFwdDecl)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !999, file: !208, line: 1477, baseType: !2938, size: 256, offset: 6784)
!2938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 256, elements: !2530)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !999, file: !208, line: 1478, baseType: !2940, size: 128, offset: 7040)
!2940 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2941, line: 18, baseType: !2942)
!2941 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2942 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2941, line: 16, size: 128, elements: !2943)
!2943 = !{!2944}
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2942, file: !2941, line: 17, baseType: !2945, size: 128)
!2945 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 128, elements: !2037)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !999, file: !208, line: 1480, baseType: !7, size: 32, offset: 7168)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !999, file: !208, line: 1481, baseType: !2948, size: 32, offset: 7200)
!2948 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !437, line: 150, baseType: !7)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !999, file: !208, line: 1487, baseType: !1486, size: 192, offset: 7232)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !999, file: !208, line: 1493, baseType: !458, size: 64, offset: 7424)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !999, file: !208, line: 1495, baseType: !2952, size: 64, offset: 7488)
!2952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2953, size: 64)
!2953 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2954)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !787, line: 135, size: 1024, align: 512, elements: !2955)
!2955 = !{!2956, !2960, !2961, !2968, !2974, !2978, !2982, !2986, !2987, !2991, !2995, !3000, !3004}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2954, file: !787, line: 136, baseType: !2957, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!439, !789, !7}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2954, file: !787, line: 137, baseType: !2957, size: 64, offset: 64)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2954, file: !787, line: 138, baseType: !2962, size: 64, offset: 128)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!439, !2965, !2967}
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !790)
!2967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2954, file: !787, line: 139, baseType: !2969, size: 64, offset: 192)
!2969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2970, size: 64)
!2970 = !DISubroutineType(types: !2971)
!2971 = !{!439, !2965, !7, !458, !2972}
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2954, file: !787, line: 141, baseType: !2975, size: 64, offset: 256)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!439, !2965}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2954, file: !787, line: 142, baseType: !2979, size: 64, offset: 320)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!439, !789}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2954, file: !787, line: 143, baseType: !2983, size: 64, offset: 384)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{null, !789}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2954, file: !787, line: 144, baseType: !2983, size: 64, offset: 448)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2954, file: !787, line: 145, baseType: !2988, size: 64, offset: 512)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{null, !789, !831}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2954, file: !787, line: 146, baseType: !2992, size: 64, offset: 576)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{!477, !789, !477, !439}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2954, file: !787, line: 147, baseType: !2996, size: 64, offset: 640)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!785, !2999}
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2954, file: !787, line: 148, baseType: !3001, size: 64, offset: 704)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!439, !948, !889}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2954, file: !787, line: 149, baseType: !3005, size: 64, offset: 768)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!789, !789, !3008}
!3008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3009, size: 64)
!3009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !832)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !999, file: !208, line: 1500, baseType: !439, size: 32, offset: 7552)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !999, file: !208, line: 1502, baseType: !3012, size: 448, offset: 7616)
!3012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2657, line: 60, size: 448, elements: !3013)
!3013 = !{!3014, !3019, !3020, !3021, !3022, !3023, !3024}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3012, file: !2657, line: 61, baseType: !3015, size: 64)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!731, !3018, !2655}
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3012, file: !2657, line: 63, baseType: !3015, size: 64, offset: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3012, file: !2657, line: 66, baseType: !717, size: 64, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3012, file: !2657, line: 67, baseType: !439, size: 32, offset: 192)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3012, file: !2657, line: 68, baseType: !7, size: 32, offset: 224)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3012, file: !2657, line: 71, baseType: !612, size: 128, offset: 256)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3012, file: !2657, line: 77, baseType: !3025, size: 64, offset: 384)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !999, file: !208, line: 1505, baseType: !1166, size: 64, offset: 8064)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !999, file: !208, line: 1508, baseType: !1166, size: 64, offset: 8128)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !999, file: !208, line: 1511, baseType: !439, size: 32, offset: 8192)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !999, file: !208, line: 1514, baseType: !1302, size: 32, offset: 8224)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !999, file: !208, line: 1517, baseType: !3031, size: 64, offset: 8256)
!3031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3032 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2260, line: 18, flags: DIFlagFwdDecl)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !999, file: !208, line: 1518, baseType: !1034, size: 64, offset: 8320)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !999, file: !208, line: 1525, baseType: !2015, size: 64, offset: 8384)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !999, file: !208, line: 1532, baseType: !3036, size: 64, offset: 8448)
!3036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3037, line: 52, size: 64, elements: !3038)
!3037 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3038 = !{!3039}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3036, file: !3037, line: 53, baseType: !3040, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3037, line: 40, size: 256, elements: !3042)
!3042 = !{!3043, !3044, !3049}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3041, file: !3037, line: 42, baseType: !642)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3041, file: !3037, line: 44, baseType: !3045, size: 192)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3037, line: 28, size: 192, elements: !3046)
!3046 = !{!3047, !3048}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3045, file: !3037, line: 29, baseType: !612, size: 128)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3045, file: !3037, line: 31, baseType: !717, size: 64, offset: 128)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3041, file: !3037, line: 49, baseType: !717, size: 64, offset: 192)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !999, file: !208, line: 1533, baseType: !3036, size: 64, offset: 8512)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !999, file: !208, line: 1534, baseType: !772, size: 128, align: 64, offset: 8576)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !999, file: !208, line: 1535, baseType: !2259, size: 256, offset: 8704)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !999, file: !208, line: 1537, baseType: !1486, size: 192, offset: 8960)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !999, file: !208, line: 1542, baseType: !439, size: 32, offset: 9152)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !999, file: !208, line: 1545, baseType: !642, offset: 9184)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !999, file: !208, line: 1546, baseType: !612, size: 128, offset: 9216)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !999, file: !208, line: 1548, baseType: !642, offset: 9344)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !999, file: !208, line: 1549, baseType: !612, size: 128, offset: 9344)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !832, file: !208, line: 624, baseType: !1133, size: 64, offset: 256)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !832, file: !208, line: 631, baseType: !731, size: 64, offset: 320)
!3061 = !DIDerivedType(tag: DW_TAG_member, scope: !832, file: !208, line: 639, baseType: !3062, size: 32, offset: 384)
!3062 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !832, file: !208, line: 639, size: 32, elements: !3063)
!3063 = !{!3064, !3066}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3062, file: !208, line: 640, baseType: !3065, size: 32)
!3065 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3062, file: !208, line: 641, baseType: !7, size: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !832, file: !208, line: 643, baseType: !912, size: 32, offset: 416)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !832, file: !208, line: 644, baseType: !930, size: 64, offset: 448)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !832, file: !208, line: 645, baseType: !934, size: 128, offset: 512)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !832, file: !208, line: 646, baseType: !934, size: 128, offset: 640)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !832, file: !208, line: 647, baseType: !934, size: 128, offset: 768)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !832, file: !208, line: 648, baseType: !642, offset: 896)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !832, file: !208, line: 649, baseType: !486, size: 16, offset: 896)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !832, file: !208, line: 650, baseType: !492, size: 8, offset: 912)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !832, file: !208, line: 651, baseType: !492, size: 8, offset: 920)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !832, file: !208, line: 652, baseType: !2829, size: 64, offset: 960)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !832, file: !208, line: 659, baseType: !731, size: 64, offset: 1024)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !832, file: !208, line: 660, baseType: !1162, size: 256, offset: 1088)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !832, file: !208, line: 662, baseType: !731, size: 64, offset: 1344)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !832, file: !208, line: 663, baseType: !731, size: 64, offset: 1408)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !832, file: !208, line: 665, baseType: !1038, size: 128, offset: 1472)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !832, file: !208, line: 666, baseType: !612, size: 128, offset: 1600)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !832, file: !208, line: 675, baseType: !612, size: 128, offset: 1728)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !832, file: !208, line: 676, baseType: !612, size: 128, offset: 1856)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !832, file: !208, line: 677, baseType: !612, size: 128, offset: 1984)
!3086 = !DIDerivedType(tag: DW_TAG_member, scope: !832, file: !208, line: 678, baseType: !3087, size: 128, offset: 2112)
!3087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !832, file: !208, line: 678, size: 128, elements: !3088)
!3088 = !{!3089, !3090}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3087, file: !208, line: 679, baseType: !1034, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3087, file: !208, line: 680, baseType: !772, size: 128, align: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !832, file: !208, line: 682, baseType: !1168, size: 64, offset: 2240)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !832, file: !208, line: 683, baseType: !1168, size: 64, offset: 2304)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !832, file: !208, line: 684, baseType: !601, size: 32, offset: 2368)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !832, file: !208, line: 685, baseType: !601, size: 32, offset: 2400)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !832, file: !208, line: 686, baseType: !601, size: 32, offset: 2432)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !832, file: !208, line: 688, baseType: !601, size: 32, offset: 2464)
!3097 = !DIDerivedType(tag: DW_TAG_member, scope: !832, file: !208, line: 690, baseType: !3098, size: 64, offset: 2496)
!3098 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !832, file: !208, line: 690, size: 64, elements: !3099)
!3099 = !{!3100, !3332}
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3098, file: !208, line: 691, baseType: !3101, size: 64)
!3101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3102, size: 64)
!3102 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3103)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !208, line: 1822, size: 2048, elements: !3104)
!3104 = !{!3105, !3106, !3110, !3115, !3119, !3120, !3121, !3125, !3138, !3139, !3156, !3160, !3161, !3165, !3166, !3170, !3175, !3176, !3180, !3184, !3292, !3296, !3297, !3301, !3302, !3306, !3310, !3315, !3319, !3323, !3327, !3331}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3103, file: !208, line: 1823, baseType: !447, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3103, file: !208, line: 1824, baseType: !3107, size: 64, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3108, size: 64)
!3108 = !DISubroutineType(types: !3109)
!3109 = !{!930, !759, !930, !439}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3103, file: !208, line: 1825, baseType: !3111, size: 64, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3112, size: 64)
!3112 = !DISubroutineType(types: !3113)
!3113 = !{!713, !759, !477, !728, !3114}
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3103, file: !208, line: 1826, baseType: !3116, size: 64, offset: 192)
!3116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3117, size: 64)
!3117 = !DISubroutineType(types: !3118)
!3118 = !{!713, !759, !458, !728, !3114}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3103, file: !208, line: 1827, baseType: !1239, size: 64, offset: 256)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3103, file: !208, line: 1828, baseType: !1239, size: 64, offset: 320)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3103, file: !208, line: 1829, baseType: !3122, size: 64, offset: 384)
!3122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3123, size: 64)
!3123 = !DISubroutineType(types: !3124)
!3124 = !{!439, !1242, !889}
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3103, file: !208, line: 1830, baseType: !3126, size: 64, offset: 448)
!3126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3127, size: 64)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!439, !759, !3129}
!3129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3130, size: 64)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !208, line: 1776, size: 128, elements: !3131)
!3131 = !{!3132, !3137}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3130, file: !208, line: 1777, baseType: !3133, size: 64)
!3133 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !208, line: 1773, baseType: !3134)
!3134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3135, size: 64)
!3135 = !DISubroutineType(types: !3136)
!3136 = !{!439, !3129, !458, !439, !930, !824, !7}
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3130, file: !208, line: 1778, baseType: !930, size: 64, offset: 64)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3103, file: !208, line: 1831, baseType: !3126, size: 64, offset: 512)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3103, file: !208, line: 1832, baseType: !3140, size: 64, offset: 576)
!3140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3141, size: 64)
!3141 = !DISubroutineType(types: !3142)
!3142 = !{!3143, !759, !3145}
!3143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3144, line: 52, baseType: !7)
!3144 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3147, line: 43, size: 128, elements: !3148)
!3147 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3148 = !{!3149, !3155}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3146, file: !3147, line: 44, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3147, line: 37, baseType: !3151)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{null, !759, !3154, !3145}
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3146, file: !3147, line: 45, baseType: !3143, size: 32, offset: 64)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3103, file: !208, line: 1833, baseType: !3157, size: 64, offset: 640)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{!717, !759, !7, !731}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3103, file: !208, line: 1834, baseType: !3157, size: 64, offset: 704)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3103, file: !208, line: 1835, baseType: !3162, size: 64, offset: 768)
!3162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3163, size: 64)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!439, !759, !1374}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3103, file: !208, line: 1836, baseType: !731, size: 64, offset: 832)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3103, file: !208, line: 1837, baseType: !3167, size: 64, offset: 896)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DISubroutineType(types: !3169)
!3169 = !{!439, !831, !759}
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3103, file: !208, line: 1838, baseType: !3171, size: 64, offset: 960)
!3171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3172, size: 64)
!3172 = !DISubroutineType(types: !3173)
!3173 = !{!439, !759, !3174}
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !208, line: 1007, baseType: !438)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3103, file: !208, line: 1839, baseType: !3167, size: 64, offset: 1024)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3103, file: !208, line: 1840, baseType: !3177, size: 64, offset: 1088)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = !DISubroutineType(types: !3179)
!3179 = !{!439, !759, !930, !930, !439}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3103, file: !208, line: 1841, baseType: !3181, size: 64, offset: 1152)
!3181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3182, size: 64)
!3182 = !DISubroutineType(types: !3183)
!3183 = !{!439, !439, !759, !439}
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3103, file: !208, line: 1842, baseType: !3185, size: 64, offset: 1216)
!3185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!3186 = !DISubroutineType(types: !3187)
!3187 = !{!439, !759, !439, !3188}
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !208, line: 1062, size: 1664, elements: !3190)
!3190 = !{!3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3222, !3223, !3224, !3237, !3268}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3189, file: !208, line: 1063, baseType: !3188, size: 64)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3189, file: !208, line: 1064, baseType: !612, size: 128, offset: 64)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3189, file: !208, line: 1065, baseType: !1038, size: 128, offset: 192)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3189, file: !208, line: 1066, baseType: !612, size: 128, offset: 320)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3189, file: !208, line: 1069, baseType: !612, size: 128, offset: 448)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3189, file: !208, line: 1072, baseType: !3174, size: 64, offset: 576)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3189, file: !208, line: 1073, baseType: !7, size: 32, offset: 640)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3189, file: !208, line: 1074, baseType: !494, size: 8, offset: 672)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3189, file: !208, line: 1075, baseType: !7, size: 32, offset: 704)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3189, file: !208, line: 1076, baseType: !439, size: 32, offset: 736)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3189, file: !208, line: 1077, baseType: !1785, size: 128, offset: 768)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3189, file: !208, line: 1078, baseType: !759, size: 64, offset: 896)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3189, file: !208, line: 1079, baseType: !930, size: 64, offset: 960)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3189, file: !208, line: 1080, baseType: !930, size: 64, offset: 1024)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3189, file: !208, line: 1082, baseType: !3206, size: 64, offset: 1088)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !208, line: 1314, size: 320, elements: !3208)
!3208 = !{!3209, !3217, !3218, !3219, !3220, !3221}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3207, file: !208, line: 1315, baseType: !3210)
!3210 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3211, line: 20, baseType: !3212)
!3211 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3212 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3211, line: 11, elements: !3213)
!3213 = !{!3214}
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3212, file: !3211, line: 12, baseType: !3215)
!3215 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !654, line: 33, baseType: !3216)
!3216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !654, line: 31, elements: !656)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3207, file: !208, line: 1316, baseType: !439, size: 32)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3207, file: !208, line: 1317, baseType: !439, size: 32, offset: 32)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3207, file: !208, line: 1318, baseType: !3206, size: 64, offset: 64)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3207, file: !208, line: 1319, baseType: !759, size: 64, offset: 128)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3207, file: !208, line: 1320, baseType: !772, size: 128, align: 64, offset: 192)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3189, file: !208, line: 1084, baseType: !731, size: 64, offset: 1152)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3189, file: !208, line: 1085, baseType: !731, size: 64, offset: 1216)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3189, file: !208, line: 1087, baseType: !3225, size: 64, offset: 1280)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3227)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !208, line: 1011, size: 128, elements: !3228)
!3228 = !{!3229, !3233}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3227, file: !208, line: 1012, baseType: !3230, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DISubroutineType(types: !3232)
!3232 = !{null, !3188, !3188}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3227, file: !208, line: 1013, baseType: !3234, size: 64, offset: 64)
!3234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3235, size: 64)
!3235 = !DISubroutineType(types: !3236)
!3236 = !{null, !3188}
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3189, file: !208, line: 1088, baseType: !3238, size: 64, offset: 1344)
!3238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3240)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !208, line: 1016, size: 512, elements: !3241)
!3241 = !{!3242, !3246, !3250, !3251, !3255, !3259, !3263, !3267}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3240, file: !208, line: 1017, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!3174, !3174}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3240, file: !208, line: 1018, baseType: !3247, size: 64, offset: 64)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{null, !3174}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3240, file: !208, line: 1019, baseType: !3234, size: 64, offset: 128)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3240, file: !208, line: 1020, baseType: !3252, size: 64, offset: 192)
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{!439, !3188, !439}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3240, file: !208, line: 1021, baseType: !3256, size: 64, offset: 256)
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DISubroutineType(types: !3258)
!3258 = !{!889, !3188}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3240, file: !208, line: 1022, baseType: !3260, size: 64, offset: 320)
!3260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!439, !3188, !439, !615}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3240, file: !208, line: 1023, baseType: !3264, size: 64, offset: 384)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3265, size: 64)
!3265 = !DISubroutineType(types: !3266)
!3266 = !{null, !3188, !1216}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3240, file: !208, line: 1024, baseType: !3256, size: 64, offset: 448)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3189, file: !208, line: 1097, baseType: !3269, size: 256, offset: 1408)
!3269 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3189, file: !208, line: 1089, size: 256, elements: !3270)
!3270 = !{!3271, !3280, !3286}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3269, file: !208, line: 1090, baseType: !3272, size: 256)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3273, line: 10, size: 256, elements: !3274)
!3273 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3274 = !{!3275, !3276, !3279}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3272, file: !3273, line: 11, baseType: !571, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3272, file: !3273, line: 12, baseType: !3277, size: 64, offset: 64)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3273, line: 5, flags: DIFlagFwdDecl)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3272, file: !3273, line: 13, baseType: !612, size: 128, offset: 128)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3269, file: !208, line: 1091, baseType: !3281, size: 64)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3273, line: 17, size: 64, elements: !3282)
!3282 = !{!3283}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3281, file: !3273, line: 18, baseType: !3284, size: 64)
!3284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3285, size: 64)
!3285 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3273, line: 16, flags: DIFlagFwdDecl)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3269, file: !208, line: 1096, baseType: !3287, size: 192)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3269, file: !208, line: 1092, size: 192, elements: !3288)
!3288 = !{!3289, !3290, !3291}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3287, file: !208, line: 1093, baseType: !612, size: 128)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3287, file: !208, line: 1094, baseType: !439, size: 32, offset: 128)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3287, file: !208, line: 1095, baseType: !7, size: 32, offset: 160)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3103, file: !208, line: 1843, baseType: !3293, size: 64, offset: 1280)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{!713, !759, !1120, !439, !728, !3114, !439}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3103, file: !208, line: 1844, baseType: !1414, size: 64, offset: 1344)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3103, file: !208, line: 1845, baseType: !3298, size: 64, offset: 1408)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{!439, !439}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3103, file: !208, line: 1846, baseType: !3185, size: 64, offset: 1472)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3103, file: !208, line: 1847, baseType: !3303, size: 64, offset: 1536)
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DISubroutineType(types: !3305)
!3305 = !{!713, !2400, !759, !3114, !728, !7}
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3103, file: !208, line: 1848, baseType: !3307, size: 64, offset: 1600)
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DISubroutineType(types: !3309)
!3309 = !{!713, !759, !3114, !2400, !728, !7}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3103, file: !208, line: 1849, baseType: !3311, size: 64, offset: 1664)
!3311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3312, size: 64)
!3312 = !DISubroutineType(types: !3313)
!3313 = !{!439, !759, !717, !3314, !1216}
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3103, file: !208, line: 1850, baseType: !3316, size: 64, offset: 1728)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DISubroutineType(types: !3318)
!3318 = !{!717, !759, !439, !930, !930}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3103, file: !208, line: 1852, baseType: !3320, size: 64, offset: 1792)
!3320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3321, size: 64)
!3321 = !DISubroutineType(types: !3322)
!3322 = !{null, !1110, !759}
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3103, file: !208, line: 1856, baseType: !3324, size: 64, offset: 1856)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!713, !759, !930, !759, !930, !728, !7}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3103, file: !208, line: 1858, baseType: !3328, size: 64, offset: 1920)
!3328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3329, size: 64)
!3329 = !DISubroutineType(types: !3330)
!3330 = !{!930, !759, !930, !759, !930, !930, !7}
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3103, file: !208, line: 1861, baseType: !3177, size: 64, offset: 1984)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3098, file: !208, line: 692, baseType: !1063, size: 64)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !832, file: !208, line: 694, baseType: !3334, size: 64, offset: 2560)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !208, line: 1100, size: 384, elements: !3336)
!3336 = !{!3337, !3338, !3339, !3340}
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3335, file: !208, line: 1101, baseType: !642)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3335, file: !208, line: 1102, baseType: !612, size: 128)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3335, file: !208, line: 1103, baseType: !612, size: 128, offset: 128)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3335, file: !208, line: 1104, baseType: !612, size: 128, offset: 256)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !832, file: !208, line: 695, baseType: !1134, size: 1216, align: 64, offset: 2624)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !832, file: !208, line: 696, baseType: !612, size: 128, offset: 3840)
!3343 = !DIDerivedType(tag: DW_TAG_member, scope: !832, file: !208, line: 697, baseType: !3344, size: 64, offset: 3968)
!3344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !832, file: !208, line: 697, size: 64, elements: !3345)
!3345 = !{!3346, !3347, !3348, !3359, !3360}
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3344, file: !208, line: 698, baseType: !2400, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3344, file: !208, line: 699, baseType: !2854, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3344, file: !208, line: 700, baseType: !3349, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3350, size: 64)
!3350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3351, line: 14, size: 832, elements: !3352)
!3351 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3352 = !{!3353, !3354, !3355, !3356, !3357, !3358}
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3350, file: !3351, line: 15, baseType: !629, size: 512)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3350, file: !3351, line: 16, baseType: !447, size: 64, offset: 512)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3350, file: !3351, line: 17, baseType: !3101, size: 64, offset: 576)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3350, file: !3351, line: 18, baseType: !612, size: 128, offset: 640)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3350, file: !3351, line: 19, baseType: !912, size: 32, offset: 768)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3350, file: !3351, line: 20, baseType: !7, size: 32, offset: 800)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3344, file: !208, line: 701, baseType: !477, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3344, file: !208, line: 702, baseType: !7, size: 32)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !832, file: !208, line: 705, baseType: !572, size: 32, offset: 4032)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !832, file: !208, line: 708, baseType: !572, size: 32, offset: 4064)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !832, file: !208, line: 709, baseType: !2935, size: 64, offset: 4096)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !832, file: !208, line: 720, baseType: !438, size: 64, offset: 4160)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !790, file: !787, line: 98, baseType: !3366, size: 256, offset: 448)
!3366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !494, size: 256, elements: !2530)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !790, file: !787, line: 101, baseType: !3368, size: 32, offset: 704)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3369, line: 25, size: 32, elements: !3370)
!3369 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3370 = !{!3371}
!3371 = !DIDerivedType(tag: DW_TAG_member, scope: !3368, file: !3369, line: 26, baseType: !3372, size: 32)
!3372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3368, file: !3369, line: 26, size: 32, elements: !3373)
!3373 = !{!3374}
!3374 = !DIDerivedType(tag: DW_TAG_member, scope: !3372, file: !3369, line: 30, baseType: !3375, size: 32)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3372, file: !3369, line: 30, size: 32, elements: !3376)
!3376 = !{!3377, !3378}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3375, file: !3369, line: 31, baseType: !642)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3375, file: !3369, line: 32, baseType: !439, size: 32)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !790, file: !787, line: 102, baseType: !2952, size: 64, offset: 768)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !790, file: !787, line: 103, baseType: !998, size: 64, offset: 832)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !790, file: !787, line: 104, baseType: !731, size: 64, offset: 896)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !790, file: !787, line: 105, baseType: !438, size: 64, offset: 960)
!3383 = !DIDerivedType(tag: DW_TAG_member, scope: !790, file: !787, line: 107, baseType: !3384, size: 128, offset: 1024)
!3384 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !790, file: !787, line: 107, size: 128, elements: !3385)
!3385 = !{!3386, !3387}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3384, file: !787, line: 108, baseType: !612, size: 128)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3384, file: !787, line: 109, baseType: !3154, size: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !790, file: !787, line: 111, baseType: !612, size: 128, offset: 1152)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !790, file: !787, line: 112, baseType: !612, size: 128, offset: 1280)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !790, file: !787, line: 120, baseType: !3391, size: 128, offset: 1408)
!3391 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !790, file: !787, line: 116, size: 128, elements: !3392)
!3392 = !{!3393, !3394, !3395}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3391, file: !787, line: 117, baseType: !1038, size: 128)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3391, file: !787, line: 118, baseType: !804, size: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3391, file: !787, line: 119, baseType: !772, size: 128, align: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !760, file: !208, line: 922, baseType: !831, size: 64, offset: 256)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !760, file: !208, line: 923, baseType: !3101, size: 64, offset: 320)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !760, file: !208, line: 929, baseType: !642, offset: 384)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !760, file: !208, line: 930, baseType: !207, size: 32, offset: 384)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !760, file: !208, line: 931, baseType: !1166, size: 64, offset: 448)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !760, file: !208, line: 932, baseType: !7, size: 32, offset: 512)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !760, file: !208, line: 933, baseType: !2948, size: 32, offset: 544)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !760, file: !208, line: 934, baseType: !1486, size: 192, offset: 576)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !760, file: !208, line: 935, baseType: !930, size: 64, offset: 768)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !760, file: !208, line: 936, baseType: !3406, size: 192, offset: 832)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !208, line: 885, size: 192, elements: !3407)
!3407 = !{!3408, !3409, !3410, !3411, !3412, !3413}
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3406, file: !208, line: 886, baseType: !3210)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3406, file: !208, line: 887, baseType: !1775, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3406, file: !208, line: 888, baseType: !216, size: 32, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3406, file: !208, line: 889, baseType: !837, size: 32, offset: 96)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3406, file: !208, line: 889, baseType: !837, size: 32, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3406, file: !208, line: 890, baseType: !439, size: 32, offset: 160)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !760, file: !208, line: 937, baseType: !1851, size: 64, offset: 1024)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !760, file: !208, line: 938, baseType: !3416, size: 256, offset: 1088)
!3416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !208, line: 896, size: 256, elements: !3417)
!3417 = !{!3418, !3419, !3420, !3421, !3422, !3423}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3416, file: !208, line: 897, baseType: !731, size: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3416, file: !208, line: 898, baseType: !7, size: 32, offset: 64)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3416, file: !208, line: 899, baseType: !7, size: 32, offset: 96)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3416, file: !208, line: 902, baseType: !7, size: 32, offset: 128)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3416, file: !208, line: 903, baseType: !7, size: 32, offset: 160)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3416, file: !208, line: 904, baseType: !930, size: 64, offset: 192)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !760, file: !208, line: 940, baseType: !824, size: 64, offset: 1344)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !760, file: !208, line: 945, baseType: !438, size: 64, offset: 1408)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !760, file: !208, line: 949, baseType: !612, size: 128, offset: 1472)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !760, file: !208, line: 950, baseType: !612, size: 128, offset: 1600)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !760, file: !208, line: 952, baseType: !1133, size: 64, offset: 1728)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !760, file: !208, line: 953, baseType: !1302, size: 32, offset: 1792)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !760, file: !208, line: 954, baseType: !1302, size: 32, offset: 1824)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !750, file: !707, line: 174, baseType: !756, size: 64, offset: 320)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !750, file: !707, line: 176, baseType: !3433, size: 64, offset: 384)
!3433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3434, size: 64)
!3434 = !DISubroutineType(types: !3435)
!3435 = !{!439, !759, !635, !749, !1374}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !738, file: !707, line: 90, baseType: !733, size: 64, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !738, file: !707, line: 91, baseType: !3438, size: 64, offset: 256)
!3438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !697, file: !630, line: 143, baseType: !3440, size: 64, offset: 256)
!3440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3441, size: 64)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!3443, !635}
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3445)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !225, line: 39, size: 384, elements: !3446)
!3446 = !{!3447, !3448, !3452, !3456, !3462, !3466}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3445, file: !225, line: 40, baseType: !224, size: 32)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3445, file: !225, line: 41, baseType: !3449, size: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!889}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3445, file: !225, line: 42, baseType: !3453, size: 64, offset: 128)
!3453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3454, size: 64)
!3454 = !DISubroutineType(types: !3455)
!3455 = !{!438}
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3445, file: !225, line: 43, baseType: !3457, size: 64, offset: 192)
!3457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3458 = !DISubroutineType(types: !3459)
!3459 = !{!2429, !3460}
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !225, line: 19, flags: DIFlagFwdDecl)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3445, file: !225, line: 44, baseType: !3463, size: 64, offset: 256)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{!2429}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3445, file: !225, line: 45, baseType: !479, size: 64, offset: 320)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !697, file: !630, line: 144, baseType: !3468, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{!2429, !635}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !697, file: !630, line: 145, baseType: !3472, size: 64, offset: 384)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{null, !635, !3475, !3476}
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !629, file: !630, line: 70, baseType: !3478, size: 64, offset: 384)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1018, line: 123, size: 1024, elements: !3480)
!3480 = !{!3481, !3482, !3483, !3484, !3485, !3486, !3487, !3488, !3609, !3610, !3611, !3612, !3613}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3479, file: !1018, line: 124, baseType: !601, size: 32)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3479, file: !1018, line: 125, baseType: !601, size: 32, offset: 32)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3479, file: !1018, line: 135, baseType: !3478, size: 64, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3479, file: !1018, line: 136, baseType: !458, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3479, file: !1018, line: 138, baseType: !1155, size: 192, align: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3479, file: !1018, line: 140, baseType: !2429, size: 64, offset: 384)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3479, file: !1018, line: 141, baseType: !7, size: 32, offset: 448)
!3488 = !DIDerivedType(tag: DW_TAG_member, scope: !3479, file: !1018, line: 142, baseType: !3489, size: 256, offset: 512)
!3489 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3479, file: !1018, line: 142, size: 256, elements: !3490)
!3490 = !{!3491, !3537, !3541}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3489, file: !1018, line: 143, baseType: !3492, size: 192)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1018, line: 91, size: 192, elements: !3493)
!3493 = !{!3494, !3495, !3496}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3492, file: !1018, line: 92, baseType: !731, size: 64)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3492, file: !1018, line: 94, baseType: !1151, size: 64, offset: 64)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3492, file: !1018, line: 100, baseType: !3497, size: 64, offset: 128)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1018, line: 180, size: 704, elements: !3499)
!3499 = !{!3500, !3501, !3502, !3509, !3510, !3511, !3535, !3536}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3498, file: !1018, line: 182, baseType: !3478, size: 64)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3498, file: !1018, line: 183, baseType: !7, size: 32, offset: 64)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3498, file: !1018, line: 186, baseType: !3503, size: 192, offset: 128)
!3503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3504, line: 19, size: 192, elements: !3505)
!3504 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3505 = !{!3506, !3507, !3508}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3503, file: !3504, line: 20, baseType: !1138, size: 128)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3503, file: !3504, line: 21, baseType: !7, size: 32, offset: 128)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3503, file: !3504, line: 22, baseType: !7, size: 32, offset: 160)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3498, file: !1018, line: 187, baseType: !571, size: 32, offset: 320)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3498, file: !1018, line: 188, baseType: !571, size: 32, offset: 352)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3498, file: !1018, line: 189, baseType: !3512, size: 64, offset: 384)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1018, line: 168, size: 320, elements: !3514)
!3514 = !{!3515, !3519, !3523, !3527, !3531}
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3513, file: !1018, line: 169, baseType: !3516, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!439, !1110, !3497}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3513, file: !1018, line: 171, baseType: !3520, size: 64, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!439, !3478, !458, !723}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3513, file: !1018, line: 173, baseType: !3524, size: 64, offset: 128)
!3524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3525, size: 64)
!3525 = !DISubroutineType(types: !3526)
!3526 = !{!439, !3478}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3513, file: !1018, line: 174, baseType: !3528, size: 64, offset: 192)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!439, !3478, !3478, !458}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3513, file: !1018, line: 176, baseType: !3532, size: 64, offset: 256)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = !DISubroutineType(types: !3534)
!3534 = !{!439, !1110, !3478, !3497}
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3498, file: !1018, line: 192, baseType: !612, size: 128, offset: 448)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3498, file: !1018, line: 194, baseType: !1785, size: 128, offset: 576)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3489, file: !1018, line: 144, baseType: !3538, size: 64)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1018, line: 103, size: 64, elements: !3539)
!3539 = !{!3540}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3538, file: !1018, line: 104, baseType: !3478, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3489, file: !1018, line: 145, baseType: !3542, size: 256)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1018, line: 107, size: 256, elements: !3543)
!3543 = !{!3544, !3604, !3607, !3608}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3542, file: !1018, line: 108, baseType: !3545, size: 64)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3547)
!3547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1018, line: 217, size: 768, elements: !3548)
!3548 = !{!3549, !3569, !3573, !3577, !3581, !3585, !3589, !3593, !3594, !3595, !3596, !3600}
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3547, file: !1018, line: 222, baseType: !3550, size: 64)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DISubroutineType(types: !3552)
!3552 = !{!439, !3553}
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1018, line: 197, size: 1088, elements: !3555)
!3555 = !{!3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568}
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3554, file: !1018, line: 199, baseType: !3478, size: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3554, file: !1018, line: 200, baseType: !759, size: 64, offset: 64)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3554, file: !1018, line: 201, baseType: !1110, size: 64, offset: 128)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3554, file: !1018, line: 202, baseType: !438, size: 64, offset: 192)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3554, file: !1018, line: 205, baseType: !1486, size: 192, offset: 256)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3554, file: !1018, line: 206, baseType: !1486, size: 192, offset: 448)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3554, file: !1018, line: 207, baseType: !439, size: 32, offset: 640)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3554, file: !1018, line: 208, baseType: !612, size: 128, offset: 704)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3554, file: !1018, line: 209, baseType: !477, size: 64, offset: 832)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3554, file: !1018, line: 211, baseType: !728, size: 64, offset: 896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3554, file: !1018, line: 212, baseType: !889, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3554, file: !1018, line: 213, baseType: !889, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3554, file: !1018, line: 214, baseType: !1402, size: 64, offset: 1024)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3547, file: !1018, line: 223, baseType: !3570, size: 64, offset: 64)
!3570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3571, size: 64)
!3571 = !DISubroutineType(types: !3572)
!3572 = !{null, !3553}
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3547, file: !1018, line: 236, baseType: !3574, size: 64, offset: 128)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!439, !1110, !438}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3547, file: !1018, line: 238, baseType: !3578, size: 64, offset: 192)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!438, !1110, !3114}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3547, file: !1018, line: 239, baseType: !3582, size: 64, offset: 256)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!438, !1110, !438, !3114}
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3547, file: !1018, line: 240, baseType: !3586, size: 64, offset: 320)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = !DISubroutineType(types: !3588)
!3588 = !{null, !1110, !438}
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3547, file: !1018, line: 242, baseType: !3590, size: 64, offset: 384)
!3590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3591, size: 64)
!3591 = !DISubroutineType(types: !3592)
!3592 = !{!713, !3553, !477, !728, !930}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3547, file: !1018, line: 252, baseType: !728, size: 64, offset: 448)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3547, file: !1018, line: 259, baseType: !889, size: 8, offset: 512)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3547, file: !1018, line: 260, baseType: !3590, size: 64, offset: 576)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3547, file: !1018, line: 263, baseType: !3597, size: 64, offset: 640)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!3143, !3553, !3145}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3547, file: !1018, line: 266, baseType: !3601, size: 64, offset: 704)
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DISubroutineType(types: !3603)
!3603 = !{!439, !3553, !1374}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3542, file: !1018, line: 109, baseType: !3605, size: 64, offset: 64)
!3605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3606, size: 64)
!3606 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1018, line: 31, flags: DIFlagFwdDecl)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3542, file: !1018, line: 110, baseType: !930, size: 64, offset: 128)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3542, file: !1018, line: 111, baseType: !3478, size: 64, offset: 192)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3479, file: !1018, line: 148, baseType: !438, size: 64, offset: 768)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3479, file: !1018, line: 154, baseType: !824, size: 64, offset: 832)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3479, file: !1018, line: 156, baseType: !486, size: 16, offset: 896)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3479, file: !1018, line: 157, baseType: !723, size: 16, offset: 912)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3479, file: !1018, line: 158, baseType: !3614, size: 64, offset: 960)
!3614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3615, size: 64)
!3615 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1018, line: 32, flags: DIFlagFwdDecl)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !629, file: !630, line: 71, baseType: !592, size: 32, offset: 448)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !629, file: !630, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !629, file: !630, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !629, file: !630, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !629, file: !630, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !629, file: !630, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !626, file: !237, line: 463, baseType: !625, size: 64, offset: 512)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !626, file: !237, line: 465, baseType: !3624, size: 64, offset: 576)
!3624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3625, size: 64)
!3625 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !237, line: 36, flags: DIFlagFwdDecl)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !626, file: !237, line: 467, baseType: !458, size: 64, offset: 640)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !626, file: !237, line: 468, baseType: !3628, size: 64, offset: 704)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3630)
!3630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !237, line: 87, size: 384, elements: !3631)
!3631 = !{!3632, !3633, !3634, !3638, !3643, !3647}
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3630, file: !237, line: 88, baseType: !458, size: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3630, file: !237, line: 89, baseType: !735, size: 64, offset: 64)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3630, file: !237, line: 90, baseType: !3635, size: 64, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3636, size: 64)
!3636 = !DISubroutineType(types: !3637)
!3637 = !{!439, !625, !678}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3630, file: !237, line: 91, baseType: !3639, size: 64, offset: 192)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DISubroutineType(types: !3641)
!3641 = !{!477, !625, !3642, !3475, !3476}
!3642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3630, file: !237, line: 93, baseType: !3644, size: 64, offset: 256)
!3644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3645, size: 64)
!3645 = !DISubroutineType(types: !3646)
!3646 = !{null, !625}
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3630, file: !237, line: 95, baseType: !3648, size: 64, offset: 320)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3650)
!3650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !244, line: 278, size: 1472, elements: !3651)
!3651 = !{!3652, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3650, file: !244, line: 279, baseType: !3653, size: 64)
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = !DISubroutineType(types: !3655)
!3655 = !{!439, !625}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3650, file: !244, line: 280, baseType: !3644, size: 64, offset: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3650, file: !244, line: 281, baseType: !3653, size: 64, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3650, file: !244, line: 282, baseType: !3653, size: 64, offset: 192)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3650, file: !244, line: 283, baseType: !3653, size: 64, offset: 256)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3650, file: !244, line: 284, baseType: !3653, size: 64, offset: 320)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3650, file: !244, line: 285, baseType: !3653, size: 64, offset: 384)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3650, file: !244, line: 286, baseType: !3653, size: 64, offset: 448)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3650, file: !244, line: 287, baseType: !3653, size: 64, offset: 512)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3650, file: !244, line: 288, baseType: !3653, size: 64, offset: 576)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3650, file: !244, line: 289, baseType: !3653, size: 64, offset: 640)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3650, file: !244, line: 290, baseType: !3653, size: 64, offset: 704)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3650, file: !244, line: 291, baseType: !3653, size: 64, offset: 768)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3650, file: !244, line: 292, baseType: !3653, size: 64, offset: 832)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3650, file: !244, line: 293, baseType: !3653, size: 64, offset: 896)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3650, file: !244, line: 294, baseType: !3653, size: 64, offset: 960)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3650, file: !244, line: 295, baseType: !3653, size: 64, offset: 1024)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3650, file: !244, line: 296, baseType: !3653, size: 64, offset: 1088)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3650, file: !244, line: 297, baseType: !3653, size: 64, offset: 1152)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3650, file: !244, line: 298, baseType: !3653, size: 64, offset: 1216)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3650, file: !244, line: 299, baseType: !3653, size: 64, offset: 1280)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3650, file: !244, line: 300, baseType: !3653, size: 64, offset: 1344)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3650, file: !244, line: 301, baseType: !3653, size: 64, offset: 1408)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !626, file: !237, line: 470, baseType: !3679, size: 64, offset: 768)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3681, line: 82, size: 1408, elements: !3682)
!3681 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3682 = !{!3683, !3684, !3685, !3686, !3687, !3688, !3689, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3755, !3756, !3757, !3761, !3764, !3765}
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3680, file: !3681, line: 83, baseType: !458, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3680, file: !3681, line: 84, baseType: !458, size: 64, offset: 64)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3680, file: !3681, line: 85, baseType: !625, size: 64, offset: 128)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3680, file: !3681, line: 86, baseType: !735, size: 64, offset: 192)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3680, file: !3681, line: 87, baseType: !735, size: 64, offset: 256)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3680, file: !3681, line: 88, baseType: !735, size: 64, offset: 320)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3680, file: !3681, line: 90, baseType: !3690, size: 64, offset: 384)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DISubroutineType(types: !3692)
!3692 = !{!439, !625, !3693}
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !231, line: 95, size: 1152, elements: !3695)
!3695 = !{!3696, !3697, !3698, !3699, !3700, !3701, !3702, !3712, !3725, !3726, !3727, !3728, !3729, !3737, !3738, !3739, !3740, !3741, !3742}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3694, file: !231, line: 96, baseType: !458, size: 64)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3694, file: !231, line: 97, baseType: !3679, size: 64, offset: 64)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3694, file: !231, line: 99, baseType: !447, size: 64, offset: 128)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3694, file: !231, line: 100, baseType: !458, size: 64, offset: 192)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3694, file: !231, line: 102, baseType: !889, size: 8, offset: 256)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3694, file: !231, line: 103, baseType: !230, size: 32, offset: 288)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3694, file: !231, line: 105, baseType: !3703, size: 64, offset: 320)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3705)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3706, line: 262, size: 1600, elements: !3707)
!3706 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3707 = !{!3708, !3709, !3710, !3711}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3705, file: !3706, line: 263, baseType: !2938, size: 256)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3705, file: !3706, line: 264, baseType: !2938, size: 256, offset: 256)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3705, file: !3706, line: 265, baseType: !567, size: 1024, offset: 512)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3705, file: !3706, line: 266, baseType: !2429, size: 64, offset: 1536)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3694, file: !231, line: 106, baseType: !3713, size: 64, offset: 384)
!3713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3714, size: 64)
!3714 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3715)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3706, line: 210, size: 256, elements: !3716)
!3716 = !{!3717, !3721, !3723, !3724}
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3715, file: !3706, line: 211, baseType: !3718, size: 72)
!3718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 72, elements: !3719)
!3719 = !{!3720}
!3720 = !DISubrange(count: 9)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3715, file: !3706, line: 212, baseType: !3722, size: 64, offset: 128)
!3722 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3706, line: 14, baseType: !731)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3715, file: !3706, line: 213, baseType: !572, size: 32, offset: 192)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3715, file: !3706, line: 214, baseType: !572, size: 32, offset: 224)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3694, file: !231, line: 108, baseType: !3653, size: 64, offset: 448)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3694, file: !231, line: 109, baseType: !3644, size: 64, offset: 512)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3694, file: !231, line: 110, baseType: !3653, size: 64, offset: 576)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3694, file: !231, line: 111, baseType: !3644, size: 64, offset: 640)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3694, file: !231, line: 112, baseType: !3730, size: 64, offset: 704)
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3731, size: 64)
!3731 = !DISubroutineType(types: !3732)
!3732 = !{!439, !625, !3733}
!3733 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !244, line: 52, baseType: !3734)
!3734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !244, line: 50, size: 32, elements: !3735)
!3735 = !{!3736}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3734, file: !244, line: 51, baseType: !439, size: 32)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3694, file: !231, line: 113, baseType: !3653, size: 64, offset: 768)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3694, file: !231, line: 114, baseType: !735, size: 64, offset: 832)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3694, file: !231, line: 115, baseType: !735, size: 64, offset: 896)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3694, file: !231, line: 117, baseType: !3648, size: 64, offset: 960)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3694, file: !231, line: 118, baseType: !3644, size: 64, offset: 1024)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3694, file: !231, line: 120, baseType: !3743, size: 64, offset: 1088)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !231, line: 120, flags: DIFlagFwdDecl)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3680, file: !3681, line: 91, baseType: !3635, size: 64, offset: 448)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3680, file: !3681, line: 92, baseType: !3653, size: 64, offset: 512)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3680, file: !3681, line: 93, baseType: !3644, size: 64, offset: 576)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3680, file: !3681, line: 94, baseType: !3653, size: 64, offset: 640)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3680, file: !3681, line: 95, baseType: !3644, size: 64, offset: 704)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3680, file: !3681, line: 97, baseType: !3653, size: 64, offset: 768)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3680, file: !3681, line: 98, baseType: !3653, size: 64, offset: 832)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3680, file: !3681, line: 100, baseType: !3730, size: 64, offset: 896)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3680, file: !3681, line: 101, baseType: !3653, size: 64, offset: 960)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3680, file: !3681, line: 103, baseType: !3653, size: 64, offset: 1024)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3680, file: !3681, line: 105, baseType: !3653, size: 64, offset: 1088)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3680, file: !3681, line: 107, baseType: !3648, size: 64, offset: 1152)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3680, file: !3681, line: 109, baseType: !3758, size: 64, offset: 1216)
!3758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3759, size: 64)
!3759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3760)
!3760 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3681, line: 109, flags: DIFlagFwdDecl)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3680, file: !3681, line: 111, baseType: !3762, size: 64, offset: 1280)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3681, line: 111, flags: DIFlagFwdDecl)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3680, file: !3681, line: 112, baseType: !1044, offset: 1344)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3680, file: !3681, line: 114, baseType: !889, size: 8, offset: 1344)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !626, file: !237, line: 471, baseType: !3693, size: 64, offset: 832)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !626, file: !237, line: 473, baseType: !438, size: 64, offset: 896)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !626, file: !237, line: 475, baseType: !438, size: 64, offset: 960)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !626, file: !237, line: 480, baseType: !1486, size: 192, offset: 1024)
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !626, file: !237, line: 484, baseType: !3771, size: 576, offset: 1216)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !237, line: 361, size: 576, elements: !3772)
!3772 = !{!3773, !3774, !3775, !3776, !3777, !3778}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3771, file: !237, line: 362, baseType: !612, size: 128)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3771, file: !237, line: 363, baseType: !612, size: 128, offset: 128)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3771, file: !237, line: 364, baseType: !612, size: 128, offset: 256)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3771, file: !237, line: 365, baseType: !612, size: 128, offset: 384)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3771, file: !237, line: 366, baseType: !889, size: 8, offset: 512)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3771, file: !237, line: 367, baseType: !236, size: 32, offset: 544)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !626, file: !237, line: 485, baseType: !3780, size: 2304, offset: 1792)
!3780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !244, line: 565, size: 2304, elements: !3781)
!3781 = !{!3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3835, !3836, !3837, !3838, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3877, !3881}
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3780, file: !244, line: 566, baseType: !3733, size: 32)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3780, file: !244, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3780, file: !244, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3780, file: !244, line: 569, baseType: !889, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3780, file: !244, line: 570, baseType: !889, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3780, file: !244, line: 571, baseType: !889, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3780, file: !244, line: 572, baseType: !889, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3780, file: !244, line: 573, baseType: !889, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3780, file: !244, line: 574, baseType: !889, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3780, file: !244, line: 575, baseType: !889, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3780, file: !244, line: 576, baseType: !889, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3780, file: !244, line: 577, baseType: !571, size: 32, offset: 64)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3780, file: !244, line: 578, baseType: !642, offset: 96)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3780, file: !244, line: 580, baseType: !612, size: 128, offset: 128)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3780, file: !244, line: 581, baseType: !1806, size: 192, offset: 256)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3780, file: !244, line: 582, baseType: !3798, size: 64, offset: 448)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3800, line: 43, size: 1472, elements: !3801)
!3800 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3801 = !{!3802, !3803, !3804, !3805, !3806, !3809, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3799, file: !3800, line: 44, baseType: !458, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3799, file: !3800, line: 45, baseType: !439, size: 32, offset: 64)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3799, file: !3800, line: 46, baseType: !612, size: 128, offset: 128)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3799, file: !3800, line: 47, baseType: !642, offset: 256)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3799, file: !3800, line: 48, baseType: !3807, size: 64, offset: 256)
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 64)
!3808 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !244, line: 533, flags: DIFlagFwdDecl)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3799, file: !3800, line: 49, baseType: !3810, size: 320, offset: 320)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3811, line: 11, size: 320, elements: !3812)
!3811 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3812 = !{!3813, !3814, !3815, !3820}
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3810, file: !3811, line: 16, baseType: !1038, size: 128)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3810, file: !3811, line: 17, baseType: !731, size: 64, offset: 128)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3810, file: !3811, line: 18, baseType: !3816, size: 64, offset: 192)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{null, !3819}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3810, file: !3811, line: 19, baseType: !571, size: 32, offset: 256)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3799, file: !3800, line: 50, baseType: !731, size: 64, offset: 640)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3799, file: !3800, line: 51, baseType: !1605, size: 64, offset: 704)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3799, file: !3800, line: 52, baseType: !1605, size: 64, offset: 768)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3799, file: !3800, line: 53, baseType: !1605, size: 64, offset: 832)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3799, file: !3800, line: 54, baseType: !1605, size: 64, offset: 896)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3799, file: !3800, line: 55, baseType: !1605, size: 64, offset: 960)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3799, file: !3800, line: 56, baseType: !731, size: 64, offset: 1024)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3799, file: !3800, line: 57, baseType: !731, size: 64, offset: 1088)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3799, file: !3800, line: 58, baseType: !731, size: 64, offset: 1152)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3799, file: !3800, line: 59, baseType: !731, size: 64, offset: 1216)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3799, file: !3800, line: 60, baseType: !731, size: 64, offset: 1280)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3799, file: !3800, line: 61, baseType: !625, size: 64, offset: 1344)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3799, file: !3800, line: 62, baseType: !889, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3799, file: !3800, line: 63, baseType: !889, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3780, file: !244, line: 583, baseType: !889, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3780, file: !244, line: 584, baseType: !889, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3780, file: !244, line: 585, baseType: !889, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3780, file: !244, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3780, file: !244, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3780, file: !244, line: 592, baseType: !1597, size: 512, offset: 576)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3780, file: !244, line: 593, baseType: !824, size: 64, offset: 1088)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3780, file: !244, line: 594, baseType: !2259, size: 256, offset: 1152)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3780, file: !244, line: 595, baseType: !1785, size: 128, offset: 1408)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3780, file: !244, line: 596, baseType: !3807, size: 64, offset: 1536)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3780, file: !244, line: 597, baseType: !601, size: 32, offset: 1600)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3780, file: !244, line: 598, baseType: !601, size: 32, offset: 1632)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3780, file: !244, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3780, file: !244, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3780, file: !244, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3780, file: !244, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3780, file: !244, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3780, file: !244, line: 604, baseType: !889, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3780, file: !244, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3780, file: !244, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3780, file: !244, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3780, file: !244, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3780, file: !244, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3780, file: !244, line: 610, baseType: !7, size: 32, offset: 1696)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3780, file: !244, line: 611, baseType: !243, size: 32, offset: 1728)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3780, file: !244, line: 612, baseType: !251, size: 32, offset: 1760)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3780, file: !244, line: 613, baseType: !439, size: 32, offset: 1792)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3780, file: !244, line: 614, baseType: !439, size: 32, offset: 1824)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3780, file: !244, line: 615, baseType: !824, size: 64, offset: 1856)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3780, file: !244, line: 616, baseType: !824, size: 64, offset: 1920)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3780, file: !244, line: 617, baseType: !824, size: 64, offset: 1984)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3780, file: !244, line: 618, baseType: !824, size: 64, offset: 2048)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3780, file: !244, line: 620, baseType: !3868, size: 64, offset: 2112)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 64)
!3869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !244, line: 536, size: 256, elements: !3870)
!3870 = !{!3871, !3872, !3873, !3874}
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3869, file: !244, line: 537, baseType: !642)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3869, file: !244, line: 538, baseType: !7, size: 32)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3869, file: !244, line: 540, baseType: !612, size: 128, offset: 64)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3869, file: !244, line: 543, baseType: !3875, size: 64, offset: 192)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !244, line: 534, flags: DIFlagFwdDecl)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3780, file: !244, line: 621, baseType: !3878, size: 64, offset: 2176)
!3878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3879, size: 64)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{null, !625, !445}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3780, file: !244, line: 622, baseType: !3882, size: 64, offset: 2240)
!3882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3883, size: 64)
!3883 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !244, line: 622, flags: DIFlagFwdDecl)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !626, file: !237, line: 486, baseType: !3885, size: 64, offset: 4096)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !244, line: 642, size: 1792, elements: !3887)
!3887 = !{!3888, !3889, !3890, !3894, !3895, !3896}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3886, file: !244, line: 643, baseType: !3650, size: 1472)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3886, file: !244, line: 644, baseType: !3653, size: 64, offset: 1472)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3886, file: !244, line: 645, baseType: !3891, size: 64, offset: 1536)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{null, !625, !889}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3886, file: !244, line: 646, baseType: !3653, size: 64, offset: 1600)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3886, file: !244, line: 647, baseType: !3644, size: 64, offset: 1664)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3886, file: !244, line: 648, baseType: !3644, size: 64, offset: 1728)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !626, file: !237, line: 493, baseType: !3898, size: 64, offset: 4160)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !258, line: 162, size: 1088, elements: !3900)
!3900 = !{!3901, !3902, !3903, !4076, !4077, !4078, !4079, !4080, !4081, !4084, !4085, !4086, !4087, !4088, !4089, !4090}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3899, file: !258, line: 163, baseType: !612, size: 128)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3899, file: !258, line: 164, baseType: !458, size: 64, offset: 128)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3899, file: !258, line: 165, baseType: !3904, size: 64, offset: 192)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3906)
!3906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !258, line: 105, size: 640, elements: !3907)
!3907 = !{!3908, !4026, !4037, !4042, !4046, !4053, !4057, !4061, !4068, !4072}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3906, file: !258, line: 106, baseType: !3909, size: 64)
!3909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3910, size: 64)
!3910 = !DISubroutineType(types: !3911)
!3911 = !{!439, !3898, !3912, !257}
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3914, line: 51, size: 1344, elements: !3915)
!3914 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3915 = !{!3916, !3917, !3919, !3920, !4010, !4019, !4020, !4021, !4022, !4023, !4024, !4025}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3913, file: !3914, line: 52, baseType: !458, size: 64)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3913, file: !3914, line: 53, baseType: !3918, size: 32, offset: 64)
!3918 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3914, line: 28, baseType: !571)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3913, file: !3914, line: 54, baseType: !458, size: 64, offset: 128)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3913, file: !3914, line: 55, baseType: !3921, size: 192, offset: 192)
!3921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3922, line: 17, size: 192, elements: !3923)
!3922 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3923 = !{!3924, !3926, !4009}
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3921, file: !3922, line: 18, baseType: !3925, size: 64)
!3925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3921, file: !3922, line: 19, baseType: !3927, size: 64, offset: 64)
!3927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3928, size: 64)
!3928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3929)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3922, line: 110, size: 1152, elements: !3930)
!3930 = !{!3931, !3935, !3939, !3945, !3951, !3955, !3959, !3964, !3968, !3969, !3973, !3977, !3981, !3992, !3993, !3994, !3995, !4005}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3929, file: !3922, line: 111, baseType: !3932, size: 64)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!3925, !3925}
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3929, file: !3922, line: 112, baseType: !3936, size: 64, offset: 64)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{null, !3925}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3929, file: !3922, line: 113, baseType: !3940, size: 64, offset: 128)
!3940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3941, size: 64)
!3941 = !DISubroutineType(types: !3942)
!3942 = !{!889, !3943}
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3921)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3929, file: !3922, line: 114, baseType: !3946, size: 64, offset: 192)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!2429, !3943, !3949}
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !626)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3929, file: !3922, line: 116, baseType: !3952, size: 64, offset: 256)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!889, !3943, !458}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3929, file: !3922, line: 118, baseType: !3956, size: 64, offset: 320)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{!439, !3943, !458, !7, !438, !728}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3929, file: !3922, line: 123, baseType: !3960, size: 64, offset: 384)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{!439, !3943, !458, !3963, !728}
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3929, file: !3922, line: 126, baseType: !3965, size: 64, offset: 448)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!458, !3943}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3929, file: !3922, line: 127, baseType: !3965, size: 64, offset: 512)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3929, file: !3922, line: 128, baseType: !3970, size: 64, offset: 576)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!3925, !3943}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3929, file: !3922, line: 130, baseType: !3974, size: 64, offset: 640)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!3925, !3943, !3925}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3929, file: !3922, line: 133, baseType: !3978, size: 64, offset: 704)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!3925, !3943, !458}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3929, file: !3922, line: 135, baseType: !3982, size: 64, offset: 768)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!439, !3943, !458, !458, !7, !7, !3985}
!3985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3986, size: 64)
!3986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3922, line: 43, size: 640, elements: !3987)
!3987 = !{!3988, !3989, !3990}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3986, file: !3922, line: 44, baseType: !3925, size: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3986, file: !3922, line: 45, baseType: !7, size: 32, offset: 64)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3986, file: !3922, line: 46, baseType: !3991, size: 512, offset: 128)
!3991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 512, elements: !582)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3929, file: !3922, line: 140, baseType: !3974, size: 64, offset: 832)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3929, file: !3922, line: 143, baseType: !3970, size: 64, offset: 896)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3929, file: !3922, line: 145, baseType: !3932, size: 64, offset: 960)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3929, file: !3922, line: 146, baseType: !3996, size: 64, offset: 1024)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{!439, !3943, !3999}
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3922, line: 29, size: 128, elements: !4001)
!4001 = !{!4002, !4003, !4004}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4000, file: !3922, line: 30, baseType: !7, size: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4000, file: !3922, line: 31, baseType: !7, size: 32, offset: 32)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4000, file: !3922, line: 32, baseType: !3943, size: 64, offset: 64)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3929, file: !3922, line: 148, baseType: !4006, size: 64, offset: 1088)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!439, !3943, !625}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3921, file: !3922, line: 20, baseType: !625, size: 64, offset: 128)
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3913, file: !3914, line: 57, baseType: !4011, size: 64, offset: 384)
!4011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4012, size: 64)
!4012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3914, line: 31, size: 704, elements: !4013)
!4013 = !{!4014, !4015, !4016, !4017, !4018}
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4012, file: !3914, line: 32, baseType: !477, size: 64)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4012, file: !3914, line: 33, baseType: !439, size: 32, offset: 64)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4012, file: !3914, line: 34, baseType: !438, size: 64, offset: 128)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4012, file: !3914, line: 35, baseType: !4011, size: 64, offset: 192)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4012, file: !3914, line: 43, baseType: !750, size: 448, offset: 256)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3913, file: !3914, line: 58, baseType: !4011, size: 64, offset: 448)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3913, file: !3914, line: 59, baseType: !3912, size: 64, offset: 512)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3913, file: !3914, line: 60, baseType: !3912, size: 64, offset: 576)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3913, file: !3914, line: 61, baseType: !3912, size: 64, offset: 640)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3913, file: !3914, line: 63, baseType: !629, size: 512, offset: 704)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3913, file: !3914, line: 65, baseType: !731, size: 64, offset: 1216)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3913, file: !3914, line: 66, baseType: !438, size: 64, offset: 1280)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3906, file: !258, line: 108, baseType: !4027, size: 64, offset: 64)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!439, !3898, !4030, !257}
!4030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4031, size: 64)
!4031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !258, line: 63, size: 640, elements: !4032)
!4032 = !{!4033, !4034, !4035}
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4031, file: !258, line: 64, baseType: !3925, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4031, file: !258, line: 65, baseType: !439, size: 32, offset: 64)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4031, file: !258, line: 66, baseType: !4036, size: 512, offset: 96)
!4036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 512, elements: !2037)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3906, file: !258, line: 110, baseType: !4038, size: 64, offset: 128)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!439, !3898, !7, !4041}
!4041 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !437, line: 164, baseType: !731)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3906, file: !258, line: 111, baseType: !4043, size: 64, offset: 192)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{null, !3898, !7}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3906, file: !258, line: 112, baseType: !4047, size: 64, offset: 256)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!439, !3898, !3912, !4050, !7, !4052, !514}
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !571)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !731, size: 64)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3906, file: !258, line: 117, baseType: !4054, size: 64, offset: 320)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!439, !3898, !7, !7, !438}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3906, file: !258, line: 119, baseType: !4058, size: 64, offset: 384)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{null, !3898, !7, !7}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3906, file: !258, line: 121, baseType: !4062, size: 64, offset: 448)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!439, !3898, !4065, !889}
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4067, line: 11, flags: DIFlagFwdDecl)
!4067 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3906, file: !258, line: 122, baseType: !4069, size: 64, offset: 512)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{null, !3898, !4065}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3906, file: !258, line: 123, baseType: !4073, size: 64, offset: 576)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!439, !3898, !4030, !4052, !514}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3899, file: !258, line: 166, baseType: !438, size: 64, offset: 256)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3899, file: !258, line: 167, baseType: !7, size: 32, offset: 320)
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3899, file: !258, line: 168, baseType: !7, size: 32, offset: 352)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3899, file: !258, line: 171, baseType: !3925, size: 64, offset: 384)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3899, file: !258, line: 172, baseType: !257, size: 32, offset: 448)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3899, file: !258, line: 173, baseType: !4082, size: 64, offset: 512)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !258, line: 134, flags: DIFlagFwdDecl)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3899, file: !258, line: 175, baseType: !3898, size: 64, offset: 576)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3899, file: !258, line: 182, baseType: !4041, size: 64, offset: 640)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3899, file: !258, line: 183, baseType: !7, size: 32, offset: 704)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3899, file: !258, line: 184, baseType: !7, size: 32, offset: 736)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3899, file: !258, line: 185, baseType: !1138, size: 128, offset: 768)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3899, file: !258, line: 186, baseType: !1486, size: 192, offset: 896)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3899, file: !258, line: 187, baseType: !4091, offset: 1088)
!4091 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2631)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !626, file: !237, line: 499, baseType: !612, size: 128, offset: 4224)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !626, file: !237, line: 502, baseType: !4094, size: 64, offset: 4352)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4096)
!4096 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !237, line: 502, flags: DIFlagFwdDecl)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !626, file: !237, line: 504, baseType: !4098, size: 64, offset: 4416)
!4098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !626, file: !237, line: 505, baseType: !824, size: 64, offset: 4480)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !626, file: !237, line: 510, baseType: !824, size: 64, offset: 4544)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !626, file: !237, line: 511, baseType: !4102, size: 64, offset: 4608)
!4102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4103, size: 64)
!4103 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4104)
!4104 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !237, line: 511, flags: DIFlagFwdDecl)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !626, file: !237, line: 513, baseType: !4106, size: 64, offset: 4672)
!4106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4107, size: 64)
!4107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !237, line: 288, size: 128, elements: !4108)
!4108 = !{!4109, !4110}
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4107, file: !237, line: 293, baseType: !7, size: 32)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4107, file: !237, line: 294, baseType: !731, size: 64, offset: 64)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !626, file: !237, line: 515, baseType: !612, size: 128, offset: 4736)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !626, file: !237, line: 526, baseType: !4113, offset: 4864)
!4113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4114, line: 5, elements: !656)
!4114 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !626, file: !237, line: 528, baseType: !3912, size: 64, offset: 4864)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !626, file: !237, line: 529, baseType: !3925, size: 64, offset: 4928)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !626, file: !237, line: 534, baseType: !912, size: 32, offset: 4992)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !626, file: !237, line: 535, baseType: !571, size: 32, offset: 5024)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !626, file: !237, line: 537, baseType: !642, offset: 5056)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !626, file: !237, line: 538, baseType: !612, size: 128, offset: 5056)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !626, file: !237, line: 540, baseType: !4122, size: 64, offset: 5184)
!4122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4123, size: 64)
!4123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4124, line: 54, size: 960, elements: !4125)
!4124 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4125 = !{!4126, !4127, !4128, !4129, !4130, !4131, !4132, !4136, !4140, !4141, !4142, !4143, !4147, !4151, !4152}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4123, file: !4124, line: 55, baseType: !458, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4123, file: !4124, line: 56, baseType: !447, size: 64, offset: 64)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4123, file: !4124, line: 58, baseType: !735, size: 64, offset: 128)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4123, file: !4124, line: 59, baseType: !735, size: 64, offset: 192)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4123, file: !4124, line: 60, baseType: !635, size: 64, offset: 256)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4123, file: !4124, line: 62, baseType: !3635, size: 64, offset: 320)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4123, file: !4124, line: 63, baseType: !4133, size: 64, offset: 384)
!4133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4134, size: 64)
!4134 = !DISubroutineType(types: !4135)
!4135 = !{!477, !625, !3642}
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4123, file: !4124, line: 65, baseType: !4137, size: 64, offset: 448)
!4137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4138, size: 64)
!4138 = !DISubroutineType(types: !4139)
!4139 = !{null, !4122}
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4123, file: !4124, line: 66, baseType: !3644, size: 64, offset: 512)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4123, file: !4124, line: 68, baseType: !3653, size: 64, offset: 576)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4123, file: !4124, line: 70, baseType: !3443, size: 64, offset: 640)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4123, file: !4124, line: 71, baseType: !4144, size: 64, offset: 704)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!2429, !625}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4123, file: !4124, line: 73, baseType: !4148, size: 64, offset: 768)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{null, !625, !3475, !3476}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4123, file: !4124, line: 75, baseType: !3648, size: 64, offset: 832)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4123, file: !4124, line: 77, baseType: !3762, size: 64, offset: 896)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !626, file: !237, line: 541, baseType: !735, size: 64, offset: 5248)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !626, file: !237, line: 543, baseType: !3644, size: 64, offset: 5312)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !626, file: !237, line: 544, baseType: !4156, size: 64, offset: 5376)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !237, line: 45, flags: DIFlagFwdDecl)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !626, file: !237, line: 545, baseType: !4159, size: 64, offset: 5440)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !237, line: 47, flags: DIFlagFwdDecl)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !626, file: !237, line: 547, baseType: !889, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !626, file: !237, line: 548, baseType: !889, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !626, file: !237, line: 549, baseType: !889, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !626, file: !237, line: 550, baseType: !889, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !608, file: !272, line: 111, baseType: !447, size: 64, offset: 576)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_shared", scope: !608, file: !272, line: 113, baseType: !439, size: 32, offset: 640)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_dvbdev", scope: !608, file: !272, line: 114, baseType: !4168, size: 64, offset: 704)
!4168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4169, size: 64)
!4169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_device", file: !272, line: 157, size: 704, elements: !4170)
!4170 = !{!4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4185}
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "list_head", scope: !4169, file: !272, line: 158, baseType: !612, size: 128)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4169, file: !272, line: 159, baseType: !3101, size: 64, offset: 128)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !4169, file: !272, line: 160, baseType: !607, size: 64, offset: 192)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4169, file: !272, line: 161, baseType: !271, size: 32, offset: 256)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4169, file: !272, line: 162, baseType: !439, size: 32, offset: 288)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4169, file: !272, line: 163, baseType: !571, size: 32, offset: 320)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !4169, file: !272, line: 167, baseType: !439, size: 32, offset: 352)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !4169, file: !272, line: 168, baseType: !439, size: 32, offset: 384)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !4169, file: !272, line: 169, baseType: !439, size: 32, offset: 416)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4169, file: !272, line: 171, baseType: !1785, size: 128, offset: 448)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "kernel_ioctl", scope: !4169, file: !272, line: 173, baseType: !4182, size: 64, offset: 576)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!439, !759, !7, !438}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4169, file: !272, line: 187, baseType: !438, size: 64, offset: 640)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "mfe_lock", scope: !608, file: !272, line: 115, baseType: !1486, size: 192, offset: 768)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "demodulator_priv", scope: !589, file: !51, line: 690, baseType: !438, size: 64, offset: 6144)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_priv", scope: !589, file: !51, line: 691, baseType: !438, size: 64, offset: 6208)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "frontend_priv", scope: !589, file: !51, line: 692, baseType: !438, size: 64, offset: 6272)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "sec_priv", scope: !589, file: !51, line: 693, baseType: !438, size: 64, offset: 6336)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "analog_demod_priv", scope: !589, file: !51, line: 694, baseType: !438, size: 64, offset: 6400)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "dtv_property_cache", scope: !589, file: !51, line: 695, baseType: !4193, size: 3648, offset: 6464)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_frontend_properties", file: !51, line: 586, size: 3648, elements: !4194)
!4194 = !{!4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4258, !4259, !4260, !4261, !4262, !4263, !4264}
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4193, file: !51, line: 587, baseType: !571, size: 32)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4193, file: !51, line: 588, baseType: !57, size: 32, offset: 32)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "voltage", scope: !4193, file: !51, line: 590, baseType: !73, size: 32, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "sectone", scope: !4193, file: !51, line: 591, baseType: !78, size: 32, offset: 96)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !4193, file: !51, line: 592, baseType: !82, size: 32, offset: 128)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "fec_inner", scope: !4193, file: !51, line: 593, baseType: !87, size: 32, offset: 160)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_mode", scope: !4193, file: !51, line: 594, baseType: !102, size: 32, offset: 192)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_hz", scope: !4193, file: !51, line: 595, baseType: !571, size: 32, offset: 224)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "guard_interval", scope: !4193, file: !51, line: 596, baseType: !113, size: 32, offset: 256)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "hierarchy", scope: !4193, file: !51, line: 597, baseType: !126, size: 32, offset: 288)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "symbol_rate", scope: !4193, file: !51, line: 598, baseType: !571, size: 32, offset: 320)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_HP", scope: !4193, file: !51, line: 599, baseType: !87, size: 32, offset: 352)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "code_rate_LP", scope: !4193, file: !51, line: 600, baseType: !87, size: 32, offset: 384)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "pilot", scope: !4193, file: !51, line: 602, baseType: !133, size: 32, offset: 416)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !4193, file: !51, line: 603, baseType: !138, size: 32, offset: 448)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "delivery_system", scope: !4193, file: !51, line: 605, baseType: !144, size: 32, offset: 480)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !4193, file: !51, line: 607, baseType: !165, size: 32, offset: 512)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_partial_reception", scope: !4193, file: !51, line: 610, baseType: !492, size: 8, offset: 544)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_mode", scope: !4193, file: !51, line: 611, baseType: !492, size: 8, offset: 552)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_subchannel", scope: !4193, file: !51, line: 612, baseType: !492, size: 8, offset: 560)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_idx", scope: !4193, file: !51, line: 613, baseType: !571, size: 32, offset: 576)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_sb_segment_count", scope: !4193, file: !51, line: 614, baseType: !571, size: 32, offset: 608)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "isdbt_layer_enabled", scope: !4193, file: !51, line: 615, baseType: !492, size: 8, offset: 640)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !4193, file: !51, line: 621, baseType: !4219, size: 384, offset: 672)
!4219 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4220, size: 384, elements: !683)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4193, file: !51, line: 616, size: 128, elements: !4221)
!4221 = !{!4222, !4223, !4224, !4225}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "segment_count", scope: !4220, file: !51, line: 617, baseType: !492, size: 8)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !4220, file: !51, line: 618, baseType: !87, size: 32, offset: 32)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4220, file: !51, line: 619, baseType: !57, size: 32, offset: 64)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "interleaving", scope: !4220, file: !51, line: 620, baseType: !492, size: 8, offset: 96)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !4193, file: !51, line: 624, baseType: !571, size: 32, offset: 1056)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling_sequence_index", scope: !4193, file: !51, line: 627, baseType: !571, size: 32, offset: 1088)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_fic_ver", scope: !4193, file: !51, line: 630, baseType: !492, size: 8, offset: 1120)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_parade_id", scope: !4193, file: !51, line: 631, baseType: !492, size: 8, offset: 1128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_nog", scope: !4193, file: !51, line: 632, baseType: !492, size: 8, offset: 1136)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_tnog", scope: !4193, file: !51, line: 633, baseType: !492, size: 8, offset: 1144)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sgn", scope: !4193, file: !51, line: 634, baseType: !492, size: 8, offset: 1152)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_prc", scope: !4193, file: !51, line: 635, baseType: !492, size: 8, offset: 1160)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_mode", scope: !4193, file: !51, line: 637, baseType: !492, size: 8, offset: 1168)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_frame_ensemble", scope: !4193, file: !51, line: 638, baseType: !492, size: 8, offset: 1176)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_pri", scope: !4193, file: !51, line: 639, baseType: !492, size: 8, offset: 1184)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_rs_code_mode_sec", scope: !4193, file: !51, line: 640, baseType: !492, size: 8, offset: 1192)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_block_mode", scope: !4193, file: !51, line: 641, baseType: !492, size: 8, offset: 1200)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_a", scope: !4193, file: !51, line: 642, baseType: !492, size: 8, offset: 1208)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_b", scope: !4193, file: !51, line: 643, baseType: !492, size: 8, offset: 1216)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_c", scope: !4193, file: !51, line: 644, baseType: !492, size: 8, offset: 1224)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "atscmh_sccc_code_mode_d", scope: !4193, file: !51, line: 645, baseType: !492, size: 8, offset: 1232)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "lna", scope: !4193, file: !51, line: 647, baseType: !571, size: 32, offset: 1248)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !4193, file: !51, line: 650, baseType: !4245, size: 296, offset: 1280)
!4245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_fe_stats", file: !6, line: 825, size: 296, elements: !4246)
!4246 = !{!4247, !4248}
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4245, file: !6, line: 826, baseType: !493, size: 8)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4245, file: !6, line: 827, baseType: !4249, size: 288, offset: 8)
!4249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4250, size: 288, elements: !1468)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dtv_stats", file: !6, line: 803, size: 72, elements: !4251)
!4251 = !{!4252, !4253}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !4250, file: !6, line: 804, baseType: !493, size: 8)
!4253 = !DIDerivedType(tag: DW_TAG_member, scope: !4250, file: !6, line: 805, baseType: !4254, size: 64, offset: 8)
!4254 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4250, file: !6, line: 805, size: 64, elements: !4255)
!4255 = !{!4256, !4257}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "uvalue", scope: !4254, file: !6, line: 806, baseType: !825, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "svalue", scope: !4254, file: !6, line: 807, baseType: !939, size: 64)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "cnr", scope: !4193, file: !51, line: 651, baseType: !4245, size: 296, offset: 1576)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_error", scope: !4193, file: !51, line: 652, baseType: !4245, size: 296, offset: 1872)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "pre_bit_count", scope: !4193, file: !51, line: 653, baseType: !4245, size: 296, offset: 2168)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_error", scope: !4193, file: !51, line: 654, baseType: !4245, size: 296, offset: 2464)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "post_bit_count", scope: !4193, file: !51, line: 655, baseType: !4245, size: 296, offset: 2760)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "block_error", scope: !4193, file: !51, line: 656, baseType: !4245, size: 296, offset: 3056)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "block_count", scope: !4193, file: !51, line: 657, baseType: !4245, size: 296, offset: 3352)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !589, file: !51, line: 698, baseType: !4266, size: 64, offset: 10112)
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = !DISubroutineType(types: !4268)
!4268 = !{!439, !438, !439, !439, !439}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !589, file: !51, line: 699, baseType: !439, size: 32, offset: 10176)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !589, file: !51, line: 700, baseType: !7, size: 32, offset: 10208)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !561, file: !51, line: 441, baseType: !585, size: 64, offset: 1408)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "release_sec", scope: !561, file: !51, line: 442, baseType: !585, size: 64, offset: 1472)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !561, file: !51, line: 444, baseType: !4274, size: 64, offset: 1536)
!4274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4275, size: 64)
!4275 = !DISubroutineType(types: !4276)
!4276 = !{!439, !588}
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !561, file: !51, line: 445, baseType: !4274, size: 64, offset: 1600)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !561, file: !51, line: 447, baseType: !4279, size: 64, offset: 1664)
!4279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4280, size: 64)
!4280 = !DISubroutineType(types: !4281)
!4281 = !{!439, !588, !4282, !439}
!4282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4283, size: 64)
!4283 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !492)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !561, file: !51, line: 450, baseType: !4285, size: 64, offset: 1728)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = !DISubroutineType(types: !4287)
!4287 = !{!439, !588, !889, !7, !514, !4288}
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend_algo", scope: !561, file: !51, line: 457, baseType: !4290, size: 64, offset: 1792)
!4290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4291, size: 64)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!50, !588}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "set_frontend", scope: !561, file: !51, line: 460, baseType: !4274, size: 64, offset: 1856)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "get_tune_settings", scope: !561, file: !51, line: 461, baseType: !4295, size: 64, offset: 1920)
!4295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4296, size: 64)
!4296 = !DISubroutineType(types: !4297)
!4297 = !{!439, !588, !4298}
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_frontend_tune_settings", file: !51, line: 69, size: 96, elements: !4300)
!4300 = !{!4301, !4302, !4303}
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "min_delay_ms", scope: !4299, file: !51, line: 70, baseType: !439, size: 32)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "step_size", scope: !4299, file: !51, line: 71, baseType: !439, size: 32, offset: 32)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "max_drift", scope: !4299, file: !51, line: 72, baseType: !439, size: 32, offset: 64)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "get_frontend", scope: !561, file: !51, line: 463, baseType: !4305, size: 64, offset: 1984)
!4305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4306, size: 64)
!4306 = !DISubroutineType(types: !4307)
!4307 = !{!439, !588, !4308}
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "read_status", scope: !561, file: !51, line: 466, baseType: !4310, size: 64, offset: 2048)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!439, !588, !4288}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "read_ber", scope: !561, file: !51, line: 467, baseType: !4314, size: 64, offset: 2112)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!439, !588, !1716}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "read_signal_strength", scope: !561, file: !51, line: 468, baseType: !4318, size: 64, offset: 2176)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{!439, !588, !4321}
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "read_snr", scope: !561, file: !51, line: 469, baseType: !4318, size: 64, offset: 2240)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "read_ucblocks", scope: !561, file: !51, line: 470, baseType: !4314, size: 64, offset: 2304)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_reset_overload", scope: !561, file: !51, line: 472, baseType: !4274, size: 64, offset: 2368)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_master_cmd", scope: !561, file: !51, line: 473, baseType: !4326, size: 64, offset: 2432)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!439, !588, !4329}
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_master_cmd", file: !6, line: 173, size: 56, elements: !4331)
!4331 = !{!4332, !4334}
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4330, file: !6, line: 174, baseType: !4333, size: 48)
!4333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 48, elements: !621)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !4330, file: !6, line: 175, baseType: !493, size: 8, offset: 48)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_recv_slave_reply", scope: !561, file: !51, line: 474, baseType: !4336, size: 64, offset: 2496)
!4336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4337, size: 64)
!4337 = !DISubroutineType(types: !4338)
!4338 = !{!439, !588, !4339}
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_diseqc_slave_reply", file: !6, line: 195, size: 96, elements: !4341)
!4341 = !{!4342, !4344, !4345}
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !4340, file: !6, line: 196, baseType: !4343, size: 32)
!4343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 32, elements: !1468)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !4340, file: !6, line: 197, baseType: !493, size: 8, offset: 32)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4340, file: !6, line: 198, baseType: !439, size: 32, offset: 64)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_send_burst", scope: !561, file: !51, line: 475, baseType: !4347, size: 64, offset: 2560)
!4347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4348, size: 64)
!4348 = !DISubroutineType(types: !4349)
!4349 = !{!439, !588, !171}
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "set_tone", scope: !561, file: !51, line: 477, baseType: !4351, size: 64, offset: 2624)
!4351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4352, size: 64)
!4352 = !DISubroutineType(types: !4353)
!4353 = !{!439, !588, !78}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "set_voltage", scope: !561, file: !51, line: 478, baseType: !4355, size: 64, offset: 2688)
!4355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4356, size: 64)
!4356 = !DISubroutineType(types: !4357)
!4357 = !{!439, !588, !73}
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "enable_high_lnb_voltage", scope: !561, file: !51, line: 480, baseType: !4359, size: 64, offset: 2752)
!4359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4360, size: 64)
!4360 = !DISubroutineType(types: !4361)
!4361 = !{!439, !588, !717}
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "dishnetwork_send_legacy_command", scope: !561, file: !51, line: 481, baseType: !4363, size: 64, offset: 2816)
!4363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4364, size: 64)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{!439, !588, !731}
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !561, file: !51, line: 482, baseType: !4367, size: 64, offset: 2880)
!4367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4368, size: 64)
!4368 = !DISubroutineType(types: !4369)
!4369 = !{!439, !588, !439}
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "ts_bus_ctrl", scope: !561, file: !51, line: 483, baseType: !4367, size: 64, offset: 2944)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "set_lna", scope: !561, file: !51, line: 484, baseType: !4274, size: 64, offset: 3008)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "search", scope: !561, file: !51, line: 490, baseType: !4373, size: 64, offset: 3072)
!4373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4374, size: 64)
!4374 = !DISubroutineType(types: !4375)
!4375 = !{!175, !588}
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_ops", scope: !561, file: !51, line: 492, baseType: !4377, size: 2304, offset: 3136)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_ops", file: !51, line: 226, size: 2304, elements: !4378)
!4378 = !{!4379, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4406, !4410, !4411, !4412, !4413, !4414, !4415, !4420, !4425, !4429}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4377, file: !51, line: 228, baseType: !4380, size: 1216)
!4380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dvb_tuner_info", file: !51, line: 88, size: 1216, elements: !4381)
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4388}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4380, file: !51, line: 89, baseType: !567, size: 1024)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_min_hz", scope: !4380, file: !51, line: 91, baseType: !571, size: 32, offset: 1024)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_max_hz", scope: !4380, file: !51, line: 92, baseType: !571, size: 32, offset: 1056)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "frequency_step_hz", scope: !4380, file: !51, line: 93, baseType: !571, size: 32, offset: 1088)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_min", scope: !4380, file: !51, line: 95, baseType: !571, size: 32, offset: 1120)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_max", scope: !4380, file: !51, line: 96, baseType: !571, size: 32, offset: 1152)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "bandwidth_step", scope: !4380, file: !51, line: 97, baseType: !571, size: 32, offset: 1184)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4377, file: !51, line: 230, baseType: !585, size: 64, offset: 1216)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !4377, file: !51, line: 231, baseType: !4274, size: 64, offset: 1280)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !4377, file: !51, line: 232, baseType: !4274, size: 64, offset: 1344)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4377, file: !51, line: 233, baseType: !4274, size: 64, offset: 1408)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4377, file: !51, line: 234, baseType: !4274, size: 64, offset: 1472)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !4377, file: !51, line: 237, baseType: !4274, size: 64, offset: 1536)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "set_analog_params", scope: !4377, file: !51, line: 238, baseType: !4396, size: 64, offset: 1600)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{!439, !588, !4399}
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_parameters", file: !51, line: 114, size: 192, elements: !4401)
!4401 = !{!4402, !4403, !4404, !4405}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4400, file: !51, line: 115, baseType: !7, size: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4400, file: !51, line: 116, baseType: !7, size: 32, offset: 32)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "audmode", scope: !4400, file: !51, line: 117, baseType: !7, size: 32, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "std", scope: !4400, file: !51, line: 118, baseType: !824, size: 64, offset: 128)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4377, file: !51, line: 240, baseType: !4407, size: 64, offset: 1664)
!4407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4408, size: 64)
!4408 = !DISubroutineType(types: !4409)
!4409 = !{!439, !588, !438}
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "get_frequency", scope: !4377, file: !51, line: 242, baseType: !4314, size: 64, offset: 1728)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "get_bandwidth", scope: !4377, file: !51, line: 243, baseType: !4314, size: 64, offset: 1792)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "get_if_frequency", scope: !4377, file: !51, line: 244, baseType: !4314, size: 64, offset: 1856)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "get_status", scope: !4377, file: !51, line: 248, baseType: !4314, size: 64, offset: 1920)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "get_rf_strength", scope: !4377, file: !51, line: 249, baseType: !4318, size: 64, offset: 1984)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !4377, file: !51, line: 250, baseType: !4416, size: 64, offset: 2048)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DISubroutineType(types: !4418)
!4418 = !{!439, !588, !4419}
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "calc_regs", scope: !4377, file: !51, line: 258, baseType: !4421, size: 64, offset: 2112)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = !DISubroutineType(types: !4423)
!4423 = !{!439, !588, !4424, !439}
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "set_frequency", scope: !4377, file: !51, line: 267, baseType: !4426, size: 64, offset: 2176)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!439, !588, !571}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "set_bandwidth", scope: !4377, file: !51, line: 268, baseType: !4426, size: 64, offset: 2240)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "analog_ops", scope: !561, file: !51, line: 493, baseType: !4431, size: 576, offset: 5440)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_ops", file: !51, line: 302, size: 576, elements: !4432)
!4432 = !{!4433, !4437, !4441, !4442, !4443, !4444, !4445, !4446, !4447}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4431, file: !51, line: 304, baseType: !4434, size: 64)
!4434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "analog_demod_info", file: !51, line: 276, size: 64, elements: !4435)
!4435 = !{!4436}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4434, file: !51, line: 277, baseType: !477, size: 64)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "set_params", scope: !4431, file: !51, line: 306, baseType: !4438, size: 64, offset: 64)
!4438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4439, size: 64)
!4439 = !DISubroutineType(types: !4440)
!4440 = !{null, !588, !4399}
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "has_signal", scope: !4431, file: !51, line: 308, baseType: !4318, size: 64, offset: 128)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "get_afc", scope: !4431, file: !51, line: 309, baseType: !4416, size: 64, offset: 192)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_status", scope: !4431, file: !51, line: 310, baseType: !585, size: 64, offset: 256)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "standby", scope: !4431, file: !51, line: 311, baseType: !585, size: 64, offset: 320)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4431, file: !51, line: 312, baseType: !585, size: 64, offset: 384)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_gate_ctrl", scope: !4431, file: !51, line: 313, baseType: !4367, size: 64, offset: 448)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4431, file: !51, line: 316, baseType: !4407, size: 64, offset: 512)
!4448 = !DIGlobalVariableExpression(var: !4449, expr: !DIExpression())
!4449 = distinct !DIGlobalVariable(name: "stv090x_first_dev", scope: !2, file: !3, line: 40, type: !4450, isLocal: true, isDefinition: true)
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_dev", file: !3, line: 33, size: 128, elements: !4452)
!4452 = !{!4453, !4585}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4451, file: !3, line: 35, baseType: !4454, size: 64)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_internal", file: !320, line: 221, size: 640, elements: !4456)
!4456 = !{!4457, !4579, !4580, !4581, !4582, !4583, !4584}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_adap", scope: !4455, file: !320, line: 222, baseType: !4458, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4459, size: 64)
!4459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !422, line: 695, size: 7552, elements: !4460)
!4460 = !{!4461, !4462, !4463, !4500, !4501, !4515, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4532, !4533, !4534, !4535, !4567, !4578}
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4459, file: !422, line: 696, baseType: !447, size: 64)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4459, file: !422, line: 697, baseType: !7, size: 32, offset: 64)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4459, file: !422, line: 698, baseType: !4464, size: 64, offset: 128)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4466)
!4466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !422, line: 519, size: 320, elements: !4467)
!4467 = !{!4468, !4481, !4482, !4495, !4496}
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !4466, file: !422, line: 529, baseType: !4469, size: 64)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!439, !4458, !4472, !439}
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !4474, line: 69, size: 128, elements: !4475)
!4474 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!4475 = !{!4476, !4477, !4478, !4479}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4473, file: !4474, line: 70, baseType: !485, size: 16)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4473, file: !4474, line: 71, baseType: !485, size: 16, offset: 16)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4473, file: !4474, line: 84, baseType: !485, size: 16, offset: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4473, file: !4474, line: 85, baseType: !4480, size: 64, offset: 64)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !4466, file: !422, line: 531, baseType: !4469, size: 64, offset: 64)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !4466, file: !422, line: 533, baseType: !4483, size: 64, offset: 128)
!4483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4484, size: 64)
!4484 = !DISubroutineType(types: !4485)
!4485 = !{!439, !4458, !484, !486, !460, !492, !439, !4486}
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !4474, line: 135, size: 272, elements: !4488)
!4488 = !{!4489, !4490, !4491}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !4487, file: !4474, line: 136, baseType: !493, size: 8)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !4487, file: !4474, line: 137, baseType: !485, size: 16)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4487, file: !4474, line: 138, baseType: !4492, size: 272)
!4492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 272, elements: !4493)
!4493 = !{!4494}
!4494 = !DISubrange(count: 34)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !4466, file: !422, line: 536, baseType: !4483, size: 64, offset: 192)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !4466, file: !422, line: 541, baseType: !4497, size: 64, offset: 256)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = !DISubroutineType(types: !4499)
!4499 = !{!571, !4458}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !4459, file: !422, line: 699, baseType: !438, size: 64, offset: 192)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !4459, file: !422, line: 702, baseType: !4502, size: 64, offset: 256)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4504)
!4504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !422, line: 557, size: 192, elements: !4505)
!4505 = !{!4506, !4510, !4514}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !4504, file: !422, line: 558, baseType: !4507, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4508, size: 64)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{null, !4458, !7}
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !4504, file: !422, line: 559, baseType: !4511, size: 64, offset: 64)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!439, !4458, !7}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !4504, file: !422, line: 560, baseType: !4507, size: 64, offset: 128)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !4459, file: !422, line: 703, baseType: !4516, size: 192, offset: 320)
!4516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !4517, line: 30, size: 192, elements: !4518)
!4517 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!4518 = !{!4519, !4520, !4521}
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !4516, file: !4517, line: 31, baseType: !1175)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !4516, file: !4517, line: 32, baseType: !1147, size: 128)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4516, file: !4517, line: 33, baseType: !1526, size: 64, offset: 128)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !4459, file: !422, line: 704, baseType: !4516, size: 192, offset: 512)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4459, file: !422, line: 706, baseType: !439, size: 32, offset: 704)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !4459, file: !422, line: 707, baseType: !439, size: 32, offset: 736)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4459, file: !422, line: 708, baseType: !626, size: 5568, offset: 768)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !4459, file: !422, line: 709, baseType: !731, size: 64, offset: 6336)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !4459, file: !422, line: 713, baseType: !439, size: 32, offset: 6400)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4459, file: !422, line: 714, baseType: !4529, size: 384, offset: 6432)
!4529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 384, elements: !4530)
!4530 = !{!4531}
!4531 = !DISubrange(count: 48)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !4459, file: !422, line: 715, baseType: !1806, size: 192, offset: 6848)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !4459, file: !422, line: 717, baseType: !1486, size: 192, offset: 7040)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !4459, file: !422, line: 718, baseType: !612, size: 128, offset: 7232)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !4459, file: !422, line: 720, baseType: !4536, size: 64, offset: 7360)
!4536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4537, size: 64)
!4537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !422, line: 618, size: 832, elements: !4538)
!4538 = !{!4539, !4543, !4544, !4548, !4549, !4550, !4551, !4555, !4556, !4559, !4560, !4563, !4566}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !4537, file: !422, line: 619, baseType: !4540, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4541, size: 64)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!439, !4458}
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !4537, file: !422, line: 621, baseType: !4540, size: 64, offset: 64)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !4537, file: !422, line: 622, baseType: !4545, size: 64, offset: 128)
!4545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4546, size: 64)
!4546 = !DISubroutineType(types: !4547)
!4547 = !{null, !4458, !439}
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !4537, file: !422, line: 623, baseType: !4540, size: 64, offset: 192)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !4537, file: !422, line: 624, baseType: !4545, size: 64, offset: 256)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !4537, file: !422, line: 625, baseType: !4540, size: 64, offset: 320)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !4537, file: !422, line: 627, baseType: !4552, size: 64, offset: 384)
!4552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4553 = !DISubroutineType(types: !4554)
!4554 = !{null, !4458}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !4537, file: !422, line: 628, baseType: !4552, size: 64, offset: 448)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !4537, file: !422, line: 631, baseType: !4557, size: 64, offset: 512)
!4557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!4558 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !422, line: 631, flags: DIFlagFwdDecl)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !4537, file: !422, line: 632, baseType: !4557, size: 64, offset: 576)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !4537, file: !422, line: 633, baseType: !4561, size: 64, offset: 640)
!4561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4562, size: 64)
!4562 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !422, line: 633, flags: DIFlagFwdDecl)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !4537, file: !422, line: 634, baseType: !4564, size: 64, offset: 704)
!4564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4565, size: 64)
!4565 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !422, line: 634, flags: DIFlagFwdDecl)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !4537, file: !422, line: 635, baseType: !4564, size: 64, offset: 768)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4459, file: !422, line: 721, baseType: !4568, size: 64, offset: 7424)
!4568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4569, size: 64)
!4569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4570)
!4570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !422, line: 664, size: 192, elements: !4571)
!4571 = !{!4572, !4573, !4574, !4575, !4576, !4577}
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4570, file: !422, line: 665, baseType: !824, size: 64)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !4570, file: !422, line: 666, baseType: !439, size: 32, offset: 64)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !4570, file: !422, line: 667, baseType: !484, size: 16, offset: 96)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !4570, file: !422, line: 668, baseType: !484, size: 16, offset: 112)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !4570, file: !422, line: 669, baseType: !484, size: 16, offset: 128)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !4570, file: !422, line: 670, baseType: !484, size: 16, offset: 144)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !4459, file: !422, line: 723, baseType: !3898, size: 64, offset: 7488)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_addr", scope: !4455, file: !320, line: 223, baseType: !492, size: 8, offset: 64)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "demod_lock", scope: !4455, file: !320, line: 225, baseType: !1486, size: 192, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_lock", scope: !4455, file: !320, line: 226, baseType: !1486, size: 192, offset: 320)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "mclk", scope: !4455, file: !320, line: 227, baseType: !445, size: 32, offset: 512)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ver", scope: !4455, file: !320, line: 228, baseType: !571, size: 32, offset: 544)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !4455, file: !320, line: 230, baseType: !439, size: 32, offset: 576)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "next_dev", scope: !4451, file: !3, line: 36, baseType: !4450, size: 64, offset: 64)
!4586 = !DIGlobalVariableExpression(var: !4587, expr: !DIExpression())
!4587 = distinct !DIGlobalVariable(name: "stv090x_rf_tab", scope: !2, file: !3, line: 225, type: !4588, isLocal: true, isDefinition: true)
!4588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4589, size: 896, elements: !4594)
!4589 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4590)
!4590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_tab", file: !320, line: 216, size: 64, elements: !4591)
!4591 = !{!4592, !4593}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !4590, file: !320, line: 217, baseType: !445, size: 32)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4590, file: !320, line: 218, baseType: !445, size: 32, offset: 32)
!4594 = !{!4595}
!4595 = !DISubrange(count: 14)
!4596 = !DIGlobalVariableExpression(var: !4597, expr: !DIExpression())
!4597 = distinct !DIGlobalVariable(name: "stv090x_s2cn_tab", scope: !2, file: !3, line: 166, type: !4598, isLocal: true, isDefinition: true)
!4598 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4589, size: 3520, elements: !4599)
!4599 = !{!4600}
!4600 = !DISubrange(count: 55)
!4601 = !DIGlobalVariableExpression(var: !4602, expr: !DIExpression())
!4602 = distinct !DIGlobalVariable(name: "stv090x_s1cn_tab", scope: !2, file: !3, line: 110, type: !4603, isLocal: true, isDefinition: true)
!4603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4589, size: 3328, elements: !4604)
!4604 = !{!4605}
!4605 = !DISubrange(count: 52)
!4606 = !DIGlobalVariableExpression(var: !4607, expr: !DIExpression())
!4607 = distinct !DIGlobalVariable(name: "stv090x_s2_crl_cut20", scope: !2, file: !3, line: 574, type: !4608, isLocal: true, isDefinition: true)
!4608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4609, size: 1792, elements: !4594)
!4609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_long_frame_crloop", file: !320, line: 186, size: 128, elements: !4610)
!4610 = !{!4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621}
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "modcod", scope: !4609, file: !320, line: 187, baseType: !345, size: 32)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_on_2", scope: !4609, file: !320, line: 189, baseType: !492, size: 8, offset: 32)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_off_2", scope: !4609, file: !320, line: 190, baseType: !492, size: 8, offset: 40)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_on_5", scope: !4609, file: !320, line: 191, baseType: !492, size: 8, offset: 48)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_off_5", scope: !4609, file: !320, line: 192, baseType: !492, size: 8, offset: 56)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_on_10", scope: !4609, file: !320, line: 193, baseType: !492, size: 8, offset: 64)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_off_10", scope: !4609, file: !320, line: 194, baseType: !492, size: 8, offset: 72)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_on_20", scope: !4609, file: !320, line: 195, baseType: !492, size: 8, offset: 80)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_off_20", scope: !4609, file: !320, line: 196, baseType: !492, size: 8, offset: 88)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_on_30", scope: !4609, file: !320, line: 197, baseType: !492, size: 8, offset: 96)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "crl_pilots_off_30", scope: !4609, file: !320, line: 198, baseType: !492, size: 8, offset: 104)
!4622 = !DIGlobalVariableExpression(var: !4623, expr: !DIExpression())
!4623 = distinct !DIGlobalVariable(name: "stv090x_s2_lowqpsk_crl_cut20", scope: !2, file: !3, line: 643, type: !4624, isLocal: true, isDefinition: true)
!4624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4609, size: 384, elements: !683)
!4625 = !DIGlobalVariableExpression(var: !4626, expr: !DIExpression())
!4626 = distinct !DIGlobalVariable(name: "stv090x_s2_apsk_crl_cut20", scope: !2, file: !3, line: 612, type: !4627, isLocal: true, isDefinition: true)
!4627 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4609, size: 1408, elements: !4628)
!4628 = !{!4629}
!4629 = !DISubrange(count: 11)
!4630 = !DIGlobalVariableExpression(var: !4631, expr: !DIExpression())
!4631 = distinct !DIGlobalVariable(name: "stv090x_s2_crl_cut30", scope: !2, file: !3, line: 593, type: !4608, isLocal: true, isDefinition: true)
!4632 = !DIGlobalVariableExpression(var: !4633, expr: !DIExpression())
!4633 = distinct !DIGlobalVariable(name: "stv090x_s2_lowqpsk_crl_cut30", scope: !2, file: !3, line: 650, type: !4624, isLocal: true, isDefinition: true)
!4634 = !DIGlobalVariableExpression(var: !4635, expr: !DIExpression())
!4635 = distinct !DIGlobalVariable(name: "stv090x_s2_apsk_crl_cut30", scope: !2, file: !3, line: 628, type: !4627, isLocal: true, isDefinition: true)
!4636 = !DIGlobalVariableExpression(var: !4637, expr: !DIExpression())
!4637 = distinct !DIGlobalVariable(name: "stv090x_s2_short_crl_cut30", scope: !2, file: !3, line: 667, type: !4638, isLocal: true, isDefinition: true)
!4638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4639, size: 384, elements: !1468)
!4639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_short_frame_crloop", file: !320, line: 201, size: 96, elements: !4640)
!4640 = !{!4641, !4642, !4643, !4644, !4645, !4646}
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4639, file: !320, line: 202, baseType: !338, size: 32)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "crl_2", scope: !4639, file: !320, line: 204, baseType: !492, size: 8, offset: 32)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "crl_5", scope: !4639, file: !320, line: 205, baseType: !492, size: 8, offset: 40)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "crl_10", scope: !4639, file: !320, line: 206, baseType: !492, size: 8, offset: 48)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "crl_20", scope: !4639, file: !320, line: 207, baseType: !492, size: 8, offset: 56)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "crl_30", scope: !4639, file: !320, line: 208, baseType: !492, size: 8, offset: 64)
!4647 = !DIGlobalVariableExpression(var: !4648, expr: !DIExpression())
!4648 = distinct !DIGlobalVariable(name: "stv090x_s2_short_crl_cut20", scope: !2, file: !3, line: 658, type: !4638, isLocal: true, isDefinition: true)
!4649 = !DIGlobalVariableExpression(var: !4650, expr: !DIExpression())
!4650 = distinct !DIGlobalVariable(name: "__key", scope: !4651, file: !3, line: 4919, type: !1044, isLocal: true, isDefinition: true)
!4651 = distinct !DISubprogram(name: "stv090x_setup_compound", scope: !3, file: !3, line: 4892, type: !4652, scopeLine: 4893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4652 = !DISubroutineType(types: !4653)
!4653 = !{!439, !4654}
!4654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4655, size: 64)
!4655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_state", file: !320, line: 233, size: 11136, elements: !4656)
!4656 = !{!4657, !4658, !4659, !4660, !4661, !4662, !4721, !4722, !4723, !4724, !4725, !4726, !4727, !4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4738}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4655, file: !320, line: 234, baseType: !283, size: 32)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "demod", scope: !4655, file: !320, line: 235, baseType: !296, size: 32, offset: 32)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "demod_mode", scope: !4655, file: !320, line: 236, baseType: !288, size: 32, offset: 64)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4655, file: !320, line: 237, baseType: !4454, size: 64, offset: 128)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "i2c", scope: !4655, file: !320, line: 239, baseType: !4458, size: 64, offset: 192)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "config", scope: !4655, file: !320, line: 240, baseType: !4663, size: 64, offset: 256)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_config", file: !284, line: 56, size: 1344, elements: !4665)
!4665 = !{!4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4701, !4705}
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4664, file: !284, line: 57, baseType: !283, size: 32)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "demod_mode", scope: !4664, file: !284, line: 58, baseType: !288, size: 32, offset: 32)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "clk_mode", scope: !4664, file: !284, line: 59, baseType: !292, size: 32, offset: 64)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "demod", scope: !4664, file: !284, line: 60, baseType: !296, size: 32, offset: 96)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "xtal", scope: !4664, file: !284, line: 62, baseType: !571, size: 32, offset: 128)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4664, file: !284, line: 63, baseType: !492, size: 8, offset: 160)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "ts1_mode", scope: !4664, file: !284, line: 65, baseType: !492, size: 8, offset: 168)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "ts2_mode", scope: !4664, file: !284, line: 66, baseType: !492, size: 8, offset: 176)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "ts1_clk", scope: !4664, file: !284, line: 67, baseType: !571, size: 32, offset: 192)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "ts2_clk", scope: !4664, file: !284, line: 68, baseType: !571, size: 32, offset: 224)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "ts1_tei", scope: !4664, file: !284, line: 70, baseType: !492, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "ts2_tei", scope: !4664, file: !284, line: 71, baseType: !492, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "repeater_level", scope: !4664, file: !284, line: 73, baseType: !300, size: 32, offset: 288)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_bbgain", scope: !4664, file: !284, line: 75, baseType: !492, size: 8, offset: 320)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "adc1_range", scope: !4664, file: !284, line: 76, baseType: !310, size: 32, offset: 352)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "adc2_range", scope: !4664, file: !284, line: 77, baseType: !310, size: 32, offset: 384)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "diseqc_envelope_mode", scope: !4664, file: !284, line: 79, baseType: !889, size: 8, offset: 416)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_init", scope: !4664, file: !284, line: 81, baseType: !4274, size: 64, offset: 448)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_sleep", scope: !4664, file: !284, line: 82, baseType: !4274, size: 64, offset: 512)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_mode", scope: !4664, file: !284, line: 83, baseType: !4686, size: 64, offset: 576)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!439, !588, !314}
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_frequency", scope: !4664, file: !284, line: 84, baseType: !4426, size: 64, offset: 640)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_get_frequency", scope: !4664, file: !284, line: 85, baseType: !4314, size: 64, offset: 704)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_bandwidth", scope: !4664, file: !284, line: 86, baseType: !4426, size: 64, offset: 768)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_get_bandwidth", scope: !4664, file: !284, line: 87, baseType: !4314, size: 64, offset: 832)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_bbgain", scope: !4664, file: !284, line: 88, baseType: !4426, size: 64, offset: 896)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_get_bbgain", scope: !4664, file: !284, line: 89, baseType: !4314, size: 64, offset: 960)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_set_refclk", scope: !4664, file: !284, line: 90, baseType: !4426, size: 64, offset: 1024)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_get_status", scope: !4664, file: !284, line: 91, baseType: !4314, size: 64, offset: 1088)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_i2c_lock", scope: !4664, file: !284, line: 92, baseType: !4698, size: 64, offset: 1152)
!4698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4699, size: 64)
!4699 = !DISubroutineType(types: !4700)
!4700 = !{null, !588, !439}
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "set_gpio", scope: !4664, file: !284, line: 95, baseType: !4702, size: 64, offset: 1216)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{!439, !588, !492, !492, !492, !492}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "get_dvb_frontend", scope: !4664, file: !284, line: 98, baseType: !4706, size: 64, offset: 1280)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!588, !4709}
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_client", file: !422, line: 314, size: 6016, elements: !4711)
!4711 = !{!4712, !4713, !4714, !4716, !4717, !4718, !4719, !4720}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4710, file: !422, line: 315, baseType: !486, size: 16)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4710, file: !422, line: 325, baseType: !486, size: 16, offset: 16)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4710, file: !422, line: 328, baseType: !4715, size: 160, offset: 32)
!4715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !460, size: 160, elements: !554)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "adapter", scope: !4710, file: !422, line: 329, baseType: !4458, size: 64, offset: 192)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4710, file: !422, line: 330, baseType: !626, size: 5568, offset: 256)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "init_irq", scope: !4710, file: !422, line: 331, baseType: !439, size: 32, offset: 5824)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4710, file: !422, line: 332, baseType: !439, size: 32, offset: 5856)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "detected", scope: !4710, file: !422, line: 333, baseType: !612, size: 128, offset: 5888)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "frontend", scope: !4655, file: !320, line: 241, baseType: !589, size: 10240, offset: 320)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !4655, file: !320, line: 243, baseType: !1716, size: 64, offset: 10560)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "delsys", scope: !4655, file: !320, line: 245, baseType: !319, size: 32, offset: 10624)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !4655, file: !320, line: 246, baseType: !326, size: 32, offset: 10656)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "modulation", scope: !4655, file: !320, line: 247, baseType: !338, size: 32, offset: 10688)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "modcod", scope: !4655, file: !320, line: 248, baseType: !345, size: 32, offset: 10720)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "search_mode", scope: !4655, file: !320, line: 249, baseType: !377, size: 32, offset: 10752)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "frame_len", scope: !4655, file: !320, line: 250, baseType: !383, size: 32, offset: 10784)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "pilots", scope: !4655, file: !320, line: 251, baseType: !387, size: 32, offset: 10816)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "rolloff", scope: !4655, file: !320, line: 252, baseType: !391, size: 32, offset: 10848)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "inversion", scope: !4655, file: !320, line: 253, baseType: !396, size: 32, offset: 10880)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !4655, file: !320, line: 254, baseType: !401, size: 32, offset: 10912)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !4655, file: !320, line: 256, baseType: !571, size: 32, offset: 10944)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "srate", scope: !4655, file: !320, line: 257, baseType: !571, size: 32, offset: 10976)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "tuner_bw", scope: !4655, file: !320, line: 259, baseType: !445, size: 32, offset: 11008)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "search_range", scope: !4655, file: !320, line: 261, baseType: !445, size: 32, offset: 11040)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "DemodTimeout", scope: !4655, file: !320, line: 263, baseType: !445, size: 32, offset: 11072)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "FecTimeout", scope: !4655, file: !320, line: 264, baseType: !445, size: 32, offset: 11104)
!4739 = !DIGlobalVariableExpression(var: !4740, expr: !DIExpression())
!4740 = distinct !DIGlobalVariable(name: "__key", scope: !4651, file: !3, line: 4920, type: !1044, isLocal: true, isDefinition: true)
!4741 = !DIGlobalVariableExpression(var: !4742, expr: !DIExpression())
!4742 = distinct !DIGlobalVariable(name: "stv0900_initval", scope: !2, file: !3, line: 243, type: !4743, isLocal: true, isDefinition: true)
!4743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4744, size: 5152, elements: !4748)
!4744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stv090x_reg", file: !320, line: 211, size: 32, elements: !4745)
!4745 = !{!4746, !4747}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4744, file: !320, line: 212, baseType: !484, size: 16)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4744, file: !320, line: 213, baseType: !492, size: 8, offset: 16)
!4748 = !{!4749}
!4749 = !DISubrange(count: 161)
!4750 = !DIGlobalVariableExpression(var: !4751, expr: !DIExpression())
!4751 = distinct !DIGlobalVariable(name: "stv0900_cut20_val", scope: !2, file: !3, line: 511, type: !4752, isLocal: true, isDefinition: true)
!4752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4744, size: 1024, elements: !2530)
!4753 = !DIGlobalVariableExpression(var: !4754, expr: !DIExpression())
!4754 = distinct !DIGlobalVariable(name: "stv0903_initval", scope: !2, file: !3, line: 409, type: !4755, isLocal: true, isDefinition: true)
!4755 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4744, size: 3168, elements: !4756)
!4756 = !{!4757}
!4757 = !DISubrange(count: 99)
!4758 = !DIGlobalVariableExpression(var: !4759, expr: !DIExpression())
!4759 = distinct !DIGlobalVariable(name: "stv0903_cut20_val", scope: !2, file: !3, line: 547, type: !4760, isLocal: true, isDefinition: true)
!4760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4744, size: 736, elements: !4761)
!4761 = !{!4762}
!4762 = !DISubrange(count: 23)
!4763 = !DIGlobalVariableExpression(var: !4764, expr: !DIExpression())
!4764 = distinct !DIGlobalVariable(name: "stv090x_driver", scope: !2, file: !3, line: 5084, type: !4765, isLocal: true, isDefinition: true)
!4765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_driver", file: !422, line: 255, size: 1920, elements: !4766)
!4766 = !{!4767, !4768, !4778, !4782, !4783, !4787, !4791, !4795, !4796, !4797, !4854, !4857}
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4765, file: !422, line: 256, baseType: !7, size: 32)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4765, file: !422, line: 259, baseType: !4769, size: 64, offset: 64)
!4769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4770, size: 64)
!4770 = !DISubroutineType(types: !4771)
!4771 = !{!439, !4709, !4772}
!4772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4773, size: 64)
!4773 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4774)
!4774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_device_id", file: !3706, line: 457, size: 256, elements: !4775)
!4775 = !{!4776, !4777}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4774, file: !3706, line: 458, baseType: !4715, size: 160)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4774, file: !3706, line: 459, baseType: !3722, size: 64, offset: 192)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4765, file: !422, line: 260, baseType: !4779, size: 64, offset: 128)
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!4780 = !DISubroutineType(types: !4781)
!4781 = !{!439, !4709}
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "probe_new", scope: !4765, file: !422, line: 265, baseType: !4779, size: 64, offset: 192)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4765, file: !422, line: 268, baseType: !4784, size: 64, offset: 256)
!4784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4785, size: 64)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{null, !4709}
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "alert", scope: !4765, file: !422, line: 277, baseType: !4788, size: 64, offset: 320)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = !DISubroutineType(types: !4790)
!4790 = !{null, !4709, !421, !7}
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !4765, file: !422, line: 283, baseType: !4792, size: 64, offset: 384)
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!439, !4709, !7, !438}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4765, file: !422, line: 285, baseType: !3694, size: 1152, offset: 448)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4765, file: !422, line: 286, baseType: !4772, size: 64, offset: 1600)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !4765, file: !422, line: 289, baseType: !4798, size: 64, offset: 1664)
!4798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4799, size: 64)
!4799 = !DISubroutineType(types: !4800)
!4800 = !{!439, !4709, !4801}
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_board_info", file: !422, line: 410, size: 640, elements: !4803)
!4803 = !{!4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4836, !4852, !4853}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4802, file: !422, line: 411, baseType: !4715, size: 160)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4802, file: !422, line: 412, baseType: !486, size: 16, offset: 160)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4802, file: !422, line: 413, baseType: !486, size: 16, offset: 176)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4802, file: !422, line: 414, baseType: !458, size: 64, offset: 192)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !4802, file: !422, line: 415, baseType: !438, size: 64, offset: 256)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !4802, file: !422, line: 416, baseType: !3912, size: 64, offset: 320)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4802, file: !422, line: 417, baseType: !3925, size: 64, offset: 384)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4802, file: !422, line: 418, baseType: !4812, size: 64, offset: 448)
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4813, size: 64)
!4813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4814)
!4814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property_entry", file: !427, line: 263, size: 256, elements: !4815)
!4815 = !{!4816, !4817, !4818, !4819, !4820}
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4814, file: !427, line: 264, baseType: !458, size: 64)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4814, file: !427, line: 265, baseType: !728, size: 64, offset: 64)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "is_inline", scope: !4814, file: !427, line: 266, baseType: !889, size: 8, offset: 128)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4814, file: !427, line: 267, baseType: !426, size: 32, offset: 160)
!4820 = !DIDerivedType(tag: DW_TAG_member, scope: !4814, file: !427, line: 268, baseType: !4821, size: 64, offset: 192)
!4821 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4814, file: !427, line: 268, size: 64, elements: !4822)
!4822 = !{!4823, !4824}
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4821, file: !427, line: 269, baseType: !2429, size: 64)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4821, file: !427, line: 276, baseType: !4825, size: 64)
!4825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4821, file: !427, line: 270, size: 64, elements: !4826)
!4826 = !{!4827, !4828, !4830, !4832, !4834}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "u8_data", scope: !4825, file: !427, line: 271, baseType: !581, size: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "u16_data", scope: !4825, file: !427, line: 272, baseType: !4829, size: 64)
!4829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !484, size: 64, elements: !1468)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "u32_data", scope: !4825, file: !427, line: 273, baseType: !4831, size: 64)
!4831 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 64, elements: !1873)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "u64_data", scope: !4825, file: !427, line: 274, baseType: !4833, size: 64)
!4833 = !DICompositeType(tag: DW_TAG_array_type, baseType: !824, size: 64, elements: !1672)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4825, file: !427, line: 275, baseType: !4835, size: 64)
!4835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !458, size: 64, elements: !1672)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4802, file: !422, line: 419, baseType: !4837, size: 64, offset: 512)
!4837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4838, size: 64)
!4838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4839)
!4839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4840, line: 20, size: 512, elements: !4841)
!4840 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4841 = !{!4842, !4844, !4845, !4846, !4847, !4848, !4850, !4851}
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4839, file: !4840, line: 21, baseType: !4843, size: 64)
!4843 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !437, line: 158, baseType: !2427)
!4844 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4839, file: !4840, line: 22, baseType: !4843, size: 64, offset: 64)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4839, file: !4840, line: 23, baseType: !458, size: 64, offset: 128)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4839, file: !4840, line: 24, baseType: !731, size: 64, offset: 192)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4839, file: !4840, line: 25, baseType: !731, size: 64, offset: 256)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4839, file: !4840, line: 26, baseType: !4849, size: 64, offset: 320)
!4849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4839, size: 64)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4839, file: !4840, line: 26, baseType: !4849, size: 64, offset: 384)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4839, file: !4840, line: 26, baseType: !4849, size: 64, offset: 448)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "num_resources", scope: !4802, file: !422, line: 420, baseType: !7, size: 32, offset: 576)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4802, file: !422, line: 421, baseType: !439, size: 32, offset: 608)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "address_list", scope: !4765, file: !422, line: 290, baseType: !4855, size: 64, offset: 1728)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !486)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "clients", scope: !4765, file: !422, line: 291, baseType: !612, size: 128, offset: 1792)
!4858 = !DIGlobalVariableExpression(var: !4859, expr: !DIExpression())
!4859 = distinct !DIGlobalVariable(name: "stv090x_id_table", scope: !2, file: !3, line: 5078, type: !4860, isLocal: true, isDefinition: true)
!4860 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4773, size: 512, elements: !1873)
!4861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !459, size: 128, elements: !2037)
!4862 = !{i32 7, !"Dwarf Version", i32 4}
!4863 = !{i32 2, !"Debug Info Version", i32 3}
!4864 = !{i32 1, !"wchar_size", i32 2}
!4865 = !{i32 1, !"Code Model", i32 2}
!4866 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4867 = distinct !DISubprogram(name: "stv090x_attach", scope: !3, file: !3, line: 5043, type: !4868, scopeLine: 5046, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4868 = !DISubroutineType(types: !4869)
!4869 = !{!588, !4663, !4458, !296}
!4870 = !DILocalVariable(name: "config", arg: 1, scope: !4867, file: !3, line: 5043, type: !4663)
!4871 = !DILocation(line: 5043, column: 60, scope: !4867)
!4872 = !DILocalVariable(name: "i2c", arg: 2, scope: !4867, file: !3, line: 5044, type: !4458)
!4873 = !DILocation(line: 5044, column: 29, scope: !4867)
!4874 = !DILocalVariable(name: "demod", arg: 3, scope: !4867, file: !3, line: 5045, type: !296)
!4875 = !DILocation(line: 5045, column: 34, scope: !4867)
!4876 = !DILocalVariable(name: "ret", scope: !4867, file: !3, line: 5047, type: !439)
!4877 = !DILocation(line: 5047, column: 6, scope: !4867)
!4878 = !DILocalVariable(name: "state", scope: !4867, file: !3, line: 5048, type: !4654)
!4879 = !DILocation(line: 5048, column: 24, scope: !4867)
!4880 = !DILocation(line: 5050, column: 10, scope: !4867)
!4881 = !DILocation(line: 5050, column: 8, scope: !4867)
!4882 = !DILocation(line: 5051, column: 7, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 5051, column: 6)
!4884 = !DILocation(line: 5051, column: 6, scope: !4867)
!4885 = !DILocation(line: 5052, column: 3, scope: !4883)
!4886 = !DILocation(line: 5054, column: 2, scope: !4867)
!4887 = !DILocation(line: 5054, column: 9, scope: !4867)
!4888 = !DILocation(line: 5054, column: 20, scope: !4867)
!4889 = !DILocation(line: 5055, column: 21, scope: !4867)
!4890 = !DILocation(line: 5055, column: 2, scope: !4867)
!4891 = !DILocation(line: 5055, column: 9, scope: !4867)
!4892 = !DILocation(line: 5055, column: 19, scope: !4867)
!4893 = !DILocation(line: 5056, column: 18, scope: !4867)
!4894 = !DILocation(line: 5056, column: 2, scope: !4867)
!4895 = !DILocation(line: 5056, column: 9, scope: !4867)
!4896 = !DILocation(line: 5056, column: 16, scope: !4867)
!4897 = !DILocation(line: 5057, column: 2, scope: !4867)
!4898 = !DILocation(line: 5057, column: 9, scope: !4867)
!4899 = !DILocation(line: 5057, column: 18, scope: !4867)
!4900 = !DILocation(line: 5057, column: 26, scope: !4867)
!4901 = !DILocation(line: 5058, column: 37, scope: !4867)
!4902 = !DILocation(line: 5058, column: 2, scope: !4867)
!4903 = !DILocation(line: 5058, column: 9, scope: !4867)
!4904 = !DILocation(line: 5058, column: 18, scope: !4867)
!4905 = !DILocation(line: 5058, column: 35, scope: !4867)
!4906 = !DILocation(line: 5059, column: 20, scope: !4867)
!4907 = !DILocation(line: 5059, column: 2, scope: !4867)
!4908 = !DILocation(line: 5059, column: 9, scope: !4867)
!4909 = !DILocation(line: 5059, column: 18, scope: !4867)
!4910 = !DILocation(line: 5061, column: 24, scope: !4867)
!4911 = !DILocation(line: 5061, column: 32, scope: !4867)
!4912 = !DILocation(line: 5061, column: 2, scope: !4867)
!4913 = !DILocation(line: 5061, column: 9, scope: !4867)
!4914 = !DILocation(line: 5061, column: 22, scope: !4867)
!4915 = !DILocation(line: 5062, column: 21, scope: !4867)
!4916 = !DILocation(line: 5062, column: 29, scope: !4867)
!4917 = !DILocation(line: 5062, column: 2, scope: !4867)
!4918 = !DILocation(line: 5062, column: 9, scope: !4867)
!4919 = !DILocation(line: 5062, column: 19, scope: !4867)
!4920 = !DILocation(line: 5064, column: 2, scope: !4867)
!4921 = !DILocation(line: 5064, column: 9, scope: !4867)
!4922 = !DILocation(line: 5064, column: 20, scope: !4867)
!4923 = !DILocation(line: 5066, column: 31, scope: !4867)
!4924 = !DILocation(line: 5066, column: 8, scope: !4867)
!4925 = !DILocation(line: 5066, column: 6, scope: !4867)
!4926 = !DILocation(line: 5067, column: 6, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 5067, column: 6)
!4928 = !DILocation(line: 5067, column: 6, scope: !4867)
!4929 = !DILocation(line: 5068, column: 3, scope: !4927)
!4930 = !DILocation(line: 5070, column: 10, scope: !4867)
!4931 = !DILocation(line: 5070, column: 17, scope: !4867)
!4932 = !DILocation(line: 5070, column: 2, scope: !4867)
!4933 = !DILabel(scope: !4867, name: "error", file: !3, line: 5072)
!4934 = !DILocation(line: 5072, column: 1, scope: !4867)
!4935 = !DILocation(line: 5073, column: 8, scope: !4867)
!4936 = !DILocation(line: 5073, column: 2, scope: !4867)
!4937 = !DILocation(line: 5074, column: 2, scope: !4867)
!4938 = !DILocation(line: 5075, column: 1, scope: !4867)
!4939 = distinct !DISubprogram(name: "kzalloc", scope: !407, file: !407, line: 662, type: !4940, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{!438, !728, !436}
!4942 = !DILocalVariable(name: "s", arg: 1, scope: !4943, file: !407, line: 445, type: !1328)
!4943 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !407, file: !407, line: 445, type: !4944, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4944 = !DISubroutineType(types: !4945)
!4945 = !{!438, !1328, !436, !728}
!4946 = !DILocation(line: 445, column: 72, scope: !4943, inlinedAt: !4947)
!4947 = distinct !DILocation(line: 552, column: 10, scope: !4948, inlinedAt: !4951)
!4948 = distinct !DILexicalBlock(scope: !4949, file: !407, line: 540, column: 34)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !407, line: 540, column: 6)
!4950 = distinct !DISubprogram(name: "kmalloc", scope: !407, file: !407, line: 538, type: !4940, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4951 = distinct !DILocation(line: 664, column: 9, scope: !4939)
!4952 = !DILocalVariable(name: "flags", arg: 2, scope: !4943, file: !407, line: 446, type: !436)
!4953 = !DILocation(line: 446, column: 9, scope: !4943, inlinedAt: !4947)
!4954 = !DILocalVariable(name: "size", arg: 3, scope: !4943, file: !407, line: 446, type: !728)
!4955 = !DILocation(line: 446, column: 23, scope: !4943, inlinedAt: !4947)
!4956 = !DILocalVariable(name: "ret", scope: !4943, file: !407, line: 448, type: !438)
!4957 = !DILocation(line: 448, column: 8, scope: !4943, inlinedAt: !4947)
!4958 = !DILocalVariable(name: "flags", arg: 1, scope: !4959, file: !407, line: 318, type: !436)
!4959 = distinct !DISubprogram(name: "kmalloc_type", scope: !407, file: !407, line: 318, type: !4960, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!406, !436}
!4962 = !DILocation(line: 318, column: 67, scope: !4959, inlinedAt: !4963)
!4963 = distinct !DILocation(line: 553, column: 20, scope: !4948, inlinedAt: !4951)
!4964 = !DILocalVariable(name: "size", arg: 1, scope: !4965, file: !407, line: 346, type: !728)
!4965 = distinct !DISubprogram(name: "kmalloc_index", scope: !407, file: !407, line: 346, type: !4966, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4966 = !DISubroutineType(types: !4967)
!4967 = !{!7, !728}
!4968 = !DILocation(line: 346, column: 58, scope: !4965, inlinedAt: !4969)
!4969 = distinct !DILocation(line: 547, column: 11, scope: !4948, inlinedAt: !4951)
!4970 = !DILocalVariable(name: "size", arg: 1, scope: !4971, file: !407, line: 472, type: !728)
!4971 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !407, file: !407, line: 472, type: !4972, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{!438, !728, !436, !7}
!4974 = !DILocation(line: 472, column: 28, scope: !4971, inlinedAt: !4975)
!4975 = distinct !DILocation(line: 481, column: 9, scope: !4976, inlinedAt: !4977)
!4976 = distinct !DISubprogram(name: "kmalloc_large", scope: !407, file: !407, line: 478, type: !4940, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!4977 = distinct !DILocation(line: 545, column: 11, scope: !4978, inlinedAt: !4951)
!4978 = distinct !DILexicalBlock(scope: !4948, file: !407, line: 544, column: 7)
!4979 = !DILocalVariable(name: "flags", arg: 2, scope: !4971, file: !407, line: 472, type: !436)
!4980 = !DILocation(line: 472, column: 40, scope: !4971, inlinedAt: !4975)
!4981 = !DILocalVariable(name: "order", arg: 3, scope: !4971, file: !407, line: 472, type: !7)
!4982 = !DILocation(line: 472, column: 60, scope: !4971, inlinedAt: !4975)
!4983 = !DILocalVariable(name: "size", arg: 1, scope: !4976, file: !407, line: 478, type: !728)
!4984 = !DILocation(line: 478, column: 51, scope: !4976, inlinedAt: !4977)
!4985 = !DILocalVariable(name: "flags", arg: 2, scope: !4976, file: !407, line: 478, type: !436)
!4986 = !DILocation(line: 478, column: 63, scope: !4976, inlinedAt: !4977)
!4987 = !DILocalVariable(name: "order", scope: !4976, file: !407, line: 480, type: !7)
!4988 = !DILocation(line: 480, column: 15, scope: !4976, inlinedAt: !4977)
!4989 = !DILocalVariable(name: "size", arg: 1, scope: !4950, file: !407, line: 538, type: !728)
!4990 = !DILocation(line: 538, column: 45, scope: !4950, inlinedAt: !4951)
!4991 = !DILocalVariable(name: "flags", arg: 2, scope: !4950, file: !407, line: 538, type: !436)
!4992 = !DILocation(line: 538, column: 57, scope: !4950, inlinedAt: !4951)
!4993 = !DILocalVariable(name: "index", scope: !4948, file: !407, line: 542, type: !7)
!4994 = !DILocation(line: 542, column: 16, scope: !4948, inlinedAt: !4951)
!4995 = !DILocalVariable(name: "size", arg: 1, scope: !4939, file: !407, line: 662, type: !728)
!4996 = !DILocation(line: 662, column: 36, scope: !4939)
!4997 = !DILocalVariable(name: "flags", arg: 2, scope: !4939, file: !407, line: 662, type: !436)
!4998 = !DILocation(line: 662, column: 48, scope: !4939)
!4999 = !DILocation(line: 664, column: 17, scope: !4939)
!5000 = !DILocation(line: 664, column: 23, scope: !4939)
!5001 = !DILocation(line: 664, column: 29, scope: !4939)
!5002 = !DILocation(line: 540, column: 27, scope: !4949, inlinedAt: !4951)
!5003 = !DILocation(line: 540, column: 6, scope: !4949, inlinedAt: !4951)
!5004 = !DILocation(line: 540, column: 6, scope: !4950, inlinedAt: !4951)
!5005 = !DILocation(line: 544, column: 7, scope: !4978, inlinedAt: !4951)
!5006 = !DILocation(line: 544, column: 12, scope: !4978, inlinedAt: !4951)
!5007 = !DILocation(line: 544, column: 7, scope: !4948, inlinedAt: !4951)
!5008 = !DILocation(line: 545, column: 25, scope: !4978, inlinedAt: !4951)
!5009 = !DILocation(line: 545, column: 31, scope: !4978, inlinedAt: !4951)
!5010 = !DILocation(line: 480, column: 33, scope: !4976, inlinedAt: !4977)
!5011 = !DILocation(line: 480, column: 23, scope: !4976, inlinedAt: !4977)
!5012 = !DILocation(line: 481, column: 29, scope: !4976, inlinedAt: !4977)
!5013 = !DILocation(line: 481, column: 35, scope: !4976, inlinedAt: !4977)
!5014 = !DILocation(line: 481, column: 42, scope: !4976, inlinedAt: !4977)
!5015 = !DILocation(line: 474, column: 23, scope: !4971, inlinedAt: !4975)
!5016 = !DILocation(line: 474, column: 29, scope: !4971, inlinedAt: !4975)
!5017 = !DILocation(line: 474, column: 36, scope: !4971, inlinedAt: !4975)
!5018 = !DILocation(line: 474, column: 9, scope: !4971, inlinedAt: !4975)
!5019 = !DILocation(line: 545, column: 4, scope: !4978, inlinedAt: !4951)
!5020 = !DILocation(line: 547, column: 25, scope: !4948, inlinedAt: !4951)
!5021 = !DILocation(line: 348, column: 7, scope: !5022, inlinedAt: !4969)
!5022 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 348, column: 6)
!5023 = !DILocation(line: 348, column: 6, scope: !4965, inlinedAt: !4969)
!5024 = !DILocation(line: 349, column: 3, scope: !5022, inlinedAt: !4969)
!5025 = !DILocation(line: 351, column: 6, scope: !5026, inlinedAt: !4969)
!5026 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 351, column: 6)
!5027 = !DILocation(line: 351, column: 11, scope: !5026, inlinedAt: !4969)
!5028 = !DILocation(line: 351, column: 6, scope: !4965, inlinedAt: !4969)
!5029 = !DILocation(line: 352, column: 3, scope: !5026, inlinedAt: !4969)
!5030 = !DILocation(line: 354, column: 32, scope: !5031, inlinedAt: !4969)
!5031 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 354, column: 6)
!5032 = !DILocation(line: 354, column: 37, scope: !5031, inlinedAt: !4969)
!5033 = !DILocation(line: 354, column: 42, scope: !5031, inlinedAt: !4969)
!5034 = !DILocation(line: 354, column: 45, scope: !5031, inlinedAt: !4969)
!5035 = !DILocation(line: 354, column: 50, scope: !5031, inlinedAt: !4969)
!5036 = !DILocation(line: 354, column: 6, scope: !4965, inlinedAt: !4969)
!5037 = !DILocation(line: 355, column: 3, scope: !5031, inlinedAt: !4969)
!5038 = !DILocation(line: 356, column: 32, scope: !5039, inlinedAt: !4969)
!5039 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 356, column: 6)
!5040 = !DILocation(line: 356, column: 37, scope: !5039, inlinedAt: !4969)
!5041 = !DILocation(line: 356, column: 43, scope: !5039, inlinedAt: !4969)
!5042 = !DILocation(line: 356, column: 46, scope: !5039, inlinedAt: !4969)
!5043 = !DILocation(line: 356, column: 51, scope: !5039, inlinedAt: !4969)
!5044 = !DILocation(line: 356, column: 6, scope: !4965, inlinedAt: !4969)
!5045 = !DILocation(line: 357, column: 3, scope: !5039, inlinedAt: !4969)
!5046 = !DILocation(line: 358, column: 6, scope: !5047, inlinedAt: !4969)
!5047 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 358, column: 6)
!5048 = !DILocation(line: 358, column: 11, scope: !5047, inlinedAt: !4969)
!5049 = !DILocation(line: 358, column: 6, scope: !4965, inlinedAt: !4969)
!5050 = !DILocation(line: 358, column: 26, scope: !5047, inlinedAt: !4969)
!5051 = !DILocation(line: 359, column: 6, scope: !5052, inlinedAt: !4969)
!5052 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 359, column: 6)
!5053 = !DILocation(line: 359, column: 11, scope: !5052, inlinedAt: !4969)
!5054 = !DILocation(line: 359, column: 6, scope: !4965, inlinedAt: !4969)
!5055 = !DILocation(line: 359, column: 26, scope: !5052, inlinedAt: !4969)
!5056 = !DILocation(line: 360, column: 6, scope: !5057, inlinedAt: !4969)
!5057 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 360, column: 6)
!5058 = !DILocation(line: 360, column: 11, scope: !5057, inlinedAt: !4969)
!5059 = !DILocation(line: 360, column: 6, scope: !4965, inlinedAt: !4969)
!5060 = !DILocation(line: 360, column: 26, scope: !5057, inlinedAt: !4969)
!5061 = !DILocation(line: 361, column: 6, scope: !5062, inlinedAt: !4969)
!5062 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 361, column: 6)
!5063 = !DILocation(line: 361, column: 11, scope: !5062, inlinedAt: !4969)
!5064 = !DILocation(line: 361, column: 6, scope: !4965, inlinedAt: !4969)
!5065 = !DILocation(line: 361, column: 26, scope: !5062, inlinedAt: !4969)
!5066 = !DILocation(line: 362, column: 6, scope: !5067, inlinedAt: !4969)
!5067 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 362, column: 6)
!5068 = !DILocation(line: 362, column: 11, scope: !5067, inlinedAt: !4969)
!5069 = !DILocation(line: 362, column: 6, scope: !4965, inlinedAt: !4969)
!5070 = !DILocation(line: 362, column: 26, scope: !5067, inlinedAt: !4969)
!5071 = !DILocation(line: 363, column: 6, scope: !5072, inlinedAt: !4969)
!5072 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 363, column: 6)
!5073 = !DILocation(line: 363, column: 11, scope: !5072, inlinedAt: !4969)
!5074 = !DILocation(line: 363, column: 6, scope: !4965, inlinedAt: !4969)
!5075 = !DILocation(line: 363, column: 26, scope: !5072, inlinedAt: !4969)
!5076 = !DILocation(line: 364, column: 6, scope: !5077, inlinedAt: !4969)
!5077 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 364, column: 6)
!5078 = !DILocation(line: 364, column: 11, scope: !5077, inlinedAt: !4969)
!5079 = !DILocation(line: 364, column: 6, scope: !4965, inlinedAt: !4969)
!5080 = !DILocation(line: 364, column: 26, scope: !5077, inlinedAt: !4969)
!5081 = !DILocation(line: 365, column: 6, scope: !5082, inlinedAt: !4969)
!5082 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 365, column: 6)
!5083 = !DILocation(line: 365, column: 11, scope: !5082, inlinedAt: !4969)
!5084 = !DILocation(line: 365, column: 6, scope: !4965, inlinedAt: !4969)
!5085 = !DILocation(line: 365, column: 26, scope: !5082, inlinedAt: !4969)
!5086 = !DILocation(line: 366, column: 6, scope: !5087, inlinedAt: !4969)
!5087 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 366, column: 6)
!5088 = !DILocation(line: 366, column: 11, scope: !5087, inlinedAt: !4969)
!5089 = !DILocation(line: 366, column: 6, scope: !4965, inlinedAt: !4969)
!5090 = !DILocation(line: 366, column: 26, scope: !5087, inlinedAt: !4969)
!5091 = !DILocation(line: 367, column: 6, scope: !5092, inlinedAt: !4969)
!5092 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 367, column: 6)
!5093 = !DILocation(line: 367, column: 11, scope: !5092, inlinedAt: !4969)
!5094 = !DILocation(line: 367, column: 6, scope: !4965, inlinedAt: !4969)
!5095 = !DILocation(line: 367, column: 26, scope: !5092, inlinedAt: !4969)
!5096 = !DILocation(line: 368, column: 6, scope: !5097, inlinedAt: !4969)
!5097 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 368, column: 6)
!5098 = !DILocation(line: 368, column: 11, scope: !5097, inlinedAt: !4969)
!5099 = !DILocation(line: 368, column: 6, scope: !4965, inlinedAt: !4969)
!5100 = !DILocation(line: 368, column: 26, scope: !5097, inlinedAt: !4969)
!5101 = !DILocation(line: 369, column: 6, scope: !5102, inlinedAt: !4969)
!5102 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 369, column: 6)
!5103 = !DILocation(line: 369, column: 11, scope: !5102, inlinedAt: !4969)
!5104 = !DILocation(line: 369, column: 6, scope: !4965, inlinedAt: !4969)
!5105 = !DILocation(line: 369, column: 26, scope: !5102, inlinedAt: !4969)
!5106 = !DILocation(line: 370, column: 6, scope: !5107, inlinedAt: !4969)
!5107 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 370, column: 6)
!5108 = !DILocation(line: 370, column: 11, scope: !5107, inlinedAt: !4969)
!5109 = !DILocation(line: 370, column: 6, scope: !4965, inlinedAt: !4969)
!5110 = !DILocation(line: 370, column: 26, scope: !5107, inlinedAt: !4969)
!5111 = !DILocation(line: 371, column: 6, scope: !5112, inlinedAt: !4969)
!5112 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 371, column: 6)
!5113 = !DILocation(line: 371, column: 11, scope: !5112, inlinedAt: !4969)
!5114 = !DILocation(line: 371, column: 6, scope: !4965, inlinedAt: !4969)
!5115 = !DILocation(line: 371, column: 26, scope: !5112, inlinedAt: !4969)
!5116 = !DILocation(line: 372, column: 6, scope: !5117, inlinedAt: !4969)
!5117 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 372, column: 6)
!5118 = !DILocation(line: 372, column: 11, scope: !5117, inlinedAt: !4969)
!5119 = !DILocation(line: 372, column: 6, scope: !4965, inlinedAt: !4969)
!5120 = !DILocation(line: 372, column: 26, scope: !5117, inlinedAt: !4969)
!5121 = !DILocation(line: 373, column: 6, scope: !5122, inlinedAt: !4969)
!5122 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 373, column: 6)
!5123 = !DILocation(line: 373, column: 11, scope: !5122, inlinedAt: !4969)
!5124 = !DILocation(line: 373, column: 6, scope: !4965, inlinedAt: !4969)
!5125 = !DILocation(line: 373, column: 26, scope: !5122, inlinedAt: !4969)
!5126 = !DILocation(line: 374, column: 6, scope: !5127, inlinedAt: !4969)
!5127 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 374, column: 6)
!5128 = !DILocation(line: 374, column: 11, scope: !5127, inlinedAt: !4969)
!5129 = !DILocation(line: 374, column: 6, scope: !4965, inlinedAt: !4969)
!5130 = !DILocation(line: 374, column: 26, scope: !5127, inlinedAt: !4969)
!5131 = !DILocation(line: 375, column: 6, scope: !5132, inlinedAt: !4969)
!5132 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 375, column: 6)
!5133 = !DILocation(line: 375, column: 11, scope: !5132, inlinedAt: !4969)
!5134 = !DILocation(line: 375, column: 6, scope: !4965, inlinedAt: !4969)
!5135 = !DILocation(line: 375, column: 27, scope: !5132, inlinedAt: !4969)
!5136 = !DILocation(line: 376, column: 6, scope: !5137, inlinedAt: !4969)
!5137 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 376, column: 6)
!5138 = !DILocation(line: 376, column: 11, scope: !5137, inlinedAt: !4969)
!5139 = !DILocation(line: 376, column: 6, scope: !4965, inlinedAt: !4969)
!5140 = !DILocation(line: 376, column: 32, scope: !5137, inlinedAt: !4969)
!5141 = !DILocation(line: 377, column: 6, scope: !5142, inlinedAt: !4969)
!5142 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 377, column: 6)
!5143 = !DILocation(line: 377, column: 11, scope: !5142, inlinedAt: !4969)
!5144 = !DILocation(line: 377, column: 6, scope: !4965, inlinedAt: !4969)
!5145 = !DILocation(line: 377, column: 32, scope: !5142, inlinedAt: !4969)
!5146 = !DILocation(line: 378, column: 6, scope: !5147, inlinedAt: !4969)
!5147 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 378, column: 6)
!5148 = !DILocation(line: 378, column: 11, scope: !5147, inlinedAt: !4969)
!5149 = !DILocation(line: 378, column: 6, scope: !4965, inlinedAt: !4969)
!5150 = !DILocation(line: 378, column: 32, scope: !5147, inlinedAt: !4969)
!5151 = !DILocation(line: 379, column: 6, scope: !5152, inlinedAt: !4969)
!5152 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 379, column: 6)
!5153 = !DILocation(line: 379, column: 11, scope: !5152, inlinedAt: !4969)
!5154 = !DILocation(line: 379, column: 6, scope: !4965, inlinedAt: !4969)
!5155 = !DILocation(line: 379, column: 33, scope: !5152, inlinedAt: !4969)
!5156 = !DILocation(line: 380, column: 6, scope: !5157, inlinedAt: !4969)
!5157 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 380, column: 6)
!5158 = !DILocation(line: 380, column: 11, scope: !5157, inlinedAt: !4969)
!5159 = !DILocation(line: 380, column: 6, scope: !4965, inlinedAt: !4969)
!5160 = !DILocation(line: 380, column: 33, scope: !5157, inlinedAt: !4969)
!5161 = !DILocation(line: 381, column: 6, scope: !5162, inlinedAt: !4969)
!5162 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 381, column: 6)
!5163 = !DILocation(line: 381, column: 11, scope: !5162, inlinedAt: !4969)
!5164 = !DILocation(line: 381, column: 6, scope: !4965, inlinedAt: !4969)
!5165 = !DILocation(line: 381, column: 33, scope: !5162, inlinedAt: !4969)
!5166 = !DILocation(line: 382, column: 2, scope: !5167, inlinedAt: !4969)
!5167 = distinct !DILexicalBlock(scope: !5168, file: !407, line: 382, column: 2)
!5168 = distinct !DILexicalBlock(scope: !4965, file: !407, line: 382, column: 2)
!5169 = !{i32 -2144106211, i32 -2144106182, i32 -2144106136, i32 -2144106078, i32 -2144106024, i32 -2144105970, i32 -2144105915, i32 -2144105884}
!5170 = !DILocation(line: 382, column: 2, scope: !5171, inlinedAt: !4969)
!5171 = distinct !DILexicalBlock(scope: !5172, file: !407, line: 382, column: 2)
!5172 = distinct !DILexicalBlock(scope: !5168, file: !407, line: 382, column: 2)
!5173 = !{i32 -2144105441, i32 -2144105434, i32 -2144105380, i32 -2144105349, i32 -2144105319}
!5174 = !DILocation(line: 382, column: 2, scope: !5172, inlinedAt: !4969)
!5175 = !DILocation(line: 386, column: 1, scope: !4965, inlinedAt: !4969)
!5176 = !DILocation(line: 547, column: 9, scope: !4948, inlinedAt: !4951)
!5177 = !DILocation(line: 549, column: 8, scope: !5178, inlinedAt: !4951)
!5178 = distinct !DILexicalBlock(scope: !4948, file: !407, line: 549, column: 7)
!5179 = !DILocation(line: 549, column: 7, scope: !4948, inlinedAt: !4951)
!5180 = !DILocation(line: 550, column: 4, scope: !5178, inlinedAt: !4951)
!5181 = !DILocation(line: 553, column: 33, scope: !4948, inlinedAt: !4951)
!5182 = !DILocation(line: 325, column: 6, scope: !5183, inlinedAt: !4963)
!5183 = distinct !DILexicalBlock(scope: !4959, file: !407, line: 325, column: 6)
!5184 = !DILocation(line: 325, column: 6, scope: !4959, inlinedAt: !4963)
!5185 = !DILocation(line: 326, column: 3, scope: !5183, inlinedAt: !4963)
!5186 = !DILocation(line: 332, column: 9, scope: !4959, inlinedAt: !4963)
!5187 = !DILocation(line: 332, column: 15, scope: !4959, inlinedAt: !4963)
!5188 = !DILocation(line: 332, column: 2, scope: !4959, inlinedAt: !4963)
!5189 = !DILocation(line: 336, column: 1, scope: !4959, inlinedAt: !4963)
!5190 = !DILocation(line: 553, column: 5, scope: !4948, inlinedAt: !4951)
!5191 = !DILocation(line: 553, column: 41, scope: !4948, inlinedAt: !4951)
!5192 = !DILocation(line: 554, column: 5, scope: !4948, inlinedAt: !4951)
!5193 = !DILocation(line: 554, column: 12, scope: !4948, inlinedAt: !4951)
!5194 = !DILocation(line: 448, column: 31, scope: !4943, inlinedAt: !4947)
!5195 = !DILocation(line: 448, column: 34, scope: !4943, inlinedAt: !4947)
!5196 = !DILocation(line: 448, column: 14, scope: !4943, inlinedAt: !4947)
!5197 = !DILocation(line: 450, column: 22, scope: !4943, inlinedAt: !4947)
!5198 = !DILocation(line: 450, column: 25, scope: !4943, inlinedAt: !4947)
!5199 = !DILocation(line: 450, column: 30, scope: !4943, inlinedAt: !4947)
!5200 = !DILocation(line: 450, column: 36, scope: !4943, inlinedAt: !4947)
!5201 = !DILocation(line: 450, column: 8, scope: !4943, inlinedAt: !4947)
!5202 = !DILocation(line: 450, column: 6, scope: !4943, inlinedAt: !4947)
!5203 = !DILocation(line: 451, column: 9, scope: !4943, inlinedAt: !4947)
!5204 = !DILocation(line: 552, column: 3, scope: !4948, inlinedAt: !4951)
!5205 = !DILocation(line: 557, column: 19, scope: !4950, inlinedAt: !4951)
!5206 = !DILocation(line: 557, column: 25, scope: !4950, inlinedAt: !4951)
!5207 = !DILocation(line: 557, column: 9, scope: !4950, inlinedAt: !4951)
!5208 = !DILocation(line: 557, column: 2, scope: !4950, inlinedAt: !4951)
!5209 = !DILocation(line: 558, column: 1, scope: !4950, inlinedAt: !4951)
!5210 = !DILocation(line: 664, column: 2, scope: !4939)
!5211 = !DILocation(line: 445, column: 72, scope: !4943, inlinedAt: !5212)
!5212 = distinct !DILocation(line: 552, column: 10, scope: !4948, inlinedAt: !5213)
!5213 = distinct !DILocation(line: 4904, column: 21, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 4903, column: 9)
!5215 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 4899, column: 6)
!5216 = !DILocation(line: 446, column: 9, scope: !4943, inlinedAt: !5212)
!5217 = !DILocation(line: 446, column: 23, scope: !4943, inlinedAt: !5212)
!5218 = !DILocation(line: 448, column: 8, scope: !4943, inlinedAt: !5212)
!5219 = !DILocation(line: 318, column: 67, scope: !4959, inlinedAt: !5220)
!5220 = distinct !DILocation(line: 553, column: 20, scope: !4948, inlinedAt: !5213)
!5221 = !DILocation(line: 346, column: 58, scope: !4965, inlinedAt: !5222)
!5222 = distinct !DILocation(line: 547, column: 11, scope: !4948, inlinedAt: !5213)
!5223 = !DILocation(line: 472, column: 28, scope: !4971, inlinedAt: !5224)
!5224 = distinct !DILocation(line: 481, column: 9, scope: !4976, inlinedAt: !5225)
!5225 = distinct !DILocation(line: 545, column: 11, scope: !4978, inlinedAt: !5213)
!5226 = !DILocation(line: 472, column: 40, scope: !4971, inlinedAt: !5224)
!5227 = !DILocation(line: 472, column: 60, scope: !4971, inlinedAt: !5224)
!5228 = !DILocation(line: 478, column: 51, scope: !4976, inlinedAt: !5225)
!5229 = !DILocation(line: 478, column: 63, scope: !4976, inlinedAt: !5225)
!5230 = !DILocation(line: 480, column: 15, scope: !4976, inlinedAt: !5225)
!5231 = !DILocation(line: 538, column: 45, scope: !4950, inlinedAt: !5213)
!5232 = !DILocation(line: 538, column: 57, scope: !4950, inlinedAt: !5213)
!5233 = !DILocation(line: 542, column: 16, scope: !4948, inlinedAt: !5213)
!5234 = !DILocalVariable(name: "state", arg: 1, scope: !4651, file: !3, line: 4892, type: !4654)
!5235 = !DILocation(line: 4892, column: 57, scope: !4651)
!5236 = !DILocalVariable(name: "temp_int", scope: !4651, file: !3, line: 4894, type: !4450)
!5237 = !DILocation(line: 4894, column: 22, scope: !4651)
!5238 = !DILocation(line: 4896, column: 22, scope: !4651)
!5239 = !DILocation(line: 4896, column: 29, scope: !4651)
!5240 = !DILocation(line: 4897, column: 8, scope: !4651)
!5241 = !DILocation(line: 4897, column: 15, scope: !4651)
!5242 = !DILocation(line: 4897, column: 23, scope: !4651)
!5243 = !DILocation(line: 4896, column: 13, scope: !4651)
!5244 = !DILocation(line: 4896, column: 11, scope: !4651)
!5245 = !DILocation(line: 4899, column: 6, scope: !5215)
!5246 = !DILocation(line: 4899, column: 15, scope: !5215)
!5247 = !DILocation(line: 4899, column: 18, scope: !5215)
!5248 = !DILocation(line: 4899, column: 25, scope: !5215)
!5249 = !DILocation(line: 4899, column: 36, scope: !5215)
!5250 = !DILocation(line: 4899, column: 6, scope: !4651)
!5251 = !DILocation(line: 4900, column: 21, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 4899, column: 53)
!5253 = !DILocation(line: 4900, column: 31, scope: !5252)
!5254 = !DILocation(line: 4900, column: 3, scope: !5252)
!5255 = !DILocation(line: 4900, column: 10, scope: !5252)
!5256 = !DILocation(line: 4900, column: 19, scope: !5252)
!5257 = !DILocation(line: 4901, column: 3, scope: !5252)
!5258 = !DILocation(line: 4901, column: 10, scope: !5252)
!5259 = !DILocation(line: 4901, column: 20, scope: !5252)
!5260 = !DILocation(line: 4901, column: 28, scope: !5252)
!5261 = !DILocation(line: 4902, column: 3, scope: !5252)
!5262 = !DILocation(line: 4902, column: 3, scope: !5263)
!5263 = distinct !DILexicalBlock(scope: !5264, file: !3, line: 4902, column: 3)
!5264 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 4902, column: 3)
!5265 = distinct !DILexicalBlock(scope: !5266, file: !3, line: 4902, column: 3)
!5266 = distinct !DILexicalBlock(scope: !5252, file: !3, line: 4902, column: 3)
!5267 = !DILocation(line: 4902, column: 3, scope: !5264)
!5268 = !DILocation(line: 4902, column: 3, scope: !5269)
!5269 = distinct !DILexicalBlock(scope: !5263, file: !3, line: 4902, column: 3)
!5270 = !DILocation(line: 4902, column: 3, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 4902, column: 3)
!5272 = !DILocation(line: 4902, column: 3, scope: !5273)
!5273 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 4902, column: 3)
!5274 = !DILocation(line: 4902, column: 3, scope: !5266)
!5275 = !DILocation(line: 4903, column: 2, scope: !5252)
!5276 = !DILocation(line: 540, column: 27, scope: !4949, inlinedAt: !5213)
!5277 = !DILocation(line: 540, column: 6, scope: !4949, inlinedAt: !5213)
!5278 = !DILocation(line: 540, column: 6, scope: !4950, inlinedAt: !5213)
!5279 = !DILocation(line: 544, column: 7, scope: !4978, inlinedAt: !5213)
!5280 = !DILocation(line: 544, column: 12, scope: !4978, inlinedAt: !5213)
!5281 = !DILocation(line: 544, column: 7, scope: !4948, inlinedAt: !5213)
!5282 = !DILocation(line: 545, column: 25, scope: !4978, inlinedAt: !5213)
!5283 = !DILocation(line: 545, column: 31, scope: !4978, inlinedAt: !5213)
!5284 = !DILocation(line: 480, column: 33, scope: !4976, inlinedAt: !5225)
!5285 = !DILocation(line: 480, column: 23, scope: !4976, inlinedAt: !5225)
!5286 = !DILocation(line: 481, column: 29, scope: !4976, inlinedAt: !5225)
!5287 = !DILocation(line: 481, column: 35, scope: !4976, inlinedAt: !5225)
!5288 = !DILocation(line: 481, column: 42, scope: !4976, inlinedAt: !5225)
!5289 = !DILocation(line: 474, column: 23, scope: !4971, inlinedAt: !5224)
!5290 = !DILocation(line: 474, column: 29, scope: !4971, inlinedAt: !5224)
!5291 = !DILocation(line: 474, column: 36, scope: !4971, inlinedAt: !5224)
!5292 = !DILocation(line: 474, column: 9, scope: !4971, inlinedAt: !5224)
!5293 = !DILocation(line: 545, column: 4, scope: !4978, inlinedAt: !5213)
!5294 = !DILocation(line: 547, column: 25, scope: !4948, inlinedAt: !5213)
!5295 = !DILocation(line: 348, column: 7, scope: !5022, inlinedAt: !5222)
!5296 = !DILocation(line: 348, column: 6, scope: !4965, inlinedAt: !5222)
!5297 = !DILocation(line: 349, column: 3, scope: !5022, inlinedAt: !5222)
!5298 = !DILocation(line: 351, column: 6, scope: !5026, inlinedAt: !5222)
!5299 = !DILocation(line: 351, column: 11, scope: !5026, inlinedAt: !5222)
!5300 = !DILocation(line: 351, column: 6, scope: !4965, inlinedAt: !5222)
!5301 = !DILocation(line: 352, column: 3, scope: !5026, inlinedAt: !5222)
!5302 = !DILocation(line: 354, column: 32, scope: !5031, inlinedAt: !5222)
!5303 = !DILocation(line: 354, column: 37, scope: !5031, inlinedAt: !5222)
!5304 = !DILocation(line: 354, column: 42, scope: !5031, inlinedAt: !5222)
!5305 = !DILocation(line: 354, column: 45, scope: !5031, inlinedAt: !5222)
!5306 = !DILocation(line: 354, column: 50, scope: !5031, inlinedAt: !5222)
!5307 = !DILocation(line: 354, column: 6, scope: !4965, inlinedAt: !5222)
!5308 = !DILocation(line: 355, column: 3, scope: !5031, inlinedAt: !5222)
!5309 = !DILocation(line: 356, column: 32, scope: !5039, inlinedAt: !5222)
!5310 = !DILocation(line: 356, column: 37, scope: !5039, inlinedAt: !5222)
!5311 = !DILocation(line: 356, column: 43, scope: !5039, inlinedAt: !5222)
!5312 = !DILocation(line: 356, column: 46, scope: !5039, inlinedAt: !5222)
!5313 = !DILocation(line: 356, column: 51, scope: !5039, inlinedAt: !5222)
!5314 = !DILocation(line: 356, column: 6, scope: !4965, inlinedAt: !5222)
!5315 = !DILocation(line: 357, column: 3, scope: !5039, inlinedAt: !5222)
!5316 = !DILocation(line: 358, column: 6, scope: !5047, inlinedAt: !5222)
!5317 = !DILocation(line: 358, column: 11, scope: !5047, inlinedAt: !5222)
!5318 = !DILocation(line: 358, column: 6, scope: !4965, inlinedAt: !5222)
!5319 = !DILocation(line: 358, column: 26, scope: !5047, inlinedAt: !5222)
!5320 = !DILocation(line: 359, column: 6, scope: !5052, inlinedAt: !5222)
!5321 = !DILocation(line: 359, column: 11, scope: !5052, inlinedAt: !5222)
!5322 = !DILocation(line: 359, column: 6, scope: !4965, inlinedAt: !5222)
!5323 = !DILocation(line: 359, column: 26, scope: !5052, inlinedAt: !5222)
!5324 = !DILocation(line: 360, column: 6, scope: !5057, inlinedAt: !5222)
!5325 = !DILocation(line: 360, column: 11, scope: !5057, inlinedAt: !5222)
!5326 = !DILocation(line: 360, column: 6, scope: !4965, inlinedAt: !5222)
!5327 = !DILocation(line: 360, column: 26, scope: !5057, inlinedAt: !5222)
!5328 = !DILocation(line: 361, column: 6, scope: !5062, inlinedAt: !5222)
!5329 = !DILocation(line: 361, column: 11, scope: !5062, inlinedAt: !5222)
!5330 = !DILocation(line: 361, column: 6, scope: !4965, inlinedAt: !5222)
!5331 = !DILocation(line: 361, column: 26, scope: !5062, inlinedAt: !5222)
!5332 = !DILocation(line: 362, column: 6, scope: !5067, inlinedAt: !5222)
!5333 = !DILocation(line: 362, column: 11, scope: !5067, inlinedAt: !5222)
!5334 = !DILocation(line: 362, column: 6, scope: !4965, inlinedAt: !5222)
!5335 = !DILocation(line: 362, column: 26, scope: !5067, inlinedAt: !5222)
!5336 = !DILocation(line: 363, column: 6, scope: !5072, inlinedAt: !5222)
!5337 = !DILocation(line: 363, column: 11, scope: !5072, inlinedAt: !5222)
!5338 = !DILocation(line: 363, column: 6, scope: !4965, inlinedAt: !5222)
!5339 = !DILocation(line: 363, column: 26, scope: !5072, inlinedAt: !5222)
!5340 = !DILocation(line: 364, column: 6, scope: !5077, inlinedAt: !5222)
!5341 = !DILocation(line: 364, column: 11, scope: !5077, inlinedAt: !5222)
!5342 = !DILocation(line: 364, column: 6, scope: !4965, inlinedAt: !5222)
!5343 = !DILocation(line: 364, column: 26, scope: !5077, inlinedAt: !5222)
!5344 = !DILocation(line: 365, column: 6, scope: !5082, inlinedAt: !5222)
!5345 = !DILocation(line: 365, column: 11, scope: !5082, inlinedAt: !5222)
!5346 = !DILocation(line: 365, column: 6, scope: !4965, inlinedAt: !5222)
!5347 = !DILocation(line: 365, column: 26, scope: !5082, inlinedAt: !5222)
!5348 = !DILocation(line: 366, column: 6, scope: !5087, inlinedAt: !5222)
!5349 = !DILocation(line: 366, column: 11, scope: !5087, inlinedAt: !5222)
!5350 = !DILocation(line: 366, column: 6, scope: !4965, inlinedAt: !5222)
!5351 = !DILocation(line: 366, column: 26, scope: !5087, inlinedAt: !5222)
!5352 = !DILocation(line: 367, column: 6, scope: !5092, inlinedAt: !5222)
!5353 = !DILocation(line: 367, column: 11, scope: !5092, inlinedAt: !5222)
!5354 = !DILocation(line: 367, column: 6, scope: !4965, inlinedAt: !5222)
!5355 = !DILocation(line: 367, column: 26, scope: !5092, inlinedAt: !5222)
!5356 = !DILocation(line: 368, column: 6, scope: !5097, inlinedAt: !5222)
!5357 = !DILocation(line: 368, column: 11, scope: !5097, inlinedAt: !5222)
!5358 = !DILocation(line: 368, column: 6, scope: !4965, inlinedAt: !5222)
!5359 = !DILocation(line: 368, column: 26, scope: !5097, inlinedAt: !5222)
!5360 = !DILocation(line: 369, column: 6, scope: !5102, inlinedAt: !5222)
!5361 = !DILocation(line: 369, column: 11, scope: !5102, inlinedAt: !5222)
!5362 = !DILocation(line: 369, column: 6, scope: !4965, inlinedAt: !5222)
!5363 = !DILocation(line: 369, column: 26, scope: !5102, inlinedAt: !5222)
!5364 = !DILocation(line: 370, column: 6, scope: !5107, inlinedAt: !5222)
!5365 = !DILocation(line: 370, column: 11, scope: !5107, inlinedAt: !5222)
!5366 = !DILocation(line: 370, column: 6, scope: !4965, inlinedAt: !5222)
!5367 = !DILocation(line: 370, column: 26, scope: !5107, inlinedAt: !5222)
!5368 = !DILocation(line: 371, column: 6, scope: !5112, inlinedAt: !5222)
!5369 = !DILocation(line: 371, column: 11, scope: !5112, inlinedAt: !5222)
!5370 = !DILocation(line: 371, column: 6, scope: !4965, inlinedAt: !5222)
!5371 = !DILocation(line: 371, column: 26, scope: !5112, inlinedAt: !5222)
!5372 = !DILocation(line: 372, column: 6, scope: !5117, inlinedAt: !5222)
!5373 = !DILocation(line: 372, column: 11, scope: !5117, inlinedAt: !5222)
!5374 = !DILocation(line: 372, column: 6, scope: !4965, inlinedAt: !5222)
!5375 = !DILocation(line: 372, column: 26, scope: !5117, inlinedAt: !5222)
!5376 = !DILocation(line: 373, column: 6, scope: !5122, inlinedAt: !5222)
!5377 = !DILocation(line: 373, column: 11, scope: !5122, inlinedAt: !5222)
!5378 = !DILocation(line: 373, column: 6, scope: !4965, inlinedAt: !5222)
!5379 = !DILocation(line: 373, column: 26, scope: !5122, inlinedAt: !5222)
!5380 = !DILocation(line: 374, column: 6, scope: !5127, inlinedAt: !5222)
!5381 = !DILocation(line: 374, column: 11, scope: !5127, inlinedAt: !5222)
!5382 = !DILocation(line: 374, column: 6, scope: !4965, inlinedAt: !5222)
!5383 = !DILocation(line: 374, column: 26, scope: !5127, inlinedAt: !5222)
!5384 = !DILocation(line: 375, column: 6, scope: !5132, inlinedAt: !5222)
!5385 = !DILocation(line: 375, column: 11, scope: !5132, inlinedAt: !5222)
!5386 = !DILocation(line: 375, column: 6, scope: !4965, inlinedAt: !5222)
!5387 = !DILocation(line: 375, column: 27, scope: !5132, inlinedAt: !5222)
!5388 = !DILocation(line: 376, column: 6, scope: !5137, inlinedAt: !5222)
!5389 = !DILocation(line: 376, column: 11, scope: !5137, inlinedAt: !5222)
!5390 = !DILocation(line: 376, column: 6, scope: !4965, inlinedAt: !5222)
!5391 = !DILocation(line: 376, column: 32, scope: !5137, inlinedAt: !5222)
!5392 = !DILocation(line: 377, column: 6, scope: !5142, inlinedAt: !5222)
!5393 = !DILocation(line: 377, column: 11, scope: !5142, inlinedAt: !5222)
!5394 = !DILocation(line: 377, column: 6, scope: !4965, inlinedAt: !5222)
!5395 = !DILocation(line: 377, column: 32, scope: !5142, inlinedAt: !5222)
!5396 = !DILocation(line: 378, column: 6, scope: !5147, inlinedAt: !5222)
!5397 = !DILocation(line: 378, column: 11, scope: !5147, inlinedAt: !5222)
!5398 = !DILocation(line: 378, column: 6, scope: !4965, inlinedAt: !5222)
!5399 = !DILocation(line: 378, column: 32, scope: !5147, inlinedAt: !5222)
!5400 = !DILocation(line: 379, column: 6, scope: !5152, inlinedAt: !5222)
!5401 = !DILocation(line: 379, column: 11, scope: !5152, inlinedAt: !5222)
!5402 = !DILocation(line: 379, column: 6, scope: !4965, inlinedAt: !5222)
!5403 = !DILocation(line: 379, column: 33, scope: !5152, inlinedAt: !5222)
!5404 = !DILocation(line: 380, column: 6, scope: !5157, inlinedAt: !5222)
!5405 = !DILocation(line: 380, column: 11, scope: !5157, inlinedAt: !5222)
!5406 = !DILocation(line: 380, column: 6, scope: !4965, inlinedAt: !5222)
!5407 = !DILocation(line: 380, column: 33, scope: !5157, inlinedAt: !5222)
!5408 = !DILocation(line: 381, column: 6, scope: !5162, inlinedAt: !5222)
!5409 = !DILocation(line: 381, column: 11, scope: !5162, inlinedAt: !5222)
!5410 = !DILocation(line: 381, column: 6, scope: !4965, inlinedAt: !5222)
!5411 = !DILocation(line: 381, column: 33, scope: !5162, inlinedAt: !5222)
!5412 = !DILocation(line: 382, column: 2, scope: !5167, inlinedAt: !5222)
!5413 = !DILocation(line: 382, column: 2, scope: !5171, inlinedAt: !5222)
!5414 = !DILocation(line: 382, column: 2, scope: !5172, inlinedAt: !5222)
!5415 = !DILocation(line: 386, column: 1, scope: !4965, inlinedAt: !5222)
!5416 = !DILocation(line: 547, column: 9, scope: !4948, inlinedAt: !5213)
!5417 = !DILocation(line: 549, column: 8, scope: !5178, inlinedAt: !5213)
!5418 = !DILocation(line: 549, column: 7, scope: !4948, inlinedAt: !5213)
!5419 = !DILocation(line: 550, column: 4, scope: !5178, inlinedAt: !5213)
!5420 = !DILocation(line: 553, column: 33, scope: !4948, inlinedAt: !5213)
!5421 = !DILocation(line: 325, column: 6, scope: !5183, inlinedAt: !5220)
!5422 = !DILocation(line: 325, column: 6, scope: !4959, inlinedAt: !5220)
!5423 = !DILocation(line: 326, column: 3, scope: !5183, inlinedAt: !5220)
!5424 = !DILocation(line: 332, column: 9, scope: !4959, inlinedAt: !5220)
!5425 = !DILocation(line: 332, column: 15, scope: !4959, inlinedAt: !5220)
!5426 = !DILocation(line: 332, column: 2, scope: !4959, inlinedAt: !5220)
!5427 = !DILocation(line: 336, column: 1, scope: !4959, inlinedAt: !5220)
!5428 = !DILocation(line: 553, column: 5, scope: !4948, inlinedAt: !5213)
!5429 = !DILocation(line: 553, column: 41, scope: !4948, inlinedAt: !5213)
!5430 = !DILocation(line: 554, column: 5, scope: !4948, inlinedAt: !5213)
!5431 = !DILocation(line: 554, column: 12, scope: !4948, inlinedAt: !5213)
!5432 = !DILocation(line: 448, column: 31, scope: !4943, inlinedAt: !5212)
!5433 = !DILocation(line: 448, column: 34, scope: !4943, inlinedAt: !5212)
!5434 = !DILocation(line: 448, column: 14, scope: !4943, inlinedAt: !5212)
!5435 = !DILocation(line: 450, column: 22, scope: !4943, inlinedAt: !5212)
!5436 = !DILocation(line: 450, column: 25, scope: !4943, inlinedAt: !5212)
!5437 = !DILocation(line: 450, column: 30, scope: !4943, inlinedAt: !5212)
!5438 = !DILocation(line: 450, column: 36, scope: !4943, inlinedAt: !5212)
!5439 = !DILocation(line: 450, column: 8, scope: !4943, inlinedAt: !5212)
!5440 = !DILocation(line: 450, column: 6, scope: !4943, inlinedAt: !5212)
!5441 = !DILocation(line: 451, column: 9, scope: !4943, inlinedAt: !5212)
!5442 = !DILocation(line: 552, column: 3, scope: !4948, inlinedAt: !5213)
!5443 = !DILocation(line: 557, column: 19, scope: !4950, inlinedAt: !5213)
!5444 = !DILocation(line: 557, column: 25, scope: !4950, inlinedAt: !5213)
!5445 = !DILocation(line: 557, column: 9, scope: !4950, inlinedAt: !5213)
!5446 = !DILocation(line: 557, column: 2, scope: !4950, inlinedAt: !5213)
!5447 = !DILocation(line: 558, column: 1, scope: !4950, inlinedAt: !5213)
!5448 = !DILocation(line: 4904, column: 21, scope: !5214)
!5449 = !DILocation(line: 4904, column: 3, scope: !5214)
!5450 = !DILocation(line: 4904, column: 10, scope: !5214)
!5451 = !DILocation(line: 4904, column: 19, scope: !5214)
!5452 = !DILocation(line: 4905, column: 8, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4905, column: 7)
!5454 = !DILocation(line: 4905, column: 15, scope: !5453)
!5455 = !DILocation(line: 4905, column: 7, scope: !5214)
!5456 = !DILocation(line: 4906, column: 4, scope: !5453)
!5457 = !DILocation(line: 4907, column: 30, scope: !5214)
!5458 = !DILocation(line: 4907, column: 37, scope: !5214)
!5459 = !DILocation(line: 4907, column: 14, scope: !5214)
!5460 = !DILocation(line: 4907, column: 12, scope: !5214)
!5461 = !DILocation(line: 4908, column: 8, scope: !5462)
!5462 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4908, column: 7)
!5463 = !DILocation(line: 4908, column: 7, scope: !5214)
!5464 = !DILocation(line: 4909, column: 10, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5462, file: !3, line: 4908, column: 18)
!5466 = !DILocation(line: 4909, column: 17, scope: !5465)
!5467 = !DILocation(line: 4909, column: 4, scope: !5465)
!5468 = !DILocation(line: 4910, column: 4, scope: !5465)
!5469 = !DILocation(line: 4912, column: 3, scope: !5214)
!5470 = !DILocation(line: 4912, column: 10, scope: !5214)
!5471 = !DILocation(line: 4912, column: 20, scope: !5214)
!5472 = !DILocation(line: 4912, column: 29, scope: !5214)
!5473 = !DILocation(line: 4913, column: 3, scope: !5214)
!5474 = !DILocation(line: 4913, column: 10, scope: !5214)
!5475 = !DILocation(line: 4913, column: 20, scope: !5214)
!5476 = !DILocation(line: 4913, column: 25, scope: !5214)
!5477 = !DILocation(line: 4914, column: 3, scope: !5214)
!5478 = !DILocation(line: 4914, column: 10, scope: !5214)
!5479 = !DILocation(line: 4914, column: 20, scope: !5214)
!5480 = !DILocation(line: 4914, column: 28, scope: !5214)
!5481 = !DILocation(line: 4915, column: 31, scope: !5214)
!5482 = !DILocation(line: 4915, column: 38, scope: !5214)
!5483 = !DILocation(line: 4915, column: 3, scope: !5214)
!5484 = !DILocation(line: 4915, column: 10, scope: !5214)
!5485 = !DILocation(line: 4915, column: 20, scope: !5214)
!5486 = !DILocation(line: 4915, column: 29, scope: !5214)
!5487 = !DILocation(line: 4916, column: 31, scope: !5214)
!5488 = !DILocation(line: 4916, column: 38, scope: !5214)
!5489 = !DILocation(line: 4916, column: 46, scope: !5214)
!5490 = !DILocation(line: 4916, column: 3, scope: !5214)
!5491 = !DILocation(line: 4916, column: 10, scope: !5214)
!5492 = !DILocation(line: 4916, column: 20, scope: !5214)
!5493 = !DILocation(line: 4916, column: 29, scope: !5214)
!5494 = !DILocation(line: 4917, column: 3, scope: !5214)
!5495 = !DILocation(line: 4917, column: 3, scope: !5496)
!5496 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 4917, column: 3)
!5497 = distinct !DILexicalBlock(scope: !5498, file: !3, line: 4917, column: 3)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !3, line: 4917, column: 3)
!5499 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4917, column: 3)
!5500 = !DILocation(line: 4917, column: 3, scope: !5497)
!5501 = !DILocation(line: 4917, column: 3, scope: !5502)
!5502 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 4917, column: 3)
!5503 = !DILocation(line: 4917, column: 3, scope: !5504)
!5504 = distinct !DILexicalBlock(scope: !5502, file: !3, line: 4917, column: 3)
!5505 = !DILocation(line: 4917, column: 3, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 4917, column: 3)
!5507 = !DILocation(line: 4917, column: 3, scope: !5499)
!5508 = !DILocation(line: 4919, column: 3, scope: !5214)
!5509 = !DILocation(line: 4919, column: 3, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4919, column: 3)
!5511 = !DILocation(line: 4920, column: 3, scope: !5214)
!5512 = !DILocation(line: 4920, column: 3, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4920, column: 3)
!5514 = !DILocation(line: 4922, column: 22, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 4922, column: 7)
!5516 = !DILocation(line: 4922, column: 29, scope: !5515)
!5517 = !DILocation(line: 4922, column: 7, scope: !5515)
!5518 = !DILocation(line: 4922, column: 39, scope: !5515)
!5519 = !DILocation(line: 4922, column: 7, scope: !5214)
!5520 = !DILocation(line: 4923, column: 4, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 4922, column: 44)
!5522 = !DILocation(line: 4923, column: 4, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 4923, column: 4)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 4923, column: 4)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4923, column: 4)
!5526 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 4923, column: 4)
!5527 = !DILocation(line: 4923, column: 4, scope: !5524)
!5528 = !DILocation(line: 4923, column: 4, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 4923, column: 4)
!5530 = !DILocation(line: 4923, column: 4, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 4923, column: 4)
!5532 = !DILocation(line: 4923, column: 4, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 4923, column: 4)
!5534 = !DILocation(line: 4923, column: 4, scope: !5526)
!5535 = !DILocation(line: 4924, column: 4, scope: !5521)
!5536 = !DILocation(line: 4928, column: 6, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 4928, column: 6)
!5538 = !DILocation(line: 4928, column: 13, scope: !5537)
!5539 = !DILocation(line: 4928, column: 23, scope: !5537)
!5540 = !DILocation(line: 4928, column: 31, scope: !5537)
!5541 = !DILocation(line: 4928, column: 6, scope: !4651)
!5542 = !DILocation(line: 4929, column: 3, scope: !5537)
!5543 = !DILocation(line: 4929, column: 10, scope: !5537)
!5544 = !DILocation(line: 4929, column: 19, scope: !5537)
!5545 = !DILocation(line: 4929, column: 23, scope: !5537)
!5546 = !DILocation(line: 4929, column: 28, scope: !5537)
!5547 = !DILocation(line: 4929, column: 33, scope: !5537)
!5548 = !DILocation(line: 4932, column: 6, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 4932, column: 6)
!5550 = !DILocation(line: 4932, column: 13, scope: !5549)
!5551 = !DILocation(line: 4932, column: 21, scope: !5549)
!5552 = !DILocation(line: 4932, column: 6, scope: !4651)
!5553 = !DILocation(line: 4933, column: 30, scope: !5549)
!5554 = !DILocation(line: 4933, column: 37, scope: !5549)
!5555 = !DILocation(line: 4933, column: 3, scope: !5549)
!5556 = !DILocation(line: 4935, column: 2, scope: !4651)
!5557 = !DILocation(line: 4935, column: 9, scope: !4651)
!5558 = !DILocation(line: 4935, column: 17, scope: !4651)
!5559 = !DILocation(line: 4935, column: 26, scope: !4651)
!5560 = !DILocation(line: 4937, column: 2, scope: !4651)
!5561 = !DILocation(line: 4937, column: 2, scope: !5562)
!5562 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 4937, column: 2)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4937, column: 2)
!5564 = distinct !DILexicalBlock(scope: !5565, file: !3, line: 4937, column: 2)
!5565 = distinct !DILexicalBlock(scope: !4651, file: !3, line: 4937, column: 2)
!5566 = !DILocation(line: 4937, column: 2, scope: !5563)
!5567 = !DILocation(line: 4937, column: 2, scope: !5568)
!5568 = distinct !DILexicalBlock(scope: !5562, file: !3, line: 4937, column: 2)
!5569 = !DILocation(line: 4937, column: 2, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5568, file: !3, line: 4937, column: 2)
!5571 = !DILocation(line: 4937, column: 2, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 4937, column: 2)
!5573 = !DILocation(line: 4937, column: 2, scope: !5565)
!5574 = !DILocation(line: 4942, column: 2, scope: !4651)
!5575 = !DILabel(scope: !4651, name: "error", file: !3, line: 4944)
!5576 = !DILocation(line: 4944, column: 1, scope: !4651)
!5577 = !DILocation(line: 4945, column: 2, scope: !4651)
!5578 = !DILabel(scope: !4651, name: "err_remove", file: !3, line: 4946)
!5579 = !DILocation(line: 4946, column: 1, scope: !4651)
!5580 = !DILocation(line: 4947, column: 13, scope: !4651)
!5581 = !DILocation(line: 4947, column: 20, scope: !4651)
!5582 = !DILocation(line: 4947, column: 2, scope: !4651)
!5583 = !DILocation(line: 4948, column: 8, scope: !4651)
!5584 = !DILocation(line: 4948, column: 15, scope: !4651)
!5585 = !DILocation(line: 4948, column: 2, scope: !4651)
!5586 = !DILocation(line: 4949, column: 2, scope: !4651)
!5587 = !DILocation(line: 4950, column: 1, scope: !4651)
!5588 = distinct !DISubprogram(name: "stv090x_driver_init", scope: !3, file: !3, line: 5094, type: !5589, scopeLine: 5094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!439}
!5591 = !DILocation(line: 5094, column: 1, scope: !5588)
!5592 = distinct !DISubprogram(name: "stv090x_driver_exit", scope: !3, file: !3, line: 5094, type: !529, scopeLine: 5094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5593 = !DILocation(line: 5094, column: 1, scope: !5592)
!5594 = distinct !DISubprogram(name: "get_order", scope: !5595, file: !5595, line: 29, type: !5596, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5595 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!5596 = !DISubroutineType(types: !5597)
!5597 = !{!439, !731}
!5598 = !DILocalVariable(name: "x", arg: 1, scope: !5599, file: !5600, line: 366, type: !825)
!5599 = distinct !DISubprogram(name: "fls64", scope: !5600, file: !5600, line: 366, type: !5601, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5600 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5601 = !DISubroutineType(types: !5602)
!5602 = !{!439, !825}
!5603 = !DILocation(line: 366, column: 40, scope: !5599, inlinedAt: !5604)
!5604 = distinct !DILocation(line: 46, column: 9, scope: !5594)
!5605 = !DILocalVariable(name: "bitpos", scope: !5599, file: !5600, line: 368, type: !439)
!5606 = !DILocation(line: 368, column: 6, scope: !5599, inlinedAt: !5604)
!5607 = !DILocalVariable(name: "size", arg: 1, scope: !5594, file: !5595, line: 29, type: !731)
!5608 = !DILocation(line: 29, column: 63, scope: !5594)
!5609 = !DILocation(line: 31, column: 27, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5594, file: !5595, line: 31, column: 6)
!5611 = !DILocation(line: 31, column: 6, scope: !5610)
!5612 = !DILocation(line: 31, column: 6, scope: !5594)
!5613 = !DILocation(line: 32, column: 8, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5615, file: !5595, line: 32, column: 7)
!5615 = distinct !DILexicalBlock(scope: !5610, file: !5595, line: 31, column: 34)
!5616 = !DILocation(line: 32, column: 7, scope: !5615)
!5617 = !DILocation(line: 33, column: 4, scope: !5614)
!5618 = !DILocation(line: 35, column: 7, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5615, file: !5595, line: 35, column: 7)
!5620 = !DILocation(line: 35, column: 12, scope: !5619)
!5621 = !DILocation(line: 35, column: 7, scope: !5615)
!5622 = !DILocation(line: 36, column: 4, scope: !5619)
!5623 = !DILocation(line: 38, column: 10, scope: !5615)
!5624 = !DILocation(line: 38, column: 28, scope: !5615)
!5625 = !DILocation(line: 38, column: 41, scope: !5615)
!5626 = !DILocation(line: 38, column: 3, scope: !5615)
!5627 = !DILocation(line: 41, column: 6, scope: !5594)
!5628 = !DILocation(line: 42, column: 7, scope: !5594)
!5629 = !DILocation(line: 46, column: 15, scope: !5594)
!5630 = !DILocation(line: 374, column: 2, scope: !5599, inlinedAt: !5604)
!5631 = !DILocation(line: 376, column: 14, scope: !5599, inlinedAt: !5604)
!5632 = !{i32 391030}
!5633 = !DILocation(line: 377, column: 9, scope: !5599, inlinedAt: !5604)
!5634 = !DILocation(line: 377, column: 16, scope: !5599, inlinedAt: !5604)
!5635 = !DILocation(line: 46, column: 2, scope: !5594)
!5636 = !DILocation(line: 48, column: 1, scope: !5594)
!5637 = distinct !DISubprogram(name: "__ilog2_u64", scope: !5638, file: !5638, line: 30, type: !5639, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5638 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!5639 = !DISubroutineType(types: !5640)
!5640 = !{!439, !824}
!5641 = !DILocation(line: 366, column: 40, scope: !5599, inlinedAt: !5642)
!5642 = distinct !DILocation(line: 32, column: 9, scope: !5637)
!5643 = !DILocation(line: 368, column: 6, scope: !5599, inlinedAt: !5642)
!5644 = !DILocalVariable(name: "n", arg: 1, scope: !5637, file: !5638, line: 30, type: !824)
!5645 = !DILocation(line: 30, column: 21, scope: !5637)
!5646 = !DILocation(line: 32, column: 15, scope: !5637)
!5647 = !DILocation(line: 374, column: 2, scope: !5599, inlinedAt: !5642)
!5648 = !DILocation(line: 376, column: 14, scope: !5599, inlinedAt: !5642)
!5649 = !DILocation(line: 377, column: 9, scope: !5599, inlinedAt: !5642)
!5650 = !DILocation(line: 377, column: 16, scope: !5599, inlinedAt: !5642)
!5651 = !DILocation(line: 32, column: 18, scope: !5637)
!5652 = !DILocation(line: 32, column: 2, scope: !5637)
!5653 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !5654, file: !5654, line: 137, type: !5655, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5654 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!438, !1328, !2429, !728, !436}
!5657 = !DILocalVariable(name: "s", arg: 1, scope: !5653, file: !5654, line: 137, type: !1328)
!5658 = !DILocation(line: 137, column: 54, scope: !5653)
!5659 = !DILocalVariable(name: "object", arg: 2, scope: !5653, file: !5654, line: 137, type: !2429)
!5660 = !DILocation(line: 137, column: 69, scope: !5653)
!5661 = !DILocalVariable(name: "size", arg: 3, scope: !5653, file: !5654, line: 138, type: !728)
!5662 = !DILocation(line: 138, column: 12, scope: !5653)
!5663 = !DILocalVariable(name: "flags", arg: 4, scope: !5653, file: !5654, line: 138, type: !436)
!5664 = !DILocation(line: 138, column: 24, scope: !5653)
!5665 = !DILocation(line: 140, column: 17, scope: !5653)
!5666 = !DILocation(line: 140, column: 2, scope: !5653)
!5667 = distinct !DISubprogram(name: "stv090x_release", scope: !3, file: !3, line: 4140, type: !586, scopeLine: 4141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5668 = !DILocalVariable(name: "fe", arg: 1, scope: !5667, file: !3, line: 4140, type: !588)
!5669 = !DILocation(line: 4140, column: 50, scope: !5667)
!5670 = !DILocalVariable(name: "state", scope: !5667, file: !3, line: 4142, type: !4654)
!5671 = !DILocation(line: 4142, column: 24, scope: !5667)
!5672 = !DILocation(line: 4142, column: 32, scope: !5667)
!5673 = !DILocation(line: 4142, column: 36, scope: !5667)
!5674 = !DILocation(line: 4144, column: 2, scope: !5667)
!5675 = !DILocation(line: 4144, column: 9, scope: !5667)
!5676 = !DILocation(line: 4144, column: 19, scope: !5667)
!5677 = !DILocation(line: 4144, column: 27, scope: !5667)
!5678 = !DILocation(line: 4145, column: 6, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5667, file: !3, line: 4145, column: 6)
!5680 = !DILocation(line: 4145, column: 13, scope: !5679)
!5681 = !DILocation(line: 4145, column: 23, scope: !5679)
!5682 = !DILocation(line: 4145, column: 32, scope: !5679)
!5683 = !DILocation(line: 4145, column: 6, scope: !5667)
!5684 = !DILocation(line: 4147, column: 3, scope: !5685)
!5685 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 4145, column: 38)
!5686 = !DILocation(line: 4147, column: 3, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 4147, column: 3)
!5688 = distinct !DILexicalBlock(scope: !5689, file: !3, line: 4147, column: 3)
!5689 = distinct !DILexicalBlock(scope: !5690, file: !3, line: 4147, column: 3)
!5690 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 4147, column: 3)
!5691 = !DILocation(line: 4147, column: 3, scope: !5688)
!5692 = !DILocation(line: 4147, column: 3, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5687, file: !3, line: 4147, column: 3)
!5694 = !DILocation(line: 4147, column: 3, scope: !5695)
!5695 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 4147, column: 3)
!5696 = !DILocation(line: 4147, column: 3, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5695, file: !3, line: 4147, column: 3)
!5698 = !DILocation(line: 4147, column: 3, scope: !5690)
!5699 = !DILocation(line: 4149, column: 14, scope: !5685)
!5700 = !DILocation(line: 4149, column: 21, scope: !5685)
!5701 = !DILocation(line: 4149, column: 3, scope: !5685)
!5702 = !DILocation(line: 4150, column: 9, scope: !5685)
!5703 = !DILocation(line: 4150, column: 16, scope: !5685)
!5704 = !DILocation(line: 4150, column: 3, scope: !5685)
!5705 = !DILocation(line: 4151, column: 2, scope: !5685)
!5706 = !DILocation(line: 4153, column: 8, scope: !5667)
!5707 = !DILocation(line: 4153, column: 2, scope: !5667)
!5708 = !DILocation(line: 4154, column: 1, scope: !5667)
!5709 = distinct !DISubprogram(name: "stv090x_init", scope: !3, file: !3, line: 4685, type: !4275, scopeLine: 4686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5710 = !DILocalVariable(name: "fe", arg: 1, scope: !5709, file: !3, line: 4685, type: !588)
!5711 = !DILocation(line: 4685, column: 46, scope: !5709)
!5712 = !DILocalVariable(name: "state", scope: !5709, file: !3, line: 4687, type: !4654)
!5713 = !DILocation(line: 4687, column: 24, scope: !5709)
!5714 = !DILocation(line: 4687, column: 32, scope: !5709)
!5715 = !DILocation(line: 4687, column: 36, scope: !5709)
!5716 = !DILocalVariable(name: "config", scope: !5709, file: !3, line: 4688, type: !5717)
!5717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5718, size: 64)
!5718 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4664)
!5719 = !DILocation(line: 4688, column: 31, scope: !5709)
!5720 = !DILocation(line: 4688, column: 40, scope: !5709)
!5721 = !DILocation(line: 4688, column: 47, scope: !5709)
!5722 = !DILocalVariable(name: "reg", scope: !5709, file: !3, line: 4689, type: !571)
!5723 = !DILocation(line: 4689, column: 6, scope: !5709)
!5724 = !DILocation(line: 4691, column: 6, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4691, column: 6)
!5726 = !DILocation(line: 4691, column: 13, scope: !5725)
!5727 = !DILocation(line: 4691, column: 23, scope: !5725)
!5728 = !DILocation(line: 4691, column: 28, scope: !5725)
!5729 = !DILocation(line: 4691, column: 6, scope: !5709)
!5730 = !DILocation(line: 4695, column: 29, scope: !5731)
!5731 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 4695, column: 7)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 4691, column: 34)
!5733 = !DILocation(line: 4695, column: 7, scope: !5731)
!5734 = !DILocation(line: 4695, column: 39, scope: !5731)
!5735 = !DILocation(line: 4695, column: 7, scope: !5732)
!5736 = !DILocation(line: 4696, column: 4, scope: !5731)
!5737 = !DILocation(line: 4698, column: 7, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 4698, column: 7)
!5739 = !DILocation(line: 4698, column: 15, scope: !5738)
!5740 = !DILocation(line: 4698, column: 7, scope: !5732)
!5741 = !DILocation(line: 4699, column: 8, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 4699, column: 8)
!5743 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 4698, column: 27)
!5744 = !DILocation(line: 4699, column: 16, scope: !5742)
!5745 = !DILocation(line: 4699, column: 27, scope: !5742)
!5746 = !DILocation(line: 4699, column: 31, scope: !5742)
!5747 = !DILocation(line: 4699, column: 8, scope: !5743)
!5748 = !DILocation(line: 4700, column: 5, scope: !5742)
!5749 = !DILocation(line: 4701, column: 3, scope: !5743)
!5750 = !DILocation(line: 4703, column: 29, scope: !5751)
!5751 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 4703, column: 7)
!5752 = !DILocation(line: 4703, column: 7, scope: !5751)
!5753 = !DILocation(line: 4703, column: 39, scope: !5751)
!5754 = !DILocation(line: 4703, column: 7, scope: !5732)
!5755 = !DILocation(line: 4704, column: 4, scope: !5751)
!5756 = !DILocation(line: 4706, column: 20, scope: !5732)
!5757 = !DILocation(line: 4706, column: 38, scope: !5732)
!5758 = !DILocation(line: 4706, column: 46, scope: !5732)
!5759 = !DILocation(line: 4706, column: 3, scope: !5732)
!5760 = !DILocation(line: 4707, column: 3, scope: !5732)
!5761 = !DILocation(line: 4708, column: 25, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 4708, column: 7)
!5763 = !DILocation(line: 4709, column: 18, scope: !5762)
!5764 = !DILocation(line: 4709, column: 26, scope: !5762)
!5765 = !DILocation(line: 4709, column: 16, scope: !5762)
!5766 = !DILocation(line: 4709, column: 11, scope: !5762)
!5767 = !DILocation(line: 4708, column: 7, scope: !5762)
!5768 = !DILocation(line: 4709, column: 36, scope: !5762)
!5769 = !DILocation(line: 4708, column: 7, scope: !5732)
!5770 = !DILocation(line: 4710, column: 4, scope: !5762)
!5771 = !DILocation(line: 4711, column: 20, scope: !5732)
!5772 = !DILocation(line: 4711, column: 3, scope: !5732)
!5773 = !DILocation(line: 4712, column: 2, scope: !5732)
!5774 = !DILocation(line: 4714, column: 21, scope: !5775)
!5775 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4714, column: 6)
!5776 = !DILocation(line: 4714, column: 6, scope: !5775)
!5777 = !DILocation(line: 4714, column: 25, scope: !5775)
!5778 = !DILocation(line: 4714, column: 6, scope: !5709)
!5779 = !DILocation(line: 4715, column: 3, scope: !5780)
!5780 = distinct !DILexicalBlock(scope: !5775, file: !3, line: 4714, column: 30)
!5781 = !DILocation(line: 4715, column: 3, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 4715, column: 3)
!5783 = distinct !DILexicalBlock(scope: !5784, file: !3, line: 4715, column: 3)
!5784 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 4715, column: 3)
!5785 = distinct !DILexicalBlock(scope: !5780, file: !3, line: 4715, column: 3)
!5786 = !DILocation(line: 4715, column: 3, scope: !5783)
!5787 = !DILocation(line: 4715, column: 3, scope: !5788)
!5788 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 4715, column: 3)
!5789 = !DILocation(line: 4715, column: 3, scope: !5790)
!5790 = distinct !DILexicalBlock(scope: !5788, file: !3, line: 4715, column: 3)
!5791 = !DILocation(line: 4715, column: 3, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5790, file: !3, line: 4715, column: 3)
!5793 = !DILocation(line: 4715, column: 3, scope: !5785)
!5794 = !DILocation(line: 4716, column: 3, scope: !5780)
!5795 = !DILocation(line: 4719, column: 24, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4719, column: 6)
!5797 = !DILocation(line: 4719, column: 31, scope: !5796)
!5798 = !DILocation(line: 4719, column: 38, scope: !5796)
!5799 = !DILocation(line: 4719, column: 6, scope: !5796)
!5800 = !DILocation(line: 4719, column: 50, scope: !5796)
!5801 = !DILocation(line: 4719, column: 6, scope: !5709)
!5802 = !DILocation(line: 4720, column: 3, scope: !5796)
!5803 = !DILocation(line: 4722, column: 8, scope: !5709)
!5804 = !DILocation(line: 4722, column: 6, scope: !5709)
!5805 = !DILocation(line: 4723, column: 2, scope: !5709)
!5806 = !DILocation(line: 4724, column: 6, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4724, column: 6)
!5808 = !DILocation(line: 4724, column: 47, scope: !5807)
!5809 = !DILocation(line: 4724, column: 6, scope: !5709)
!5810 = !DILocation(line: 4725, column: 3, scope: !5807)
!5811 = !DILocation(line: 4726, column: 8, scope: !5709)
!5812 = !DILocation(line: 4726, column: 6, scope: !5709)
!5813 = !DILocation(line: 4727, column: 2, scope: !5709)
!5814 = !DILocation(line: 4728, column: 6, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4728, column: 6)
!5816 = !DILocation(line: 4728, column: 45, scope: !5815)
!5817 = !DILocation(line: 4728, column: 6, scope: !5709)
!5818 = !DILocation(line: 4729, column: 3, scope: !5815)
!5819 = !DILocation(line: 4731, column: 28, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4731, column: 6)
!5821 = !DILocation(line: 4731, column: 6, scope: !5820)
!5822 = !DILocation(line: 4731, column: 38, scope: !5820)
!5823 = !DILocation(line: 4731, column: 6, scope: !5709)
!5824 = !DILocation(line: 4732, column: 3, scope: !5820)
!5825 = !DILocation(line: 4734, column: 6, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4734, column: 6)
!5827 = !DILocation(line: 4734, column: 14, scope: !5826)
!5828 = !DILocation(line: 4734, column: 6, scope: !5709)
!5829 = !DILocation(line: 4735, column: 7, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5831, file: !3, line: 4735, column: 7)
!5831 = distinct !DILexicalBlock(scope: !5826, file: !3, line: 4734, column: 30)
!5832 = !DILocation(line: 4735, column: 15, scope: !5830)
!5833 = !DILocation(line: 4735, column: 30, scope: !5830)
!5834 = !DILocation(line: 4735, column: 46, scope: !5830)
!5835 = !DILocation(line: 4735, column: 7, scope: !5831)
!5836 = !DILocation(line: 4736, column: 4, scope: !5830)
!5837 = !DILocation(line: 4737, column: 2, scope: !5831)
!5838 = !DILocation(line: 4739, column: 6, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4739, column: 6)
!5840 = !DILocation(line: 4739, column: 14, scope: !5839)
!5841 = !DILocation(line: 4739, column: 6, scope: !5709)
!5842 = !DILocation(line: 4740, column: 7, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 4740, column: 7)
!5844 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 4739, column: 26)
!5845 = !DILocation(line: 4740, column: 15, scope: !5843)
!5846 = !DILocation(line: 4740, column: 26, scope: !5843)
!5847 = !DILocation(line: 4740, column: 30, scope: !5843)
!5848 = !DILocation(line: 4740, column: 7, scope: !5844)
!5849 = !DILocation(line: 4741, column: 4, scope: !5843)
!5850 = !DILocation(line: 4742, column: 2, scope: !5844)
!5851 = !DILocation(line: 4744, column: 28, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4744, column: 6)
!5853 = !DILocation(line: 4744, column: 6, scope: !5852)
!5854 = !DILocation(line: 4744, column: 38, scope: !5852)
!5855 = !DILocation(line: 4744, column: 6, scope: !5709)
!5856 = !DILocation(line: 4745, column: 3, scope: !5852)
!5857 = !DILocation(line: 4747, column: 6, scope: !5858)
!5858 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4747, column: 6)
!5859 = !DILocation(line: 4747, column: 13, scope: !5858)
!5860 = !DILocation(line: 4747, column: 20, scope: !5858)
!5861 = !DILocation(line: 4747, column: 6, scope: !5709)
!5862 = !DILocation(line: 4748, column: 26, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 4748, column: 7)
!5864 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 4747, column: 32)
!5865 = !DILocation(line: 4748, column: 7, scope: !5863)
!5866 = !DILocation(line: 4748, column: 33, scope: !5863)
!5867 = !DILocation(line: 4748, column: 7, scope: !5864)
!5868 = !DILocation(line: 4749, column: 4, scope: !5863)
!5869 = !DILocation(line: 4750, column: 2, scope: !5864)
!5870 = !DILocation(line: 4751, column: 26, scope: !5871)
!5871 = distinct !DILexicalBlock(scope: !5872, file: !3, line: 4751, column: 7)
!5872 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 4750, column: 9)
!5873 = !DILocation(line: 4751, column: 7, scope: !5871)
!5874 = !DILocation(line: 4751, column: 33, scope: !5871)
!5875 = !DILocation(line: 4751, column: 7, scope: !5872)
!5876 = !DILocation(line: 4752, column: 4, scope: !5871)
!5877 = !DILocation(line: 4755, column: 2, scope: !5709)
!5878 = !DILabel(scope: !5709, name: "err_gateoff", file: !3, line: 4757)
!5879 = !DILocation(line: 4757, column: 1, scope: !5709)
!5880 = !DILocation(line: 4758, column: 24, scope: !5709)
!5881 = !DILocation(line: 4758, column: 2, scope: !5709)
!5882 = !DILabel(scope: !5709, name: "err", file: !3, line: 4759)
!5883 = !DILocation(line: 4759, column: 1, scope: !5709)
!5884 = !DILocation(line: 4760, column: 2, scope: !5709)
!5885 = !DILocation(line: 4760, column: 2, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5887, file: !3, line: 4760, column: 2)
!5887 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 4760, column: 2)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 4760, column: 2)
!5889 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 4760, column: 2)
!5890 = !DILocation(line: 4760, column: 2, scope: !5887)
!5891 = !DILocation(line: 4760, column: 2, scope: !5892)
!5892 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 4760, column: 2)
!5893 = !DILocation(line: 4760, column: 2, scope: !5894)
!5894 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 4760, column: 2)
!5895 = !DILocation(line: 4760, column: 2, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 4760, column: 2)
!5897 = !DILocation(line: 4760, column: 2, scope: !5889)
!5898 = !DILocation(line: 4761, column: 2, scope: !5709)
!5899 = !DILocation(line: 4762, column: 1, scope: !5709)
!5900 = distinct !DISubprogram(name: "stv090x_sleep", scope: !3, file: !3, line: 3907, type: !4275, scopeLine: 3908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!5901 = !DILocalVariable(name: "fe", arg: 1, scope: !5900, file: !3, line: 3907, type: !588)
!5902 = !DILocation(line: 3907, column: 47, scope: !5900)
!5903 = !DILocalVariable(name: "state", scope: !5900, file: !3, line: 3909, type: !4654)
!5904 = !DILocation(line: 3909, column: 24, scope: !5900)
!5905 = !DILocation(line: 3909, column: 32, scope: !5900)
!5906 = !DILocation(line: 3909, column: 36, scope: !5900)
!5907 = !DILocalVariable(name: "reg", scope: !5900, file: !3, line: 3910, type: !571)
!5908 = !DILocation(line: 3910, column: 6, scope: !5900)
!5909 = !DILocalVariable(name: "full_standby", scope: !5900, file: !3, line: 3911, type: !492)
!5910 = !DILocation(line: 3911, column: 5, scope: !5900)
!5911 = !DILocation(line: 3913, column: 28, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3913, column: 6)
!5913 = !DILocation(line: 3913, column: 6, scope: !5912)
!5914 = !DILocation(line: 3913, column: 38, scope: !5912)
!5915 = !DILocation(line: 3913, column: 6, scope: !5900)
!5916 = !DILocation(line: 3914, column: 3, scope: !5912)
!5917 = !DILocation(line: 3916, column: 6, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3916, column: 6)
!5919 = !DILocation(line: 3916, column: 13, scope: !5918)
!5920 = !DILocation(line: 3916, column: 21, scope: !5918)
!5921 = !DILocation(line: 3916, column: 6, scope: !5900)
!5922 = !DILocation(line: 3917, column: 7, scope: !5923)
!5923 = distinct !DILexicalBlock(scope: !5924, file: !3, line: 3917, column: 7)
!5924 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 3916, column: 34)
!5925 = !DILocation(line: 3917, column: 14, scope: !5923)
!5926 = !DILocation(line: 3917, column: 22, scope: !5923)
!5927 = !DILocation(line: 3917, column: 34, scope: !5923)
!5928 = !DILocation(line: 3917, column: 38, scope: !5923)
!5929 = !DILocation(line: 3917, column: 7, scope: !5924)
!5930 = !DILocation(line: 3918, column: 4, scope: !5923)
!5931 = !DILocation(line: 3919, column: 2, scope: !5924)
!5932 = !DILocation(line: 3921, column: 28, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3921, column: 6)
!5934 = !DILocation(line: 3921, column: 6, scope: !5933)
!5935 = !DILocation(line: 3921, column: 38, scope: !5933)
!5936 = !DILocation(line: 3921, column: 6, scope: !5900)
!5937 = !DILocation(line: 3922, column: 3, scope: !5933)
!5938 = !DILocation(line: 3924, column: 2, scope: !5900)
!5939 = !DILocation(line: 3924, column: 2, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 3924, column: 2)
!5941 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 3924, column: 2)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 3924, column: 2)
!5943 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3924, column: 2)
!5944 = !DILocation(line: 3924, column: 2, scope: !5941)
!5945 = !DILocation(line: 3924, column: 2, scope: !5946)
!5946 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 3924, column: 2)
!5947 = !DILocation(line: 3924, column: 2, scope: !5948)
!5948 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 3924, column: 2)
!5949 = !DILocation(line: 3924, column: 2, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 3924, column: 2)
!5951 = !DILocation(line: 3924, column: 2, scope: !5943)
!5952 = !DILocation(line: 3928, column: 14, scope: !5900)
!5953 = !DILocation(line: 3928, column: 21, scope: !5900)
!5954 = !DILocation(line: 3928, column: 31, scope: !5900)
!5955 = !DILocation(line: 3928, column: 2, scope: !5900)
!5956 = !DILocation(line: 3930, column: 10, scope: !5900)
!5957 = !DILocation(line: 3930, column: 17, scope: !5900)
!5958 = !DILocation(line: 3930, column: 2, scope: !5900)
!5959 = !DILocation(line: 3933, column: 26, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 3930, column: 24)
!5961 = !DILocation(line: 3933, column: 9, scope: !5960)
!5962 = !DILocation(line: 3933, column: 7, scope: !5960)
!5963 = !DILocation(line: 3934, column: 3, scope: !5960)
!5964 = !DILocation(line: 3935, column: 25, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3935, column: 7)
!5966 = !DILocation(line: 3935, column: 49, scope: !5965)
!5967 = !DILocation(line: 3935, column: 7, scope: !5965)
!5968 = !DILocation(line: 3935, column: 54, scope: !5965)
!5969 = !DILocation(line: 3935, column: 7, scope: !5960)
!5970 = !DILocation(line: 3936, column: 4, scope: !5965)
!5971 = !DILocation(line: 3938, column: 26, scope: !5960)
!5972 = !DILocation(line: 3938, column: 9, scope: !5960)
!5973 = !DILocation(line: 3938, column: 7, scope: !5960)
!5974 = !DILocation(line: 3939, column: 3, scope: !5960)
!5975 = !DILocation(line: 3940, column: 25, scope: !5976)
!5976 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3940, column: 7)
!5977 = !DILocation(line: 3940, column: 49, scope: !5976)
!5978 = !DILocation(line: 3940, column: 7, scope: !5976)
!5979 = !DILocation(line: 3940, column: 54, scope: !5976)
!5980 = !DILocation(line: 3940, column: 7, scope: !5960)
!5981 = !DILocation(line: 3941, column: 4, scope: !5976)
!5982 = !DILocation(line: 3945, column: 26, scope: !5960)
!5983 = !DILocation(line: 3945, column: 9, scope: !5960)
!5984 = !DILocation(line: 3945, column: 7, scope: !5960)
!5985 = !DILocation(line: 3946, column: 7, scope: !5986)
!5986 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3946, column: 7)
!5987 = !DILocation(line: 3946, column: 45, scope: !5986)
!5988 = !DILocation(line: 3946, column: 7, scope: !5960)
!5989 = !DILocation(line: 3947, column: 17, scope: !5986)
!5990 = !DILocation(line: 3947, column: 4, scope: !5986)
!5991 = !DILocation(line: 3950, column: 26, scope: !5960)
!5992 = !DILocation(line: 3950, column: 9, scope: !5960)
!5993 = !DILocation(line: 3950, column: 7, scope: !5960)
!5994 = !DILocation(line: 3952, column: 3, scope: !5960)
!5995 = !DILocation(line: 3954, column: 3, scope: !5960)
!5996 = !DILocation(line: 3957, column: 7, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3957, column: 7)
!5998 = !DILocation(line: 3957, column: 7, scope: !5960)
!5999 = !DILocation(line: 3958, column: 4, scope: !5997)
!6000 = !DILocation(line: 3959, column: 25, scope: !6001)
!6001 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3959, column: 7)
!6002 = !DILocation(line: 3959, column: 50, scope: !6001)
!6003 = !DILocation(line: 3959, column: 7, scope: !6001)
!6004 = !DILocation(line: 3959, column: 55, scope: !6001)
!6005 = !DILocation(line: 3959, column: 7, scope: !5960)
!6006 = !DILocation(line: 3960, column: 4, scope: !6001)
!6007 = !DILocation(line: 3961, column: 26, scope: !5960)
!6008 = !DILocation(line: 3961, column: 9, scope: !5960)
!6009 = !DILocation(line: 3961, column: 7, scope: !5960)
!6010 = !DILocation(line: 3963, column: 3, scope: !5960)
!6011 = !DILocation(line: 3965, column: 3, scope: !5960)
!6012 = !DILocation(line: 3968, column: 7, scope: !6013)
!6013 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3968, column: 7)
!6014 = !DILocation(line: 3968, column: 7, scope: !5960)
!6015 = !DILocation(line: 3969, column: 4, scope: !6013)
!6016 = !DILocation(line: 3970, column: 25, scope: !6017)
!6017 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3970, column: 7)
!6018 = !DILocation(line: 3970, column: 50, scope: !6017)
!6019 = !DILocation(line: 3970, column: 7, scope: !6017)
!6020 = !DILocation(line: 3970, column: 55, scope: !6017)
!6021 = !DILocation(line: 3970, column: 7, scope: !5960)
!6022 = !DILocation(line: 3971, column: 4, scope: !6017)
!6023 = !DILocation(line: 3972, column: 3, scope: !5960)
!6024 = !DILocation(line: 3976, column: 26, scope: !5960)
!6025 = !DILocation(line: 3976, column: 9, scope: !5960)
!6026 = !DILocation(line: 3976, column: 7, scope: !5960)
!6027 = !DILocation(line: 3977, column: 3, scope: !5960)
!6028 = !DILocation(line: 3978, column: 25, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3978, column: 7)
!6030 = !DILocation(line: 3978, column: 49, scope: !6029)
!6031 = !DILocation(line: 3978, column: 7, scope: !6029)
!6032 = !DILocation(line: 3978, column: 54, scope: !6029)
!6033 = !DILocation(line: 3978, column: 7, scope: !5960)
!6034 = !DILocation(line: 3979, column: 4, scope: !6029)
!6035 = !DILocation(line: 3981, column: 26, scope: !5960)
!6036 = !DILocation(line: 3981, column: 9, scope: !5960)
!6037 = !DILocation(line: 3981, column: 7, scope: !5960)
!6038 = !DILocation(line: 3982, column: 3, scope: !5960)
!6039 = !DILocation(line: 3983, column: 25, scope: !6040)
!6040 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3983, column: 7)
!6041 = !DILocation(line: 3983, column: 49, scope: !6040)
!6042 = !DILocation(line: 3983, column: 7, scope: !6040)
!6043 = !DILocation(line: 3983, column: 54, scope: !6040)
!6044 = !DILocation(line: 3983, column: 7, scope: !5960)
!6045 = !DILocation(line: 3984, column: 4, scope: !6040)
!6046 = !DILocation(line: 3988, column: 26, scope: !5960)
!6047 = !DILocation(line: 3988, column: 9, scope: !5960)
!6048 = !DILocation(line: 3988, column: 7, scope: !5960)
!6049 = !DILocation(line: 3989, column: 7, scope: !6050)
!6050 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 3989, column: 7)
!6051 = !DILocation(line: 3989, column: 45, scope: !6050)
!6052 = !DILocation(line: 3989, column: 7, scope: !5960)
!6053 = !DILocation(line: 3990, column: 17, scope: !6050)
!6054 = !DILocation(line: 3990, column: 4, scope: !6050)
!6055 = !DILocation(line: 3993, column: 26, scope: !5960)
!6056 = !DILocation(line: 3993, column: 9, scope: !5960)
!6057 = !DILocation(line: 3993, column: 7, scope: !5960)
!6058 = !DILocation(line: 3995, column: 3, scope: !5960)
!6059 = !DILocation(line: 3997, column: 3, scope: !5960)
!6060 = !DILocation(line: 4000, column: 7, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 4000, column: 7)
!6062 = !DILocation(line: 4000, column: 7, scope: !5960)
!6063 = !DILocation(line: 4001, column: 4, scope: !6061)
!6064 = !DILocation(line: 4002, column: 25, scope: !6065)
!6065 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 4002, column: 7)
!6066 = !DILocation(line: 4002, column: 50, scope: !6065)
!6067 = !DILocation(line: 4002, column: 7, scope: !6065)
!6068 = !DILocation(line: 4002, column: 55, scope: !6065)
!6069 = !DILocation(line: 4002, column: 7, scope: !5960)
!6070 = !DILocation(line: 4003, column: 4, scope: !6065)
!6071 = !DILocation(line: 4004, column: 26, scope: !5960)
!6072 = !DILocation(line: 4004, column: 9, scope: !5960)
!6073 = !DILocation(line: 4004, column: 7, scope: !5960)
!6074 = !DILocation(line: 4006, column: 3, scope: !5960)
!6075 = !DILocation(line: 4008, column: 3, scope: !5960)
!6076 = !DILocation(line: 4011, column: 7, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 4011, column: 7)
!6078 = !DILocation(line: 4011, column: 7, scope: !5960)
!6079 = !DILocation(line: 4012, column: 4, scope: !6077)
!6080 = !DILocation(line: 4013, column: 25, scope: !6081)
!6081 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 4013, column: 7)
!6082 = !DILocation(line: 4013, column: 50, scope: !6081)
!6083 = !DILocation(line: 4013, column: 7, scope: !6081)
!6084 = !DILocation(line: 4013, column: 55, scope: !6081)
!6085 = !DILocation(line: 4013, column: 7, scope: !5960)
!6086 = !DILocation(line: 4014, column: 4, scope: !6081)
!6087 = !DILocation(line: 4015, column: 3, scope: !5960)
!6088 = !DILocation(line: 4018, column: 3, scope: !5960)
!6089 = !DILocation(line: 4018, column: 3, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6091, file: !3, line: 4018, column: 3)
!6091 = distinct !DILexicalBlock(scope: !6092, file: !3, line: 4018, column: 3)
!6092 = distinct !DILexicalBlock(scope: !6093, file: !3, line: 4018, column: 3)
!6093 = distinct !DILexicalBlock(scope: !5960, file: !3, line: 4018, column: 3)
!6094 = !DILocation(line: 4018, column: 3, scope: !6091)
!6095 = !DILocation(line: 4018, column: 3, scope: !6096)
!6096 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 4018, column: 3)
!6097 = !DILocation(line: 4018, column: 3, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 4018, column: 3)
!6099 = !DILocation(line: 4018, column: 3, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6098, file: !3, line: 4018, column: 3)
!6101 = !DILocation(line: 4018, column: 3, scope: !6093)
!6102 = !DILocation(line: 4019, column: 3, scope: !5960)
!6103 = !DILocation(line: 4022, column: 6, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 4022, column: 6)
!6105 = !DILocation(line: 4022, column: 6, scope: !5900)
!6106 = !DILocation(line: 4024, column: 26, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 4022, column: 20)
!6108 = !DILocation(line: 4024, column: 9, scope: !6107)
!6109 = !DILocation(line: 4024, column: 7, scope: !6107)
!6110 = !DILocation(line: 4025, column: 3, scope: !6107)
!6111 = !DILocation(line: 4026, column: 25, scope: !6112)
!6112 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 4026, column: 7)
!6113 = !DILocation(line: 4026, column: 50, scope: !6112)
!6114 = !DILocation(line: 4026, column: 7, scope: !6112)
!6115 = !DILocation(line: 4026, column: 55, scope: !6112)
!6116 = !DILocation(line: 4026, column: 7, scope: !6107)
!6117 = !DILocation(line: 4027, column: 4, scope: !6112)
!6118 = !DILocation(line: 4028, column: 2, scope: !6107)
!6119 = !DILocation(line: 4030, column: 16, scope: !5900)
!6120 = !DILocation(line: 4030, column: 23, scope: !5900)
!6121 = !DILocation(line: 4030, column: 33, scope: !5900)
!6122 = !DILocation(line: 4030, column: 2, scope: !5900)
!6123 = !DILocation(line: 4031, column: 2, scope: !5900)
!6124 = !DILabel(scope: !5900, name: "err_gateoff", file: !3, line: 4033)
!6125 = !DILocation(line: 4033, column: 1, scope: !5900)
!6126 = !DILocation(line: 4034, column: 24, scope: !5900)
!6127 = !DILocation(line: 4034, column: 2, scope: !5900)
!6128 = !DILocation(line: 4035, column: 2, scope: !5900)
!6129 = !DILabel(scope: !5900, name: "err_unlock", file: !3, line: 4036)
!6130 = !DILocation(line: 4036, column: 1, scope: !5900)
!6131 = !DILocation(line: 4037, column: 16, scope: !5900)
!6132 = !DILocation(line: 4037, column: 23, scope: !5900)
!6133 = !DILocation(line: 4037, column: 33, scope: !5900)
!6134 = !DILocation(line: 4037, column: 2, scope: !5900)
!6135 = !DILabel(scope: !5900, name: "err", file: !3, line: 4038)
!6136 = !DILocation(line: 4038, column: 1, scope: !5900)
!6137 = !DILocation(line: 4039, column: 2, scope: !5900)
!6138 = !DILocation(line: 4039, column: 2, scope: !6139)
!6139 = distinct !DILexicalBlock(scope: !6140, file: !3, line: 4039, column: 2)
!6140 = distinct !DILexicalBlock(scope: !6141, file: !3, line: 4039, column: 2)
!6141 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 4039, column: 2)
!6142 = distinct !DILexicalBlock(scope: !5900, file: !3, line: 4039, column: 2)
!6143 = !DILocation(line: 4039, column: 2, scope: !6140)
!6144 = !DILocation(line: 4039, column: 2, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 4039, column: 2)
!6146 = !DILocation(line: 4039, column: 2, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 4039, column: 2)
!6148 = !DILocation(line: 4039, column: 2, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6147, file: !3, line: 4039, column: 2)
!6150 = !DILocation(line: 4039, column: 2, scope: !6142)
!6151 = !DILocation(line: 4040, column: 2, scope: !5900)
!6152 = !DILocation(line: 4041, column: 1, scope: !5900)
!6153 = distinct !DISubprogram(name: "stv090x_frontend_algo", scope: !3, file: !3, line: 3772, type: !4291, scopeLine: 3773, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6154 = !DILocalVariable(name: "fe", arg: 1, scope: !6153, file: !3, line: 3772, type: !588)
!6155 = !DILocation(line: 3772, column: 67, scope: !6153)
!6156 = !DILocation(line: 3774, column: 2, scope: !6153)
!6157 = distinct !DISubprogram(name: "stv090x_read_status", scope: !3, file: !3, line: 3512, type: !4311, scopeLine: 3513, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6158 = !DILocalVariable(name: "fe", arg: 1, scope: !6157, file: !3, line: 3512, type: !588)
!6159 = !DILocation(line: 3512, column: 53, scope: !6157)
!6160 = !DILocalVariable(name: "status", arg: 2, scope: !6157, file: !3, line: 3512, type: !4288)
!6161 = !DILocation(line: 3512, column: 73, scope: !6157)
!6162 = !DILocalVariable(name: "state", scope: !6157, file: !3, line: 3514, type: !4654)
!6163 = !DILocation(line: 3514, column: 24, scope: !6157)
!6164 = !DILocation(line: 3514, column: 32, scope: !6157)
!6165 = !DILocation(line: 3514, column: 36, scope: !6157)
!6166 = !DILocalVariable(name: "reg", scope: !6157, file: !3, line: 3515, type: !571)
!6167 = !DILocation(line: 3515, column: 6, scope: !6157)
!6168 = !DILocalVariable(name: "dstatus", scope: !6157, file: !3, line: 3515, type: !571)
!6169 = !DILocation(line: 3515, column: 11, scope: !6157)
!6170 = !DILocalVariable(name: "search_state", scope: !6157, file: !3, line: 3516, type: !492)
!6171 = !DILocation(line: 3516, column: 5, scope: !6157)
!6172 = !DILocation(line: 3518, column: 3, scope: !6157)
!6173 = !DILocation(line: 3518, column: 10, scope: !6157)
!6174 = !DILocation(line: 3520, column: 12, scope: !6157)
!6175 = !DILocation(line: 3520, column: 10, scope: !6157)
!6176 = !DILocation(line: 3521, column: 6, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 3521, column: 6)
!6178 = !DILocation(line: 3521, column: 6, scope: !6157)
!6179 = !DILocation(line: 3522, column: 4, scope: !6177)
!6180 = !DILocation(line: 3522, column: 11, scope: !6177)
!6181 = !DILocation(line: 3522, column: 3, scope: !6177)
!6182 = !DILocation(line: 3524, column: 8, scope: !6157)
!6183 = !DILocation(line: 3524, column: 6, scope: !6157)
!6184 = !DILocation(line: 3525, column: 17, scope: !6157)
!6185 = !DILocation(line: 3525, column: 15, scope: !6157)
!6186 = !DILocation(line: 3527, column: 10, scope: !6157)
!6187 = !DILocation(line: 3527, column: 2, scope: !6157)
!6188 = !DILocation(line: 3527, column: 24, scope: !6157)
!6189 = !DILocation(line: 3531, column: 3, scope: !6190)
!6190 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 3527, column: 24)
!6191 = !DILocation(line: 3531, column: 3, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 3531, column: 3)
!6193 = distinct !DILexicalBlock(scope: !6194, file: !3, line: 3531, column: 3)
!6194 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 3531, column: 3)
!6195 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 3531, column: 3)
!6196 = !DILocation(line: 3531, column: 3, scope: !6193)
!6197 = !DILocation(line: 3531, column: 3, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 3531, column: 3)
!6199 = !DILocation(line: 3531, column: 3, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 3531, column: 3)
!6201 = !DILocation(line: 3531, column: 3, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 3531, column: 3)
!6203 = !DILocation(line: 3531, column: 3, scope: !6195)
!6204 = !DILocation(line: 3532, column: 3, scope: !6190)
!6205 = !DILocation(line: 3535, column: 3, scope: !6190)
!6206 = !DILocation(line: 3535, column: 3, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6208, file: !3, line: 3535, column: 3)
!6208 = distinct !DILexicalBlock(scope: !6209, file: !3, line: 3535, column: 3)
!6209 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 3535, column: 3)
!6210 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 3535, column: 3)
!6211 = !DILocation(line: 3535, column: 3, scope: !6208)
!6212 = !DILocation(line: 3535, column: 3, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3535, column: 3)
!6214 = !DILocation(line: 3535, column: 3, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 3535, column: 3)
!6216 = !DILocation(line: 3535, column: 3, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6215, file: !3, line: 3535, column: 3)
!6218 = !DILocation(line: 3535, column: 3, scope: !6210)
!6219 = !DILocation(line: 3536, column: 7, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 3536, column: 7)
!6221 = !DILocation(line: 3536, column: 7, scope: !6190)
!6222 = !DILocation(line: 3537, column: 10, scope: !6223)
!6223 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 3536, column: 59)
!6224 = !DILocation(line: 3537, column: 8, scope: !6223)
!6225 = !DILocation(line: 3538, column: 8, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6223, file: !3, line: 3538, column: 8)
!6227 = !DILocation(line: 3538, column: 8, scope: !6223)
!6228 = !DILocation(line: 3539, column: 6, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6226, file: !3, line: 3538, column: 55)
!6230 = !DILocation(line: 3539, column: 13, scope: !6229)
!6231 = !DILocation(line: 3540, column: 11, scope: !6229)
!6232 = !DILocation(line: 3540, column: 9, scope: !6229)
!6233 = !DILocation(line: 3541, column: 9, scope: !6234)
!6234 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 3541, column: 9)
!6235 = !DILocation(line: 3541, column: 9, scope: !6229)
!6236 = !DILocation(line: 3542, column: 7, scope: !6234)
!6237 = !DILocation(line: 3542, column: 14, scope: !6234)
!6238 = !DILocation(line: 3542, column: 6, scope: !6234)
!6239 = !DILocation(line: 3543, column: 4, scope: !6229)
!6240 = !DILocation(line: 3544, column: 3, scope: !6223)
!6241 = !DILocation(line: 3545, column: 3, scope: !6190)
!6242 = !DILocation(line: 3548, column: 3, scope: !6190)
!6243 = !DILocation(line: 3548, column: 3, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 3548, column: 3)
!6245 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 3548, column: 3)
!6246 = distinct !DILexicalBlock(scope: !6247, file: !3, line: 3548, column: 3)
!6247 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 3548, column: 3)
!6248 = !DILocation(line: 3548, column: 3, scope: !6245)
!6249 = !DILocation(line: 3548, column: 3, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 3548, column: 3)
!6251 = !DILocation(line: 3548, column: 3, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6250, file: !3, line: 3548, column: 3)
!6253 = !DILocation(line: 3548, column: 3, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 3548, column: 3)
!6255 = !DILocation(line: 3548, column: 3, scope: !6247)
!6256 = !DILocation(line: 3549, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !6190, file: !3, line: 3549, column: 7)
!6258 = !DILocation(line: 3549, column: 7, scope: !6190)
!6259 = !DILocation(line: 3550, column: 10, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 3549, column: 59)
!6261 = !DILocation(line: 3550, column: 8, scope: !6260)
!6262 = !DILocation(line: 3551, column: 8, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 3551, column: 8)
!6264 = !DILocation(line: 3551, column: 8, scope: !6260)
!6265 = !DILocation(line: 3552, column: 6, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6263, file: !3, line: 3551, column: 51)
!6267 = !DILocation(line: 3552, column: 13, scope: !6266)
!6268 = !DILocation(line: 3553, column: 11, scope: !6266)
!6269 = !DILocation(line: 3553, column: 9, scope: !6266)
!6270 = !DILocation(line: 3554, column: 9, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6266, file: !3, line: 3554, column: 9)
!6272 = !DILocation(line: 3554, column: 9, scope: !6266)
!6273 = !DILocation(line: 3555, column: 7, scope: !6271)
!6274 = !DILocation(line: 3555, column: 14, scope: !6271)
!6275 = !DILocation(line: 3555, column: 6, scope: !6271)
!6276 = !DILocation(line: 3556, column: 4, scope: !6266)
!6277 = !DILocation(line: 3557, column: 3, scope: !6260)
!6278 = !DILocation(line: 3558, column: 3, scope: !6190)
!6279 = !DILocation(line: 3561, column: 2, scope: !6157)
!6280 = distinct !DISubprogram(name: "stv090x_read_per", scope: !3, file: !3, line: 3564, type: !4315, scopeLine: 3565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6281 = !DILocalVariable(name: "fe", arg: 1, scope: !6280, file: !3, line: 3564, type: !588)
!6282 = !DILocation(line: 3564, column: 50, scope: !6280)
!6283 = !DILocalVariable(name: "per", arg: 2, scope: !6280, file: !3, line: 3564, type: !1716)
!6284 = !DILocation(line: 3564, column: 59, scope: !6280)
!6285 = !DILocalVariable(name: "state", scope: !6280, file: !3, line: 3566, type: !4654)
!6286 = !DILocation(line: 3566, column: 24, scope: !6280)
!6287 = !DILocation(line: 3566, column: 32, scope: !6280)
!6288 = !DILocation(line: 3566, column: 36, scope: !6280)
!6289 = !DILocalVariable(name: "count_4", scope: !6280, file: !3, line: 3568, type: !445)
!6290 = !DILocation(line: 3568, column: 6, scope: !6280)
!6291 = !DILocalVariable(name: "count_3", scope: !6280, file: !3, line: 3568, type: !445)
!6292 = !DILocation(line: 3568, column: 15, scope: !6280)
!6293 = !DILocalVariable(name: "count_2", scope: !6280, file: !3, line: 3568, type: !445)
!6294 = !DILocation(line: 3568, column: 24, scope: !6280)
!6295 = !DILocalVariable(name: "count_1", scope: !6280, file: !3, line: 3568, type: !445)
!6296 = !DILocation(line: 3568, column: 33, scope: !6280)
!6297 = !DILocalVariable(name: "count_0", scope: !6280, file: !3, line: 3568, type: !445)
!6298 = !DILocation(line: 3568, column: 42, scope: !6280)
!6299 = !DILocalVariable(name: "count", scope: !6280, file: !3, line: 3568, type: !445)
!6300 = !DILocation(line: 3568, column: 51, scope: !6280)
!6301 = !DILocalVariable(name: "reg", scope: !6280, file: !3, line: 3569, type: !571)
!6302 = !DILocation(line: 3569, column: 6, scope: !6280)
!6303 = !DILocalVariable(name: "h", scope: !6280, file: !3, line: 3569, type: !571)
!6304 = !DILocation(line: 3569, column: 11, scope: !6280)
!6305 = !DILocalVariable(name: "m", scope: !6280, file: !3, line: 3569, type: !571)
!6306 = !DILocation(line: 3569, column: 14, scope: !6280)
!6307 = !DILocalVariable(name: "l", scope: !6280, file: !3, line: 3569, type: !571)
!6308 = !DILocation(line: 3569, column: 17, scope: !6280)
!6309 = !DILocalVariable(name: "status", scope: !6280, file: !3, line: 3570, type: !40)
!6310 = !DILocation(line: 3570, column: 17, scope: !6280)
!6311 = !DILocation(line: 3572, column: 22, scope: !6280)
!6312 = !DILocation(line: 3572, column: 2, scope: !6280)
!6313 = !DILocation(line: 3573, column: 8, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3573, column: 6)
!6315 = !DILocation(line: 3573, column: 15, scope: !6314)
!6316 = !DILocation(line: 3573, column: 6, scope: !6280)
!6317 = !DILocation(line: 3574, column: 4, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 3573, column: 31)
!6319 = !DILocation(line: 3574, column: 8, scope: !6318)
!6320 = !DILocation(line: 3575, column: 2, scope: !6318)
!6321 = !DILocation(line: 3577, column: 9, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 3575, column: 9)
!6323 = !DILocation(line: 3577, column: 7, scope: !6322)
!6324 = !DILocation(line: 3578, column: 7, scope: !6322)
!6325 = !DILocation(line: 3578, column: 5, scope: !6322)
!6326 = !DILocation(line: 3580, column: 9, scope: !6322)
!6327 = !DILocation(line: 3580, column: 7, scope: !6322)
!6328 = !DILocation(line: 3581, column: 7, scope: !6322)
!6329 = !DILocation(line: 3581, column: 5, scope: !6322)
!6330 = !DILocation(line: 3583, column: 9, scope: !6322)
!6331 = !DILocation(line: 3583, column: 7, scope: !6322)
!6332 = !DILocation(line: 3584, column: 7, scope: !6322)
!6333 = !DILocation(line: 3584, column: 5, scope: !6322)
!6334 = !DILocation(line: 3586, column: 12, scope: !6322)
!6335 = !DILocation(line: 3586, column: 14, scope: !6322)
!6336 = !DILocation(line: 3586, column: 24, scope: !6322)
!6337 = !DILocation(line: 3586, column: 26, scope: !6322)
!6338 = !DILocation(line: 3586, column: 21, scope: !6322)
!6339 = !DILocation(line: 3586, column: 34, scope: !6322)
!6340 = !DILocation(line: 3586, column: 32, scope: !6322)
!6341 = !DILocation(line: 3586, column: 4, scope: !6322)
!6342 = !DILocation(line: 3586, column: 8, scope: !6322)
!6343 = !DILocation(line: 3588, column: 13, scope: !6322)
!6344 = !DILocation(line: 3588, column: 11, scope: !6322)
!6345 = !DILocation(line: 3589, column: 13, scope: !6322)
!6346 = !DILocation(line: 3589, column: 11, scope: !6322)
!6347 = !DILocation(line: 3590, column: 13, scope: !6322)
!6348 = !DILocation(line: 3590, column: 11, scope: !6322)
!6349 = !DILocation(line: 3591, column: 13, scope: !6322)
!6350 = !DILocation(line: 3591, column: 11, scope: !6322)
!6351 = !DILocation(line: 3592, column: 13, scope: !6322)
!6352 = !DILocation(line: 3592, column: 11, scope: !6322)
!6353 = !DILocation(line: 3594, column: 9, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 3594, column: 7)
!6355 = !DILocation(line: 3594, column: 18, scope: !6354)
!6356 = !DILocation(line: 3594, column: 23, scope: !6354)
!6357 = !DILocation(line: 3594, column: 7, scope: !6322)
!6358 = !DILocation(line: 3595, column: 14, scope: !6359)
!6359 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 3594, column: 33)
!6360 = !DILocation(line: 3595, column: 22, scope: !6359)
!6361 = !DILocation(line: 3595, column: 30, scope: !6359)
!6362 = !DILocation(line: 3595, column: 11, scope: !6359)
!6363 = !DILocation(line: 3596, column: 14, scope: !6359)
!6364 = !DILocation(line: 3596, column: 22, scope: !6359)
!6365 = !DILocation(line: 3596, column: 30, scope: !6359)
!6366 = !DILocation(line: 3596, column: 10, scope: !6359)
!6367 = !DILocation(line: 3597, column: 14, scope: !6359)
!6368 = !DILocation(line: 3597, column: 22, scope: !6359)
!6369 = !DILocation(line: 3597, column: 10, scope: !6359)
!6370 = !DILocation(line: 3598, column: 3, scope: !6359)
!6371 = !DILocation(line: 3599, column: 10, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 3598, column: 10)
!6373 = !DILocation(line: 3601, column: 7, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 3601, column: 7)
!6375 = !DILocation(line: 3601, column: 13, scope: !6374)
!6376 = !DILocation(line: 3601, column: 7, scope: !6322)
!6377 = !DILocation(line: 3602, column: 5, scope: !6374)
!6378 = !DILocation(line: 3602, column: 9, scope: !6374)
!6379 = !DILocation(line: 3602, column: 4, scope: !6374)
!6380 = !DILocation(line: 3604, column: 6, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3604, column: 6)
!6382 = !DILocation(line: 3604, column: 46, scope: !6381)
!6383 = !DILocation(line: 3604, column: 6, scope: !6280)
!6384 = !DILocation(line: 3605, column: 3, scope: !6381)
!6385 = !DILocation(line: 3606, column: 6, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3606, column: 6)
!6387 = !DILocation(line: 3606, column: 49, scope: !6386)
!6388 = !DILocation(line: 3606, column: 6, scope: !6280)
!6389 = !DILocation(line: 3607, column: 3, scope: !6386)
!6390 = !DILocation(line: 3609, column: 2, scope: !6280)
!6391 = !DILabel(scope: !6280, name: "err", file: !3, line: 3610)
!6392 = !DILocation(line: 3610, column: 1, scope: !6280)
!6393 = !DILocation(line: 3611, column: 2, scope: !6280)
!6394 = !DILocation(line: 3611, column: 2, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !3, line: 3611, column: 2)
!6396 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 3611, column: 2)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 3611, column: 2)
!6398 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 3611, column: 2)
!6399 = !DILocation(line: 3611, column: 2, scope: !6396)
!6400 = !DILocation(line: 3611, column: 2, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 3611, column: 2)
!6402 = !DILocation(line: 3611, column: 2, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6401, file: !3, line: 3611, column: 2)
!6404 = !DILocation(line: 3611, column: 2, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 3611, column: 2)
!6406 = !DILocation(line: 3611, column: 2, scope: !6398)
!6407 = !DILocation(line: 3612, column: 2, scope: !6280)
!6408 = !DILocation(line: 3613, column: 1, scope: !6280)
!6409 = distinct !DISubprogram(name: "stv090x_read_signal_strength", scope: !3, file: !3, line: 3651, type: !4319, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6410 = !DILocalVariable(name: "fe", arg: 1, scope: !6409, file: !3, line: 3651, type: !588)
!6411 = !DILocation(line: 3651, column: 62, scope: !6409)
!6412 = !DILocalVariable(name: "strength", arg: 2, scope: !6409, file: !3, line: 3651, type: !4321)
!6413 = !DILocation(line: 3651, column: 71, scope: !6409)
!6414 = !DILocalVariable(name: "state", scope: !6409, file: !3, line: 3653, type: !4654)
!6415 = !DILocation(line: 3653, column: 24, scope: !6409)
!6416 = !DILocation(line: 3653, column: 32, scope: !6409)
!6417 = !DILocation(line: 3653, column: 36, scope: !6409)
!6418 = !DILocalVariable(name: "reg", scope: !6409, file: !3, line: 3654, type: !571)
!6419 = !DILocation(line: 3654, column: 6, scope: !6409)
!6420 = !DILocalVariable(name: "agc_0", scope: !6409, file: !3, line: 3655, type: !445)
!6421 = !DILocation(line: 3655, column: 6, scope: !6409)
!6422 = !DILocalVariable(name: "agc_1", scope: !6409, file: !3, line: 3655, type: !445)
!6423 = !DILocation(line: 3655, column: 13, scope: !6409)
!6424 = !DILocalVariable(name: "agc", scope: !6409, file: !3, line: 3655, type: !445)
!6425 = !DILocation(line: 3655, column: 20, scope: !6409)
!6426 = !DILocalVariable(name: "str", scope: !6409, file: !3, line: 3656, type: !445)
!6427 = !DILocation(line: 3656, column: 6, scope: !6409)
!6428 = !DILocation(line: 3658, column: 8, scope: !6409)
!6429 = !DILocation(line: 3658, column: 6, scope: !6409)
!6430 = !DILocation(line: 3659, column: 10, scope: !6409)
!6431 = !DILocation(line: 3659, column: 8, scope: !6409)
!6432 = !DILocation(line: 3660, column: 8, scope: !6409)
!6433 = !DILocation(line: 3660, column: 6, scope: !6409)
!6434 = !DILocation(line: 3661, column: 10, scope: !6409)
!6435 = !DILocation(line: 3661, column: 8, scope: !6409)
!6436 = !DILocation(line: 3662, column: 8, scope: !6409)
!6437 = !DILocation(line: 3662, column: 6, scope: !6409)
!6438 = !DILocation(line: 3665, column: 35, scope: !6409)
!6439 = !DILocation(line: 3664, column: 8, scope: !6409)
!6440 = !DILocation(line: 3664, column: 6, scope: !6409)
!6441 = !DILocation(line: 3666, column: 6, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6409, file: !3, line: 3666, column: 6)
!6443 = !DILocation(line: 3666, column: 30, scope: !6442)
!6444 = !DILocation(line: 3666, column: 10, scope: !6442)
!6445 = !DILocation(line: 3666, column: 6, scope: !6409)
!6446 = !DILocation(line: 3667, column: 7, scope: !6442)
!6447 = !DILocation(line: 3667, column: 3, scope: !6442)
!6448 = !DILocation(line: 3668, column: 11, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 3668, column: 11)
!6450 = !DILocation(line: 3668, column: 64, scope: !6449)
!6451 = !DILocation(line: 3668, column: 15, scope: !6449)
!6452 = !DILocation(line: 3668, column: 11, scope: !6442)
!6453 = !DILocation(line: 3669, column: 7, scope: !6449)
!6454 = !DILocation(line: 3669, column: 3, scope: !6449)
!6455 = !DILocation(line: 3670, column: 15, scope: !6409)
!6456 = !DILocation(line: 3670, column: 19, scope: !6409)
!6457 = !DILocation(line: 3670, column: 26, scope: !6409)
!6458 = !DILocation(line: 3670, column: 35, scope: !6409)
!6459 = !DILocation(line: 3670, column: 14, scope: !6409)
!6460 = !DILocation(line: 3670, column: 3, scope: !6409)
!6461 = !DILocation(line: 3670, column: 12, scope: !6409)
!6462 = !DILocation(line: 3672, column: 2, scope: !6409)
!6463 = distinct !DISubprogram(name: "stv090x_read_cnr", scope: !3, file: !3, line: 3675, type: !4319, scopeLine: 3676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6464 = !DILocalVariable(name: "fe", arg: 1, scope: !6463, file: !3, line: 3675, type: !588)
!6465 = !DILocation(line: 3675, column: 50, scope: !6463)
!6466 = !DILocalVariable(name: "cnr", arg: 2, scope: !6463, file: !3, line: 3675, type: !4321)
!6467 = !DILocation(line: 3675, column: 59, scope: !6463)
!6468 = !DILocalVariable(name: "state", scope: !6463, file: !3, line: 3677, type: !4654)
!6469 = !DILocation(line: 3677, column: 24, scope: !6463)
!6470 = !DILocation(line: 3677, column: 32, scope: !6463)
!6471 = !DILocation(line: 3677, column: 36, scope: !6463)
!6472 = !DILocalVariable(name: "reg_0", scope: !6463, file: !3, line: 3678, type: !571)
!6473 = !DILocation(line: 3678, column: 6, scope: !6463)
!6474 = !DILocalVariable(name: "reg_1", scope: !6463, file: !3, line: 3678, type: !571)
!6475 = !DILocation(line: 3678, column: 13, scope: !6463)
!6476 = !DILocalVariable(name: "reg", scope: !6463, file: !3, line: 3678, type: !571)
!6477 = !DILocation(line: 3678, column: 20, scope: !6463)
!6478 = !DILocalVariable(name: "i", scope: !6463, file: !3, line: 3678, type: !571)
!6479 = !DILocation(line: 3678, column: 25, scope: !6463)
!6480 = !DILocalVariable(name: "val_0", scope: !6463, file: !3, line: 3679, type: !445)
!6481 = !DILocation(line: 3679, column: 6, scope: !6463)
!6482 = !DILocalVariable(name: "val_1", scope: !6463, file: !3, line: 3679, type: !445)
!6483 = !DILocation(line: 3679, column: 13, scope: !6463)
!6484 = !DILocalVariable(name: "val", scope: !6463, file: !3, line: 3679, type: !445)
!6485 = !DILocation(line: 3679, column: 20, scope: !6463)
!6486 = !DILocalVariable(name: "lock_f", scope: !6463, file: !3, line: 3680, type: !492)
!6487 = !DILocation(line: 3680, column: 5, scope: !6463)
!6488 = !DILocalVariable(name: "div", scope: !6463, file: !3, line: 3681, type: !445)
!6489 = !DILocation(line: 3681, column: 6, scope: !6463)
!6490 = !DILocalVariable(name: "last", scope: !6463, file: !3, line: 3682, type: !571)
!6491 = !DILocation(line: 3682, column: 6, scope: !6463)
!6492 = !DILocation(line: 3684, column: 10, scope: !6463)
!6493 = !DILocation(line: 3684, column: 17, scope: !6463)
!6494 = !DILocation(line: 3684, column: 2, scope: !6463)
!6495 = !DILocation(line: 3686, column: 9, scope: !6496)
!6496 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 3684, column: 25)
!6497 = !DILocation(line: 3686, column: 7, scope: !6496)
!6498 = !DILocation(line: 3687, column: 12, scope: !6496)
!6499 = !DILocation(line: 3687, column: 10, scope: !6496)
!6500 = !DILocation(line: 3688, column: 7, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 3688, column: 7)
!6502 = !DILocation(line: 3688, column: 7, scope: !6496)
!6503 = !DILocation(line: 3689, column: 4, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6501, file: !3, line: 3688, column: 15)
!6505 = !DILocation(line: 3690, column: 11, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 3690, column: 4)
!6507 = !DILocation(line: 3690, column: 9, scope: !6506)
!6508 = !DILocation(line: 3690, column: 16, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 3690, column: 4)
!6510 = !DILocation(line: 3690, column: 18, scope: !6509)
!6511 = !DILocation(line: 3690, column: 4, scope: !6506)
!6512 = !DILocation(line: 3691, column: 13, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 3690, column: 29)
!6514 = !DILocation(line: 3691, column: 11, scope: !6513)
!6515 = !DILocation(line: 3692, column: 13, scope: !6513)
!6516 = !DILocation(line: 3692, column: 11, scope: !6513)
!6517 = !DILocation(line: 3693, column: 13, scope: !6513)
!6518 = !DILocation(line: 3693, column: 11, scope: !6513)
!6519 = !DILocation(line: 3694, column: 13, scope: !6513)
!6520 = !DILocation(line: 3694, column: 11, scope: !6513)
!6521 = !DILocation(line: 3695, column: 13, scope: !6513)
!6522 = !DILocation(line: 3695, column: 10, scope: !6513)
!6523 = !DILocation(line: 3696, column: 5, scope: !6513)
!6524 = !DILocation(line: 3697, column: 4, scope: !6513)
!6525 = !DILocation(line: 3690, column: 25, scope: !6509)
!6526 = !DILocation(line: 3690, column: 4, scope: !6509)
!6527 = distinct !{!6527, !6511, !6528}
!6528 = !DILocation(line: 3697, column: 4, scope: !6506)
!6529 = !DILocation(line: 3698, column: 8, scope: !6504)
!6530 = !DILocation(line: 3699, column: 9, scope: !6504)
!6531 = !DILocation(line: 3700, column: 27, scope: !6504)
!6532 = !DILocation(line: 3700, column: 10, scope: !6504)
!6533 = !DILocation(line: 3700, column: 33, scope: !6504)
!6534 = !DILocation(line: 3701, column: 30, scope: !6504)
!6535 = !DILocation(line: 3700, column: 38, scope: !6504)
!6536 = !DILocation(line: 3700, column: 8, scope: !6504)
!6537 = !DILocation(line: 3702, column: 49, scope: !6504)
!6538 = !DILocation(line: 3702, column: 55, scope: !6504)
!6539 = !DILocation(line: 3702, column: 10, scope: !6504)
!6540 = !DILocation(line: 3702, column: 8, scope: !6504)
!6541 = !DILocation(line: 3703, column: 8, scope: !6542)
!6542 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 3703, column: 8)
!6543 = !DILocation(line: 3703, column: 12, scope: !6542)
!6544 = !DILocation(line: 3703, column: 8, scope: !6504)
!6545 = !DILocation(line: 3704, column: 9, scope: !6542)
!6546 = !DILocation(line: 3704, column: 5, scope: !6542)
!6547 = !DILocation(line: 3705, column: 11, scope: !6504)
!6548 = !DILocation(line: 3705, column: 15, scope: !6504)
!6549 = !DILocation(line: 3705, column: 26, scope: !6504)
!6550 = !DILocation(line: 3705, column: 24, scope: !6504)
!6551 = !DILocation(line: 3705, column: 5, scope: !6504)
!6552 = !DILocation(line: 3705, column: 9, scope: !6504)
!6553 = !DILocation(line: 3706, column: 3, scope: !6504)
!6554 = !DILocation(line: 3707, column: 3, scope: !6496)
!6555 = !DILocation(line: 3711, column: 9, scope: !6496)
!6556 = !DILocation(line: 3711, column: 7, scope: !6496)
!6557 = !DILocation(line: 3712, column: 12, scope: !6496)
!6558 = !DILocation(line: 3712, column: 10, scope: !6496)
!6559 = !DILocation(line: 3713, column: 7, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6496, file: !3, line: 3713, column: 7)
!6561 = !DILocation(line: 3713, column: 7, scope: !6496)
!6562 = !DILocation(line: 3714, column: 4, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 3713, column: 15)
!6564 = !DILocation(line: 3715, column: 11, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 3715, column: 4)
!6566 = !DILocation(line: 3715, column: 9, scope: !6565)
!6567 = !DILocation(line: 3715, column: 16, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 3715, column: 4)
!6569 = !DILocation(line: 3715, column: 18, scope: !6568)
!6570 = !DILocation(line: 3715, column: 4, scope: !6565)
!6571 = !DILocation(line: 3716, column: 13, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !3, line: 3715, column: 29)
!6573 = !DILocation(line: 3716, column: 11, scope: !6572)
!6574 = !DILocation(line: 3717, column: 13, scope: !6572)
!6575 = !DILocation(line: 3717, column: 11, scope: !6572)
!6576 = !DILocation(line: 3718, column: 13, scope: !6572)
!6577 = !DILocation(line: 3718, column: 11, scope: !6572)
!6578 = !DILocation(line: 3719, column: 13, scope: !6572)
!6579 = !DILocation(line: 3719, column: 11, scope: !6572)
!6580 = !DILocation(line: 3720, column: 13, scope: !6572)
!6581 = !DILocation(line: 3720, column: 10, scope: !6572)
!6582 = !DILocation(line: 3721, column: 5, scope: !6572)
!6583 = !DILocation(line: 3722, column: 4, scope: !6572)
!6584 = !DILocation(line: 3715, column: 25, scope: !6568)
!6585 = !DILocation(line: 3715, column: 4, scope: !6568)
!6586 = distinct !{!6586, !6570, !6587}
!6587 = !DILocation(line: 3722, column: 4, scope: !6565)
!6588 = !DILocation(line: 3723, column: 8, scope: !6563)
!6589 = !DILocation(line: 3724, column: 9, scope: !6563)
!6590 = !DILocation(line: 3725, column: 27, scope: !6563)
!6591 = !DILocation(line: 3725, column: 10, scope: !6563)
!6592 = !DILocation(line: 3725, column: 33, scope: !6563)
!6593 = !DILocation(line: 3726, column: 30, scope: !6563)
!6594 = !DILocation(line: 3725, column: 38, scope: !6563)
!6595 = !DILocation(line: 3725, column: 8, scope: !6563)
!6596 = !DILocation(line: 3727, column: 49, scope: !6563)
!6597 = !DILocation(line: 3727, column: 55, scope: !6563)
!6598 = !DILocation(line: 3727, column: 10, scope: !6563)
!6599 = !DILocation(line: 3727, column: 8, scope: !6563)
!6600 = !DILocation(line: 3728, column: 11, scope: !6563)
!6601 = !DILocation(line: 3728, column: 15, scope: !6563)
!6602 = !DILocation(line: 3728, column: 26, scope: !6563)
!6603 = !DILocation(line: 3728, column: 24, scope: !6563)
!6604 = !DILocation(line: 3728, column: 5, scope: !6563)
!6605 = !DILocation(line: 3728, column: 9, scope: !6563)
!6606 = !DILocation(line: 3729, column: 3, scope: !6563)
!6607 = !DILocation(line: 3730, column: 3, scope: !6496)
!6608 = !DILocation(line: 3732, column: 3, scope: !6496)
!6609 = !DILocation(line: 3735, column: 2, scope: !6463)
!6610 = distinct !DISubprogram(name: "stv090x_send_diseqc_msg", scope: !3, file: !3, line: 3777, type: !4327, scopeLine: 3778, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6611 = !DILocalVariable(name: "fe", arg: 1, scope: !6610, file: !3, line: 3777, type: !588)
!6612 = !DILocation(line: 3777, column: 57, scope: !6610)
!6613 = !DILocalVariable(name: "cmd", arg: 2, scope: !6610, file: !3, line: 3777, type: !4329)
!6614 = !DILocation(line: 3777, column: 91, scope: !6610)
!6615 = !DILocalVariable(name: "state", scope: !6610, file: !3, line: 3779, type: !4654)
!6616 = !DILocation(line: 3779, column: 24, scope: !6610)
!6617 = !DILocation(line: 3779, column: 32, scope: !6610)
!6618 = !DILocation(line: 3779, column: 36, scope: !6610)
!6619 = !DILocalVariable(name: "reg", scope: !6610, file: !3, line: 3780, type: !571)
!6620 = !DILocation(line: 3780, column: 6, scope: !6610)
!6621 = !DILocalVariable(name: "idle", scope: !6610, file: !3, line: 3780, type: !571)
!6622 = !DILocation(line: 3780, column: 11, scope: !6610)
!6623 = !DILocalVariable(name: "fifo_full", scope: !6610, file: !3, line: 3780, type: !571)
!6624 = !DILocation(line: 3780, column: 21, scope: !6610)
!6625 = !DILocalVariable(name: "i", scope: !6610, file: !3, line: 3781, type: !439)
!6626 = !DILocation(line: 3781, column: 6, scope: !6610)
!6627 = !DILocation(line: 3783, column: 8, scope: !6610)
!6628 = !DILocation(line: 3783, column: 6, scope: !6610)
!6629 = !DILocation(line: 3785, column: 2, scope: !6610)
!6630 = !DILocation(line: 3787, column: 2, scope: !6610)
!6631 = !DILocation(line: 3788, column: 6, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3788, column: 6)
!6633 = !DILocation(line: 3788, column: 48, scope: !6632)
!6634 = !DILocation(line: 3788, column: 6, scope: !6610)
!6635 = !DILocation(line: 3789, column: 3, scope: !6632)
!6636 = !DILocation(line: 3790, column: 2, scope: !6610)
!6637 = !DILocation(line: 3791, column: 6, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3791, column: 6)
!6639 = !DILocation(line: 3791, column: 48, scope: !6638)
!6640 = !DILocation(line: 3791, column: 6, scope: !6610)
!6641 = !DILocation(line: 3792, column: 3, scope: !6638)
!6642 = !DILocation(line: 3794, column: 2, scope: !6610)
!6643 = !DILocation(line: 3795, column: 6, scope: !6644)
!6644 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3795, column: 6)
!6645 = !DILocation(line: 3795, column: 48, scope: !6644)
!6646 = !DILocation(line: 3795, column: 6, scope: !6610)
!6647 = !DILocation(line: 3796, column: 3, scope: !6644)
!6648 = !DILocation(line: 3798, column: 9, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3798, column: 2)
!6650 = !DILocation(line: 3798, column: 7, scope: !6649)
!6651 = !DILocation(line: 3798, column: 14, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 3798, column: 2)
!6653 = !DILocation(line: 3798, column: 18, scope: !6652)
!6654 = !DILocation(line: 3798, column: 23, scope: !6652)
!6655 = !DILocation(line: 3798, column: 16, scope: !6652)
!6656 = !DILocation(line: 3798, column: 2, scope: !6649)
!6657 = !DILocation(line: 3800, column: 3, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6652, file: !3, line: 3798, column: 37)
!6659 = !DILocation(line: 3800, column: 10, scope: !6658)
!6660 = !DILocation(line: 3801, column: 10, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 3800, column: 21)
!6662 = !DILocation(line: 3801, column: 8, scope: !6661)
!6663 = !DILocation(line: 3802, column: 16, scope: !6661)
!6664 = !DILocation(line: 3802, column: 14, scope: !6661)
!6665 = distinct !{!6665, !6657, !6666}
!6666 = !DILocation(line: 3803, column: 3, scope: !6658)
!6667 = !DILocation(line: 3805, column: 7, scope: !6668)
!6668 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 3805, column: 7)
!6669 = !DILocation(line: 3805, column: 58, scope: !6668)
!6670 = !DILocation(line: 3805, column: 7, scope: !6658)
!6671 = !DILocation(line: 3806, column: 4, scope: !6668)
!6672 = !DILocation(line: 3807, column: 2, scope: !6658)
!6673 = !DILocation(line: 3798, column: 33, scope: !6652)
!6674 = !DILocation(line: 3798, column: 2, scope: !6652)
!6675 = distinct !{!6675, !6656, !6676}
!6676 = !DILocation(line: 3807, column: 2, scope: !6649)
!6677 = !DILocation(line: 3808, column: 8, scope: !6610)
!6678 = !DILocation(line: 3808, column: 6, scope: !6610)
!6679 = !DILocation(line: 3809, column: 2, scope: !6610)
!6680 = !DILocation(line: 3810, column: 6, scope: !6681)
!6681 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3810, column: 6)
!6682 = !DILocation(line: 3810, column: 48, scope: !6681)
!6683 = !DILocation(line: 3810, column: 6, scope: !6610)
!6684 = !DILocation(line: 3811, column: 3, scope: !6681)
!6685 = !DILocation(line: 3813, column: 4, scope: !6610)
!6686 = !DILocation(line: 3815, column: 2, scope: !6610)
!6687 = !DILocation(line: 3815, column: 11, scope: !6610)
!6688 = !DILocation(line: 3815, column: 17, scope: !6610)
!6689 = !DILocation(line: 3815, column: 21, scope: !6610)
!6690 = !DILocation(line: 3815, column: 23, scope: !6610)
!6691 = !DILocation(line: 0, scope: !6610)
!6692 = !DILocation(line: 3816, column: 9, scope: !6693)
!6693 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3815, column: 30)
!6694 = !DILocation(line: 3816, column: 7, scope: !6693)
!6695 = !DILocation(line: 3817, column: 10, scope: !6693)
!6696 = !DILocation(line: 3817, column: 8, scope: !6693)
!6697 = !DILocation(line: 3818, column: 3, scope: !6693)
!6698 = !DILocation(line: 3819, column: 4, scope: !6693)
!6699 = distinct !{!6699, !6686, !6700}
!6700 = !DILocation(line: 3820, column: 2, scope: !6610)
!6701 = !DILocation(line: 3822, column: 2, scope: !6610)
!6702 = !DILabel(scope: !6610, name: "err", file: !3, line: 3823)
!6703 = !DILocation(line: 3823, column: 1, scope: !6610)
!6704 = !DILocation(line: 3824, column: 2, scope: !6610)
!6705 = !DILocation(line: 3824, column: 2, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 3824, column: 2)
!6707 = distinct !DILexicalBlock(scope: !6708, file: !3, line: 3824, column: 2)
!6708 = distinct !DILexicalBlock(scope: !6709, file: !3, line: 3824, column: 2)
!6709 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 3824, column: 2)
!6710 = !DILocation(line: 3824, column: 2, scope: !6707)
!6711 = !DILocation(line: 3824, column: 2, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 3824, column: 2)
!6713 = !DILocation(line: 3824, column: 2, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 3824, column: 2)
!6715 = !DILocation(line: 3824, column: 2, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6714, file: !3, line: 3824, column: 2)
!6717 = !DILocation(line: 3824, column: 2, scope: !6709)
!6718 = !DILocation(line: 3825, column: 2, scope: !6610)
!6719 = !DILocation(line: 3826, column: 1, scope: !6610)
!6720 = distinct !DISubprogram(name: "stv090x_recv_slave_reply", scope: !3, file: !3, line: 3886, type: !4337, scopeLine: 3887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6721 = !DILocalVariable(name: "fe", arg: 1, scope: !6720, file: !3, line: 3886, type: !588)
!6722 = !DILocation(line: 3886, column: 58, scope: !6720)
!6723 = !DILocalVariable(name: "reply", arg: 2, scope: !6720, file: !3, line: 3886, type: !4339)
!6724 = !DILocation(line: 3886, column: 93, scope: !6720)
!6725 = !DILocalVariable(name: "state", scope: !6720, file: !3, line: 3888, type: !4654)
!6726 = !DILocation(line: 3888, column: 24, scope: !6720)
!6727 = !DILocation(line: 3888, column: 32, scope: !6720)
!6728 = !DILocation(line: 3888, column: 36, scope: !6720)
!6729 = !DILocalVariable(name: "reg", scope: !6720, file: !3, line: 3889, type: !571)
!6730 = !DILocation(line: 3889, column: 6, scope: !6720)
!6731 = !DILocalVariable(name: "i", scope: !6720, file: !3, line: 3889, type: !571)
!6732 = !DILocation(line: 3889, column: 15, scope: !6720)
!6733 = !DILocalVariable(name: "rx_end", scope: !6720, file: !3, line: 3889, type: !571)
!6734 = !DILocation(line: 3889, column: 22, scope: !6720)
!6735 = !DILocation(line: 3891, column: 2, scope: !6720)
!6736 = !DILocation(line: 3891, column: 10, scope: !6720)
!6737 = !DILocation(line: 3891, column: 17, scope: !6720)
!6738 = !DILocation(line: 3891, column: 23, scope: !6720)
!6739 = !DILocation(line: 3891, column: 27, scope: !6720)
!6740 = !DILocation(line: 3891, column: 29, scope: !6720)
!6741 = !DILocation(line: 0, scope: !6720)
!6742 = !DILocation(line: 3892, column: 3, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 3891, column: 36)
!6744 = !DILocation(line: 3893, column: 4, scope: !6743)
!6745 = !DILocation(line: 3894, column: 9, scope: !6743)
!6746 = !DILocation(line: 3894, column: 7, scope: !6743)
!6747 = !DILocation(line: 3895, column: 12, scope: !6743)
!6748 = !DILocation(line: 3895, column: 10, scope: !6743)
!6749 = distinct !{!6749, !6735, !6750}
!6750 = !DILocation(line: 3896, column: 2, scope: !6720)
!6751 = !DILocation(line: 3898, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6720, file: !3, line: 3898, column: 6)
!6753 = !DILocation(line: 3898, column: 6, scope: !6720)
!6754 = !DILocation(line: 3899, column: 20, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 3898, column: 14)
!6756 = !DILocation(line: 3899, column: 3, scope: !6755)
!6757 = !DILocation(line: 3899, column: 10, scope: !6755)
!6758 = !DILocation(line: 3899, column: 18, scope: !6755)
!6759 = !DILocation(line: 3900, column: 10, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 3900, column: 3)
!6761 = !DILocation(line: 3900, column: 8, scope: !6760)
!6762 = !DILocation(line: 3900, column: 15, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 3900, column: 3)
!6764 = !DILocation(line: 3900, column: 19, scope: !6763)
!6765 = !DILocation(line: 3900, column: 26, scope: !6763)
!6766 = !DILocation(line: 3900, column: 17, scope: !6763)
!6767 = !DILocation(line: 3900, column: 3, scope: !6760)
!6768 = !DILocation(line: 3901, column: 20, scope: !6763)
!6769 = !DILocation(line: 3901, column: 4, scope: !6763)
!6770 = !DILocation(line: 3901, column: 11, scope: !6763)
!6771 = !DILocation(line: 3901, column: 15, scope: !6763)
!6772 = !DILocation(line: 3901, column: 18, scope: !6763)
!6773 = !DILocation(line: 3900, column: 36, scope: !6763)
!6774 = !DILocation(line: 3900, column: 3, scope: !6763)
!6775 = distinct !{!6775, !6767, !6776}
!6776 = !DILocation(line: 3901, column: 20, scope: !6760)
!6777 = !DILocation(line: 3902, column: 2, scope: !6755)
!6778 = !DILocation(line: 3904, column: 2, scope: !6720)
!6779 = distinct !DISubprogram(name: "stv090x_send_diseqc_burst", scope: !3, file: !3, line: 3828, type: !4348, scopeLine: 3830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6780 = !DILocalVariable(name: "fe", arg: 1, scope: !6779, file: !3, line: 3828, type: !588)
!6781 = !DILocation(line: 3828, column: 59, scope: !6779)
!6782 = !DILocalVariable(name: "burst", arg: 2, scope: !6779, file: !3, line: 3829, type: !171)
!6783 = !DILocation(line: 3829, column: 31, scope: !6779)
!6784 = !DILocalVariable(name: "state", scope: !6779, file: !3, line: 3831, type: !4654)
!6785 = !DILocation(line: 3831, column: 24, scope: !6779)
!6786 = !DILocation(line: 3831, column: 32, scope: !6779)
!6787 = !DILocation(line: 3831, column: 36, scope: !6779)
!6788 = !DILocalVariable(name: "reg", scope: !6779, file: !3, line: 3832, type: !571)
!6789 = !DILocation(line: 3832, column: 6, scope: !6779)
!6790 = !DILocalVariable(name: "idle", scope: !6779, file: !3, line: 3832, type: !571)
!6791 = !DILocation(line: 3832, column: 11, scope: !6779)
!6792 = !DILocalVariable(name: "fifo_full", scope: !6779, file: !3, line: 3832, type: !571)
!6793 = !DILocation(line: 3832, column: 21, scope: !6779)
!6794 = !DILocalVariable(name: "mode", scope: !6779, file: !3, line: 3833, type: !492)
!6795 = !DILocation(line: 3833, column: 5, scope: !6779)
!6796 = !DILocalVariable(name: "value", scope: !6779, file: !3, line: 3833, type: !492)
!6797 = !DILocation(line: 3833, column: 11, scope: !6779)
!6798 = !DILocalVariable(name: "i", scope: !6779, file: !3, line: 3834, type: !439)
!6799 = !DILocation(line: 3834, column: 6, scope: !6779)
!6800 = !DILocation(line: 3836, column: 8, scope: !6779)
!6801 = !DILocation(line: 3836, column: 6, scope: !6779)
!6802 = !DILocation(line: 3838, column: 6, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3838, column: 6)
!6804 = !DILocation(line: 3838, column: 12, scope: !6803)
!6805 = !DILocation(line: 3838, column: 6, scope: !6779)
!6806 = !DILocation(line: 3839, column: 11, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3838, column: 27)
!6808 = !DILocation(line: 3839, column: 18, scope: !6807)
!6809 = !DILocation(line: 3839, column: 26, scope: !6807)
!6810 = !DILocation(line: 3839, column: 10, scope: !6807)
!6811 = !DILocation(line: 3839, column: 8, scope: !6807)
!6812 = !DILocation(line: 3840, column: 9, scope: !6807)
!6813 = !DILocation(line: 3841, column: 2, scope: !6807)
!6814 = !DILocation(line: 3842, column: 11, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 3841, column: 9)
!6816 = !DILocation(line: 3842, column: 18, scope: !6815)
!6817 = !DILocation(line: 3842, column: 26, scope: !6815)
!6818 = !DILocation(line: 3842, column: 10, scope: !6815)
!6819 = !DILocation(line: 3842, column: 8, scope: !6815)
!6820 = !DILocation(line: 3843, column: 9, scope: !6815)
!6821 = !DILocation(line: 3846, column: 2, scope: !6779)
!6822 = !DILocation(line: 3847, column: 2, scope: !6779)
!6823 = !DILocation(line: 3848, column: 6, scope: !6824)
!6824 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3848, column: 6)
!6825 = !DILocation(line: 3848, column: 48, scope: !6824)
!6826 = !DILocation(line: 3848, column: 6, scope: !6779)
!6827 = !DILocation(line: 3849, column: 3, scope: !6824)
!6828 = !DILocation(line: 3850, column: 2, scope: !6779)
!6829 = !DILocation(line: 3851, column: 6, scope: !6830)
!6830 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3851, column: 6)
!6831 = !DILocation(line: 3851, column: 48, scope: !6830)
!6832 = !DILocation(line: 3851, column: 6, scope: !6779)
!6833 = !DILocation(line: 3852, column: 3, scope: !6830)
!6834 = !DILocation(line: 3854, column: 2, scope: !6779)
!6835 = !DILocation(line: 3855, column: 6, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3855, column: 6)
!6837 = !DILocation(line: 3855, column: 48, scope: !6836)
!6838 = !DILocation(line: 3855, column: 6, scope: !6779)
!6839 = !DILocation(line: 3856, column: 3, scope: !6836)
!6840 = !DILocation(line: 3858, column: 2, scope: !6779)
!6841 = !DILocation(line: 3858, column: 9, scope: !6779)
!6842 = !DILocation(line: 3859, column: 9, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3858, column: 20)
!6844 = !DILocation(line: 3859, column: 7, scope: !6843)
!6845 = !DILocation(line: 3860, column: 15, scope: !6843)
!6846 = !DILocation(line: 3860, column: 13, scope: !6843)
!6847 = distinct !{!6847, !6840, !6848}
!6848 = !DILocation(line: 3861, column: 2, scope: !6779)
!6849 = !DILocation(line: 3863, column: 6, scope: !6850)
!6850 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3863, column: 6)
!6851 = !DILocation(line: 3863, column: 51, scope: !6850)
!6852 = !DILocation(line: 3863, column: 6, scope: !6779)
!6853 = !DILocation(line: 3864, column: 3, scope: !6850)
!6854 = !DILocation(line: 3866, column: 8, scope: !6779)
!6855 = !DILocation(line: 3866, column: 6, scope: !6779)
!6856 = !DILocation(line: 3867, column: 2, scope: !6779)
!6857 = !DILocation(line: 3868, column: 6, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3868, column: 6)
!6859 = !DILocation(line: 3868, column: 48, scope: !6858)
!6860 = !DILocation(line: 3868, column: 6, scope: !6779)
!6861 = !DILocation(line: 3869, column: 3, scope: !6858)
!6862 = !DILocation(line: 3871, column: 4, scope: !6779)
!6863 = !DILocation(line: 3873, column: 2, scope: !6779)
!6864 = !DILocation(line: 3873, column: 11, scope: !6779)
!6865 = !DILocation(line: 3873, column: 17, scope: !6779)
!6866 = !DILocation(line: 3873, column: 21, scope: !6779)
!6867 = !DILocation(line: 3873, column: 23, scope: !6779)
!6868 = !DILocation(line: 0, scope: !6779)
!6869 = !DILocation(line: 3874, column: 9, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3873, column: 30)
!6871 = !DILocation(line: 3874, column: 7, scope: !6870)
!6872 = !DILocation(line: 3875, column: 10, scope: !6870)
!6873 = !DILocation(line: 3875, column: 8, scope: !6870)
!6874 = !DILocation(line: 3876, column: 3, scope: !6870)
!6875 = !DILocation(line: 3877, column: 4, scope: !6870)
!6876 = distinct !{!6876, !6863, !6877}
!6877 = !DILocation(line: 3878, column: 2, scope: !6779)
!6878 = !DILocation(line: 3880, column: 2, scope: !6779)
!6879 = !DILabel(scope: !6779, name: "err", file: !3, line: 3881)
!6880 = !DILocation(line: 3881, column: 1, scope: !6779)
!6881 = !DILocation(line: 3882, column: 2, scope: !6779)
!6882 = !DILocation(line: 3882, column: 2, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 3882, column: 2)
!6884 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 3882, column: 2)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 3882, column: 2)
!6886 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 3882, column: 2)
!6887 = !DILocation(line: 3882, column: 2, scope: !6884)
!6888 = !DILocation(line: 3882, column: 2, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 3882, column: 2)
!6890 = !DILocation(line: 3882, column: 2, scope: !6891)
!6891 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 3882, column: 2)
!6892 = !DILocation(line: 3882, column: 2, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6891, file: !3, line: 3882, column: 2)
!6894 = !DILocation(line: 3882, column: 2, scope: !6886)
!6895 = !DILocation(line: 3883, column: 2, scope: !6779)
!6896 = !DILocation(line: 3884, column: 1, scope: !6779)
!6897 = distinct !DISubprogram(name: "stv090x_set_tone", scope: !3, file: !3, line: 3738, type: !4352, scopeLine: 3739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6898 = !DILocalVariable(name: "fe", arg: 1, scope: !6897, file: !3, line: 3738, type: !588)
!6899 = !DILocation(line: 3738, column: 50, scope: !6897)
!6900 = !DILocalVariable(name: "tone", arg: 2, scope: !6897, file: !3, line: 3738, type: !78)
!6901 = !DILocation(line: 3738, column: 76, scope: !6897)
!6902 = !DILocalVariable(name: "state", scope: !6897, file: !3, line: 3740, type: !4654)
!6903 = !DILocation(line: 3740, column: 24, scope: !6897)
!6904 = !DILocation(line: 3740, column: 32, scope: !6897)
!6905 = !DILocation(line: 3740, column: 36, scope: !6897)
!6906 = !DILocalVariable(name: "reg", scope: !6897, file: !3, line: 3741, type: !571)
!6907 = !DILocation(line: 3741, column: 6, scope: !6897)
!6908 = !DILocation(line: 3743, column: 8, scope: !6897)
!6909 = !DILocation(line: 3743, column: 6, scope: !6897)
!6910 = !DILocation(line: 3744, column: 10, scope: !6897)
!6911 = !DILocation(line: 3744, column: 2, scope: !6897)
!6912 = !DILocation(line: 3746, column: 3, scope: !6913)
!6913 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 3744, column: 16)
!6914 = !DILocation(line: 3747, column: 3, scope: !6913)
!6915 = !DILocation(line: 3748, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 3748, column: 7)
!6917 = !DILocation(line: 3748, column: 49, scope: !6916)
!6918 = !DILocation(line: 3748, column: 7, scope: !6913)
!6919 = !DILocation(line: 3749, column: 4, scope: !6916)
!6920 = !DILocation(line: 3750, column: 3, scope: !6913)
!6921 = !DILocation(line: 3751, column: 7, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 3751, column: 7)
!6923 = !DILocation(line: 3751, column: 49, scope: !6922)
!6924 = !DILocation(line: 3751, column: 7, scope: !6913)
!6925 = !DILocation(line: 3752, column: 4, scope: !6922)
!6926 = !DILocation(line: 3753, column: 3, scope: !6913)
!6927 = !DILocation(line: 3756, column: 3, scope: !6913)
!6928 = !DILocation(line: 3757, column: 3, scope: !6913)
!6929 = !DILocation(line: 3758, column: 7, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 3758, column: 7)
!6931 = !DILocation(line: 3758, column: 49, scope: !6930)
!6932 = !DILocation(line: 3758, column: 7, scope: !6913)
!6933 = !DILocation(line: 3759, column: 4, scope: !6930)
!6934 = !DILocation(line: 3760, column: 3, scope: !6913)
!6935 = !DILocation(line: 3762, column: 3, scope: !6913)
!6936 = !DILocation(line: 3765, column: 2, scope: !6897)
!6937 = !DILabel(scope: !6897, name: "err", file: !3, line: 3766)
!6938 = !DILocation(line: 3766, column: 1, scope: !6897)
!6939 = !DILocation(line: 3767, column: 2, scope: !6897)
!6940 = !DILocation(line: 3767, column: 2, scope: !6941)
!6941 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 3767, column: 2)
!6942 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 3767, column: 2)
!6943 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 3767, column: 2)
!6944 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 3767, column: 2)
!6945 = !DILocation(line: 3767, column: 2, scope: !6942)
!6946 = !DILocation(line: 3767, column: 2, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 3767, column: 2)
!6948 = !DILocation(line: 3767, column: 2, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 3767, column: 2)
!6950 = !DILocation(line: 3767, column: 2, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 3767, column: 2)
!6952 = !DILocation(line: 3767, column: 2, scope: !6944)
!6953 = !DILocation(line: 3768, column: 2, scope: !6897)
!6954 = !DILocation(line: 3769, column: 1, scope: !6897)
!6955 = distinct !DISubprogram(name: "stv090x_search", scope: !3, file: !3, line: 3463, type: !4374, scopeLine: 3464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!6956 = !DILocalVariable(name: "fe", arg: 1, scope: !6955, file: !3, line: 3463, type: !588)
!6957 = !DILocation(line: 3463, column: 62, scope: !6955)
!6958 = !DILocalVariable(name: "state", scope: !6955, file: !3, line: 3465, type: !4654)
!6959 = !DILocation(line: 3465, column: 24, scope: !6955)
!6960 = !DILocation(line: 3465, column: 32, scope: !6955)
!6961 = !DILocation(line: 3465, column: 36, scope: !6955)
!6962 = !DILocalVariable(name: "props", scope: !6955, file: !3, line: 3466, type: !4308)
!6963 = !DILocation(line: 3466, column: 34, scope: !6955)
!6964 = !DILocation(line: 3466, column: 43, scope: !6955)
!6965 = !DILocation(line: 3466, column: 47, scope: !6955)
!6966 = !DILocation(line: 3468, column: 6, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3468, column: 6)
!6968 = !DILocation(line: 3468, column: 13, scope: !6967)
!6969 = !DILocation(line: 3468, column: 23, scope: !6967)
!6970 = !DILocation(line: 3468, column: 6, scope: !6955)
!6971 = !DILocation(line: 3469, column: 3, scope: !6967)
!6972 = !DILocation(line: 3471, column: 10, scope: !6955)
!6973 = !DILocation(line: 3471, column: 17, scope: !6955)
!6974 = !DILocation(line: 3471, column: 2, scope: !6955)
!6975 = !DILocation(line: 3473, column: 3, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3471, column: 34)
!6977 = !DILocation(line: 3473, column: 10, scope: !6976)
!6978 = !DILocation(line: 3473, column: 17, scope: !6976)
!6979 = !DILocation(line: 3474, column: 3, scope: !6976)
!6980 = !DILocation(line: 3476, column: 3, scope: !6976)
!6981 = !DILocation(line: 3476, column: 10, scope: !6976)
!6982 = !DILocation(line: 3476, column: 17, scope: !6976)
!6983 = !DILocation(line: 3477, column: 3, scope: !6976)
!6984 = !DILocation(line: 3479, column: 3, scope: !6976)
!6985 = !DILocation(line: 3479, column: 10, scope: !6976)
!6986 = !DILocation(line: 3479, column: 17, scope: !6976)
!6987 = !DILocation(line: 3480, column: 3, scope: !6976)
!6988 = !DILocation(line: 3482, column: 3, scope: !6976)
!6989 = !DILocation(line: 3485, column: 21, scope: !6955)
!6990 = !DILocation(line: 3485, column: 28, scope: !6955)
!6991 = !DILocation(line: 3485, column: 2, scope: !6955)
!6992 = !DILocation(line: 3485, column: 9, scope: !6955)
!6993 = !DILocation(line: 3485, column: 19, scope: !6955)
!6994 = !DILocation(line: 3486, column: 17, scope: !6955)
!6995 = !DILocation(line: 3486, column: 24, scope: !6955)
!6996 = !DILocation(line: 3486, column: 2, scope: !6955)
!6997 = !DILocation(line: 3486, column: 9, scope: !6955)
!6998 = !DILocation(line: 3486, column: 15, scope: !6955)
!6999 = !DILocation(line: 3487, column: 2, scope: !6955)
!7000 = !DILocation(line: 3487, column: 9, scope: !6955)
!7001 = !DILocation(line: 3487, column: 21, scope: !6955)
!7002 = !DILocation(line: 3488, column: 2, scope: !6955)
!7003 = !DILocation(line: 3488, column: 9, scope: !6955)
!7004 = !DILocation(line: 3488, column: 14, scope: !6955)
!7005 = !DILocation(line: 3489, column: 2, scope: !6955)
!7006 = !DILocation(line: 3489, column: 9, scope: !6955)
!7007 = !DILocation(line: 3489, column: 13, scope: !6955)
!7008 = !DILocation(line: 3490, column: 6, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3490, column: 6)
!7010 = !DILocation(line: 3490, column: 13, scope: !7009)
!7011 = !DILocation(line: 3490, column: 19, scope: !7009)
!7012 = !DILocation(line: 3490, column: 6, scope: !6955)
!7013 = !DILocation(line: 3491, column: 3, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 3490, column: 31)
!7015 = !DILocation(line: 3491, column: 3, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7017, file: !3, line: 3491, column: 3)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 3491, column: 3)
!7018 = distinct !DILexicalBlock(scope: !7019, file: !3, line: 3491, column: 3)
!7019 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 3491, column: 3)
!7020 = !DILocation(line: 3491, column: 3, scope: !7017)
!7021 = !DILocation(line: 3491, column: 3, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 3491, column: 3)
!7023 = !DILocation(line: 3491, column: 3, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 3491, column: 3)
!7025 = !DILocation(line: 3491, column: 3, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7024, file: !3, line: 3491, column: 3)
!7027 = !DILocation(line: 3491, column: 3, scope: !7019)
!7028 = !DILocation(line: 3492, column: 3, scope: !7014)
!7029 = !DILocation(line: 3492, column: 10, scope: !7014)
!7030 = !DILocation(line: 3492, column: 23, scope: !7014)
!7031 = !DILocation(line: 3493, column: 2, scope: !7014)
!7032 = !DILocation(line: 3494, column: 3, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 3493, column: 9)
!7034 = !DILocation(line: 3494, column: 3, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 3494, column: 3)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 3494, column: 3)
!7037 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 3494, column: 3)
!7038 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 3494, column: 3)
!7039 = !DILocation(line: 3494, column: 3, scope: !7036)
!7040 = !DILocation(line: 3494, column: 3, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 3494, column: 3)
!7042 = !DILocation(line: 3494, column: 3, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7041, file: !3, line: 3494, column: 3)
!7044 = !DILocation(line: 3494, column: 3, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7043, file: !3, line: 3494, column: 3)
!7046 = !DILocation(line: 3494, column: 3, scope: !7038)
!7047 = !DILocation(line: 3495, column: 3, scope: !7033)
!7048 = !DILocation(line: 3495, column: 10, scope: !7033)
!7049 = !DILocation(line: 3495, column: 23, scope: !7033)
!7050 = !DILocation(line: 3498, column: 18, scope: !6955)
!7051 = !DILocation(line: 3498, column: 25, scope: !6955)
!7052 = !DILocation(line: 3498, column: 32, scope: !6955)
!7053 = !DILocation(line: 3498, column: 2, scope: !6955)
!7054 = !DILocation(line: 3499, column: 18, scope: !6955)
!7055 = !DILocation(line: 3499, column: 25, scope: !6955)
!7056 = !DILocation(line: 3499, column: 32, scope: !6955)
!7057 = !DILocation(line: 3499, column: 2, scope: !6955)
!7058 = !DILocation(line: 3501, column: 19, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6955, file: !3, line: 3501, column: 6)
!7060 = !DILocation(line: 3501, column: 6, scope: !7059)
!7061 = !DILocation(line: 3501, column: 26, scope: !7059)
!7062 = !DILocation(line: 3501, column: 6, scope: !6955)
!7063 = !DILocation(line: 3502, column: 3, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3501, column: 46)
!7065 = !DILocation(line: 3502, column: 3, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 3502, column: 3)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3502, column: 3)
!7068 = distinct !DILexicalBlock(scope: !7069, file: !3, line: 3502, column: 3)
!7069 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 3502, column: 3)
!7070 = !DILocation(line: 3502, column: 3, scope: !7067)
!7071 = !DILocation(line: 3502, column: 3, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3502, column: 3)
!7073 = !DILocation(line: 3502, column: 3, scope: !7074)
!7074 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 3502, column: 3)
!7075 = !DILocation(line: 3502, column: 3, scope: !7076)
!7076 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 3502, column: 3)
!7077 = !DILocation(line: 3502, column: 3, scope: !7069)
!7078 = !DILocation(line: 3503, column: 3, scope: !7064)
!7079 = !DILocation(line: 3505, column: 3, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3504, column: 9)
!7081 = !DILocation(line: 3505, column: 3, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3505, column: 3)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 3505, column: 3)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 3505, column: 3)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3505, column: 3)
!7086 = !DILocation(line: 3505, column: 3, scope: !7083)
!7087 = !DILocation(line: 3505, column: 3, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 3505, column: 3)
!7089 = !DILocation(line: 3505, column: 3, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 3505, column: 3)
!7091 = !DILocation(line: 3505, column: 3, scope: !7092)
!7092 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 3505, column: 3)
!7093 = !DILocation(line: 3505, column: 3, scope: !7085)
!7094 = !DILocation(line: 3506, column: 3, scope: !7080)
!7095 = !DILocation(line: 3510, column: 1, scope: !6955)
!7096 = distinct !DISubprogram(name: "remove_dev", scope: !3, file: !3, line: 62, type: !7097, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{null, !4454}
!7099 = !DILocalVariable(name: "internal", arg: 1, scope: !7096, file: !3, line: 62, type: !4454)
!7100 = !DILocation(line: 62, column: 49, scope: !7096)
!7101 = !DILocalVariable(name: "prev_dev", scope: !7096, file: !3, line: 64, type: !4450)
!7102 = !DILocation(line: 64, column: 22, scope: !7096)
!7103 = !DILocation(line: 64, column: 33, scope: !7096)
!7104 = !DILocalVariable(name: "del_dev", scope: !7096, file: !3, line: 65, type: !4450)
!7105 = !DILocation(line: 65, column: 22, scope: !7096)
!7106 = !DILocation(line: 65, column: 41, scope: !7096)
!7107 = !DILocation(line: 65, column: 51, scope: !7096)
!7108 = !DILocation(line: 66, column: 7, scope: !7096)
!7109 = !DILocation(line: 66, column: 17, scope: !7096)
!7110 = !DILocation(line: 65, column: 32, scope: !7096)
!7111 = !DILocation(line: 68, column: 6, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 68, column: 6)
!7113 = !DILocation(line: 68, column: 14, scope: !7112)
!7114 = !DILocation(line: 68, column: 6, scope: !7096)
!7115 = !DILocation(line: 69, column: 7, scope: !7116)
!7116 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 69, column: 7)
!7117 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 68, column: 23)
!7118 = !DILocation(line: 69, column: 18, scope: !7116)
!7119 = !DILocation(line: 69, column: 15, scope: !7116)
!7120 = !DILocation(line: 69, column: 7, scope: !7117)
!7121 = !DILocation(line: 70, column: 24, scope: !7122)
!7122 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 69, column: 37)
!7123 = !DILocation(line: 70, column: 33, scope: !7122)
!7124 = !DILocation(line: 70, column: 22, scope: !7122)
!7125 = !DILocation(line: 71, column: 3, scope: !7122)
!7126 = !DILocation(line: 72, column: 4, scope: !7127)
!7127 = distinct !DILexicalBlock(scope: !7116, file: !3, line: 71, column: 10)
!7128 = !DILocation(line: 72, column: 11, scope: !7127)
!7129 = !DILocation(line: 72, column: 21, scope: !7127)
!7130 = !DILocation(line: 72, column: 33, scope: !7127)
!7131 = !DILocation(line: 72, column: 30, scope: !7127)
!7132 = !DILocation(line: 73, column: 16, scope: !7127)
!7133 = !DILocation(line: 73, column: 26, scope: !7127)
!7134 = !DILocation(line: 73, column: 14, scope: !7127)
!7135 = distinct !{!7135, !7126, !7133}
!7136 = !DILocation(line: 75, column: 25, scope: !7127)
!7137 = !DILocation(line: 75, column: 34, scope: !7127)
!7138 = !DILocation(line: 75, column: 4, scope: !7127)
!7139 = !DILocation(line: 75, column: 14, scope: !7127)
!7140 = !DILocation(line: 75, column: 23, scope: !7127)
!7141 = !DILocation(line: 78, column: 9, scope: !7117)
!7142 = !DILocation(line: 78, column: 3, scope: !7117)
!7143 = !DILocation(line: 79, column: 2, scope: !7117)
!7144 = !DILocation(line: 80, column: 1, scope: !7096)
!7145 = distinct !DISubprogram(name: "find_dev", scope: !3, file: !3, line: 43, type: !7146, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7146 = !DISubroutineType(types: !7147)
!7147 = !{!4450, !4458, !492}
!7148 = !DILocalVariable(name: "i2c_adap", arg: 1, scope: !7145, file: !3, line: 43, type: !4458)
!7149 = !DILocation(line: 43, column: 57, scope: !7145)
!7150 = !DILocalVariable(name: "i2c_addr", arg: 2, scope: !7145, file: !3, line: 44, type: !492)
!7151 = !DILocation(line: 44, column: 9, scope: !7145)
!7152 = !DILocalVariable(name: "temp_dev", scope: !7145, file: !3, line: 46, type: !4450)
!7153 = !DILocation(line: 46, column: 22, scope: !7145)
!7154 = !DILocation(line: 46, column: 33, scope: !7145)
!7155 = !DILocation(line: 51, column: 2, scope: !7145)
!7156 = !DILocation(line: 51, column: 10, scope: !7145)
!7157 = !DILocation(line: 51, column: 19, scope: !7145)
!7158 = !DILocation(line: 51, column: 28, scope: !7145)
!7159 = !DILocation(line: 52, column: 5, scope: !7145)
!7160 = !DILocation(line: 52, column: 15, scope: !7145)
!7161 = !DILocation(line: 52, column: 25, scope: !7145)
!7162 = !DILocation(line: 52, column: 37, scope: !7145)
!7163 = !DILocation(line: 52, column: 34, scope: !7145)
!7164 = !DILocation(line: 52, column: 47, scope: !7145)
!7165 = !DILocation(line: 53, column: 4, scope: !7145)
!7166 = !DILocation(line: 53, column: 14, scope: !7145)
!7167 = !DILocation(line: 53, column: 24, scope: !7145)
!7168 = !DILocation(line: 53, column: 36, scope: !7145)
!7169 = !DILocation(line: 53, column: 33, scope: !7145)
!7170 = !DILocation(line: 0, scope: !7145)
!7171 = !DILocation(line: 55, column: 14, scope: !7172)
!7172 = distinct !DILexicalBlock(scope: !7145, file: !3, line: 53, column: 48)
!7173 = !DILocation(line: 55, column: 24, scope: !7172)
!7174 = !DILocation(line: 55, column: 12, scope: !7172)
!7175 = distinct !{!7175, !7155, !7176}
!7176 = !DILocation(line: 56, column: 2, scope: !7145)
!7177 = !DILocation(line: 58, column: 9, scope: !7145)
!7178 = !DILocation(line: 58, column: 2, scope: !7145)
!7179 = distinct !DISubprogram(name: "stv090x_i2c_gate_ctrl", scope: !3, file: !3, line: 751, type: !7180, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7180 = !DISubroutineType(types: !7181)
!7181 = !{!439, !4654, !439}
!7182 = !DILocalVariable(name: "state", arg: 1, scope: !7179, file: !3, line: 751, type: !4654)
!7183 = !DILocation(line: 751, column: 56, scope: !7179)
!7184 = !DILocalVariable(name: "enable", arg: 2, scope: !7179, file: !3, line: 751, type: !439)
!7185 = !DILocation(line: 751, column: 67, scope: !7179)
!7186 = !DILocalVariable(name: "reg", scope: !7179, file: !3, line: 753, type: !571)
!7187 = !DILocation(line: 753, column: 6, scope: !7179)
!7188 = !DILocation(line: 764, column: 6, scope: !7189)
!7189 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 764, column: 6)
!7190 = !DILocation(line: 764, column: 6, scope: !7179)
!7191 = !DILocation(line: 765, column: 7, scope: !7192)
!7192 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 765, column: 7)
!7193 = distinct !DILexicalBlock(scope: !7189, file: !3, line: 764, column: 14)
!7194 = !DILocation(line: 765, column: 14, scope: !7192)
!7195 = !DILocation(line: 765, column: 22, scope: !7192)
!7196 = !DILocation(line: 765, column: 7, scope: !7193)
!7197 = !DILocation(line: 766, column: 4, scope: !7192)
!7198 = !DILocation(line: 766, column: 11, scope: !7192)
!7199 = !DILocation(line: 766, column: 19, scope: !7192)
!7200 = !DILocation(line: 766, column: 35, scope: !7192)
!7201 = !DILocation(line: 766, column: 42, scope: !7192)
!7202 = !DILocation(line: 768, column: 16, scope: !7192)
!7203 = !DILocation(line: 768, column: 23, scope: !7192)
!7204 = !DILocation(line: 768, column: 33, scope: !7192)
!7205 = !DILocation(line: 768, column: 4, scope: !7192)
!7206 = !DILocation(line: 769, column: 2, scope: !7193)
!7207 = !DILocation(line: 771, column: 8, scope: !7179)
!7208 = !DILocation(line: 771, column: 6, scope: !7179)
!7209 = !DILocation(line: 772, column: 6, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 772, column: 6)
!7211 = !DILocation(line: 772, column: 6, scope: !7179)
!7212 = !DILocation(line: 773, column: 3, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 772, column: 14)
!7214 = !DILocation(line: 773, column: 3, scope: !7215)
!7215 = distinct !DILexicalBlock(scope: !7216, file: !3, line: 773, column: 3)
!7216 = distinct !DILexicalBlock(scope: !7217, file: !3, line: 773, column: 3)
!7217 = distinct !DILexicalBlock(scope: !7218, file: !3, line: 773, column: 3)
!7218 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 773, column: 3)
!7219 = !DILocation(line: 773, column: 3, scope: !7216)
!7220 = !DILocation(line: 773, column: 3, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7215, file: !3, line: 773, column: 3)
!7222 = !DILocation(line: 773, column: 3, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7221, file: !3, line: 773, column: 3)
!7224 = !DILocation(line: 773, column: 3, scope: !7225)
!7225 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 773, column: 3)
!7226 = !DILocation(line: 773, column: 3, scope: !7218)
!7227 = !DILocation(line: 774, column: 3, scope: !7213)
!7228 = !DILocation(line: 775, column: 7, scope: !7229)
!7229 = distinct !DILexicalBlock(scope: !7213, file: !3, line: 775, column: 7)
!7230 = !DILocation(line: 775, column: 47, scope: !7229)
!7231 = !DILocation(line: 775, column: 7, scope: !7213)
!7232 = !DILocation(line: 776, column: 4, scope: !7229)
!7233 = !DILocation(line: 778, column: 2, scope: !7213)
!7234 = !DILocation(line: 779, column: 3, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7210, file: !3, line: 778, column: 9)
!7236 = !DILocation(line: 779, column: 3, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7238, file: !3, line: 779, column: 3)
!7238 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 779, column: 3)
!7239 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 779, column: 3)
!7240 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 779, column: 3)
!7241 = !DILocation(line: 779, column: 3, scope: !7238)
!7242 = !DILocation(line: 779, column: 3, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7237, file: !3, line: 779, column: 3)
!7244 = !DILocation(line: 779, column: 3, scope: !7245)
!7245 = distinct !DILexicalBlock(scope: !7243, file: !3, line: 779, column: 3)
!7246 = !DILocation(line: 779, column: 3, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7245, file: !3, line: 779, column: 3)
!7248 = !DILocation(line: 779, column: 3, scope: !7240)
!7249 = !DILocation(line: 780, column: 3, scope: !7235)
!7250 = !DILocation(line: 781, column: 8, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 781, column: 7)
!7252 = !DILocation(line: 781, column: 49, scope: !7251)
!7253 = !DILocation(line: 781, column: 7, scope: !7235)
!7254 = !DILocation(line: 782, column: 4, scope: !7251)
!7255 = !DILocation(line: 785, column: 7, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 785, column: 6)
!7257 = !DILocation(line: 785, column: 6, scope: !7179)
!7258 = !DILocation(line: 786, column: 7, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7260, file: !3, line: 786, column: 7)
!7260 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 785, column: 15)
!7261 = !DILocation(line: 786, column: 14, scope: !7259)
!7262 = !DILocation(line: 786, column: 22, scope: !7259)
!7263 = !DILocation(line: 786, column: 7, scope: !7260)
!7264 = !DILocation(line: 787, column: 4, scope: !7259)
!7265 = !DILocation(line: 787, column: 11, scope: !7259)
!7266 = !DILocation(line: 787, column: 19, scope: !7259)
!7267 = !DILocation(line: 787, column: 35, scope: !7259)
!7268 = !DILocation(line: 787, column: 42, scope: !7259)
!7269 = !DILocation(line: 789, column: 18, scope: !7259)
!7270 = !DILocation(line: 789, column: 25, scope: !7259)
!7271 = !DILocation(line: 789, column: 35, scope: !7259)
!7272 = !DILocation(line: 789, column: 4, scope: !7259)
!7273 = !DILocation(line: 790, column: 2, scope: !7260)
!7274 = !DILocation(line: 792, column: 2, scope: !7179)
!7275 = !DILabel(scope: !7179, name: "err", file: !3, line: 793)
!7276 = !DILocation(line: 793, column: 1, scope: !7179)
!7277 = !DILocation(line: 794, column: 2, scope: !7179)
!7278 = !DILocation(line: 794, column: 2, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7280, file: !3, line: 794, column: 2)
!7280 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 794, column: 2)
!7281 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 794, column: 2)
!7282 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 794, column: 2)
!7283 = !DILocation(line: 794, column: 2, scope: !7280)
!7284 = !DILocation(line: 794, column: 2, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 794, column: 2)
!7286 = !DILocation(line: 794, column: 2, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 794, column: 2)
!7288 = !DILocation(line: 794, column: 2, scope: !7289)
!7289 = distinct !DILexicalBlock(scope: !7287, file: !3, line: 794, column: 2)
!7290 = !DILocation(line: 794, column: 2, scope: !7282)
!7291 = !DILocation(line: 795, column: 6, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 795, column: 6)
!7293 = !DILocation(line: 795, column: 13, scope: !7292)
!7294 = !DILocation(line: 795, column: 21, scope: !7292)
!7295 = !DILocation(line: 795, column: 6, scope: !7179)
!7296 = !DILocation(line: 796, column: 3, scope: !7292)
!7297 = !DILocation(line: 796, column: 10, scope: !7292)
!7298 = !DILocation(line: 796, column: 18, scope: !7292)
!7299 = !DILocation(line: 796, column: 34, scope: !7292)
!7300 = !DILocation(line: 796, column: 41, scope: !7292)
!7301 = !DILocation(line: 798, column: 17, scope: !7292)
!7302 = !DILocation(line: 798, column: 24, scope: !7292)
!7303 = !DILocation(line: 798, column: 34, scope: !7292)
!7304 = !DILocation(line: 798, column: 3, scope: !7292)
!7305 = !DILocation(line: 799, column: 2, scope: !7179)
!7306 = !DILocation(line: 800, column: 1, scope: !7179)
!7307 = distinct !DISubprogram(name: "stv090x_set_mclk", scope: !3, file: !3, line: 4269, type: !7308, scopeLine: 4270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7308 = !DISubroutineType(types: !7309)
!7309 = !{!439, !4654, !571, !571}
!7310 = !DILocalVariable(name: "state", arg: 1, scope: !7307, file: !3, line: 4269, type: !4654)
!7311 = !DILocation(line: 4269, column: 51, scope: !7307)
!7312 = !DILocalVariable(name: "mclk", arg: 2, scope: !7307, file: !3, line: 4269, type: !571)
!7313 = !DILocation(line: 4269, column: 62, scope: !7307)
!7314 = !DILocalVariable(name: "clk", arg: 3, scope: !7307, file: !3, line: 4269, type: !571)
!7315 = !DILocation(line: 4269, column: 72, scope: !7307)
!7316 = !DILocalVariable(name: "config", scope: !7307, file: !3, line: 4271, type: !5717)
!7317 = !DILocation(line: 4271, column: 31, scope: !7307)
!7318 = !DILocation(line: 4271, column: 40, scope: !7307)
!7319 = !DILocation(line: 4271, column: 47, scope: !7307)
!7320 = !DILocalVariable(name: "reg", scope: !7307, file: !3, line: 4272, type: !571)
!7321 = !DILocation(line: 4272, column: 6, scope: !7307)
!7322 = !DILocalVariable(name: "div", scope: !7307, file: !3, line: 4272, type: !571)
!7323 = !DILocation(line: 4272, column: 11, scope: !7307)
!7324 = !DILocalVariable(name: "clk_sel", scope: !7307, file: !3, line: 4272, type: !571)
!7325 = !DILocation(line: 4272, column: 16, scope: !7307)
!7326 = !DILocation(line: 4274, column: 25, scope: !7307)
!7327 = !DILocation(line: 4274, column: 8, scope: !7307)
!7328 = !DILocation(line: 4274, column: 6, scope: !7307)
!7329 = !DILocation(line: 4275, column: 14, scope: !7307)
!7330 = !DILocation(line: 4275, column: 54, scope: !7307)
!7331 = !DILocation(line: 4275, column: 13, scope: !7307)
!7332 = !DILocation(line: 4275, column: 10, scope: !7307)
!7333 = !DILocation(line: 4277, column: 10, scope: !7307)
!7334 = !DILocation(line: 4277, column: 20, scope: !7307)
!7335 = !DILocation(line: 4277, column: 18, scope: !7307)
!7336 = !DILocation(line: 4277, column: 28, scope: !7307)
!7337 = !DILocation(line: 4277, column: 36, scope: !7307)
!7338 = !DILocation(line: 4277, column: 26, scope: !7307)
!7339 = !DILocation(line: 4277, column: 42, scope: !7307)
!7340 = !DILocation(line: 4277, column: 6, scope: !7307)
!7341 = !DILocation(line: 4279, column: 25, scope: !7307)
!7342 = !DILocation(line: 4279, column: 8, scope: !7307)
!7343 = !DILocation(line: 4279, column: 6, scope: !7307)
!7344 = !DILocation(line: 4280, column: 2, scope: !7307)
!7345 = !DILocation(line: 4281, column: 24, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4281, column: 6)
!7347 = !DILocation(line: 4281, column: 48, scope: !7346)
!7348 = !DILocation(line: 4281, column: 6, scope: !7346)
!7349 = !DILocation(line: 4281, column: 53, scope: !7346)
!7350 = !DILocation(line: 4281, column: 6, scope: !7307)
!7351 = !DILocation(line: 4282, column: 3, scope: !7346)
!7352 = !DILocation(line: 4284, column: 43, scope: !7307)
!7353 = !DILocation(line: 4284, column: 26, scope: !7307)
!7354 = !DILocation(line: 4284, column: 2, scope: !7307)
!7355 = !DILocation(line: 4284, column: 9, scope: !7307)
!7356 = !DILocation(line: 4284, column: 19, scope: !7307)
!7357 = !DILocation(line: 4284, column: 24, scope: !7307)
!7358 = !DILocation(line: 4287, column: 8, scope: !7307)
!7359 = !DILocation(line: 4287, column: 15, scope: !7307)
!7360 = !DILocation(line: 4287, column: 25, scope: !7307)
!7361 = !DILocation(line: 4287, column: 30, scope: !7307)
!7362 = !DILocation(line: 4287, column: 6, scope: !7307)
!7363 = !DILocation(line: 4288, column: 6, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4288, column: 6)
!7365 = !DILocation(line: 4288, column: 45, scope: !7364)
!7366 = !DILocation(line: 4288, column: 6, scope: !7307)
!7367 = !DILocation(line: 4289, column: 3, scope: !7364)
!7368 = !DILocation(line: 4290, column: 6, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4290, column: 6)
!7370 = !DILocation(line: 4290, column: 45, scope: !7369)
!7371 = !DILocation(line: 4290, column: 6, scope: !7307)
!7372 = !DILocation(line: 4291, column: 3, scope: !7369)
!7373 = !DILocation(line: 4293, column: 2, scope: !7307)
!7374 = !DILabel(scope: !7307, name: "err", file: !3, line: 4294)
!7375 = !DILocation(line: 4294, column: 1, scope: !7307)
!7376 = !DILocation(line: 4295, column: 2, scope: !7307)
!7377 = !DILocation(line: 4295, column: 2, scope: !7378)
!7378 = distinct !DILexicalBlock(scope: !7379, file: !3, line: 4295, column: 2)
!7379 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 4295, column: 2)
!7380 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 4295, column: 2)
!7381 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 4295, column: 2)
!7382 = !DILocation(line: 4295, column: 2, scope: !7379)
!7383 = !DILocation(line: 4295, column: 2, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7378, file: !3, line: 4295, column: 2)
!7385 = !DILocation(line: 4295, column: 2, scope: !7386)
!7386 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 4295, column: 2)
!7387 = !DILocation(line: 4295, column: 2, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7386, file: !3, line: 4295, column: 2)
!7389 = !DILocation(line: 4295, column: 2, scope: !7381)
!7390 = !DILocation(line: 4296, column: 2, scope: !7307)
!7391 = !DILocation(line: 4297, column: 1, scope: !7307)
!7392 = distinct !DISubprogram(name: "stv090x_write_reg", scope: !3, file: !3, line: 744, type: !7393, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!439, !4654, !7, !492}
!7395 = !DILocalVariable(name: "state", arg: 1, scope: !7392, file: !3, line: 744, type: !4654)
!7396 = !DILocation(line: 744, column: 52, scope: !7392)
!7397 = !DILocalVariable(name: "reg", arg: 2, scope: !7392, file: !3, line: 744, type: !7)
!7398 = !DILocation(line: 744, column: 72, scope: !7392)
!7399 = !DILocalVariable(name: "data", arg: 3, scope: !7392, file: !3, line: 744, type: !492)
!7400 = !DILocation(line: 744, column: 80, scope: !7392)
!7401 = !DILocalVariable(name: "tmp", scope: !7392, file: !3, line: 746, type: !492)
!7402 = !DILocation(line: 746, column: 5, scope: !7392)
!7403 = !DILocation(line: 746, column: 11, scope: !7392)
!7404 = !DILocation(line: 748, column: 28, scope: !7392)
!7405 = !DILocation(line: 748, column: 35, scope: !7392)
!7406 = !DILocation(line: 748, column: 9, scope: !7392)
!7407 = !DILocation(line: 748, column: 2, scope: !7392)
!7408 = distinct !DISubprogram(name: "stv090x_get_mclk", scope: !3, file: !3, line: 4256, type: !7409, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!571, !4654}
!7411 = !DILocalVariable(name: "state", arg: 1, scope: !7408, file: !3, line: 4256, type: !4654)
!7412 = !DILocation(line: 4256, column: 51, scope: !7408)
!7413 = !DILocalVariable(name: "config", scope: !7408, file: !3, line: 4258, type: !5717)
!7414 = !DILocation(line: 4258, column: 31, scope: !7408)
!7415 = !DILocation(line: 4258, column: 40, scope: !7408)
!7416 = !DILocation(line: 4258, column: 47, scope: !7408)
!7417 = !DILocalVariable(name: "div", scope: !7408, file: !3, line: 4259, type: !571)
!7418 = !DILocation(line: 4259, column: 6, scope: !7408)
!7419 = !DILocalVariable(name: "reg", scope: !7408, file: !3, line: 4259, type: !571)
!7420 = !DILocation(line: 4259, column: 11, scope: !7408)
!7421 = !DILocalVariable(name: "ratio", scope: !7408, file: !3, line: 4260, type: !492)
!7422 = !DILocation(line: 4260, column: 5, scope: !7408)
!7423 = !DILocation(line: 4262, column: 25, scope: !7408)
!7424 = !DILocation(line: 4262, column: 8, scope: !7408)
!7425 = !DILocation(line: 4262, column: 6, scope: !7408)
!7426 = !DILocation(line: 4263, column: 25, scope: !7408)
!7427 = !DILocation(line: 4263, column: 8, scope: !7408)
!7428 = !DILocation(line: 4263, column: 6, scope: !7408)
!7429 = !DILocation(line: 4264, column: 10, scope: !7408)
!7430 = !DILocation(line: 4264, column: 8, scope: !7408)
!7431 = !DILocation(line: 4266, column: 10, scope: !7408)
!7432 = !DILocation(line: 4266, column: 14, scope: !7408)
!7433 = !DILocation(line: 4266, column: 21, scope: !7408)
!7434 = !DILocation(line: 4266, column: 29, scope: !7408)
!7435 = !DILocation(line: 4266, column: 19, scope: !7408)
!7436 = !DILocation(line: 4266, column: 36, scope: !7408)
!7437 = !DILocation(line: 4266, column: 34, scope: !7408)
!7438 = !DILocation(line: 4266, column: 2, scope: !7408)
!7439 = distinct !DISubprogram(name: "stv090x_wakeup", scope: !3, file: !3, line: 4043, type: !4275, scopeLine: 4044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7440 = !DILocalVariable(name: "fe", arg: 1, scope: !7439, file: !3, line: 4043, type: !588)
!7441 = !DILocation(line: 4043, column: 48, scope: !7439)
!7442 = !DILocalVariable(name: "state", scope: !7439, file: !3, line: 4045, type: !4654)
!7443 = !DILocation(line: 4045, column: 24, scope: !7439)
!7444 = !DILocation(line: 4045, column: 32, scope: !7439)
!7445 = !DILocation(line: 4045, column: 36, scope: !7439)
!7446 = !DILocalVariable(name: "reg", scope: !7439, file: !3, line: 4046, type: !571)
!7447 = !DILocation(line: 4046, column: 6, scope: !7439)
!7448 = !DILocation(line: 4048, column: 2, scope: !7439)
!7449 = !DILocation(line: 4048, column: 2, scope: !7450)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 4048, column: 2)
!7451 = distinct !DILexicalBlock(scope: !7452, file: !3, line: 4048, column: 2)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 4048, column: 2)
!7453 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 4048, column: 2)
!7454 = !DILocation(line: 4048, column: 2, scope: !7451)
!7455 = !DILocation(line: 4048, column: 2, scope: !7456)
!7456 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 4048, column: 2)
!7457 = !DILocation(line: 4048, column: 2, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7456, file: !3, line: 4048, column: 2)
!7459 = !DILocation(line: 4048, column: 2, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7458, file: !3, line: 4048, column: 2)
!7461 = !DILocation(line: 4048, column: 2, scope: !7453)
!7462 = !DILocation(line: 4052, column: 14, scope: !7439)
!7463 = !DILocation(line: 4052, column: 21, scope: !7439)
!7464 = !DILocation(line: 4052, column: 31, scope: !7439)
!7465 = !DILocation(line: 4052, column: 2, scope: !7439)
!7466 = !DILocation(line: 4055, column: 25, scope: !7439)
!7467 = !DILocation(line: 4055, column: 8, scope: !7439)
!7468 = !DILocation(line: 4055, column: 6, scope: !7439)
!7469 = !DILocation(line: 4056, column: 2, scope: !7439)
!7470 = !DILocation(line: 4057, column: 24, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 4057, column: 6)
!7472 = !DILocation(line: 4057, column: 49, scope: !7471)
!7473 = !DILocation(line: 4057, column: 6, scope: !7471)
!7474 = !DILocation(line: 4057, column: 54, scope: !7471)
!7475 = !DILocation(line: 4057, column: 6, scope: !7439)
!7476 = !DILocation(line: 4058, column: 3, scope: !7471)
!7477 = !DILocation(line: 4060, column: 10, scope: !7439)
!7478 = !DILocation(line: 4060, column: 17, scope: !7439)
!7479 = !DILocation(line: 4060, column: 2, scope: !7439)
!7480 = !DILocation(line: 4063, column: 26, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 4060, column: 24)
!7482 = !DILocation(line: 4063, column: 9, scope: !7481)
!7483 = !DILocation(line: 4063, column: 7, scope: !7481)
!7484 = !DILocation(line: 4064, column: 3, scope: !7481)
!7485 = !DILocation(line: 4065, column: 25, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4065, column: 7)
!7487 = !DILocation(line: 4065, column: 49, scope: !7486)
!7488 = !DILocation(line: 4065, column: 7, scope: !7486)
!7489 = !DILocation(line: 4065, column: 54, scope: !7486)
!7490 = !DILocation(line: 4065, column: 7, scope: !7481)
!7491 = !DILocation(line: 4066, column: 4, scope: !7486)
!7492 = !DILocation(line: 4068, column: 26, scope: !7481)
!7493 = !DILocation(line: 4068, column: 9, scope: !7481)
!7494 = !DILocation(line: 4068, column: 7, scope: !7481)
!7495 = !DILocation(line: 4069, column: 3, scope: !7481)
!7496 = !DILocation(line: 4070, column: 25, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4070, column: 7)
!7498 = !DILocation(line: 4070, column: 49, scope: !7497)
!7499 = !DILocation(line: 4070, column: 7, scope: !7497)
!7500 = !DILocation(line: 4070, column: 54, scope: !7497)
!7501 = !DILocation(line: 4070, column: 7, scope: !7481)
!7502 = !DILocation(line: 4071, column: 4, scope: !7497)
!7503 = !DILocation(line: 4074, column: 26, scope: !7481)
!7504 = !DILocation(line: 4074, column: 9, scope: !7481)
!7505 = !DILocation(line: 4074, column: 7, scope: !7481)
!7506 = !DILocation(line: 4076, column: 3, scope: !7481)
!7507 = !DILocation(line: 4078, column: 3, scope: !7481)
!7508 = !DILocation(line: 4080, column: 3, scope: !7481)
!7509 = !DILocation(line: 4081, column: 25, scope: !7510)
!7510 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4081, column: 7)
!7511 = !DILocation(line: 4081, column: 50, scope: !7510)
!7512 = !DILocation(line: 4081, column: 7, scope: !7510)
!7513 = !DILocation(line: 4081, column: 55, scope: !7510)
!7514 = !DILocation(line: 4081, column: 7, scope: !7481)
!7515 = !DILocation(line: 4082, column: 4, scope: !7510)
!7516 = !DILocation(line: 4083, column: 26, scope: !7481)
!7517 = !DILocation(line: 4083, column: 9, scope: !7481)
!7518 = !DILocation(line: 4083, column: 7, scope: !7481)
!7519 = !DILocation(line: 4085, column: 3, scope: !7481)
!7520 = !DILocation(line: 4087, column: 3, scope: !7481)
!7521 = !DILocation(line: 4089, column: 3, scope: !7481)
!7522 = !DILocation(line: 4090, column: 25, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4090, column: 7)
!7524 = !DILocation(line: 4090, column: 50, scope: !7523)
!7525 = !DILocation(line: 4090, column: 7, scope: !7523)
!7526 = !DILocation(line: 4090, column: 55, scope: !7523)
!7527 = !DILocation(line: 4090, column: 7, scope: !7481)
!7528 = !DILocation(line: 4091, column: 4, scope: !7523)
!7529 = !DILocation(line: 4092, column: 3, scope: !7481)
!7530 = !DILocation(line: 4096, column: 26, scope: !7481)
!7531 = !DILocation(line: 4096, column: 9, scope: !7481)
!7532 = !DILocation(line: 4096, column: 7, scope: !7481)
!7533 = !DILocation(line: 4097, column: 3, scope: !7481)
!7534 = !DILocation(line: 4098, column: 25, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4098, column: 7)
!7536 = !DILocation(line: 4098, column: 49, scope: !7535)
!7537 = !DILocation(line: 4098, column: 7, scope: !7535)
!7538 = !DILocation(line: 4098, column: 54, scope: !7535)
!7539 = !DILocation(line: 4098, column: 7, scope: !7481)
!7540 = !DILocation(line: 4099, column: 4, scope: !7535)
!7541 = !DILocation(line: 4101, column: 26, scope: !7481)
!7542 = !DILocation(line: 4101, column: 9, scope: !7481)
!7543 = !DILocation(line: 4101, column: 7, scope: !7481)
!7544 = !DILocation(line: 4102, column: 3, scope: !7481)
!7545 = !DILocation(line: 4103, column: 25, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4103, column: 7)
!7547 = !DILocation(line: 4103, column: 49, scope: !7546)
!7548 = !DILocation(line: 4103, column: 7, scope: !7546)
!7549 = !DILocation(line: 4103, column: 54, scope: !7546)
!7550 = !DILocation(line: 4103, column: 7, scope: !7481)
!7551 = !DILocation(line: 4104, column: 4, scope: !7546)
!7552 = !DILocation(line: 4107, column: 26, scope: !7481)
!7553 = !DILocation(line: 4107, column: 9, scope: !7481)
!7554 = !DILocation(line: 4107, column: 7, scope: !7481)
!7555 = !DILocation(line: 4109, column: 3, scope: !7481)
!7556 = !DILocation(line: 4111, column: 3, scope: !7481)
!7557 = !DILocation(line: 4113, column: 3, scope: !7481)
!7558 = !DILocation(line: 4114, column: 25, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4114, column: 7)
!7560 = !DILocation(line: 4114, column: 50, scope: !7559)
!7561 = !DILocation(line: 4114, column: 7, scope: !7559)
!7562 = !DILocation(line: 4114, column: 55, scope: !7559)
!7563 = !DILocation(line: 4114, column: 7, scope: !7481)
!7564 = !DILocation(line: 4115, column: 4, scope: !7559)
!7565 = !DILocation(line: 4116, column: 26, scope: !7481)
!7566 = !DILocation(line: 4116, column: 9, scope: !7481)
!7567 = !DILocation(line: 4116, column: 7, scope: !7481)
!7568 = !DILocation(line: 4118, column: 3, scope: !7481)
!7569 = !DILocation(line: 4120, column: 3, scope: !7481)
!7570 = !DILocation(line: 4122, column: 3, scope: !7481)
!7571 = !DILocation(line: 4123, column: 25, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4123, column: 7)
!7573 = !DILocation(line: 4123, column: 50, scope: !7572)
!7574 = !DILocation(line: 4123, column: 7, scope: !7572)
!7575 = !DILocation(line: 4123, column: 55, scope: !7572)
!7576 = !DILocation(line: 4123, column: 7, scope: !7481)
!7577 = !DILocation(line: 4124, column: 4, scope: !7572)
!7578 = !DILocation(line: 4125, column: 3, scope: !7481)
!7579 = !DILocation(line: 4128, column: 3, scope: !7481)
!7580 = !DILocation(line: 4128, column: 3, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7582, file: !3, line: 4128, column: 3)
!7582 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 4128, column: 3)
!7583 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 4128, column: 3)
!7584 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 4128, column: 3)
!7585 = !DILocation(line: 4128, column: 3, scope: !7582)
!7586 = !DILocation(line: 4128, column: 3, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7581, file: !3, line: 4128, column: 3)
!7588 = !DILocation(line: 4128, column: 3, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7587, file: !3, line: 4128, column: 3)
!7590 = !DILocation(line: 4128, column: 3, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 4128, column: 3)
!7592 = !DILocation(line: 4128, column: 3, scope: !7584)
!7593 = !DILocation(line: 4129, column: 3, scope: !7481)
!7594 = !DILocation(line: 4132, column: 16, scope: !7439)
!7595 = !DILocation(line: 4132, column: 23, scope: !7439)
!7596 = !DILocation(line: 4132, column: 33, scope: !7439)
!7597 = !DILocation(line: 4132, column: 2, scope: !7439)
!7598 = !DILocation(line: 4133, column: 2, scope: !7439)
!7599 = !DILabel(scope: !7439, name: "err", file: !3, line: 4134)
!7600 = !DILocation(line: 4134, column: 1, scope: !7439)
!7601 = !DILocation(line: 4135, column: 16, scope: !7439)
!7602 = !DILocation(line: 4135, column: 23, scope: !7439)
!7603 = !DILocation(line: 4135, column: 33, scope: !7439)
!7604 = !DILocation(line: 4135, column: 2, scope: !7439)
!7605 = !DILocation(line: 4136, column: 2, scope: !7439)
!7606 = !DILocation(line: 4136, column: 2, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 4136, column: 2)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 4136, column: 2)
!7609 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 4136, column: 2)
!7610 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 4136, column: 2)
!7611 = !DILocation(line: 4136, column: 2, scope: !7608)
!7612 = !DILocation(line: 4136, column: 2, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 4136, column: 2)
!7614 = !DILocation(line: 4136, column: 2, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7613, file: !3, line: 4136, column: 2)
!7616 = !DILocation(line: 4136, column: 2, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 4136, column: 2)
!7618 = !DILocation(line: 4136, column: 2, scope: !7610)
!7619 = !DILocation(line: 4137, column: 2, scope: !7439)
!7620 = !DILocation(line: 4138, column: 1, scope: !7439)
!7621 = distinct !DISubprogram(name: "stv090x_ldpc_mode", scope: !3, file: !3, line: 4156, type: !7622, scopeLine: 4157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7622 = !DISubroutineType(types: !7623)
!7623 = !{!439, !4654, !288}
!7624 = !DILocalVariable(name: "state", arg: 1, scope: !7621, file: !3, line: 4156, type: !4654)
!7625 = !DILocation(line: 4156, column: 52, scope: !7621)
!7626 = !DILocalVariable(name: "ldpc_mode", arg: 2, scope: !7621, file: !3, line: 4156, type: !288)
!7627 = !DILocation(line: 4156, column: 77, scope: !7621)
!7628 = !DILocalVariable(name: "reg", scope: !7621, file: !3, line: 4158, type: !571)
!7629 = !DILocation(line: 4158, column: 6, scope: !7621)
!7630 = !DILocation(line: 4160, column: 25, scope: !7621)
!7631 = !DILocation(line: 4160, column: 8, scope: !7621)
!7632 = !DILocation(line: 4160, column: 6, scope: !7621)
!7633 = !DILocation(line: 4162, column: 10, scope: !7621)
!7634 = !DILocation(line: 4162, column: 2, scope: !7621)
!7635 = !DILocation(line: 4162, column: 21, scope: !7621)
!7636 = !DILocation(line: 4165, column: 8, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4165, column: 7)
!7638 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 4162, column: 21)
!7639 = !DILocation(line: 4165, column: 15, scope: !7637)
!7640 = !DILocation(line: 4165, column: 26, scope: !7637)
!7641 = !DILocation(line: 4165, column: 43, scope: !7637)
!7642 = !DILocation(line: 4165, column: 47, scope: !7637)
!7643 = !DILocation(line: 4165, column: 83, scope: !7637)
!7644 = !DILocation(line: 4165, column: 7, scope: !7638)
!7645 = !DILocation(line: 4167, column: 26, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4167, column: 8)
!7647 = distinct !DILexicalBlock(scope: !7637, file: !3, line: 4165, column: 90)
!7648 = !DILocation(line: 4167, column: 8, scope: !7646)
!7649 = !DILocation(line: 4167, column: 55, scope: !7646)
!7650 = !DILocation(line: 4167, column: 8, scope: !7647)
!7651 = !DILocation(line: 4168, column: 5, scope: !7646)
!7652 = !DILocation(line: 4170, column: 4, scope: !7647)
!7653 = !DILocation(line: 4170, column: 11, scope: !7647)
!7654 = !DILocation(line: 4170, column: 22, scope: !7647)
!7655 = !DILocation(line: 4172, column: 27, scope: !7647)
!7656 = !DILocation(line: 4172, column: 10, scope: !7647)
!7657 = !DILocation(line: 4172, column: 8, scope: !7647)
!7658 = !DILocation(line: 4173, column: 4, scope: !7647)
!7659 = !DILocation(line: 4174, column: 26, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4174, column: 8)
!7661 = !DILocation(line: 4174, column: 50, scope: !7660)
!7662 = !DILocation(line: 4174, column: 8, scope: !7660)
!7663 = !DILocation(line: 4174, column: 55, scope: !7660)
!7664 = !DILocation(line: 4174, column: 8, scope: !7647)
!7665 = !DILocation(line: 4175, column: 5, scope: !7660)
!7666 = !DILocation(line: 4176, column: 4, scope: !7647)
!7667 = !DILocation(line: 4177, column: 26, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4177, column: 8)
!7669 = !DILocation(line: 4177, column: 50, scope: !7668)
!7670 = !DILocation(line: 4177, column: 8, scope: !7668)
!7671 = !DILocation(line: 4177, column: 55, scope: !7668)
!7672 = !DILocation(line: 4177, column: 8, scope: !7647)
!7673 = !DILocation(line: 4178, column: 5, scope: !7668)
!7674 = !DILocation(line: 4180, column: 8, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4180, column: 8)
!7676 = !DILocation(line: 4180, column: 53, scope: !7675)
!7677 = !DILocation(line: 4180, column: 8, scope: !7647)
!7678 = !DILocation(line: 4181, column: 5, scope: !7675)
!7679 = !DILocation(line: 4182, column: 8, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4182, column: 8)
!7681 = !DILocation(line: 4182, column: 53, scope: !7680)
!7682 = !DILocation(line: 4182, column: 8, scope: !7647)
!7683 = !DILocation(line: 4183, column: 5, scope: !7680)
!7684 = !DILocation(line: 4184, column: 8, scope: !7685)
!7685 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4184, column: 8)
!7686 = !DILocation(line: 4184, column: 53, scope: !7685)
!7687 = !DILocation(line: 4184, column: 8, scope: !7647)
!7688 = !DILocation(line: 4185, column: 5, scope: !7685)
!7689 = !DILocation(line: 4186, column: 8, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4186, column: 8)
!7691 = !DILocation(line: 4186, column: 53, scope: !7690)
!7692 = !DILocation(line: 4186, column: 8, scope: !7647)
!7693 = !DILocation(line: 4187, column: 5, scope: !7690)
!7694 = !DILocation(line: 4188, column: 8, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4188, column: 8)
!7696 = !DILocation(line: 4188, column: 53, scope: !7695)
!7697 = !DILocation(line: 4188, column: 8, scope: !7647)
!7698 = !DILocation(line: 4189, column: 5, scope: !7695)
!7699 = !DILocation(line: 4190, column: 8, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4190, column: 8)
!7701 = !DILocation(line: 4190, column: 53, scope: !7700)
!7702 = !DILocation(line: 4190, column: 8, scope: !7647)
!7703 = !DILocation(line: 4191, column: 5, scope: !7700)
!7704 = !DILocation(line: 4192, column: 8, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4192, column: 8)
!7706 = !DILocation(line: 4192, column: 53, scope: !7705)
!7707 = !DILocation(line: 4192, column: 8, scope: !7647)
!7708 = !DILocation(line: 4193, column: 5, scope: !7705)
!7709 = !DILocation(line: 4195, column: 8, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4195, column: 8)
!7711 = !DILocation(line: 4195, column: 53, scope: !7710)
!7712 = !DILocation(line: 4195, column: 8, scope: !7647)
!7713 = !DILocation(line: 4196, column: 5, scope: !7710)
!7714 = !DILocation(line: 4197, column: 8, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4197, column: 8)
!7716 = !DILocation(line: 4197, column: 53, scope: !7715)
!7717 = !DILocation(line: 4197, column: 8, scope: !7647)
!7718 = !DILocation(line: 4198, column: 5, scope: !7715)
!7719 = !DILocation(line: 4199, column: 8, scope: !7720)
!7720 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4199, column: 8)
!7721 = !DILocation(line: 4199, column: 53, scope: !7720)
!7722 = !DILocation(line: 4199, column: 8, scope: !7647)
!7723 = !DILocation(line: 4200, column: 5, scope: !7720)
!7724 = !DILocation(line: 4201, column: 8, scope: !7725)
!7725 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4201, column: 8)
!7726 = !DILocation(line: 4201, column: 53, scope: !7725)
!7727 = !DILocation(line: 4201, column: 8, scope: !7647)
!7728 = !DILocation(line: 4202, column: 5, scope: !7725)
!7729 = !DILocation(line: 4203, column: 8, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4203, column: 8)
!7731 = !DILocation(line: 4203, column: 53, scope: !7730)
!7732 = !DILocation(line: 4203, column: 8, scope: !7647)
!7733 = !DILocation(line: 4204, column: 5, scope: !7730)
!7734 = !DILocation(line: 4205, column: 8, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4205, column: 8)
!7736 = !DILocation(line: 4205, column: 53, scope: !7735)
!7737 = !DILocation(line: 4205, column: 8, scope: !7647)
!7738 = !DILocation(line: 4206, column: 5, scope: !7735)
!7739 = !DILocation(line: 4207, column: 8, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4207, column: 8)
!7741 = !DILocation(line: 4207, column: 53, scope: !7740)
!7742 = !DILocation(line: 4207, column: 8, scope: !7647)
!7743 = !DILocation(line: 4208, column: 5, scope: !7740)
!7744 = !DILocation(line: 4210, column: 8, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4210, column: 8)
!7746 = !DILocation(line: 4210, column: 53, scope: !7745)
!7747 = !DILocation(line: 4210, column: 8, scope: !7647)
!7748 = !DILocation(line: 4211, column: 5, scope: !7745)
!7749 = !DILocation(line: 4212, column: 8, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 4212, column: 8)
!7751 = !DILocation(line: 4212, column: 53, scope: !7750)
!7752 = !DILocation(line: 4212, column: 8, scope: !7647)
!7753 = !DILocation(line: 4213, column: 5, scope: !7750)
!7754 = !DILocation(line: 4214, column: 3, scope: !7647)
!7755 = !DILocation(line: 4215, column: 3, scope: !7638)
!7756 = !DILocation(line: 4218, column: 27, scope: !7757)
!7757 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4218, column: 7)
!7758 = !DILocation(line: 4218, column: 7, scope: !7757)
!7759 = !DILocation(line: 4218, column: 34, scope: !7757)
!7760 = !DILocation(line: 4218, column: 7, scope: !7638)
!7761 = !DILocation(line: 4219, column: 4, scope: !7757)
!7762 = !DILocation(line: 4220, column: 38, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4220, column: 7)
!7764 = !DILocation(line: 4220, column: 7, scope: !7763)
!7765 = !DILocation(line: 4220, column: 45, scope: !7763)
!7766 = !DILocation(line: 4220, column: 7, scope: !7638)
!7767 = !DILocation(line: 4221, column: 4, scope: !7763)
!7768 = !DILocation(line: 4223, column: 7, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4223, column: 7)
!7770 = !DILocation(line: 4223, column: 14, scope: !7769)
!7771 = !DILocation(line: 4223, column: 20, scope: !7769)
!7772 = !DILocation(line: 4223, column: 7, scope: !7638)
!7773 = !DILocation(line: 4224, column: 26, scope: !7774)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 4224, column: 8)
!7775 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 4223, column: 46)
!7776 = !DILocation(line: 4224, column: 8, scope: !7774)
!7777 = !DILocation(line: 4224, column: 55, scope: !7774)
!7778 = !DILocation(line: 4224, column: 8, scope: !7775)
!7779 = !DILocation(line: 4225, column: 5, scope: !7774)
!7780 = !DILocation(line: 4226, column: 3, scope: !7775)
!7781 = !DILocation(line: 4227, column: 26, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7783, file: !3, line: 4227, column: 8)
!7783 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 4226, column: 10)
!7784 = !DILocation(line: 4227, column: 8, scope: !7782)
!7785 = !DILocation(line: 4227, column: 55, scope: !7782)
!7786 = !DILocation(line: 4227, column: 8, scope: !7783)
!7787 = !DILocation(line: 4228, column: 5, scope: !7782)
!7788 = !DILocation(line: 4231, column: 26, scope: !7638)
!7789 = !DILocation(line: 4231, column: 9, scope: !7638)
!7790 = !DILocation(line: 4231, column: 7, scope: !7638)
!7791 = !DILocation(line: 4232, column: 3, scope: !7638)
!7792 = !DILocation(line: 4233, column: 25, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4233, column: 7)
!7794 = !DILocation(line: 4233, column: 49, scope: !7793)
!7795 = !DILocation(line: 4233, column: 7, scope: !7793)
!7796 = !DILocation(line: 4233, column: 54, scope: !7793)
!7797 = !DILocation(line: 4233, column: 7, scope: !7638)
!7798 = !DILocation(line: 4234, column: 4, scope: !7793)
!7799 = !DILocation(line: 4235, column: 3, scope: !7638)
!7800 = !DILocation(line: 4236, column: 25, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4236, column: 7)
!7802 = !DILocation(line: 4236, column: 49, scope: !7801)
!7803 = !DILocation(line: 4236, column: 7, scope: !7801)
!7804 = !DILocation(line: 4236, column: 54, scope: !7801)
!7805 = !DILocation(line: 4236, column: 7, scope: !7638)
!7806 = !DILocation(line: 4237, column: 4, scope: !7801)
!7807 = !DILocation(line: 4239, column: 9, scope: !7638)
!7808 = !DILocation(line: 4239, column: 7, scope: !7638)
!7809 = !DILocation(line: 4240, column: 3, scope: !7638)
!7810 = !DILocation(line: 4241, column: 7, scope: !7811)
!7811 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4241, column: 7)
!7812 = !DILocation(line: 4241, column: 50, scope: !7811)
!7813 = !DILocation(line: 4241, column: 7, scope: !7638)
!7814 = !DILocation(line: 4242, column: 4, scope: !7811)
!7815 = !DILocation(line: 4243, column: 3, scope: !7638)
!7816 = !DILocation(line: 4244, column: 7, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 4244, column: 7)
!7818 = !DILocation(line: 4244, column: 50, scope: !7817)
!7819 = !DILocation(line: 4244, column: 7, scope: !7638)
!7820 = !DILocation(line: 4245, column: 4, scope: !7817)
!7821 = !DILocation(line: 4246, column: 3, scope: !7638)
!7822 = !DILocation(line: 4249, column: 2, scope: !7621)
!7823 = !DILabel(scope: !7621, name: "err", file: !3, line: 4250)
!7824 = !DILocation(line: 4250, column: 1, scope: !7621)
!7825 = !DILocation(line: 4251, column: 2, scope: !7621)
!7826 = !DILocation(line: 4251, column: 2, scope: !7827)
!7827 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 4251, column: 2)
!7828 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 4251, column: 2)
!7829 = distinct !DILexicalBlock(scope: !7830, file: !3, line: 4251, column: 2)
!7830 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 4251, column: 2)
!7831 = !DILocation(line: 4251, column: 2, scope: !7828)
!7832 = !DILocation(line: 4251, column: 2, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7827, file: !3, line: 4251, column: 2)
!7834 = !DILocation(line: 4251, column: 2, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 4251, column: 2)
!7836 = !DILocation(line: 4251, column: 2, scope: !7837)
!7837 = distinct !DILexicalBlock(scope: !7835, file: !3, line: 4251, column: 2)
!7838 = !DILocation(line: 4251, column: 2, scope: !7830)
!7839 = !DILocation(line: 4252, column: 2, scope: !7621)
!7840 = !DILocation(line: 4253, column: 1, scope: !7621)
!7841 = distinct !DISubprogram(name: "stv090x_read_reg", scope: !3, file: !3, line: 683, type: !7842, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7842 = !DISubroutineType(types: !7843)
!7843 = !{!439, !4654, !7}
!7844 = !DILocalVariable(name: "state", arg: 1, scope: !7841, file: !3, line: 683, type: !4654)
!7845 = !DILocation(line: 683, column: 51, scope: !7841)
!7846 = !DILocalVariable(name: "reg", arg: 2, scope: !7841, file: !3, line: 683, type: !7)
!7847 = !DILocation(line: 683, column: 71, scope: !7841)
!7848 = !DILocalVariable(name: "config", scope: !7841, file: !3, line: 685, type: !5717)
!7849 = !DILocation(line: 685, column: 31, scope: !7841)
!7850 = !DILocation(line: 685, column: 40, scope: !7841)
!7851 = !DILocation(line: 685, column: 47, scope: !7841)
!7852 = !DILocalVariable(name: "ret", scope: !7841, file: !3, line: 686, type: !439)
!7853 = !DILocation(line: 686, column: 6, scope: !7841)
!7854 = !DILocalVariable(name: "b0", scope: !7841, file: !3, line: 688, type: !7855)
!7855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 16, elements: !1873)
!7856 = !DILocation(line: 688, column: 5, scope: !7841)
!7857 = !DILocation(line: 688, column: 12, scope: !7841)
!7858 = !DILocation(line: 688, column: 14, scope: !7841)
!7859 = !DILocation(line: 688, column: 18, scope: !7841)
!7860 = !DILocation(line: 688, column: 24, scope: !7841)
!7861 = !DILocation(line: 688, column: 28, scope: !7841)
!7862 = !DILocalVariable(name: "buf", scope: !7841, file: !3, line: 689, type: !492)
!7863 = !DILocation(line: 689, column: 5, scope: !7841)
!7864 = !DILocalVariable(name: "msg", scope: !7841, file: !3, line: 691, type: !7865)
!7865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4473, size: 256, elements: !1873)
!7866 = !DILocation(line: 691, column: 17, scope: !7841)
!7867 = !DILocation(line: 691, column: 25, scope: !7841)
!7868 = !DILocation(line: 692, column: 3, scope: !7841)
!7869 = !DILocation(line: 692, column: 13, scope: !7841)
!7870 = !DILocation(line: 692, column: 21, scope: !7841)
!7871 = !DILocation(line: 692, column: 50, scope: !7841)
!7872 = !DILocation(line: 693, column: 3, scope: !7841)
!7873 = !DILocation(line: 693, column: 13, scope: !7841)
!7874 = !DILocation(line: 693, column: 21, scope: !7841)
!7875 = !DILocation(line: 696, column: 21, scope: !7841)
!7876 = !DILocation(line: 696, column: 28, scope: !7841)
!7877 = !DILocation(line: 696, column: 33, scope: !7841)
!7878 = !DILocation(line: 696, column: 8, scope: !7841)
!7879 = !DILocation(line: 696, column: 6, scope: !7841)
!7880 = !DILocation(line: 697, column: 6, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 697, column: 6)
!7882 = !DILocation(line: 697, column: 10, scope: !7881)
!7883 = !DILocation(line: 697, column: 6, scope: !7841)
!7884 = !DILocation(line: 698, column: 7, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 698, column: 7)
!7886 = distinct !DILexicalBlock(scope: !7881, file: !3, line: 697, column: 16)
!7887 = !DILocation(line: 698, column: 11, scope: !7885)
!7888 = !DILocation(line: 698, column: 7, scope: !7886)
!7889 = !DILocation(line: 699, column: 4, scope: !7885)
!7890 = !DILocation(line: 699, column: 4, scope: !7891)
!7891 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 699, column: 4)
!7892 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 699, column: 4)
!7893 = distinct !DILexicalBlock(scope: !7894, file: !3, line: 699, column: 4)
!7894 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 699, column: 4)
!7895 = !DILocation(line: 699, column: 4, scope: !7892)
!7896 = !DILocation(line: 699, column: 4, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7891, file: !3, line: 699, column: 4)
!7898 = !DILocation(line: 699, column: 4, scope: !7899)
!7899 = distinct !DILexicalBlock(scope: !7897, file: !3, line: 699, column: 4)
!7900 = !DILocation(line: 699, column: 4, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7899, file: !3, line: 699, column: 4)
!7902 = !DILocation(line: 699, column: 4, scope: !7894)
!7903 = !DILocation(line: 703, column: 10, scope: !7886)
!7904 = !DILocation(line: 703, column: 14, scope: !7886)
!7905 = !DILocation(line: 703, column: 20, scope: !7886)
!7906 = !DILocation(line: 703, column: 3, scope: !7886)
!7907 = !DILocation(line: 705, column: 6, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 705, column: 6)
!7909 = !DILocation(line: 705, column: 6, scope: !7841)
!7910 = !DILocation(line: 706, column: 3, scope: !7908)
!7911 = !DILocation(line: 706, column: 3, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7913, file: !3, line: 706, column: 3)
!7913 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 706, column: 3)
!7914 = distinct !DILexicalBlock(scope: !7915, file: !3, line: 706, column: 3)
!7915 = distinct !DILexicalBlock(scope: !7908, file: !3, line: 706, column: 3)
!7916 = !DILocation(line: 706, column: 3, scope: !7913)
!7917 = !DILocation(line: 706, column: 3, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7912, file: !3, line: 706, column: 3)
!7919 = !DILocation(line: 706, column: 3, scope: !7920)
!7920 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 706, column: 3)
!7921 = !DILocation(line: 706, column: 3, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7920, file: !3, line: 706, column: 3)
!7923 = !DILocation(line: 706, column: 3, scope: !7915)
!7924 = !DILocation(line: 709, column: 24, scope: !7841)
!7925 = !DILocation(line: 709, column: 9, scope: !7841)
!7926 = !DILocation(line: 709, column: 2, scope: !7841)
!7927 = !DILocation(line: 710, column: 1, scope: !7841)
!7928 = distinct !DISubprogram(name: "stv0900_set_tspath", scope: !3, file: !3, line: 4299, type: !4652, scopeLine: 4300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!7929 = !DILocalVariable(name: "state", arg: 1, scope: !7928, file: !3, line: 4299, type: !4654)
!7930 = !DILocation(line: 4299, column: 53, scope: !7928)
!7931 = !DILocalVariable(name: "reg", scope: !7928, file: !3, line: 4301, type: !571)
!7932 = !DILocation(line: 4301, column: 6, scope: !7928)
!7933 = !DILocation(line: 4303, column: 6, scope: !7934)
!7934 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4303, column: 6)
!7935 = !DILocation(line: 4303, column: 13, scope: !7934)
!7936 = !DILocation(line: 4303, column: 23, scope: !7934)
!7937 = !DILocation(line: 4303, column: 31, scope: !7934)
!7938 = !DILocation(line: 4303, column: 6, scope: !7928)
!7939 = !DILocation(line: 4304, column: 11, scope: !7940)
!7940 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 4303, column: 40)
!7941 = !DILocation(line: 4304, column: 18, scope: !7940)
!7942 = !DILocation(line: 4304, column: 26, scope: !7940)
!7943 = !DILocation(line: 4304, column: 3, scope: !7940)
!7944 = !DILocation(line: 4307, column: 12, scope: !7945)
!7945 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 4304, column: 36)
!7946 = !DILocation(line: 4307, column: 19, scope: !7945)
!7947 = !DILocation(line: 4307, column: 27, scope: !7945)
!7948 = !DILocation(line: 4307, column: 4, scope: !7945)
!7949 = !DILocation(line: 4307, column: 37, scope: !7945)
!7950 = !DILocation(line: 4311, column: 23, scope: !7951)
!7951 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 4307, column: 37)
!7952 = !DILocation(line: 4311, column: 5, scope: !7951)
!7953 = !DILocation(line: 4312, column: 5, scope: !7951)
!7954 = !DILocation(line: 4316, column: 27, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 4316, column: 9)
!7956 = !DILocation(line: 4316, column: 9, scope: !7955)
!7957 = !DILocation(line: 4316, column: 59, scope: !7955)
!7958 = !DILocation(line: 4316, column: 9, scope: !7951)
!7959 = !DILocation(line: 4317, column: 6, scope: !7955)
!7960 = !DILocation(line: 4318, column: 28, scope: !7951)
!7961 = !DILocation(line: 4318, column: 11, scope: !7951)
!7962 = !DILocation(line: 4318, column: 9, scope: !7951)
!7963 = !DILocation(line: 4319, column: 5, scope: !7951)
!7964 = !DILocation(line: 4320, column: 27, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 4320, column: 9)
!7966 = !DILocation(line: 4320, column: 53, scope: !7965)
!7967 = !DILocation(line: 4320, column: 9, scope: !7965)
!7968 = !DILocation(line: 4320, column: 58, scope: !7965)
!7969 = !DILocation(line: 4320, column: 9, scope: !7951)
!7970 = !DILocation(line: 4321, column: 6, scope: !7965)
!7971 = !DILocation(line: 4322, column: 28, scope: !7951)
!7972 = !DILocation(line: 4322, column: 11, scope: !7951)
!7973 = !DILocation(line: 4322, column: 9, scope: !7951)
!7974 = !DILocation(line: 4323, column: 5, scope: !7951)
!7975 = !DILocation(line: 4324, column: 27, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 4324, column: 9)
!7977 = !DILocation(line: 4324, column: 53, scope: !7976)
!7978 = !DILocation(line: 4324, column: 9, scope: !7976)
!7979 = !DILocation(line: 4324, column: 58, scope: !7976)
!7980 = !DILocation(line: 4324, column: 9, scope: !7951)
!7981 = !DILocation(line: 4325, column: 6, scope: !7976)
!7982 = !DILocation(line: 4326, column: 27, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 4326, column: 9)
!7984 = !DILocation(line: 4326, column: 9, scope: !7983)
!7985 = !DILocation(line: 4326, column: 60, scope: !7983)
!7986 = !DILocation(line: 4326, column: 9, scope: !7951)
!7987 = !DILocation(line: 4327, column: 6, scope: !7983)
!7988 = !DILocation(line: 4328, column: 27, scope: !7989)
!7989 = distinct !DILexicalBlock(scope: !7951, file: !3, line: 4328, column: 9)
!7990 = !DILocation(line: 4328, column: 9, scope: !7989)
!7991 = !DILocation(line: 4328, column: 60, scope: !7989)
!7992 = !DILocation(line: 4328, column: 9, scope: !7951)
!7993 = !DILocation(line: 4329, column: 6, scope: !7989)
!7994 = !DILocation(line: 4330, column: 5, scope: !7951)
!7995 = !DILocation(line: 4332, column: 4, scope: !7945)
!7996 = !DILocation(line: 4337, column: 12, scope: !7945)
!7997 = !DILocation(line: 4337, column: 19, scope: !7945)
!7998 = !DILocation(line: 4337, column: 27, scope: !7945)
!7999 = !DILocation(line: 4337, column: 4, scope: !7945)
!8000 = !DILocation(line: 4337, column: 37, scope: !7945)
!8001 = !DILocation(line: 4341, column: 27, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4341, column: 9)
!8003 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 4337, column: 37)
!8004 = !DILocation(line: 4341, column: 9, scope: !8002)
!8005 = !DILocation(line: 4341, column: 59, scope: !8002)
!8006 = !DILocation(line: 4341, column: 9, scope: !8003)
!8007 = !DILocation(line: 4342, column: 6, scope: !8002)
!8008 = !DILocation(line: 4343, column: 5, scope: !8003)
!8009 = !DILocation(line: 4347, column: 27, scope: !8010)
!8010 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 4347, column: 9)
!8011 = !DILocation(line: 4347, column: 9, scope: !8010)
!8012 = !DILocation(line: 4347, column: 59, scope: !8010)
!8013 = !DILocation(line: 4347, column: 9, scope: !8003)
!8014 = !DILocation(line: 4348, column: 6, scope: !8010)
!8015 = !DILocation(line: 4349, column: 5, scope: !8003)
!8016 = !DILocation(line: 4351, column: 4, scope: !7945)
!8017 = !DILocation(line: 4353, column: 2, scope: !7940)
!8018 = !DILocation(line: 4354, column: 11, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !7934, file: !3, line: 4353, column: 9)
!8020 = !DILocation(line: 4354, column: 18, scope: !8019)
!8021 = !DILocation(line: 4354, column: 26, scope: !8019)
!8022 = !DILocation(line: 4354, column: 3, scope: !8019)
!8023 = !DILocation(line: 4357, column: 12, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 4354, column: 36)
!8025 = !DILocation(line: 4357, column: 19, scope: !8024)
!8026 = !DILocation(line: 4357, column: 27, scope: !8024)
!8027 = !DILocation(line: 4357, column: 4, scope: !8024)
!8028 = !DILocation(line: 4357, column: 37, scope: !8024)
!8029 = !DILocation(line: 4361, column: 23, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 4357, column: 37)
!8031 = !DILocation(line: 4361, column: 5, scope: !8030)
!8032 = !DILocation(line: 4362, column: 5, scope: !8030)
!8033 = !DILocation(line: 4366, column: 23, scope: !8030)
!8034 = !DILocation(line: 4366, column: 5, scope: !8030)
!8035 = !DILocation(line: 4367, column: 28, scope: !8030)
!8036 = !DILocation(line: 4367, column: 11, scope: !8030)
!8037 = !DILocation(line: 4367, column: 9, scope: !8030)
!8038 = !DILocation(line: 4368, column: 5, scope: !8030)
!8039 = !DILocation(line: 4369, column: 27, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 4369, column: 9)
!8041 = !DILocation(line: 4369, column: 53, scope: !8040)
!8042 = !DILocation(line: 4369, column: 9, scope: !8040)
!8043 = !DILocation(line: 4369, column: 58, scope: !8040)
!8044 = !DILocation(line: 4369, column: 9, scope: !8030)
!8045 = !DILocation(line: 4370, column: 6, scope: !8040)
!8046 = !DILocation(line: 4371, column: 28, scope: !8030)
!8047 = !DILocation(line: 4371, column: 11, scope: !8030)
!8048 = !DILocation(line: 4371, column: 9, scope: !8030)
!8049 = !DILocation(line: 4372, column: 5, scope: !8030)
!8050 = !DILocation(line: 4373, column: 27, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 4373, column: 9)
!8052 = !DILocation(line: 4373, column: 53, scope: !8051)
!8053 = !DILocation(line: 4373, column: 9, scope: !8051)
!8054 = !DILocation(line: 4373, column: 58, scope: !8051)
!8055 = !DILocation(line: 4373, column: 9, scope: !8030)
!8056 = !DILocation(line: 4374, column: 6, scope: !8051)
!8057 = !DILocation(line: 4375, column: 27, scope: !8058)
!8058 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 4375, column: 9)
!8059 = !DILocation(line: 4375, column: 9, scope: !8058)
!8060 = !DILocation(line: 4375, column: 60, scope: !8058)
!8061 = !DILocation(line: 4375, column: 9, scope: !8030)
!8062 = !DILocation(line: 4376, column: 6, scope: !8058)
!8063 = !DILocation(line: 4377, column: 27, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 4377, column: 9)
!8065 = !DILocation(line: 4377, column: 9, scope: !8064)
!8066 = !DILocation(line: 4377, column: 60, scope: !8064)
!8067 = !DILocation(line: 4377, column: 9, scope: !8030)
!8068 = !DILocation(line: 4378, column: 6, scope: !8064)
!8069 = !DILocation(line: 4379, column: 5, scope: !8030)
!8070 = !DILocation(line: 4381, column: 4, scope: !8024)
!8071 = !DILocation(line: 4386, column: 12, scope: !8024)
!8072 = !DILocation(line: 4386, column: 19, scope: !8024)
!8073 = !DILocation(line: 4386, column: 27, scope: !8024)
!8074 = !DILocation(line: 4386, column: 4, scope: !8024)
!8075 = !DILocation(line: 4386, column: 37, scope: !8024)
!8076 = !DILocation(line: 4390, column: 23, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 4386, column: 37)
!8078 = !DILocation(line: 4390, column: 5, scope: !8077)
!8079 = !DILocation(line: 4391, column: 5, scope: !8077)
!8080 = !DILocation(line: 4395, column: 23, scope: !8077)
!8081 = !DILocation(line: 4395, column: 5, scope: !8077)
!8082 = !DILocation(line: 4396, column: 5, scope: !8077)
!8083 = !DILocation(line: 4398, column: 4, scope: !8024)
!8084 = !DILocation(line: 4402, column: 10, scope: !7928)
!8085 = !DILocation(line: 4402, column: 17, scope: !7928)
!8086 = !DILocation(line: 4402, column: 25, scope: !7928)
!8087 = !DILocation(line: 4402, column: 2, scope: !7928)
!8088 = !DILocation(line: 4404, column: 26, scope: !8089)
!8089 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4402, column: 35)
!8090 = !DILocation(line: 4404, column: 9, scope: !8089)
!8091 = !DILocation(line: 4404, column: 7, scope: !8089)
!8092 = !DILocation(line: 4405, column: 3, scope: !8089)
!8093 = !DILocation(line: 4406, column: 3, scope: !8089)
!8094 = !DILocation(line: 4407, column: 3, scope: !8089)
!8095 = !DILocation(line: 4408, column: 25, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 4408, column: 7)
!8097 = !DILocation(line: 4408, column: 51, scope: !8096)
!8098 = !DILocation(line: 4408, column: 7, scope: !8096)
!8099 = !DILocation(line: 4408, column: 56, scope: !8096)
!8100 = !DILocation(line: 4408, column: 7, scope: !8089)
!8101 = !DILocation(line: 4409, column: 4, scope: !8096)
!8102 = !DILocation(line: 4410, column: 3, scope: !8089)
!8103 = !DILocation(line: 4413, column: 26, scope: !8089)
!8104 = !DILocation(line: 4413, column: 9, scope: !8089)
!8105 = !DILocation(line: 4413, column: 7, scope: !8089)
!8106 = !DILocation(line: 4414, column: 3, scope: !8089)
!8107 = !DILocation(line: 4415, column: 3, scope: !8089)
!8108 = !DILocation(line: 4416, column: 3, scope: !8089)
!8109 = !DILocation(line: 4417, column: 25, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 4417, column: 7)
!8111 = !DILocation(line: 4417, column: 51, scope: !8110)
!8112 = !DILocation(line: 4417, column: 7, scope: !8110)
!8113 = !DILocation(line: 4417, column: 56, scope: !8110)
!8114 = !DILocation(line: 4417, column: 7, scope: !8089)
!8115 = !DILocation(line: 4418, column: 4, scope: !8110)
!8116 = !DILocation(line: 4419, column: 3, scope: !8089)
!8117 = !DILocation(line: 4422, column: 26, scope: !8089)
!8118 = !DILocation(line: 4422, column: 9, scope: !8089)
!8119 = !DILocation(line: 4422, column: 7, scope: !8089)
!8120 = !DILocation(line: 4423, column: 3, scope: !8089)
!8121 = !DILocation(line: 4424, column: 3, scope: !8089)
!8122 = !DILocation(line: 4425, column: 3, scope: !8089)
!8123 = !DILocation(line: 4426, column: 25, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 4426, column: 7)
!8125 = !DILocation(line: 4426, column: 51, scope: !8124)
!8126 = !DILocation(line: 4426, column: 7, scope: !8124)
!8127 = !DILocation(line: 4426, column: 56, scope: !8124)
!8128 = !DILocation(line: 4426, column: 7, scope: !8089)
!8129 = !DILocation(line: 4427, column: 4, scope: !8124)
!8130 = !DILocation(line: 4428, column: 3, scope: !8089)
!8131 = !DILocation(line: 4431, column: 26, scope: !8089)
!8132 = !DILocation(line: 4431, column: 9, scope: !8089)
!8133 = !DILocation(line: 4431, column: 7, scope: !8089)
!8134 = !DILocation(line: 4432, column: 3, scope: !8089)
!8135 = !DILocation(line: 4433, column: 3, scope: !8089)
!8136 = !DILocation(line: 4434, column: 3, scope: !8089)
!8137 = !DILocation(line: 4435, column: 25, scope: !8138)
!8138 = distinct !DILexicalBlock(scope: !8089, file: !3, line: 4435, column: 7)
!8139 = !DILocation(line: 4435, column: 51, scope: !8138)
!8140 = !DILocation(line: 4435, column: 7, scope: !8138)
!8141 = !DILocation(line: 4435, column: 56, scope: !8138)
!8142 = !DILocation(line: 4435, column: 7, scope: !8089)
!8143 = !DILocation(line: 4436, column: 4, scope: !8138)
!8144 = !DILocation(line: 4437, column: 3, scope: !8089)
!8145 = !DILocation(line: 4440, column: 3, scope: !8089)
!8146 = !DILocation(line: 4443, column: 10, scope: !7928)
!8147 = !DILocation(line: 4443, column: 17, scope: !7928)
!8148 = !DILocation(line: 4443, column: 25, scope: !7928)
!8149 = !DILocation(line: 4443, column: 2, scope: !7928)
!8150 = !DILocation(line: 4445, column: 26, scope: !8151)
!8151 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4443, column: 35)
!8152 = !DILocation(line: 4445, column: 9, scope: !8151)
!8153 = !DILocation(line: 4445, column: 7, scope: !8151)
!8154 = !DILocation(line: 4446, column: 3, scope: !8151)
!8155 = !DILocation(line: 4447, column: 3, scope: !8151)
!8156 = !DILocation(line: 4448, column: 3, scope: !8151)
!8157 = !DILocation(line: 4449, column: 25, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 4449, column: 7)
!8159 = !DILocation(line: 4449, column: 51, scope: !8158)
!8160 = !DILocation(line: 4449, column: 7, scope: !8158)
!8161 = !DILocation(line: 4449, column: 56, scope: !8158)
!8162 = !DILocation(line: 4449, column: 7, scope: !8151)
!8163 = !DILocation(line: 4450, column: 4, scope: !8158)
!8164 = !DILocation(line: 4451, column: 3, scope: !8151)
!8165 = !DILocation(line: 4454, column: 26, scope: !8151)
!8166 = !DILocation(line: 4454, column: 9, scope: !8151)
!8167 = !DILocation(line: 4454, column: 7, scope: !8151)
!8168 = !DILocation(line: 4455, column: 3, scope: !8151)
!8169 = !DILocation(line: 4456, column: 3, scope: !8151)
!8170 = !DILocation(line: 4457, column: 3, scope: !8151)
!8171 = !DILocation(line: 4458, column: 25, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 4458, column: 7)
!8173 = !DILocation(line: 4458, column: 51, scope: !8172)
!8174 = !DILocation(line: 4458, column: 7, scope: !8172)
!8175 = !DILocation(line: 4458, column: 56, scope: !8172)
!8176 = !DILocation(line: 4458, column: 7, scope: !8151)
!8177 = !DILocation(line: 4459, column: 4, scope: !8172)
!8178 = !DILocation(line: 4460, column: 3, scope: !8151)
!8179 = !DILocation(line: 4463, column: 26, scope: !8151)
!8180 = !DILocation(line: 4463, column: 9, scope: !8151)
!8181 = !DILocation(line: 4463, column: 7, scope: !8151)
!8182 = !DILocation(line: 4464, column: 3, scope: !8151)
!8183 = !DILocation(line: 4465, column: 3, scope: !8151)
!8184 = !DILocation(line: 4466, column: 3, scope: !8151)
!8185 = !DILocation(line: 4467, column: 25, scope: !8186)
!8186 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 4467, column: 7)
!8187 = !DILocation(line: 4467, column: 51, scope: !8186)
!8188 = !DILocation(line: 4467, column: 7, scope: !8186)
!8189 = !DILocation(line: 4467, column: 56, scope: !8186)
!8190 = !DILocation(line: 4467, column: 7, scope: !8151)
!8191 = !DILocation(line: 4468, column: 4, scope: !8186)
!8192 = !DILocation(line: 4469, column: 3, scope: !8151)
!8193 = !DILocation(line: 4472, column: 26, scope: !8151)
!8194 = !DILocation(line: 4472, column: 9, scope: !8151)
!8195 = !DILocation(line: 4472, column: 7, scope: !8151)
!8196 = !DILocation(line: 4473, column: 3, scope: !8151)
!8197 = !DILocation(line: 4474, column: 3, scope: !8151)
!8198 = !DILocation(line: 4475, column: 3, scope: !8151)
!8199 = !DILocation(line: 4476, column: 25, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8151, file: !3, line: 4476, column: 7)
!8201 = !DILocation(line: 4476, column: 51, scope: !8200)
!8202 = !DILocation(line: 4476, column: 7, scope: !8200)
!8203 = !DILocation(line: 4476, column: 56, scope: !8200)
!8204 = !DILocation(line: 4476, column: 7, scope: !8151)
!8205 = !DILocation(line: 4477, column: 4, scope: !8200)
!8206 = !DILocation(line: 4478, column: 3, scope: !8151)
!8207 = !DILocation(line: 4481, column: 3, scope: !8151)
!8208 = !DILocation(line: 4484, column: 6, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4484, column: 6)
!8210 = !DILocation(line: 4484, column: 13, scope: !8209)
!8211 = !DILocation(line: 4484, column: 21, scope: !8209)
!8212 = !DILocation(line: 4484, column: 29, scope: !8209)
!8213 = !DILocation(line: 4484, column: 6, scope: !7928)
!8214 = !DILocalVariable(name: "speed", scope: !8215, file: !3, line: 4485, type: !571)
!8215 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 4484, column: 34)
!8216 = !DILocation(line: 4485, column: 7, scope: !8215)
!8217 = !DILocation(line: 4487, column: 11, scope: !8215)
!8218 = !DILocation(line: 4487, column: 18, scope: !8215)
!8219 = !DILocation(line: 4487, column: 26, scope: !8215)
!8220 = !DILocation(line: 4487, column: 3, scope: !8215)
!8221 = !DILocation(line: 4487, column: 36, scope: !8215)
!8222 = !DILocation(line: 4491, column: 12, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4487, column: 36)
!8224 = !DILocation(line: 4491, column: 19, scope: !8223)
!8225 = !DILocation(line: 4491, column: 29, scope: !8223)
!8226 = !DILocation(line: 4492, column: 6, scope: !8223)
!8227 = !DILocation(line: 4492, column: 13, scope: !8223)
!8228 = !DILocation(line: 4492, column: 21, scope: !8223)
!8229 = !DILocation(line: 4492, column: 29, scope: !8223)
!8230 = !DILocation(line: 4491, column: 34, scope: !8223)
!8231 = !DILocation(line: 4491, column: 10, scope: !8223)
!8232 = !DILocation(line: 4493, column: 8, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 4493, column: 8)
!8234 = !DILocation(line: 4493, column: 14, scope: !8233)
!8235 = !DILocation(line: 4493, column: 8, scope: !8223)
!8236 = !DILocation(line: 4494, column: 11, scope: !8233)
!8237 = !DILocation(line: 4494, column: 5, scope: !8233)
!8238 = !DILocation(line: 4495, column: 8, scope: !8239)
!8239 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 4495, column: 8)
!8240 = !DILocation(line: 4495, column: 14, scope: !8239)
!8241 = !DILocation(line: 4495, column: 8, scope: !8223)
!8242 = !DILocation(line: 4496, column: 11, scope: !8239)
!8243 = !DILocation(line: 4496, column: 5, scope: !8239)
!8244 = !DILocation(line: 4497, column: 4, scope: !8223)
!8245 = !DILocation(line: 4500, column: 12, scope: !8223)
!8246 = !DILocation(line: 4500, column: 19, scope: !8223)
!8247 = !DILocation(line: 4500, column: 29, scope: !8223)
!8248 = !DILocation(line: 4501, column: 6, scope: !8223)
!8249 = !DILocation(line: 4501, column: 13, scope: !8223)
!8250 = !DILocation(line: 4501, column: 21, scope: !8223)
!8251 = !DILocation(line: 4501, column: 29, scope: !8223)
!8252 = !DILocation(line: 4500, column: 34, scope: !8223)
!8253 = !DILocation(line: 4500, column: 10, scope: !8223)
!8254 = !DILocation(line: 4502, column: 8, scope: !8255)
!8255 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 4502, column: 8)
!8256 = !DILocation(line: 4502, column: 14, scope: !8255)
!8257 = !DILocation(line: 4502, column: 8, scope: !8223)
!8258 = !DILocation(line: 4503, column: 11, scope: !8255)
!8259 = !DILocation(line: 4503, column: 5, scope: !8255)
!8260 = !DILocation(line: 4504, column: 8, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 4504, column: 8)
!8262 = !DILocation(line: 4504, column: 14, scope: !8261)
!8263 = !DILocation(line: 4504, column: 8, scope: !8223)
!8264 = !DILocation(line: 4505, column: 11, scope: !8261)
!8265 = !DILocation(line: 4505, column: 5, scope: !8261)
!8266 = !DILocation(line: 4506, column: 4, scope: !8223)
!8267 = !DILocation(line: 4508, column: 26, scope: !8215)
!8268 = !DILocation(line: 4508, column: 9, scope: !8215)
!8269 = !DILocation(line: 4508, column: 7, scope: !8215)
!8270 = !DILocation(line: 4509, column: 3, scope: !8215)
!8271 = !DILocation(line: 4510, column: 25, scope: !8272)
!8272 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4510, column: 7)
!8273 = !DILocation(line: 4510, column: 51, scope: !8272)
!8274 = !DILocation(line: 4510, column: 7, scope: !8272)
!8275 = !DILocation(line: 4510, column: 56, scope: !8272)
!8276 = !DILocation(line: 4510, column: 7, scope: !8215)
!8277 = !DILocation(line: 4511, column: 4, scope: !8272)
!8278 = !DILocation(line: 4512, column: 25, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4512, column: 7)
!8280 = !DILocation(line: 4512, column: 52, scope: !8279)
!8281 = !DILocation(line: 4512, column: 7, scope: !8279)
!8282 = !DILocation(line: 4512, column: 59, scope: !8279)
!8283 = !DILocation(line: 4512, column: 7, scope: !8215)
!8284 = !DILocation(line: 4513, column: 4, scope: !8279)
!8285 = !DILocation(line: 4514, column: 2, scope: !8215)
!8286 = !DILocation(line: 4516, column: 6, scope: !8287)
!8287 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4516, column: 6)
!8288 = !DILocation(line: 4516, column: 13, scope: !8287)
!8289 = !DILocation(line: 4516, column: 21, scope: !8287)
!8290 = !DILocation(line: 4516, column: 29, scope: !8287)
!8291 = !DILocation(line: 4516, column: 6, scope: !7928)
!8292 = !DILocalVariable(name: "speed", scope: !8293, file: !3, line: 4517, type: !571)
!8293 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 4516, column: 34)
!8294 = !DILocation(line: 4517, column: 7, scope: !8293)
!8295 = !DILocation(line: 4519, column: 11, scope: !8293)
!8296 = !DILocation(line: 4519, column: 18, scope: !8293)
!8297 = !DILocation(line: 4519, column: 26, scope: !8293)
!8298 = !DILocation(line: 4519, column: 3, scope: !8293)
!8299 = !DILocation(line: 4519, column: 36, scope: !8293)
!8300 = !DILocation(line: 4523, column: 12, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 4519, column: 36)
!8302 = !DILocation(line: 4523, column: 19, scope: !8301)
!8303 = !DILocation(line: 4523, column: 29, scope: !8301)
!8304 = !DILocation(line: 4524, column: 6, scope: !8301)
!8305 = !DILocation(line: 4524, column: 13, scope: !8301)
!8306 = !DILocation(line: 4524, column: 21, scope: !8301)
!8307 = !DILocation(line: 4524, column: 29, scope: !8301)
!8308 = !DILocation(line: 4523, column: 34, scope: !8301)
!8309 = !DILocation(line: 4523, column: 10, scope: !8301)
!8310 = !DILocation(line: 4525, column: 8, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 4525, column: 8)
!8312 = !DILocation(line: 4525, column: 14, scope: !8311)
!8313 = !DILocation(line: 4525, column: 8, scope: !8301)
!8314 = !DILocation(line: 4526, column: 11, scope: !8311)
!8315 = !DILocation(line: 4526, column: 5, scope: !8311)
!8316 = !DILocation(line: 4527, column: 8, scope: !8317)
!8317 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 4527, column: 8)
!8318 = !DILocation(line: 4527, column: 14, scope: !8317)
!8319 = !DILocation(line: 4527, column: 8, scope: !8301)
!8320 = !DILocation(line: 4528, column: 11, scope: !8317)
!8321 = !DILocation(line: 4528, column: 5, scope: !8317)
!8322 = !DILocation(line: 4529, column: 4, scope: !8301)
!8323 = !DILocation(line: 4532, column: 12, scope: !8301)
!8324 = !DILocation(line: 4532, column: 19, scope: !8301)
!8325 = !DILocation(line: 4532, column: 29, scope: !8301)
!8326 = !DILocation(line: 4533, column: 6, scope: !8301)
!8327 = !DILocation(line: 4533, column: 13, scope: !8301)
!8328 = !DILocation(line: 4533, column: 21, scope: !8301)
!8329 = !DILocation(line: 4533, column: 29, scope: !8301)
!8330 = !DILocation(line: 4532, column: 34, scope: !8301)
!8331 = !DILocation(line: 4532, column: 10, scope: !8301)
!8332 = !DILocation(line: 4534, column: 8, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 4534, column: 8)
!8334 = !DILocation(line: 4534, column: 14, scope: !8333)
!8335 = !DILocation(line: 4534, column: 8, scope: !8301)
!8336 = !DILocation(line: 4535, column: 11, scope: !8333)
!8337 = !DILocation(line: 4535, column: 5, scope: !8333)
!8338 = !DILocation(line: 4536, column: 8, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8301, file: !3, line: 4536, column: 8)
!8340 = !DILocation(line: 4536, column: 14, scope: !8339)
!8341 = !DILocation(line: 4536, column: 8, scope: !8301)
!8342 = !DILocation(line: 4537, column: 11, scope: !8339)
!8343 = !DILocation(line: 4537, column: 5, scope: !8339)
!8344 = !DILocation(line: 4538, column: 4, scope: !8301)
!8345 = !DILocation(line: 4540, column: 26, scope: !8293)
!8346 = !DILocation(line: 4540, column: 9, scope: !8293)
!8347 = !DILocation(line: 4540, column: 7, scope: !8293)
!8348 = !DILocation(line: 4541, column: 3, scope: !8293)
!8349 = !DILocation(line: 4542, column: 25, scope: !8350)
!8350 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 4542, column: 7)
!8351 = !DILocation(line: 4542, column: 51, scope: !8350)
!8352 = !DILocation(line: 4542, column: 7, scope: !8350)
!8353 = !DILocation(line: 4542, column: 56, scope: !8350)
!8354 = !DILocation(line: 4542, column: 7, scope: !8293)
!8355 = !DILocation(line: 4543, column: 4, scope: !8350)
!8356 = !DILocation(line: 4544, column: 25, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8293, file: !3, line: 4544, column: 7)
!8358 = !DILocation(line: 4544, column: 52, scope: !8357)
!8359 = !DILocation(line: 4544, column: 7, scope: !8357)
!8360 = !DILocation(line: 4544, column: 59, scope: !8357)
!8361 = !DILocation(line: 4544, column: 7, scope: !8293)
!8362 = !DILocation(line: 4545, column: 4, scope: !8357)
!8363 = !DILocation(line: 4546, column: 2, scope: !8293)
!8364 = !DILocation(line: 4548, column: 25, scope: !7928)
!8365 = !DILocation(line: 4548, column: 8, scope: !7928)
!8366 = !DILocation(line: 4548, column: 6, scope: !7928)
!8367 = !DILocation(line: 4549, column: 2, scope: !7928)
!8368 = !DILocation(line: 4550, column: 24, scope: !8369)
!8369 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4550, column: 6)
!8370 = !DILocation(line: 4550, column: 50, scope: !8369)
!8371 = !DILocation(line: 4550, column: 6, scope: !8369)
!8372 = !DILocation(line: 4550, column: 55, scope: !8369)
!8373 = !DILocation(line: 4550, column: 6, scope: !7928)
!8374 = !DILocation(line: 4551, column: 3, scope: !8369)
!8375 = !DILocation(line: 4552, column: 2, scope: !7928)
!8376 = !DILocation(line: 4553, column: 24, scope: !8377)
!8377 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4553, column: 6)
!8378 = !DILocation(line: 4553, column: 50, scope: !8377)
!8379 = !DILocation(line: 4553, column: 6, scope: !8377)
!8380 = !DILocation(line: 4553, column: 55, scope: !8377)
!8381 = !DILocation(line: 4553, column: 6, scope: !7928)
!8382 = !DILocation(line: 4554, column: 3, scope: !8377)
!8383 = !DILocation(line: 4556, column: 25, scope: !7928)
!8384 = !DILocation(line: 4556, column: 8, scope: !7928)
!8385 = !DILocation(line: 4556, column: 6, scope: !7928)
!8386 = !DILocation(line: 4557, column: 2, scope: !7928)
!8387 = !DILocation(line: 4558, column: 24, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4558, column: 6)
!8389 = !DILocation(line: 4558, column: 50, scope: !8388)
!8390 = !DILocation(line: 4558, column: 6, scope: !8388)
!8391 = !DILocation(line: 4558, column: 55, scope: !8388)
!8392 = !DILocation(line: 4558, column: 6, scope: !7928)
!8393 = !DILocation(line: 4559, column: 3, scope: !8388)
!8394 = !DILocation(line: 4560, column: 2, scope: !7928)
!8395 = !DILocation(line: 4561, column: 24, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4561, column: 6)
!8397 = !DILocation(line: 4561, column: 50, scope: !8396)
!8398 = !DILocation(line: 4561, column: 6, scope: !8396)
!8399 = !DILocation(line: 4561, column: 55, scope: !8396)
!8400 = !DILocation(line: 4561, column: 6, scope: !7928)
!8401 = !DILocation(line: 4562, column: 3, scope: !8396)
!8402 = !DILocation(line: 4564, column: 2, scope: !7928)
!8403 = !DILabel(scope: !7928, name: "err", file: !3, line: 4565)
!8404 = !DILocation(line: 4565, column: 1, scope: !7928)
!8405 = !DILocation(line: 4566, column: 2, scope: !7928)
!8406 = !DILocation(line: 4566, column: 2, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8408, file: !3, line: 4566, column: 2)
!8408 = distinct !DILexicalBlock(scope: !8409, file: !3, line: 4566, column: 2)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 4566, column: 2)
!8410 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4566, column: 2)
!8411 = !DILocation(line: 4566, column: 2, scope: !8408)
!8412 = !DILocation(line: 4566, column: 2, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4566, column: 2)
!8414 = !DILocation(line: 4566, column: 2, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8413, file: !3, line: 4566, column: 2)
!8416 = !DILocation(line: 4566, column: 2, scope: !8417)
!8417 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 4566, column: 2)
!8418 = !DILocation(line: 4566, column: 2, scope: !8410)
!8419 = !DILocation(line: 4567, column: 2, scope: !7928)
!8420 = !DILocation(line: 4568, column: 1, scope: !7928)
!8421 = distinct !DISubprogram(name: "stv0903_set_tspath", scope: !3, file: !3, line: 4570, type: !4652, scopeLine: 4571, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!8422 = !DILocalVariable(name: "state", arg: 1, scope: !8421, file: !3, line: 4570, type: !4654)
!8423 = !DILocation(line: 4570, column: 53, scope: !8421)
!8424 = !DILocalVariable(name: "reg", scope: !8421, file: !3, line: 4572, type: !571)
!8425 = !DILocation(line: 4572, column: 6, scope: !8421)
!8426 = !DILocation(line: 4574, column: 6, scope: !8427)
!8427 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4574, column: 6)
!8428 = !DILocation(line: 4574, column: 13, scope: !8427)
!8429 = !DILocation(line: 4574, column: 23, scope: !8427)
!8430 = !DILocation(line: 4574, column: 31, scope: !8427)
!8431 = !DILocation(line: 4574, column: 6, scope: !8421)
!8432 = !DILocation(line: 4575, column: 11, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 4574, column: 40)
!8434 = !DILocation(line: 4575, column: 18, scope: !8433)
!8435 = !DILocation(line: 4575, column: 26, scope: !8433)
!8436 = !DILocation(line: 4575, column: 3, scope: !8433)
!8437 = !DILocation(line: 4578, column: 22, scope: !8438)
!8438 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 4575, column: 36)
!8439 = !DILocation(line: 4578, column: 4, scope: !8438)
!8440 = !DILocation(line: 4579, column: 4, scope: !8438)
!8441 = !DILocation(line: 4584, column: 22, scope: !8438)
!8442 = !DILocation(line: 4584, column: 4, scope: !8438)
!8443 = !DILocation(line: 4585, column: 4, scope: !8438)
!8444 = !DILocation(line: 4587, column: 2, scope: !8433)
!8445 = !DILocation(line: 4588, column: 11, scope: !8446)
!8446 = distinct !DILexicalBlock(scope: !8427, file: !3, line: 4587, column: 9)
!8447 = !DILocation(line: 4588, column: 18, scope: !8446)
!8448 = !DILocation(line: 4588, column: 26, scope: !8446)
!8449 = !DILocation(line: 4588, column: 3, scope: !8446)
!8450 = !DILocation(line: 4591, column: 22, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 4588, column: 36)
!8452 = !DILocation(line: 4591, column: 4, scope: !8451)
!8453 = !DILocation(line: 4592, column: 4, scope: !8451)
!8454 = !DILocation(line: 4597, column: 22, scope: !8451)
!8455 = !DILocation(line: 4597, column: 4, scope: !8451)
!8456 = !DILocation(line: 4598, column: 4, scope: !8451)
!8457 = !DILocation(line: 4602, column: 10, scope: !8421)
!8458 = !DILocation(line: 4602, column: 17, scope: !8421)
!8459 = !DILocation(line: 4602, column: 25, scope: !8421)
!8460 = !DILocation(line: 4602, column: 2, scope: !8421)
!8461 = !DILocation(line: 4604, column: 26, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4602, column: 35)
!8463 = !DILocation(line: 4604, column: 9, scope: !8462)
!8464 = !DILocation(line: 4604, column: 7, scope: !8462)
!8465 = !DILocation(line: 4605, column: 3, scope: !8462)
!8466 = !DILocation(line: 4606, column: 3, scope: !8462)
!8467 = !DILocation(line: 4607, column: 25, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4607, column: 7)
!8469 = !DILocation(line: 4607, column: 51, scope: !8468)
!8470 = !DILocation(line: 4607, column: 7, scope: !8468)
!8471 = !DILocation(line: 4607, column: 56, scope: !8468)
!8472 = !DILocation(line: 4607, column: 7, scope: !8462)
!8473 = !DILocation(line: 4608, column: 4, scope: !8468)
!8474 = !DILocation(line: 4609, column: 3, scope: !8462)
!8475 = !DILocation(line: 4612, column: 26, scope: !8462)
!8476 = !DILocation(line: 4612, column: 9, scope: !8462)
!8477 = !DILocation(line: 4612, column: 7, scope: !8462)
!8478 = !DILocation(line: 4613, column: 3, scope: !8462)
!8479 = !DILocation(line: 4614, column: 3, scope: !8462)
!8480 = !DILocation(line: 4615, column: 25, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4615, column: 7)
!8482 = !DILocation(line: 4615, column: 51, scope: !8481)
!8483 = !DILocation(line: 4615, column: 7, scope: !8481)
!8484 = !DILocation(line: 4615, column: 56, scope: !8481)
!8485 = !DILocation(line: 4615, column: 7, scope: !8462)
!8486 = !DILocation(line: 4616, column: 4, scope: !8481)
!8487 = !DILocation(line: 4617, column: 3, scope: !8462)
!8488 = !DILocation(line: 4620, column: 26, scope: !8462)
!8489 = !DILocation(line: 4620, column: 9, scope: !8462)
!8490 = !DILocation(line: 4620, column: 7, scope: !8462)
!8491 = !DILocation(line: 4621, column: 3, scope: !8462)
!8492 = !DILocation(line: 4622, column: 3, scope: !8462)
!8493 = !DILocation(line: 4623, column: 25, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4623, column: 7)
!8495 = !DILocation(line: 4623, column: 51, scope: !8494)
!8496 = !DILocation(line: 4623, column: 7, scope: !8494)
!8497 = !DILocation(line: 4623, column: 56, scope: !8494)
!8498 = !DILocation(line: 4623, column: 7, scope: !8462)
!8499 = !DILocation(line: 4624, column: 4, scope: !8494)
!8500 = !DILocation(line: 4625, column: 3, scope: !8462)
!8501 = !DILocation(line: 4628, column: 26, scope: !8462)
!8502 = !DILocation(line: 4628, column: 9, scope: !8462)
!8503 = !DILocation(line: 4628, column: 7, scope: !8462)
!8504 = !DILocation(line: 4629, column: 3, scope: !8462)
!8505 = !DILocation(line: 4630, column: 3, scope: !8462)
!8506 = !DILocation(line: 4631, column: 25, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8462, file: !3, line: 4631, column: 7)
!8508 = !DILocation(line: 4631, column: 51, scope: !8507)
!8509 = !DILocation(line: 4631, column: 7, scope: !8507)
!8510 = !DILocation(line: 4631, column: 56, scope: !8507)
!8511 = !DILocation(line: 4631, column: 7, scope: !8462)
!8512 = !DILocation(line: 4632, column: 4, scope: !8507)
!8513 = !DILocation(line: 4633, column: 3, scope: !8462)
!8514 = !DILocation(line: 4636, column: 3, scope: !8462)
!8515 = !DILocation(line: 4639, column: 6, scope: !8516)
!8516 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4639, column: 6)
!8517 = !DILocation(line: 4639, column: 13, scope: !8516)
!8518 = !DILocation(line: 4639, column: 21, scope: !8516)
!8519 = !DILocation(line: 4639, column: 29, scope: !8516)
!8520 = !DILocation(line: 4639, column: 6, scope: !8421)
!8521 = !DILocalVariable(name: "speed", scope: !8522, file: !3, line: 4640, type: !571)
!8522 = distinct !DILexicalBlock(scope: !8516, file: !3, line: 4639, column: 34)
!8523 = !DILocation(line: 4640, column: 7, scope: !8522)
!8524 = !DILocation(line: 4642, column: 11, scope: !8522)
!8525 = !DILocation(line: 4642, column: 18, scope: !8522)
!8526 = !DILocation(line: 4642, column: 26, scope: !8522)
!8527 = !DILocation(line: 4642, column: 3, scope: !8522)
!8528 = !DILocation(line: 4642, column: 36, scope: !8522)
!8529 = !DILocation(line: 4646, column: 12, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 4642, column: 36)
!8531 = !DILocation(line: 4646, column: 19, scope: !8530)
!8532 = !DILocation(line: 4646, column: 29, scope: !8530)
!8533 = !DILocation(line: 4647, column: 6, scope: !8530)
!8534 = !DILocation(line: 4647, column: 13, scope: !8530)
!8535 = !DILocation(line: 4647, column: 21, scope: !8530)
!8536 = !DILocation(line: 4647, column: 29, scope: !8530)
!8537 = !DILocation(line: 4646, column: 34, scope: !8530)
!8538 = !DILocation(line: 4646, column: 10, scope: !8530)
!8539 = !DILocation(line: 4648, column: 8, scope: !8540)
!8540 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4648, column: 8)
!8541 = !DILocation(line: 4648, column: 14, scope: !8540)
!8542 = !DILocation(line: 4648, column: 8, scope: !8530)
!8543 = !DILocation(line: 4649, column: 11, scope: !8540)
!8544 = !DILocation(line: 4649, column: 5, scope: !8540)
!8545 = !DILocation(line: 4650, column: 8, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4650, column: 8)
!8547 = !DILocation(line: 4650, column: 14, scope: !8546)
!8548 = !DILocation(line: 4650, column: 8, scope: !8530)
!8549 = !DILocation(line: 4651, column: 11, scope: !8546)
!8550 = !DILocation(line: 4651, column: 5, scope: !8546)
!8551 = !DILocation(line: 4652, column: 4, scope: !8530)
!8552 = !DILocation(line: 4655, column: 12, scope: !8530)
!8553 = !DILocation(line: 4655, column: 19, scope: !8530)
!8554 = !DILocation(line: 4655, column: 29, scope: !8530)
!8555 = !DILocation(line: 4656, column: 6, scope: !8530)
!8556 = !DILocation(line: 4656, column: 13, scope: !8530)
!8557 = !DILocation(line: 4656, column: 21, scope: !8530)
!8558 = !DILocation(line: 4656, column: 29, scope: !8530)
!8559 = !DILocation(line: 4655, column: 34, scope: !8530)
!8560 = !DILocation(line: 4655, column: 10, scope: !8530)
!8561 = !DILocation(line: 4657, column: 8, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4657, column: 8)
!8563 = !DILocation(line: 4657, column: 14, scope: !8562)
!8564 = !DILocation(line: 4657, column: 8, scope: !8530)
!8565 = !DILocation(line: 4658, column: 11, scope: !8562)
!8566 = !DILocation(line: 4658, column: 5, scope: !8562)
!8567 = !DILocation(line: 4659, column: 8, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4659, column: 8)
!8569 = !DILocation(line: 4659, column: 14, scope: !8568)
!8570 = !DILocation(line: 4659, column: 8, scope: !8530)
!8571 = !DILocation(line: 4660, column: 11, scope: !8568)
!8572 = !DILocation(line: 4660, column: 5, scope: !8568)
!8573 = !DILocation(line: 4661, column: 4, scope: !8530)
!8574 = !DILocation(line: 4663, column: 26, scope: !8522)
!8575 = !DILocation(line: 4663, column: 9, scope: !8522)
!8576 = !DILocation(line: 4663, column: 7, scope: !8522)
!8577 = !DILocation(line: 4664, column: 3, scope: !8522)
!8578 = !DILocation(line: 4665, column: 25, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 4665, column: 7)
!8580 = !DILocation(line: 4665, column: 51, scope: !8579)
!8581 = !DILocation(line: 4665, column: 7, scope: !8579)
!8582 = !DILocation(line: 4665, column: 56, scope: !8579)
!8583 = !DILocation(line: 4665, column: 7, scope: !8522)
!8584 = !DILocation(line: 4666, column: 4, scope: !8579)
!8585 = !DILocation(line: 4667, column: 25, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 4667, column: 7)
!8587 = !DILocation(line: 4667, column: 52, scope: !8586)
!8588 = !DILocation(line: 4667, column: 7, scope: !8586)
!8589 = !DILocation(line: 4667, column: 59, scope: !8586)
!8590 = !DILocation(line: 4667, column: 7, scope: !8522)
!8591 = !DILocation(line: 4668, column: 4, scope: !8586)
!8592 = !DILocation(line: 4669, column: 2, scope: !8522)
!8593 = !DILocation(line: 4671, column: 25, scope: !8421)
!8594 = !DILocation(line: 4671, column: 8, scope: !8421)
!8595 = !DILocation(line: 4671, column: 6, scope: !8421)
!8596 = !DILocation(line: 4672, column: 2, scope: !8421)
!8597 = !DILocation(line: 4673, column: 24, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4673, column: 6)
!8599 = !DILocation(line: 4673, column: 50, scope: !8598)
!8600 = !DILocation(line: 4673, column: 6, scope: !8598)
!8601 = !DILocation(line: 4673, column: 55, scope: !8598)
!8602 = !DILocation(line: 4673, column: 6, scope: !8421)
!8603 = !DILocation(line: 4674, column: 3, scope: !8598)
!8604 = !DILocation(line: 4675, column: 2, scope: !8421)
!8605 = !DILocation(line: 4676, column: 24, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4676, column: 6)
!8607 = !DILocation(line: 4676, column: 50, scope: !8606)
!8608 = !DILocation(line: 4676, column: 6, scope: !8606)
!8609 = !DILocation(line: 4676, column: 55, scope: !8606)
!8610 = !DILocation(line: 4676, column: 6, scope: !8421)
!8611 = !DILocation(line: 4677, column: 3, scope: !8606)
!8612 = !DILocation(line: 4679, column: 2, scope: !8421)
!8613 = !DILabel(scope: !8421, name: "err", file: !3, line: 4680)
!8614 = !DILocation(line: 4680, column: 1, scope: !8421)
!8615 = !DILocation(line: 4681, column: 2, scope: !8421)
!8616 = !DILocation(line: 4681, column: 2, scope: !8617)
!8617 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 4681, column: 2)
!8618 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 4681, column: 2)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 4681, column: 2)
!8620 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4681, column: 2)
!8621 = !DILocation(line: 4681, column: 2, scope: !8618)
!8622 = !DILocation(line: 4681, column: 2, scope: !8623)
!8623 = distinct !DILexicalBlock(scope: !8617, file: !3, line: 4681, column: 2)
!8624 = !DILocation(line: 4681, column: 2, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 4681, column: 2)
!8626 = !DILocation(line: 4681, column: 2, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 4681, column: 2)
!8628 = !DILocation(line: 4681, column: 2, scope: !8620)
!8629 = !DILocation(line: 4682, column: 2, scope: !8421)
!8630 = !DILocation(line: 4683, column: 1, scope: !8421)
!8631 = distinct !DISubprogram(name: "stv090x_write_regs", scope: !3, file: !3, line: 712, type: !8632, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!8632 = !DISubroutineType(types: !8633)
!8633 = !{!439, !4654, !7, !4424, !571}
!8634 = !DILocalVariable(name: "state", arg: 1, scope: !8631, file: !3, line: 712, type: !4654)
!8635 = !DILocation(line: 712, column: 53, scope: !8631)
!8636 = !DILocalVariable(name: "reg", arg: 2, scope: !8631, file: !3, line: 712, type: !7)
!8637 = !DILocation(line: 712, column: 73, scope: !8631)
!8638 = !DILocalVariable(name: "data", arg: 3, scope: !8631, file: !3, line: 712, type: !4424)
!8639 = !DILocation(line: 712, column: 82, scope: !8631)
!8640 = !DILocalVariable(name: "count", arg: 4, scope: !8631, file: !3, line: 712, type: !571)
!8641 = !DILocation(line: 712, column: 92, scope: !8631)
!8642 = !DILocalVariable(name: "config", scope: !8631, file: !3, line: 714, type: !5717)
!8643 = !DILocation(line: 714, column: 31, scope: !8631)
!8644 = !DILocation(line: 714, column: 40, scope: !8631)
!8645 = !DILocation(line: 714, column: 47, scope: !8631)
!8646 = !DILocalVariable(name: "ret", scope: !8631, file: !3, line: 715, type: !439)
!8647 = !DILocation(line: 715, column: 6, scope: !8631)
!8648 = !DILocalVariable(name: "buf", scope: !8631, file: !3, line: 716, type: !8649)
!8649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !492, size: 512, elements: !687)
!8650 = !DILocation(line: 716, column: 5, scope: !8631)
!8651 = !DILocalVariable(name: "i2c_msg", scope: !8631, file: !3, line: 717, type: !4473)
!8652 = !DILocation(line: 717, column: 17, scope: !8631)
!8653 = !DILocation(line: 717, column: 27, scope: !8631)
!8654 = !DILocation(line: 717, column: 37, scope: !8631)
!8655 = !DILocation(line: 717, column: 45, scope: !8631)
!8656 = !DILocation(line: 717, column: 89, scope: !8631)
!8657 = !DILocation(line: 717, column: 87, scope: !8631)
!8658 = !DILocation(line: 717, column: 85, scope: !8631)
!8659 = !DILocation(line: 717, column: 73, scope: !8631)
!8660 = !DILocation(line: 719, column: 10, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 719, column: 6)
!8662 = !DILocation(line: 719, column: 8, scope: !8661)
!8663 = !DILocation(line: 719, column: 6, scope: !8661)
!8664 = !DILocation(line: 719, column: 16, scope: !8661)
!8665 = !DILocation(line: 719, column: 6, scope: !8631)
!8666 = !DILocation(line: 722, column: 26, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8661, file: !3, line: 719, column: 31)
!8668 = !DILocation(line: 722, column: 31, scope: !8667)
!8669 = !DILocation(line: 720, column: 3, scope: !8667)
!8670 = !DILocation(line: 723, column: 3, scope: !8667)
!8671 = !DILocation(line: 726, column: 11, scope: !8631)
!8672 = !DILocation(line: 726, column: 15, scope: !8631)
!8673 = !DILocation(line: 726, column: 2, scope: !8631)
!8674 = !DILocation(line: 726, column: 9, scope: !8631)
!8675 = !DILocation(line: 727, column: 11, scope: !8631)
!8676 = !DILocation(line: 727, column: 15, scope: !8631)
!8677 = !DILocation(line: 727, column: 2, scope: !8631)
!8678 = !DILocation(line: 727, column: 9, scope: !8631)
!8679 = !DILocation(line: 728, column: 10, scope: !8631)
!8680 = !DILocation(line: 728, column: 18, scope: !8631)
!8681 = !DILocation(line: 728, column: 24, scope: !8631)
!8682 = !DILocation(line: 728, column: 2, scope: !8631)
!8683 = !DILocation(line: 730, column: 2, scope: !8631)
!8684 = !DILocation(line: 730, column: 2, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8686, file: !3, line: 730, column: 2)
!8686 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 730, column: 2)
!8687 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 730, column: 2)
!8688 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 730, column: 2)
!8689 = !DILocation(line: 730, column: 2, scope: !8686)
!8690 = !DILocation(line: 730, column: 2, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 730, column: 2)
!8692 = !DILocation(line: 730, column: 2, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8691, file: !3, line: 730, column: 2)
!8694 = !DILocation(line: 730, column: 2, scope: !8695)
!8695 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 730, column: 2)
!8696 = !DILocation(line: 730, column: 2, scope: !8688)
!8697 = !DILocation(line: 733, column: 21, scope: !8631)
!8698 = !DILocation(line: 733, column: 28, scope: !8631)
!8699 = !DILocation(line: 733, column: 8, scope: !8631)
!8700 = !DILocation(line: 733, column: 6, scope: !8631)
!8701 = !DILocation(line: 734, column: 6, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 734, column: 6)
!8703 = !DILocation(line: 734, column: 10, scope: !8702)
!8704 = !DILocation(line: 734, column: 6, scope: !8631)
!8705 = !DILocation(line: 735, column: 7, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 735, column: 7)
!8707 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 734, column: 16)
!8708 = !DILocation(line: 735, column: 11, scope: !8706)
!8709 = !DILocation(line: 735, column: 7, scope: !8707)
!8710 = !DILocation(line: 736, column: 4, scope: !8706)
!8711 = !DILocation(line: 736, column: 4, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8713, file: !3, line: 736, column: 4)
!8713 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 736, column: 4)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 736, column: 4)
!8715 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 736, column: 4)
!8716 = !DILocation(line: 736, column: 4, scope: !8713)
!8717 = !DILocation(line: 736, column: 4, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8712, file: !3, line: 736, column: 4)
!8719 = !DILocation(line: 736, column: 4, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 736, column: 4)
!8721 = !DILocation(line: 736, column: 4, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8720, file: !3, line: 736, column: 4)
!8723 = !DILocation(line: 736, column: 4, scope: !8715)
!8724 = !DILocation(line: 738, column: 10, scope: !8707)
!8725 = !DILocation(line: 738, column: 14, scope: !8707)
!8726 = !DILocation(line: 738, column: 20, scope: !8707)
!8727 = !DILocation(line: 738, column: 3, scope: !8707)
!8728 = !DILocation(line: 741, column: 2, scope: !8631)
!8729 = !DILocation(line: 742, column: 1, scope: !8631)
!8730 = distinct !DISubprogram(name: "stv090x_stop_modcod", scope: !3, file: !3, line: 1073, type: !4652, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!8731 = !DILocalVariable(name: "state", arg: 1, scope: !8730, file: !3, line: 1073, type: !4654)
!8732 = !DILocation(line: 1073, column: 54, scope: !8730)
!8733 = !DILocation(line: 1075, column: 6, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1075, column: 6)
!8735 = !DILocation(line: 1075, column: 51, scope: !8734)
!8736 = !DILocation(line: 1075, column: 6, scope: !8730)
!8737 = !DILocation(line: 1076, column: 3, scope: !8734)
!8738 = !DILocation(line: 1077, column: 6, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1077, column: 6)
!8740 = !DILocation(line: 1077, column: 51, scope: !8739)
!8741 = !DILocation(line: 1077, column: 6, scope: !8730)
!8742 = !DILocation(line: 1078, column: 3, scope: !8739)
!8743 = !DILocation(line: 1079, column: 6, scope: !8744)
!8744 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1079, column: 6)
!8745 = !DILocation(line: 1079, column: 51, scope: !8744)
!8746 = !DILocation(line: 1079, column: 6, scope: !8730)
!8747 = !DILocation(line: 1080, column: 3, scope: !8744)
!8748 = !DILocation(line: 1081, column: 6, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1081, column: 6)
!8750 = !DILocation(line: 1081, column: 51, scope: !8749)
!8751 = !DILocation(line: 1081, column: 6, scope: !8730)
!8752 = !DILocation(line: 1082, column: 3, scope: !8749)
!8753 = !DILocation(line: 1083, column: 6, scope: !8754)
!8754 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1083, column: 6)
!8755 = !DILocation(line: 1083, column: 51, scope: !8754)
!8756 = !DILocation(line: 1083, column: 6, scope: !8730)
!8757 = !DILocation(line: 1084, column: 3, scope: !8754)
!8758 = !DILocation(line: 1085, column: 6, scope: !8759)
!8759 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1085, column: 6)
!8760 = !DILocation(line: 1085, column: 51, scope: !8759)
!8761 = !DILocation(line: 1085, column: 6, scope: !8730)
!8762 = !DILocation(line: 1086, column: 3, scope: !8759)
!8763 = !DILocation(line: 1087, column: 6, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1087, column: 6)
!8765 = !DILocation(line: 1087, column: 51, scope: !8764)
!8766 = !DILocation(line: 1087, column: 6, scope: !8730)
!8767 = !DILocation(line: 1088, column: 3, scope: !8764)
!8768 = !DILocation(line: 1089, column: 6, scope: !8769)
!8769 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1089, column: 6)
!8770 = !DILocation(line: 1089, column: 51, scope: !8769)
!8771 = !DILocation(line: 1089, column: 6, scope: !8730)
!8772 = !DILocation(line: 1090, column: 3, scope: !8769)
!8773 = !DILocation(line: 1091, column: 6, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1091, column: 6)
!8775 = !DILocation(line: 1091, column: 51, scope: !8774)
!8776 = !DILocation(line: 1091, column: 6, scope: !8730)
!8777 = !DILocation(line: 1092, column: 3, scope: !8774)
!8778 = !DILocation(line: 1093, column: 6, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1093, column: 6)
!8780 = !DILocation(line: 1093, column: 51, scope: !8779)
!8781 = !DILocation(line: 1093, column: 6, scope: !8730)
!8782 = !DILocation(line: 1094, column: 3, scope: !8779)
!8783 = !DILocation(line: 1095, column: 6, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1095, column: 6)
!8785 = !DILocation(line: 1095, column: 51, scope: !8784)
!8786 = !DILocation(line: 1095, column: 6, scope: !8730)
!8787 = !DILocation(line: 1096, column: 3, scope: !8784)
!8788 = !DILocation(line: 1097, column: 6, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1097, column: 6)
!8790 = !DILocation(line: 1097, column: 51, scope: !8789)
!8791 = !DILocation(line: 1097, column: 6, scope: !8730)
!8792 = !DILocation(line: 1098, column: 3, scope: !8789)
!8793 = !DILocation(line: 1099, column: 6, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1099, column: 6)
!8795 = !DILocation(line: 1099, column: 51, scope: !8794)
!8796 = !DILocation(line: 1099, column: 6, scope: !8730)
!8797 = !DILocation(line: 1100, column: 3, scope: !8794)
!8798 = !DILocation(line: 1101, column: 6, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1101, column: 6)
!8800 = !DILocation(line: 1101, column: 51, scope: !8799)
!8801 = !DILocation(line: 1101, column: 6, scope: !8730)
!8802 = !DILocation(line: 1102, column: 3, scope: !8799)
!8803 = !DILocation(line: 1103, column: 6, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1103, column: 6)
!8805 = !DILocation(line: 1103, column: 51, scope: !8804)
!8806 = !DILocation(line: 1103, column: 6, scope: !8730)
!8807 = !DILocation(line: 1104, column: 3, scope: !8804)
!8808 = !DILocation(line: 1105, column: 6, scope: !8809)
!8809 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1105, column: 6)
!8810 = !DILocation(line: 1105, column: 51, scope: !8809)
!8811 = !DILocation(line: 1105, column: 6, scope: !8730)
!8812 = !DILocation(line: 1106, column: 3, scope: !8809)
!8813 = !DILocation(line: 1107, column: 2, scope: !8730)
!8814 = !DILabel(scope: !8730, name: "err", file: !3, line: 1108)
!8815 = !DILocation(line: 1108, column: 1, scope: !8730)
!8816 = !DILocation(line: 1109, column: 2, scope: !8730)
!8817 = !DILocation(line: 1109, column: 2, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 1109, column: 2)
!8819 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 1109, column: 2)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 1109, column: 2)
!8821 = distinct !DILexicalBlock(scope: !8730, file: !3, line: 1109, column: 2)
!8822 = !DILocation(line: 1109, column: 2, scope: !8819)
!8823 = !DILocation(line: 1109, column: 2, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1109, column: 2)
!8825 = !DILocation(line: 1109, column: 2, scope: !8826)
!8826 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1109, column: 2)
!8827 = !DILocation(line: 1109, column: 2, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 1109, column: 2)
!8829 = !DILocation(line: 1109, column: 2, scope: !8821)
!8830 = !DILocation(line: 1110, column: 2, scope: !8730)
!8831 = !DILocation(line: 1111, column: 1, scope: !8730)
!8832 = distinct !DISubprogram(name: "stv090x_activate_modcod_single", scope: !3, file: !3, line: 1154, type: !4652, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!8833 = !DILocalVariable(name: "state", arg: 1, scope: !8832, file: !3, line: 1154, type: !4654)
!8834 = !DILocation(line: 1154, column: 65, scope: !8832)
!8835 = !DILocation(line: 1157, column: 6, scope: !8836)
!8836 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1157, column: 6)
!8837 = !DILocation(line: 1157, column: 51, scope: !8836)
!8838 = !DILocation(line: 1157, column: 6, scope: !8832)
!8839 = !DILocation(line: 1158, column: 3, scope: !8836)
!8840 = !DILocation(line: 1159, column: 6, scope: !8841)
!8841 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1159, column: 6)
!8842 = !DILocation(line: 1159, column: 51, scope: !8841)
!8843 = !DILocation(line: 1159, column: 6, scope: !8832)
!8844 = !DILocation(line: 1160, column: 3, scope: !8841)
!8845 = !DILocation(line: 1161, column: 6, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1161, column: 6)
!8847 = !DILocation(line: 1161, column: 51, scope: !8846)
!8848 = !DILocation(line: 1161, column: 6, scope: !8832)
!8849 = !DILocation(line: 1162, column: 3, scope: !8846)
!8850 = !DILocation(line: 1163, column: 6, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1163, column: 6)
!8852 = !DILocation(line: 1163, column: 51, scope: !8851)
!8853 = !DILocation(line: 1163, column: 6, scope: !8832)
!8854 = !DILocation(line: 1164, column: 3, scope: !8851)
!8855 = !DILocation(line: 1165, column: 6, scope: !8856)
!8856 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1165, column: 6)
!8857 = !DILocation(line: 1165, column: 51, scope: !8856)
!8858 = !DILocation(line: 1165, column: 6, scope: !8832)
!8859 = !DILocation(line: 1166, column: 3, scope: !8856)
!8860 = !DILocation(line: 1167, column: 6, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1167, column: 6)
!8862 = !DILocation(line: 1167, column: 51, scope: !8861)
!8863 = !DILocation(line: 1167, column: 6, scope: !8832)
!8864 = !DILocation(line: 1168, column: 3, scope: !8861)
!8865 = !DILocation(line: 1169, column: 6, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1169, column: 6)
!8867 = !DILocation(line: 1169, column: 51, scope: !8866)
!8868 = !DILocation(line: 1169, column: 6, scope: !8832)
!8869 = !DILocation(line: 1170, column: 3, scope: !8866)
!8870 = !DILocation(line: 1171, column: 6, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1171, column: 6)
!8872 = !DILocation(line: 1171, column: 51, scope: !8871)
!8873 = !DILocation(line: 1171, column: 6, scope: !8832)
!8874 = !DILocation(line: 1172, column: 3, scope: !8871)
!8875 = !DILocation(line: 1173, column: 6, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1173, column: 6)
!8877 = !DILocation(line: 1173, column: 51, scope: !8876)
!8878 = !DILocation(line: 1173, column: 6, scope: !8832)
!8879 = !DILocation(line: 1174, column: 3, scope: !8876)
!8880 = !DILocation(line: 1175, column: 6, scope: !8881)
!8881 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1175, column: 6)
!8882 = !DILocation(line: 1175, column: 51, scope: !8881)
!8883 = !DILocation(line: 1175, column: 6, scope: !8832)
!8884 = !DILocation(line: 1176, column: 3, scope: !8881)
!8885 = !DILocation(line: 1177, column: 6, scope: !8886)
!8886 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1177, column: 6)
!8887 = !DILocation(line: 1177, column: 51, scope: !8886)
!8888 = !DILocation(line: 1177, column: 6, scope: !8832)
!8889 = !DILocation(line: 1178, column: 3, scope: !8886)
!8890 = !DILocation(line: 1179, column: 6, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1179, column: 6)
!8892 = !DILocation(line: 1179, column: 51, scope: !8891)
!8893 = !DILocation(line: 1179, column: 6, scope: !8832)
!8894 = !DILocation(line: 1180, column: 3, scope: !8891)
!8895 = !DILocation(line: 1181, column: 6, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1181, column: 6)
!8897 = !DILocation(line: 1181, column: 51, scope: !8896)
!8898 = !DILocation(line: 1181, column: 6, scope: !8832)
!8899 = !DILocation(line: 1182, column: 3, scope: !8896)
!8900 = !DILocation(line: 1183, column: 6, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1183, column: 6)
!8902 = !DILocation(line: 1183, column: 51, scope: !8901)
!8903 = !DILocation(line: 1183, column: 6, scope: !8832)
!8904 = !DILocation(line: 1184, column: 3, scope: !8901)
!8905 = !DILocation(line: 1185, column: 6, scope: !8906)
!8906 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1185, column: 6)
!8907 = !DILocation(line: 1185, column: 51, scope: !8906)
!8908 = !DILocation(line: 1185, column: 6, scope: !8832)
!8909 = !DILocation(line: 1186, column: 3, scope: !8906)
!8910 = !DILocation(line: 1187, column: 6, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1187, column: 6)
!8912 = !DILocation(line: 1187, column: 51, scope: !8911)
!8913 = !DILocation(line: 1187, column: 6, scope: !8832)
!8914 = !DILocation(line: 1188, column: 3, scope: !8911)
!8915 = !DILocation(line: 1190, column: 2, scope: !8832)
!8916 = !DILabel(scope: !8832, name: "err", file: !3, line: 1192)
!8917 = !DILocation(line: 1192, column: 1, scope: !8832)
!8918 = !DILocation(line: 1193, column: 2, scope: !8832)
!8919 = !DILocation(line: 1193, column: 2, scope: !8920)
!8920 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 1193, column: 2)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 1193, column: 2)
!8922 = distinct !DILexicalBlock(scope: !8923, file: !3, line: 1193, column: 2)
!8923 = distinct !DILexicalBlock(scope: !8832, file: !3, line: 1193, column: 2)
!8924 = !DILocation(line: 1193, column: 2, scope: !8921)
!8925 = !DILocation(line: 1193, column: 2, scope: !8926)
!8926 = distinct !DILexicalBlock(scope: !8920, file: !3, line: 1193, column: 2)
!8927 = !DILocation(line: 1193, column: 2, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8926, file: !3, line: 1193, column: 2)
!8929 = !DILocation(line: 1193, column: 2, scope: !8930)
!8930 = distinct !DILexicalBlock(scope: !8928, file: !3, line: 1193, column: 2)
!8931 = !DILocation(line: 1193, column: 2, scope: !8923)
!8932 = !DILocation(line: 1194, column: 2, scope: !8832)
!8933 = !DILocation(line: 1195, column: 1, scope: !8832)
!8934 = distinct !DISubprogram(name: "stv090x_table_lookup", scope: !3, file: !3, line: 3615, type: !8935, scopeLine: 3616, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!8935 = !DISubroutineType(types: !8936)
!8936 = !{!439, !8937, !439, !439}
!8937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!8938 = !DILocalVariable(name: "tab", arg: 1, scope: !8934, file: !3, line: 3615, type: !8937)
!8939 = !DILocation(line: 3615, column: 59, scope: !8934)
!8940 = !DILocalVariable(name: "max", arg: 2, scope: !8934, file: !3, line: 3615, type: !439)
!8941 = !DILocation(line: 3615, column: 68, scope: !8934)
!8942 = !DILocalVariable(name: "val", arg: 3, scope: !8934, file: !3, line: 3615, type: !439)
!8943 = !DILocation(line: 3615, column: 77, scope: !8934)
!8944 = !DILocalVariable(name: "res", scope: !8934, file: !3, line: 3617, type: !439)
!8945 = !DILocation(line: 3617, column: 6, scope: !8934)
!8946 = !DILocalVariable(name: "min", scope: !8934, file: !3, line: 3618, type: !439)
!8947 = !DILocation(line: 3618, column: 6, scope: !8934)
!8948 = !DILocalVariable(name: "med", scope: !8934, file: !3, line: 3618, type: !439)
!8949 = !DILocation(line: 3618, column: 15, scope: !8934)
!8950 = !DILocation(line: 3620, column: 7, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 3620, column: 6)
!8952 = !DILocation(line: 3620, column: 14, scope: !8951)
!8953 = !DILocation(line: 3620, column: 18, scope: !8951)
!8954 = !DILocation(line: 3620, column: 23, scope: !8951)
!8955 = !DILocation(line: 3620, column: 11, scope: !8951)
!8956 = !DILocation(line: 3620, column: 28, scope: !8951)
!8957 = !DILocation(line: 3620, column: 31, scope: !8951)
!8958 = !DILocation(line: 3620, column: 37, scope: !8951)
!8959 = !DILocation(line: 3620, column: 41, scope: !8951)
!8960 = !DILocation(line: 3620, column: 46, scope: !8951)
!8961 = !DILocation(line: 3620, column: 35, scope: !8951)
!8962 = !DILocation(line: 3620, column: 52, scope: !8951)
!8963 = !DILocation(line: 3621, column: 7, scope: !8951)
!8964 = !DILocation(line: 3621, column: 14, scope: !8951)
!8965 = !DILocation(line: 3621, column: 18, scope: !8951)
!8966 = !DILocation(line: 3621, column: 23, scope: !8951)
!8967 = !DILocation(line: 3621, column: 11, scope: !8951)
!8968 = !DILocation(line: 3621, column: 28, scope: !8951)
!8969 = !DILocation(line: 3621, column: 31, scope: !8951)
!8970 = !DILocation(line: 3621, column: 37, scope: !8951)
!8971 = !DILocation(line: 3621, column: 41, scope: !8951)
!8972 = !DILocation(line: 3621, column: 46, scope: !8951)
!8973 = !DILocation(line: 3621, column: 35, scope: !8951)
!8974 = !DILocation(line: 3620, column: 6, scope: !8934)
!8975 = !DILocation(line: 3622, column: 3, scope: !8976)
!8976 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 3621, column: 53)
!8977 = !DILocation(line: 3622, column: 11, scope: !8976)
!8978 = !DILocation(line: 3622, column: 17, scope: !8976)
!8979 = !DILocation(line: 3622, column: 15, scope: !8976)
!8980 = !DILocation(line: 3622, column: 22, scope: !8976)
!8981 = !DILocation(line: 3623, column: 11, scope: !8982)
!8982 = distinct !DILexicalBlock(scope: !8976, file: !3, line: 3622, column: 27)
!8983 = !DILocation(line: 3623, column: 17, scope: !8982)
!8984 = !DILocation(line: 3623, column: 15, scope: !8982)
!8985 = !DILocation(line: 3623, column: 22, scope: !8982)
!8986 = !DILocation(line: 3623, column: 8, scope: !8982)
!8987 = !DILocation(line: 3624, column: 9, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8982, file: !3, line: 3624, column: 8)
!8989 = !DILocation(line: 3624, column: 16, scope: !8988)
!8990 = !DILocation(line: 3624, column: 20, scope: !8988)
!8991 = !DILocation(line: 3624, column: 25, scope: !8988)
!8992 = !DILocation(line: 3624, column: 13, scope: !8988)
!8993 = !DILocation(line: 3624, column: 30, scope: !8988)
!8994 = !DILocation(line: 3624, column: 33, scope: !8988)
!8995 = !DILocation(line: 3624, column: 39, scope: !8988)
!8996 = !DILocation(line: 3624, column: 43, scope: !8988)
!8997 = !DILocation(line: 3624, column: 48, scope: !8988)
!8998 = !DILocation(line: 3624, column: 37, scope: !8988)
!8999 = !DILocation(line: 3624, column: 54, scope: !8988)
!9000 = !DILocation(line: 3625, column: 9, scope: !8988)
!9001 = !DILocation(line: 3625, column: 16, scope: !8988)
!9002 = !DILocation(line: 3625, column: 20, scope: !8988)
!9003 = !DILocation(line: 3625, column: 25, scope: !8988)
!9004 = !DILocation(line: 3625, column: 13, scope: !8988)
!9005 = !DILocation(line: 3625, column: 30, scope: !8988)
!9006 = !DILocation(line: 3625, column: 33, scope: !8988)
!9007 = !DILocation(line: 3625, column: 39, scope: !8988)
!9008 = !DILocation(line: 3625, column: 43, scope: !8988)
!9009 = !DILocation(line: 3625, column: 48, scope: !8988)
!9010 = !DILocation(line: 3625, column: 37, scope: !8988)
!9011 = !DILocation(line: 3624, column: 8, scope: !8982)
!9012 = !DILocation(line: 3626, column: 11, scope: !8988)
!9013 = !DILocation(line: 3626, column: 9, scope: !8988)
!9014 = !DILocation(line: 3626, column: 5, scope: !8988)
!9015 = !DILocation(line: 3628, column: 11, scope: !8988)
!9016 = !DILocation(line: 3628, column: 9, scope: !8988)
!9017 = distinct !{!9017, !8975, !9018}
!9018 = !DILocation(line: 3629, column: 3, scope: !8976)
!9019 = !DILocation(line: 3630, column: 11, scope: !8976)
!9020 = !DILocation(line: 3630, column: 17, scope: !8976)
!9021 = !DILocation(line: 3630, column: 21, scope: !8976)
!9022 = !DILocation(line: 3630, column: 26, scope: !8976)
!9023 = !DILocation(line: 3630, column: 15, scope: !8976)
!9024 = !DILocation(line: 3631, column: 11, scope: !8976)
!9025 = !DILocation(line: 3631, column: 15, scope: !8976)
!9026 = !DILocation(line: 3631, column: 20, scope: !8976)
!9027 = !DILocation(line: 3631, column: 27, scope: !8976)
!9028 = !DILocation(line: 3631, column: 31, scope: !8976)
!9029 = !DILocation(line: 3631, column: 36, scope: !8976)
!9030 = !DILocation(line: 3631, column: 25, scope: !8976)
!9031 = !DILocation(line: 3630, column: 32, scope: !8976)
!9032 = !DILocation(line: 3632, column: 11, scope: !8976)
!9033 = !DILocation(line: 3632, column: 15, scope: !8976)
!9034 = !DILocation(line: 3632, column: 20, scope: !8976)
!9035 = !DILocation(line: 3632, column: 27, scope: !8976)
!9036 = !DILocation(line: 3632, column: 31, scope: !8976)
!9037 = !DILocation(line: 3632, column: 36, scope: !8976)
!9038 = !DILocation(line: 3632, column: 25, scope: !8976)
!9039 = !DILocation(line: 3631, column: 42, scope: !8976)
!9040 = !DILocation(line: 3633, column: 4, scope: !8976)
!9041 = !DILocation(line: 3633, column: 8, scope: !8976)
!9042 = !DILocation(line: 3633, column: 13, scope: !8976)
!9043 = !DILocation(line: 3632, column: 43, scope: !8976)
!9044 = !DILocation(line: 3630, column: 7, scope: !8976)
!9045 = !DILocation(line: 3634, column: 2, scope: !8976)
!9046 = !DILocation(line: 3635, column: 7, scope: !9047)
!9047 = distinct !DILexicalBlock(scope: !9048, file: !3, line: 3635, column: 7)
!9048 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 3634, column: 9)
!9049 = !DILocation(line: 3635, column: 11, scope: !9047)
!9050 = !DILocation(line: 3635, column: 16, scope: !9047)
!9051 = !DILocation(line: 3635, column: 23, scope: !9047)
!9052 = !DILocation(line: 3635, column: 27, scope: !9047)
!9053 = !DILocation(line: 3635, column: 32, scope: !9047)
!9054 = !DILocation(line: 3635, column: 21, scope: !9047)
!9055 = !DILocation(line: 3635, column: 7, scope: !9048)
!9056 = !DILocation(line: 3636, column: 8, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !9058, file: !3, line: 3636, column: 8)
!9058 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 3635, column: 38)
!9059 = !DILocation(line: 3636, column: 14, scope: !9057)
!9060 = !DILocation(line: 3636, column: 18, scope: !9057)
!9061 = !DILocation(line: 3636, column: 23, scope: !9057)
!9062 = !DILocation(line: 3636, column: 12, scope: !9057)
!9063 = !DILocation(line: 3636, column: 8, scope: !9058)
!9064 = !DILocation(line: 3637, column: 11, scope: !9057)
!9065 = !DILocation(line: 3637, column: 15, scope: !9057)
!9066 = !DILocation(line: 3637, column: 20, scope: !9057)
!9067 = !DILocation(line: 3637, column: 9, scope: !9057)
!9068 = !DILocation(line: 3637, column: 5, scope: !9057)
!9069 = !DILocation(line: 3638, column: 13, scope: !9070)
!9070 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 3638, column: 13)
!9071 = !DILocation(line: 3638, column: 20, scope: !9070)
!9072 = !DILocation(line: 3638, column: 24, scope: !9070)
!9073 = !DILocation(line: 3638, column: 29, scope: !9070)
!9074 = !DILocation(line: 3638, column: 17, scope: !9070)
!9075 = !DILocation(line: 3638, column: 13, scope: !9057)
!9076 = !DILocation(line: 3639, column: 11, scope: !9070)
!9077 = !DILocation(line: 3639, column: 15, scope: !9070)
!9078 = !DILocation(line: 3639, column: 20, scope: !9070)
!9079 = !DILocation(line: 3639, column: 9, scope: !9070)
!9080 = !DILocation(line: 3639, column: 5, scope: !9070)
!9081 = !DILocation(line: 3640, column: 3, scope: !9058)
!9082 = !DILocation(line: 3641, column: 8, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 3641, column: 8)
!9084 = distinct !DILexicalBlock(scope: !9047, file: !3, line: 3640, column: 10)
!9085 = !DILocation(line: 3641, column: 15, scope: !9083)
!9086 = !DILocation(line: 3641, column: 19, scope: !9083)
!9087 = !DILocation(line: 3641, column: 24, scope: !9083)
!9088 = !DILocation(line: 3641, column: 12, scope: !9083)
!9089 = !DILocation(line: 3641, column: 8, scope: !9084)
!9090 = !DILocation(line: 3642, column: 11, scope: !9083)
!9091 = !DILocation(line: 3642, column: 15, scope: !9083)
!9092 = !DILocation(line: 3642, column: 20, scope: !9083)
!9093 = !DILocation(line: 3642, column: 9, scope: !9083)
!9094 = !DILocation(line: 3642, column: 5, scope: !9083)
!9095 = !DILocation(line: 3643, column: 13, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9083, file: !3, line: 3643, column: 13)
!9097 = !DILocation(line: 3643, column: 19, scope: !9096)
!9098 = !DILocation(line: 3643, column: 23, scope: !9096)
!9099 = !DILocation(line: 3643, column: 28, scope: !9096)
!9100 = !DILocation(line: 3643, column: 17, scope: !9096)
!9101 = !DILocation(line: 3643, column: 13, scope: !9083)
!9102 = !DILocation(line: 3644, column: 11, scope: !9096)
!9103 = !DILocation(line: 3644, column: 15, scope: !9096)
!9104 = !DILocation(line: 3644, column: 20, scope: !9096)
!9105 = !DILocation(line: 3644, column: 9, scope: !9096)
!9106 = !DILocation(line: 3644, column: 5, scope: !9096)
!9107 = !DILocation(line: 3648, column: 9, scope: !8934)
!9108 = !DILocation(line: 3648, column: 2, scope: !8934)
!9109 = distinct !DISubprogram(name: "stv090x_set_pls", scope: !3, file: !3, line: 3421, type: !9110, scopeLine: 3422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!9110 = !DISubroutineType(types: !9111)
!9111 = !{!439, !4654, !571}
!9112 = !DILocalVariable(name: "state", arg: 1, scope: !9109, file: !3, line: 3421, type: !4654)
!9113 = !DILocation(line: 3421, column: 50, scope: !9109)
!9114 = !DILocalVariable(name: "pls_code", arg: 2, scope: !9109, file: !3, line: 3421, type: !571)
!9115 = !DILocation(line: 3421, column: 61, scope: !9109)
!9116 = !DILocation(line: 3423, column: 2, scope: !9109)
!9117 = !DILocation(line: 3423, column: 2, scope: !9118)
!9118 = distinct !DILexicalBlock(scope: !9119, file: !3, line: 3423, column: 2)
!9119 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 3423, column: 2)
!9120 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 3423, column: 2)
!9121 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 3423, column: 2)
!9122 = !DILocation(line: 3423, column: 2, scope: !9119)
!9123 = !DILocation(line: 3423, column: 2, scope: !9124)
!9124 = distinct !DILexicalBlock(scope: !9118, file: !3, line: 3423, column: 2)
!9125 = !DILocation(line: 3423, column: 2, scope: !9126)
!9126 = distinct !DILexicalBlock(scope: !9124, file: !3, line: 3423, column: 2)
!9127 = !DILocation(line: 3423, column: 2, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 3423, column: 2)
!9129 = !DILocation(line: 3423, column: 2, scope: !9121)
!9130 = !DILocation(line: 3424, column: 6, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 3424, column: 6)
!9132 = !DILocation(line: 3424, column: 59, scope: !9131)
!9133 = !DILocation(line: 3424, column: 6, scope: !9109)
!9134 = !DILocation(line: 3425, column: 3, scope: !9131)
!9135 = !DILocation(line: 3426, column: 6, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 3426, column: 6)
!9137 = !DILocation(line: 3426, column: 66, scope: !9136)
!9138 = !DILocation(line: 3426, column: 6, scope: !9109)
!9139 = !DILocation(line: 3427, column: 3, scope: !9136)
!9140 = !DILocation(line: 3428, column: 6, scope: !9141)
!9141 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 3428, column: 6)
!9142 = !DILocation(line: 3428, column: 67, scope: !9141)
!9143 = !DILocation(line: 3428, column: 6, scope: !9109)
!9144 = !DILocation(line: 3429, column: 3, scope: !9141)
!9145 = !DILocation(line: 3430, column: 2, scope: !9109)
!9146 = !DILabel(scope: !9109, name: "err", file: !3, line: 3431)
!9147 = !DILocation(line: 3431, column: 1, scope: !9109)
!9148 = !DILocation(line: 3432, column: 2, scope: !9109)
!9149 = !DILocation(line: 3432, column: 2, scope: !9150)
!9150 = distinct !DILexicalBlock(scope: !9151, file: !3, line: 3432, column: 2)
!9151 = distinct !DILexicalBlock(scope: !9152, file: !3, line: 3432, column: 2)
!9152 = distinct !DILexicalBlock(scope: !9153, file: !3, line: 3432, column: 2)
!9153 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 3432, column: 2)
!9154 = !DILocation(line: 3432, column: 2, scope: !9151)
!9155 = !DILocation(line: 3432, column: 2, scope: !9156)
!9156 = distinct !DILexicalBlock(scope: !9150, file: !3, line: 3432, column: 2)
!9157 = !DILocation(line: 3432, column: 2, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 3432, column: 2)
!9159 = !DILocation(line: 3432, column: 2, scope: !9160)
!9160 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 3432, column: 2)
!9161 = !DILocation(line: 3432, column: 2, scope: !9153)
!9162 = !DILocation(line: 3433, column: 2, scope: !9109)
!9163 = !DILocation(line: 3434, column: 1, scope: !9109)
!9164 = distinct !DISubprogram(name: "stv090x_set_mis", scope: !3, file: !3, line: 3436, type: !7180, scopeLine: 3437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!9165 = !DILocalVariable(name: "state", arg: 1, scope: !9164, file: !3, line: 3436, type: !4654)
!9166 = !DILocation(line: 3436, column: 50, scope: !9164)
!9167 = !DILocalVariable(name: "mis", arg: 2, scope: !9164, file: !3, line: 3436, type: !439)
!9168 = !DILocation(line: 3436, column: 61, scope: !9164)
!9169 = !DILocalVariable(name: "reg", scope: !9164, file: !3, line: 3438, type: !571)
!9170 = !DILocation(line: 3438, column: 6, scope: !9164)
!9171 = !DILocation(line: 3440, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3440, column: 6)
!9173 = !DILocation(line: 3440, column: 10, scope: !9172)
!9174 = !DILocation(line: 3440, column: 14, scope: !9172)
!9175 = !DILocation(line: 3440, column: 17, scope: !9172)
!9176 = !DILocation(line: 3440, column: 21, scope: !9172)
!9177 = !DILocation(line: 3440, column: 6, scope: !9164)
!9178 = !DILocation(line: 3441, column: 3, scope: !9179)
!9179 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 3440, column: 28)
!9180 = !DILocation(line: 3441, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9182, file: !3, line: 3441, column: 3)
!9182 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3441, column: 3)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 3441, column: 3)
!9184 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 3441, column: 3)
!9185 = !DILocation(line: 3441, column: 3, scope: !9182)
!9186 = !DILocation(line: 3441, column: 3, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 3441, column: 3)
!9188 = !DILocation(line: 3441, column: 3, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 3441, column: 3)
!9190 = !DILocation(line: 3441, column: 3, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 3441, column: 3)
!9192 = !DILocation(line: 3441, column: 3, scope: !9184)
!9193 = !DILocation(line: 3442, column: 9, scope: !9179)
!9194 = !DILocation(line: 3442, column: 7, scope: !9179)
!9195 = !DILocation(line: 3443, column: 3, scope: !9179)
!9196 = !DILocation(line: 3444, column: 7, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9179, file: !3, line: 3444, column: 7)
!9198 = !DILocation(line: 3444, column: 50, scope: !9197)
!9199 = !DILocation(line: 3444, column: 7, scope: !9179)
!9200 = !DILocation(line: 3445, column: 4, scope: !9197)
!9201 = !DILocation(line: 3446, column: 2, scope: !9179)
!9202 = !DILocation(line: 3447, column: 3, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 3446, column: 9)
!9204 = !DILocation(line: 3447, column: 3, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 3447, column: 3)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 3447, column: 3)
!9207 = distinct !DILexicalBlock(scope: !9208, file: !3, line: 3447, column: 3)
!9208 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3447, column: 3)
!9209 = !DILocation(line: 3447, column: 3, scope: !9206)
!9210 = !DILocation(line: 3447, column: 3, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 3447, column: 3)
!9212 = !DILocation(line: 3447, column: 3, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 3447, column: 3)
!9214 = !DILocation(line: 3447, column: 3, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9213, file: !3, line: 3447, column: 3)
!9216 = !DILocation(line: 3447, column: 3, scope: !9208)
!9217 = !DILocation(line: 3448, column: 9, scope: !9203)
!9218 = !DILocation(line: 3448, column: 7, scope: !9203)
!9219 = !DILocation(line: 3449, column: 3, scope: !9203)
!9220 = !DILocation(line: 3450, column: 7, scope: !9221)
!9221 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3450, column: 7)
!9222 = !DILocation(line: 3450, column: 50, scope: !9221)
!9223 = !DILocation(line: 3450, column: 7, scope: !9203)
!9224 = !DILocation(line: 3451, column: 4, scope: !9221)
!9225 = !DILocation(line: 3452, column: 7, scope: !9226)
!9226 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3452, column: 7)
!9227 = !DILocation(line: 3452, column: 49, scope: !9226)
!9228 = !DILocation(line: 3452, column: 7, scope: !9203)
!9229 = !DILocation(line: 3453, column: 4, scope: !9226)
!9230 = !DILocation(line: 3454, column: 7, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 3454, column: 7)
!9232 = !DILocation(line: 3454, column: 51, scope: !9231)
!9233 = !DILocation(line: 3454, column: 7, scope: !9203)
!9234 = !DILocation(line: 3455, column: 4, scope: !9231)
!9235 = !DILocation(line: 3457, column: 2, scope: !9164)
!9236 = !DILabel(scope: !9164, name: "err", file: !3, line: 3458)
!9237 = !DILocation(line: 3458, column: 1, scope: !9164)
!9238 = !DILocation(line: 3459, column: 2, scope: !9164)
!9239 = !DILocation(line: 3459, column: 2, scope: !9240)
!9240 = distinct !DILexicalBlock(scope: !9241, file: !3, line: 3459, column: 2)
!9241 = distinct !DILexicalBlock(scope: !9242, file: !3, line: 3459, column: 2)
!9242 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 3459, column: 2)
!9243 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 3459, column: 2)
!9244 = !DILocation(line: 3459, column: 2, scope: !9241)
!9245 = !DILocation(line: 3459, column: 2, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9240, file: !3, line: 3459, column: 2)
!9247 = !DILocation(line: 3459, column: 2, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 3459, column: 2)
!9249 = !DILocation(line: 3459, column: 2, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 3459, column: 2)
!9251 = !DILocation(line: 3459, column: 2, scope: !9243)
!9252 = !DILocation(line: 3460, column: 2, scope: !9164)
!9253 = !DILocation(line: 3461, column: 1, scope: !9164)
!9254 = distinct !DISubprogram(name: "stv090x_algo", scope: !3, file: !3, line: 3162, type: !9255, scopeLine: 3163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{!413, !4654}
!9257 = !DILocalVariable(name: "state", arg: 1, scope: !9254, file: !3, line: 3162, type: !4654)
!9258 = !DILocation(line: 3162, column: 69, scope: !9254)
!9259 = !DILocalVariable(name: "fe", scope: !9254, file: !3, line: 3164, type: !588)
!9260 = !DILocation(line: 3164, column: 23, scope: !9254)
!9261 = !DILocation(line: 3164, column: 29, scope: !9254)
!9262 = !DILocation(line: 3164, column: 36, scope: !9254)
!9263 = !DILocalVariable(name: "signal_state", scope: !9254, file: !3, line: 3165, type: !413)
!9264 = !DILocation(line: 3165, column: 28, scope: !9254)
!9265 = !DILocalVariable(name: "reg", scope: !9254, file: !3, line: 3166, type: !571)
!9266 = !DILocation(line: 3166, column: 6, scope: !9254)
!9267 = !DILocalVariable(name: "agc1_power", scope: !9254, file: !3, line: 3167, type: !445)
!9268 = !DILocation(line: 3167, column: 6, scope: !9254)
!9269 = !DILocalVariable(name: "power_iq", scope: !9254, file: !3, line: 3167, type: !445)
!9270 = !DILocation(line: 3167, column: 18, scope: !9254)
!9271 = !DILocalVariable(name: "i", scope: !9254, file: !3, line: 3167, type: !445)
!9272 = !DILocation(line: 3167, column: 32, scope: !9254)
!9273 = !DILocalVariable(name: "lock", scope: !9254, file: !3, line: 3168, type: !439)
!9274 = !DILocation(line: 3168, column: 6, scope: !9254)
!9275 = !DILocalVariable(name: "low_sr", scope: !9254, file: !3, line: 3168, type: !439)
!9276 = !DILocation(line: 3168, column: 16, scope: !9254)
!9277 = !DILocation(line: 3170, column: 8, scope: !9254)
!9278 = !DILocation(line: 3170, column: 6, scope: !9254)
!9279 = !DILocation(line: 3171, column: 2, scope: !9254)
!9280 = !DILocation(line: 3172, column: 6, scope: !9281)
!9281 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3172, column: 6)
!9282 = !DILocation(line: 3172, column: 46, scope: !9281)
!9283 = !DILocation(line: 3172, column: 6, scope: !9254)
!9284 = !DILocation(line: 3173, column: 3, scope: !9281)
!9285 = !DILocation(line: 3175, column: 6, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3175, column: 6)
!9287 = !DILocation(line: 3175, column: 50, scope: !9286)
!9288 = !DILocation(line: 3175, column: 6, scope: !9254)
!9289 = !DILocation(line: 3176, column: 3, scope: !9286)
!9290 = !DILocation(line: 3178, column: 6, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3178, column: 6)
!9292 = !DILocation(line: 3178, column: 13, scope: !9291)
!9293 = !DILocation(line: 3178, column: 23, scope: !9291)
!9294 = !DILocation(line: 3178, column: 31, scope: !9291)
!9295 = !DILocation(line: 3178, column: 6, scope: !9254)
!9296 = !DILocation(line: 3179, column: 7, scope: !9297)
!9297 = distinct !DILexicalBlock(scope: !9298, file: !3, line: 3179, column: 7)
!9298 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 3178, column: 40)
!9299 = !DILocation(line: 3179, column: 14, scope: !9297)
!9300 = !DILocation(line: 3179, column: 20, scope: !9297)
!9301 = !DILocation(line: 3179, column: 7, scope: !9298)
!9302 = !DILocation(line: 3180, column: 8, scope: !9303)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !3, line: 3180, column: 8)
!9304 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 3179, column: 31)
!9305 = !DILocation(line: 3180, column: 52, scope: !9303)
!9306 = !DILocation(line: 3180, column: 8, scope: !9304)
!9307 = !DILocation(line: 3181, column: 5, scope: !9303)
!9308 = !DILocation(line: 3182, column: 3, scope: !9304)
!9309 = !DILocation(line: 3183, column: 8, scope: !9310)
!9310 = distinct !DILexicalBlock(scope: !9311, file: !3, line: 3183, column: 8)
!9311 = distinct !DILexicalBlock(scope: !9297, file: !3, line: 3182, column: 10)
!9312 = !DILocation(line: 3183, column: 52, scope: !9310)
!9313 = !DILocation(line: 3183, column: 8, scope: !9311)
!9314 = !DILocation(line: 3184, column: 5, scope: !9310)
!9315 = !DILocation(line: 3186, column: 2, scope: !9298)
!9316 = !DILocation(line: 3188, column: 23, scope: !9254)
!9317 = !DILocation(line: 3188, column: 2, scope: !9254)
!9318 = !DILocation(line: 3190, column: 6, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3190, column: 6)
!9320 = !DILocation(line: 3190, column: 13, scope: !9319)
!9321 = !DILocation(line: 3190, column: 18, scope: !9319)
!9322 = !DILocation(line: 3190, column: 6, scope: !9254)
!9323 = !DILocation(line: 3191, column: 3, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 3190, column: 43)
!9325 = !DILocation(line: 3191, column: 10, scope: !9324)
!9326 = !DILocation(line: 3191, column: 19, scope: !9324)
!9327 = !DILocation(line: 3192, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 3192, column: 7)
!9329 = !DILocation(line: 3192, column: 49, scope: !9328)
!9330 = !DILocation(line: 3192, column: 7, scope: !9324)
!9331 = !DILocation(line: 3193, column: 4, scope: !9328)
!9332 = !DILocation(line: 3194, column: 7, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 3194, column: 7)
!9334 = !DILocation(line: 3194, column: 52, scope: !9333)
!9335 = !DILocation(line: 3194, column: 7, scope: !9324)
!9336 = !DILocation(line: 3195, column: 4, scope: !9333)
!9337 = !DILocation(line: 3196, column: 25, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9324, file: !3, line: 3196, column: 7)
!9339 = !DILocation(line: 3196, column: 7, scope: !9338)
!9340 = !DILocation(line: 3196, column: 41, scope: !9338)
!9341 = !DILocation(line: 3196, column: 7, scope: !9324)
!9342 = !DILocation(line: 3197, column: 4, scope: !9338)
!9343 = !DILocation(line: 3198, column: 2, scope: !9324)
!9344 = !DILocation(line: 3200, column: 7, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3200, column: 7)
!9346 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 3198, column: 9)
!9347 = !DILocation(line: 3200, column: 48, scope: !9345)
!9348 = !DILocation(line: 3200, column: 7, scope: !9346)
!9349 = !DILocation(line: 3201, column: 4, scope: !9345)
!9350 = !DILocation(line: 3202, column: 7, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3202, column: 7)
!9352 = !DILocation(line: 3202, column: 48, scope: !9351)
!9353 = !DILocation(line: 3202, column: 7, scope: !9346)
!9354 = !DILocation(line: 3203, column: 4, scope: !9351)
!9355 = !DILocation(line: 3205, column: 7, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3205, column: 7)
!9357 = !DILocation(line: 3205, column: 14, scope: !9356)
!9358 = !DILocation(line: 3205, column: 20, scope: !9356)
!9359 = !DILocation(line: 3205, column: 7, scope: !9346)
!9360 = !DILocation(line: 3207, column: 8, scope: !9361)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 3207, column: 8)
!9362 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 3205, column: 31)
!9363 = !DILocation(line: 3207, column: 53, scope: !9361)
!9364 = !DILocation(line: 3207, column: 8, scope: !9362)
!9365 = !DILocation(line: 3208, column: 5, scope: !9361)
!9366 = !DILocation(line: 3209, column: 3, scope: !9362)
!9367 = !DILocation(line: 3211, column: 8, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 3211, column: 8)
!9369 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 3209, column: 10)
!9370 = !DILocation(line: 3211, column: 53, scope: !9368)
!9371 = !DILocation(line: 3211, column: 8, scope: !9369)
!9372 = !DILocation(line: 3212, column: 5, scope: !9368)
!9373 = !DILocation(line: 3215, column: 7, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3215, column: 7)
!9375 = !DILocation(line: 3215, column: 49, scope: !9374)
!9376 = !DILocation(line: 3215, column: 7, scope: !9346)
!9377 = !DILocation(line: 3216, column: 4, scope: !9374)
!9378 = !DILocation(line: 3218, column: 7, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3218, column: 7)
!9380 = !DILocation(line: 3218, column: 14, scope: !9379)
!9381 = !DILocation(line: 3218, column: 24, scope: !9379)
!9382 = !DILocation(line: 3218, column: 32, scope: !9379)
!9383 = !DILocation(line: 3218, column: 7, scope: !9346)
!9384 = !DILocation(line: 3219, column: 8, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 3219, column: 8)
!9386 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 3218, column: 41)
!9387 = !DILocation(line: 3219, column: 50, scope: !9385)
!9388 = !DILocation(line: 3219, column: 8, scope: !9386)
!9389 = !DILocation(line: 3220, column: 5, scope: !9385)
!9390 = !DILocation(line: 3221, column: 8, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9386, file: !3, line: 3221, column: 8)
!9392 = !DILocation(line: 3221, column: 15, scope: !9391)
!9393 = !DILocation(line: 3221, column: 20, scope: !9391)
!9394 = !DILocation(line: 3221, column: 8, scope: !9386)
!9395 = !DILocation(line: 3222, column: 48, scope: !9391)
!9396 = !DILocation(line: 3222, column: 55, scope: !9391)
!9397 = !DILocation(line: 3222, column: 62, scope: !9391)
!9398 = !DILocation(line: 3222, column: 69, scope: !9391)
!9399 = !DILocation(line: 3222, column: 30, scope: !9391)
!9400 = !DILocation(line: 3222, column: 78, scope: !9391)
!9401 = !DILocation(line: 3222, column: 27, scope: !9391)
!9402 = !DILocation(line: 3222, column: 91, scope: !9391)
!9403 = !DILocation(line: 3222, column: 5, scope: !9391)
!9404 = !DILocation(line: 3222, column: 12, scope: !9391)
!9405 = !DILocation(line: 3222, column: 21, scope: !9391)
!9406 = !DILocation(line: 3223, column: 13, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !9391, file: !3, line: 3223, column: 13)
!9408 = !DILocation(line: 3223, column: 20, scope: !9407)
!9409 = !DILocation(line: 3223, column: 25, scope: !9407)
!9410 = !DILocation(line: 3223, column: 13, scope: !9391)
!9411 = !DILocation(line: 3224, column: 41, scope: !9407)
!9412 = !DILocation(line: 3224, column: 48, scope: !9407)
!9413 = !DILocation(line: 3224, column: 55, scope: !9407)
!9414 = !DILocation(line: 3224, column: 62, scope: !9407)
!9415 = !DILocation(line: 3224, column: 23, scope: !9407)
!9416 = !DILocation(line: 3224, column: 71, scope: !9407)
!9417 = !DILocation(line: 3224, column: 5, scope: !9407)
!9418 = !DILocation(line: 3224, column: 12, scope: !9407)
!9419 = !DILocation(line: 3224, column: 21, scope: !9407)
!9420 = !DILocation(line: 3225, column: 3, scope: !9386)
!9421 = !DILocation(line: 3230, column: 7, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3230, column: 7)
!9423 = !DILocation(line: 3230, column: 49, scope: !9422)
!9424 = !DILocation(line: 3230, column: 7, scope: !9346)
!9425 = !DILocation(line: 3231, column: 4, scope: !9422)
!9426 = !DILocation(line: 3233, column: 25, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3233, column: 7)
!9428 = !DILocation(line: 3233, column: 32, scope: !9427)
!9429 = !DILocation(line: 3233, column: 39, scope: !9427)
!9430 = !DILocation(line: 3233, column: 7, scope: !9427)
!9431 = !DILocation(line: 3233, column: 46, scope: !9427)
!9432 = !DILocation(line: 3233, column: 7, scope: !9346)
!9433 = !DILocation(line: 3234, column: 4, scope: !9427)
!9434 = !DILocation(line: 3236, column: 29, scope: !9435)
!9435 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3236, column: 7)
!9436 = !DILocation(line: 3236, column: 36, scope: !9435)
!9437 = !DILocation(line: 3236, column: 43, scope: !9435)
!9438 = !DILocation(line: 3236, column: 53, scope: !9435)
!9439 = !DILocation(line: 3237, column: 8, scope: !9435)
!9440 = !DILocation(line: 3237, column: 15, scope: !9435)
!9441 = !DILocation(line: 3236, column: 7, scope: !9435)
!9442 = !DILocation(line: 3237, column: 22, scope: !9435)
!9443 = !DILocation(line: 3236, column: 7, scope: !9346)
!9444 = !DILocation(line: 3238, column: 4, scope: !9435)
!9445 = !DILocation(line: 3239, column: 29, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3239, column: 7)
!9447 = !DILocation(line: 3239, column: 36, scope: !9446)
!9448 = !DILocation(line: 3239, column: 43, scope: !9446)
!9449 = !DILocation(line: 3239, column: 53, scope: !9446)
!9450 = !DILocation(line: 3240, column: 8, scope: !9446)
!9451 = !DILocation(line: 3240, column: 15, scope: !9446)
!9452 = !DILocation(line: 3239, column: 7, scope: !9446)
!9453 = !DILocation(line: 3240, column: 22, scope: !9446)
!9454 = !DILocation(line: 3239, column: 7, scope: !9346)
!9455 = !DILocation(line: 3241, column: 4, scope: !9446)
!9456 = !DILocation(line: 3243, column: 7, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 3243, column: 7)
!9458 = !DILocation(line: 3243, column: 14, scope: !9457)
!9459 = !DILocation(line: 3243, column: 20, scope: !9457)
!9460 = !DILocation(line: 3243, column: 7, scope: !9346)
!9461 = !DILocation(line: 3244, column: 11, scope: !9457)
!9462 = !DILocation(line: 3244, column: 4, scope: !9457)
!9463 = !DILocation(line: 3246, column: 11, scope: !9457)
!9464 = !DILocation(line: 3250, column: 28, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3250, column: 6)
!9466 = !DILocation(line: 3250, column: 6, scope: !9465)
!9467 = !DILocation(line: 3250, column: 38, scope: !9465)
!9468 = !DILocation(line: 3250, column: 6, scope: !9254)
!9469 = !DILocation(line: 3251, column: 3, scope: !9465)
!9470 = !DILocation(line: 3253, column: 6, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3253, column: 6)
!9472 = !DILocation(line: 3253, column: 13, scope: !9471)
!9473 = !DILocation(line: 3253, column: 21, scope: !9471)
!9474 = !DILocation(line: 3253, column: 6, scope: !9254)
!9475 = !DILocation(line: 3254, column: 9, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 3253, column: 39)
!9477 = !DILocation(line: 3254, column: 16, scope: !9476)
!9478 = !DILocation(line: 3254, column: 24, scope: !9476)
!9479 = !DILocation(line: 3254, column: 7, scope: !9476)
!9480 = !DILocation(line: 3255, column: 7, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 3255, column: 7)
!9482 = !DILocation(line: 3255, column: 11, scope: !9481)
!9483 = !DILocation(line: 3255, column: 7, scope: !9476)
!9484 = !DILocation(line: 3256, column: 8, scope: !9481)
!9485 = !DILocation(line: 3256, column: 4, scope: !9481)
!9486 = !DILocation(line: 3257, column: 7, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 3257, column: 7)
!9488 = !DILocation(line: 3257, column: 14, scope: !9487)
!9489 = !DILocation(line: 3257, column: 22, scope: !9487)
!9490 = !DILocation(line: 3257, column: 39, scope: !9487)
!9491 = !DILocation(line: 3257, column: 43, scope: !9487)
!9492 = !DILocation(line: 3257, column: 48, scope: !9487)
!9493 = !DILocation(line: 3257, column: 7, scope: !9476)
!9494 = !DILocation(line: 3258, column: 4, scope: !9487)
!9495 = !DILocation(line: 3259, column: 2, scope: !9476)
!9496 = !DILocation(line: 3261, column: 6, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3261, column: 6)
!9498 = !DILocation(line: 3261, column: 13, scope: !9497)
!9499 = !DILocation(line: 3261, column: 21, scope: !9497)
!9500 = !DILocation(line: 3261, column: 6, scope: !9254)
!9501 = !DILocation(line: 3262, column: 7, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 3262, column: 7)
!9503 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 3261, column: 42)
!9504 = !DILocation(line: 3262, column: 14, scope: !9502)
!9505 = !DILocation(line: 3262, column: 22, scope: !9502)
!9506 = !DILocation(line: 3262, column: 42, scope: !9502)
!9507 = !DILocation(line: 3262, column: 46, scope: !9502)
!9508 = !DILocation(line: 3262, column: 53, scope: !9502)
!9509 = !DILocation(line: 3262, column: 64, scope: !9502)
!9510 = !DILocation(line: 3262, column: 7, scope: !9503)
!9511 = !DILocation(line: 3263, column: 4, scope: !9502)
!9512 = !DILocation(line: 3264, column: 2, scope: !9503)
!9513 = !DILocation(line: 3266, column: 6, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3266, column: 6)
!9515 = !DILocation(line: 3266, column: 13, scope: !9514)
!9516 = !DILocation(line: 3266, column: 21, scope: !9514)
!9517 = !DILocation(line: 3266, column: 6, scope: !9254)
!9518 = !DILocation(line: 3267, column: 7, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 3267, column: 7)
!9520 = distinct !DILexicalBlock(scope: !9514, file: !3, line: 3266, column: 42)
!9521 = !DILocation(line: 3267, column: 14, scope: !9519)
!9522 = !DILocation(line: 3267, column: 22, scope: !9519)
!9523 = !DILocation(line: 3267, column: 42, scope: !9519)
!9524 = !DILocation(line: 3267, column: 46, scope: !9519)
!9525 = !DILocation(line: 3267, column: 53, scope: !9519)
!9526 = !DILocation(line: 3267, column: 63, scope: !9519)
!9527 = !DILocation(line: 3267, column: 7, scope: !9520)
!9528 = !DILocation(line: 3268, column: 4, scope: !9519)
!9529 = !DILocation(line: 3269, column: 2, scope: !9520)
!9530 = !DILocation(line: 3271, column: 28, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3271, column: 6)
!9532 = !DILocation(line: 3271, column: 6, scope: !9531)
!9533 = !DILocation(line: 3271, column: 38, scope: !9531)
!9534 = !DILocation(line: 3271, column: 6, scope: !9254)
!9535 = !DILocation(line: 3272, column: 3, scope: !9531)
!9536 = !DILocation(line: 3274, column: 2, scope: !9254)
!9537 = !DILocation(line: 3276, column: 6, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3276, column: 6)
!9539 = !DILocation(line: 3276, column: 13, scope: !9538)
!9540 = !DILocation(line: 3276, column: 21, scope: !9538)
!9541 = !DILocation(line: 3276, column: 6, scope: !9254)
!9542 = !DILocation(line: 3277, column: 29, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 3277, column: 7)
!9544 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 3276, column: 39)
!9545 = !DILocation(line: 3277, column: 7, scope: !9543)
!9546 = !DILocation(line: 3277, column: 39, scope: !9543)
!9547 = !DILocation(line: 3277, column: 7, scope: !9544)
!9548 = !DILocation(line: 3278, column: 4, scope: !9543)
!9549 = !DILocation(line: 3279, column: 7, scope: !9550)
!9550 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 3279, column: 7)
!9551 = !DILocation(line: 3279, column: 14, scope: !9550)
!9552 = !DILocation(line: 3279, column: 22, scope: !9550)
!9553 = !DILocation(line: 3279, column: 39, scope: !9550)
!9554 = !DILocation(line: 3279, column: 49, scope: !9550)
!9555 = !DILocation(line: 3279, column: 7, scope: !9544)
!9556 = !DILocation(line: 3280, column: 4, scope: !9550)
!9557 = !DILocation(line: 3281, column: 29, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 3281, column: 7)
!9559 = !DILocation(line: 3281, column: 7, scope: !9558)
!9560 = !DILocation(line: 3281, column: 39, scope: !9558)
!9561 = !DILocation(line: 3281, column: 7, scope: !9544)
!9562 = !DILocation(line: 3282, column: 4, scope: !9558)
!9563 = !DILocation(line: 3284, column: 7, scope: !9564)
!9564 = distinct !DILexicalBlock(scope: !9544, file: !3, line: 3284, column: 7)
!9565 = !DILocation(line: 3284, column: 7, scope: !9544)
!9566 = !DILocation(line: 3285, column: 4, scope: !9564)
!9567 = !DILocation(line: 3285, column: 4, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 3285, column: 4)
!9569 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 3285, column: 4)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 3285, column: 4)
!9571 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 3285, column: 4)
!9572 = !DILocation(line: 3285, column: 4, scope: !9569)
!9573 = !DILocation(line: 3285, column: 4, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 3285, column: 4)
!9575 = !DILocation(line: 3285, column: 4, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 3285, column: 4)
!9577 = !DILocation(line: 3285, column: 4, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 3285, column: 4)
!9579 = !DILocation(line: 3285, column: 4, scope: !9571)
!9580 = !DILocation(line: 3287, column: 4, scope: !9581)
!9581 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 3286, column: 8)
!9582 = !DILocation(line: 3287, column: 4, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 3287, column: 4)
!9584 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 3287, column: 4)
!9585 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 3287, column: 4)
!9586 = distinct !DILexicalBlock(scope: !9581, file: !3, line: 3287, column: 4)
!9587 = !DILocation(line: 3287, column: 4, scope: !9584)
!9588 = !DILocation(line: 3287, column: 4, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 3287, column: 4)
!9590 = !DILocation(line: 3287, column: 4, scope: !9591)
!9591 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 3287, column: 4)
!9592 = !DILocation(line: 3287, column: 4, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9591, file: !3, line: 3287, column: 4)
!9594 = !DILocation(line: 3287, column: 4, scope: !9586)
!9595 = !DILocation(line: 3288, column: 4, scope: !9581)
!9596 = !DILocation(line: 3290, column: 2, scope: !9544)
!9597 = !DILocation(line: 3292, column: 2, scope: !9254)
!9598 = !DILocation(line: 3293, column: 15, scope: !9254)
!9599 = !DILocation(line: 3293, column: 13, scope: !9254)
!9600 = !DILocation(line: 3296, column: 6, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3296, column: 6)
!9602 = !DILocation(line: 3296, column: 17, scope: !9601)
!9603 = !DILocation(line: 3296, column: 6, scope: !9254)
!9604 = !DILocation(line: 3300, column: 10, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 3300, column: 3)
!9606 = distinct !DILexicalBlock(scope: !9601, file: !3, line: 3296, column: 23)
!9607 = !DILocation(line: 3300, column: 8, scope: !9605)
!9608 = !DILocation(line: 3300, column: 15, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9605, file: !3, line: 3300, column: 3)
!9610 = !DILocation(line: 3300, column: 17, scope: !9609)
!9611 = !DILocation(line: 3300, column: 3, scope: !9605)
!9612 = !DILocation(line: 3301, column: 17, scope: !9613)
!9613 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 3300, column: 27)
!9614 = !DILocation(line: 3302, column: 10, scope: !9613)
!9615 = !DILocation(line: 3301, column: 51, scope: !9613)
!9616 = !DILocation(line: 3302, column: 45, scope: !9613)
!9617 = !DILocation(line: 3301, column: 13, scope: !9613)
!9618 = !DILocation(line: 3303, column: 3, scope: !9613)
!9619 = !DILocation(line: 3300, column: 23, scope: !9609)
!9620 = !DILocation(line: 3300, column: 3, scope: !9609)
!9621 = distinct !{!9621, !9611, !9622}
!9622 = !DILocation(line: 3303, column: 3, scope: !9605)
!9623 = !DILocation(line: 3304, column: 12, scope: !9606)
!9624 = !DILocation(line: 3305, column: 2, scope: !9606)
!9625 = !DILocation(line: 3307, column: 7, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3307, column: 6)
!9627 = !DILocation(line: 3307, column: 18, scope: !9626)
!9628 = !DILocation(line: 3307, column: 24, scope: !9626)
!9629 = !DILocation(line: 3307, column: 28, scope: !9626)
!9630 = !DILocation(line: 3307, column: 37, scope: !9626)
!9631 = !DILocation(line: 3307, column: 6, scope: !9254)
!9632 = !DILocation(line: 3308, column: 3, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 3307, column: 67)
!9634 = !DILocation(line: 3308, column: 3, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9636, file: !3, line: 3308, column: 3)
!9636 = distinct !DILexicalBlock(scope: !9637, file: !3, line: 3308, column: 3)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 3308, column: 3)
!9638 = distinct !DILexicalBlock(scope: !9633, file: !3, line: 3308, column: 3)
!9639 = !DILocation(line: 3308, column: 3, scope: !9636)
!9640 = !DILocation(line: 3308, column: 3, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9635, file: !3, line: 3308, column: 3)
!9642 = !DILocation(line: 3308, column: 3, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 3308, column: 3)
!9644 = !DILocation(line: 3308, column: 3, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 3308, column: 3)
!9646 = !DILocation(line: 3308, column: 3, scope: !9638)
!9647 = !DILocation(line: 3309, column: 8, scope: !9633)
!9648 = !DILocation(line: 3310, column: 16, scope: !9633)
!9649 = !DILocation(line: 3311, column: 2, scope: !9633)
!9650 = !DILocation(line: 3312, column: 9, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 3311, column: 9)
!9652 = !DILocation(line: 3312, column: 7, scope: !9651)
!9653 = !DILocation(line: 3313, column: 3, scope: !9651)
!9654 = !DILocation(line: 3315, column: 7, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 3315, column: 7)
!9656 = !DILocation(line: 3315, column: 14, scope: !9655)
!9657 = !DILocation(line: 3315, column: 24, scope: !9655)
!9658 = !DILocation(line: 3315, column: 32, scope: !9655)
!9659 = !DILocation(line: 3315, column: 7, scope: !9651)
!9660 = !DILocation(line: 3317, column: 4, scope: !9661)
!9661 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 3315, column: 41)
!9662 = !DILocation(line: 3318, column: 3, scope: !9661)
!9663 = !DILocation(line: 3320, column: 4, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 3318, column: 10)
!9665 = !DILocation(line: 3322, column: 7, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 3322, column: 7)
!9667 = !DILocation(line: 3322, column: 46, scope: !9666)
!9668 = !DILocation(line: 3322, column: 7, scope: !9651)
!9669 = !DILocation(line: 3323, column: 4, scope: !9666)
!9670 = !DILocation(line: 3325, column: 31, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 3325, column: 7)
!9672 = !DILocation(line: 3325, column: 7, scope: !9671)
!9673 = !DILocation(line: 3325, column: 38, scope: !9671)
!9674 = !DILocation(line: 3325, column: 7, scope: !9651)
!9675 = !DILocation(line: 3326, column: 4, scope: !9671)
!9676 = !DILocation(line: 3328, column: 7, scope: !9677)
!9677 = distinct !DILexicalBlock(scope: !9651, file: !3, line: 3328, column: 7)
!9678 = !DILocation(line: 3328, column: 14, scope: !9677)
!9679 = !DILocation(line: 3328, column: 19, scope: !9677)
!9680 = !DILocation(line: 3328, column: 7, scope: !9651)
!9681 = !DILocation(line: 3329, column: 29, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9683, file: !3, line: 3329, column: 8)
!9683 = distinct !DILexicalBlock(scope: !9677, file: !3, line: 3328, column: 44)
!9684 = !DILocation(line: 3329, column: 8, scope: !9682)
!9685 = !DILocation(line: 3329, column: 36, scope: !9682)
!9686 = !DILocation(line: 3329, column: 8, scope: !9683)
!9687 = !DILocation(line: 3330, column: 5, scope: !9682)
!9688 = !DILocation(line: 3331, column: 3, scope: !9683)
!9689 = !DILocation(line: 3334, column: 6, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3334, column: 6)
!9691 = !DILocation(line: 3334, column: 19, scope: !9690)
!9692 = !DILocation(line: 3334, column: 6, scope: !9254)
!9693 = !DILocation(line: 3335, column: 10, scope: !9690)
!9694 = !DILocation(line: 3335, column: 3, scope: !9690)
!9695 = !DILocation(line: 3337, column: 6, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3337, column: 6)
!9697 = !DILocation(line: 3337, column: 13, scope: !9696)
!9698 = !DILocation(line: 3337, column: 18, scope: !9696)
!9699 = !DILocation(line: 3337, column: 6, scope: !9254)
!9700 = !DILocation(line: 3338, column: 31, scope: !9696)
!9701 = !DILocation(line: 3338, column: 10, scope: !9696)
!9702 = !DILocation(line: 3338, column: 8, scope: !9696)
!9703 = !DILocation(line: 3338, column: 3, scope: !9696)
!9704 = !DILocation(line: 3340, column: 11, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 3340, column: 11)
!9706 = !DILocation(line: 3340, column: 18, scope: !9705)
!9707 = !DILocation(line: 3340, column: 23, scope: !9705)
!9708 = !DILocation(line: 3340, column: 11, scope: !9696)
!9709 = !DILocation(line: 3341, column: 31, scope: !9705)
!9710 = !DILocation(line: 3341, column: 38, scope: !9705)
!9711 = !DILocation(line: 3341, column: 45, scope: !9705)
!9712 = !DILocation(line: 3341, column: 10, scope: !9705)
!9713 = !DILocation(line: 3341, column: 8, scope: !9705)
!9714 = !DILocation(line: 3341, column: 3, scope: !9705)
!9715 = !DILocation(line: 3343, column: 11, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9705, file: !3, line: 3343, column: 11)
!9717 = !DILocation(line: 3343, column: 18, scope: !9716)
!9718 = !DILocation(line: 3343, column: 23, scope: !9716)
!9719 = !DILocation(line: 3343, column: 11, scope: !9705)
!9720 = !DILocation(line: 3344, column: 30, scope: !9716)
!9721 = !DILocation(line: 3344, column: 37, scope: !9716)
!9722 = !DILocation(line: 3344, column: 44, scope: !9716)
!9723 = !DILocation(line: 3344, column: 10, scope: !9716)
!9724 = !DILocation(line: 3344, column: 8, scope: !9716)
!9725 = !DILocation(line: 3344, column: 3, scope: !9716)
!9726 = !DILocation(line: 3346, column: 8, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3346, column: 6)
!9728 = !DILocation(line: 3346, column: 14, scope: !9727)
!9729 = !DILocation(line: 3346, column: 18, scope: !9727)
!9730 = !DILocation(line: 3346, column: 25, scope: !9727)
!9731 = !DILocation(line: 3346, column: 30, scope: !9727)
!9732 = !DILocation(line: 3346, column: 6, scope: !9254)
!9733 = !DILocation(line: 3347, column: 8, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 3347, column: 7)
!9735 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 3346, column: 55)
!9736 = !DILocation(line: 3347, column: 7, scope: !9735)
!9737 = !DILocation(line: 3348, column: 24, scope: !9738)
!9738 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 3348, column: 8)
!9739 = distinct !DILexicalBlock(scope: !9734, file: !3, line: 3347, column: 16)
!9740 = !DILocation(line: 3348, column: 8, scope: !9738)
!9741 = !DILocation(line: 3348, column: 8, scope: !9739)
!9742 = !DILocation(line: 3349, column: 28, scope: !9738)
!9743 = !DILocation(line: 3349, column: 12, scope: !9738)
!9744 = !DILocation(line: 3349, column: 10, scope: !9738)
!9745 = !DILocation(line: 3349, column: 5, scope: !9738)
!9746 = !DILocation(line: 3350, column: 3, scope: !9739)
!9747 = !DILocation(line: 3351, column: 2, scope: !9735)
!9748 = !DILocation(line: 3353, column: 6, scope: !9749)
!9749 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3353, column: 6)
!9750 = !DILocation(line: 3353, column: 6, scope: !9254)
!9751 = !DILocation(line: 3354, column: 41, scope: !9749)
!9752 = !DILocation(line: 3354, column: 18, scope: !9749)
!9753 = !DILocation(line: 3354, column: 16, scope: !9749)
!9754 = !DILocation(line: 3354, column: 3, scope: !9749)
!9755 = !DILocation(line: 3356, column: 7, scope: !9756)
!9756 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3356, column: 6)
!9757 = !DILocation(line: 3356, column: 6, scope: !9756)
!9758 = !DILocation(line: 3356, column: 13, scope: !9756)
!9759 = !DILocation(line: 3356, column: 17, scope: !9756)
!9760 = !DILocation(line: 3356, column: 30, scope: !9756)
!9761 = !DILocation(line: 3356, column: 6, scope: !9254)
!9762 = !DILocation(line: 3357, column: 26, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9756, file: !3, line: 3356, column: 51)
!9764 = !DILocation(line: 3357, column: 3, scope: !9763)
!9765 = !DILocation(line: 3359, column: 7, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 3359, column: 7)
!9767 = !DILocation(line: 3359, column: 14, scope: !9766)
!9768 = !DILocation(line: 3359, column: 24, scope: !9766)
!9769 = !DILocation(line: 3359, column: 32, scope: !9766)
!9770 = !DILocation(line: 3359, column: 7, scope: !9763)
!9771 = !DILocation(line: 3363, column: 10, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 3359, column: 41)
!9773 = !DILocation(line: 3363, column: 8, scope: !9772)
!9774 = !DILocation(line: 3364, column: 4, scope: !9772)
!9775 = !DILocation(line: 3365, column: 8, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 3365, column: 8)
!9777 = !DILocation(line: 3365, column: 48, scope: !9776)
!9778 = !DILocation(line: 3365, column: 8, scope: !9772)
!9779 = !DILocation(line: 3366, column: 5, scope: !9776)
!9780 = !DILocation(line: 3368, column: 4, scope: !9772)
!9781 = !DILocation(line: 3370, column: 4, scope: !9772)
!9782 = !DILocation(line: 3371, column: 8, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 3371, column: 8)
!9784 = !DILocation(line: 3371, column: 48, scope: !9783)
!9785 = !DILocation(line: 3371, column: 8, scope: !9772)
!9786 = !DILocation(line: 3372, column: 5, scope: !9783)
!9787 = !DILocation(line: 3374, column: 4, scope: !9772)
!9788 = !DILocation(line: 3375, column: 8, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 3375, column: 8)
!9790 = !DILocation(line: 3375, column: 48, scope: !9789)
!9791 = !DILocation(line: 3375, column: 8, scope: !9772)
!9792 = !DILocation(line: 3376, column: 5, scope: !9789)
!9793 = !DILocation(line: 3377, column: 3, scope: !9772)
!9794 = !DILocation(line: 3379, column: 27, scope: !9763)
!9795 = !DILocation(line: 3379, column: 34, scope: !9763)
!9796 = !DILocation(line: 3379, column: 41, scope: !9763)
!9797 = !DILocation(line: 3380, column: 5, scope: !9763)
!9798 = !DILocation(line: 3380, column: 12, scope: !9763)
!9799 = !DILocation(line: 3379, column: 10, scope: !9763)
!9800 = !DILocation(line: 3379, column: 8, scope: !9763)
!9801 = !DILocation(line: 3381, column: 7, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 3381, column: 7)
!9803 = !DILocation(line: 3381, column: 7, scope: !9763)
!9804 = !DILocation(line: 3382, column: 8, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3382, column: 8)
!9806 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 3381, column: 13)
!9807 = !DILocation(line: 3382, column: 15, scope: !9805)
!9808 = !DILocation(line: 3382, column: 22, scope: !9805)
!9809 = !DILocation(line: 3382, column: 8, scope: !9806)
!9810 = !DILocation(line: 3383, column: 27, scope: !9811)
!9811 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 3382, column: 40)
!9812 = !DILocation(line: 3383, column: 5, scope: !9811)
!9813 = !DILocation(line: 3385, column: 11, scope: !9811)
!9814 = !DILocation(line: 3385, column: 9, scope: !9811)
!9815 = !DILocation(line: 3386, column: 5, scope: !9811)
!9816 = !DILocation(line: 3387, column: 9, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 3387, column: 9)
!9818 = !DILocation(line: 3387, column: 52, scope: !9817)
!9819 = !DILocation(line: 3387, column: 9, scope: !9811)
!9820 = !DILocation(line: 3388, column: 6, scope: !9817)
!9821 = !DILocation(line: 3390, column: 11, scope: !9811)
!9822 = !DILocation(line: 3390, column: 9, scope: !9811)
!9823 = !DILocation(line: 3391, column: 5, scope: !9811)
!9824 = !DILocation(line: 3392, column: 9, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 3392, column: 9)
!9826 = !DILocation(line: 3392, column: 52, scope: !9825)
!9827 = !DILocation(line: 3392, column: 9, scope: !9811)
!9828 = !DILocation(line: 3393, column: 6, scope: !9825)
!9829 = !DILocation(line: 3395, column: 9, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9811, file: !3, line: 3395, column: 9)
!9831 = !DILocation(line: 3395, column: 52, scope: !9830)
!9832 = !DILocation(line: 3395, column: 9, scope: !9811)
!9833 = !DILocation(line: 3396, column: 6, scope: !9830)
!9834 = !DILocation(line: 3397, column: 4, scope: !9811)
!9835 = !DILocation(line: 3398, column: 9, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 3398, column: 9)
!9837 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 3397, column: 11)
!9838 = !DILocation(line: 3398, column: 52, scope: !9836)
!9839 = !DILocation(line: 3398, column: 9, scope: !9837)
!9840 = !DILocation(line: 3399, column: 6, scope: !9836)
!9841 = !DILocation(line: 3402, column: 8, scope: !9842)
!9842 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3402, column: 8)
!9843 = !DILocation(line: 3402, column: 51, scope: !9842)
!9844 = !DILocation(line: 3402, column: 8, scope: !9806)
!9845 = !DILocation(line: 3403, column: 5, scope: !9842)
!9846 = !DILocation(line: 3405, column: 8, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3405, column: 8)
!9848 = !DILocation(line: 3405, column: 51, scope: !9847)
!9849 = !DILocation(line: 3405, column: 8, scope: !9806)
!9850 = !DILocation(line: 3406, column: 5, scope: !9847)
!9851 = !DILocation(line: 3407, column: 3, scope: !9806)
!9852 = !DILocation(line: 3408, column: 17, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 3407, column: 10)
!9854 = !DILocation(line: 3409, column: 23, scope: !9853)
!9855 = !DILocation(line: 3409, column: 4, scope: !9853)
!9856 = !DILocation(line: 3411, column: 2, scope: !9763)
!9857 = !DILocation(line: 3412, column: 9, scope: !9254)
!9858 = !DILocation(line: 3412, column: 2, scope: !9254)
!9859 = !DILabel(scope: !9254, name: "err_gateoff", file: !3, line: 3414)
!9860 = !DILocation(line: 3414, column: 1, scope: !9254)
!9861 = !DILocation(line: 3415, column: 24, scope: !9254)
!9862 = !DILocation(line: 3415, column: 2, scope: !9254)
!9863 = !DILabel(scope: !9254, name: "err", file: !3, line: 3416)
!9864 = !DILocation(line: 3416, column: 1, scope: !9254)
!9865 = !DILocation(line: 3417, column: 2, scope: !9254)
!9866 = !DILocation(line: 3417, column: 2, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9868, file: !3, line: 3417, column: 2)
!9868 = distinct !DILexicalBlock(scope: !9869, file: !3, line: 3417, column: 2)
!9869 = distinct !DILexicalBlock(scope: !9870, file: !3, line: 3417, column: 2)
!9870 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3417, column: 2)
!9871 = !DILocation(line: 3417, column: 2, scope: !9868)
!9872 = !DILocation(line: 3417, column: 2, scope: !9873)
!9873 = distinct !DILexicalBlock(scope: !9867, file: !3, line: 3417, column: 2)
!9874 = !DILocation(line: 3417, column: 2, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9873, file: !3, line: 3417, column: 2)
!9876 = !DILocation(line: 3417, column: 2, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 3417, column: 2)
!9878 = !DILocation(line: 3417, column: 2, scope: !9870)
!9879 = !DILocation(line: 3418, column: 2, scope: !9254)
!9880 = !DILocation(line: 3419, column: 1, scope: !9254)
!9881 = distinct !DISubprogram(name: "stv090x_get_lock_tmg", scope: !3, file: !3, line: 802, type: !9882, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!9882 = !DISubroutineType(types: !9883)
!9883 = !{null, !4654}
!9884 = !DILocalVariable(name: "state", arg: 1, scope: !9881, file: !3, line: 802, type: !4654)
!9885 = !DILocation(line: 802, column: 56, scope: !9881)
!9886 = !DILocation(line: 804, column: 10, scope: !9881)
!9887 = !DILocation(line: 804, column: 17, scope: !9881)
!9888 = !DILocation(line: 804, column: 2, scope: !9881)
!9889 = !DILocation(line: 806, column: 3, scope: !9890)
!9890 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 804, column: 23)
!9891 = !DILocation(line: 806, column: 3, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9893, file: !3, line: 806, column: 3)
!9893 = distinct !DILexicalBlock(scope: !9894, file: !3, line: 806, column: 3)
!9894 = distinct !DILexicalBlock(scope: !9895, file: !3, line: 806, column: 3)
!9895 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 806, column: 3)
!9896 = !DILocation(line: 806, column: 3, scope: !9893)
!9897 = !DILocation(line: 806, column: 3, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9892, file: !3, line: 806, column: 3)
!9899 = !DILocation(line: 806, column: 3, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 806, column: 3)
!9901 = !DILocation(line: 806, column: 3, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 806, column: 3)
!9903 = !DILocation(line: 806, column: 3, scope: !9895)
!9904 = !DILocation(line: 807, column: 7, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 807, column: 7)
!9906 = !DILocation(line: 807, column: 14, scope: !9905)
!9907 = !DILocation(line: 807, column: 20, scope: !9905)
!9908 = !DILocation(line: 807, column: 7, scope: !9890)
!9909 = !DILocation(line: 808, column: 4, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 807, column: 32)
!9911 = !DILocation(line: 808, column: 11, scope: !9910)
!9912 = !DILocation(line: 808, column: 24, scope: !9910)
!9913 = !DILocation(line: 809, column: 4, scope: !9910)
!9914 = !DILocation(line: 809, column: 11, scope: !9910)
!9915 = !DILocation(line: 809, column: 22, scope: !9910)
!9916 = !DILocation(line: 810, column: 3, scope: !9910)
!9917 = !DILocation(line: 810, column: 14, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 810, column: 14)
!9919 = !DILocation(line: 810, column: 21, scope: !9918)
!9920 = !DILocation(line: 810, column: 27, scope: !9918)
!9921 = !DILocation(line: 810, column: 14, scope: !9905)
!9922 = !DILocation(line: 811, column: 4, scope: !9923)
!9923 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 810, column: 39)
!9924 = !DILocation(line: 811, column: 11, scope: !9923)
!9925 = !DILocation(line: 811, column: 24, scope: !9923)
!9926 = !DILocation(line: 812, column: 4, scope: !9923)
!9927 = !DILocation(line: 812, column: 11, scope: !9923)
!9928 = !DILocation(line: 812, column: 22, scope: !9923)
!9929 = !DILocation(line: 813, column: 3, scope: !9923)
!9930 = !DILocation(line: 814, column: 4, scope: !9931)
!9931 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 813, column: 10)
!9932 = !DILocation(line: 814, column: 11, scope: !9931)
!9933 = !DILocation(line: 814, column: 24, scope: !9931)
!9934 = !DILocation(line: 815, column: 4, scope: !9931)
!9935 = !DILocation(line: 815, column: 11, scope: !9931)
!9936 = !DILocation(line: 815, column: 22, scope: !9931)
!9937 = !DILocation(line: 817, column: 3, scope: !9890)
!9938 = !DILocation(line: 822, column: 3, scope: !9890)
!9939 = !DILocation(line: 822, column: 3, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 822, column: 3)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 822, column: 3)
!9942 = distinct !DILexicalBlock(scope: !9943, file: !3, line: 822, column: 3)
!9943 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 822, column: 3)
!9944 = !DILocation(line: 822, column: 3, scope: !9941)
!9945 = !DILocation(line: 822, column: 3, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 822, column: 3)
!9947 = !DILocation(line: 822, column: 3, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9946, file: !3, line: 822, column: 3)
!9949 = !DILocation(line: 822, column: 3, scope: !9950)
!9950 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 822, column: 3)
!9951 = !DILocation(line: 822, column: 3, scope: !9943)
!9952 = !DILocation(line: 823, column: 7, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9890, file: !3, line: 823, column: 7)
!9954 = !DILocation(line: 823, column: 14, scope: !9953)
!9955 = !DILocation(line: 823, column: 20, scope: !9953)
!9956 = !DILocation(line: 823, column: 7, scope: !9890)
!9957 = !DILocation(line: 824, column: 4, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 823, column: 32)
!9959 = !DILocation(line: 824, column: 11, scope: !9958)
!9960 = !DILocation(line: 824, column: 24, scope: !9958)
!9961 = !DILocation(line: 825, column: 4, scope: !9958)
!9962 = !DILocation(line: 825, column: 11, scope: !9958)
!9963 = !DILocation(line: 825, column: 22, scope: !9958)
!9964 = !DILocation(line: 826, column: 3, scope: !9958)
!9965 = !DILocation(line: 826, column: 14, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 826, column: 14)
!9967 = !DILocation(line: 826, column: 21, scope: !9966)
!9968 = !DILocation(line: 826, column: 27, scope: !9966)
!9969 = !DILocation(line: 826, column: 14, scope: !9953)
!9970 = !DILocation(line: 827, column: 4, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 826, column: 39)
!9972 = !DILocation(line: 827, column: 11, scope: !9971)
!9973 = !DILocation(line: 827, column: 24, scope: !9971)
!9974 = !DILocation(line: 828, column: 4, scope: !9971)
!9975 = !DILocation(line: 828, column: 11, scope: !9971)
!9976 = !DILocation(line: 828, column: 22, scope: !9971)
!9977 = !DILocation(line: 829, column: 3, scope: !9971)
!9978 = !DILocation(line: 829, column: 14, scope: !9979)
!9979 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 829, column: 14)
!9980 = !DILocation(line: 829, column: 21, scope: !9979)
!9981 = !DILocation(line: 829, column: 27, scope: !9979)
!9982 = !DILocation(line: 829, column: 14, scope: !9966)
!9983 = !DILocation(line: 830, column: 4, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 829, column: 39)
!9985 = !DILocation(line: 830, column: 11, scope: !9984)
!9986 = !DILocation(line: 830, column: 24, scope: !9984)
!9987 = !DILocation(line: 831, column: 4, scope: !9984)
!9988 = !DILocation(line: 831, column: 11, scope: !9984)
!9989 = !DILocation(line: 831, column: 22, scope: !9984)
!9990 = !DILocation(line: 832, column: 3, scope: !9984)
!9991 = !DILocation(line: 832, column: 14, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9979, file: !3, line: 832, column: 14)
!9993 = !DILocation(line: 832, column: 21, scope: !9992)
!9994 = !DILocation(line: 832, column: 27, scope: !9992)
!9995 = !DILocation(line: 832, column: 14, scope: !9979)
!9996 = !DILocation(line: 833, column: 4, scope: !9997)
!9997 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 832, column: 40)
!9998 = !DILocation(line: 833, column: 11, scope: !9997)
!9999 = !DILocation(line: 833, column: 24, scope: !9997)
!10000 = !DILocation(line: 834, column: 4, scope: !9997)
!10001 = !DILocation(line: 834, column: 11, scope: !9997)
!10002 = !DILocation(line: 834, column: 22, scope: !9997)
!10003 = !DILocation(line: 835, column: 3, scope: !9997)
!10004 = !DILocation(line: 835, column: 14, scope: !10005)
!10005 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 835, column: 14)
!10006 = !DILocation(line: 835, column: 21, scope: !10005)
!10007 = !DILocation(line: 835, column: 27, scope: !10005)
!10008 = !DILocation(line: 835, column: 14, scope: !9992)
!10009 = !DILocation(line: 836, column: 4, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 835, column: 40)
!10011 = !DILocation(line: 836, column: 11, scope: !10010)
!10012 = !DILocation(line: 836, column: 24, scope: !10010)
!10013 = !DILocation(line: 837, column: 4, scope: !10010)
!10014 = !DILocation(line: 837, column: 11, scope: !10010)
!10015 = !DILocation(line: 837, column: 22, scope: !10010)
!10016 = !DILocation(line: 838, column: 3, scope: !10010)
!10017 = !DILocation(line: 839, column: 4, scope: !10018)
!10018 = distinct !DILexicalBlock(scope: !10005, file: !3, line: 838, column: 10)
!10019 = !DILocation(line: 839, column: 11, scope: !10018)
!10020 = !DILocation(line: 839, column: 24, scope: !10018)
!10021 = !DILocation(line: 840, column: 4, scope: !10018)
!10022 = !DILocation(line: 840, column: 11, scope: !10018)
!10023 = !DILocation(line: 840, column: 22, scope: !10018)
!10024 = !DILocation(line: 842, column: 3, scope: !9890)
!10025 = !DILocation(line: 845, column: 6, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 845, column: 6)
!10027 = !DILocation(line: 845, column: 13, scope: !10026)
!10028 = !DILocation(line: 845, column: 18, scope: !10026)
!10029 = !DILocation(line: 845, column: 6, scope: !9881)
!10030 = !DILocation(line: 846, column: 3, scope: !10026)
!10031 = !DILocation(line: 846, column: 10, scope: !10026)
!10032 = !DILocation(line: 846, column: 23, scope: !10026)
!10033 = !DILocation(line: 847, column: 1, scope: !9881)
!10034 = distinct !DISubprogram(name: "stv090x_set_srate", scope: !3, file: !3, line: 849, type: !9110, scopeLine: 850, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10035 = !DILocalVariable(name: "state", arg: 1, scope: !10034, file: !3, line: 849, type: !4654)
!10036 = !DILocation(line: 849, column: 52, scope: !10034)
!10037 = !DILocalVariable(name: "srate", arg: 2, scope: !10034, file: !3, line: 849, type: !571)
!10038 = !DILocation(line: 849, column: 63, scope: !10034)
!10039 = !DILocalVariable(name: "sym", scope: !10034, file: !3, line: 851, type: !571)
!10040 = !DILocation(line: 851, column: 6, scope: !10034)
!10041 = !DILocation(line: 853, column: 6, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 853, column: 6)
!10043 = !DILocation(line: 853, column: 12, scope: !10042)
!10044 = !DILocation(line: 853, column: 6, scope: !10034)
!10045 = !DILocation(line: 854, column: 11, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 853, column: 24)
!10047 = !DILocation(line: 854, column: 17, scope: !10046)
!10048 = !DILocation(line: 854, column: 8, scope: !10046)
!10049 = !DILocation(line: 855, column: 11, scope: !10046)
!10050 = !DILocation(line: 855, column: 18, scope: !10046)
!10051 = !DILocation(line: 855, column: 28, scope: !10046)
!10052 = !DILocation(line: 855, column: 33, scope: !10046)
!10053 = !DILocation(line: 855, column: 7, scope: !10046)
!10054 = !DILocation(line: 856, column: 2, scope: !10046)
!10055 = !DILocation(line: 856, column: 13, scope: !10056)
!10056 = distinct !DILexicalBlock(scope: !10042, file: !3, line: 856, column: 13)
!10057 = !DILocation(line: 856, column: 19, scope: !10056)
!10058 = !DILocation(line: 856, column: 13, scope: !10042)
!10059 = !DILocation(line: 857, column: 11, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 856, column: 30)
!10061 = !DILocation(line: 857, column: 17, scope: !10060)
!10062 = !DILocation(line: 857, column: 8, scope: !10060)
!10063 = !DILocation(line: 858, column: 11, scope: !10060)
!10064 = !DILocation(line: 858, column: 18, scope: !10060)
!10065 = !DILocation(line: 858, column: 28, scope: !10060)
!10066 = !DILocation(line: 858, column: 33, scope: !10060)
!10067 = !DILocation(line: 858, column: 7, scope: !10060)
!10068 = !DILocation(line: 859, column: 2, scope: !10060)
!10069 = !DILocation(line: 860, column: 11, scope: !10070)
!10070 = distinct !DILexicalBlock(scope: !10056, file: !3, line: 859, column: 9)
!10071 = !DILocation(line: 860, column: 17, scope: !10070)
!10072 = !DILocation(line: 860, column: 8, scope: !10070)
!10073 = !DILocation(line: 861, column: 11, scope: !10070)
!10074 = !DILocation(line: 861, column: 18, scope: !10070)
!10075 = !DILocation(line: 861, column: 28, scope: !10070)
!10076 = !DILocation(line: 861, column: 33, scope: !10070)
!10077 = !DILocation(line: 861, column: 7, scope: !10070)
!10078 = !DILocation(line: 864, column: 6, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 864, column: 6)
!10080 = !DILocation(line: 864, column: 62, scope: !10079)
!10081 = !DILocation(line: 864, column: 6, scope: !10034)
!10082 = !DILocation(line: 865, column: 3, scope: !10079)
!10083 = !DILocation(line: 866, column: 6, scope: !10084)
!10084 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 866, column: 6)
!10085 = !DILocation(line: 866, column: 57, scope: !10084)
!10086 = !DILocation(line: 866, column: 6, scope: !10034)
!10087 = !DILocation(line: 867, column: 3, scope: !10084)
!10088 = !DILocation(line: 869, column: 2, scope: !10034)
!10089 = !DILabel(scope: !10034, name: "err", file: !3, line: 870)
!10090 = !DILocation(line: 870, column: 1, scope: !10034)
!10091 = !DILocation(line: 871, column: 2, scope: !10034)
!10092 = !DILocation(line: 871, column: 2, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10094, file: !3, line: 871, column: 2)
!10094 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 871, column: 2)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 871, column: 2)
!10096 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 871, column: 2)
!10097 = !DILocation(line: 871, column: 2, scope: !10094)
!10098 = !DILocation(line: 871, column: 2, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10093, file: !3, line: 871, column: 2)
!10100 = !DILocation(line: 871, column: 2, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10099, file: !3, line: 871, column: 2)
!10102 = !DILocation(line: 871, column: 2, scope: !10103)
!10103 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 871, column: 2)
!10104 = !DILocation(line: 871, column: 2, scope: !10096)
!10105 = !DILocation(line: 872, column: 2, scope: !10034)
!10106 = !DILocation(line: 873, column: 1, scope: !10034)
!10107 = distinct !DISubprogram(name: "stv090x_car_width", scope: !3, file: !3, line: 935, type: !10108, scopeLine: 936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{!571, !571, !391}
!10110 = !DILocalVariable(name: "srate", arg: 1, scope: !10107, file: !3, line: 935, type: !571)
!10111 = !DILocation(line: 935, column: 34, scope: !10107)
!10112 = !DILocalVariable(name: "rolloff", arg: 2, scope: !10107, file: !3, line: 935, type: !391)
!10113 = !DILocation(line: 935, column: 62, scope: !10107)
!10114 = !DILocalVariable(name: "ro", scope: !10107, file: !3, line: 937, type: !571)
!10115 = !DILocation(line: 937, column: 6, scope: !10107)
!10116 = !DILocation(line: 939, column: 10, scope: !10107)
!10117 = !DILocation(line: 939, column: 2, scope: !10107)
!10118 = !DILocation(line: 941, column: 6, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 939, column: 19)
!10120 = !DILocation(line: 942, column: 3, scope: !10119)
!10121 = !DILocation(line: 944, column: 6, scope: !10119)
!10122 = !DILocation(line: 945, column: 3, scope: !10119)
!10123 = !DILocation(line: 948, column: 6, scope: !10119)
!10124 = !DILocation(line: 949, column: 3, scope: !10119)
!10125 = !DILocation(line: 952, column: 9, scope: !10107)
!10126 = !DILocation(line: 952, column: 18, scope: !10107)
!10127 = !DILocation(line: 952, column: 26, scope: !10107)
!10128 = !DILocation(line: 952, column: 24, scope: !10107)
!10129 = !DILocation(line: 952, column: 30, scope: !10107)
!10130 = !DILocation(line: 952, column: 15, scope: !10107)
!10131 = !DILocation(line: 952, column: 2, scope: !10107)
!10132 = distinct !DISubprogram(name: "stv090x_set_max_srate", scope: !3, file: !3, line: 875, type: !7308, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10133 = !DILocalVariable(name: "state", arg: 1, scope: !10132, file: !3, line: 875, type: !4654)
!10134 = !DILocation(line: 875, column: 56, scope: !10132)
!10135 = !DILocalVariable(name: "clk", arg: 2, scope: !10132, file: !3, line: 875, type: !571)
!10136 = !DILocation(line: 875, column: 67, scope: !10132)
!10137 = !DILocalVariable(name: "srate", arg: 3, scope: !10132, file: !3, line: 875, type: !571)
!10138 = !DILocation(line: 875, column: 76, scope: !10132)
!10139 = !DILocalVariable(name: "sym", scope: !10132, file: !3, line: 877, type: !571)
!10140 = !DILocation(line: 877, column: 6, scope: !10132)
!10141 = !DILocation(line: 879, column: 17, scope: !10132)
!10142 = !DILocation(line: 879, column: 23, scope: !10132)
!10143 = !DILocation(line: 879, column: 14, scope: !10132)
!10144 = !DILocation(line: 879, column: 8, scope: !10132)
!10145 = !DILocation(line: 880, column: 6, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 880, column: 6)
!10147 = !DILocation(line: 880, column: 12, scope: !10146)
!10148 = !DILocation(line: 880, column: 6, scope: !10132)
!10149 = !DILocation(line: 881, column: 11, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 880, column: 24)
!10151 = !DILocation(line: 881, column: 17, scope: !10150)
!10152 = !DILocation(line: 881, column: 8, scope: !10150)
!10153 = !DILocation(line: 882, column: 11, scope: !10150)
!10154 = !DILocation(line: 882, column: 18, scope: !10150)
!10155 = !DILocation(line: 882, column: 28, scope: !10150)
!10156 = !DILocation(line: 882, column: 33, scope: !10150)
!10157 = !DILocation(line: 882, column: 7, scope: !10150)
!10158 = !DILocation(line: 883, column: 2, scope: !10150)
!10159 = !DILocation(line: 883, column: 13, scope: !10160)
!10160 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 883, column: 13)
!10161 = !DILocation(line: 883, column: 19, scope: !10160)
!10162 = !DILocation(line: 883, column: 13, scope: !10146)
!10163 = !DILocation(line: 884, column: 11, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 883, column: 30)
!10165 = !DILocation(line: 884, column: 17, scope: !10164)
!10166 = !DILocation(line: 884, column: 8, scope: !10164)
!10167 = !DILocation(line: 885, column: 11, scope: !10164)
!10168 = !DILocation(line: 885, column: 18, scope: !10164)
!10169 = !DILocation(line: 885, column: 28, scope: !10164)
!10170 = !DILocation(line: 885, column: 33, scope: !10164)
!10171 = !DILocation(line: 885, column: 7, scope: !10164)
!10172 = !DILocation(line: 886, column: 2, scope: !10164)
!10173 = !DILocation(line: 887, column: 11, scope: !10174)
!10174 = distinct !DILexicalBlock(scope: !10160, file: !3, line: 886, column: 9)
!10175 = !DILocation(line: 887, column: 17, scope: !10174)
!10176 = !DILocation(line: 887, column: 8, scope: !10174)
!10177 = !DILocation(line: 888, column: 11, scope: !10174)
!10178 = !DILocation(line: 888, column: 18, scope: !10174)
!10179 = !DILocation(line: 888, column: 28, scope: !10174)
!10180 = !DILocation(line: 888, column: 33, scope: !10174)
!10181 = !DILocation(line: 888, column: 7, scope: !10174)
!10182 = !DILocation(line: 891, column: 6, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 891, column: 6)
!10184 = !DILocation(line: 891, column: 10, scope: !10183)
!10185 = !DILocation(line: 891, column: 6, scope: !10132)
!10186 = !DILocation(line: 892, column: 7, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 892, column: 7)
!10188 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 891, column: 20)
!10189 = !DILocation(line: 892, column: 61, scope: !10187)
!10190 = !DILocation(line: 892, column: 7, scope: !10188)
!10191 = !DILocation(line: 893, column: 4, scope: !10187)
!10192 = !DILocation(line: 894, column: 7, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 894, column: 7)
!10194 = !DILocation(line: 894, column: 54, scope: !10193)
!10195 = !DILocation(line: 894, column: 7, scope: !10188)
!10196 = !DILocation(line: 895, column: 4, scope: !10193)
!10197 = !DILocation(line: 896, column: 2, scope: !10188)
!10198 = !DILocation(line: 897, column: 7, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10200, file: !3, line: 897, column: 7)
!10200 = distinct !DILexicalBlock(scope: !10183, file: !3, line: 896, column: 9)
!10201 = !DILocation(line: 897, column: 48, scope: !10199)
!10202 = !DILocation(line: 897, column: 7, scope: !10200)
!10203 = !DILocation(line: 898, column: 4, scope: !10199)
!10204 = !DILocation(line: 899, column: 7, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10200, file: !3, line: 899, column: 7)
!10206 = !DILocation(line: 899, column: 48, scope: !10205)
!10207 = !DILocation(line: 899, column: 7, scope: !10200)
!10208 = !DILocation(line: 900, column: 4, scope: !10205)
!10209 = !DILocation(line: 903, column: 2, scope: !10132)
!10210 = !DILabel(scope: !10132, name: "err", file: !3, line: 904)
!10211 = !DILocation(line: 904, column: 1, scope: !10132)
!10212 = !DILocation(line: 905, column: 2, scope: !10132)
!10213 = !DILocation(line: 905, column: 2, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 905, column: 2)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 905, column: 2)
!10216 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 905, column: 2)
!10217 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 905, column: 2)
!10218 = !DILocation(line: 905, column: 2, scope: !10215)
!10219 = !DILocation(line: 905, column: 2, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 905, column: 2)
!10221 = !DILocation(line: 905, column: 2, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 905, column: 2)
!10223 = !DILocation(line: 905, column: 2, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10222, file: !3, line: 905, column: 2)
!10225 = !DILocation(line: 905, column: 2, scope: !10217)
!10226 = !DILocation(line: 906, column: 2, scope: !10132)
!10227 = !DILocation(line: 907, column: 1, scope: !10132)
!10228 = distinct !DISubprogram(name: "stv090x_set_min_srate", scope: !3, file: !3, line: 909, type: !7308, scopeLine: 910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10229 = !DILocalVariable(name: "state", arg: 1, scope: !10228, file: !3, line: 909, type: !4654)
!10230 = !DILocation(line: 909, column: 56, scope: !10228)
!10231 = !DILocalVariable(name: "clk", arg: 2, scope: !10228, file: !3, line: 909, type: !571)
!10232 = !DILocation(line: 909, column: 67, scope: !10228)
!10233 = !DILocalVariable(name: "srate", arg: 3, scope: !10228, file: !3, line: 909, type: !571)
!10234 = !DILocation(line: 909, column: 76, scope: !10228)
!10235 = !DILocalVariable(name: "sym", scope: !10228, file: !3, line: 911, type: !571)
!10236 = !DILocation(line: 911, column: 6, scope: !10228)
!10237 = !DILocation(line: 913, column: 16, scope: !10228)
!10238 = !DILocation(line: 913, column: 22, scope: !10228)
!10239 = !DILocation(line: 913, column: 13, scope: !10228)
!10240 = !DILocation(line: 913, column: 8, scope: !10228)
!10241 = !DILocation(line: 914, column: 6, scope: !10242)
!10242 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 914, column: 6)
!10243 = !DILocation(line: 914, column: 12, scope: !10242)
!10244 = !DILocation(line: 914, column: 6, scope: !10228)
!10245 = !DILocation(line: 915, column: 11, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 914, column: 24)
!10247 = !DILocation(line: 915, column: 17, scope: !10246)
!10248 = !DILocation(line: 915, column: 8, scope: !10246)
!10249 = !DILocation(line: 916, column: 11, scope: !10246)
!10250 = !DILocation(line: 916, column: 18, scope: !10246)
!10251 = !DILocation(line: 916, column: 28, scope: !10246)
!10252 = !DILocation(line: 916, column: 33, scope: !10246)
!10253 = !DILocation(line: 916, column: 7, scope: !10246)
!10254 = !DILocation(line: 917, column: 2, scope: !10246)
!10255 = !DILocation(line: 917, column: 13, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10242, file: !3, line: 917, column: 13)
!10257 = !DILocation(line: 917, column: 19, scope: !10256)
!10258 = !DILocation(line: 917, column: 13, scope: !10242)
!10259 = !DILocation(line: 918, column: 11, scope: !10260)
!10260 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 917, column: 30)
!10261 = !DILocation(line: 918, column: 17, scope: !10260)
!10262 = !DILocation(line: 918, column: 8, scope: !10260)
!10263 = !DILocation(line: 919, column: 11, scope: !10260)
!10264 = !DILocation(line: 919, column: 18, scope: !10260)
!10265 = !DILocation(line: 919, column: 28, scope: !10260)
!10266 = !DILocation(line: 919, column: 33, scope: !10260)
!10267 = !DILocation(line: 919, column: 7, scope: !10260)
!10268 = !DILocation(line: 920, column: 2, scope: !10260)
!10269 = !DILocation(line: 921, column: 11, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10256, file: !3, line: 920, column: 9)
!10271 = !DILocation(line: 921, column: 17, scope: !10270)
!10272 = !DILocation(line: 921, column: 8, scope: !10270)
!10273 = !DILocation(line: 922, column: 11, scope: !10270)
!10274 = !DILocation(line: 922, column: 18, scope: !10270)
!10275 = !DILocation(line: 922, column: 28, scope: !10270)
!10276 = !DILocation(line: 922, column: 33, scope: !10270)
!10277 = !DILocation(line: 922, column: 7, scope: !10270)
!10278 = !DILocation(line: 925, column: 6, scope: !10279)
!10279 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 925, column: 6)
!10280 = !DILocation(line: 925, column: 63, scope: !10279)
!10281 = !DILocation(line: 925, column: 6, scope: !10228)
!10282 = !DILocation(line: 926, column: 3, scope: !10279)
!10283 = !DILocation(line: 927, column: 6, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 927, column: 6)
!10285 = !DILocation(line: 927, column: 56, scope: !10284)
!10286 = !DILocation(line: 927, column: 6, scope: !10228)
!10287 = !DILocation(line: 928, column: 3, scope: !10284)
!10288 = !DILocation(line: 929, column: 2, scope: !10228)
!10289 = !DILabel(scope: !10228, name: "err", file: !3, line: 930)
!10290 = !DILocation(line: 930, column: 1, scope: !10228)
!10291 = !DILocation(line: 931, column: 2, scope: !10228)
!10292 = !DILocation(line: 931, column: 2, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 931, column: 2)
!10294 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 931, column: 2)
!10295 = distinct !DILexicalBlock(scope: !10296, file: !3, line: 931, column: 2)
!10296 = distinct !DILexicalBlock(scope: !10228, file: !3, line: 931, column: 2)
!10297 = !DILocation(line: 931, column: 2, scope: !10294)
!10298 = !DILocation(line: 931, column: 2, scope: !10299)
!10299 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 931, column: 2)
!10300 = !DILocation(line: 931, column: 2, scope: !10301)
!10301 = distinct !DILexicalBlock(scope: !10299, file: !3, line: 931, column: 2)
!10302 = !DILocation(line: 931, column: 2, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 931, column: 2)
!10304 = !DILocation(line: 931, column: 2, scope: !10296)
!10305 = !DILocation(line: 932, column: 2, scope: !10228)
!10306 = !DILocation(line: 933, column: 1, scope: !10228)
!10307 = distinct !DISubprogram(name: "stv090x_delivery_search", scope: !3, file: !3, line: 1265, type: !4652, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10308 = !DILocalVariable(name: "state", arg: 1, scope: !10307, file: !3, line: 1265, type: !4654)
!10309 = !DILocation(line: 1265, column: 58, scope: !10307)
!10310 = !DILocalVariable(name: "reg", scope: !10307, file: !3, line: 1267, type: !571)
!10311 = !DILocation(line: 1267, column: 6, scope: !10307)
!10312 = !DILocation(line: 1269, column: 10, scope: !10307)
!10313 = !DILocation(line: 1269, column: 17, scope: !10307)
!10314 = !DILocation(line: 1269, column: 2, scope: !10307)
!10315 = !DILocation(line: 1272, column: 9, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 1269, column: 30)
!10317 = !DILocation(line: 1272, column: 7, scope: !10316)
!10318 = !DILocation(line: 1273, column: 3, scope: !10316)
!10319 = !DILocation(line: 1274, column: 3, scope: !10316)
!10320 = !DILocation(line: 1275, column: 7, scope: !10321)
!10321 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1275, column: 7)
!10322 = !DILocation(line: 1275, column: 49, scope: !10321)
!10323 = !DILocation(line: 1275, column: 7, scope: !10316)
!10324 = !DILocation(line: 1276, column: 4, scope: !10321)
!10325 = !DILocation(line: 1281, column: 26, scope: !10326)
!10326 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1281, column: 7)
!10327 = !DILocation(line: 1281, column: 7, scope: !10326)
!10328 = !DILocation(line: 1281, column: 36, scope: !10326)
!10329 = !DILocation(line: 1281, column: 7, scope: !10316)
!10330 = !DILocation(line: 1282, column: 4, scope: !10326)
!10331 = !DILocation(line: 1284, column: 30, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1284, column: 7)
!10333 = !DILocation(line: 1284, column: 7, scope: !10332)
!10334 = !DILocation(line: 1284, column: 37, scope: !10332)
!10335 = !DILocation(line: 1284, column: 7, scope: !10316)
!10336 = !DILocation(line: 1285, column: 4, scope: !10332)
!10337 = !DILocation(line: 1287, column: 7, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1287, column: 7)
!10339 = !DILocation(line: 1287, column: 49, scope: !10338)
!10340 = !DILocation(line: 1287, column: 7, scope: !10316)
!10341 = !DILocation(line: 1288, column: 4, scope: !10338)
!10342 = !DILocation(line: 1290, column: 29, scope: !10343)
!10343 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1290, column: 7)
!10344 = !DILocation(line: 1290, column: 7, scope: !10343)
!10345 = !DILocation(line: 1290, column: 36, scope: !10343)
!10346 = !DILocation(line: 1290, column: 7, scope: !10316)
!10347 = !DILocation(line: 1291, column: 4, scope: !10343)
!10348 = !DILocation(line: 1292, column: 27, scope: !10349)
!10349 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1292, column: 7)
!10350 = !DILocation(line: 1292, column: 7, scope: !10349)
!10351 = !DILocation(line: 1292, column: 34, scope: !10349)
!10352 = !DILocation(line: 1292, column: 7, scope: !10316)
!10353 = !DILocation(line: 1293, column: 4, scope: !10349)
!10354 = !DILocation(line: 1294, column: 3, scope: !10316)
!10355 = !DILocation(line: 1297, column: 9, scope: !10316)
!10356 = !DILocation(line: 1297, column: 7, scope: !10316)
!10357 = !DILocation(line: 1298, column: 3, scope: !10316)
!10358 = !DILocation(line: 1299, column: 3, scope: !10316)
!10359 = !DILocation(line: 1300, column: 7, scope: !10360)
!10360 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1300, column: 7)
!10361 = !DILocation(line: 1300, column: 49, scope: !10360)
!10362 = !DILocation(line: 1300, column: 7, scope: !10316)
!10363 = !DILocation(line: 1301, column: 4, scope: !10360)
!10364 = !DILocation(line: 1302, column: 3, scope: !10316)
!10365 = !DILocation(line: 1303, column: 3, scope: !10316)
!10366 = !DILocation(line: 1304, column: 7, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1304, column: 7)
!10368 = !DILocation(line: 1304, column: 49, scope: !10367)
!10369 = !DILocation(line: 1304, column: 7, scope: !10316)
!10370 = !DILocation(line: 1305, column: 4, scope: !10367)
!10371 = !DILocation(line: 1307, column: 26, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1307, column: 7)
!10373 = !DILocation(line: 1307, column: 7, scope: !10372)
!10374 = !DILocation(line: 1307, column: 36, scope: !10372)
!10375 = !DILocation(line: 1307, column: 7, scope: !10316)
!10376 = !DILocation(line: 1308, column: 4, scope: !10372)
!10377 = !DILocation(line: 1310, column: 7, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1310, column: 7)
!10379 = !DILocation(line: 1310, column: 46, scope: !10378)
!10380 = !DILocation(line: 1310, column: 7, scope: !10316)
!10381 = !DILocation(line: 1311, column: 4, scope: !10378)
!10382 = !DILocation(line: 1312, column: 7, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1312, column: 7)
!10384 = !DILocation(line: 1312, column: 46, scope: !10383)
!10385 = !DILocation(line: 1312, column: 7, scope: !10316)
!10386 = !DILocation(line: 1313, column: 4, scope: !10383)
!10387 = !DILocation(line: 1315, column: 7, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1315, column: 7)
!10389 = !DILocation(line: 1315, column: 14, scope: !10388)
!10390 = !DILocation(line: 1315, column: 24, scope: !10388)
!10391 = !DILocation(line: 1315, column: 32, scope: !10388)
!10392 = !DILocation(line: 1315, column: 7, scope: !10316)
!10393 = !DILocation(line: 1317, column: 8, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 1317, column: 8)
!10395 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 1315, column: 41)
!10396 = !DILocation(line: 1317, column: 50, scope: !10394)
!10397 = !DILocation(line: 1317, column: 8, scope: !10395)
!10398 = !DILocation(line: 1318, column: 5, scope: !10394)
!10399 = !DILocation(line: 1319, column: 3, scope: !10395)
!10400 = !DILocation(line: 1321, column: 8, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10402, file: !3, line: 1321, column: 8)
!10402 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 1319, column: 10)
!10403 = !DILocation(line: 1321, column: 50, scope: !10401)
!10404 = !DILocation(line: 1321, column: 8, scope: !10402)
!10405 = !DILocation(line: 1322, column: 5, scope: !10401)
!10406 = !DILocation(line: 1325, column: 7, scope: !10407)
!10407 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1325, column: 7)
!10408 = !DILocation(line: 1325, column: 14, scope: !10407)
!10409 = !DILocation(line: 1325, column: 25, scope: !10407)
!10410 = !DILocation(line: 1325, column: 7, scope: !10316)
!10411 = !DILocation(line: 1327, column: 32, scope: !10412)
!10412 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 1327, column: 8)
!10413 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 1325, column: 44)
!10414 = !DILocation(line: 1327, column: 8, scope: !10412)
!10415 = !DILocation(line: 1327, column: 39, scope: !10412)
!10416 = !DILocation(line: 1327, column: 8, scope: !10413)
!10417 = !DILocation(line: 1328, column: 5, scope: !10412)
!10418 = !DILocation(line: 1329, column: 3, scope: !10413)
!10419 = !DILocation(line: 1334, column: 39, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 1334, column: 8)
!10421 = distinct !DILexicalBlock(scope: !10407, file: !3, line: 1329, column: 10)
!10422 = !DILocation(line: 1334, column: 8, scope: !10420)
!10423 = !DILocation(line: 1334, column: 46, scope: !10420)
!10424 = !DILocation(line: 1334, column: 8, scope: !10421)
!10425 = !DILocation(line: 1335, column: 5, scope: !10420)
!10426 = !DILocation(line: 1338, column: 31, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1338, column: 7)
!10428 = !DILocation(line: 1338, column: 7, scope: !10427)
!10429 = !DILocation(line: 1338, column: 38, scope: !10427)
!10430 = !DILocation(line: 1338, column: 7, scope: !10316)
!10431 = !DILocation(line: 1339, column: 4, scope: !10427)
!10432 = !DILocation(line: 1340, column: 3, scope: !10316)
!10433 = !DILocation(line: 1345, column: 9, scope: !10316)
!10434 = !DILocation(line: 1345, column: 7, scope: !10316)
!10435 = !DILocation(line: 1346, column: 3, scope: !10316)
!10436 = !DILocation(line: 1347, column: 3, scope: !10316)
!10437 = !DILocation(line: 1348, column: 7, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1348, column: 7)
!10439 = !DILocation(line: 1348, column: 49, scope: !10438)
!10440 = !DILocation(line: 1348, column: 7, scope: !10316)
!10441 = !DILocation(line: 1349, column: 4, scope: !10438)
!10442 = !DILocation(line: 1350, column: 3, scope: !10316)
!10443 = !DILocation(line: 1351, column: 3, scope: !10316)
!10444 = !DILocation(line: 1352, column: 7, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1352, column: 7)
!10446 = !DILocation(line: 1352, column: 49, scope: !10445)
!10447 = !DILocation(line: 1352, column: 7, scope: !10316)
!10448 = !DILocation(line: 1353, column: 4, scope: !10445)
!10449 = !DILocation(line: 1355, column: 26, scope: !10450)
!10450 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1355, column: 7)
!10451 = !DILocation(line: 1355, column: 7, scope: !10450)
!10452 = !DILocation(line: 1355, column: 36, scope: !10450)
!10453 = !DILocation(line: 1355, column: 7, scope: !10316)
!10454 = !DILocation(line: 1356, column: 4, scope: !10450)
!10455 = !DILocation(line: 1358, column: 30, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1358, column: 7)
!10457 = !DILocation(line: 1358, column: 7, scope: !10456)
!10458 = !DILocation(line: 1358, column: 37, scope: !10456)
!10459 = !DILocation(line: 1358, column: 7, scope: !10316)
!10460 = !DILocation(line: 1359, column: 4, scope: !10456)
!10461 = !DILocation(line: 1361, column: 7, scope: !10462)
!10462 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1361, column: 7)
!10463 = !DILocation(line: 1361, column: 14, scope: !10462)
!10464 = !DILocation(line: 1361, column: 24, scope: !10462)
!10465 = !DILocation(line: 1361, column: 32, scope: !10462)
!10466 = !DILocation(line: 1361, column: 7, scope: !10316)
!10467 = !DILocation(line: 1363, column: 8, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !3, line: 1363, column: 8)
!10469 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 1361, column: 41)
!10470 = !DILocation(line: 1363, column: 50, scope: !10468)
!10471 = !DILocation(line: 1363, column: 8, scope: !10469)
!10472 = !DILocation(line: 1364, column: 5, scope: !10468)
!10473 = !DILocation(line: 1365, column: 3, scope: !10469)
!10474 = !DILocation(line: 1367, column: 8, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10476, file: !3, line: 1367, column: 8)
!10476 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 1365, column: 10)
!10477 = !DILocation(line: 1367, column: 50, scope: !10475)
!10478 = !DILocation(line: 1367, column: 8, scope: !10476)
!10479 = !DILocation(line: 1368, column: 5, scope: !10475)
!10480 = !DILocation(line: 1371, column: 7, scope: !10481)
!10481 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1371, column: 7)
!10482 = !DILocation(line: 1371, column: 14, scope: !10481)
!10483 = !DILocation(line: 1371, column: 25, scope: !10481)
!10484 = !DILocation(line: 1371, column: 7, scope: !10316)
!10485 = !DILocation(line: 1373, column: 32, scope: !10486)
!10486 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 1373, column: 8)
!10487 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1371, column: 44)
!10488 = !DILocation(line: 1373, column: 8, scope: !10486)
!10489 = !DILocation(line: 1373, column: 39, scope: !10486)
!10490 = !DILocation(line: 1373, column: 8, scope: !10487)
!10491 = !DILocation(line: 1374, column: 5, scope: !10486)
!10492 = !DILocation(line: 1375, column: 3, scope: !10487)
!10493 = !DILocation(line: 1380, column: 39, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10495, file: !3, line: 1380, column: 8)
!10495 = distinct !DILexicalBlock(scope: !10481, file: !3, line: 1375, column: 10)
!10496 = !DILocation(line: 1380, column: 8, scope: !10494)
!10497 = !DILocation(line: 1380, column: 46, scope: !10494)
!10498 = !DILocation(line: 1380, column: 8, scope: !10495)
!10499 = !DILocation(line: 1381, column: 5, scope: !10494)
!10500 = !DILocation(line: 1384, column: 29, scope: !10501)
!10501 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1384, column: 7)
!10502 = !DILocation(line: 1384, column: 7, scope: !10501)
!10503 = !DILocation(line: 1384, column: 36, scope: !10501)
!10504 = !DILocation(line: 1384, column: 7, scope: !10316)
!10505 = !DILocation(line: 1385, column: 4, scope: !10501)
!10506 = !DILocation(line: 1387, column: 27, scope: !10507)
!10507 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 1387, column: 7)
!10508 = !DILocation(line: 1387, column: 7, scope: !10507)
!10509 = !DILocation(line: 1387, column: 34, scope: !10507)
!10510 = !DILocation(line: 1387, column: 7, scope: !10316)
!10511 = !DILocation(line: 1388, column: 4, scope: !10507)
!10512 = !DILocation(line: 1389, column: 3, scope: !10316)
!10513 = !DILocation(line: 1391, column: 2, scope: !10307)
!10514 = !DILabel(scope: !10307, name: "err", file: !3, line: 1392)
!10515 = !DILocation(line: 1392, column: 1, scope: !10307)
!10516 = !DILocation(line: 1393, column: 2, scope: !10307)
!10517 = !DILocation(line: 1393, column: 2, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10519, file: !3, line: 1393, column: 2)
!10519 = distinct !DILexicalBlock(scope: !10520, file: !3, line: 1393, column: 2)
!10520 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 1393, column: 2)
!10521 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 1393, column: 2)
!10522 = !DILocation(line: 1393, column: 2, scope: !10519)
!10523 = !DILocation(line: 1393, column: 2, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10518, file: !3, line: 1393, column: 2)
!10525 = !DILocation(line: 1393, column: 2, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 1393, column: 2)
!10527 = !DILocation(line: 1393, column: 2, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 1393, column: 2)
!10529 = !DILocation(line: 1393, column: 2, scope: !10521)
!10530 = !DILocation(line: 1394, column: 2, scope: !10307)
!10531 = !DILocation(line: 1395, column: 1, scope: !10307)
!10532 = distinct !DISubprogram(name: "stv090x_start_search", scope: !3, file: !3, line: 1397, type: !4652, scopeLine: 1398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10533 = !DILocalVariable(name: "state", arg: 1, scope: !10532, file: !3, line: 1397, type: !4654)
!10534 = !DILocation(line: 1397, column: 55, scope: !10532)
!10535 = !DILocalVariable(name: "reg", scope: !10532, file: !3, line: 1399, type: !571)
!10536 = !DILocation(line: 1399, column: 6, scope: !10532)
!10537 = !DILocalVariable(name: "freq_abs", scope: !10532, file: !3, line: 1399, type: !571)
!10538 = !DILocation(line: 1399, column: 11, scope: !10532)
!10539 = !DILocalVariable(name: "freq", scope: !10532, file: !3, line: 1400, type: !440)
!10540 = !DILocation(line: 1400, column: 6, scope: !10532)
!10541 = !DILocation(line: 1403, column: 8, scope: !10532)
!10542 = !DILocation(line: 1403, column: 6, scope: !10532)
!10543 = !DILocation(line: 1404, column: 2, scope: !10532)
!10544 = !DILocation(line: 1405, column: 6, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1405, column: 6)
!10546 = !DILocation(line: 1405, column: 49, scope: !10545)
!10547 = !DILocation(line: 1405, column: 6, scope: !10532)
!10548 = !DILocation(line: 1406, column: 3, scope: !10545)
!10549 = !DILocation(line: 1408, column: 6, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1408, column: 6)
!10551 = !DILocation(line: 1408, column: 13, scope: !10550)
!10552 = !DILocation(line: 1408, column: 23, scope: !10550)
!10553 = !DILocation(line: 1408, column: 31, scope: !10550)
!10554 = !DILocation(line: 1408, column: 6, scope: !10532)
!10555 = !DILocation(line: 1409, column: 7, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 1409, column: 7)
!10557 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 1408, column: 40)
!10558 = !DILocation(line: 1409, column: 14, scope: !10556)
!10559 = !DILocation(line: 1409, column: 20, scope: !10556)
!10560 = !DILocation(line: 1409, column: 7, scope: !10557)
!10561 = !DILocation(line: 1410, column: 8, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1410, column: 8)
!10563 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 1409, column: 32)
!10564 = !DILocation(line: 1410, column: 49, scope: !10562)
!10565 = !DILocation(line: 1410, column: 8, scope: !10563)
!10566 = !DILocation(line: 1411, column: 5, scope: !10562)
!10567 = !DILocation(line: 1412, column: 8, scope: !10568)
!10568 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1412, column: 8)
!10569 = !DILocation(line: 1412, column: 49, scope: !10568)
!10570 = !DILocation(line: 1412, column: 8, scope: !10563)
!10571 = !DILocation(line: 1413, column: 5, scope: !10568)
!10572 = !DILocation(line: 1414, column: 8, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1414, column: 8)
!10574 = !DILocation(line: 1414, column: 49, scope: !10573)
!10575 = !DILocation(line: 1414, column: 8, scope: !10563)
!10576 = !DILocation(line: 1415, column: 5, scope: !10573)
!10577 = !DILocation(line: 1416, column: 8, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1416, column: 8)
!10579 = !DILocation(line: 1416, column: 50, scope: !10578)
!10580 = !DILocation(line: 1416, column: 8, scope: !10563)
!10581 = !DILocation(line: 1417, column: 5, scope: !10578)
!10582 = !DILocation(line: 1418, column: 8, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1418, column: 8)
!10584 = !DILocation(line: 1418, column: 50, scope: !10583)
!10585 = !DILocation(line: 1418, column: 8, scope: !10563)
!10586 = !DILocation(line: 1419, column: 5, scope: !10583)
!10587 = !DILocation(line: 1422, column: 8, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1422, column: 8)
!10589 = !DILocation(line: 1422, column: 48, scope: !10588)
!10590 = !DILocation(line: 1422, column: 8, scope: !10563)
!10591 = !DILocation(line: 1423, column: 5, scope: !10588)
!10592 = !DILocation(line: 1424, column: 3, scope: !10563)
!10593 = !DILocation(line: 1427, column: 8, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 1427, column: 8)
!10595 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 1424, column: 10)
!10596 = !DILocation(line: 1427, column: 49, scope: !10594)
!10597 = !DILocation(line: 1427, column: 8, scope: !10595)
!10598 = !DILocation(line: 1428, column: 5, scope: !10594)
!10599 = !DILocation(line: 1430, column: 8, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 1430, column: 8)
!10601 = !DILocation(line: 1430, column: 48, scope: !10600)
!10602 = !DILocation(line: 1430, column: 8, scope: !10595)
!10603 = !DILocation(line: 1431, column: 5, scope: !10600)
!10604 = !DILocation(line: 1433, column: 2, scope: !10557)
!10605 = !DILocation(line: 1435, column: 7, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1435, column: 7)
!10607 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 1433, column: 9)
!10608 = !DILocation(line: 1435, column: 14, scope: !10606)
!10609 = !DILocation(line: 1435, column: 20, scope: !10606)
!10610 = !DILocation(line: 1435, column: 7, scope: !10607)
!10611 = !DILocation(line: 1437, column: 4, scope: !10612)
!10612 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 1435, column: 32)
!10613 = !DILocation(line: 1438, column: 3, scope: !10612)
!10614 = !DILocation(line: 1440, column: 4, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 1438, column: 10)
!10616 = !DILocation(line: 1444, column: 3, scope: !10607)
!10617 = !DILocation(line: 1446, column: 7, scope: !10618)
!10618 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1446, column: 7)
!10619 = !DILocation(line: 1446, column: 14, scope: !10618)
!10620 = !DILocation(line: 1446, column: 19, scope: !10618)
!10621 = !DILocation(line: 1446, column: 7, scope: !10607)
!10622 = !DILocation(line: 1451, column: 14, scope: !10623)
!10623 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 1446, column: 43)
!10624 = !DILocation(line: 1452, column: 17, scope: !10623)
!10625 = !DILocation(line: 1452, column: 24, scope: !10623)
!10626 = !DILocation(line: 1452, column: 34, scope: !10623)
!10627 = !DILocation(line: 1452, column: 39, scope: !10623)
!10628 = !DILocation(line: 1452, column: 13, scope: !10623)
!10629 = !DILocation(line: 1453, column: 22, scope: !10623)
!10630 = !DILocation(line: 1453, column: 16, scope: !10623)
!10631 = !DILocation(line: 1453, column: 14, scope: !10623)
!10632 = !DILocation(line: 1454, column: 3, scope: !10623)
!10633 = !DILocation(line: 1460, column: 17, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10618, file: !3, line: 1454, column: 10)
!10635 = !DILocation(line: 1460, column: 24, scope: !10634)
!10636 = !DILocation(line: 1460, column: 37, scope: !10634)
!10637 = !DILocation(line: 1460, column: 45, scope: !10634)
!10638 = !DILocation(line: 1460, column: 14, scope: !10634)
!10639 = !DILocation(line: 1461, column: 16, scope: !10634)
!10640 = !DILocation(line: 1461, column: 25, scope: !10634)
!10641 = !DILocation(line: 1461, column: 14, scope: !10634)
!10642 = !DILocation(line: 1462, column: 17, scope: !10634)
!10643 = !DILocation(line: 1462, column: 24, scope: !10634)
!10644 = !DILocation(line: 1462, column: 34, scope: !10634)
!10645 = !DILocation(line: 1462, column: 39, scope: !10634)
!10646 = !DILocation(line: 1462, column: 13, scope: !10634)
!10647 = !DILocation(line: 1463, column: 22, scope: !10634)
!10648 = !DILocation(line: 1463, column: 16, scope: !10634)
!10649 = !DILocation(line: 1463, column: 14, scope: !10634)
!10650 = !DILocation(line: 1466, column: 7, scope: !10651)
!10651 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1466, column: 7)
!10652 = !DILocation(line: 1466, column: 53, scope: !10651)
!10653 = !DILocation(line: 1466, column: 7, scope: !10607)
!10654 = !DILocation(line: 1467, column: 4, scope: !10651)
!10655 = !DILocation(line: 1468, column: 7, scope: !10656)
!10656 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1468, column: 7)
!10657 = !DILocation(line: 1468, column: 53, scope: !10656)
!10658 = !DILocation(line: 1468, column: 7, scope: !10607)
!10659 = !DILocation(line: 1469, column: 4, scope: !10656)
!10660 = !DILocation(line: 1471, column: 8, scope: !10607)
!10661 = !DILocation(line: 1473, column: 7, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1473, column: 7)
!10663 = !DILocation(line: 1473, column: 54, scope: !10662)
!10664 = !DILocation(line: 1473, column: 7, scope: !10607)
!10665 = !DILocation(line: 1474, column: 4, scope: !10662)
!10666 = !DILocation(line: 1475, column: 7, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 1475, column: 7)
!10668 = !DILocation(line: 1475, column: 54, scope: !10667)
!10669 = !DILocation(line: 1475, column: 7, scope: !10607)
!10670 = !DILocation(line: 1476, column: 4, scope: !10667)
!10671 = !DILocation(line: 1480, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1480, column: 6)
!10673 = !DILocation(line: 1480, column: 46, scope: !10672)
!10674 = !DILocation(line: 1480, column: 6, scope: !10532)
!10675 = !DILocation(line: 1481, column: 3, scope: !10672)
!10676 = !DILocation(line: 1482, column: 6, scope: !10677)
!10677 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1482, column: 6)
!10678 = !DILocation(line: 1482, column: 46, scope: !10677)
!10679 = !DILocation(line: 1482, column: 6, scope: !10532)
!10680 = !DILocation(line: 1483, column: 3, scope: !10677)
!10681 = !DILocation(line: 1485, column: 6, scope: !10682)
!10682 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1485, column: 6)
!10683 = !DILocation(line: 1485, column: 13, scope: !10682)
!10684 = !DILocation(line: 1485, column: 23, scope: !10682)
!10685 = !DILocation(line: 1485, column: 31, scope: !10682)
!10686 = !DILocation(line: 1485, column: 6, scope: !10532)
!10687 = !DILocation(line: 1486, column: 7, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1486, column: 7)
!10689 = distinct !DILexicalBlock(scope: !10682, file: !3, line: 1485, column: 40)
!10690 = !DILocation(line: 1486, column: 50, scope: !10688)
!10691 = !DILocation(line: 1486, column: 7, scope: !10689)
!10692 = !DILocation(line: 1487, column: 4, scope: !10688)
!10693 = !DILocation(line: 1488, column: 7, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1488, column: 7)
!10695 = !DILocation(line: 1488, column: 48, scope: !10694)
!10696 = !DILocation(line: 1488, column: 7, scope: !10689)
!10697 = !DILocation(line: 1489, column: 4, scope: !10694)
!10698 = !DILocation(line: 1491, column: 8, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 1491, column: 7)
!10700 = !DILocation(line: 1491, column: 15, scope: !10699)
!10701 = !DILocation(line: 1491, column: 27, scope: !10699)
!10702 = !DILocation(line: 1491, column: 52, scope: !10699)
!10703 = !DILocation(line: 1492, column: 5, scope: !10699)
!10704 = !DILocation(line: 1492, column: 12, scope: !10699)
!10705 = !DILocation(line: 1492, column: 24, scope: !10699)
!10706 = !DILocation(line: 1492, column: 47, scope: !10699)
!10707 = !DILocation(line: 1493, column: 5, scope: !10699)
!10708 = !DILocation(line: 1493, column: 12, scope: !10699)
!10709 = !DILocation(line: 1493, column: 24, scope: !10699)
!10710 = !DILocation(line: 1491, column: 7, scope: !10689)
!10711 = !DILocation(line: 1495, column: 8, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1495, column: 8)
!10713 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 1493, column: 49)
!10714 = !DILocation(line: 1495, column: 51, scope: !10712)
!10715 = !DILocation(line: 1495, column: 8, scope: !10713)
!10716 = !DILocation(line: 1496, column: 5, scope: !10712)
!10717 = !DILocation(line: 1497, column: 8, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10713, file: !3, line: 1497, column: 8)
!10719 = !DILocation(line: 1497, column: 51, scope: !10718)
!10720 = !DILocation(line: 1497, column: 8, scope: !10713)
!10721 = !DILocation(line: 1498, column: 5, scope: !10718)
!10722 = !DILocation(line: 1499, column: 3, scope: !10713)
!10723 = !DILocation(line: 1500, column: 2, scope: !10689)
!10724 = !DILocation(line: 1502, column: 6, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1502, column: 6)
!10726 = !DILocation(line: 1502, column: 48, scope: !10725)
!10727 = !DILocation(line: 1502, column: 6, scope: !10532)
!10728 = !DILocation(line: 1503, column: 3, scope: !10725)
!10729 = !DILocation(line: 1504, column: 6, scope: !10730)
!10730 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1504, column: 6)
!10731 = !DILocation(line: 1504, column: 50, scope: !10730)
!10732 = !DILocation(line: 1504, column: 6, scope: !10532)
!10733 = !DILocation(line: 1505, column: 3, scope: !10730)
!10734 = !DILocation(line: 1506, column: 6, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1506, column: 6)
!10736 = !DILocation(line: 1506, column: 50, scope: !10735)
!10737 = !DILocation(line: 1506, column: 6, scope: !10532)
!10738 = !DILocation(line: 1507, column: 3, scope: !10735)
!10739 = !DILocation(line: 1509, column: 8, scope: !10532)
!10740 = !DILocation(line: 1509, column: 6, scope: !10532)
!10741 = !DILocation(line: 1510, column: 2, scope: !10532)
!10742 = !DILocation(line: 1511, column: 2, scope: !10532)
!10743 = !DILocation(line: 1512, column: 6, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1512, column: 6)
!10745 = !DILocation(line: 1512, column: 48, scope: !10744)
!10746 = !DILocation(line: 1512, column: 6, scope: !10532)
!10747 = !DILocation(line: 1513, column: 3, scope: !10744)
!10748 = !DILocation(line: 1514, column: 8, scope: !10532)
!10749 = !DILocation(line: 1514, column: 6, scope: !10532)
!10750 = !DILocation(line: 1515, column: 2, scope: !10532)
!10751 = !DILocation(line: 1516, column: 6, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1516, column: 6)
!10753 = !DILocation(line: 1516, column: 47, scope: !10752)
!10754 = !DILocation(line: 1516, column: 6, scope: !10532)
!10755 = !DILocation(line: 1517, column: 3, scope: !10752)
!10756 = !DILocation(line: 1519, column: 6, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1519, column: 6)
!10758 = !DILocation(line: 1519, column: 44, scope: !10757)
!10759 = !DILocation(line: 1519, column: 6, scope: !10532)
!10760 = !DILocation(line: 1520, column: 3, scope: !10757)
!10761 = !DILocation(line: 1522, column: 6, scope: !10762)
!10762 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1522, column: 6)
!10763 = !DILocation(line: 1522, column: 13, scope: !10762)
!10764 = !DILocation(line: 1522, column: 23, scope: !10762)
!10765 = !DILocation(line: 1522, column: 31, scope: !10762)
!10766 = !DILocation(line: 1522, column: 6, scope: !10532)
!10767 = !DILocation(line: 1524, column: 7, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 1524, column: 7)
!10769 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1522, column: 40)
!10770 = !DILocation(line: 1524, column: 14, scope: !10768)
!10771 = !DILocation(line: 1524, column: 20, scope: !10768)
!10772 = !DILocation(line: 1524, column: 7, scope: !10769)
!10773 = !DILocation(line: 1525, column: 8, scope: !10774)
!10774 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 1525, column: 8)
!10775 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1524, column: 31)
!10776 = !DILocation(line: 1525, column: 15, scope: !10774)
!10777 = !DILocation(line: 1525, column: 25, scope: !10774)
!10778 = !DILocation(line: 1525, column: 33, scope: !10774)
!10779 = !DILocation(line: 1525, column: 8, scope: !10775)
!10780 = !DILocation(line: 1527, column: 9, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 1527, column: 9)
!10782 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 1525, column: 42)
!10783 = !DILocation(line: 1527, column: 51, scope: !10781)
!10784 = !DILocation(line: 1527, column: 9, scope: !10782)
!10785 = !DILocation(line: 1528, column: 6, scope: !10781)
!10786 = !DILocation(line: 1529, column: 4, scope: !10782)
!10787 = !DILocation(line: 1531, column: 9, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10789, file: !3, line: 1531, column: 9)
!10789 = distinct !DILexicalBlock(scope: !10774, file: !3, line: 1529, column: 11)
!10790 = !DILocation(line: 1531, column: 51, scope: !10788)
!10791 = !DILocation(line: 1531, column: 9, scope: !10789)
!10792 = !DILocation(line: 1532, column: 6, scope: !10788)
!10793 = !DILocation(line: 1534, column: 8, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10775, file: !3, line: 1534, column: 8)
!10795 = !DILocation(line: 1534, column: 49, scope: !10794)
!10796 = !DILocation(line: 1534, column: 8, scope: !10775)
!10797 = !DILocation(line: 1535, column: 5, scope: !10794)
!10798 = !DILocation(line: 1536, column: 3, scope: !10775)
!10799 = !DILocation(line: 1536, column: 14, scope: !10800)
!10800 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 1536, column: 14)
!10801 = !DILocation(line: 1536, column: 21, scope: !10800)
!10802 = !DILocation(line: 1536, column: 27, scope: !10800)
!10803 = !DILocation(line: 1536, column: 14, scope: !10768)
!10804 = !DILocation(line: 1537, column: 8, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 1537, column: 8)
!10806 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 1536, column: 39)
!10807 = !DILocation(line: 1537, column: 50, scope: !10805)
!10808 = !DILocation(line: 1537, column: 8, scope: !10806)
!10809 = !DILocation(line: 1538, column: 5, scope: !10805)
!10810 = !DILocation(line: 1539, column: 8, scope: !10811)
!10811 = distinct !DILexicalBlock(scope: !10806, file: !3, line: 1539, column: 8)
!10812 = !DILocation(line: 1539, column: 49, scope: !10811)
!10813 = !DILocation(line: 1539, column: 8, scope: !10806)
!10814 = !DILocation(line: 1540, column: 5, scope: !10811)
!10815 = !DILocation(line: 1541, column: 3, scope: !10806)
!10816 = !DILocation(line: 1542, column: 8, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 1542, column: 8)
!10818 = distinct !DILexicalBlock(scope: !10800, file: !3, line: 1541, column: 10)
!10819 = !DILocation(line: 1542, column: 50, scope: !10817)
!10820 = !DILocation(line: 1542, column: 8, scope: !10818)
!10821 = !DILocation(line: 1543, column: 5, scope: !10817)
!10822 = !DILocation(line: 1544, column: 8, scope: !10823)
!10823 = distinct !DILexicalBlock(scope: !10818, file: !3, line: 1544, column: 8)
!10824 = !DILocation(line: 1544, column: 49, scope: !10823)
!10825 = !DILocation(line: 1544, column: 8, scope: !10818)
!10826 = !DILocation(line: 1545, column: 5, scope: !10823)
!10827 = !DILocation(line: 1547, column: 2, scope: !10769)
!10828 = !DILocation(line: 1548, column: 7, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 1548, column: 7)
!10830 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1547, column: 9)
!10831 = !DILocation(line: 1548, column: 14, scope: !10829)
!10832 = !DILocation(line: 1548, column: 20, scope: !10829)
!10833 = !DILocation(line: 1548, column: 7, scope: !10830)
!10834 = !DILocation(line: 1549, column: 8, scope: !10835)
!10835 = distinct !DILexicalBlock(scope: !10836, file: !3, line: 1549, column: 8)
!10836 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 1548, column: 32)
!10837 = !DILocation(line: 1549, column: 50, scope: !10835)
!10838 = !DILocation(line: 1549, column: 8, scope: !10836)
!10839 = !DILocation(line: 1550, column: 5, scope: !10835)
!10840 = !DILocation(line: 1551, column: 3, scope: !10836)
!10841 = !DILocation(line: 1552, column: 8, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 1552, column: 8)
!10843 = distinct !DILexicalBlock(scope: !10829, file: !3, line: 1551, column: 10)
!10844 = !DILocation(line: 1552, column: 50, scope: !10842)
!10845 = !DILocation(line: 1552, column: 8, scope: !10843)
!10846 = !DILocation(line: 1553, column: 5, scope: !10842)
!10847 = !DILocation(line: 1557, column: 10, scope: !10532)
!10848 = !DILocation(line: 1557, column: 17, scope: !10532)
!10849 = !DILocation(line: 1557, column: 2, scope: !10532)
!10850 = !DILocation(line: 1562, column: 7, scope: !10851)
!10851 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1562, column: 7)
!10852 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1557, column: 23)
!10853 = !DILocation(line: 1562, column: 51, scope: !10851)
!10854 = !DILocation(line: 1562, column: 7, scope: !10852)
!10855 = !DILocation(line: 1563, column: 4, scope: !10851)
!10856 = !DILocation(line: 1564, column: 7, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1564, column: 7)
!10858 = !DILocation(line: 1564, column: 51, scope: !10857)
!10859 = !DILocation(line: 1564, column: 7, scope: !10852)
!10860 = !DILocation(line: 1565, column: 4, scope: !10857)
!10861 = !DILocation(line: 1566, column: 3, scope: !10852)
!10862 = !DILocation(line: 1570, column: 7, scope: !10863)
!10863 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1570, column: 7)
!10864 = !DILocation(line: 1570, column: 51, scope: !10863)
!10865 = !DILocation(line: 1570, column: 7, scope: !10852)
!10866 = !DILocation(line: 1571, column: 4, scope: !10863)
!10867 = !DILocation(line: 1572, column: 7, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10852, file: !3, line: 1572, column: 7)
!10869 = !DILocation(line: 1572, column: 51, scope: !10868)
!10870 = !DILocation(line: 1572, column: 7, scope: !10852)
!10871 = !DILocation(line: 1573, column: 4, scope: !10868)
!10872 = !DILocation(line: 1574, column: 3, scope: !10852)
!10873 = !DILocation(line: 1577, column: 3, scope: !10852)
!10874 = !DILocation(line: 1579, column: 2, scope: !10532)
!10875 = !DILabel(scope: !10532, name: "err", file: !3, line: 1580)
!10876 = !DILocation(line: 1580, column: 1, scope: !10532)
!10877 = !DILocation(line: 1581, column: 2, scope: !10532)
!10878 = !DILocation(line: 1581, column: 2, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10880, file: !3, line: 1581, column: 2)
!10880 = distinct !DILexicalBlock(scope: !10881, file: !3, line: 1581, column: 2)
!10881 = distinct !DILexicalBlock(scope: !10882, file: !3, line: 1581, column: 2)
!10882 = distinct !DILexicalBlock(scope: !10532, file: !3, line: 1581, column: 2)
!10883 = !DILocation(line: 1581, column: 2, scope: !10880)
!10884 = !DILocation(line: 1581, column: 2, scope: !10885)
!10885 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 1581, column: 2)
!10886 = !DILocation(line: 1581, column: 2, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10885, file: !3, line: 1581, column: 2)
!10888 = !DILocation(line: 1581, column: 2, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 1581, column: 2)
!10890 = !DILocation(line: 1581, column: 2, scope: !10882)
!10891 = !DILocation(line: 1582, column: 2, scope: !10532)
!10892 = !DILocation(line: 1583, column: 1, scope: !10532)
!10893 = distinct !DISubprogram(name: "stv090x_blind_search", scope: !3, file: !3, line: 1976, type: !4652, scopeLine: 1977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!10894 = !DILocalVariable(name: "state", arg: 1, scope: !10893, file: !3, line: 1976, type: !4654)
!10895 = !DILocation(line: 1976, column: 55, scope: !10893)
!10896 = !DILocalVariable(name: "agc2", scope: !10893, file: !3, line: 1978, type: !571)
!10897 = !DILocation(line: 1978, column: 6, scope: !10893)
!10898 = !DILocalVariable(name: "reg", scope: !10893, file: !3, line: 1978, type: !571)
!10899 = !DILocation(line: 1978, column: 12, scope: !10893)
!10900 = !DILocalVariable(name: "srate_coarse", scope: !10893, file: !3, line: 1978, type: !571)
!10901 = !DILocation(line: 1978, column: 17, scope: !10893)
!10902 = !DILocalVariable(name: "cpt_fail", scope: !10893, file: !3, line: 1979, type: !445)
!10903 = !DILocation(line: 1979, column: 6, scope: !10893)
!10904 = !DILocalVariable(name: "agc2_ovflw", scope: !10893, file: !3, line: 1979, type: !445)
!10905 = !DILocation(line: 1979, column: 16, scope: !10893)
!10906 = !DILocalVariable(name: "i", scope: !10893, file: !3, line: 1979, type: !445)
!10907 = !DILocation(line: 1979, column: 28, scope: !10893)
!10908 = !DILocalVariable(name: "k_ref", scope: !10893, file: !3, line: 1980, type: !492)
!10909 = !DILocation(line: 1980, column: 5, scope: !10893)
!10910 = !DILocalVariable(name: "k_max", scope: !10893, file: !3, line: 1980, type: !492)
!10911 = !DILocation(line: 1980, column: 12, scope: !10893)
!10912 = !DILocalVariable(name: "k_min", scope: !10893, file: !3, line: 1980, type: !492)
!10913 = !DILocation(line: 1980, column: 19, scope: !10893)
!10914 = !DILocalVariable(name: "coarse_fail", scope: !10893, file: !3, line: 1981, type: !439)
!10915 = !DILocation(line: 1981, column: 6, scope: !10893)
!10916 = !DILocalVariable(name: "lock", scope: !10893, file: !3, line: 1982, type: !439)
!10917 = !DILocation(line: 1982, column: 6, scope: !10893)
!10918 = !DILocation(line: 1984, column: 8, scope: !10893)
!10919 = !DILocation(line: 1985, column: 8, scope: !10893)
!10920 = !DILocation(line: 1987, column: 36, scope: !10893)
!10921 = !DILocation(line: 1987, column: 9, scope: !10893)
!10922 = !DILocation(line: 1987, column: 7, scope: !10893)
!10923 = !DILocation(line: 1989, column: 6, scope: !10924)
!10924 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 1989, column: 6)
!10925 = !DILocation(line: 1989, column: 13, scope: !10924)
!10926 = !DILocation(line: 1989, column: 11, scope: !10924)
!10927 = !DILocation(line: 1989, column: 6, scope: !10893)
!10928 = !DILocation(line: 1990, column: 8, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 1989, column: 63)
!10930 = !DILocation(line: 1991, column: 2, scope: !10929)
!10931 = !DILocation(line: 1993, column: 7, scope: !10932)
!10932 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 1993, column: 7)
!10933 = distinct !DILexicalBlock(scope: !10924, file: !3, line: 1991, column: 9)
!10934 = !DILocation(line: 1993, column: 14, scope: !10932)
!10935 = !DILocation(line: 1993, column: 24, scope: !10932)
!10936 = !DILocation(line: 1993, column: 32, scope: !10932)
!10937 = !DILocation(line: 1993, column: 7, scope: !10933)
!10938 = !DILocation(line: 1994, column: 8, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 1994, column: 8)
!10940 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 1993, column: 41)
!10941 = !DILocation(line: 1994, column: 49, scope: !10939)
!10942 = !DILocation(line: 1994, column: 8, scope: !10940)
!10943 = !DILocation(line: 1995, column: 5, scope: !10939)
!10944 = !DILocation(line: 1996, column: 3, scope: !10940)
!10945 = !DILocation(line: 1998, column: 8, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 1998, column: 8)
!10947 = distinct !DILexicalBlock(scope: !10932, file: !3, line: 1996, column: 10)
!10948 = !DILocation(line: 1998, column: 49, scope: !10946)
!10949 = !DILocation(line: 1998, column: 8, scope: !10947)
!10950 = !DILocation(line: 1999, column: 5, scope: !10946)
!10951 = !DILocation(line: 2002, column: 7, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 2002, column: 7)
!10953 = !DILocation(line: 2002, column: 47, scope: !10952)
!10954 = !DILocation(line: 2002, column: 7, scope: !10933)
!10955 = !DILocation(line: 2003, column: 4, scope: !10952)
!10956 = !DILocation(line: 2005, column: 7, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 2005, column: 7)
!10958 = !DILocation(line: 2005, column: 14, scope: !10957)
!10959 = !DILocation(line: 2005, column: 24, scope: !10957)
!10960 = !DILocation(line: 2005, column: 32, scope: !10957)
!10961 = !DILocation(line: 2005, column: 7, scope: !10933)
!10962 = !DILocation(line: 2006, column: 8, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 2006, column: 8)
!10964 = distinct !DILexicalBlock(scope: !10957, file: !3, line: 2005, column: 41)
!10965 = !DILocation(line: 2006, column: 51, scope: !10963)
!10966 = !DILocation(line: 2006, column: 8, scope: !10964)
!10967 = !DILocation(line: 2007, column: 5, scope: !10963)
!10968 = !DILocation(line: 2008, column: 8, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 2008, column: 8)
!10970 = !DILocation(line: 2008, column: 49, scope: !10969)
!10971 = !DILocation(line: 2008, column: 8, scope: !10964)
!10972 = !DILocation(line: 2009, column: 5, scope: !10969)
!10973 = !DILocation(line: 2010, column: 8, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 2010, column: 8)
!10975 = !DILocation(line: 2010, column: 51, scope: !10974)
!10976 = !DILocation(line: 2010, column: 8, scope: !10964)
!10977 = !DILocation(line: 2011, column: 5, scope: !10974)
!10978 = !DILocation(line: 2012, column: 8, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10964, file: !3, line: 2012, column: 8)
!10980 = !DILocation(line: 2012, column: 51, scope: !10979)
!10981 = !DILocation(line: 2012, column: 8, scope: !10964)
!10982 = !DILocation(line: 2013, column: 5, scope: !10979)
!10983 = !DILocation(line: 2014, column: 3, scope: !10964)
!10984 = !DILocation(line: 2016, column: 11, scope: !10933)
!10985 = !DILocation(line: 2016, column: 9, scope: !10933)
!10986 = !DILocation(line: 2017, column: 3, scope: !10933)
!10987 = !DILocation(line: 2018, column: 8, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 2018, column: 8)
!10989 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 2017, column: 6)
!10990 = !DILocation(line: 2018, column: 51, scope: !10988)
!10991 = !DILocation(line: 2018, column: 8, scope: !10989)
!10992 = !DILocation(line: 2019, column: 5, scope: !10988)
!10993 = !DILocation(line: 2020, column: 34, scope: !10994)
!10994 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 2020, column: 8)
!10995 = !DILocation(line: 2020, column: 8, scope: !10994)
!10996 = !DILocation(line: 2020, column: 41, scope: !10994)
!10997 = !DILocation(line: 2020, column: 8, scope: !10989)
!10998 = !DILocation(line: 2021, column: 44, scope: !10999)
!10999 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 2020, column: 47)
!11000 = !DILocation(line: 2021, column: 20, scope: !10999)
!11001 = !DILocation(line: 2021, column: 18, scope: !10999)
!11002 = !DILocation(line: 2022, column: 9, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10999, file: !3, line: 2022, column: 9)
!11004 = !DILocation(line: 2022, column: 22, scope: !11003)
!11005 = !DILocation(line: 2022, column: 9, scope: !10999)
!11006 = !DILocation(line: 2023, column: 27, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 2022, column: 28)
!11008 = !DILocation(line: 2023, column: 6, scope: !11007)
!11009 = !DILocation(line: 2024, column: 33, scope: !11007)
!11010 = !DILocation(line: 2025, column: 8, scope: !11007)
!11011 = !DILocation(line: 2025, column: 15, scope: !11007)
!11012 = !DILocation(line: 2024, column: 13, scope: !11007)
!11013 = !DILocation(line: 2024, column: 11, scope: !11007)
!11014 = !DILocation(line: 2026, column: 5, scope: !11007)
!11015 = !DILocation(line: 2027, column: 11, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 2026, column: 12)
!11017 = !DILocation(line: 2029, column: 4, scope: !10999)
!11018 = !DILocation(line: 2030, column: 14, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10994, file: !3, line: 2029, column: 11)
!11020 = !DILocation(line: 2031, column: 16, scope: !11019)
!11021 = !DILocation(line: 2032, column: 12, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 2032, column: 5)
!11023 = !DILocation(line: 2032, column: 10, scope: !11022)
!11024 = !DILocation(line: 2032, column: 17, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 2032, column: 5)
!11026 = !DILocation(line: 2032, column: 19, scope: !11025)
!11027 = !DILocation(line: 2032, column: 5, scope: !11022)
!11028 = !DILocation(line: 2033, column: 15, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 2032, column: 30)
!11030 = !DILocation(line: 2033, column: 49, scope: !11029)
!11031 = !DILocation(line: 2034, column: 7, scope: !11029)
!11032 = !DILocation(line: 2033, column: 55, scope: !11029)
!11033 = !DILocation(line: 2033, column: 11, scope: !11029)
!11034 = !DILocation(line: 2035, column: 10, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 2035, column: 10)
!11036 = !DILocation(line: 2035, column: 15, scope: !11035)
!11037 = !DILocation(line: 2035, column: 10, scope: !11029)
!11038 = !DILocation(line: 2036, column: 17, scope: !11035)
!11039 = !DILocation(line: 2036, column: 7, scope: !11035)
!11040 = !DILocation(line: 2037, column: 12, scope: !11029)
!11041 = !DILocation(line: 2037, column: 10, scope: !11029)
!11042 = !DILocation(line: 2038, column: 11, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11029, file: !3, line: 2038, column: 10)
!11044 = !DILocation(line: 2038, column: 56, scope: !11043)
!11045 = !DILocation(line: 2038, column: 65, scope: !11043)
!11046 = !DILocation(line: 2039, column: 11, scope: !11043)
!11047 = !DILocation(line: 2039, column: 56, scope: !11043)
!11048 = !DILocation(line: 2038, column: 10, scope: !11029)
!11049 = !DILocation(line: 2041, column: 15, scope: !11043)
!11050 = !DILocation(line: 2041, column: 7, scope: !11043)
!11051 = !DILocation(line: 2042, column: 5, scope: !11029)
!11052 = !DILocation(line: 2032, column: 26, scope: !11025)
!11053 = !DILocation(line: 2032, column: 5, scope: !11025)
!11054 = distinct !{!11054, !11027, !11055}
!11055 = !DILocation(line: 2042, column: 5, scope: !11022)
!11056 = !DILocation(line: 2043, column: 10, scope: !11057)
!11057 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 2043, column: 9)
!11058 = !DILocation(line: 2043, column: 19, scope: !11057)
!11059 = !DILocation(line: 2043, column: 24, scope: !11057)
!11060 = !DILocation(line: 2043, column: 28, scope: !11057)
!11061 = !DILocation(line: 2043, column: 39, scope: !11057)
!11062 = !DILocation(line: 2043, column: 9, scope: !11019)
!11063 = !DILocation(line: 2044, column: 18, scope: !11057)
!11064 = !DILocation(line: 2044, column: 6, scope: !11057)
!11065 = !DILocation(line: 2046, column: 10, scope: !11019)
!11066 = !DILocation(line: 2048, column: 10, scope: !10989)
!11067 = !DILocation(line: 2049, column: 3, scope: !10989)
!11068 = !DILocation(line: 2049, column: 13, scope: !10933)
!11069 = !DILocation(line: 2049, column: 22, scope: !10933)
!11070 = !DILocation(line: 2049, column: 19, scope: !10933)
!11071 = !DILocation(line: 2049, column: 29, scope: !10933)
!11072 = !DILocation(line: 2049, column: 34, scope: !10933)
!11073 = !DILocation(line: 2049, column: 40, scope: !10933)
!11074 = !DILocation(line: 2049, column: 45, scope: !10933)
!11075 = !DILocation(line: 2049, column: 44, scope: !10933)
!11076 = !DILocation(line: 0, scope: !10933)
!11077 = distinct !{!11077, !10986, !11078}
!11078 = !DILocation(line: 2049, column: 57, scope: !10933)
!11079 = !DILocation(line: 2052, column: 9, scope: !10893)
!11080 = !DILocation(line: 2052, column: 2, scope: !10893)
!11081 = !DILabel(scope: !10893, name: "err", file: !3, line: 2054)
!11082 = !DILocation(line: 2054, column: 1, scope: !10893)
!11083 = !DILocation(line: 2055, column: 2, scope: !10893)
!11084 = !DILocation(line: 2055, column: 2, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !11086, file: !3, line: 2055, column: 2)
!11086 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 2055, column: 2)
!11087 = distinct !DILexicalBlock(scope: !11088, file: !3, line: 2055, column: 2)
!11088 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 2055, column: 2)
!11089 = !DILocation(line: 2055, column: 2, scope: !11086)
!11090 = !DILocation(line: 2055, column: 2, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11085, file: !3, line: 2055, column: 2)
!11092 = !DILocation(line: 2055, column: 2, scope: !11093)
!11093 = distinct !DILexicalBlock(scope: !11091, file: !3, line: 2055, column: 2)
!11094 = !DILocation(line: 2055, column: 2, scope: !11095)
!11095 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 2055, column: 2)
!11096 = !DILocation(line: 2055, column: 2, scope: !11088)
!11097 = !DILocation(line: 2056, column: 2, scope: !10893)
!11098 = !DILocation(line: 2057, column: 1, scope: !10893)
!11099 = distinct !DISubprogram(name: "stv090x_get_coldlock", scope: !3, file: !3, line: 2127, type: !11100, scopeLine: 2128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!11100 = !DISubroutineType(types: !11101)
!11101 = !{!439, !4654, !445}
!11102 = !DILocalVariable(name: "state", arg: 1, scope: !11099, file: !3, line: 2127, type: !4654)
!11103 = !DILocation(line: 2127, column: 55, scope: !11099)
!11104 = !DILocalVariable(name: "timeout_dmd", arg: 2, scope: !11099, file: !3, line: 2127, type: !445)
!11105 = !DILocation(line: 2127, column: 66, scope: !11099)
!11106 = !DILocalVariable(name: "fe", scope: !11099, file: !3, line: 2129, type: !588)
!11107 = !DILocation(line: 2129, column: 23, scope: !11099)
!11108 = !DILocation(line: 2129, column: 29, scope: !11099)
!11109 = !DILocation(line: 2129, column: 36, scope: !11099)
!11110 = !DILocalVariable(name: "reg", scope: !11099, file: !3, line: 2131, type: !571)
!11111 = !DILocation(line: 2131, column: 6, scope: !11099)
!11112 = !DILocalVariable(name: "car_step", scope: !11099, file: !3, line: 2132, type: !445)
!11113 = !DILocation(line: 2132, column: 6, scope: !11099)
!11114 = !DILocalVariable(name: "steps", scope: !11099, file: !3, line: 2132, type: !445)
!11115 = !DILocation(line: 2132, column: 16, scope: !11099)
!11116 = !DILocalVariable(name: "cur_step", scope: !11099, file: !3, line: 2132, type: !445)
!11117 = !DILocation(line: 2132, column: 23, scope: !11099)
!11118 = !DILocalVariable(name: "dir", scope: !11099, file: !3, line: 2132, type: !445)
!11119 = !DILocation(line: 2132, column: 33, scope: !11099)
!11120 = !DILocalVariable(name: "freq", scope: !11099, file: !3, line: 2132, type: !445)
!11121 = !DILocation(line: 2132, column: 38, scope: !11099)
!11122 = !DILocalVariable(name: "timeout_lock", scope: !11099, file: !3, line: 2132, type: !445)
!11123 = !DILocation(line: 2132, column: 44, scope: !11099)
!11124 = !DILocalVariable(name: "lock", scope: !11099, file: !3, line: 2133, type: !439)
!11125 = !DILocation(line: 2133, column: 6, scope: !11099)
!11126 = !DILocation(line: 2135, column: 6, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2135, column: 6)
!11128 = !DILocation(line: 2135, column: 13, scope: !11127)
!11129 = !DILocation(line: 2135, column: 19, scope: !11127)
!11130 = !DILocation(line: 2135, column: 6, scope: !11099)
!11131 = !DILocation(line: 2136, column: 18, scope: !11127)
!11132 = !DILocation(line: 2136, column: 30, scope: !11127)
!11133 = !DILocation(line: 2136, column: 16, scope: !11127)
!11134 = !DILocation(line: 2136, column: 3, scope: !11127)
!11135 = !DILocation(line: 2138, column: 18, scope: !11127)
!11136 = !DILocation(line: 2138, column: 30, scope: !11127)
!11137 = !DILocation(line: 2138, column: 16, scope: !11127)
!11138 = !DILocation(line: 2140, column: 29, scope: !11099)
!11139 = !DILocation(line: 2140, column: 36, scope: !11099)
!11140 = !DILocation(line: 2140, column: 9, scope: !11099)
!11141 = !DILocation(line: 2140, column: 7, scope: !11099)
!11142 = !DILocation(line: 2141, column: 6, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2141, column: 6)
!11144 = !DILocation(line: 2141, column: 6, scope: !11099)
!11145 = !DILocation(line: 2142, column: 10, scope: !11143)
!11146 = !DILocation(line: 2142, column: 3, scope: !11143)
!11147 = !DILocation(line: 2144, column: 6, scope: !11148)
!11148 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2144, column: 6)
!11149 = !DILocation(line: 2144, column: 13, scope: !11148)
!11150 = !DILocation(line: 2144, column: 19, scope: !11148)
!11151 = !DILocation(line: 2144, column: 6, scope: !11099)
!11152 = !DILocation(line: 2145, column: 23, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 2145, column: 7)
!11154 = distinct !DILexicalBlock(scope: !11148, file: !3, line: 2144, column: 32)
!11155 = !DILocation(line: 2145, column: 7, scope: !11153)
!11156 = !DILocation(line: 2145, column: 7, scope: !11154)
!11157 = !DILocation(line: 2146, column: 8, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 2146, column: 8)
!11159 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 2145, column: 31)
!11160 = !DILocation(line: 2146, column: 52, scope: !11158)
!11161 = !DILocation(line: 2146, column: 8, scope: !11159)
!11162 = !DILocation(line: 2147, column: 5, scope: !11158)
!11163 = !DILocation(line: 2148, column: 8, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 2148, column: 8)
!11165 = !DILocation(line: 2148, column: 52, scope: !11164)
!11166 = !DILocation(line: 2148, column: 8, scope: !11159)
!11167 = !DILocation(line: 2149, column: 5, scope: !11164)
!11168 = !DILocation(line: 2150, column: 31, scope: !11159)
!11169 = !DILocation(line: 2150, column: 38, scope: !11159)
!11170 = !DILocation(line: 2150, column: 11, scope: !11159)
!11171 = !DILocation(line: 2150, column: 4, scope: !11159)
!11172 = !DILocation(line: 2152, column: 3, scope: !11154)
!11173 = !DILocation(line: 2155, column: 6, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2155, column: 6)
!11175 = !DILocation(line: 2155, column: 13, scope: !11174)
!11176 = !DILocation(line: 2155, column: 19, scope: !11174)
!11177 = !DILocation(line: 2155, column: 6, scope: !11099)
!11178 = !DILocation(line: 2156, column: 12, scope: !11174)
!11179 = !DILocation(line: 2156, column: 3, scope: !11174)
!11180 = !DILocation(line: 2157, column: 11, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 2157, column: 11)
!11182 = !DILocation(line: 2157, column: 18, scope: !11181)
!11183 = !DILocation(line: 2157, column: 24, scope: !11181)
!11184 = !DILocation(line: 2157, column: 11, scope: !11174)
!11185 = !DILocation(line: 2158, column: 12, scope: !11181)
!11186 = !DILocation(line: 2158, column: 3, scope: !11181)
!11187 = !DILocation(line: 2159, column: 11, scope: !11188)
!11188 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 2159, column: 11)
!11189 = !DILocation(line: 2159, column: 18, scope: !11188)
!11190 = !DILocation(line: 2159, column: 24, scope: !11188)
!11191 = !DILocation(line: 2159, column: 11, scope: !11181)
!11192 = !DILocation(line: 2160, column: 12, scope: !11188)
!11193 = !DILocation(line: 2160, column: 3, scope: !11188)
!11194 = !DILocation(line: 2162, column: 12, scope: !11188)
!11195 = !DILocation(line: 2164, column: 12, scope: !11099)
!11196 = !DILocation(line: 2164, column: 19, scope: !11099)
!11197 = !DILocation(line: 2164, column: 32, scope: !11099)
!11198 = !DILocation(line: 2164, column: 42, scope: !11099)
!11199 = !DILocation(line: 2164, column: 40, scope: !11099)
!11200 = !DILocation(line: 2164, column: 9, scope: !11099)
!11201 = !DILocation(line: 2165, column: 8, scope: !11099)
!11202 = !DILocation(line: 2166, column: 16, scope: !11099)
!11203 = !DILocation(line: 2166, column: 22, scope: !11099)
!11204 = !DILocation(line: 2166, column: 13, scope: !11099)
!11205 = !DILocation(line: 2166, column: 9, scope: !11099)
!11206 = !DILocation(line: 2167, column: 6, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2167, column: 6)
!11208 = !DILocation(line: 2167, column: 12, scope: !11207)
!11209 = !DILocation(line: 2167, column: 6, scope: !11099)
!11210 = !DILocation(line: 2168, column: 9, scope: !11207)
!11211 = !DILocation(line: 2168, column: 3, scope: !11207)
!11212 = !DILocation(line: 2169, column: 11, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 2169, column: 11)
!11214 = !DILocation(line: 2169, column: 17, scope: !11213)
!11215 = !DILocation(line: 2169, column: 11, scope: !11207)
!11216 = !DILocation(line: 2170, column: 9, scope: !11213)
!11217 = !DILocation(line: 2170, column: 3, scope: !11213)
!11218 = !DILocation(line: 2172, column: 11, scope: !11099)
!11219 = !DILocation(line: 2173, column: 6, scope: !11099)
!11220 = !DILocation(line: 2175, column: 9, scope: !11099)
!11221 = !DILocation(line: 2175, column: 16, scope: !11099)
!11222 = !DILocation(line: 2175, column: 7, scope: !11099)
!11223 = !DILocation(line: 2176, column: 38, scope: !11099)
!11224 = !DILocation(line: 2176, column: 45, scope: !11099)
!11225 = !DILocation(line: 2176, column: 52, scope: !11099)
!11226 = !DILocation(line: 2176, column: 59, scope: !11099)
!11227 = !DILocation(line: 2176, column: 20, scope: !11099)
!11228 = !DILocation(line: 2176, column: 70, scope: !11099)
!11229 = !DILocation(line: 2176, column: 77, scope: !11099)
!11230 = !DILocation(line: 2176, column: 68, scope: !11099)
!11231 = !DILocation(line: 2176, column: 2, scope: !11099)
!11232 = !DILocation(line: 2176, column: 9, scope: !11099)
!11233 = !DILocation(line: 2176, column: 18, scope: !11099)
!11234 = !DILocation(line: 2177, column: 2, scope: !11099)
!11235 = !DILocation(line: 2177, column: 10, scope: !11099)
!11236 = !DILocation(line: 2177, column: 22, scope: !11099)
!11237 = !DILocation(line: 2177, column: 19, scope: !11099)
!11238 = !DILocation(line: 2177, column: 29, scope: !11099)
!11239 = !DILocation(line: 2177, column: 34, scope: !11099)
!11240 = !DILocation(line: 2177, column: 33, scope: !11099)
!11241 = !DILocation(line: 0, scope: !11099)
!11242 = !DILocation(line: 2178, column: 7, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2178, column: 7)
!11244 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2177, column: 41)
!11245 = !DILocation(line: 2178, column: 11, scope: !11243)
!11246 = !DILocation(line: 2178, column: 7, scope: !11244)
!11247 = !DILocation(line: 2179, column: 12, scope: !11243)
!11248 = !DILocation(line: 2179, column: 23, scope: !11243)
!11249 = !DILocation(line: 2179, column: 21, scope: !11243)
!11250 = !DILocation(line: 2179, column: 9, scope: !11243)
!11251 = !DILocation(line: 2179, column: 4, scope: !11243)
!11252 = !DILocation(line: 2181, column: 12, scope: !11243)
!11253 = !DILocation(line: 2181, column: 23, scope: !11243)
!11254 = !DILocation(line: 2181, column: 21, scope: !11243)
!11255 = !DILocation(line: 2181, column: 9, scope: !11243)
!11256 = !DILocation(line: 2184, column: 29, scope: !11257)
!11257 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2184, column: 7)
!11258 = !DILocation(line: 2184, column: 7, scope: !11257)
!11259 = !DILocation(line: 2184, column: 39, scope: !11257)
!11260 = !DILocation(line: 2184, column: 7, scope: !11244)
!11261 = !DILocation(line: 2185, column: 4, scope: !11257)
!11262 = !DILocation(line: 2187, column: 7, scope: !11263)
!11263 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2187, column: 7)
!11264 = !DILocation(line: 2187, column: 14, scope: !11263)
!11265 = !DILocation(line: 2187, column: 22, scope: !11263)
!11266 = !DILocation(line: 2187, column: 7, scope: !11244)
!11267 = !DILocation(line: 2188, column: 8, scope: !11268)
!11268 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 2188, column: 8)
!11269 = distinct !DILexicalBlock(scope: !11263, file: !3, line: 2187, column: 43)
!11270 = !DILocation(line: 2188, column: 15, scope: !11268)
!11271 = !DILocation(line: 2188, column: 23, scope: !11268)
!11272 = !DILocation(line: 2188, column: 43, scope: !11268)
!11273 = !DILocation(line: 2188, column: 47, scope: !11268)
!11274 = !DILocation(line: 2188, column: 53, scope: !11268)
!11275 = !DILocation(line: 2188, column: 8, scope: !11269)
!11276 = !DILocation(line: 2189, column: 5, scope: !11268)
!11277 = !DILocation(line: 2190, column: 3, scope: !11269)
!11278 = !DILocation(line: 2192, column: 7, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2192, column: 7)
!11280 = !DILocation(line: 2192, column: 14, scope: !11279)
!11281 = !DILocation(line: 2192, column: 22, scope: !11279)
!11282 = !DILocation(line: 2192, column: 7, scope: !11244)
!11283 = !DILocation(line: 2193, column: 8, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11285, file: !3, line: 2193, column: 8)
!11285 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 2192, column: 43)
!11286 = !DILocation(line: 2193, column: 15, scope: !11284)
!11287 = !DILocation(line: 2193, column: 23, scope: !11284)
!11288 = !DILocation(line: 2193, column: 43, scope: !11284)
!11289 = !DILocation(line: 2193, column: 47, scope: !11284)
!11290 = !DILocation(line: 2193, column: 54, scope: !11284)
!11291 = !DILocation(line: 2193, column: 64, scope: !11284)
!11292 = !DILocation(line: 2193, column: 8, scope: !11285)
!11293 = !DILocation(line: 2194, column: 5, scope: !11284)
!11294 = !DILocation(line: 2195, column: 3, scope: !11285)
!11295 = !DILocation(line: 2197, column: 29, scope: !11296)
!11296 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2197, column: 7)
!11297 = !DILocation(line: 2197, column: 7, scope: !11296)
!11298 = !DILocation(line: 2197, column: 39, scope: !11296)
!11299 = !DILocation(line: 2197, column: 7, scope: !11244)
!11300 = !DILocation(line: 2198, column: 4, scope: !11296)
!11301 = !DILocation(line: 2200, column: 3, scope: !11244)
!11302 = !DILocation(line: 2202, column: 29, scope: !11303)
!11303 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2202, column: 7)
!11304 = !DILocation(line: 2202, column: 7, scope: !11303)
!11305 = !DILocation(line: 2202, column: 39, scope: !11303)
!11306 = !DILocation(line: 2202, column: 7, scope: !11244)
!11307 = !DILocation(line: 2203, column: 4, scope: !11303)
!11308 = !DILocation(line: 2205, column: 7, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2205, column: 7)
!11310 = !DILocation(line: 2205, column: 14, scope: !11309)
!11311 = !DILocation(line: 2205, column: 22, scope: !11309)
!11312 = !DILocation(line: 2205, column: 7, scope: !11244)
!11313 = !DILocation(line: 2206, column: 8, scope: !11314)
!11314 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 2206, column: 8)
!11315 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 2205, column: 40)
!11316 = !DILocation(line: 2206, column: 15, scope: !11314)
!11317 = !DILocation(line: 2206, column: 23, scope: !11314)
!11318 = !DILocation(line: 2206, column: 40, scope: !11314)
!11319 = !DILocation(line: 2206, column: 50, scope: !11314)
!11320 = !DILocation(line: 2206, column: 8, scope: !11315)
!11321 = !DILocation(line: 2207, column: 5, scope: !11314)
!11322 = !DILocation(line: 2208, column: 8, scope: !11323)
!11323 = distinct !DILexicalBlock(scope: !11315, file: !3, line: 2208, column: 8)
!11324 = !DILocation(line: 2208, column: 8, scope: !11315)
!11325 = !DILocation(line: 2209, column: 5, scope: !11323)
!11326 = !DILocation(line: 2209, column: 5, scope: !11327)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 2209, column: 5)
!11328 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 2209, column: 5)
!11329 = distinct !DILexicalBlock(scope: !11330, file: !3, line: 2209, column: 5)
!11330 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 2209, column: 5)
!11331 = !DILocation(line: 2209, column: 5, scope: !11328)
!11332 = !DILocation(line: 2209, column: 5, scope: !11333)
!11333 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 2209, column: 5)
!11334 = !DILocation(line: 2209, column: 5, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11333, file: !3, line: 2209, column: 5)
!11336 = !DILocation(line: 2209, column: 5, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 2209, column: 5)
!11338 = !DILocation(line: 2209, column: 5, scope: !11330)
!11339 = !DILocation(line: 2211, column: 5, scope: !11323)
!11340 = !DILocation(line: 2211, column: 5, scope: !11341)
!11341 = distinct !DILexicalBlock(scope: !11342, file: !3, line: 2211, column: 5)
!11342 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 2211, column: 5)
!11343 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 2211, column: 5)
!11344 = distinct !DILexicalBlock(scope: !11323, file: !3, line: 2211, column: 5)
!11345 = !DILocation(line: 2211, column: 5, scope: !11342)
!11346 = !DILocation(line: 2211, column: 5, scope: !11347)
!11347 = distinct !DILexicalBlock(scope: !11341, file: !3, line: 2211, column: 5)
!11348 = !DILocation(line: 2211, column: 5, scope: !11349)
!11349 = distinct !DILexicalBlock(scope: !11347, file: !3, line: 2211, column: 5)
!11350 = !DILocation(line: 2211, column: 5, scope: !11351)
!11351 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 2211, column: 5)
!11352 = !DILocation(line: 2211, column: 5, scope: !11344)
!11353 = !DILocation(line: 2212, column: 3, scope: !11315)
!11354 = !DILocation(line: 2214, column: 29, scope: !11355)
!11355 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2214, column: 7)
!11356 = !DILocation(line: 2214, column: 7, scope: !11355)
!11357 = !DILocation(line: 2214, column: 39, scope: !11355)
!11358 = !DILocation(line: 2214, column: 7, scope: !11244)
!11359 = !DILocation(line: 2215, column: 4, scope: !11355)
!11360 = !DILocation(line: 2217, column: 3, scope: !11244)
!11361 = !DILocation(line: 2218, column: 7, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2218, column: 7)
!11363 = !DILocation(line: 2218, column: 50, scope: !11362)
!11364 = !DILocation(line: 2218, column: 7, scope: !11244)
!11365 = !DILocation(line: 2219, column: 4, scope: !11362)
!11366 = !DILocation(line: 2220, column: 7, scope: !11367)
!11367 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2220, column: 7)
!11368 = !DILocation(line: 2220, column: 50, scope: !11367)
!11369 = !DILocation(line: 2220, column: 7, scope: !11244)
!11370 = !DILocation(line: 2221, column: 4, scope: !11367)
!11371 = !DILocation(line: 2222, column: 7, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2222, column: 7)
!11373 = !DILocation(line: 2222, column: 51, scope: !11372)
!11374 = !DILocation(line: 2222, column: 7, scope: !11244)
!11375 = !DILocation(line: 2223, column: 4, scope: !11372)
!11376 = !DILocation(line: 2224, column: 7, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11244, file: !3, line: 2224, column: 7)
!11378 = !DILocation(line: 2224, column: 51, scope: !11377)
!11379 = !DILocation(line: 2224, column: 7, scope: !11244)
!11380 = !DILocation(line: 2225, column: 4, scope: !11377)
!11381 = !DILocation(line: 2226, column: 30, scope: !11244)
!11382 = !DILocation(line: 2226, column: 38, scope: !11244)
!11383 = !DILocation(line: 2226, column: 50, scope: !11244)
!11384 = !DILocation(line: 2226, column: 10, scope: !11244)
!11385 = !DILocation(line: 2226, column: 8, scope: !11244)
!11386 = !DILocation(line: 2228, column: 7, scope: !11244)
!11387 = !DILocation(line: 2229, column: 11, scope: !11244)
!11388 = distinct !{!11388, !11234, !11389}
!11389 = !DILocation(line: 2230, column: 2, scope: !11099)
!11390 = !DILocation(line: 2232, column: 9, scope: !11099)
!11391 = !DILocation(line: 2232, column: 2, scope: !11099)
!11392 = !DILabel(scope: !11099, name: "err_gateoff", file: !3, line: 2234)
!11393 = !DILocation(line: 2234, column: 1, scope: !11099)
!11394 = !DILocation(line: 2235, column: 24, scope: !11099)
!11395 = !DILocation(line: 2235, column: 2, scope: !11099)
!11396 = !DILabel(scope: !11099, name: "err", file: !3, line: 2236)
!11397 = !DILocation(line: 2236, column: 1, scope: !11099)
!11398 = !DILocation(line: 2237, column: 2, scope: !11099)
!11399 = !DILocation(line: 2237, column: 2, scope: !11400)
!11400 = distinct !DILexicalBlock(scope: !11401, file: !3, line: 2237, column: 2)
!11401 = distinct !DILexicalBlock(scope: !11402, file: !3, line: 2237, column: 2)
!11402 = distinct !DILexicalBlock(scope: !11403, file: !3, line: 2237, column: 2)
!11403 = distinct !DILexicalBlock(scope: !11099, file: !3, line: 2237, column: 2)
!11404 = !DILocation(line: 2237, column: 2, scope: !11401)
!11405 = !DILocation(line: 2237, column: 2, scope: !11406)
!11406 = distinct !DILexicalBlock(scope: !11400, file: !3, line: 2237, column: 2)
!11407 = !DILocation(line: 2237, column: 2, scope: !11408)
!11408 = distinct !DILexicalBlock(scope: !11406, file: !3, line: 2237, column: 2)
!11409 = !DILocation(line: 2237, column: 2, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 2237, column: 2)
!11411 = !DILocation(line: 2237, column: 2, scope: !11403)
!11412 = !DILocation(line: 2238, column: 2, scope: !11099)
!11413 = !DILocation(line: 2239, column: 1, scope: !11099)
!11414 = distinct !DISubprogram(name: "stv090x_get_dmdlock", scope: !3, file: !3, line: 1942, type: !11100, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!11415 = !DILocalVariable(name: "state", arg: 1, scope: !11414, file: !3, line: 1942, type: !4654)
!11416 = !DILocation(line: 1942, column: 54, scope: !11414)
!11417 = !DILocalVariable(name: "timeout", arg: 2, scope: !11414, file: !3, line: 1942, type: !445)
!11418 = !DILocation(line: 1942, column: 65, scope: !11414)
!11419 = !DILocalVariable(name: "timer", scope: !11414, file: !3, line: 1944, type: !445)
!11420 = !DILocation(line: 1944, column: 6, scope: !11414)
!11421 = !DILocalVariable(name: "lock", scope: !11414, file: !3, line: 1944, type: !445)
!11422 = !DILocation(line: 1944, column: 17, scope: !11414)
!11423 = !DILocalVariable(name: "reg", scope: !11414, file: !3, line: 1945, type: !571)
!11424 = !DILocation(line: 1945, column: 6, scope: !11414)
!11425 = !DILocalVariable(name: "stat", scope: !11414, file: !3, line: 1946, type: !492)
!11426 = !DILocation(line: 1946, column: 5, scope: !11414)
!11427 = !DILocation(line: 1948, column: 2, scope: !11414)
!11428 = !DILocation(line: 1948, column: 10, scope: !11414)
!11429 = !DILocation(line: 1948, column: 18, scope: !11414)
!11430 = !DILocation(line: 1948, column: 16, scope: !11414)
!11431 = !DILocation(line: 1948, column: 27, scope: !11414)
!11432 = !DILocation(line: 1948, column: 32, scope: !11414)
!11433 = !DILocation(line: 1948, column: 31, scope: !11414)
!11434 = !DILocation(line: 0, scope: !11414)
!11435 = !DILocation(line: 1949, column: 9, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11414, file: !3, line: 1948, column: 39)
!11437 = !DILocation(line: 1949, column: 7, scope: !11436)
!11438 = !DILocation(line: 1950, column: 10, scope: !11436)
!11439 = !DILocation(line: 1950, column: 8, scope: !11436)
!11440 = !DILocation(line: 1952, column: 11, scope: !11436)
!11441 = !DILocation(line: 1952, column: 3, scope: !11436)
!11442 = !DILocation(line: 1952, column: 17, scope: !11436)
!11443 = !DILocation(line: 1956, column: 4, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 1952, column: 17)
!11445 = !DILocation(line: 1956, column: 4, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11447, file: !3, line: 1956, column: 4)
!11447 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 1956, column: 4)
!11448 = distinct !DILexicalBlock(scope: !11449, file: !3, line: 1956, column: 4)
!11449 = distinct !DILexicalBlock(scope: !11444, file: !3, line: 1956, column: 4)
!11450 = !DILocation(line: 1956, column: 4, scope: !11447)
!11451 = !DILocation(line: 1956, column: 4, scope: !11452)
!11452 = distinct !DILexicalBlock(scope: !11446, file: !3, line: 1956, column: 4)
!11453 = !DILocation(line: 1956, column: 4, scope: !11454)
!11454 = distinct !DILexicalBlock(scope: !11452, file: !3, line: 1956, column: 4)
!11455 = !DILocation(line: 1956, column: 4, scope: !11456)
!11456 = distinct !DILexicalBlock(scope: !11454, file: !3, line: 1956, column: 4)
!11457 = !DILocation(line: 1956, column: 4, scope: !11449)
!11458 = !DILocation(line: 1957, column: 9, scope: !11444)
!11459 = !DILocation(line: 1958, column: 4, scope: !11444)
!11460 = !DILocation(line: 1961, column: 10, scope: !11444)
!11461 = !DILocation(line: 1961, column: 8, scope: !11444)
!11462 = !DILocation(line: 1962, column: 11, scope: !11444)
!11463 = !DILocation(line: 1962, column: 9, scope: !11444)
!11464 = !DILocation(line: 1963, column: 4, scope: !11444)
!11465 = !DILocation(line: 1966, column: 8, scope: !11466)
!11466 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 1966, column: 7)
!11467 = !DILocation(line: 1966, column: 7, scope: !11436)
!11468 = !DILocation(line: 1967, column: 4, scope: !11466)
!11469 = !DILocation(line: 1969, column: 4, scope: !11466)
!11470 = !DILocation(line: 1969, column: 4, scope: !11471)
!11471 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 1969, column: 4)
!11472 = distinct !DILexicalBlock(scope: !11473, file: !3, line: 1969, column: 4)
!11473 = distinct !DILexicalBlock(scope: !11474, file: !3, line: 1969, column: 4)
!11474 = distinct !DILexicalBlock(scope: !11466, file: !3, line: 1969, column: 4)
!11475 = !DILocation(line: 1969, column: 4, scope: !11472)
!11476 = !DILocation(line: 1969, column: 4, scope: !11477)
!11477 = distinct !DILexicalBlock(scope: !11471, file: !3, line: 1969, column: 4)
!11478 = !DILocation(line: 1969, column: 4, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11477, file: !3, line: 1969, column: 4)
!11480 = !DILocation(line: 1969, column: 4, scope: !11481)
!11481 = distinct !DILexicalBlock(scope: !11479, file: !3, line: 1969, column: 4)
!11482 = !DILocation(line: 1969, column: 4, scope: !11474)
!11483 = !DILocation(line: 1971, column: 9, scope: !11436)
!11484 = distinct !{!11484, !11427, !11485}
!11485 = !DILocation(line: 1972, column: 2, scope: !11414)
!11486 = !DILocation(line: 1973, column: 9, scope: !11414)
!11487 = !DILocation(line: 1973, column: 2, scope: !11414)
!11488 = distinct !DISubprogram(name: "stv090x_chk_tmg", scope: !3, file: !3, line: 2059, type: !4652, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!11489 = !DILocalVariable(name: "state", arg: 1, scope: !11488, file: !3, line: 2059, type: !4654)
!11490 = !DILocation(line: 2059, column: 50, scope: !11488)
!11491 = !DILocalVariable(name: "reg", scope: !11488, file: !3, line: 2061, type: !571)
!11492 = !DILocation(line: 2061, column: 6, scope: !11488)
!11493 = !DILocalVariable(name: "tmg_cpt", scope: !11488, file: !3, line: 2062, type: !445)
!11494 = !DILocation(line: 2062, column: 6, scope: !11488)
!11495 = !DILocalVariable(name: "i", scope: !11488, file: !3, line: 2062, type: !445)
!11496 = !DILocation(line: 2062, column: 19, scope: !11488)
!11497 = !DILocalVariable(name: "freq", scope: !11488, file: !3, line: 2063, type: !492)
!11498 = !DILocation(line: 2063, column: 5, scope: !11488)
!11499 = !DILocalVariable(name: "tmg_thh", scope: !11488, file: !3, line: 2063, type: !492)
!11500 = !DILocation(line: 2063, column: 11, scope: !11488)
!11501 = !DILocalVariable(name: "tmg_thl", scope: !11488, file: !3, line: 2063, type: !492)
!11502 = !DILocation(line: 2063, column: 20, scope: !11488)
!11503 = !DILocalVariable(name: "tmg_lock", scope: !11488, file: !3, line: 2064, type: !439)
!11504 = !DILocation(line: 2064, column: 6, scope: !11488)
!11505 = !DILocation(line: 2066, column: 9, scope: !11488)
!11506 = !DILocation(line: 2066, column: 7, scope: !11488)
!11507 = !DILocation(line: 2067, column: 12, scope: !11488)
!11508 = !DILocation(line: 2067, column: 10, scope: !11488)
!11509 = !DILocation(line: 2068, column: 12, scope: !11488)
!11510 = !DILocation(line: 2068, column: 10, scope: !11488)
!11511 = !DILocation(line: 2069, column: 6, scope: !11512)
!11512 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2069, column: 6)
!11513 = !DILocation(line: 2069, column: 50, scope: !11512)
!11514 = !DILocation(line: 2069, column: 6, scope: !11488)
!11515 = !DILocation(line: 2070, column: 3, scope: !11512)
!11516 = !DILocation(line: 2071, column: 6, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2071, column: 6)
!11518 = !DILocation(line: 2071, column: 50, scope: !11517)
!11519 = !DILocation(line: 2071, column: 6, scope: !11488)
!11520 = !DILocation(line: 2072, column: 3, scope: !11517)
!11521 = !DILocation(line: 2074, column: 8, scope: !11488)
!11522 = !DILocation(line: 2074, column: 6, scope: !11488)
!11523 = !DILocation(line: 2075, column: 2, scope: !11488)
!11524 = !DILocation(line: 2076, column: 6, scope: !11525)
!11525 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2076, column: 6)
!11526 = !DILocation(line: 2076, column: 48, scope: !11525)
!11527 = !DILocation(line: 2076, column: 6, scope: !11488)
!11528 = !DILocation(line: 2077, column: 3, scope: !11525)
!11529 = !DILocation(line: 2078, column: 6, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2078, column: 6)
!11531 = !DILocation(line: 2078, column: 44, scope: !11530)
!11532 = !DILocation(line: 2078, column: 6, scope: !11488)
!11533 = !DILocation(line: 2079, column: 3, scope: !11530)
!11534 = !DILocation(line: 2081, column: 6, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2081, column: 6)
!11536 = !DILocation(line: 2081, column: 46, scope: !11535)
!11537 = !DILocation(line: 2081, column: 6, scope: !11488)
!11538 = !DILocation(line: 2082, column: 3, scope: !11535)
!11539 = !DILocation(line: 2083, column: 6, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2083, column: 6)
!11541 = !DILocation(line: 2083, column: 48, scope: !11540)
!11542 = !DILocation(line: 2083, column: 6, scope: !11488)
!11543 = !DILocation(line: 2084, column: 3, scope: !11540)
!11544 = !DILocation(line: 2086, column: 6, scope: !11545)
!11545 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2086, column: 6)
!11546 = !DILocation(line: 2086, column: 49, scope: !11545)
!11547 = !DILocation(line: 2086, column: 6, scope: !11488)
!11548 = !DILocation(line: 2087, column: 3, scope: !11545)
!11549 = !DILocation(line: 2088, column: 6, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2088, column: 6)
!11551 = !DILocation(line: 2088, column: 49, scope: !11550)
!11552 = !DILocation(line: 2088, column: 6, scope: !11488)
!11553 = !DILocation(line: 2089, column: 3, scope: !11550)
!11554 = !DILocation(line: 2090, column: 6, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2090, column: 6)
!11556 = !DILocation(line: 2090, column: 48, scope: !11555)
!11557 = !DILocation(line: 2090, column: 6, scope: !11488)
!11558 = !DILocation(line: 2091, column: 3, scope: !11555)
!11559 = !DILocation(line: 2093, column: 6, scope: !11560)
!11560 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2093, column: 6)
!11561 = !DILocation(line: 2093, column: 50, scope: !11560)
!11562 = !DILocation(line: 2093, column: 6, scope: !11488)
!11563 = !DILocation(line: 2094, column: 3, scope: !11560)
!11564 = !DILocation(line: 2095, column: 2, scope: !11488)
!11565 = !DILocation(line: 2097, column: 9, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2097, column: 2)
!11567 = !DILocation(line: 2097, column: 7, scope: !11566)
!11568 = !DILocation(line: 2097, column: 14, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 2097, column: 2)
!11570 = !DILocation(line: 2097, column: 16, scope: !11569)
!11571 = !DILocation(line: 2097, column: 2, scope: !11566)
!11572 = !DILocation(line: 2098, column: 9, scope: !11573)
!11573 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 2097, column: 27)
!11574 = !DILocation(line: 2098, column: 7, scope: !11573)
!11575 = !DILocation(line: 2099, column: 7, scope: !11576)
!11576 = distinct !DILexicalBlock(scope: !11573, file: !3, line: 2099, column: 7)
!11577 = !DILocation(line: 2099, column: 55, scope: !11576)
!11578 = !DILocation(line: 2099, column: 7, scope: !11573)
!11579 = !DILocation(line: 2100, column: 11, scope: !11576)
!11580 = !DILocation(line: 2100, column: 4, scope: !11576)
!11581 = !DILocation(line: 2101, column: 3, scope: !11573)
!11582 = !DILocation(line: 2102, column: 2, scope: !11573)
!11583 = !DILocation(line: 2097, column: 23, scope: !11569)
!11584 = !DILocation(line: 2097, column: 2, scope: !11569)
!11585 = distinct !{!11585, !11571, !11586}
!11586 = !DILocation(line: 2102, column: 2, scope: !11566)
!11587 = !DILocation(line: 2103, column: 6, scope: !11588)
!11588 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2103, column: 6)
!11589 = !DILocation(line: 2103, column: 14, scope: !11588)
!11590 = !DILocation(line: 2103, column: 6, scope: !11488)
!11591 = !DILocation(line: 2104, column: 12, scope: !11588)
!11592 = !DILocation(line: 2104, column: 3, scope: !11588)
!11593 = !DILocation(line: 2106, column: 6, scope: !11594)
!11594 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2106, column: 6)
!11595 = !DILocation(line: 2106, column: 48, scope: !11594)
!11596 = !DILocation(line: 2106, column: 6, scope: !11488)
!11597 = !DILocation(line: 2107, column: 3, scope: !11594)
!11598 = !DILocation(line: 2108, column: 6, scope: !11599)
!11599 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2108, column: 6)
!11600 = !DILocation(line: 2108, column: 44, scope: !11599)
!11601 = !DILocation(line: 2108, column: 6, scope: !11488)
!11602 = !DILocation(line: 2109, column: 3, scope: !11599)
!11603 = !DILocation(line: 2110, column: 6, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2110, column: 6)
!11605 = !DILocation(line: 2110, column: 46, scope: !11604)
!11606 = !DILocation(line: 2110, column: 6, scope: !11488)
!11607 = !DILocation(line: 2111, column: 3, scope: !11604)
!11608 = !DILocation(line: 2113, column: 6, scope: !11609)
!11609 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2113, column: 6)
!11610 = !DILocation(line: 2113, column: 48, scope: !11609)
!11611 = !DILocation(line: 2113, column: 6, scope: !11488)
!11612 = !DILocation(line: 2114, column: 3, scope: !11609)
!11613 = !DILocation(line: 2115, column: 6, scope: !11614)
!11614 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2115, column: 6)
!11615 = !DILocation(line: 2115, column: 53, scope: !11614)
!11616 = !DILocation(line: 2115, column: 6, scope: !11488)
!11617 = !DILocation(line: 2116, column: 3, scope: !11614)
!11618 = !DILocation(line: 2117, column: 6, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2117, column: 6)
!11620 = !DILocation(line: 2117, column: 53, scope: !11619)
!11621 = !DILocation(line: 2117, column: 6, scope: !11488)
!11622 = !DILocation(line: 2118, column: 3, scope: !11619)
!11623 = !DILocation(line: 2120, column: 9, scope: !11488)
!11624 = !DILocation(line: 2120, column: 2, scope: !11488)
!11625 = !DILabel(scope: !11488, name: "err", file: !3, line: 2122)
!11626 = !DILocation(line: 2122, column: 1, scope: !11488)
!11627 = !DILocation(line: 2123, column: 2, scope: !11488)
!11628 = !DILocation(line: 2123, column: 2, scope: !11629)
!11629 = distinct !DILexicalBlock(scope: !11630, file: !3, line: 2123, column: 2)
!11630 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 2123, column: 2)
!11631 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 2123, column: 2)
!11632 = distinct !DILexicalBlock(scope: !11488, file: !3, line: 2123, column: 2)
!11633 = !DILocation(line: 2123, column: 2, scope: !11630)
!11634 = !DILocation(line: 2123, column: 2, scope: !11635)
!11635 = distinct !DILexicalBlock(scope: !11629, file: !3, line: 2123, column: 2)
!11636 = !DILocation(line: 2123, column: 2, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 2123, column: 2)
!11638 = !DILocation(line: 2123, column: 2, scope: !11639)
!11639 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 2123, column: 2)
!11640 = !DILocation(line: 2123, column: 2, scope: !11632)
!11641 = !DILocation(line: 2124, column: 2, scope: !11488)
!11642 = !DILocation(line: 2125, column: 1, scope: !11488)
!11643 = distinct !DISubprogram(name: "stv090x_sw_algo", scope: !3, file: !3, line: 2396, type: !4652, scopeLine: 2397, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!11644 = !DILocalVariable(name: "state", arg: 1, scope: !11643, file: !3, line: 2396, type: !4654)
!11645 = !DILocation(line: 2396, column: 50, scope: !11643)
!11646 = !DILocalVariable(name: "no_signal", scope: !11643, file: !3, line: 2398, type: !439)
!11647 = !DILocation(line: 2398, column: 6, scope: !11643)
!11648 = !DILocalVariable(name: "zigzag", scope: !11643, file: !3, line: 2398, type: !439)
!11649 = !DILocation(line: 2398, column: 17, scope: !11643)
!11650 = !DILocalVariable(name: "lock", scope: !11643, file: !3, line: 2398, type: !439)
!11651 = !DILocation(line: 2398, column: 25, scope: !11643)
!11652 = !DILocalVariable(name: "reg", scope: !11643, file: !3, line: 2399, type: !571)
!11653 = !DILocation(line: 2399, column: 6, scope: !11643)
!11654 = !DILocalVariable(name: "dvbs2_fly_wheel", scope: !11643, file: !3, line: 2401, type: !445)
!11655 = !DILocation(line: 2401, column: 6, scope: !11643)
!11656 = !DILocalVariable(name: "inc", scope: !11643, file: !3, line: 2402, type: !445)
!11657 = !DILocation(line: 2402, column: 6, scope: !11643)
!11658 = !DILocalVariable(name: "timeout_step", scope: !11643, file: !3, line: 2402, type: !445)
!11659 = !DILocation(line: 2402, column: 11, scope: !11643)
!11660 = !DILocalVariable(name: "trials", scope: !11643, file: !3, line: 2402, type: !445)
!11661 = !DILocation(line: 2402, column: 25, scope: !11643)
!11662 = !DILocalVariable(name: "steps_max", scope: !11643, file: !3, line: 2402, type: !445)
!11663 = !DILocation(line: 2402, column: 33, scope: !11643)
!11664 = !DILocation(line: 2405, column: 26, scope: !11643)
!11665 = !DILocation(line: 2405, column: 2, scope: !11643)
!11666 = !DILocation(line: 2407, column: 10, scope: !11643)
!11667 = !DILocation(line: 2407, column: 17, scope: !11643)
!11668 = !DILocation(line: 2407, column: 2, scope: !11643)
!11669 = !DILocation(line: 2411, column: 7, scope: !11670)
!11670 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2411, column: 7)
!11671 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 2407, column: 30)
!11672 = !DILocation(line: 2411, column: 14, scope: !11670)
!11673 = !DILocation(line: 2411, column: 24, scope: !11670)
!11674 = !DILocation(line: 2411, column: 32, scope: !11670)
!11675 = !DILocation(line: 2411, column: 7, scope: !11671)
!11676 = !DILocation(line: 2412, column: 8, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11678, file: !3, line: 2412, column: 8)
!11678 = distinct !DILexicalBlock(scope: !11670, file: !3, line: 2411, column: 41)
!11679 = !DILocation(line: 2412, column: 50, scope: !11677)
!11680 = !DILocation(line: 2412, column: 8, scope: !11678)
!11681 = !DILocation(line: 2413, column: 5, scope: !11677)
!11682 = !DILocation(line: 2414, column: 3, scope: !11678)
!11683 = !DILocation(line: 2416, column: 7, scope: !11684)
!11684 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2416, column: 7)
!11685 = !DILocation(line: 2416, column: 50, scope: !11684)
!11686 = !DILocation(line: 2416, column: 7, scope: !11671)
!11687 = !DILocation(line: 2417, column: 4, scope: !11684)
!11688 = !DILocation(line: 2418, column: 10, scope: !11671)
!11689 = !DILocation(line: 2419, column: 3, scope: !11671)
!11690 = !DILocation(line: 2422, column: 7, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2422, column: 7)
!11692 = !DILocation(line: 2422, column: 14, scope: !11691)
!11693 = !DILocation(line: 2422, column: 24, scope: !11691)
!11694 = !DILocation(line: 2422, column: 32, scope: !11691)
!11695 = !DILocation(line: 2422, column: 7, scope: !11671)
!11696 = !DILocation(line: 2423, column: 8, scope: !11697)
!11697 = distinct !DILexicalBlock(scope: !11698, file: !3, line: 2423, column: 8)
!11698 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2422, column: 41)
!11699 = !DILocation(line: 2423, column: 52, scope: !11697)
!11700 = !DILocation(line: 2423, column: 8, scope: !11698)
!11701 = !DILocation(line: 2424, column: 5, scope: !11697)
!11702 = !DILocation(line: 2425, column: 3, scope: !11698)
!11703 = !DILocation(line: 2427, column: 7, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2427, column: 7)
!11705 = !DILocation(line: 2427, column: 50, scope: !11704)
!11706 = !DILocation(line: 2427, column: 7, scope: !11671)
!11707 = !DILocation(line: 2428, column: 4, scope: !11704)
!11708 = !DILocation(line: 2429, column: 10, scope: !11671)
!11709 = !DILocation(line: 2430, column: 3, scope: !11671)
!11710 = !DILocation(line: 2435, column: 7, scope: !11711)
!11711 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2435, column: 7)
!11712 = !DILocation(line: 2435, column: 14, scope: !11711)
!11713 = !DILocation(line: 2435, column: 24, scope: !11711)
!11714 = !DILocation(line: 2435, column: 32, scope: !11711)
!11715 = !DILocation(line: 2435, column: 7, scope: !11671)
!11716 = !DILocation(line: 2436, column: 8, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 2436, column: 8)
!11718 = distinct !DILexicalBlock(scope: !11711, file: !3, line: 2435, column: 41)
!11719 = !DILocation(line: 2436, column: 50, scope: !11717)
!11720 = !DILocation(line: 2436, column: 8, scope: !11718)
!11721 = !DILocation(line: 2437, column: 5, scope: !11717)
!11722 = !DILocation(line: 2438, column: 8, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11718, file: !3, line: 2438, column: 8)
!11724 = !DILocation(line: 2438, column: 52, scope: !11723)
!11725 = !DILocation(line: 2438, column: 8, scope: !11718)
!11726 = !DILocation(line: 2439, column: 5, scope: !11723)
!11727 = !DILocation(line: 2440, column: 3, scope: !11718)
!11728 = !DILocation(line: 2442, column: 7, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11671, file: !3, line: 2442, column: 7)
!11730 = !DILocation(line: 2442, column: 50, scope: !11729)
!11731 = !DILocation(line: 2442, column: 7, scope: !11671)
!11732 = !DILocation(line: 2443, column: 4, scope: !11729)
!11733 = !DILocation(line: 2444, column: 10, scope: !11671)
!11734 = !DILocation(line: 2445, column: 3, scope: !11671)
!11735 = !DILocation(line: 2448, column: 9, scope: !11643)
!11736 = !DILocation(line: 2449, column: 2, scope: !11643)
!11737 = !DILocation(line: 2450, column: 34, scope: !11738)
!11738 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 2449, column: 5)
!11739 = !DILocation(line: 2450, column: 41, scope: !11738)
!11740 = !DILocation(line: 2450, column: 46, scope: !11738)
!11741 = !DILocation(line: 2450, column: 60, scope: !11738)
!11742 = !DILocation(line: 2450, column: 68, scope: !11738)
!11743 = !DILocation(line: 2450, column: 10, scope: !11738)
!11744 = !DILocation(line: 2450, column: 8, scope: !11738)
!11745 = !DILocation(line: 2451, column: 34, scope: !11738)
!11746 = !DILocation(line: 2451, column: 15, scope: !11738)
!11747 = !DILocation(line: 2451, column: 13, scope: !11738)
!11748 = !DILocation(line: 2452, column: 9, scope: !11738)
!11749 = !DILocation(line: 2455, column: 7, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11738, file: !3, line: 2455, column: 7)
!11751 = !DILocation(line: 2455, column: 12, scope: !11750)
!11752 = !DILocation(line: 2455, column: 15, scope: !11750)
!11753 = !DILocation(line: 2455, column: 25, scope: !11750)
!11754 = !DILocation(line: 2455, column: 29, scope: !11750)
!11755 = !DILocation(line: 2455, column: 36, scope: !11750)
!11756 = !DILocation(line: 2455, column: 7, scope: !11738)
!11757 = !DILocation(line: 2457, column: 8, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 2457, column: 8)
!11759 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 2455, column: 43)
!11760 = !DILocation(line: 2457, column: 15, scope: !11758)
!11761 = !DILocation(line: 2457, column: 25, scope: !11758)
!11762 = !DILocation(line: 2457, column: 33, scope: !11758)
!11763 = !DILocation(line: 2457, column: 8, scope: !11759)
!11764 = !DILocation(line: 2458, column: 9, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 2458, column: 9)
!11766 = distinct !DILexicalBlock(scope: !11758, file: !3, line: 2457, column: 42)
!11767 = !DILocation(line: 2458, column: 51, scope: !11765)
!11768 = !DILocation(line: 2458, column: 9, scope: !11766)
!11769 = !DILocation(line: 2459, column: 6, scope: !11765)
!11770 = !DILocation(line: 2460, column: 9, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11766, file: !3, line: 2460, column: 9)
!11772 = !DILocation(line: 2460, column: 53, scope: !11771)
!11773 = !DILocation(line: 2460, column: 9, scope: !11766)
!11774 = !DILocation(line: 2461, column: 6, scope: !11771)
!11775 = !DILocation(line: 2462, column: 4, scope: !11766)
!11776 = !DILocation(line: 2464, column: 10, scope: !11759)
!11777 = !DILocation(line: 2464, column: 8, scope: !11759)
!11778 = !DILocation(line: 2465, column: 9, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 2465, column: 8)
!11780 = !DILocation(line: 2465, column: 8, scope: !11779)
!11781 = !DILocation(line: 2465, column: 15, scope: !11779)
!11782 = !DILocation(line: 2465, column: 19, scope: !11779)
!11783 = !DILocation(line: 2465, column: 63, scope: !11779)
!11784 = !DILocation(line: 2465, column: 8, scope: !11759)
!11785 = !DILocation(line: 2467, column: 12, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11779, file: !3, line: 2465, column: 82)
!11787 = !DILocation(line: 2467, column: 5, scope: !11786)
!11788 = !DILocation(line: 2468, column: 11, scope: !11786)
!11789 = !DILocation(line: 2468, column: 9, scope: !11786)
!11790 = !DILocation(line: 2469, column: 23, scope: !11786)
!11791 = !DILocation(line: 2469, column: 21, scope: !11786)
!11792 = !DILocation(line: 2470, column: 9, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 2470, column: 9)
!11794 = !DILocation(line: 2470, column: 25, scope: !11793)
!11795 = !DILocation(line: 2470, column: 9, scope: !11786)
!11796 = !DILocation(line: 2471, column: 13, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 2470, column: 32)
!11798 = !DILocation(line: 2471, column: 6, scope: !11797)
!11799 = !DILocation(line: 2472, column: 12, scope: !11797)
!11800 = !DILocation(line: 2472, column: 10, scope: !11797)
!11801 = !DILocation(line: 2473, column: 24, scope: !11797)
!11802 = !DILocation(line: 2473, column: 22, scope: !11797)
!11803 = !DILocation(line: 2474, column: 5, scope: !11797)
!11804 = !DILocation(line: 2475, column: 9, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11786, file: !3, line: 2475, column: 9)
!11806 = !DILocation(line: 2475, column: 25, scope: !11805)
!11807 = !DILocation(line: 2475, column: 9, scope: !11786)
!11808 = !DILocation(line: 2477, column: 11, scope: !11809)
!11809 = distinct !DILexicalBlock(scope: !11805, file: !3, line: 2475, column: 32)
!11810 = !DILocation(line: 2478, column: 10, scope: !11811)
!11811 = distinct !DILexicalBlock(scope: !11809, file: !3, line: 2478, column: 10)
!11812 = !DILocation(line: 2478, column: 17, scope: !11811)
!11813 = !DILocation(line: 2478, column: 10, scope: !11809)
!11814 = !DILocation(line: 2479, column: 11, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2479, column: 11)
!11816 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 2478, column: 22)
!11817 = !DILocation(line: 2479, column: 18, scope: !11815)
!11818 = !DILocation(line: 2479, column: 28, scope: !11815)
!11819 = !DILocation(line: 2479, column: 36, scope: !11815)
!11820 = !DILocation(line: 2479, column: 11, scope: !11816)
!11821 = !DILocation(line: 2480, column: 12, scope: !11822)
!11822 = distinct !DILexicalBlock(scope: !11823, file: !3, line: 2480, column: 12)
!11823 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 2479, column: 45)
!11824 = !DILocation(line: 2480, column: 56, scope: !11822)
!11825 = !DILocation(line: 2480, column: 12, scope: !11823)
!11826 = !DILocation(line: 2481, column: 9, scope: !11822)
!11827 = !DILocation(line: 2482, column: 7, scope: !11823)
!11828 = !DILocation(line: 2484, column: 11, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2484, column: 11)
!11830 = !DILocation(line: 2484, column: 54, scope: !11829)
!11831 = !DILocation(line: 2484, column: 11, scope: !11816)
!11832 = !DILocation(line: 2485, column: 8, scope: !11829)
!11833 = !DILocation(line: 2486, column: 6, scope: !11816)
!11834 = !DILocation(line: 2487, column: 5, scope: !11809)
!11835 = !DILocation(line: 2488, column: 4, scope: !11786)
!11836 = !DILocation(line: 2489, column: 3, scope: !11759)
!11837 = !DILocation(line: 2490, column: 2, scope: !11738)
!11838 = !DILocation(line: 2490, column: 13, scope: !11643)
!11839 = !DILocation(line: 2490, column: 19, scope: !11643)
!11840 = !DILocation(line: 2490, column: 23, scope: !11643)
!11841 = !DILocation(line: 2490, column: 30, scope: !11643)
!11842 = !DILocation(line: 2490, column: 35, scope: !11643)
!11843 = !DILocation(line: 2490, column: 40, scope: !11643)
!11844 = !DILocation(line: 2490, column: 39, scope: !11643)
!11845 = !DILocation(line: 0, scope: !11643)
!11846 = distinct !{!11846, !11736, !11847}
!11847 = !DILocation(line: 2490, column: 50, scope: !11643)
!11848 = !DILocation(line: 2492, column: 9, scope: !11643)
!11849 = !DILocation(line: 2492, column: 2, scope: !11643)
!11850 = !DILabel(scope: !11643, name: "err", file: !3, line: 2493)
!11851 = !DILocation(line: 2493, column: 1, scope: !11643)
!11852 = !DILocation(line: 2494, column: 2, scope: !11643)
!11853 = !DILocation(line: 2494, column: 2, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11855, file: !3, line: 2494, column: 2)
!11855 = distinct !DILexicalBlock(scope: !11856, file: !3, line: 2494, column: 2)
!11856 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 2494, column: 2)
!11857 = distinct !DILexicalBlock(scope: !11643, file: !3, line: 2494, column: 2)
!11858 = !DILocation(line: 2494, column: 2, scope: !11855)
!11859 = !DILocation(line: 2494, column: 2, scope: !11860)
!11860 = distinct !DILexicalBlock(scope: !11854, file: !3, line: 2494, column: 2)
!11861 = !DILocation(line: 2494, column: 2, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11860, file: !3, line: 2494, column: 2)
!11863 = !DILocation(line: 2494, column: 2, scope: !11864)
!11864 = distinct !DILexicalBlock(scope: !11862, file: !3, line: 2494, column: 2)
!11865 = !DILocation(line: 2494, column: 2, scope: !11857)
!11866 = !DILocation(line: 2495, column: 2, scope: !11643)
!11867 = !DILocation(line: 2496, column: 1, scope: !11643)
!11868 = distinct !DISubprogram(name: "stv090x_get_sig_params", scope: !3, file: !3, line: 2583, type: !9255, scopeLine: 2584, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!11869 = !DILocalVariable(name: "state", arg: 1, scope: !11868, file: !3, line: 2583, type: !4654)
!11870 = !DILocation(line: 2583, column: 79, scope: !11868)
!11871 = !DILocalVariable(name: "fe", scope: !11868, file: !3, line: 2585, type: !588)
!11872 = !DILocation(line: 2585, column: 23, scope: !11868)
!11873 = !DILocation(line: 2585, column: 29, scope: !11868)
!11874 = !DILocation(line: 2585, column: 36, scope: !11868)
!11875 = !DILocalVariable(name: "tmg", scope: !11868, file: !3, line: 2587, type: !492)
!11876 = !DILocation(line: 2587, column: 5, scope: !11868)
!11877 = !DILocalVariable(name: "reg", scope: !11868, file: !3, line: 2588, type: !571)
!11878 = !DILocation(line: 2588, column: 6, scope: !11868)
!11879 = !DILocalVariable(name: "i", scope: !11868, file: !3, line: 2589, type: !445)
!11880 = !DILocation(line: 2589, column: 6, scope: !11868)
!11881 = !DILocalVariable(name: "offst_freq", scope: !11868, file: !3, line: 2589, type: !445)
!11882 = !DILocation(line: 2589, column: 13, scope: !11868)
!11883 = !DILocation(line: 2591, column: 2, scope: !11868)
!11884 = !DILocation(line: 2593, column: 6, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2593, column: 6)
!11886 = !DILocation(line: 2593, column: 13, scope: !11885)
!11887 = !DILocation(line: 2593, column: 18, scope: !11885)
!11888 = !DILocation(line: 2593, column: 6, scope: !11868)
!11889 = !DILocation(line: 2594, column: 9, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 2593, column: 43)
!11891 = !DILocation(line: 2594, column: 7, scope: !11890)
!11892 = !DILocation(line: 2595, column: 3, scope: !11890)
!11893 = !DILocation(line: 2596, column: 3, scope: !11890)
!11894 = !DILocation(line: 2596, column: 11, scope: !11890)
!11895 = !DILocation(line: 2596, column: 13, scope: !11890)
!11896 = !DILocation(line: 2596, column: 20, scope: !11890)
!11897 = !DILocation(line: 2596, column: 24, scope: !11890)
!11898 = !DILocation(line: 2596, column: 28, scope: !11890)
!11899 = !DILocation(line: 2596, column: 34, scope: !11890)
!11900 = !DILocation(line: 2596, column: 38, scope: !11890)
!11901 = !DILocation(line: 2596, column: 42, scope: !11890)
!11902 = !DILocation(line: 0, scope: !11890)
!11903 = !DILocation(line: 2597, column: 10, scope: !11904)
!11904 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2596, column: 52)
!11905 = !DILocation(line: 2597, column: 8, scope: !11904)
!11906 = !DILocation(line: 2598, column: 4, scope: !11904)
!11907 = !DILocation(line: 2599, column: 6, scope: !11904)
!11908 = distinct !{!11908, !11893, !11909}
!11909 = !DILocation(line: 2600, column: 3, scope: !11890)
!11910 = !DILocation(line: 2601, column: 2, scope: !11890)
!11911 = !DILocation(line: 2602, column: 34, scope: !11868)
!11912 = !DILocation(line: 2602, column: 18, scope: !11868)
!11913 = !DILocation(line: 2602, column: 2, scope: !11868)
!11914 = !DILocation(line: 2602, column: 9, scope: !11868)
!11915 = !DILocation(line: 2602, column: 16, scope: !11868)
!11916 = !DILocation(line: 2604, column: 28, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2604, column: 6)
!11918 = !DILocation(line: 2604, column: 6, scope: !11917)
!11919 = !DILocation(line: 2604, column: 38, scope: !11917)
!11920 = !DILocation(line: 2604, column: 6, scope: !11868)
!11921 = !DILocation(line: 2605, column: 3, scope: !11917)
!11922 = !DILocation(line: 2607, column: 6, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2607, column: 6)
!11924 = !DILocation(line: 2607, column: 13, scope: !11923)
!11925 = !DILocation(line: 2607, column: 21, scope: !11923)
!11926 = !DILocation(line: 2607, column: 6, scope: !11868)
!11927 = !DILocation(line: 2608, column: 7, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 2608, column: 7)
!11929 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 2607, column: 42)
!11930 = !DILocation(line: 2608, column: 14, scope: !11928)
!11931 = !DILocation(line: 2608, column: 22, scope: !11928)
!11932 = !DILocation(line: 2608, column: 42, scope: !11928)
!11933 = !DILocation(line: 2608, column: 47, scope: !11928)
!11934 = !DILocation(line: 2608, column: 54, scope: !11928)
!11935 = !DILocation(line: 2608, column: 65, scope: !11928)
!11936 = !DILocation(line: 2608, column: 7, scope: !11929)
!11937 = !DILocation(line: 2609, column: 4, scope: !11928)
!11938 = !DILocation(line: 2610, column: 2, scope: !11929)
!11939 = !DILocation(line: 2612, column: 28, scope: !11940)
!11940 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2612, column: 6)
!11941 = !DILocation(line: 2612, column: 6, scope: !11940)
!11942 = !DILocation(line: 2612, column: 38, scope: !11940)
!11943 = !DILocation(line: 2612, column: 6, scope: !11868)
!11944 = !DILocation(line: 2613, column: 3, scope: !11940)
!11945 = !DILocation(line: 2615, column: 36, scope: !11868)
!11946 = !DILocation(line: 2615, column: 43, scope: !11868)
!11947 = !DILocation(line: 2615, column: 50, scope: !11868)
!11948 = !DILocation(line: 2615, column: 60, scope: !11868)
!11949 = !DILocation(line: 2615, column: 15, scope: !11868)
!11950 = !DILocation(line: 2615, column: 66, scope: !11868)
!11951 = !DILocation(line: 2615, column: 13, scope: !11868)
!11952 = !DILocation(line: 2616, column: 22, scope: !11868)
!11953 = !DILocation(line: 2616, column: 2, scope: !11868)
!11954 = !DILocation(line: 2616, column: 9, scope: !11868)
!11955 = !DILocation(line: 2616, column: 19, scope: !11868)
!11956 = !DILocation(line: 2618, column: 26, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2618, column: 6)
!11958 = !DILocation(line: 2618, column: 6, scope: !11957)
!11959 = !DILocation(line: 2618, column: 33, scope: !11957)
!11960 = !DILocation(line: 2618, column: 6, scope: !11868)
!11961 = !DILocation(line: 2619, column: 3, scope: !11957)
!11962 = !DILocation(line: 2621, column: 8, scope: !11868)
!11963 = !DILocation(line: 2621, column: 6, scope: !11868)
!11964 = !DILocation(line: 2622, column: 18, scope: !11868)
!11965 = !DILocation(line: 2622, column: 2, scope: !11868)
!11966 = !DILocation(line: 2622, column: 9, scope: !11868)
!11967 = !DILocation(line: 2622, column: 16, scope: !11868)
!11968 = !DILocation(line: 2623, column: 18, scope: !11868)
!11969 = !DILocation(line: 2623, column: 61, scope: !11868)
!11970 = !DILocation(line: 2623, column: 2, scope: !11868)
!11971 = !DILocation(line: 2623, column: 9, scope: !11868)
!11972 = !DILocation(line: 2623, column: 16, scope: !11868)
!11973 = !DILocation(line: 2624, column: 21, scope: !11868)
!11974 = !DILocation(line: 2624, column: 64, scope: !11868)
!11975 = !DILocation(line: 2624, column: 2, scope: !11868)
!11976 = !DILocation(line: 2624, column: 9, scope: !11868)
!11977 = !DILocation(line: 2624, column: 19, scope: !11868)
!11978 = !DILocation(line: 2625, column: 8, scope: !11868)
!11979 = !DILocation(line: 2625, column: 6, scope: !11868)
!11980 = !DILocation(line: 2626, column: 19, scope: !11868)
!11981 = !DILocation(line: 2626, column: 2, scope: !11868)
!11982 = !DILocation(line: 2626, column: 9, scope: !11868)
!11983 = !DILocation(line: 2626, column: 17, scope: !11868)
!11984 = !DILocation(line: 2627, column: 8, scope: !11868)
!11985 = !DILocation(line: 2627, column: 6, scope: !11868)
!11986 = !DILocation(line: 2628, column: 21, scope: !11868)
!11987 = !DILocation(line: 2628, column: 2, scope: !11868)
!11988 = !DILocation(line: 2628, column: 9, scope: !11868)
!11989 = !DILocation(line: 2628, column: 19, scope: !11868)
!11990 = !DILocation(line: 2630, column: 7, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2630, column: 6)
!11992 = !DILocation(line: 2630, column: 14, scope: !11991)
!11993 = !DILocation(line: 2630, column: 19, scope: !11991)
!11994 = !DILocation(line: 2630, column: 44, scope: !11991)
!11995 = !DILocation(line: 2630, column: 48, scope: !11991)
!11996 = !DILocation(line: 2630, column: 55, scope: !11991)
!11997 = !DILocation(line: 2630, column: 61, scope: !11991)
!11998 = !DILocation(line: 2630, column: 6, scope: !11868)
!11999 = !DILocation(line: 2632, column: 29, scope: !12000)
!12000 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 2632, column: 7)
!12001 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 2630, column: 74)
!12002 = !DILocation(line: 2632, column: 7, scope: !12000)
!12003 = !DILocation(line: 2632, column: 39, scope: !12000)
!12004 = !DILocation(line: 2632, column: 7, scope: !12001)
!12005 = !DILocation(line: 2633, column: 4, scope: !12000)
!12006 = !DILocation(line: 2635, column: 7, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 2635, column: 7)
!12008 = !DILocation(line: 2635, column: 14, scope: !12007)
!12009 = !DILocation(line: 2635, column: 22, scope: !12007)
!12010 = !DILocation(line: 2635, column: 7, scope: !12001)
!12011 = !DILocation(line: 2636, column: 8, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12013, file: !3, line: 2636, column: 8)
!12013 = distinct !DILexicalBlock(scope: !12007, file: !3, line: 2635, column: 43)
!12014 = !DILocation(line: 2636, column: 15, scope: !12012)
!12015 = !DILocation(line: 2636, column: 23, scope: !12012)
!12016 = !DILocation(line: 2636, column: 43, scope: !12012)
!12017 = !DILocation(line: 2636, column: 48, scope: !12012)
!12018 = !DILocation(line: 2636, column: 55, scope: !12012)
!12019 = !DILocation(line: 2636, column: 66, scope: !12012)
!12020 = !DILocation(line: 2636, column: 8, scope: !12013)
!12021 = !DILocation(line: 2637, column: 5, scope: !12012)
!12022 = !DILocation(line: 2638, column: 3, scope: !12013)
!12023 = !DILocation(line: 2640, column: 29, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 2640, column: 7)
!12025 = !DILocation(line: 2640, column: 7, scope: !12024)
!12026 = !DILocation(line: 2640, column: 39, scope: !12024)
!12027 = !DILocation(line: 2640, column: 7, scope: !12001)
!12028 = !DILocation(line: 2641, column: 4, scope: !12024)
!12029 = !DILocalVariable(name: "__x", scope: !12030, file: !3, line: 2643, type: !439)
!12030 = distinct !DILexicalBlock(scope: !12031, file: !3, line: 2643, column: 7)
!12031 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 2643, column: 7)
!12032 = !DILocation(line: 2643, column: 7, scope: !12030)
!12033 = !DILocation(line: 2643, column: 28, scope: !12031)
!12034 = !DILocation(line: 2643, column: 35, scope: !12031)
!12035 = !DILocation(line: 2643, column: 48, scope: !12031)
!12036 = !DILocation(line: 2643, column: 56, scope: !12031)
!12037 = !DILocation(line: 2643, column: 23, scope: !12031)
!12038 = !DILocation(line: 2643, column: 7, scope: !12001)
!12039 = !DILocation(line: 2644, column: 4, scope: !12031)
!12040 = !DILocalVariable(name: "__x", scope: !12041, file: !3, line: 2645, type: !439)
!12041 = distinct !DILexicalBlock(scope: !12042, file: !3, line: 2645, column: 12)
!12042 = distinct !DILexicalBlock(scope: !12031, file: !3, line: 2645, column: 12)
!12043 = !DILocation(line: 2645, column: 12, scope: !12041)
!12044 = !DILocation(line: 2645, column: 50, scope: !12042)
!12045 = !DILocation(line: 2645, column: 57, scope: !12042)
!12046 = !DILocation(line: 2645, column: 64, scope: !12042)
!12047 = !DILocation(line: 2645, column: 71, scope: !12042)
!12048 = !DILocation(line: 2645, column: 32, scope: !12042)
!12049 = !DILocation(line: 2645, column: 80, scope: !12042)
!12050 = !DILocation(line: 2645, column: 28, scope: !12042)
!12051 = !DILocation(line: 2645, column: 12, scope: !12031)
!12052 = !DILocation(line: 2646, column: 4, scope: !12042)
!12053 = !DILocation(line: 2647, column: 2, scope: !12001)
!12054 = !DILocalVariable(name: "__x", scope: !12055, file: !3, line: 2648, type: !439)
!12055 = distinct !DILexicalBlock(scope: !12056, file: !3, line: 2648, column: 7)
!12056 = distinct !DILexicalBlock(scope: !12057, file: !3, line: 2648, column: 7)
!12057 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 2647, column: 9)
!12058 = !DILocation(line: 2648, column: 7, scope: !12055)
!12059 = !DILocation(line: 2648, column: 28, scope: !12056)
!12060 = !DILocation(line: 2648, column: 35, scope: !12056)
!12061 = !DILocation(line: 2648, column: 48, scope: !12056)
!12062 = !DILocation(line: 2648, column: 56, scope: !12056)
!12063 = !DILocation(line: 2648, column: 23, scope: !12056)
!12064 = !DILocation(line: 2648, column: 7, scope: !12057)
!12065 = !DILocation(line: 2649, column: 4, scope: !12056)
!12066 = !DILocation(line: 2652, column: 2, scope: !11868)
!12067 = !DILabel(scope: !11868, name: "err_gateoff", file: !3, line: 2654)
!12068 = !DILocation(line: 2654, column: 1, scope: !11868)
!12069 = !DILocation(line: 2655, column: 24, scope: !11868)
!12070 = !DILocation(line: 2655, column: 2, scope: !11868)
!12071 = !DILabel(scope: !11868, name: "err", file: !3, line: 2656)
!12072 = !DILocation(line: 2656, column: 1, scope: !11868)
!12073 = !DILocation(line: 2657, column: 2, scope: !11868)
!12074 = !DILocation(line: 2657, column: 2, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !12076, file: !3, line: 2657, column: 2)
!12076 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 2657, column: 2)
!12077 = distinct !DILexicalBlock(scope: !12078, file: !3, line: 2657, column: 2)
!12078 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 2657, column: 2)
!12079 = !DILocation(line: 2657, column: 2, scope: !12076)
!12080 = !DILocation(line: 2657, column: 2, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 2657, column: 2)
!12082 = !DILocation(line: 2657, column: 2, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2657, column: 2)
!12084 = !DILocation(line: 2657, column: 2, scope: !12085)
!12085 = distinct !DILexicalBlock(scope: !12083, file: !3, line: 2657, column: 2)
!12086 = !DILocation(line: 2657, column: 2, scope: !12078)
!12087 = !DILocation(line: 2658, column: 2, scope: !11868)
!12088 = !DILocation(line: 2659, column: 1, scope: !11868)
!12089 = distinct !DISubprogram(name: "stv090x_optimize_track", scope: !3, file: !3, line: 2834, type: !4652, scopeLine: 2835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!12090 = !DILocalVariable(name: "state", arg: 1, scope: !12089, file: !3, line: 2834, type: !4654)
!12091 = !DILocation(line: 2834, column: 57, scope: !12089)
!12092 = !DILocalVariable(name: "fe", scope: !12089, file: !3, line: 2836, type: !588)
!12093 = !DILocation(line: 2836, column: 23, scope: !12089)
!12094 = !DILocation(line: 2836, column: 29, scope: !12089)
!12095 = !DILocation(line: 2836, column: 36, scope: !12089)
!12096 = !DILocalVariable(name: "modcod", scope: !12089, file: !3, line: 2838, type: !345)
!12097 = !DILocation(line: 2838, column: 22, scope: !12089)
!12098 = !DILocalVariable(name: "srate", scope: !12089, file: !3, line: 2840, type: !445)
!12099 = !DILocation(line: 2840, column: 6, scope: !12089)
!12100 = !DILocalVariable(name: "pilots", scope: !12089, file: !3, line: 2840, type: !445)
!12101 = !DILocation(line: 2840, column: 13, scope: !12089)
!12102 = !DILocalVariable(name: "aclc", scope: !12089, file: !3, line: 2840, type: !445)
!12103 = !DILocation(line: 2840, column: 21, scope: !12089)
!12104 = !DILocalVariable(name: "f_1", scope: !12089, file: !3, line: 2840, type: !445)
!12105 = !DILocation(line: 2840, column: 27, scope: !12089)
!12106 = !DILocalVariable(name: "f_0", scope: !12089, file: !3, line: 2840, type: !445)
!12107 = !DILocation(line: 2840, column: 32, scope: !12089)
!12108 = !DILocalVariable(name: "i", scope: !12089, file: !3, line: 2840, type: !445)
!12109 = !DILocation(line: 2840, column: 37, scope: !12089)
!12110 = !DILocalVariable(name: "blind_tune", scope: !12089, file: !3, line: 2840, type: !445)
!12111 = !DILocation(line: 2840, column: 44, scope: !12089)
!12112 = !DILocalVariable(name: "reg", scope: !12089, file: !3, line: 2841, type: !571)
!12113 = !DILocation(line: 2841, column: 6, scope: !12089)
!12114 = !DILocation(line: 2843, column: 29, scope: !12089)
!12115 = !DILocation(line: 2843, column: 36, scope: !12089)
!12116 = !DILocation(line: 2843, column: 43, scope: !12089)
!12117 = !DILocation(line: 2843, column: 53, scope: !12089)
!12118 = !DILocation(line: 2843, column: 11, scope: !12089)
!12119 = !DILocation(line: 2843, column: 9, scope: !12089)
!12120 = !DILocation(line: 2844, column: 32, scope: !12089)
!12121 = !DILocation(line: 2844, column: 39, scope: !12089)
!12122 = !DILocation(line: 2844, column: 11, scope: !12089)
!12123 = !DILocation(line: 2844, column: 8, scope: !12089)
!12124 = !DILocation(line: 2846, column: 10, scope: !12089)
!12125 = !DILocation(line: 2846, column: 17, scope: !12089)
!12126 = !DILocation(line: 2846, column: 2, scope: !12089)
!12127 = !DILocation(line: 2849, column: 7, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2849, column: 7)
!12129 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2846, column: 25)
!12130 = !DILocation(line: 2849, column: 14, scope: !12128)
!12131 = !DILocation(line: 2849, column: 26, scope: !12128)
!12132 = !DILocation(line: 2849, column: 7, scope: !12129)
!12133 = !DILocation(line: 2850, column: 10, scope: !12134)
!12134 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 2849, column: 50)
!12135 = !DILocation(line: 2850, column: 8, scope: !12134)
!12136 = !DILocation(line: 2851, column: 4, scope: !12134)
!12137 = !DILocation(line: 2852, column: 4, scope: !12134)
!12138 = !DILocation(line: 2853, column: 8, scope: !12139)
!12139 = distinct !DILexicalBlock(scope: !12134, file: !3, line: 2853, column: 8)
!12140 = !DILocation(line: 2853, column: 50, scope: !12139)
!12141 = !DILocation(line: 2853, column: 8, scope: !12134)
!12142 = !DILocation(line: 2854, column: 5, scope: !12139)
!12143 = !DILocation(line: 2855, column: 3, scope: !12134)
!12144 = !DILocation(line: 2856, column: 9, scope: !12129)
!12145 = !DILocation(line: 2856, column: 7, scope: !12129)
!12146 = !DILocation(line: 2857, column: 3, scope: !12129)
!12147 = !DILocation(line: 2858, column: 3, scope: !12129)
!12148 = !DILocation(line: 2859, column: 7, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2859, column: 7)
!12150 = !DILocation(line: 2859, column: 46, scope: !12149)
!12151 = !DILocation(line: 2859, column: 7, scope: !12129)
!12152 = !DILocation(line: 2860, column: 4, scope: !12149)
!12153 = !DILocation(line: 2862, column: 7, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2862, column: 7)
!12155 = !DILocation(line: 2862, column: 14, scope: !12154)
!12156 = !DILocation(line: 2862, column: 24, scope: !12154)
!12157 = !DILocation(line: 2862, column: 32, scope: !12154)
!12158 = !DILocation(line: 2862, column: 7, scope: !12129)
!12159 = !DILocation(line: 2863, column: 28, scope: !12160)
!12160 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 2863, column: 8)
!12161 = distinct !DILexicalBlock(scope: !12154, file: !3, line: 2862, column: 41)
!12162 = !DILocation(line: 2863, column: 8, scope: !12160)
!12163 = !DILocation(line: 2863, column: 35, scope: !12160)
!12164 = !DILocation(line: 2863, column: 8, scope: !12161)
!12165 = !DILocation(line: 2864, column: 5, scope: !12160)
!12166 = !DILocation(line: 2866, column: 8, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 2866, column: 8)
!12168 = !DILocation(line: 2866, column: 15, scope: !12167)
!12169 = !DILocation(line: 2866, column: 19, scope: !12167)
!12170 = !DILocation(line: 2866, column: 8, scope: !12161)
!12171 = !DILocation(line: 2867, column: 9, scope: !12172)
!12172 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 2867, column: 9)
!12173 = distinct !DILexicalBlock(scope: !12167, file: !3, line: 2866, column: 36)
!12174 = !DILocation(line: 2867, column: 51, scope: !12172)
!12175 = !DILocation(line: 2867, column: 9, scope: !12173)
!12176 = !DILocation(line: 2868, column: 6, scope: !12172)
!12177 = !DILocation(line: 2869, column: 9, scope: !12178)
!12178 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 2869, column: 9)
!12179 = !DILocation(line: 2869, column: 49, scope: !12178)
!12180 = !DILocation(line: 2869, column: 9, scope: !12173)
!12181 = !DILocation(line: 2870, column: 6, scope: !12178)
!12182 = !DILocation(line: 2871, column: 4, scope: !12173)
!12183 = !DILocation(line: 2872, column: 9, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !3, line: 2872, column: 9)
!12185 = distinct !DILexicalBlock(scope: !12167, file: !3, line: 2871, column: 11)
!12186 = !DILocation(line: 2872, column: 51, scope: !12184)
!12187 = !DILocation(line: 2872, column: 9, scope: !12185)
!12188 = !DILocation(line: 2873, column: 6, scope: !12184)
!12189 = !DILocation(line: 2874, column: 9, scope: !12190)
!12190 = distinct !DILexicalBlock(scope: !12185, file: !3, line: 2874, column: 9)
!12191 = !DILocation(line: 2874, column: 49, scope: !12190)
!12192 = !DILocation(line: 2874, column: 9, scope: !12185)
!12193 = !DILocation(line: 2875, column: 6, scope: !12190)
!12194 = !DILocation(line: 2877, column: 3, scope: !12161)
!12195 = !DILocation(line: 2879, column: 7, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2879, column: 7)
!12197 = !DILocation(line: 2879, column: 50, scope: !12196)
!12198 = !DILocation(line: 2879, column: 7, scope: !12129)
!12199 = !DILocation(line: 2880, column: 4, scope: !12196)
!12200 = !DILocation(line: 2881, column: 3, scope: !12129)
!12201 = !DILocation(line: 2884, column: 9, scope: !12129)
!12202 = !DILocation(line: 2884, column: 7, scope: !12129)
!12203 = !DILocation(line: 2885, column: 3, scope: !12129)
!12204 = !DILocation(line: 2886, column: 3, scope: !12129)
!12205 = !DILocation(line: 2887, column: 7, scope: !12206)
!12206 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2887, column: 7)
!12207 = !DILocation(line: 2887, column: 49, scope: !12206)
!12208 = !DILocation(line: 2887, column: 7, scope: !12129)
!12209 = !DILocation(line: 2888, column: 4, scope: !12206)
!12210 = !DILocation(line: 2889, column: 7, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2889, column: 7)
!12212 = !DILocation(line: 2889, column: 14, scope: !12211)
!12213 = !DILocation(line: 2889, column: 24, scope: !12211)
!12214 = !DILocation(line: 2889, column: 32, scope: !12211)
!12215 = !DILocation(line: 2889, column: 7, scope: !12129)
!12216 = !DILocation(line: 2890, column: 8, scope: !12217)
!12217 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 2890, column: 8)
!12218 = distinct !DILexicalBlock(scope: !12211, file: !3, line: 2889, column: 41)
!12219 = !DILocation(line: 2890, column: 44, scope: !12217)
!12220 = !DILocation(line: 2890, column: 8, scope: !12218)
!12221 = !DILocation(line: 2891, column: 5, scope: !12217)
!12222 = !DILocation(line: 2892, column: 8, scope: !12223)
!12223 = distinct !DILexicalBlock(scope: !12218, file: !3, line: 2892, column: 8)
!12224 = !DILocation(line: 2892, column: 44, scope: !12223)
!12225 = !DILocation(line: 2892, column: 8, scope: !12218)
!12226 = !DILocation(line: 2893, column: 5, scope: !12223)
!12227 = !DILocation(line: 2894, column: 3, scope: !12218)
!12228 = !DILocation(line: 2895, column: 7, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2895, column: 7)
!12230 = !DILocation(line: 2895, column: 14, scope: !12229)
!12231 = !DILocation(line: 2895, column: 24, scope: !12229)
!12232 = !DILocation(line: 2895, column: 7, scope: !12129)
!12233 = !DILocation(line: 2896, column: 10, scope: !12234)
!12234 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 2895, column: 47)
!12235 = !DILocation(line: 2896, column: 8, scope: !12234)
!12236 = !DILocation(line: 2897, column: 13, scope: !12234)
!12237 = !DILocation(line: 2897, column: 11, scope: !12234)
!12238 = !DILocation(line: 2898, column: 13, scope: !12234)
!12239 = !DILocation(line: 2898, column: 56, scope: !12234)
!12240 = !DILocation(line: 2898, column: 11, scope: !12234)
!12241 = !DILocation(line: 2899, column: 36, scope: !12234)
!12242 = !DILocation(line: 2899, column: 43, scope: !12234)
!12243 = !DILocation(line: 2899, column: 51, scope: !12234)
!12244 = !DILocation(line: 2899, column: 11, scope: !12234)
!12245 = !DILocation(line: 2899, column: 9, scope: !12234)
!12246 = !DILocation(line: 2900, column: 8, scope: !12247)
!12247 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 2900, column: 8)
!12248 = !DILocation(line: 2900, column: 15, scope: !12247)
!12249 = !DILocation(line: 2900, column: 8, scope: !12234)
!12250 = !DILocation(line: 2901, column: 5, scope: !12251)
!12251 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 2900, column: 36)
!12252 = !DILocation(line: 2902, column: 4, scope: !12251)
!12253 = !DILocation(line: 2902, column: 15, scope: !12254)
!12254 = distinct !DILexicalBlock(scope: !12247, file: !3, line: 2902, column: 15)
!12255 = !DILocation(line: 2902, column: 22, scope: !12254)
!12256 = !DILocation(line: 2902, column: 15, scope: !12247)
!12257 = !DILocation(line: 2903, column: 9, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12259, file: !3, line: 2903, column: 9)
!12259 = distinct !DILexicalBlock(scope: !12254, file: !3, line: 2902, column: 43)
!12260 = !DILocation(line: 2903, column: 52, scope: !12258)
!12261 = !DILocation(line: 2903, column: 9, scope: !12259)
!12262 = !DILocation(line: 2904, column: 6, scope: !12258)
!12263 = !DILocation(line: 2905, column: 9, scope: !12264)
!12264 = distinct !DILexicalBlock(scope: !12259, file: !3, line: 2905, column: 9)
!12265 = !DILocation(line: 2905, column: 52, scope: !12264)
!12266 = !DILocation(line: 2905, column: 9, scope: !12259)
!12267 = !DILocation(line: 2906, column: 6, scope: !12264)
!12268 = !DILocation(line: 2907, column: 4, scope: !12259)
!12269 = !DILocation(line: 2908, column: 9, scope: !12270)
!12270 = distinct !DILexicalBlock(scope: !12234, file: !3, line: 2908, column: 8)
!12271 = !DILocation(line: 2908, column: 16, scope: !12270)
!12272 = !DILocation(line: 2908, column: 27, scope: !12270)
!12273 = !DILocation(line: 2908, column: 46, scope: !12270)
!12274 = !DILocation(line: 2908, column: 50, scope: !12270)
!12275 = !DILocation(line: 2908, column: 57, scope: !12270)
!12276 = !DILocation(line: 2908, column: 8, scope: !12234)
!12277 = !DILocation(line: 2909, column: 9, scope: !12278)
!12278 = distinct !DILexicalBlock(scope: !12279, file: !3, line: 2909, column: 9)
!12279 = distinct !DILexicalBlock(scope: !12270, file: !3, line: 2908, column: 78)
!12280 = !DILocation(line: 2909, column: 16, scope: !12278)
!12281 = !DILocation(line: 2909, column: 9, scope: !12279)
!12282 = !DILocation(line: 2910, column: 10, scope: !12283)
!12283 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 2910, column: 10)
!12284 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2909, column: 39)
!12285 = !DILocation(line: 2910, column: 53, scope: !12283)
!12286 = !DILocation(line: 2910, column: 10, scope: !12284)
!12287 = !DILocation(line: 2911, column: 7, scope: !12283)
!12288 = !DILocation(line: 2912, column: 10, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12284, file: !3, line: 2912, column: 10)
!12290 = !DILocation(line: 2912, column: 55, scope: !12289)
!12291 = !DILocation(line: 2912, column: 10, scope: !12284)
!12292 = !DILocation(line: 2913, column: 7, scope: !12289)
!12293 = !DILocation(line: 2914, column: 5, scope: !12284)
!12294 = !DILocation(line: 2915, column: 10, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 2915, column: 10)
!12296 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2914, column: 12)
!12297 = !DILocation(line: 2915, column: 53, scope: !12295)
!12298 = !DILocation(line: 2915, column: 10, scope: !12296)
!12299 = !DILocation(line: 2916, column: 7, scope: !12295)
!12300 = !DILocation(line: 2917, column: 10, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12296, file: !3, line: 2917, column: 10)
!12302 = !DILocation(line: 2917, column: 55, scope: !12301)
!12303 = !DILocation(line: 2917, column: 10, scope: !12296)
!12304 = !DILocation(line: 2918, column: 7, scope: !12301)
!12305 = !DILocation(line: 2920, column: 4, scope: !12279)
!12306 = !DILocation(line: 2921, column: 3, scope: !12234)
!12307 = !DILocation(line: 2923, column: 42, scope: !12308)
!12308 = distinct !DILexicalBlock(scope: !12229, file: !3, line: 2921, column: 10)
!12309 = !DILocation(line: 2923, column: 11, scope: !12308)
!12310 = !DILocation(line: 2923, column: 9, scope: !12308)
!12311 = !DILocation(line: 2924, column: 8, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12308, file: !3, line: 2924, column: 8)
!12313 = !DILocation(line: 2924, column: 15, scope: !12312)
!12314 = !DILocation(line: 2924, column: 26, scope: !12312)
!12315 = !DILocation(line: 2924, column: 8, scope: !12308)
!12316 = !DILocation(line: 2925, column: 9, scope: !12317)
!12317 = distinct !DILexicalBlock(scope: !12318, file: !3, line: 2925, column: 9)
!12318 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 2924, column: 43)
!12319 = !DILocation(line: 2925, column: 52, scope: !12317)
!12320 = !DILocation(line: 2925, column: 9, scope: !12318)
!12321 = !DILocation(line: 2926, column: 6, scope: !12317)
!12322 = !DILocation(line: 2927, column: 4, scope: !12318)
!12323 = !DILocation(line: 2927, column: 15, scope: !12324)
!12324 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 2927, column: 15)
!12325 = !DILocation(line: 2927, column: 22, scope: !12324)
!12326 = !DILocation(line: 2927, column: 33, scope: !12324)
!12327 = !DILocation(line: 2927, column: 15, scope: !12312)
!12328 = !DILocation(line: 2928, column: 9, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12330, file: !3, line: 2928, column: 9)
!12330 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 2927, column: 50)
!12331 = !DILocation(line: 2928, column: 52, scope: !12329)
!12332 = !DILocation(line: 2928, column: 9, scope: !12330)
!12333 = !DILocation(line: 2929, column: 6, scope: !12329)
!12334 = !DILocation(line: 2930, column: 9, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12330, file: !3, line: 2930, column: 9)
!12336 = !DILocation(line: 2930, column: 52, scope: !12335)
!12337 = !DILocation(line: 2930, column: 9, scope: !12330)
!12338 = !DILocation(line: 2931, column: 6, scope: !12335)
!12339 = !DILocation(line: 2932, column: 4, scope: !12330)
!12340 = !DILocation(line: 2932, column: 15, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 2932, column: 15)
!12342 = !DILocation(line: 2932, column: 22, scope: !12341)
!12343 = !DILocation(line: 2932, column: 33, scope: !12341)
!12344 = !DILocation(line: 2932, column: 15, scope: !12324)
!12345 = !DILocation(line: 2933, column: 9, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12347, file: !3, line: 2933, column: 9)
!12347 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 2932, column: 52)
!12348 = !DILocation(line: 2933, column: 52, scope: !12346)
!12349 = !DILocation(line: 2933, column: 9, scope: !12347)
!12350 = !DILocation(line: 2934, column: 6, scope: !12346)
!12351 = !DILocation(line: 2935, column: 9, scope: !12352)
!12352 = distinct !DILexicalBlock(scope: !12347, file: !3, line: 2935, column: 9)
!12353 = !DILocation(line: 2935, column: 54, scope: !12352)
!12354 = !DILocation(line: 2935, column: 9, scope: !12347)
!12355 = !DILocation(line: 2936, column: 6, scope: !12352)
!12356 = !DILocation(line: 2937, column: 4, scope: !12347)
!12357 = !DILocation(line: 2937, column: 15, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12341, file: !3, line: 2937, column: 15)
!12359 = !DILocation(line: 2937, column: 22, scope: !12358)
!12360 = !DILocation(line: 2937, column: 33, scope: !12358)
!12361 = !DILocation(line: 2937, column: 15, scope: !12341)
!12362 = !DILocation(line: 2938, column: 9, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 2938, column: 9)
!12364 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 2937, column: 53)
!12365 = !DILocation(line: 2938, column: 52, scope: !12363)
!12366 = !DILocation(line: 2938, column: 9, scope: !12364)
!12367 = !DILocation(line: 2939, column: 6, scope: !12363)
!12368 = !DILocation(line: 2940, column: 9, scope: !12369)
!12369 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 2940, column: 9)
!12370 = !DILocation(line: 2940, column: 54, scope: !12369)
!12371 = !DILocation(line: 2940, column: 9, scope: !12364)
!12372 = !DILocation(line: 2941, column: 6, scope: !12369)
!12373 = !DILocation(line: 2942, column: 4, scope: !12364)
!12374 = !DILocation(line: 2945, column: 3, scope: !12129)
!12375 = !DILocation(line: 2946, column: 3, scope: !12129)
!12376 = !DILocation(line: 2950, column: 9, scope: !12129)
!12377 = !DILocation(line: 2950, column: 7, scope: !12129)
!12378 = !DILocation(line: 2951, column: 3, scope: !12129)
!12379 = !DILocation(line: 2952, column: 3, scope: !12129)
!12380 = !DILocation(line: 2953, column: 7, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12129, file: !3, line: 2953, column: 7)
!12382 = !DILocation(line: 2953, column: 49, scope: !12381)
!12383 = !DILocation(line: 2953, column: 7, scope: !12129)
!12384 = !DILocation(line: 2954, column: 4, scope: !12381)
!12385 = !DILocation(line: 2955, column: 3, scope: !12129)
!12386 = !DILocation(line: 2958, column: 8, scope: !12089)
!12387 = !DILocation(line: 2958, column: 6, scope: !12089)
!12388 = !DILocation(line: 2959, column: 8, scope: !12089)
!12389 = !DILocation(line: 2959, column: 6, scope: !12089)
!12390 = !DILocation(line: 2960, column: 8, scope: !12089)
!12391 = !DILocation(line: 2960, column: 6, scope: !12089)
!12392 = !DILocation(line: 2962, column: 6, scope: !12393)
!12393 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2962, column: 6)
!12394 = !DILocation(line: 2962, column: 13, scope: !12393)
!12395 = !DILocation(line: 2962, column: 18, scope: !12393)
!12396 = !DILocation(line: 2962, column: 6, scope: !12089)
!12397 = !DILocation(line: 2963, column: 3, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 2962, column: 43)
!12399 = !DILocation(line: 2964, column: 9, scope: !12398)
!12400 = !DILocation(line: 2964, column: 7, scope: !12398)
!12401 = !DILocation(line: 2965, column: 3, scope: !12398)
!12402 = !DILocation(line: 2966, column: 3, scope: !12398)
!12403 = !DILocation(line: 2967, column: 7, scope: !12404)
!12404 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 2967, column: 7)
!12405 = !DILocation(line: 2967, column: 49, scope: !12404)
!12406 = !DILocation(line: 2967, column: 7, scope: !12398)
!12407 = !DILocation(line: 2968, column: 4, scope: !12404)
!12408 = !DILocation(line: 2969, column: 7, scope: !12409)
!12409 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 2969, column: 7)
!12410 = !DILocation(line: 2969, column: 49, scope: !12409)
!12411 = !DILocation(line: 2969, column: 7, scope: !12398)
!12412 = !DILocation(line: 2970, column: 4, scope: !12409)
!12413 = !DILocation(line: 2972, column: 25, scope: !12414)
!12414 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 2972, column: 7)
!12415 = !DILocation(line: 2972, column: 32, scope: !12414)
!12416 = !DILocation(line: 2972, column: 7, scope: !12414)
!12417 = !DILocation(line: 2972, column: 39, scope: !12414)
!12418 = !DILocation(line: 2972, column: 7, scope: !12398)
!12419 = !DILocation(line: 2973, column: 4, scope: !12414)
!12420 = !DILocation(line: 2974, column: 14, scope: !12398)
!12421 = !DILocation(line: 2976, column: 30, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 2976, column: 7)
!12423 = !DILocation(line: 2976, column: 7, scope: !12422)
!12424 = !DILocation(line: 2976, column: 37, scope: !12422)
!12425 = !DILocation(line: 2976, column: 7, scope: !12398)
!12426 = !DILocation(line: 2977, column: 4, scope: !12422)
!12427 = !DILocation(line: 2978, column: 2, scope: !12398)
!12428 = !DILocation(line: 2980, column: 6, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2980, column: 6)
!12430 = !DILocation(line: 2980, column: 13, scope: !12429)
!12431 = !DILocation(line: 2980, column: 23, scope: !12429)
!12432 = !DILocation(line: 2980, column: 31, scope: !12429)
!12433 = !DILocation(line: 2980, column: 6, scope: !12089)
!12434 = !DILocation(line: 2981, column: 8, scope: !12435)
!12435 = distinct !DILexicalBlock(scope: !12436, file: !3, line: 2981, column: 7)
!12436 = distinct !DILexicalBlock(scope: !12429, file: !3, line: 2980, column: 40)
!12437 = !DILocation(line: 2981, column: 15, scope: !12435)
!12438 = !DILocation(line: 2981, column: 27, scope: !12435)
!12439 = !DILocation(line: 2981, column: 52, scope: !12435)
!12440 = !DILocation(line: 2982, column: 8, scope: !12435)
!12441 = !DILocation(line: 2982, column: 15, scope: !12435)
!12442 = !DILocation(line: 2982, column: 27, scope: !12435)
!12443 = !DILocation(line: 2982, column: 51, scope: !12435)
!12444 = !DILocation(line: 2983, column: 8, scope: !12435)
!12445 = !DILocation(line: 2983, column: 15, scope: !12435)
!12446 = !DILocation(line: 2983, column: 27, scope: !12435)
!12447 = !DILocation(line: 2981, column: 7, scope: !12436)
!12448 = !DILocation(line: 2985, column: 8, scope: !12449)
!12449 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 2985, column: 8)
!12450 = distinct !DILexicalBlock(scope: !12435, file: !3, line: 2983, column: 52)
!12451 = !DILocation(line: 2985, column: 51, scope: !12449)
!12452 = !DILocation(line: 2985, column: 8, scope: !12450)
!12453 = !DILocation(line: 2986, column: 5, scope: !12449)
!12454 = !DILocation(line: 2987, column: 8, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 2987, column: 8)
!12456 = !DILocation(line: 2987, column: 51, scope: !12455)
!12457 = !DILocation(line: 2987, column: 8, scope: !12450)
!12458 = !DILocation(line: 2988, column: 5, scope: !12455)
!12459 = !DILocation(line: 2989, column: 3, scope: !12450)
!12460 = !DILocation(line: 2990, column: 2, scope: !12436)
!12461 = !DILocation(line: 2992, column: 6, scope: !12462)
!12462 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2992, column: 6)
!12463 = !DILocation(line: 2992, column: 48, scope: !12462)
!12464 = !DILocation(line: 2992, column: 6, scope: !12089)
!12465 = !DILocation(line: 2993, column: 3, scope: !12462)
!12466 = !DILocation(line: 2996, column: 6, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2996, column: 6)
!12468 = !DILocation(line: 2996, column: 47, scope: !12467)
!12469 = !DILocation(line: 2996, column: 6, scope: !12089)
!12470 = !DILocation(line: 2997, column: 3, scope: !12467)
!12471 = !DILocation(line: 2999, column: 6, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 2999, column: 6)
!12473 = !DILocation(line: 2999, column: 48, scope: !12472)
!12474 = !DILocation(line: 2999, column: 6, scope: !12089)
!12475 = !DILocation(line: 3000, column: 3, scope: !12472)
!12476 = !DILocation(line: 3002, column: 7, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 3002, column: 6)
!12478 = !DILocation(line: 3002, column: 14, scope: !12477)
!12479 = !DILocation(line: 3002, column: 24, scope: !12477)
!12480 = !DILocation(line: 3002, column: 32, scope: !12477)
!12481 = !DILocation(line: 3002, column: 41, scope: !12477)
!12482 = !DILocation(line: 3002, column: 45, scope: !12477)
!12483 = !DILocation(line: 3002, column: 56, scope: !12477)
!12484 = !DILocation(line: 3002, column: 62, scope: !12477)
!12485 = !DILocation(line: 3003, column: 7, scope: !12477)
!12486 = !DILocation(line: 3003, column: 14, scope: !12477)
!12487 = !DILocation(line: 3003, column: 20, scope: !12477)
!12488 = !DILocation(line: 3002, column: 6, scope: !12089)
!12489 = !DILocation(line: 3005, column: 7, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 3005, column: 7)
!12491 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 3003, column: 33)
!12492 = !DILocation(line: 3005, column: 49, scope: !12490)
!12493 = !DILocation(line: 3005, column: 7, scope: !12491)
!12494 = !DILocation(line: 3006, column: 4, scope: !12490)
!12495 = !DILocation(line: 3007, column: 7, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 3007, column: 7)
!12497 = !DILocation(line: 3007, column: 49, scope: !12496)
!12498 = !DILocation(line: 3007, column: 7, scope: !12491)
!12499 = !DILocation(line: 3008, column: 4, scope: !12496)
!12500 = !DILocation(line: 3009, column: 39, scope: !12491)
!12501 = !DILocation(line: 3009, column: 46, scope: !12491)
!12502 = !DILocation(line: 3009, column: 53, scope: !12491)
!12503 = !DILocation(line: 3009, column: 21, scope: !12491)
!12504 = !DILocation(line: 3009, column: 62, scope: !12491)
!12505 = !DILocation(line: 3009, column: 3, scope: !12491)
!12506 = !DILocation(line: 3009, column: 10, scope: !12491)
!12507 = !DILocation(line: 3009, column: 19, scope: !12491)
!12508 = !DILocation(line: 3011, column: 8, scope: !12509)
!12509 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 3011, column: 7)
!12510 = !DILocation(line: 3011, column: 15, scope: !12509)
!12511 = !DILocation(line: 3011, column: 25, scope: !12509)
!12512 = !DILocation(line: 3011, column: 33, scope: !12509)
!12513 = !DILocation(line: 3011, column: 42, scope: !12509)
!12514 = !DILocation(line: 3011, column: 46, scope: !12509)
!12515 = !DILocation(line: 3011, column: 57, scope: !12509)
!12516 = !DILocation(line: 3011, column: 7, scope: !12491)
!12517 = !DILocation(line: 3013, column: 8, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12519, file: !3, line: 3013, column: 8)
!12519 = distinct !DILexicalBlock(scope: !12509, file: !3, line: 3011, column: 64)
!12520 = !DILocation(line: 3013, column: 15, scope: !12518)
!12521 = !DILocation(line: 3013, column: 20, scope: !12518)
!12522 = !DILocation(line: 3013, column: 8, scope: !12519)
!12523 = !DILocation(line: 3015, column: 31, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 3015, column: 9)
!12525 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 3013, column: 44)
!12526 = !DILocation(line: 3015, column: 9, scope: !12524)
!12527 = !DILocation(line: 3015, column: 41, scope: !12524)
!12528 = !DILocation(line: 3015, column: 9, scope: !12525)
!12529 = !DILocation(line: 3016, column: 6, scope: !12524)
!12530 = !DILocation(line: 3018, column: 9, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 3018, column: 9)
!12532 = !DILocation(line: 3018, column: 16, scope: !12531)
!12533 = !DILocation(line: 3018, column: 24, scope: !12531)
!12534 = !DILocation(line: 3018, column: 9, scope: !12525)
!12535 = !DILocation(line: 3019, column: 10, scope: !12536)
!12536 = distinct !DILexicalBlock(scope: !12537, file: !3, line: 3019, column: 10)
!12537 = distinct !DILexicalBlock(scope: !12531, file: !3, line: 3018, column: 45)
!12538 = !DILocation(line: 3019, column: 17, scope: !12536)
!12539 = !DILocation(line: 3019, column: 25, scope: !12536)
!12540 = !DILocation(line: 3019, column: 45, scope: !12536)
!12541 = !DILocation(line: 3019, column: 49, scope: !12536)
!12542 = !DILocation(line: 3019, column: 56, scope: !12536)
!12543 = !DILocation(line: 3019, column: 66, scope: !12536)
!12544 = !DILocation(line: 3019, column: 10, scope: !12537)
!12545 = !DILocation(line: 3020, column: 7, scope: !12536)
!12546 = !DILocation(line: 3021, column: 5, scope: !12537)
!12547 = !DILocation(line: 3023, column: 31, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12525, file: !3, line: 3023, column: 9)
!12549 = !DILocation(line: 3023, column: 9, scope: !12548)
!12550 = !DILocation(line: 3023, column: 41, scope: !12548)
!12551 = !DILocation(line: 3023, column: 9, scope: !12525)
!12552 = !DILocation(line: 3024, column: 6, scope: !12548)
!12553 = !DILocation(line: 3026, column: 4, scope: !12525)
!12554 = !DILocation(line: 3027, column: 3, scope: !12519)
!12555 = !DILocation(line: 3028, column: 8, scope: !12556)
!12556 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 3028, column: 7)
!12557 = !DILocation(line: 3028, column: 15, scope: !12556)
!12558 = !DILocation(line: 3028, column: 20, scope: !12556)
!12559 = !DILocation(line: 3028, column: 45, scope: !12556)
!12560 = !DILocation(line: 3028, column: 49, scope: !12556)
!12561 = !DILocation(line: 3028, column: 56, scope: !12556)
!12562 = !DILocation(line: 3028, column: 62, scope: !12556)
!12563 = !DILocation(line: 3028, column: 7, scope: !12491)
!12564 = !DILocation(line: 3029, column: 4, scope: !12556)
!12565 = !DILocation(line: 3031, column: 4, scope: !12556)
!12566 = !DILocation(line: 3033, column: 24, scope: !12491)
!12567 = !DILocation(line: 3033, column: 3, scope: !12491)
!12568 = !DILocation(line: 3035, column: 29, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12491, file: !3, line: 3035, column: 7)
!12570 = !DILocation(line: 3035, column: 37, scope: !12569)
!12571 = !DILocation(line: 3035, column: 44, scope: !12569)
!12572 = !DILocation(line: 3035, column: 57, scope: !12569)
!12573 = !DILocation(line: 3035, column: 9, scope: !12569)
!12574 = !DILocation(line: 3035, column: 7, scope: !12491)
!12575 = !DILocation(line: 3036, column: 8, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 3036, column: 8)
!12577 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 3035, column: 65)
!12578 = !DILocation(line: 3036, column: 52, scope: !12576)
!12579 = !DILocation(line: 3036, column: 8, scope: !12577)
!12580 = !DILocation(line: 3037, column: 5, scope: !12576)
!12581 = !DILocation(line: 3038, column: 8, scope: !12582)
!12582 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 3038, column: 8)
!12583 = !DILocation(line: 3038, column: 50, scope: !12582)
!12584 = !DILocation(line: 3038, column: 8, scope: !12577)
!12585 = !DILocation(line: 3039, column: 5, scope: !12582)
!12586 = !DILocation(line: 3040, column: 8, scope: !12587)
!12587 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 3040, column: 8)
!12588 = !DILocation(line: 3040, column: 50, scope: !12587)
!12589 = !DILocation(line: 3040, column: 8, scope: !12577)
!12590 = !DILocation(line: 3041, column: 5, scope: !12587)
!12591 = !DILocation(line: 3042, column: 8, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 3042, column: 8)
!12593 = !DILocation(line: 3042, column: 52, scope: !12592)
!12594 = !DILocation(line: 3042, column: 8, scope: !12577)
!12595 = !DILocation(line: 3043, column: 5, scope: !12592)
!12596 = !DILocation(line: 3045, column: 6, scope: !12577)
!12597 = !DILocation(line: 3047, column: 4, scope: !12577)
!12598 = !DILocation(line: 3047, column: 34, scope: !12577)
!12599 = !DILocation(line: 3047, column: 42, scope: !12577)
!12600 = !DILocation(line: 3047, column: 49, scope: !12577)
!12601 = !DILocation(line: 3047, column: 62, scope: !12577)
!12602 = !DILocation(line: 3047, column: 14, scope: !12577)
!12603 = !DILocation(line: 3047, column: 70, scope: !12577)
!12604 = !DILocation(line: 3047, column: 74, scope: !12577)
!12605 = !DILocation(line: 3047, column: 76, scope: !12577)
!12606 = !DILocation(line: 0, scope: !12577)
!12607 = !DILocation(line: 3049, column: 9, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 3049, column: 9)
!12609 = distinct !DILexicalBlock(scope: !12577, file: !3, line: 3047, column: 83)
!12610 = !DILocation(line: 3049, column: 53, scope: !12608)
!12611 = !DILocation(line: 3049, column: 9, scope: !12609)
!12612 = !DILocation(line: 3050, column: 6, scope: !12608)
!12613 = !DILocation(line: 3051, column: 9, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 3051, column: 9)
!12615 = !DILocation(line: 3051, column: 51, scope: !12614)
!12616 = !DILocation(line: 3051, column: 9, scope: !12609)
!12617 = !DILocation(line: 3052, column: 6, scope: !12614)
!12618 = !DILocation(line: 3053, column: 9, scope: !12619)
!12619 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 3053, column: 9)
!12620 = !DILocation(line: 3053, column: 51, scope: !12619)
!12621 = !DILocation(line: 3053, column: 9, scope: !12609)
!12622 = !DILocation(line: 3054, column: 6, scope: !12619)
!12623 = !DILocation(line: 3055, column: 9, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12609, file: !3, line: 3055, column: 9)
!12625 = !DILocation(line: 3055, column: 53, scope: !12624)
!12626 = !DILocation(line: 3055, column: 9, scope: !12609)
!12627 = !DILocation(line: 3056, column: 6, scope: !12624)
!12628 = !DILocation(line: 3057, column: 6, scope: !12609)
!12629 = distinct !{!12629, !12597, !12630}
!12630 = !DILocation(line: 3058, column: 4, scope: !12577)
!12631 = !DILocation(line: 3059, column: 3, scope: !12577)
!12632 = !DILocation(line: 3061, column: 2, scope: !12491)
!12633 = !DILocation(line: 3063, column: 6, scope: !12634)
!12634 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 3063, column: 6)
!12635 = !DILocation(line: 3063, column: 13, scope: !12634)
!12636 = !DILocation(line: 3063, column: 23, scope: !12634)
!12637 = !DILocation(line: 3063, column: 31, scope: !12634)
!12638 = !DILocation(line: 3063, column: 6, scope: !12089)
!12639 = !DILocation(line: 3064, column: 7, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12641, file: !3, line: 3064, column: 7)
!12641 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 3063, column: 40)
!12642 = !DILocation(line: 3064, column: 49, scope: !12640)
!12643 = !DILocation(line: 3064, column: 7, scope: !12641)
!12644 = !DILocation(line: 3065, column: 4, scope: !12640)
!12645 = !DILocation(line: 3066, column: 2, scope: !12641)
!12646 = !DILocation(line: 3068, column: 7, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 3068, column: 6)
!12648 = !DILocation(line: 3068, column: 14, scope: !12647)
!12649 = !DILocation(line: 3068, column: 21, scope: !12647)
!12650 = !DILocation(line: 3068, column: 39, scope: !12647)
!12651 = !DILocation(line: 3068, column: 43, scope: !12647)
!12652 = !DILocation(line: 3068, column: 50, scope: !12647)
!12653 = !DILocation(line: 3068, column: 57, scope: !12647)
!12654 = !DILocation(line: 3068, column: 6, scope: !12089)
!12655 = !DILocation(line: 3069, column: 27, scope: !12647)
!12656 = !DILocation(line: 3069, column: 3, scope: !12647)
!12657 = !DILocation(line: 3071, column: 2, scope: !12089)
!12658 = !DILabel(scope: !12089, name: "err_gateoff", file: !3, line: 3073)
!12659 = !DILocation(line: 3073, column: 1, scope: !12089)
!12660 = !DILocation(line: 3074, column: 24, scope: !12089)
!12661 = !DILocation(line: 3074, column: 2, scope: !12089)
!12662 = !DILabel(scope: !12089, name: "err", file: !3, line: 3075)
!12663 = !DILocation(line: 3075, column: 1, scope: !12089)
!12664 = !DILocation(line: 3076, column: 2, scope: !12089)
!12665 = !DILocation(line: 3076, column: 2, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 3076, column: 2)
!12667 = distinct !DILexicalBlock(scope: !12668, file: !3, line: 3076, column: 2)
!12668 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 3076, column: 2)
!12669 = distinct !DILexicalBlock(scope: !12089, file: !3, line: 3076, column: 2)
!12670 = !DILocation(line: 3076, column: 2, scope: !12667)
!12671 = !DILocation(line: 3076, column: 2, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 3076, column: 2)
!12673 = !DILocation(line: 3076, column: 2, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12672, file: !3, line: 3076, column: 2)
!12675 = !DILocation(line: 3076, column: 2, scope: !12676)
!12676 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 3076, column: 2)
!12677 = !DILocation(line: 3076, column: 2, scope: !12669)
!12678 = !DILocation(line: 3077, column: 2, scope: !12089)
!12679 = !DILocation(line: 3078, column: 1, scope: !12089)
!12680 = distinct !DISubprogram(name: "stv090x_get_lock", scope: !3, file: !3, line: 3114, type: !12681, scopeLine: 3115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!12681 = !DISubroutineType(types: !12682)
!12682 = !{!439, !4654, !445, !445}
!12683 = !DILocalVariable(name: "state", arg: 1, scope: !12680, file: !3, line: 3114, type: !4654)
!12684 = !DILocation(line: 3114, column: 51, scope: !12680)
!12685 = !DILocalVariable(name: "timeout_dmd", arg: 2, scope: !12680, file: !3, line: 3114, type: !445)
!12686 = !DILocation(line: 3114, column: 62, scope: !12680)
!12687 = !DILocalVariable(name: "timeout_fec", arg: 3, scope: !12680, file: !3, line: 3114, type: !445)
!12688 = !DILocation(line: 3114, column: 79, scope: !12680)
!12689 = !DILocalVariable(name: "reg", scope: !12680, file: !3, line: 3116, type: !571)
!12690 = !DILocation(line: 3116, column: 6, scope: !12680)
!12691 = !DILocalVariable(name: "timer", scope: !12680, file: !3, line: 3117, type: !445)
!12692 = !DILocation(line: 3117, column: 6, scope: !12680)
!12693 = !DILocalVariable(name: "lock", scope: !12680, file: !3, line: 3118, type: !439)
!12694 = !DILocation(line: 3118, column: 6, scope: !12680)
!12695 = !DILocation(line: 3120, column: 29, scope: !12680)
!12696 = !DILocation(line: 3120, column: 36, scope: !12680)
!12697 = !DILocation(line: 3120, column: 9, scope: !12680)
!12698 = !DILocation(line: 3120, column: 7, scope: !12680)
!12699 = !DILocation(line: 3121, column: 6, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 3121, column: 6)
!12701 = !DILocation(line: 3121, column: 6, scope: !12680)
!12702 = !DILocation(line: 3122, column: 30, scope: !12700)
!12703 = !DILocation(line: 3122, column: 37, scope: !12700)
!12704 = !DILocation(line: 3122, column: 10, scope: !12700)
!12705 = !DILocation(line: 3122, column: 8, scope: !12700)
!12706 = !DILocation(line: 3122, column: 3, scope: !12700)
!12707 = !DILocation(line: 3124, column: 6, scope: !12708)
!12708 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 3124, column: 6)
!12709 = !DILocation(line: 3124, column: 6, scope: !12680)
!12710 = !DILocation(line: 3125, column: 8, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12708, file: !3, line: 3124, column: 12)
!12712 = !DILocation(line: 3127, column: 3, scope: !12711)
!12713 = !DILocation(line: 3127, column: 11, scope: !12711)
!12714 = !DILocation(line: 3127, column: 19, scope: !12711)
!12715 = !DILocation(line: 3127, column: 17, scope: !12711)
!12716 = !DILocation(line: 3127, column: 32, scope: !12711)
!12717 = !DILocation(line: 3127, column: 37, scope: !12711)
!12718 = !DILocation(line: 3127, column: 36, scope: !12711)
!12719 = !DILocation(line: 0, scope: !12711)
!12720 = !DILocation(line: 3128, column: 10, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 3127, column: 44)
!12722 = !DILocation(line: 3128, column: 8, scope: !12721)
!12723 = !DILocation(line: 3129, column: 11, scope: !12721)
!12724 = !DILocation(line: 3129, column: 9, scope: !12721)
!12725 = !DILocation(line: 3130, column: 4, scope: !12721)
!12726 = !DILocation(line: 3131, column: 9, scope: !12721)
!12727 = distinct !{!12727, !12712, !12728}
!12728 = !DILocation(line: 3132, column: 3, scope: !12711)
!12729 = !DILocation(line: 3133, column: 2, scope: !12711)
!12730 = !DILocation(line: 3135, column: 9, scope: !12680)
!12731 = !DILocation(line: 3135, column: 2, scope: !12680)
!12732 = distinct !DISubprogram(name: "stv090x_set_s2rolloff", scope: !3, file: !3, line: 3138, type: !4652, scopeLine: 3139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!12733 = !DILocalVariable(name: "state", arg: 1, scope: !12732, file: !3, line: 3138, type: !4654)
!12734 = !DILocation(line: 3138, column: 56, scope: !12732)
!12735 = !DILocalVariable(name: "reg", scope: !12732, file: !3, line: 3140, type: !571)
!12736 = !DILocation(line: 3140, column: 6, scope: !12732)
!12737 = !DILocation(line: 3142, column: 6, scope: !12738)
!12738 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 3142, column: 6)
!12739 = !DILocation(line: 3142, column: 13, scope: !12738)
!12740 = !DILocation(line: 3142, column: 23, scope: !12738)
!12741 = !DILocation(line: 3142, column: 31, scope: !12738)
!12742 = !DILocation(line: 3142, column: 6, scope: !12732)
!12743 = !DILocation(line: 3144, column: 9, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 3142, column: 40)
!12745 = !DILocation(line: 3144, column: 7, scope: !12744)
!12746 = !DILocation(line: 3145, column: 3, scope: !12744)
!12747 = !DILocation(line: 3146, column: 7, scope: !12748)
!12748 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 3146, column: 7)
!12749 = !DILocation(line: 3146, column: 46, scope: !12748)
!12750 = !DILocation(line: 3146, column: 7, scope: !12744)
!12751 = !DILocation(line: 3147, column: 4, scope: !12748)
!12752 = !DILocation(line: 3148, column: 2, scope: !12744)
!12753 = !DILocation(line: 3150, column: 9, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12738, file: !3, line: 3148, column: 9)
!12755 = !DILocation(line: 3150, column: 7, scope: !12754)
!12756 = !DILocation(line: 3151, column: 3, scope: !12754)
!12757 = !DILocation(line: 3152, column: 7, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12754, file: !3, line: 3152, column: 7)
!12759 = !DILocation(line: 3152, column: 46, scope: !12758)
!12760 = !DILocation(line: 3152, column: 7, scope: !12754)
!12761 = !DILocation(line: 3153, column: 4, scope: !12758)
!12762 = !DILocation(line: 3155, column: 2, scope: !12732)
!12763 = !DILabel(scope: !12732, name: "err", file: !3, line: 3156)
!12764 = !DILocation(line: 3156, column: 1, scope: !12732)
!12765 = !DILocation(line: 3157, column: 2, scope: !12732)
!12766 = !DILocation(line: 3157, column: 2, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 3157, column: 2)
!12768 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 3157, column: 2)
!12769 = distinct !DILexicalBlock(scope: !12770, file: !3, line: 3157, column: 2)
!12770 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 3157, column: 2)
!12771 = !DILocation(line: 3157, column: 2, scope: !12768)
!12772 = !DILocation(line: 3157, column: 2, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 3157, column: 2)
!12774 = !DILocation(line: 3157, column: 2, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 3157, column: 2)
!12776 = !DILocation(line: 3157, column: 2, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 3157, column: 2)
!12778 = !DILocation(line: 3157, column: 2, scope: !12770)
!12779 = !DILocation(line: 3158, column: 2, scope: !12732)
!12780 = !DILocation(line: 3159, column: 1, scope: !12732)
!12781 = distinct !DISubprogram(name: "stv090x_chk_signal", scope: !3, file: !3, line: 2301, type: !4652, scopeLine: 2302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!12782 = !DILocalVariable(name: "state", arg: 1, scope: !12781, file: !3, line: 2301, type: !4654)
!12783 = !DILocation(line: 2301, column: 53, scope: !12781)
!12784 = !DILocalVariable(name: "offst_car", scope: !12781, file: !3, line: 2303, type: !445)
!12785 = !DILocation(line: 2303, column: 6, scope: !12781)
!12786 = !DILocalVariable(name: "agc2", scope: !12781, file: !3, line: 2303, type: !445)
!12787 = !DILocation(line: 2303, column: 17, scope: !12781)
!12788 = !DILocalVariable(name: "car_max", scope: !12781, file: !3, line: 2303, type: !445)
!12789 = !DILocation(line: 2303, column: 23, scope: !12781)
!12790 = !DILocalVariable(name: "no_signal", scope: !12781, file: !3, line: 2304, type: !439)
!12791 = !DILocation(line: 2304, column: 6, scope: !12781)
!12792 = !DILocation(line: 2306, column: 15, scope: !12781)
!12793 = !DILocation(line: 2306, column: 47, scope: !12781)
!12794 = !DILocation(line: 2306, column: 13, scope: !12781)
!12795 = !DILocation(line: 2307, column: 15, scope: !12781)
!12796 = !DILocation(line: 2307, column: 12, scope: !12781)
!12797 = !DILocation(line: 2308, column: 20, scope: !12781)
!12798 = !DILocation(line: 2308, column: 14, scope: !12781)
!12799 = !DILocation(line: 2308, column: 12, scope: !12781)
!12800 = !DILocation(line: 2310, column: 10, scope: !12781)
!12801 = !DILocation(line: 2310, column: 44, scope: !12781)
!12802 = !DILocation(line: 2310, column: 8, scope: !12781)
!12803 = !DILocation(line: 2311, column: 10, scope: !12781)
!12804 = !DILocation(line: 2311, column: 7, scope: !12781)
!12805 = !DILocation(line: 2312, column: 12, scope: !12781)
!12806 = !DILocation(line: 2312, column: 19, scope: !12781)
!12807 = !DILocation(line: 2312, column: 32, scope: !12781)
!12808 = !DILocation(line: 2312, column: 10, scope: !12781)
!12809 = !DILocation(line: 2314, column: 14, scope: !12781)
!12810 = !DILocation(line: 2314, column: 22, scope: !12781)
!12811 = !DILocation(line: 2314, column: 10, scope: !12781)
!12812 = !DILocation(line: 2315, column: 22, scope: !12781)
!12813 = !DILocation(line: 2315, column: 20, scope: !12781)
!12814 = !DILocation(line: 2315, column: 30, scope: !12781)
!12815 = !DILocation(line: 2315, column: 11, scope: !12781)
!12816 = !DILocation(line: 2316, column: 13, scope: !12781)
!12817 = !DILocation(line: 2316, column: 20, scope: !12781)
!12818 = !DILocation(line: 2316, column: 30, scope: !12781)
!12819 = !DILocation(line: 2316, column: 35, scope: !12781)
!12820 = !DILocation(line: 2316, column: 10, scope: !12781)
!12821 = !DILocation(line: 2318, column: 6, scope: !12822)
!12822 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2318, column: 6)
!12823 = !DILocation(line: 2318, column: 14, scope: !12822)
!12824 = !DILocation(line: 2318, column: 6, scope: !12781)
!12825 = !DILocation(line: 2319, column: 11, scope: !12822)
!12826 = !DILocation(line: 2319, column: 3, scope: !12822)
!12827 = !DILocation(line: 2321, column: 7, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12781, file: !3, line: 2321, column: 6)
!12829 = !DILocation(line: 2321, column: 12, scope: !12828)
!12830 = !DILocation(line: 2321, column: 22, scope: !12828)
!12831 = !DILocation(line: 2321, column: 26, scope: !12828)
!12832 = !DILocation(line: 2321, column: 42, scope: !12828)
!12833 = !DILocation(line: 2321, column: 40, scope: !12828)
!12834 = !DILocation(line: 2321, column: 36, scope: !12828)
!12835 = !DILocation(line: 2321, column: 51, scope: !12828)
!12836 = !DILocation(line: 2321, column: 55, scope: !12828)
!12837 = !DILocation(line: 2321, column: 72, scope: !12828)
!12838 = !DILocation(line: 2321, column: 70, scope: !12828)
!12839 = !DILocation(line: 2321, column: 65, scope: !12828)
!12840 = !DILocation(line: 2321, column: 6, scope: !12781)
!12841 = !DILocation(line: 2322, column: 13, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 2321, column: 82)
!12843 = !DILocation(line: 2323, column: 3, scope: !12842)
!12844 = !DILocation(line: 2323, column: 3, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 2323, column: 3)
!12846 = distinct !DILexicalBlock(scope: !12847, file: !3, line: 2323, column: 3)
!12847 = distinct !DILexicalBlock(scope: !12848, file: !3, line: 2323, column: 3)
!12848 = distinct !DILexicalBlock(scope: !12842, file: !3, line: 2323, column: 3)
!12849 = !DILocation(line: 2323, column: 3, scope: !12846)
!12850 = !DILocation(line: 2323, column: 3, scope: !12851)
!12851 = distinct !DILexicalBlock(scope: !12845, file: !3, line: 2323, column: 3)
!12852 = !DILocation(line: 2323, column: 3, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12851, file: !3, line: 2323, column: 3)
!12854 = !DILocation(line: 2323, column: 3, scope: !12855)
!12855 = distinct !DILexicalBlock(scope: !12853, file: !3, line: 2323, column: 3)
!12856 = !DILocation(line: 2323, column: 3, scope: !12848)
!12857 = !DILocation(line: 2324, column: 2, scope: !12842)
!12858 = !DILocation(line: 2325, column: 13, scope: !12859)
!12859 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 2324, column: 9)
!12860 = !DILocation(line: 2326, column: 3, scope: !12859)
!12861 = !DILocation(line: 2326, column: 3, scope: !12862)
!12862 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 2326, column: 3)
!12863 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 2326, column: 3)
!12864 = distinct !DILexicalBlock(scope: !12865, file: !3, line: 2326, column: 3)
!12865 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 2326, column: 3)
!12866 = !DILocation(line: 2326, column: 3, scope: !12863)
!12867 = !DILocation(line: 2326, column: 3, scope: !12868)
!12868 = distinct !DILexicalBlock(scope: !12862, file: !3, line: 2326, column: 3)
!12869 = !DILocation(line: 2326, column: 3, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12868, file: !3, line: 2326, column: 3)
!12871 = !DILocation(line: 2326, column: 3, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 2326, column: 3)
!12873 = !DILocation(line: 2326, column: 3, scope: !12865)
!12874 = !DILocation(line: 2329, column: 9, scope: !12781)
!12875 = !DILocation(line: 2329, column: 2, scope: !12781)
!12876 = distinct !DISubprogram(name: "stv090x_vitclk_ctl", scope: !3, file: !3, line: 1197, type: !7180, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!12877 = !DILocalVariable(name: "state", arg: 1, scope: !12876, file: !3, line: 1197, type: !4654)
!12878 = !DILocation(line: 1197, column: 53, scope: !12876)
!12879 = !DILocalVariable(name: "enable", arg: 2, scope: !12876, file: !3, line: 1197, type: !439)
!12880 = !DILocation(line: 1197, column: 64, scope: !12876)
!12881 = !DILocalVariable(name: "reg", scope: !12876, file: !3, line: 1199, type: !571)
!12882 = !DILocation(line: 1199, column: 6, scope: !12876)
!12883 = !DILocation(line: 1201, column: 10, scope: !12876)
!12884 = !DILocation(line: 1201, column: 17, scope: !12876)
!12885 = !DILocation(line: 1201, column: 2, scope: !12876)
!12886 = !DILocation(line: 1203, column: 15, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 1201, column: 24)
!12888 = !DILocation(line: 1203, column: 22, scope: !12887)
!12889 = !DILocation(line: 1203, column: 32, scope: !12887)
!12890 = !DILocation(line: 1203, column: 3, scope: !12887)
!12891 = !DILocation(line: 1204, column: 26, scope: !12887)
!12892 = !DILocation(line: 1204, column: 9, scope: !12887)
!12893 = !DILocation(line: 1204, column: 7, scope: !12887)
!12894 = !DILocation(line: 1205, column: 3, scope: !12887)
!12895 = !DILocation(line: 1206, column: 25, scope: !12896)
!12896 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 1206, column: 7)
!12897 = !DILocation(line: 1206, column: 50, scope: !12896)
!12898 = !DILocation(line: 1206, column: 7, scope: !12896)
!12899 = !DILocation(line: 1206, column: 55, scope: !12896)
!12900 = !DILocation(line: 1206, column: 7, scope: !12887)
!12901 = !DILocation(line: 1207, column: 4, scope: !12896)
!12902 = !DILocation(line: 1208, column: 17, scope: !12887)
!12903 = !DILocation(line: 1208, column: 24, scope: !12887)
!12904 = !DILocation(line: 1208, column: 34, scope: !12887)
!12905 = !DILocation(line: 1208, column: 3, scope: !12887)
!12906 = !DILocation(line: 1209, column: 3, scope: !12887)
!12907 = !DILocation(line: 1212, column: 15, scope: !12887)
!12908 = !DILocation(line: 1212, column: 22, scope: !12887)
!12909 = !DILocation(line: 1212, column: 32, scope: !12887)
!12910 = !DILocation(line: 1212, column: 3, scope: !12887)
!12911 = !DILocation(line: 1213, column: 26, scope: !12887)
!12912 = !DILocation(line: 1213, column: 9, scope: !12887)
!12913 = !DILocation(line: 1213, column: 7, scope: !12887)
!12914 = !DILocation(line: 1214, column: 3, scope: !12887)
!12915 = !DILocation(line: 1215, column: 25, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 1215, column: 7)
!12917 = !DILocation(line: 1215, column: 50, scope: !12916)
!12918 = !DILocation(line: 1215, column: 7, scope: !12916)
!12919 = !DILocation(line: 1215, column: 55, scope: !12916)
!12920 = !DILocation(line: 1215, column: 7, scope: !12887)
!12921 = !DILocation(line: 1216, column: 4, scope: !12916)
!12922 = !DILocation(line: 1217, column: 17, scope: !12887)
!12923 = !DILocation(line: 1217, column: 24, scope: !12887)
!12924 = !DILocation(line: 1217, column: 34, scope: !12887)
!12925 = !DILocation(line: 1217, column: 3, scope: !12887)
!12926 = !DILocation(line: 1218, column: 3, scope: !12887)
!12927 = !DILocation(line: 1221, column: 3, scope: !12887)
!12928 = !DILocation(line: 1221, column: 3, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 1221, column: 3)
!12930 = distinct !DILexicalBlock(scope: !12931, file: !3, line: 1221, column: 3)
!12931 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 1221, column: 3)
!12932 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 1221, column: 3)
!12933 = !DILocation(line: 1221, column: 3, scope: !12930)
!12934 = !DILocation(line: 1221, column: 3, scope: !12935)
!12935 = distinct !DILexicalBlock(scope: !12929, file: !3, line: 1221, column: 3)
!12936 = !DILocation(line: 1221, column: 3, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12935, file: !3, line: 1221, column: 3)
!12938 = !DILocation(line: 1221, column: 3, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12937, file: !3, line: 1221, column: 3)
!12940 = !DILocation(line: 1221, column: 3, scope: !12932)
!12941 = !DILocation(line: 1222, column: 3, scope: !12887)
!12942 = !DILocation(line: 1224, column: 2, scope: !12876)
!12943 = !DILabel(scope: !12876, name: "err", file: !3, line: 1225)
!12944 = !DILocation(line: 1225, column: 1, scope: !12876)
!12945 = !DILocation(line: 1226, column: 16, scope: !12876)
!12946 = !DILocation(line: 1226, column: 23, scope: !12876)
!12947 = !DILocation(line: 1226, column: 33, scope: !12876)
!12948 = !DILocation(line: 1226, column: 2, scope: !12876)
!12949 = !DILocation(line: 1227, column: 2, scope: !12876)
!12950 = !DILocation(line: 1227, column: 2, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 1227, column: 2)
!12952 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 1227, column: 2)
!12953 = distinct !DILexicalBlock(scope: !12954, file: !3, line: 1227, column: 2)
!12954 = distinct !DILexicalBlock(scope: !12876, file: !3, line: 1227, column: 2)
!12955 = !DILocation(line: 1227, column: 2, scope: !12952)
!12956 = !DILocation(line: 1227, column: 2, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 1227, column: 2)
!12958 = !DILocation(line: 1227, column: 2, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12957, file: !3, line: 1227, column: 2)
!12960 = !DILocation(line: 1227, column: 2, scope: !12961)
!12961 = distinct !DILexicalBlock(scope: !12959, file: !3, line: 1227, column: 2)
!12962 = !DILocation(line: 1227, column: 2, scope: !12954)
!12963 = !DILocation(line: 1228, column: 2, scope: !12876)
!12964 = !DILocation(line: 1229, column: 1, scope: !12876)
!12965 = distinct !DISubprogram(name: "stv090x_dvbs_track_crl", scope: !3, file: !3, line: 1231, type: !4652, scopeLine: 1232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!12966 = !DILocalVariable(name: "state", arg: 1, scope: !12965, file: !3, line: 1231, type: !4654)
!12967 = !DILocation(line: 1231, column: 57, scope: !12965)
!12968 = !DILocation(line: 1233, column: 6, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 1233, column: 6)
!12970 = !DILocation(line: 1233, column: 13, scope: !12969)
!12971 = !DILocation(line: 1233, column: 23, scope: !12969)
!12972 = !DILocation(line: 1233, column: 31, scope: !12969)
!12973 = !DILocation(line: 1233, column: 6, scope: !12965)
!12974 = !DILocation(line: 1235, column: 7, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12976, file: !3, line: 1235, column: 7)
!12976 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 1233, column: 40)
!12977 = !DILocation(line: 1235, column: 14, scope: !12975)
!12978 = !DILocation(line: 1235, column: 20, scope: !12975)
!12979 = !DILocation(line: 1235, column: 7, scope: !12976)
!12980 = !DILocation(line: 1236, column: 8, scope: !12981)
!12981 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 1236, column: 8)
!12982 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 1235, column: 33)
!12983 = !DILocation(line: 1236, column: 47, scope: !12981)
!12984 = !DILocation(line: 1236, column: 8, scope: !12982)
!12985 = !DILocation(line: 1237, column: 5, scope: !12981)
!12986 = !DILocation(line: 1238, column: 8, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 1238, column: 8)
!12988 = !DILocation(line: 1238, column: 47, scope: !12987)
!12989 = !DILocation(line: 1238, column: 8, scope: !12982)
!12990 = !DILocation(line: 1239, column: 5, scope: !12987)
!12991 = !DILocation(line: 1240, column: 3, scope: !12982)
!12992 = !DILocation(line: 1240, column: 15, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 1240, column: 14)
!12994 = !DILocation(line: 1240, column: 22, scope: !12993)
!12995 = !DILocation(line: 1240, column: 28, scope: !12993)
!12996 = !DILocation(line: 1240, column: 40, scope: !12993)
!12997 = !DILocation(line: 1240, column: 55, scope: !12993)
!12998 = !DILocation(line: 1240, column: 62, scope: !12993)
!12999 = !DILocation(line: 1240, column: 53, scope: !12993)
!13000 = !DILocation(line: 1240, column: 14, scope: !12975)
!13001 = !DILocation(line: 1241, column: 8, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 1241, column: 8)
!13003 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 1240, column: 70)
!13004 = !DILocation(line: 1241, column: 47, scope: !13002)
!13005 = !DILocation(line: 1241, column: 8, scope: !13003)
!13006 = !DILocation(line: 1242, column: 5, scope: !13002)
!13007 = !DILocation(line: 1243, column: 8, scope: !13008)
!13008 = distinct !DILexicalBlock(scope: !13003, file: !3, line: 1243, column: 8)
!13009 = !DILocation(line: 1243, column: 47, scope: !13008)
!13010 = !DILocation(line: 1243, column: 8, scope: !13003)
!13011 = !DILocation(line: 1244, column: 5, scope: !13008)
!13012 = !DILocation(line: 1245, column: 3, scope: !13003)
!13013 = !DILocation(line: 1245, column: 14, scope: !13014)
!13014 = distinct !DILexicalBlock(scope: !12993, file: !3, line: 1245, column: 14)
!13015 = !DILocation(line: 1245, column: 21, scope: !13014)
!13016 = !DILocation(line: 1245, column: 27, scope: !13014)
!13017 = !DILocation(line: 1245, column: 14, scope: !12993)
!13018 = !DILocation(line: 1246, column: 8, scope: !13019)
!13019 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 1246, column: 8)
!13020 = distinct !DILexicalBlock(scope: !13014, file: !3, line: 1245, column: 38)
!13021 = !DILocation(line: 1246, column: 47, scope: !13019)
!13022 = !DILocation(line: 1246, column: 8, scope: !13020)
!13023 = !DILocation(line: 1247, column: 5, scope: !13019)
!13024 = !DILocation(line: 1248, column: 8, scope: !13025)
!13025 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 1248, column: 8)
!13026 = !DILocation(line: 1248, column: 47, scope: !13025)
!13027 = !DILocation(line: 1248, column: 8, scope: !13020)
!13028 = !DILocation(line: 1249, column: 5, scope: !13025)
!13029 = !DILocation(line: 1250, column: 3, scope: !13020)
!13030 = !DILocation(line: 1252, column: 2, scope: !12976)
!13031 = !DILocation(line: 1254, column: 7, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13033, file: !3, line: 1254, column: 7)
!13033 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 1252, column: 9)
!13034 = !DILocation(line: 1254, column: 46, scope: !13032)
!13035 = !DILocation(line: 1254, column: 7, scope: !13033)
!13036 = !DILocation(line: 1255, column: 4, scope: !13032)
!13037 = !DILocation(line: 1256, column: 7, scope: !13038)
!13038 = distinct !DILexicalBlock(scope: !13033, file: !3, line: 1256, column: 7)
!13039 = !DILocation(line: 1256, column: 46, scope: !13038)
!13040 = !DILocation(line: 1256, column: 7, scope: !13033)
!13041 = !DILocation(line: 1257, column: 4, scope: !13038)
!13042 = !DILocation(line: 1259, column: 2, scope: !12965)
!13043 = !DILabel(scope: !12965, name: "err", file: !3, line: 1260)
!13044 = !DILocation(line: 1260, column: 1, scope: !12965)
!13045 = !DILocation(line: 1261, column: 2, scope: !12965)
!13046 = !DILocation(line: 1261, column: 2, scope: !13047)
!13047 = distinct !DILexicalBlock(scope: !13048, file: !3, line: 1261, column: 2)
!13048 = distinct !DILexicalBlock(scope: !13049, file: !3, line: 1261, column: 2)
!13049 = distinct !DILexicalBlock(scope: !13050, file: !3, line: 1261, column: 2)
!13050 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 1261, column: 2)
!13051 = !DILocation(line: 1261, column: 2, scope: !13048)
!13052 = !DILocation(line: 1261, column: 2, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 1261, column: 2)
!13054 = !DILocation(line: 1261, column: 2, scope: !13055)
!13055 = distinct !DILexicalBlock(scope: !13053, file: !3, line: 1261, column: 2)
!13056 = !DILocation(line: 1261, column: 2, scope: !13057)
!13057 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 1261, column: 2)
!13058 = !DILocation(line: 1261, column: 2, scope: !13050)
!13059 = !DILocation(line: 1262, column: 2, scope: !12965)
!13060 = !DILocation(line: 1263, column: 1, scope: !12965)
!13061 = distinct !DISubprogram(name: "stv090x_set_vit_thacq", scope: !3, file: !3, line: 955, type: !4652, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!13062 = !DILocalVariable(name: "state", arg: 1, scope: !13061, file: !3, line: 955, type: !4654)
!13063 = !DILocation(line: 955, column: 56, scope: !13061)
!13064 = !DILocation(line: 957, column: 6, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 957, column: 6)
!13066 = !DILocation(line: 957, column: 46, scope: !13065)
!13067 = !DILocation(line: 957, column: 6, scope: !13061)
!13068 = !DILocation(line: 958, column: 3, scope: !13065)
!13069 = !DILocation(line: 959, column: 6, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 959, column: 6)
!13071 = !DILocation(line: 959, column: 46, scope: !13070)
!13072 = !DILocation(line: 959, column: 6, scope: !13061)
!13073 = !DILocation(line: 960, column: 3, scope: !13070)
!13074 = !DILocation(line: 961, column: 6, scope: !13075)
!13075 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 961, column: 6)
!13076 = !DILocation(line: 961, column: 46, scope: !13075)
!13077 = !DILocation(line: 961, column: 6, scope: !13061)
!13078 = !DILocation(line: 962, column: 3, scope: !13075)
!13079 = !DILocation(line: 963, column: 6, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 963, column: 6)
!13081 = !DILocation(line: 963, column: 46, scope: !13080)
!13082 = !DILocation(line: 963, column: 6, scope: !13061)
!13083 = !DILocation(line: 964, column: 3, scope: !13080)
!13084 = !DILocation(line: 965, column: 6, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 965, column: 6)
!13086 = !DILocation(line: 965, column: 46, scope: !13085)
!13087 = !DILocation(line: 965, column: 6, scope: !13061)
!13088 = !DILocation(line: 966, column: 3, scope: !13085)
!13089 = !DILocation(line: 967, column: 6, scope: !13090)
!13090 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 967, column: 6)
!13091 = !DILocation(line: 967, column: 46, scope: !13090)
!13092 = !DILocation(line: 967, column: 6, scope: !13061)
!13093 = !DILocation(line: 968, column: 3, scope: !13090)
!13094 = !DILocation(line: 969, column: 2, scope: !13061)
!13095 = !DILabel(scope: !13061, name: "err", file: !3, line: 970)
!13096 = !DILocation(line: 970, column: 1, scope: !13061)
!13097 = !DILocation(line: 971, column: 2, scope: !13061)
!13098 = !DILocation(line: 971, column: 2, scope: !13099)
!13099 = distinct !DILexicalBlock(scope: !13100, file: !3, line: 971, column: 2)
!13100 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 971, column: 2)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 971, column: 2)
!13102 = distinct !DILexicalBlock(scope: !13061, file: !3, line: 971, column: 2)
!13103 = !DILocation(line: 971, column: 2, scope: !13100)
!13104 = !DILocation(line: 971, column: 2, scope: !13105)
!13105 = distinct !DILexicalBlock(scope: !13099, file: !3, line: 971, column: 2)
!13106 = !DILocation(line: 971, column: 2, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13105, file: !3, line: 971, column: 2)
!13108 = !DILocation(line: 971, column: 2, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 971, column: 2)
!13110 = !DILocation(line: 971, column: 2, scope: !13102)
!13111 = !DILocation(line: 972, column: 2, scope: !13061)
!13112 = !DILocation(line: 973, column: 1, scope: !13061)
!13113 = distinct !DISubprogram(name: "stv090x_set_viterbi", scope: !3, file: !3, line: 995, type: !4652, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!13114 = !DILocalVariable(name: "state", arg: 1, scope: !13113, file: !3, line: 995, type: !4654)
!13115 = !DILocation(line: 995, column: 54, scope: !13113)
!13116 = !DILocation(line: 997, column: 10, scope: !13113)
!13117 = !DILocation(line: 997, column: 17, scope: !13113)
!13118 = !DILocation(line: 997, column: 2, scope: !13113)
!13119 = !DILocation(line: 999, column: 7, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 999, column: 7)
!13121 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 997, column: 30)
!13122 = !DILocation(line: 999, column: 46, scope: !13120)
!13123 = !DILocation(line: 999, column: 7, scope: !13121)
!13124 = !DILocation(line: 1000, column: 4, scope: !13120)
!13125 = !DILocation(line: 1001, column: 7, scope: !13126)
!13126 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 1001, column: 7)
!13127 = !DILocation(line: 1001, column: 47, scope: !13126)
!13128 = !DILocation(line: 1001, column: 7, scope: !13121)
!13129 = !DILocation(line: 1002, column: 4, scope: !13126)
!13130 = !DILocation(line: 1003, column: 3, scope: !13121)
!13131 = !DILocation(line: 1005, column: 7, scope: !13132)
!13132 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 1005, column: 7)
!13133 = !DILocation(line: 1005, column: 46, scope: !13132)
!13134 = !DILocation(line: 1005, column: 7, scope: !13121)
!13135 = !DILocation(line: 1006, column: 4, scope: !13132)
!13136 = !DILocation(line: 1007, column: 11, scope: !13121)
!13137 = !DILocation(line: 1007, column: 18, scope: !13121)
!13138 = !DILocation(line: 1007, column: 3, scope: !13121)
!13139 = !DILocation(line: 1009, column: 8, scope: !13140)
!13140 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 1009, column: 8)
!13141 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 1007, column: 23)
!13142 = !DILocation(line: 1009, column: 48, scope: !13140)
!13143 = !DILocation(line: 1009, column: 8, scope: !13141)
!13144 = !DILocation(line: 1010, column: 5, scope: !13140)
!13145 = !DILocation(line: 1011, column: 4, scope: !13141)
!13146 = !DILocation(line: 1014, column: 8, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 1014, column: 8)
!13148 = !DILocation(line: 1014, column: 48, scope: !13147)
!13149 = !DILocation(line: 1014, column: 8, scope: !13141)
!13150 = !DILocation(line: 1015, column: 5, scope: !13147)
!13151 = !DILocation(line: 1016, column: 4, scope: !13141)
!13152 = !DILocation(line: 1019, column: 8, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 1019, column: 8)
!13154 = !DILocation(line: 1019, column: 48, scope: !13153)
!13155 = !DILocation(line: 1019, column: 8, scope: !13141)
!13156 = !DILocation(line: 1020, column: 5, scope: !13153)
!13157 = !DILocation(line: 1021, column: 4, scope: !13141)
!13158 = !DILocation(line: 1024, column: 8, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 1024, column: 8)
!13160 = !DILocation(line: 1024, column: 48, scope: !13159)
!13161 = !DILocation(line: 1024, column: 8, scope: !13141)
!13162 = !DILocation(line: 1025, column: 5, scope: !13159)
!13163 = !DILocation(line: 1026, column: 4, scope: !13141)
!13164 = !DILocation(line: 1029, column: 8, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 1029, column: 8)
!13166 = !DILocation(line: 1029, column: 48, scope: !13165)
!13167 = !DILocation(line: 1029, column: 8, scope: !13141)
!13168 = !DILocation(line: 1030, column: 5, scope: !13165)
!13169 = !DILocation(line: 1031, column: 4, scope: !13141)
!13170 = !DILocation(line: 1034, column: 8, scope: !13171)
!13171 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 1034, column: 8)
!13172 = !DILocation(line: 1034, column: 48, scope: !13171)
!13173 = !DILocation(line: 1034, column: 8, scope: !13141)
!13174 = !DILocation(line: 1035, column: 5, scope: !13171)
!13175 = !DILocation(line: 1036, column: 4, scope: !13141)
!13176 = !DILocation(line: 1038, column: 3, scope: !13121)
!13177 = !DILocation(line: 1040, column: 7, scope: !13178)
!13178 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 1040, column: 7)
!13179 = !DILocation(line: 1040, column: 46, scope: !13178)
!13180 = !DILocation(line: 1040, column: 7, scope: !13121)
!13181 = !DILocation(line: 1041, column: 4, scope: !13178)
!13182 = !DILocation(line: 1042, column: 11, scope: !13121)
!13183 = !DILocation(line: 1042, column: 18, scope: !13121)
!13184 = !DILocation(line: 1042, column: 3, scope: !13121)
!13185 = !DILocation(line: 1044, column: 8, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 1044, column: 8)
!13187 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 1042, column: 23)
!13188 = !DILocation(line: 1044, column: 48, scope: !13186)
!13189 = !DILocation(line: 1044, column: 8, scope: !13187)
!13190 = !DILocation(line: 1045, column: 5, scope: !13186)
!13191 = !DILocation(line: 1046, column: 4, scope: !13187)
!13192 = !DILocation(line: 1049, column: 8, scope: !13193)
!13193 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 1049, column: 8)
!13194 = !DILocation(line: 1049, column: 48, scope: !13193)
!13195 = !DILocation(line: 1049, column: 8, scope: !13187)
!13196 = !DILocation(line: 1050, column: 5, scope: !13193)
!13197 = !DILocation(line: 1051, column: 4, scope: !13187)
!13198 = !DILocation(line: 1054, column: 8, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 1054, column: 8)
!13200 = !DILocation(line: 1054, column: 48, scope: !13199)
!13201 = !DILocation(line: 1054, column: 8, scope: !13187)
!13202 = !DILocation(line: 1055, column: 5, scope: !13199)
!13203 = !DILocation(line: 1056, column: 4, scope: !13187)
!13204 = !DILocation(line: 1059, column: 8, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 1059, column: 8)
!13206 = !DILocation(line: 1059, column: 48, scope: !13205)
!13207 = !DILocation(line: 1059, column: 8, scope: !13187)
!13208 = !DILocation(line: 1060, column: 5, scope: !13205)
!13209 = !DILocation(line: 1061, column: 4, scope: !13187)
!13210 = !DILocation(line: 1063, column: 3, scope: !13121)
!13211 = !DILocation(line: 1065, column: 3, scope: !13121)
!13212 = !DILocation(line: 1067, column: 2, scope: !13113)
!13213 = !DILabel(scope: !13113, name: "err", file: !3, line: 1068)
!13214 = !DILocation(line: 1068, column: 1, scope: !13113)
!13215 = !DILocation(line: 1069, column: 2, scope: !13113)
!13216 = !DILocation(line: 1069, column: 2, scope: !13217)
!13217 = distinct !DILexicalBlock(scope: !13218, file: !3, line: 1069, column: 2)
!13218 = distinct !DILexicalBlock(scope: !13219, file: !3, line: 1069, column: 2)
!13219 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 1069, column: 2)
!13220 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 1069, column: 2)
!13221 = !DILocation(line: 1069, column: 2, scope: !13218)
!13222 = !DILocation(line: 1069, column: 2, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 1069, column: 2)
!13224 = !DILocation(line: 1069, column: 2, scope: !13225)
!13225 = distinct !DILexicalBlock(scope: !13223, file: !3, line: 1069, column: 2)
!13226 = !DILocation(line: 1069, column: 2, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 1069, column: 2)
!13228 = !DILocation(line: 1069, column: 2, scope: !13220)
!13229 = !DILocation(line: 1070, column: 2, scope: !13113)
!13230 = !DILocation(line: 1071, column: 1, scope: !13113)
!13231 = distinct !DISubprogram(name: "stv090x_activate_modcod", scope: !3, file: !3, line: 1113, type: !4652, scopeLine: 1114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!13232 = !DILocalVariable(name: "state", arg: 1, scope: !13231, file: !3, line: 1113, type: !4654)
!13233 = !DILocation(line: 1113, column: 58, scope: !13231)
!13234 = !DILocation(line: 1115, column: 6, scope: !13235)
!13235 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1115, column: 6)
!13236 = !DILocation(line: 1115, column: 51, scope: !13235)
!13237 = !DILocation(line: 1115, column: 6, scope: !13231)
!13238 = !DILocation(line: 1116, column: 3, scope: !13235)
!13239 = !DILocation(line: 1117, column: 6, scope: !13240)
!13240 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1117, column: 6)
!13241 = !DILocation(line: 1117, column: 51, scope: !13240)
!13242 = !DILocation(line: 1117, column: 6, scope: !13231)
!13243 = !DILocation(line: 1118, column: 3, scope: !13240)
!13244 = !DILocation(line: 1119, column: 6, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1119, column: 6)
!13246 = !DILocation(line: 1119, column: 51, scope: !13245)
!13247 = !DILocation(line: 1119, column: 6, scope: !13231)
!13248 = !DILocation(line: 1120, column: 3, scope: !13245)
!13249 = !DILocation(line: 1121, column: 6, scope: !13250)
!13250 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1121, column: 6)
!13251 = !DILocation(line: 1121, column: 51, scope: !13250)
!13252 = !DILocation(line: 1121, column: 6, scope: !13231)
!13253 = !DILocation(line: 1122, column: 3, scope: !13250)
!13254 = !DILocation(line: 1123, column: 6, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1123, column: 6)
!13256 = !DILocation(line: 1123, column: 51, scope: !13255)
!13257 = !DILocation(line: 1123, column: 6, scope: !13231)
!13258 = !DILocation(line: 1124, column: 3, scope: !13255)
!13259 = !DILocation(line: 1125, column: 6, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1125, column: 6)
!13261 = !DILocation(line: 1125, column: 51, scope: !13260)
!13262 = !DILocation(line: 1125, column: 6, scope: !13231)
!13263 = !DILocation(line: 1126, column: 3, scope: !13260)
!13264 = !DILocation(line: 1127, column: 6, scope: !13265)
!13265 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1127, column: 6)
!13266 = !DILocation(line: 1127, column: 51, scope: !13265)
!13267 = !DILocation(line: 1127, column: 6, scope: !13231)
!13268 = !DILocation(line: 1128, column: 3, scope: !13265)
!13269 = !DILocation(line: 1129, column: 6, scope: !13270)
!13270 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1129, column: 6)
!13271 = !DILocation(line: 1129, column: 51, scope: !13270)
!13272 = !DILocation(line: 1129, column: 6, scope: !13231)
!13273 = !DILocation(line: 1130, column: 3, scope: !13270)
!13274 = !DILocation(line: 1131, column: 6, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1131, column: 6)
!13276 = !DILocation(line: 1131, column: 51, scope: !13275)
!13277 = !DILocation(line: 1131, column: 6, scope: !13231)
!13278 = !DILocation(line: 1132, column: 3, scope: !13275)
!13279 = !DILocation(line: 1133, column: 6, scope: !13280)
!13280 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1133, column: 6)
!13281 = !DILocation(line: 1133, column: 51, scope: !13280)
!13282 = !DILocation(line: 1133, column: 6, scope: !13231)
!13283 = !DILocation(line: 1134, column: 3, scope: !13280)
!13284 = !DILocation(line: 1135, column: 6, scope: !13285)
!13285 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1135, column: 6)
!13286 = !DILocation(line: 1135, column: 51, scope: !13285)
!13287 = !DILocation(line: 1135, column: 6, scope: !13231)
!13288 = !DILocation(line: 1136, column: 3, scope: !13285)
!13289 = !DILocation(line: 1137, column: 6, scope: !13290)
!13290 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1137, column: 6)
!13291 = !DILocation(line: 1137, column: 51, scope: !13290)
!13292 = !DILocation(line: 1137, column: 6, scope: !13231)
!13293 = !DILocation(line: 1138, column: 3, scope: !13290)
!13294 = !DILocation(line: 1139, column: 6, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1139, column: 6)
!13296 = !DILocation(line: 1139, column: 51, scope: !13295)
!13297 = !DILocation(line: 1139, column: 6, scope: !13231)
!13298 = !DILocation(line: 1140, column: 3, scope: !13295)
!13299 = !DILocation(line: 1141, column: 6, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1141, column: 6)
!13301 = !DILocation(line: 1141, column: 51, scope: !13300)
!13302 = !DILocation(line: 1141, column: 6, scope: !13231)
!13303 = !DILocation(line: 1142, column: 3, scope: !13300)
!13304 = !DILocation(line: 1143, column: 6, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1143, column: 6)
!13306 = !DILocation(line: 1143, column: 51, scope: !13305)
!13307 = !DILocation(line: 1143, column: 6, scope: !13231)
!13308 = !DILocation(line: 1144, column: 3, scope: !13305)
!13309 = !DILocation(line: 1145, column: 6, scope: !13310)
!13310 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1145, column: 6)
!13311 = !DILocation(line: 1145, column: 51, scope: !13310)
!13312 = !DILocation(line: 1145, column: 6, scope: !13231)
!13313 = !DILocation(line: 1146, column: 3, scope: !13310)
!13314 = !DILocation(line: 1148, column: 2, scope: !13231)
!13315 = !DILabel(scope: !13231, name: "err", file: !3, line: 1149)
!13316 = !DILocation(line: 1149, column: 1, scope: !13231)
!13317 = !DILocation(line: 1150, column: 2, scope: !13231)
!13318 = !DILocation(line: 1150, column: 2, scope: !13319)
!13319 = distinct !DILexicalBlock(scope: !13320, file: !3, line: 1150, column: 2)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !3, line: 1150, column: 2)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 1150, column: 2)
!13322 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 1150, column: 2)
!13323 = !DILocation(line: 1150, column: 2, scope: !13320)
!13324 = !DILocation(line: 1150, column: 2, scope: !13325)
!13325 = distinct !DILexicalBlock(scope: !13319, file: !3, line: 1150, column: 2)
!13326 = !DILocation(line: 1150, column: 2, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 1150, column: 2)
!13328 = !DILocation(line: 1150, column: 2, scope: !13329)
!13329 = distinct !DILexicalBlock(scope: !13327, file: !3, line: 1150, column: 2)
!13330 = !DILocation(line: 1150, column: 2, scope: !13322)
!13331 = !DILocation(line: 1151, column: 2, scope: !13231)
!13332 = !DILocation(line: 1152, column: 1, scope: !13231)
!13333 = distinct !DISubprogram(name: "stv090x_set_vit_thtracq", scope: !3, file: !3, line: 975, type: !4652, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!13334 = !DILocalVariable(name: "state", arg: 1, scope: !13333, file: !3, line: 975, type: !4654)
!13335 = !DILocation(line: 975, column: 58, scope: !13333)
!13336 = !DILocation(line: 977, column: 6, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 977, column: 6)
!13338 = !DILocation(line: 977, column: 46, scope: !13337)
!13339 = !DILocation(line: 977, column: 6, scope: !13333)
!13340 = !DILocation(line: 978, column: 3, scope: !13337)
!13341 = !DILocation(line: 979, column: 6, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 979, column: 6)
!13343 = !DILocation(line: 979, column: 46, scope: !13342)
!13344 = !DILocation(line: 979, column: 6, scope: !13333)
!13345 = !DILocation(line: 980, column: 3, scope: !13342)
!13346 = !DILocation(line: 981, column: 6, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 981, column: 6)
!13348 = !DILocation(line: 981, column: 46, scope: !13347)
!13349 = !DILocation(line: 981, column: 6, scope: !13333)
!13350 = !DILocation(line: 982, column: 3, scope: !13347)
!13351 = !DILocation(line: 983, column: 6, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 983, column: 6)
!13353 = !DILocation(line: 983, column: 46, scope: !13352)
!13354 = !DILocation(line: 983, column: 6, scope: !13333)
!13355 = !DILocation(line: 984, column: 3, scope: !13352)
!13356 = !DILocation(line: 985, column: 6, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 985, column: 6)
!13358 = !DILocation(line: 985, column: 46, scope: !13357)
!13359 = !DILocation(line: 985, column: 6, scope: !13333)
!13360 = !DILocation(line: 986, column: 3, scope: !13357)
!13361 = !DILocation(line: 987, column: 6, scope: !13362)
!13362 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 987, column: 6)
!13363 = !DILocation(line: 987, column: 46, scope: !13362)
!13364 = !DILocation(line: 987, column: 6, scope: !13333)
!13365 = !DILocation(line: 988, column: 3, scope: !13362)
!13366 = !DILocation(line: 989, column: 2, scope: !13333)
!13367 = !DILabel(scope: !13333, name: "err", file: !3, line: 990)
!13368 = !DILocation(line: 990, column: 1, scope: !13333)
!13369 = !DILocation(line: 991, column: 2, scope: !13333)
!13370 = !DILocation(line: 991, column: 2, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13372, file: !3, line: 991, column: 2)
!13372 = distinct !DILexicalBlock(scope: !13373, file: !3, line: 991, column: 2)
!13373 = distinct !DILexicalBlock(scope: !13374, file: !3, line: 991, column: 2)
!13374 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 991, column: 2)
!13375 = !DILocation(line: 991, column: 2, scope: !13372)
!13376 = !DILocation(line: 991, column: 2, scope: !13377)
!13377 = distinct !DILexicalBlock(scope: !13371, file: !3, line: 991, column: 2)
!13378 = !DILocation(line: 991, column: 2, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13377, file: !3, line: 991, column: 2)
!13380 = !DILocation(line: 991, column: 2, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13379, file: !3, line: 991, column: 2)
!13382 = !DILocation(line: 991, column: 2, scope: !13374)
!13383 = !DILocation(line: 992, column: 2, scope: !13333)
!13384 = !DILocation(line: 993, column: 1, scope: !13333)
!13385 = distinct !DISubprogram(name: "stv090x_get_agc2_min_level", scope: !3, file: !3, line: 1585, type: !4652, scopeLine: 1586, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!13386 = !DILocalVariable(name: "state", arg: 1, scope: !13385, file: !3, line: 1585, type: !4654)
!13387 = !DILocation(line: 1585, column: 61, scope: !13385)
!13388 = !DILocalVariable(name: "agc2_min", scope: !13385, file: !3, line: 1587, type: !571)
!13389 = !DILocation(line: 1587, column: 6, scope: !13385)
!13390 = !DILocalVariable(name: "agc2", scope: !13385, file: !3, line: 1587, type: !571)
!13391 = !DILocation(line: 1587, column: 25, scope: !13385)
!13392 = !DILocalVariable(name: "freq_init", scope: !13385, file: !3, line: 1587, type: !571)
!13393 = !DILocation(line: 1587, column: 35, scope: !13385)
!13394 = !DILocalVariable(name: "freq_step", scope: !13385, file: !3, line: 1587, type: !571)
!13395 = !DILocation(line: 1587, column: 46, scope: !13385)
!13396 = !DILocalVariable(name: "reg", scope: !13385, file: !3, line: 1587, type: !571)
!13397 = !DILocation(line: 1587, column: 57, scope: !13385)
!13398 = !DILocalVariable(name: "i", scope: !13385, file: !3, line: 1588, type: !445)
!13399 = !DILocation(line: 1588, column: 6, scope: !13385)
!13400 = !DILocalVariable(name: "j", scope: !13385, file: !3, line: 1588, type: !445)
!13401 = !DILocation(line: 1588, column: 9, scope: !13385)
!13402 = !DILocalVariable(name: "steps", scope: !13385, file: !3, line: 1588, type: !445)
!13403 = !DILocation(line: 1588, column: 12, scope: !13385)
!13404 = !DILocalVariable(name: "dir", scope: !13385, file: !3, line: 1588, type: !445)
!13405 = !DILocation(line: 1588, column: 19, scope: !13385)
!13406 = !DILocation(line: 1590, column: 6, scope: !13407)
!13407 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1590, column: 6)
!13408 = !DILocation(line: 1590, column: 48, scope: !13407)
!13409 = !DILocation(line: 1590, column: 6, scope: !13385)
!13410 = !DILocation(line: 1591, column: 3, scope: !13407)
!13411 = !DILocation(line: 1592, column: 8, scope: !13385)
!13412 = !DILocation(line: 1592, column: 6, scope: !13385)
!13413 = !DILocation(line: 1593, column: 2, scope: !13385)
!13414 = !DILocation(line: 1594, column: 2, scope: !13385)
!13415 = !DILocation(line: 1595, column: 6, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1595, column: 6)
!13417 = !DILocation(line: 1595, column: 48, scope: !13416)
!13418 = !DILocation(line: 1595, column: 6, scope: !13385)
!13419 = !DILocation(line: 1596, column: 3, scope: !13416)
!13420 = !DILocation(line: 1598, column: 6, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1598, column: 6)
!13422 = !DILocation(line: 1598, column: 47, scope: !13421)
!13423 = !DILocation(line: 1598, column: 6, scope: !13385)
!13424 = !DILocation(line: 1599, column: 3, scope: !13421)
!13425 = !DILocation(line: 1600, column: 6, scope: !13426)
!13426 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1600, column: 6)
!13427 = !DILocation(line: 1600, column: 47, scope: !13426)
!13428 = !DILocation(line: 1600, column: 6, scope: !13385)
!13429 = !DILocation(line: 1601, column: 3, scope: !13426)
!13430 = !DILocation(line: 1602, column: 6, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1602, column: 6)
!13432 = !DILocation(line: 1602, column: 48, scope: !13431)
!13433 = !DILocation(line: 1602, column: 6, scope: !13385)
!13434 = !DILocation(line: 1603, column: 3, scope: !13431)
!13435 = !DILocation(line: 1604, column: 6, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1604, column: 6)
!13437 = !DILocation(line: 1604, column: 48, scope: !13436)
!13438 = !DILocation(line: 1604, column: 6, scope: !13385)
!13439 = !DILocation(line: 1605, column: 3, scope: !13436)
!13440 = !DILocation(line: 1606, column: 6, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1606, column: 6)
!13442 = !DILocation(line: 1606, column: 47, scope: !13441)
!13443 = !DILocation(line: 1606, column: 6, scope: !13385)
!13444 = !DILocation(line: 1607, column: 3, scope: !13441)
!13445 = !DILocation(line: 1608, column: 24, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1608, column: 6)
!13447 = !DILocation(line: 1608, column: 6, scope: !13446)
!13448 = !DILocation(line: 1608, column: 40, scope: !13446)
!13449 = !DILocation(line: 1608, column: 6, scope: !13385)
!13450 = !DILocation(line: 1609, column: 3, scope: !13446)
!13451 = !DILocation(line: 1611, column: 11, scope: !13385)
!13452 = !DILocation(line: 1611, column: 18, scope: !13385)
!13453 = !DILocation(line: 1611, column: 31, scope: !13385)
!13454 = !DILocation(line: 1611, column: 9, scope: !13385)
!13455 = !DILocation(line: 1612, column: 6, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1612, column: 6)
!13457 = !DILocation(line: 1612, column: 12, scope: !13456)
!13458 = !DILocation(line: 1612, column: 6, scope: !13385)
!13459 = !DILocation(line: 1613, column: 9, scope: !13456)
!13460 = !DILocation(line: 1613, column: 3, scope: !13456)
!13461 = !DILocation(line: 1615, column: 6, scope: !13385)
!13462 = !DILocation(line: 1616, column: 33, scope: !13385)
!13463 = !DILocation(line: 1616, column: 40, scope: !13385)
!13464 = !DILocation(line: 1616, column: 50, scope: !13385)
!13465 = !DILocation(line: 1616, column: 55, scope: !13385)
!13466 = !DILocation(line: 1616, column: 30, scope: !13385)
!13467 = !DILocation(line: 1616, column: 12, scope: !13385)
!13468 = !DILocation(line: 1617, column: 12, scope: !13385)
!13469 = !DILocation(line: 1619, column: 9, scope: !13470)
!13470 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1619, column: 2)
!13471 = !DILocation(line: 1619, column: 7, scope: !13470)
!13472 = !DILocation(line: 1619, column: 14, scope: !13473)
!13473 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 1619, column: 2)
!13474 = !DILocation(line: 1619, column: 18, scope: !13473)
!13475 = !DILocation(line: 1619, column: 16, scope: !13473)
!13476 = !DILocation(line: 1619, column: 2, scope: !13470)
!13477 = !DILocation(line: 1620, column: 7, scope: !13478)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1620, column: 7)
!13479 = distinct !DILexicalBlock(scope: !13473, file: !3, line: 1619, column: 30)
!13480 = !DILocation(line: 1620, column: 11, scope: !13478)
!13481 = !DILocation(line: 1620, column: 7, scope: !13479)
!13482 = !DILocation(line: 1621, column: 16, scope: !13478)
!13483 = !DILocation(line: 1621, column: 29, scope: !13478)
!13484 = !DILocation(line: 1621, column: 41, scope: !13478)
!13485 = !DILocation(line: 1621, column: 39, scope: !13478)
!13486 = !DILocation(line: 1621, column: 26, scope: !13478)
!13487 = !DILocation(line: 1621, column: 14, scope: !13478)
!13488 = !DILocation(line: 1621, column: 4, scope: !13478)
!13489 = !DILocation(line: 1623, column: 16, scope: !13478)
!13490 = !DILocation(line: 1623, column: 29, scope: !13478)
!13491 = !DILocation(line: 1623, column: 41, scope: !13478)
!13492 = !DILocation(line: 1623, column: 39, scope: !13478)
!13493 = !DILocation(line: 1623, column: 26, scope: !13478)
!13494 = !DILocation(line: 1623, column: 14, scope: !13478)
!13495 = !DILocation(line: 1625, column: 7, scope: !13479)
!13496 = !DILocation(line: 1627, column: 7, scope: !13497)
!13497 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1627, column: 7)
!13498 = !DILocation(line: 1627, column: 51, scope: !13497)
!13499 = !DILocation(line: 1627, column: 7, scope: !13479)
!13500 = !DILocation(line: 1628, column: 4, scope: !13497)
!13501 = !DILocation(line: 1629, column: 7, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1629, column: 7)
!13503 = !DILocation(line: 1629, column: 69, scope: !13502)
!13504 = !DILocation(line: 1629, column: 7, scope: !13479)
!13505 = !DILocation(line: 1630, column: 4, scope: !13502)
!13506 = !DILocation(line: 1631, column: 7, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1631, column: 7)
!13508 = !DILocation(line: 1631, column: 62, scope: !13507)
!13509 = !DILocation(line: 1631, column: 7, scope: !13479)
!13510 = !DILocation(line: 1632, column: 4, scope: !13507)
!13511 = !DILocation(line: 1633, column: 7, scope: !13512)
!13512 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1633, column: 7)
!13513 = !DILocation(line: 1633, column: 51, scope: !13512)
!13514 = !DILocation(line: 1633, column: 7, scope: !13479)
!13515 = !DILocation(line: 1634, column: 4, scope: !13512)
!13516 = !DILocation(line: 1635, column: 3, scope: !13479)
!13517 = !DILocation(line: 1637, column: 8, scope: !13479)
!13518 = !DILocation(line: 1638, column: 10, scope: !13519)
!13519 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1638, column: 3)
!13520 = !DILocation(line: 1638, column: 8, scope: !13519)
!13521 = !DILocation(line: 1638, column: 15, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 1638, column: 3)
!13523 = !DILocation(line: 1638, column: 17, scope: !13522)
!13524 = !DILocation(line: 1638, column: 3, scope: !13519)
!13525 = !DILocation(line: 1639, column: 13, scope: !13526)
!13526 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 1638, column: 28)
!13527 = !DILocation(line: 1639, column: 47, scope: !13526)
!13528 = !DILocation(line: 1640, column: 5, scope: !13526)
!13529 = !DILocation(line: 1639, column: 53, scope: !13526)
!13530 = !DILocation(line: 1639, column: 9, scope: !13526)
!13531 = !DILocation(line: 1641, column: 3, scope: !13526)
!13532 = !DILocation(line: 1638, column: 24, scope: !13522)
!13533 = !DILocation(line: 1638, column: 3, scope: !13522)
!13534 = distinct !{!13534, !13524, !13535}
!13535 = !DILocation(line: 1641, column: 3, scope: !13519)
!13536 = !DILocation(line: 1642, column: 8, scope: !13479)
!13537 = !DILocation(line: 1643, column: 7, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 1643, column: 7)
!13539 = !DILocation(line: 1643, column: 14, scope: !13538)
!13540 = !DILocation(line: 1643, column: 12, scope: !13538)
!13541 = !DILocation(line: 1643, column: 7, scope: !13479)
!13542 = !DILocation(line: 1644, column: 15, scope: !13538)
!13543 = !DILocation(line: 1644, column: 13, scope: !13538)
!13544 = !DILocation(line: 1644, column: 4, scope: !13538)
!13545 = !DILocation(line: 1645, column: 2, scope: !13479)
!13546 = !DILocation(line: 1619, column: 26, scope: !13473)
!13547 = !DILocation(line: 1619, column: 2, scope: !13473)
!13548 = distinct !{!13548, !13476, !13549}
!13549 = !DILocation(line: 1645, column: 2, scope: !13470)
!13550 = !DILocation(line: 1647, column: 9, scope: !13385)
!13551 = !DILocation(line: 1647, column: 2, scope: !13385)
!13552 = !DILabel(scope: !13385, name: "err", file: !3, line: 1648)
!13553 = !DILocation(line: 1648, column: 1, scope: !13385)
!13554 = !DILocation(line: 1649, column: 2, scope: !13385)
!13555 = !DILocation(line: 1649, column: 2, scope: !13556)
!13556 = distinct !DILexicalBlock(scope: !13557, file: !3, line: 1649, column: 2)
!13557 = distinct !DILexicalBlock(scope: !13558, file: !3, line: 1649, column: 2)
!13558 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 1649, column: 2)
!13559 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 1649, column: 2)
!13560 = !DILocation(line: 1649, column: 2, scope: !13557)
!13561 = !DILocation(line: 1649, column: 2, scope: !13562)
!13562 = distinct !DILexicalBlock(scope: !13556, file: !3, line: 1649, column: 2)
!13563 = !DILocation(line: 1649, column: 2, scope: !13564)
!13564 = distinct !DILexicalBlock(scope: !13562, file: !3, line: 1649, column: 2)
!13565 = !DILocation(line: 1649, column: 2, scope: !13566)
!13566 = distinct !DILexicalBlock(scope: !13564, file: !3, line: 1649, column: 2)
!13567 = !DILocation(line: 1649, column: 2, scope: !13559)
!13568 = !DILocation(line: 1650, column: 2, scope: !13385)
!13569 = !DILocation(line: 1651, column: 1, scope: !13385)
!13570 = distinct !DISubprogram(name: "stv090x_srate_srch_coarse", scope: !3, file: !3, line: 1678, type: !7409, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!13571 = !DILocalVariable(name: "state", arg: 1, scope: !13570, file: !3, line: 1678, type: !4654)
!13572 = !DILocation(line: 1678, column: 60, scope: !13570)
!13573 = !DILocalVariable(name: "fe", scope: !13570, file: !3, line: 1680, type: !588)
!13574 = !DILocation(line: 1680, column: 23, scope: !13570)
!13575 = !DILocation(line: 1680, column: 29, scope: !13570)
!13576 = !DILocation(line: 1680, column: 36, scope: !13570)
!13577 = !DILocalVariable(name: "tmg_lock", scope: !13570, file: !3, line: 1682, type: !439)
!13578 = !DILocation(line: 1682, column: 6, scope: !13570)
!13579 = !DILocalVariable(name: "i", scope: !13570, file: !3, line: 1682, type: !439)
!13580 = !DILocation(line: 1682, column: 20, scope: !13570)
!13581 = !DILocalVariable(name: "tmg_cpt", scope: !13570, file: !3, line: 1683, type: !445)
!13582 = !DILocation(line: 1683, column: 6, scope: !13570)
!13583 = !DILocalVariable(name: "dir", scope: !13570, file: !3, line: 1683, type: !445)
!13584 = !DILocation(line: 1683, column: 19, scope: !13570)
!13585 = !DILocalVariable(name: "steps", scope: !13570, file: !3, line: 1683, type: !445)
!13586 = !DILocation(line: 1683, column: 28, scope: !13570)
!13587 = !DILocalVariable(name: "cur_step", scope: !13570, file: !3, line: 1683, type: !445)
!13588 = !DILocation(line: 1683, column: 35, scope: !13570)
!13589 = !DILocalVariable(name: "freq", scope: !13570, file: !3, line: 1683, type: !445)
!13590 = !DILocation(line: 1683, column: 49, scope: !13570)
!13591 = !DILocalVariable(name: "srate_coarse", scope: !13570, file: !3, line: 1684, type: !571)
!13592 = !DILocation(line: 1684, column: 6, scope: !13570)
!13593 = !DILocalVariable(name: "agc2", scope: !13570, file: !3, line: 1684, type: !571)
!13594 = !DILocation(line: 1684, column: 24, scope: !13570)
!13595 = !DILocalVariable(name: "car_step", scope: !13570, file: !3, line: 1684, type: !571)
!13596 = !DILocation(line: 1684, column: 34, scope: !13570)
!13597 = !DILocalVariable(name: "reg", scope: !13570, file: !3, line: 1684, type: !571)
!13598 = !DILocation(line: 1684, column: 51, scope: !13570)
!13599 = !DILocalVariable(name: "agc2th", scope: !13570, file: !3, line: 1685, type: !571)
!13600 = !DILocation(line: 1685, column: 6, scope: !13570)
!13601 = !DILocation(line: 1687, column: 6, scope: !13602)
!13602 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1687, column: 6)
!13603 = !DILocation(line: 1687, column: 13, scope: !13602)
!13604 = !DILocation(line: 1687, column: 23, scope: !13602)
!13605 = !DILocation(line: 1687, column: 31, scope: !13602)
!13606 = !DILocation(line: 1687, column: 6, scope: !13570)
!13607 = !DILocation(line: 1688, column: 10, scope: !13602)
!13608 = !DILocation(line: 1688, column: 3, scope: !13602)
!13609 = !DILocation(line: 1690, column: 10, scope: !13602)
!13610 = !DILocation(line: 1692, column: 8, scope: !13570)
!13611 = !DILocation(line: 1692, column: 6, scope: !13570)
!13612 = !DILocation(line: 1693, column: 2, scope: !13570)
!13613 = !DILocation(line: 1694, column: 6, scope: !13614)
!13614 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1694, column: 6)
!13615 = !DILocation(line: 1694, column: 49, scope: !13614)
!13616 = !DILocation(line: 1694, column: 6, scope: !13570)
!13617 = !DILocation(line: 1695, column: 3, scope: !13614)
!13618 = !DILocation(line: 1696, column: 6, scope: !13619)
!13619 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1696, column: 6)
!13620 = !DILocation(line: 1696, column: 47, scope: !13619)
!13621 = !DILocation(line: 1696, column: 6, scope: !13570)
!13622 = !DILocation(line: 1697, column: 3, scope: !13619)
!13623 = !DILocation(line: 1698, column: 6, scope: !13624)
!13624 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1698, column: 6)
!13625 = !DILocation(line: 1698, column: 48, scope: !13624)
!13626 = !DILocation(line: 1698, column: 6, scope: !13570)
!13627 = !DILocation(line: 1699, column: 3, scope: !13624)
!13628 = !DILocation(line: 1700, column: 6, scope: !13629)
!13629 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1700, column: 6)
!13630 = !DILocation(line: 1700, column: 50, scope: !13629)
!13631 = !DILocation(line: 1700, column: 6, scope: !13570)
!13632 = !DILocation(line: 1701, column: 3, scope: !13629)
!13633 = !DILocation(line: 1702, column: 6, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1702, column: 6)
!13635 = !DILocation(line: 1702, column: 50, scope: !13634)
!13636 = !DILocation(line: 1702, column: 6, scope: !13570)
!13637 = !DILocation(line: 1703, column: 3, scope: !13634)
!13638 = !DILocation(line: 1704, column: 8, scope: !13570)
!13639 = !DILocation(line: 1704, column: 6, scope: !13570)
!13640 = !DILocation(line: 1705, column: 2, scope: !13570)
!13641 = !DILocation(line: 1706, column: 2, scope: !13570)
!13642 = !DILocation(line: 1707, column: 6, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1707, column: 6)
!13644 = !DILocation(line: 1707, column: 48, scope: !13643)
!13645 = !DILocation(line: 1707, column: 6, scope: !13570)
!13646 = !DILocation(line: 1708, column: 3, scope: !13643)
!13647 = !DILocation(line: 1710, column: 6, scope: !13648)
!13648 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1710, column: 6)
!13649 = !DILocation(line: 1710, column: 47, scope: !13648)
!13650 = !DILocation(line: 1710, column: 6, scope: !13570)
!13651 = !DILocation(line: 1711, column: 3, scope: !13648)
!13652 = !DILocation(line: 1712, column: 6, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1712, column: 6)
!13654 = !DILocation(line: 1712, column: 47, scope: !13653)
!13655 = !DILocation(line: 1712, column: 6, scope: !13570)
!13656 = !DILocation(line: 1713, column: 3, scope: !13653)
!13657 = !DILocation(line: 1714, column: 6, scope: !13658)
!13658 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1714, column: 6)
!13659 = !DILocation(line: 1714, column: 48, scope: !13658)
!13660 = !DILocation(line: 1714, column: 6, scope: !13570)
!13661 = !DILocation(line: 1715, column: 3, scope: !13658)
!13662 = !DILocation(line: 1716, column: 6, scope: !13663)
!13663 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1716, column: 6)
!13664 = !DILocation(line: 1716, column: 48, scope: !13663)
!13665 = !DILocation(line: 1716, column: 6, scope: !13570)
!13666 = !DILocation(line: 1717, column: 3, scope: !13663)
!13667 = !DILocation(line: 1718, column: 6, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1718, column: 6)
!13669 = !DILocation(line: 1718, column: 47, scope: !13668)
!13670 = !DILocation(line: 1718, column: 6, scope: !13570)
!13671 = !DILocation(line: 1719, column: 3, scope: !13668)
!13672 = !DILocation(line: 1720, column: 6, scope: !13673)
!13673 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1720, column: 6)
!13674 = !DILocation(line: 1720, column: 48, scope: !13673)
!13675 = !DILocation(line: 1720, column: 6, scope: !13570)
!13676 = !DILocation(line: 1721, column: 3, scope: !13673)
!13677 = !DILocation(line: 1723, column: 6, scope: !13678)
!13678 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1723, column: 6)
!13679 = !DILocation(line: 1723, column: 13, scope: !13678)
!13680 = !DILocation(line: 1723, column: 23, scope: !13678)
!13681 = !DILocation(line: 1723, column: 31, scope: !13678)
!13682 = !DILocation(line: 1723, column: 6, scope: !13570)
!13683 = !DILocation(line: 1724, column: 7, scope: !13684)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !3, line: 1724, column: 7)
!13685 = distinct !DILexicalBlock(scope: !13678, file: !3, line: 1723, column: 40)
!13686 = !DILocation(line: 1724, column: 49, scope: !13684)
!13687 = !DILocation(line: 1724, column: 7, scope: !13685)
!13688 = !DILocation(line: 1725, column: 4, scope: !13684)
!13689 = !DILocation(line: 1726, column: 7, scope: !13690)
!13690 = distinct !DILexicalBlock(scope: !13685, file: !3, line: 1726, column: 7)
!13691 = !DILocation(line: 1726, column: 49, scope: !13690)
!13692 = !DILocation(line: 1726, column: 7, scope: !13685)
!13693 = !DILocation(line: 1727, column: 4, scope: !13690)
!13694 = !DILocation(line: 1729, column: 2, scope: !13685)
!13695 = !DILocation(line: 1729, column: 13, scope: !13696)
!13696 = distinct !DILexicalBlock(scope: !13678, file: !3, line: 1729, column: 13)
!13697 = !DILocation(line: 1729, column: 20, scope: !13696)
!13698 = !DILocation(line: 1729, column: 30, scope: !13696)
!13699 = !DILocation(line: 1729, column: 38, scope: !13696)
!13700 = !DILocation(line: 1729, column: 13, scope: !13678)
!13701 = !DILocation(line: 1730, column: 7, scope: !13702)
!13702 = distinct !DILexicalBlock(scope: !13703, file: !3, line: 1730, column: 7)
!13703 = distinct !DILexicalBlock(scope: !13696, file: !3, line: 1729, column: 47)
!13704 = !DILocation(line: 1730, column: 49, scope: !13702)
!13705 = !DILocation(line: 1730, column: 7, scope: !13703)
!13706 = !DILocation(line: 1731, column: 4, scope: !13702)
!13707 = !DILocation(line: 1732, column: 7, scope: !13708)
!13708 = distinct !DILexicalBlock(scope: !13703, file: !3, line: 1732, column: 7)
!13709 = !DILocation(line: 1732, column: 49, scope: !13708)
!13710 = !DILocation(line: 1732, column: 7, scope: !13703)
!13711 = !DILocation(line: 1733, column: 4, scope: !13708)
!13712 = !DILocation(line: 1734, column: 2, scope: !13703)
!13713 = !DILocation(line: 1736, column: 6, scope: !13714)
!13714 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1736, column: 6)
!13715 = !DILocation(line: 1736, column: 13, scope: !13714)
!13716 = !DILocation(line: 1736, column: 19, scope: !13714)
!13717 = !DILocation(line: 1736, column: 6, scope: !13570)
!13718 = !DILocation(line: 1737, column: 12, scope: !13714)
!13719 = !DILocation(line: 1737, column: 3, scope: !13714)
!13720 = !DILocation(line: 1738, column: 11, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 1738, column: 11)
!13722 = !DILocation(line: 1738, column: 18, scope: !13721)
!13723 = !DILocation(line: 1738, column: 24, scope: !13721)
!13724 = !DILocation(line: 1738, column: 11, scope: !13714)
!13725 = !DILocation(line: 1739, column: 12, scope: !13721)
!13726 = !DILocation(line: 1739, column: 3, scope: !13721)
!13727 = !DILocation(line: 1740, column: 11, scope: !13728)
!13728 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 1740, column: 11)
!13729 = !DILocation(line: 1740, column: 18, scope: !13728)
!13730 = !DILocation(line: 1740, column: 24, scope: !13728)
!13731 = !DILocation(line: 1740, column: 11, scope: !13721)
!13732 = !DILocation(line: 1741, column: 12, scope: !13728)
!13733 = !DILocation(line: 1741, column: 3, scope: !13728)
!13734 = !DILocation(line: 1743, column: 12, scope: !13728)
!13735 = !DILocation(line: 1745, column: 18, scope: !13570)
!13736 = !DILocation(line: 1745, column: 25, scope: !13570)
!13737 = !DILocation(line: 1745, column: 38, scope: !13570)
!13738 = !DILocation(line: 1745, column: 48, scope: !13570)
!13739 = !DILocation(line: 1745, column: 46, scope: !13570)
!13740 = !DILocation(line: 1745, column: 14, scope: !13570)
!13741 = !DILocation(line: 1745, column: 9, scope: !13570)
!13742 = !DILocation(line: 1746, column: 8, scope: !13570)
!13743 = !DILocation(line: 1747, column: 16, scope: !13570)
!13744 = !DILocation(line: 1747, column: 14, scope: !13570)
!13745 = !DILocation(line: 1747, column: 23, scope: !13570)
!13746 = !DILocation(line: 1747, column: 9, scope: !13570)
!13747 = !DILocation(line: 1748, column: 6, scope: !13748)
!13748 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1748, column: 6)
!13749 = !DILocation(line: 1748, column: 12, scope: !13748)
!13750 = !DILocation(line: 1748, column: 6, scope: !13570)
!13751 = !DILocation(line: 1749, column: 9, scope: !13748)
!13752 = !DILocation(line: 1749, column: 3, scope: !13748)
!13753 = !DILocation(line: 1750, column: 11, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 1750, column: 11)
!13755 = !DILocation(line: 1750, column: 17, scope: !13754)
!13756 = !DILocation(line: 1750, column: 11, scope: !13748)
!13757 = !DILocation(line: 1751, column: 9, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 1750, column: 23)
!13759 = !DILocation(line: 1752, column: 15, scope: !13758)
!13760 = !DILocation(line: 1752, column: 22, scope: !13758)
!13761 = !DILocation(line: 1752, column: 35, scope: !13758)
!13762 = !DILocation(line: 1752, column: 43, scope: !13758)
!13763 = !DILocation(line: 1752, column: 12, scope: !13758)
!13764 = !DILocation(line: 1753, column: 2, scope: !13758)
!13765 = !DILocation(line: 1754, column: 11, scope: !13570)
!13766 = !DILocation(line: 1755, column: 6, scope: !13570)
!13767 = !DILocation(line: 1756, column: 9, scope: !13570)
!13768 = !DILocation(line: 1756, column: 16, scope: !13570)
!13769 = !DILocation(line: 1756, column: 7, scope: !13570)
!13770 = !DILocation(line: 1758, column: 2, scope: !13570)
!13771 = !DILocation(line: 1758, column: 11, scope: !13570)
!13772 = !DILocation(line: 1758, column: 21, scope: !13570)
!13773 = !DILocation(line: 1758, column: 25, scope: !13570)
!13774 = !DILocation(line: 1758, column: 36, scope: !13570)
!13775 = !DILocation(line: 1758, column: 34, scope: !13570)
!13776 = !DILocation(line: 0, scope: !13570)
!13777 = !DILocation(line: 1759, column: 7, scope: !13778)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1759, column: 7)
!13779 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1758, column: 44)
!13780 = !DILocation(line: 1759, column: 51, scope: !13778)
!13781 = !DILocation(line: 1759, column: 7, scope: !13779)
!13782 = !DILocation(line: 1760, column: 4, scope: !13778)
!13783 = !DILocation(line: 1761, column: 7, scope: !13784)
!13784 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1761, column: 7)
!13785 = !DILocation(line: 1761, column: 50, scope: !13784)
!13786 = !DILocation(line: 1761, column: 7, scope: !13779)
!13787 = !DILocation(line: 1762, column: 4, scope: !13784)
!13788 = !DILocation(line: 1763, column: 7, scope: !13789)
!13789 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1763, column: 7)
!13790 = !DILocation(line: 1763, column: 50, scope: !13789)
!13791 = !DILocation(line: 1763, column: 7, scope: !13779)
!13792 = !DILocation(line: 1764, column: 4, scope: !13789)
!13793 = !DILocation(line: 1765, column: 7, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1765, column: 7)
!13795 = !DILocation(line: 1765, column: 50, scope: !13794)
!13796 = !DILocation(line: 1765, column: 7, scope: !13779)
!13797 = !DILocation(line: 1766, column: 4, scope: !13794)
!13798 = !DILocation(line: 1767, column: 7, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1767, column: 7)
!13800 = !DILocation(line: 1767, column: 50, scope: !13799)
!13801 = !DILocation(line: 1767, column: 7, scope: !13779)
!13802 = !DILocation(line: 1768, column: 4, scope: !13799)
!13803 = !DILocation(line: 1770, column: 7, scope: !13804)
!13804 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1770, column: 7)
!13805 = !DILocation(line: 1770, column: 51, scope: !13804)
!13806 = !DILocation(line: 1770, column: 7, scope: !13779)
!13807 = !DILocation(line: 1771, column: 4, scope: !13804)
!13808 = !DILocation(line: 1772, column: 3, scope: !13779)
!13809 = !DILocation(line: 1773, column: 10, scope: !13810)
!13810 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1773, column: 3)
!13811 = !DILocation(line: 1773, column: 8, scope: !13810)
!13812 = !DILocation(line: 1773, column: 15, scope: !13813)
!13813 = distinct !DILexicalBlock(scope: !13810, file: !3, line: 1773, column: 3)
!13814 = !DILocation(line: 1773, column: 17, scope: !13813)
!13815 = !DILocation(line: 1773, column: 3, scope: !13810)
!13816 = !DILocation(line: 1774, column: 10, scope: !13817)
!13817 = distinct !DILexicalBlock(scope: !13813, file: !3, line: 1773, column: 28)
!13818 = !DILocation(line: 1774, column: 8, scope: !13817)
!13819 = !DILocation(line: 1775, column: 8, scope: !13820)
!13820 = distinct !DILexicalBlock(scope: !13817, file: !3, line: 1775, column: 8)
!13821 = !DILocation(line: 1775, column: 56, scope: !13820)
!13822 = !DILocation(line: 1775, column: 8, scope: !13817)
!13823 = !DILocation(line: 1776, column: 12, scope: !13820)
!13824 = !DILocation(line: 1776, column: 5, scope: !13820)
!13825 = !DILocation(line: 1777, column: 13, scope: !13817)
!13826 = !DILocation(line: 1777, column: 47, scope: !13817)
!13827 = !DILocation(line: 1778, column: 5, scope: !13817)
!13828 = !DILocation(line: 1777, column: 53, scope: !13817)
!13829 = !DILocation(line: 1777, column: 9, scope: !13817)
!13830 = !DILocation(line: 1779, column: 3, scope: !13817)
!13831 = !DILocation(line: 1773, column: 24, scope: !13813)
!13832 = !DILocation(line: 1773, column: 3, scope: !13813)
!13833 = distinct !{!13833, !13815, !13834}
!13834 = !DILocation(line: 1779, column: 3, scope: !13810)
!13835 = !DILocation(line: 1780, column: 8, scope: !13779)
!13836 = !DILocation(line: 1781, column: 36, scope: !13779)
!13837 = !DILocation(line: 1781, column: 43, scope: !13779)
!13838 = !DILocation(line: 1781, column: 50, scope: !13779)
!13839 = !DILocation(line: 1781, column: 60, scope: !13779)
!13840 = !DILocation(line: 1781, column: 18, scope: !13779)
!13841 = !DILocation(line: 1781, column: 16, scope: !13779)
!13842 = !DILocation(line: 1782, column: 11, scope: !13779)
!13843 = !DILocation(line: 1783, column: 7, scope: !13779)
!13844 = !DILocation(line: 1784, column: 8, scope: !13845)
!13845 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1784, column: 7)
!13846 = !DILocation(line: 1784, column: 16, scope: !13845)
!13847 = !DILocation(line: 1784, column: 22, scope: !13845)
!13848 = !DILocation(line: 1784, column: 26, scope: !13845)
!13849 = !DILocation(line: 1784, column: 33, scope: !13845)
!13850 = !DILocation(line: 1784, column: 31, scope: !13845)
!13851 = !DILocation(line: 1784, column: 41, scope: !13845)
!13852 = !DILocation(line: 1785, column: 8, scope: !13845)
!13853 = !DILocation(line: 1785, column: 21, scope: !13845)
!13854 = !DILocation(line: 1785, column: 33, scope: !13845)
!13855 = !DILocation(line: 1785, column: 37, scope: !13845)
!13856 = !DILocation(line: 1785, column: 50, scope: !13845)
!13857 = !DILocation(line: 1784, column: 7, scope: !13779)
!13858 = !DILocation(line: 1786, column: 13, scope: !13845)
!13859 = !DILocation(line: 1786, column: 4, scope: !13845)
!13860 = !DILocation(line: 1787, column: 12, scope: !13861)
!13861 = distinct !DILexicalBlock(scope: !13845, file: !3, line: 1787, column: 12)
!13862 = !DILocation(line: 1787, column: 23, scope: !13861)
!13863 = !DILocation(line: 1787, column: 21, scope: !13861)
!13864 = !DILocation(line: 1787, column: 12, scope: !13845)
!13865 = !DILocation(line: 1788, column: 8, scope: !13866)
!13866 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1788, column: 8)
!13867 = distinct !DILexicalBlock(scope: !13861, file: !3, line: 1787, column: 30)
!13868 = !DILocation(line: 1788, column: 12, scope: !13866)
!13869 = !DILocation(line: 1788, column: 8, scope: !13867)
!13870 = !DILocation(line: 1789, column: 13, scope: !13866)
!13871 = !DILocation(line: 1789, column: 24, scope: !13866)
!13872 = !DILocation(line: 1789, column: 22, scope: !13866)
!13873 = !DILocation(line: 1789, column: 10, scope: !13866)
!13874 = !DILocation(line: 1789, column: 5, scope: !13866)
!13875 = !DILocation(line: 1791, column: 13, scope: !13866)
!13876 = !DILocation(line: 1791, column: 24, scope: !13866)
!13877 = !DILocation(line: 1791, column: 22, scope: !13866)
!13878 = !DILocation(line: 1791, column: 10, scope: !13866)
!13879 = !DILocation(line: 1794, column: 30, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1794, column: 8)
!13881 = !DILocation(line: 1794, column: 8, scope: !13880)
!13882 = !DILocation(line: 1794, column: 40, scope: !13880)
!13883 = !DILocation(line: 1794, column: 8, scope: !13867)
!13884 = !DILocation(line: 1795, column: 5, scope: !13880)
!13885 = !DILocation(line: 1797, column: 8, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1797, column: 8)
!13887 = !DILocation(line: 1797, column: 15, scope: !13886)
!13888 = !DILocation(line: 1797, column: 23, scope: !13886)
!13889 = !DILocation(line: 1797, column: 8, scope: !13867)
!13890 = !DILocation(line: 1798, column: 9, scope: !13891)
!13891 = distinct !DILexicalBlock(scope: !13892, file: !3, line: 1798, column: 9)
!13892 = distinct !DILexicalBlock(scope: !13886, file: !3, line: 1797, column: 44)
!13893 = !DILocation(line: 1798, column: 16, scope: !13891)
!13894 = !DILocation(line: 1798, column: 24, scope: !13891)
!13895 = !DILocation(line: 1798, column: 44, scope: !13891)
!13896 = !DILocation(line: 1798, column: 48, scope: !13891)
!13897 = !DILocation(line: 1798, column: 54, scope: !13891)
!13898 = !DILocation(line: 1798, column: 9, scope: !13892)
!13899 = !DILocation(line: 1799, column: 6, scope: !13891)
!13900 = !DILocation(line: 1800, column: 4, scope: !13892)
!13901 = !DILocation(line: 1802, column: 8, scope: !13902)
!13902 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1802, column: 8)
!13903 = !DILocation(line: 1802, column: 15, scope: !13902)
!13904 = !DILocation(line: 1802, column: 23, scope: !13902)
!13905 = !DILocation(line: 1802, column: 8, scope: !13867)
!13906 = !DILocation(line: 1803, column: 9, scope: !13907)
!13907 = distinct !DILexicalBlock(scope: !13908, file: !3, line: 1803, column: 9)
!13908 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 1802, column: 44)
!13909 = !DILocation(line: 1803, column: 16, scope: !13907)
!13910 = !DILocation(line: 1803, column: 24, scope: !13907)
!13911 = !DILocation(line: 1803, column: 44, scope: !13907)
!13912 = !DILocation(line: 1803, column: 48, scope: !13907)
!13913 = !DILocation(line: 1803, column: 55, scope: !13907)
!13914 = !DILocation(line: 1803, column: 65, scope: !13907)
!13915 = !DILocation(line: 1803, column: 9, scope: !13908)
!13916 = !DILocation(line: 1804, column: 6, scope: !13907)
!13917 = !DILocation(line: 1805, column: 4, scope: !13908)
!13918 = !DILocation(line: 1807, column: 30, scope: !13919)
!13919 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1807, column: 8)
!13920 = !DILocation(line: 1807, column: 8, scope: !13919)
!13921 = !DILocation(line: 1807, column: 40, scope: !13919)
!13922 = !DILocation(line: 1807, column: 8, scope: !13867)
!13923 = !DILocation(line: 1808, column: 5, scope: !13919)
!13924 = !DILocation(line: 1810, column: 4, scope: !13867)
!13925 = !DILocation(line: 1812, column: 30, scope: !13926)
!13926 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1812, column: 8)
!13927 = !DILocation(line: 1812, column: 8, scope: !13926)
!13928 = !DILocation(line: 1812, column: 40, scope: !13926)
!13929 = !DILocation(line: 1812, column: 8, scope: !13867)
!13930 = !DILocation(line: 1813, column: 5, scope: !13926)
!13931 = !DILocation(line: 1815, column: 8, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1815, column: 8)
!13933 = !DILocation(line: 1815, column: 15, scope: !13932)
!13934 = !DILocation(line: 1815, column: 23, scope: !13932)
!13935 = !DILocation(line: 1815, column: 8, scope: !13867)
!13936 = !DILocation(line: 1816, column: 9, scope: !13937)
!13937 = distinct !DILexicalBlock(scope: !13938, file: !3, line: 1816, column: 9)
!13938 = distinct !DILexicalBlock(scope: !13932, file: !3, line: 1815, column: 41)
!13939 = !DILocation(line: 1816, column: 16, scope: !13937)
!13940 = !DILocation(line: 1816, column: 24, scope: !13937)
!13941 = !DILocation(line: 1816, column: 41, scope: !13937)
!13942 = !DILocation(line: 1816, column: 51, scope: !13937)
!13943 = !DILocation(line: 1816, column: 9, scope: !13938)
!13944 = !DILocation(line: 1817, column: 6, scope: !13937)
!13945 = !DILocation(line: 1818, column: 4, scope: !13938)
!13946 = !DILocation(line: 1820, column: 8, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1820, column: 8)
!13948 = !DILocation(line: 1820, column: 8, scope: !13867)
!13949 = !DILocation(line: 1821, column: 5, scope: !13947)
!13950 = !DILocation(line: 1821, column: 5, scope: !13951)
!13951 = distinct !DILexicalBlock(scope: !13952, file: !3, line: 1821, column: 5)
!13952 = distinct !DILexicalBlock(scope: !13953, file: !3, line: 1821, column: 5)
!13953 = distinct !DILexicalBlock(scope: !13954, file: !3, line: 1821, column: 5)
!13954 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 1821, column: 5)
!13955 = !DILocation(line: 1821, column: 5, scope: !13952)
!13956 = !DILocation(line: 1821, column: 5, scope: !13957)
!13957 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 1821, column: 5)
!13958 = !DILocation(line: 1821, column: 5, scope: !13959)
!13959 = distinct !DILexicalBlock(scope: !13957, file: !3, line: 1821, column: 5)
!13960 = !DILocation(line: 1821, column: 5, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13959, file: !3, line: 1821, column: 5)
!13962 = !DILocation(line: 1821, column: 5, scope: !13954)
!13963 = !DILocation(line: 1823, column: 5, scope: !13947)
!13964 = !DILocation(line: 1823, column: 5, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 1823, column: 5)
!13966 = distinct !DILexicalBlock(scope: !13967, file: !3, line: 1823, column: 5)
!13967 = distinct !DILexicalBlock(scope: !13968, file: !3, line: 1823, column: 5)
!13968 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 1823, column: 5)
!13969 = !DILocation(line: 1823, column: 5, scope: !13966)
!13970 = !DILocation(line: 1823, column: 5, scope: !13971)
!13971 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 1823, column: 5)
!13972 = !DILocation(line: 1823, column: 5, scope: !13973)
!13973 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 1823, column: 5)
!13974 = !DILocation(line: 1823, column: 5, scope: !13975)
!13975 = distinct !DILexicalBlock(scope: !13973, file: !3, line: 1823, column: 5)
!13976 = !DILocation(line: 1823, column: 5, scope: !13968)
!13977 = !DILocation(line: 1825, column: 30, scope: !13978)
!13978 = distinct !DILexicalBlock(scope: !13867, file: !3, line: 1825, column: 8)
!13979 = !DILocation(line: 1825, column: 8, scope: !13978)
!13980 = !DILocation(line: 1825, column: 40, scope: !13978)
!13981 = !DILocation(line: 1825, column: 8, scope: !13867)
!13982 = !DILocation(line: 1826, column: 5, scope: !13978)
!13983 = !DILocation(line: 1828, column: 3, scope: !13867)
!13984 = distinct !{!13984, !13770, !13985}
!13985 = !DILocation(line: 1829, column: 2, scope: !13570)
!13986 = !DILocation(line: 1830, column: 7, scope: !13987)
!13987 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1830, column: 6)
!13988 = !DILocation(line: 1830, column: 6, scope: !13570)
!13989 = !DILocation(line: 1831, column: 16, scope: !13987)
!13990 = !DILocation(line: 1831, column: 3, scope: !13987)
!13991 = !DILocation(line: 1833, column: 36, scope: !13987)
!13992 = !DILocation(line: 1833, column: 43, scope: !13987)
!13993 = !DILocation(line: 1833, column: 50, scope: !13987)
!13994 = !DILocation(line: 1833, column: 60, scope: !13987)
!13995 = !DILocation(line: 1833, column: 18, scope: !13987)
!13996 = !DILocation(line: 1833, column: 16, scope: !13987)
!13997 = !DILocation(line: 1835, column: 9, scope: !13570)
!13998 = !DILocation(line: 1835, column: 2, scope: !13570)
!13999 = !DILabel(scope: !13570, name: "err_gateoff", file: !3, line: 1837)
!14000 = !DILocation(line: 1837, column: 1, scope: !13570)
!14001 = !DILocation(line: 1838, column: 24, scope: !13570)
!14002 = !DILocation(line: 1838, column: 2, scope: !13570)
!14003 = !DILabel(scope: !13570, name: "err", file: !3, line: 1839)
!14004 = !DILocation(line: 1839, column: 1, scope: !13570)
!14005 = !DILocation(line: 1840, column: 2, scope: !13570)
!14006 = !DILocation(line: 1840, column: 2, scope: !14007)
!14007 = distinct !DILexicalBlock(scope: !14008, file: !3, line: 1840, column: 2)
!14008 = distinct !DILexicalBlock(scope: !14009, file: !3, line: 1840, column: 2)
!14009 = distinct !DILexicalBlock(scope: !14010, file: !3, line: 1840, column: 2)
!14010 = distinct !DILexicalBlock(scope: !13570, file: !3, line: 1840, column: 2)
!14011 = !DILocation(line: 1840, column: 2, scope: !14008)
!14012 = !DILocation(line: 1840, column: 2, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14007, file: !3, line: 1840, column: 2)
!14014 = !DILocation(line: 1840, column: 2, scope: !14015)
!14015 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 1840, column: 2)
!14016 = !DILocation(line: 1840, column: 2, scope: !14017)
!14017 = distinct !DILexicalBlock(scope: !14015, file: !3, line: 1840, column: 2)
!14018 = !DILocation(line: 1840, column: 2, scope: !14010)
!14019 = !DILocation(line: 1841, column: 2, scope: !13570)
!14020 = !DILocation(line: 1842, column: 1, scope: !13570)
!14021 = distinct !DISubprogram(name: "stv090x_srate_srch_fine", scope: !3, file: !3, line: 1844, type: !7409, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14022 = !DILocalVariable(name: "state", arg: 1, scope: !14021, file: !3, line: 1844, type: !4654)
!14023 = !DILocation(line: 1844, column: 58, scope: !14021)
!14024 = !DILocalVariable(name: "srate_coarse", scope: !14021, file: !3, line: 1846, type: !571)
!14025 = !DILocation(line: 1846, column: 6, scope: !14021)
!14026 = !DILocalVariable(name: "freq_coarse", scope: !14021, file: !3, line: 1846, type: !571)
!14027 = !DILocation(line: 1846, column: 20, scope: !14021)
!14028 = !DILocalVariable(name: "sym", scope: !14021, file: !3, line: 1846, type: !571)
!14029 = !DILocation(line: 1846, column: 33, scope: !14021)
!14030 = !DILocalVariable(name: "reg", scope: !14021, file: !3, line: 1846, type: !571)
!14031 = !DILocation(line: 1846, column: 38, scope: !14021)
!14032 = !DILocation(line: 1848, column: 35, scope: !14021)
!14033 = !DILocation(line: 1848, column: 42, scope: !14021)
!14034 = !DILocation(line: 1848, column: 49, scope: !14021)
!14035 = !DILocation(line: 1848, column: 59, scope: !14021)
!14036 = !DILocation(line: 1848, column: 17, scope: !14021)
!14037 = !DILocation(line: 1848, column: 15, scope: !14021)
!14038 = !DILocation(line: 1849, column: 17, scope: !14021)
!14039 = !DILocation(line: 1849, column: 49, scope: !14021)
!14040 = !DILocation(line: 1849, column: 15, scope: !14021)
!14041 = !DILocation(line: 1850, column: 17, scope: !14021)
!14042 = !DILocation(line: 1850, column: 14, scope: !14021)
!14043 = !DILocation(line: 1851, column: 14, scope: !14021)
!14044 = !DILocation(line: 1851, column: 27, scope: !14021)
!14045 = !DILocation(line: 1851, column: 11, scope: !14021)
!14046 = !DILocation(line: 1851, column: 6, scope: !14021)
!14047 = !DILocation(line: 1853, column: 6, scope: !14048)
!14048 = distinct !DILexicalBlock(scope: !14021, file: !3, line: 1853, column: 6)
!14049 = !DILocation(line: 1853, column: 12, scope: !14048)
!14050 = !DILocation(line: 1853, column: 19, scope: !14048)
!14051 = !DILocation(line: 1853, column: 10, scope: !14048)
!14052 = !DILocation(line: 1853, column: 6, scope: !14021)
!14053 = !DILocation(line: 1854, column: 16, scope: !14048)
!14054 = !DILocation(line: 1854, column: 3, scope: !14048)
!14055 = !DILocation(line: 1856, column: 7, scope: !14056)
!14056 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1856, column: 7)
!14057 = distinct !DILexicalBlock(scope: !14048, file: !3, line: 1855, column: 7)
!14058 = !DILocation(line: 1856, column: 51, scope: !14056)
!14059 = !DILocation(line: 1856, column: 7, scope: !14057)
!14060 = !DILocation(line: 1857, column: 4, scope: !14056)
!14061 = !DILocation(line: 1858, column: 7, scope: !14062)
!14062 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1858, column: 7)
!14063 = !DILocation(line: 1858, column: 49, scope: !14062)
!14064 = !DILocation(line: 1858, column: 7, scope: !14057)
!14065 = !DILocation(line: 1859, column: 4, scope: !14062)
!14066 = !DILocation(line: 1860, column: 7, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1860, column: 7)
!14068 = !DILocation(line: 1860, column: 51, scope: !14067)
!14069 = !DILocation(line: 1860, column: 7, scope: !14057)
!14070 = !DILocation(line: 1861, column: 4, scope: !14067)
!14071 = !DILocation(line: 1862, column: 7, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1862, column: 7)
!14073 = !DILocation(line: 1862, column: 51, scope: !14072)
!14074 = !DILocation(line: 1862, column: 7, scope: !14057)
!14075 = !DILocation(line: 1863, column: 4, scope: !14072)
!14076 = !DILocation(line: 1864, column: 7, scope: !14077)
!14077 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1864, column: 7)
!14078 = !DILocation(line: 1864, column: 48, scope: !14077)
!14079 = !DILocation(line: 1864, column: 7, scope: !14057)
!14080 = !DILocation(line: 1865, column: 4, scope: !14077)
!14081 = !DILocation(line: 1866, column: 9, scope: !14057)
!14082 = !DILocation(line: 1866, column: 7, scope: !14057)
!14083 = !DILocation(line: 1867, column: 3, scope: !14057)
!14084 = !DILocation(line: 1868, column: 7, scope: !14085)
!14085 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1868, column: 7)
!14086 = !DILocation(line: 1868, column: 49, scope: !14085)
!14087 = !DILocation(line: 1868, column: 7, scope: !14057)
!14088 = !DILocation(line: 1869, column: 4, scope: !14085)
!14089 = !DILocation(line: 1871, column: 7, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1871, column: 7)
!14091 = !DILocation(line: 1871, column: 49, scope: !14090)
!14092 = !DILocation(line: 1871, column: 7, scope: !14057)
!14093 = !DILocation(line: 1872, column: 4, scope: !14090)
!14094 = !DILocation(line: 1874, column: 7, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1874, column: 7)
!14096 = !DILocation(line: 1874, column: 14, scope: !14095)
!14097 = !DILocation(line: 1874, column: 24, scope: !14095)
!14098 = !DILocation(line: 1874, column: 32, scope: !14095)
!14099 = !DILocation(line: 1874, column: 7, scope: !14057)
!14100 = !DILocation(line: 1875, column: 8, scope: !14101)
!14101 = distinct !DILexicalBlock(scope: !14102, file: !3, line: 1875, column: 8)
!14102 = distinct !DILexicalBlock(scope: !14095, file: !3, line: 1874, column: 41)
!14103 = !DILocation(line: 1875, column: 50, scope: !14101)
!14104 = !DILocation(line: 1875, column: 8, scope: !14102)
!14105 = !DILocation(line: 1876, column: 5, scope: !14101)
!14106 = !DILocation(line: 1877, column: 3, scope: !14102)
!14107 = !DILocation(line: 1877, column: 14, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14095, file: !3, line: 1877, column: 14)
!14109 = !DILocation(line: 1877, column: 21, scope: !14108)
!14110 = !DILocation(line: 1877, column: 31, scope: !14108)
!14111 = !DILocation(line: 1877, column: 39, scope: !14108)
!14112 = !DILocation(line: 1877, column: 14, scope: !14095)
!14113 = !DILocation(line: 1878, column: 8, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14115, file: !3, line: 1878, column: 8)
!14115 = distinct !DILexicalBlock(scope: !14108, file: !3, line: 1877, column: 48)
!14116 = !DILocation(line: 1878, column: 50, scope: !14114)
!14117 = !DILocation(line: 1878, column: 8, scope: !14115)
!14118 = !DILocation(line: 1879, column: 5, scope: !14114)
!14119 = !DILocation(line: 1880, column: 3, scope: !14115)
!14120 = !DILocation(line: 1882, column: 7, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1882, column: 7)
!14122 = !DILocation(line: 1882, column: 20, scope: !14121)
!14123 = !DILocation(line: 1882, column: 7, scope: !14057)
!14124 = !DILocation(line: 1883, column: 17, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14121, file: !3, line: 1882, column: 31)
!14126 = !DILocation(line: 1883, column: 30, scope: !14125)
!14127 = !DILocation(line: 1883, column: 14, scope: !14125)
!14128 = !DILocation(line: 1883, column: 9, scope: !14125)
!14129 = !DILocation(line: 1884, column: 12, scope: !14125)
!14130 = !DILocation(line: 1884, column: 16, scope: !14125)
!14131 = !DILocation(line: 1884, column: 24, scope: !14125)
!14132 = !DILocation(line: 1884, column: 9, scope: !14125)
!14133 = !DILocation(line: 1885, column: 12, scope: !14125)
!14134 = !DILocation(line: 1885, column: 19, scope: !14125)
!14135 = !DILocation(line: 1885, column: 29, scope: !14125)
!14136 = !DILocation(line: 1885, column: 34, scope: !14125)
!14137 = !DILocation(line: 1885, column: 8, scope: !14125)
!14138 = !DILocation(line: 1886, column: 8, scope: !14139)
!14139 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 1886, column: 8)
!14140 = !DILocation(line: 1886, column: 62, scope: !14139)
!14141 = !DILocation(line: 1886, column: 8, scope: !14125)
!14142 = !DILocation(line: 1887, column: 5, scope: !14139)
!14143 = !DILocation(line: 1888, column: 8, scope: !14144)
!14144 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 1888, column: 8)
!14145 = !DILocation(line: 1888, column: 55, scope: !14144)
!14146 = !DILocation(line: 1888, column: 8, scope: !14125)
!14147 = !DILocation(line: 1889, column: 5, scope: !14144)
!14148 = !DILocation(line: 1890, column: 17, scope: !14125)
!14149 = !DILocation(line: 1890, column: 30, scope: !14125)
!14150 = !DILocation(line: 1890, column: 14, scope: !14125)
!14151 = !DILocation(line: 1890, column: 9, scope: !14125)
!14152 = !DILocation(line: 1891, column: 12, scope: !14125)
!14153 = !DILocation(line: 1891, column: 16, scope: !14125)
!14154 = !DILocation(line: 1891, column: 24, scope: !14125)
!14155 = !DILocation(line: 1891, column: 9, scope: !14125)
!14156 = !DILocation(line: 1892, column: 12, scope: !14125)
!14157 = !DILocation(line: 1892, column: 19, scope: !14125)
!14158 = !DILocation(line: 1892, column: 29, scope: !14125)
!14159 = !DILocation(line: 1892, column: 34, scope: !14125)
!14160 = !DILocation(line: 1892, column: 8, scope: !14125)
!14161 = !DILocation(line: 1893, column: 8, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 1893, column: 8)
!14163 = !DILocation(line: 1893, column: 63, scope: !14162)
!14164 = !DILocation(line: 1893, column: 8, scope: !14125)
!14165 = !DILocation(line: 1894, column: 5, scope: !14162)
!14166 = !DILocation(line: 1895, column: 8, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 1895, column: 8)
!14168 = !DILocation(line: 1895, column: 56, scope: !14167)
!14169 = !DILocation(line: 1895, column: 8, scope: !14125)
!14170 = !DILocation(line: 1896, column: 5, scope: !14167)
!14171 = !DILocation(line: 1897, column: 12, scope: !14125)
!14172 = !DILocation(line: 1897, column: 25, scope: !14125)
!14173 = !DILocation(line: 1897, column: 33, scope: !14125)
!14174 = !DILocation(line: 1897, column: 9, scope: !14125)
!14175 = !DILocation(line: 1898, column: 12, scope: !14125)
!14176 = !DILocation(line: 1898, column: 19, scope: !14125)
!14177 = !DILocation(line: 1898, column: 29, scope: !14125)
!14178 = !DILocation(line: 1898, column: 34, scope: !14125)
!14179 = !DILocation(line: 1898, column: 8, scope: !14125)
!14180 = !DILocation(line: 1899, column: 8, scope: !14181)
!14181 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 1899, column: 8)
!14182 = !DILocation(line: 1899, column: 64, scope: !14181)
!14183 = !DILocation(line: 1899, column: 8, scope: !14125)
!14184 = !DILocation(line: 1900, column: 5, scope: !14181)
!14185 = !DILocation(line: 1901, column: 8, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14125, file: !3, line: 1901, column: 8)
!14187 = !DILocation(line: 1901, column: 57, scope: !14186)
!14188 = !DILocation(line: 1901, column: 8, scope: !14125)
!14189 = !DILocation(line: 1902, column: 5, scope: !14186)
!14190 = !DILocation(line: 1903, column: 3, scope: !14125)
!14191 = !DILocation(line: 1904, column: 17, scope: !14192)
!14192 = distinct !DILexicalBlock(scope: !14121, file: !3, line: 1903, column: 10)
!14193 = !DILocation(line: 1904, column: 30, scope: !14192)
!14194 = !DILocation(line: 1904, column: 14, scope: !14192)
!14195 = !DILocation(line: 1904, column: 9, scope: !14192)
!14196 = !DILocation(line: 1905, column: 12, scope: !14192)
!14197 = !DILocation(line: 1905, column: 16, scope: !14192)
!14198 = !DILocation(line: 1905, column: 23, scope: !14192)
!14199 = !DILocation(line: 1905, column: 9, scope: !14192)
!14200 = !DILocation(line: 1906, column: 12, scope: !14192)
!14201 = !DILocation(line: 1906, column: 19, scope: !14192)
!14202 = !DILocation(line: 1906, column: 29, scope: !14192)
!14203 = !DILocation(line: 1906, column: 34, scope: !14192)
!14204 = !DILocation(line: 1906, column: 8, scope: !14192)
!14205 = !DILocation(line: 1907, column: 8, scope: !14206)
!14206 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 1907, column: 8)
!14207 = !DILocation(line: 1907, column: 62, scope: !14206)
!14208 = !DILocation(line: 1907, column: 8, scope: !14192)
!14209 = !DILocation(line: 1908, column: 5, scope: !14206)
!14210 = !DILocation(line: 1909, column: 8, scope: !14211)
!14211 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 1909, column: 8)
!14212 = !DILocation(line: 1909, column: 55, scope: !14211)
!14213 = !DILocation(line: 1909, column: 8, scope: !14192)
!14214 = !DILocation(line: 1910, column: 5, scope: !14211)
!14215 = !DILocation(line: 1911, column: 17, scope: !14192)
!14216 = !DILocation(line: 1911, column: 30, scope: !14192)
!14217 = !DILocation(line: 1911, column: 14, scope: !14192)
!14218 = !DILocation(line: 1911, column: 9, scope: !14192)
!14219 = !DILocation(line: 1912, column: 12, scope: !14192)
!14220 = !DILocation(line: 1912, column: 16, scope: !14192)
!14221 = !DILocation(line: 1912, column: 23, scope: !14192)
!14222 = !DILocation(line: 1912, column: 9, scope: !14192)
!14223 = !DILocation(line: 1913, column: 12, scope: !14192)
!14224 = !DILocation(line: 1913, column: 19, scope: !14192)
!14225 = !DILocation(line: 1913, column: 29, scope: !14192)
!14226 = !DILocation(line: 1913, column: 34, scope: !14192)
!14227 = !DILocation(line: 1913, column: 8, scope: !14192)
!14228 = !DILocation(line: 1914, column: 8, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 1914, column: 8)
!14230 = !DILocation(line: 1914, column: 63, scope: !14229)
!14231 = !DILocation(line: 1914, column: 8, scope: !14192)
!14232 = !DILocation(line: 1915, column: 5, scope: !14229)
!14233 = !DILocation(line: 1916, column: 8, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 1916, column: 8)
!14235 = !DILocation(line: 1916, column: 56, scope: !14234)
!14236 = !DILocation(line: 1916, column: 8, scope: !14192)
!14237 = !DILocation(line: 1917, column: 5, scope: !14234)
!14238 = !DILocation(line: 1918, column: 12, scope: !14192)
!14239 = !DILocation(line: 1918, column: 25, scope: !14192)
!14240 = !DILocation(line: 1918, column: 32, scope: !14192)
!14241 = !DILocation(line: 1918, column: 9, scope: !14192)
!14242 = !DILocation(line: 1919, column: 12, scope: !14192)
!14243 = !DILocation(line: 1919, column: 19, scope: !14192)
!14244 = !DILocation(line: 1919, column: 29, scope: !14192)
!14245 = !DILocation(line: 1919, column: 34, scope: !14192)
!14246 = !DILocation(line: 1919, column: 8, scope: !14192)
!14247 = !DILocation(line: 1920, column: 8, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 1920, column: 8)
!14249 = !DILocation(line: 1920, column: 64, scope: !14248)
!14250 = !DILocation(line: 1920, column: 8, scope: !14192)
!14251 = !DILocation(line: 1921, column: 5, scope: !14248)
!14252 = !DILocation(line: 1922, column: 8, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14192, file: !3, line: 1922, column: 8)
!14254 = !DILocation(line: 1922, column: 57, scope: !14253)
!14255 = !DILocation(line: 1922, column: 8, scope: !14192)
!14256 = !DILocation(line: 1923, column: 5, scope: !14253)
!14257 = !DILocation(line: 1925, column: 7, scope: !14258)
!14258 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1925, column: 7)
!14259 = !DILocation(line: 1925, column: 48, scope: !14258)
!14260 = !DILocation(line: 1925, column: 7, scope: !14057)
!14261 = !DILocation(line: 1926, column: 4, scope: !14258)
!14262 = !DILocation(line: 1927, column: 7, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1927, column: 7)
!14264 = !DILocation(line: 1927, column: 71, scope: !14263)
!14265 = !DILocation(line: 1927, column: 7, scope: !14057)
!14266 = !DILocation(line: 1928, column: 4, scope: !14263)
!14267 = !DILocation(line: 1929, column: 7, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1929, column: 7)
!14269 = !DILocation(line: 1929, column: 64, scope: !14268)
!14270 = !DILocation(line: 1929, column: 7, scope: !14057)
!14271 = !DILocation(line: 1930, column: 4, scope: !14268)
!14272 = !DILocation(line: 1931, column: 7, scope: !14273)
!14273 = distinct !DILexicalBlock(scope: !14057, file: !3, line: 1931, column: 7)
!14274 = !DILocation(line: 1931, column: 51, scope: !14273)
!14275 = !DILocation(line: 1931, column: 7, scope: !14057)
!14276 = !DILocation(line: 1932, column: 4, scope: !14273)
!14277 = !DILocation(line: 1935, column: 9, scope: !14021)
!14278 = !DILocation(line: 1935, column: 2, scope: !14021)
!14279 = !DILabel(scope: !14021, name: "err", file: !3, line: 1937)
!14280 = !DILocation(line: 1937, column: 1, scope: !14021)
!14281 = !DILocation(line: 1938, column: 2, scope: !14021)
!14282 = !DILocation(line: 1938, column: 2, scope: !14283)
!14283 = distinct !DILexicalBlock(scope: !14284, file: !3, line: 1938, column: 2)
!14284 = distinct !DILexicalBlock(scope: !14285, file: !3, line: 1938, column: 2)
!14285 = distinct !DILexicalBlock(scope: !14286, file: !3, line: 1938, column: 2)
!14286 = distinct !DILexicalBlock(scope: !14021, file: !3, line: 1938, column: 2)
!14287 = !DILocation(line: 1938, column: 2, scope: !14284)
!14288 = !DILocation(line: 1938, column: 2, scope: !14289)
!14289 = distinct !DILexicalBlock(scope: !14283, file: !3, line: 1938, column: 2)
!14290 = !DILocation(line: 1938, column: 2, scope: !14291)
!14291 = distinct !DILexicalBlock(scope: !14289, file: !3, line: 1938, column: 2)
!14292 = !DILocation(line: 1938, column: 2, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14291, file: !3, line: 1938, column: 2)
!14294 = !DILocation(line: 1938, column: 2, scope: !14286)
!14295 = !DILocation(line: 1939, column: 2, scope: !14021)
!14296 = !DILocation(line: 1940, column: 1, scope: !14021)
!14297 = distinct !DISubprogram(name: "stv090x_get_srate", scope: !3, file: !3, line: 1653, type: !14298, scopeLine: 1654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14298 = !DISubroutineType(types: !14299)
!14299 = !{!571, !4654, !571}
!14300 = !DILocalVariable(name: "state", arg: 1, scope: !14297, file: !3, line: 1653, type: !4654)
!14301 = !DILocation(line: 1653, column: 52, scope: !14297)
!14302 = !DILocalVariable(name: "clk", arg: 2, scope: !14297, file: !3, line: 1653, type: !571)
!14303 = !DILocation(line: 1653, column: 63, scope: !14297)
!14304 = !DILocalVariable(name: "r3", scope: !14297, file: !3, line: 1655, type: !492)
!14305 = !DILocation(line: 1655, column: 5, scope: !14297)
!14306 = !DILocalVariable(name: "r2", scope: !14297, file: !3, line: 1655, type: !492)
!14307 = !DILocation(line: 1655, column: 9, scope: !14297)
!14308 = !DILocalVariable(name: "r1", scope: !14297, file: !3, line: 1655, type: !492)
!14309 = !DILocation(line: 1655, column: 13, scope: !14297)
!14310 = !DILocalVariable(name: "r0", scope: !14297, file: !3, line: 1655, type: !492)
!14311 = !DILocation(line: 1655, column: 17, scope: !14297)
!14312 = !DILocalVariable(name: "srate", scope: !14297, file: !3, line: 1656, type: !445)
!14313 = !DILocation(line: 1656, column: 6, scope: !14297)
!14314 = !DILocalVariable(name: "int_1", scope: !14297, file: !3, line: 1656, type: !445)
!14315 = !DILocation(line: 1656, column: 13, scope: !14297)
!14316 = !DILocalVariable(name: "int_2", scope: !14297, file: !3, line: 1656, type: !445)
!14317 = !DILocation(line: 1656, column: 20, scope: !14297)
!14318 = !DILocalVariable(name: "tmp_1", scope: !14297, file: !3, line: 1656, type: !445)
!14319 = !DILocation(line: 1656, column: 27, scope: !14297)
!14320 = !DILocalVariable(name: "tmp_2", scope: !14297, file: !3, line: 1656, type: !445)
!14321 = !DILocation(line: 1656, column: 34, scope: !14297)
!14322 = !DILocation(line: 1658, column: 7, scope: !14297)
!14323 = !DILocation(line: 1658, column: 5, scope: !14297)
!14324 = !DILocation(line: 1659, column: 7, scope: !14297)
!14325 = !DILocation(line: 1659, column: 5, scope: !14297)
!14326 = !DILocation(line: 1660, column: 7, scope: !14297)
!14327 = !DILocation(line: 1660, column: 5, scope: !14297)
!14328 = !DILocation(line: 1661, column: 7, scope: !14297)
!14329 = !DILocation(line: 1661, column: 5, scope: !14297)
!14330 = !DILocation(line: 1663, column: 12, scope: !14297)
!14331 = !DILocation(line: 1663, column: 15, scope: !14297)
!14332 = !DILocation(line: 1663, column: 25, scope: !14297)
!14333 = !DILocation(line: 1663, column: 28, scope: !14297)
!14334 = !DILocation(line: 1663, column: 22, scope: !14297)
!14335 = !DILocation(line: 1663, column: 38, scope: !14297)
!14336 = !DILocation(line: 1663, column: 41, scope: !14297)
!14337 = !DILocation(line: 1663, column: 35, scope: !14297)
!14338 = !DILocation(line: 1663, column: 50, scope: !14297)
!14339 = !DILocation(line: 1663, column: 48, scope: !14297)
!14340 = !DILocation(line: 1663, column: 8, scope: !14297)
!14341 = !DILocation(line: 1665, column: 10, scope: !14297)
!14342 = !DILocation(line: 1665, column: 14, scope: !14297)
!14343 = !DILocation(line: 1665, column: 8, scope: !14297)
!14344 = !DILocation(line: 1666, column: 10, scope: !14297)
!14345 = !DILocation(line: 1666, column: 16, scope: !14297)
!14346 = !DILocation(line: 1666, column: 8, scope: !14297)
!14347 = !DILocation(line: 1668, column: 10, scope: !14297)
!14348 = !DILocation(line: 1668, column: 14, scope: !14297)
!14349 = !DILocation(line: 1668, column: 8, scope: !14297)
!14350 = !DILocation(line: 1669, column: 10, scope: !14297)
!14351 = !DILocation(line: 1669, column: 16, scope: !14297)
!14352 = !DILocation(line: 1669, column: 8, scope: !14297)
!14353 = !DILocation(line: 1671, column: 11, scope: !14297)
!14354 = !DILocation(line: 1671, column: 19, scope: !14297)
!14355 = !DILocation(line: 1671, column: 17, scope: !14297)
!14356 = !DILocation(line: 1672, column: 5, scope: !14297)
!14357 = !DILocation(line: 1672, column: 13, scope: !14297)
!14358 = !DILocation(line: 1672, column: 11, scope: !14297)
!14359 = !DILocation(line: 1672, column: 20, scope: !14297)
!14360 = !DILocation(line: 1671, column: 26, scope: !14297)
!14361 = !DILocation(line: 1673, column: 5, scope: !14297)
!14362 = !DILocation(line: 1673, column: 13, scope: !14297)
!14363 = !DILocation(line: 1673, column: 11, scope: !14297)
!14364 = !DILocation(line: 1673, column: 20, scope: !14297)
!14365 = !DILocation(line: 1672, column: 27, scope: !14297)
!14366 = !DILocation(line: 1671, column: 8, scope: !14297)
!14367 = !DILocation(line: 1675, column: 9, scope: !14297)
!14368 = !DILocation(line: 1675, column: 2, scope: !14297)
!14369 = distinct !DISubprogram(name: "stv090x_get_loop_params", scope: !3, file: !3, line: 2241, type: !14370, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14370 = !DISubroutineType(types: !14371)
!14371 = !{!439, !4654, !4419, !4419, !4419}
!14372 = !DILocalVariable(name: "state", arg: 1, scope: !14369, file: !3, line: 2241, type: !4654)
!14373 = !DILocation(line: 2241, column: 58, scope: !14369)
!14374 = !DILocalVariable(name: "freq_inc", arg: 2, scope: !14369, file: !3, line: 2241, type: !4419)
!14375 = !DILocation(line: 2241, column: 70, scope: !14369)
!14376 = !DILocalVariable(name: "timeout_sw", arg: 3, scope: !14369, file: !3, line: 2241, type: !4419)
!14377 = !DILocation(line: 2241, column: 85, scope: !14369)
!14378 = !DILocalVariable(name: "steps", arg: 4, scope: !14369, file: !3, line: 2241, type: !4419)
!14379 = !DILocation(line: 2241, column: 102, scope: !14369)
!14380 = !DILocalVariable(name: "timeout", scope: !14369, file: !3, line: 2243, type: !445)
!14381 = !DILocation(line: 2243, column: 6, scope: !14369)
!14382 = !DILocalVariable(name: "inc", scope: !14369, file: !3, line: 2243, type: !445)
!14383 = !DILocation(line: 2243, column: 15, scope: !14369)
!14384 = !DILocalVariable(name: "steps_max", scope: !14369, file: !3, line: 2243, type: !445)
!14385 = !DILocation(line: 2243, column: 20, scope: !14369)
!14386 = !DILocalVariable(name: "srate", scope: !14369, file: !3, line: 2243, type: !445)
!14387 = !DILocation(line: 2243, column: 31, scope: !14369)
!14388 = !DILocalVariable(name: "car_max", scope: !14369, file: !3, line: 2243, type: !445)
!14389 = !DILocation(line: 2243, column: 38, scope: !14369)
!14390 = !DILocation(line: 2245, column: 10, scope: !14369)
!14391 = !DILocation(line: 2245, column: 17, scope: !14369)
!14392 = !DILocation(line: 2245, column: 8, scope: !14369)
!14393 = !DILocation(line: 2246, column: 12, scope: !14369)
!14394 = !DILocation(line: 2246, column: 19, scope: !14369)
!14395 = !DILocation(line: 2246, column: 32, scope: !14369)
!14396 = !DILocation(line: 2246, column: 10, scope: !14369)
!14397 = !DILocation(line: 2247, column: 13, scope: !14369)
!14398 = !DILocation(line: 2247, column: 21, scope: !14369)
!14399 = !DILocation(line: 2247, column: 10, scope: !14369)
!14400 = !DILocation(line: 2248, column: 22, scope: !14369)
!14401 = !DILocation(line: 2248, column: 30, scope: !14369)
!14402 = !DILocation(line: 2248, column: 19, scope: !14369)
!14403 = !DILocation(line: 2248, column: 11, scope: !14369)
!14404 = !DILocation(line: 2249, column: 14, scope: !14369)
!14405 = !DILocation(line: 2249, column: 21, scope: !14369)
!14406 = !DILocation(line: 2249, column: 31, scope: !14369)
!14407 = !DILocation(line: 2249, column: 36, scope: !14369)
!14408 = !DILocation(line: 2249, column: 10, scope: !14369)
!14409 = !DILocation(line: 2251, column: 6, scope: !14410)
!14410 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2251, column: 6)
!14411 = !DILocation(line: 2251, column: 14, scope: !14410)
!14412 = !DILocation(line: 2251, column: 6, scope: !14369)
!14413 = !DILocation(line: 2252, column: 11, scope: !14410)
!14414 = !DILocation(line: 2252, column: 3, scope: !14410)
!14415 = !DILocation(line: 2254, column: 9, scope: !14369)
!14416 = !DILocation(line: 2254, column: 7, scope: !14369)
!14417 = !DILocation(line: 2255, column: 9, scope: !14369)
!14418 = !DILocation(line: 2255, column: 16, scope: !14369)
!14419 = !DILocation(line: 2255, column: 26, scope: !14369)
!14420 = !DILocation(line: 2255, column: 31, scope: !14369)
!14421 = !DILocation(line: 2255, column: 6, scope: !14369)
!14422 = !DILocation(line: 2256, column: 6, scope: !14369)
!14423 = !DILocation(line: 2257, column: 6, scope: !14369)
!14424 = !DILocation(line: 2258, column: 6, scope: !14369)
!14425 = !DILocation(line: 2260, column: 10, scope: !14369)
!14426 = !DILocation(line: 2260, column: 17, scope: !14369)
!14427 = !DILocation(line: 2260, column: 2, scope: !14369)
!14428 = !DILocation(line: 2263, column: 7, scope: !14429)
!14429 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2260, column: 30)
!14430 = !DILocation(line: 2264, column: 11, scope: !14429)
!14431 = !DILocation(line: 2265, column: 3, scope: !14429)
!14432 = !DILocation(line: 2268, column: 7, scope: !14429)
!14433 = !DILocation(line: 2269, column: 11, scope: !14429)
!14434 = !DILocation(line: 2270, column: 3, scope: !14429)
!14435 = !DILocation(line: 2274, column: 7, scope: !14429)
!14436 = !DILocation(line: 2275, column: 11, scope: !14429)
!14437 = !DILocation(line: 2276, column: 3, scope: !14429)
!14438 = !DILocation(line: 2278, column: 6, scope: !14369)
!14439 = !DILocation(line: 2279, column: 7, scope: !14440)
!14440 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2279, column: 6)
!14441 = !DILocation(line: 2279, column: 13, scope: !14440)
!14442 = !DILocation(line: 2279, column: 11, scope: !14440)
!14443 = !DILocation(line: 2279, column: 22, scope: !14440)
!14444 = !DILocation(line: 2279, column: 26, scope: !14440)
!14445 = !DILocation(line: 2279, column: 30, scope: !14440)
!14446 = !DILocation(line: 2279, column: 6, scope: !14369)
!14447 = !DILocation(line: 2280, column: 9, scope: !14440)
!14448 = !DILocation(line: 2280, column: 17, scope: !14440)
!14449 = !DILocation(line: 2280, column: 7, scope: !14440)
!14450 = !DILocation(line: 2280, column: 3, scope: !14440)
!14451 = !DILocation(line: 2282, column: 10, scope: !14369)
!14452 = !DILocation(line: 2283, column: 6, scope: !14453)
!14453 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2283, column: 6)
!14454 = !DILocation(line: 2283, column: 12, scope: !14453)
!14455 = !DILocation(line: 2283, column: 6, scope: !14369)
!14456 = !DILocation(line: 2284, column: 15, scope: !14453)
!14457 = !DILocation(line: 2284, column: 21, scope: !14453)
!14458 = !DILocation(line: 2284, column: 11, scope: !14453)
!14459 = !DILocation(line: 2284, column: 3, scope: !14453)
!14460 = !DILocation(line: 2286, column: 7, scope: !14461)
!14461 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2286, column: 6)
!14462 = !DILocation(line: 2286, column: 15, scope: !14461)
!14463 = !DILocation(line: 2286, column: 22, scope: !14461)
!14464 = !DILocation(line: 2286, column: 26, scope: !14461)
!14465 = !DILocation(line: 2286, column: 34, scope: !14461)
!14466 = !DILocation(line: 2286, column: 6, scope: !14369)
!14467 = !DILocation(line: 2287, column: 11, scope: !14461)
!14468 = !DILocation(line: 2287, column: 3, scope: !14461)
!14469 = !DILocation(line: 2289, column: 15, scope: !14369)
!14470 = !DILocation(line: 2289, column: 25, scope: !14369)
!14471 = !DILocation(line: 2289, column: 23, scope: !14369)
!14472 = !DILocation(line: 2289, column: 30, scope: !14369)
!14473 = !DILocation(line: 2289, column: 12, scope: !14369)
!14474 = !DILocation(line: 2290, column: 7, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14369, file: !3, line: 2290, column: 6)
!14476 = !DILocation(line: 2290, column: 17, scope: !14475)
!14477 = !DILocation(line: 2290, column: 24, scope: !14475)
!14478 = !DILocation(line: 2290, column: 28, scope: !14475)
!14479 = !DILocation(line: 2290, column: 38, scope: !14475)
!14480 = !DILocation(line: 2290, column: 6, scope: !14369)
!14481 = !DILocation(line: 2291, column: 13, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14475, file: !3, line: 2290, column: 44)
!14483 = !DILocation(line: 2292, column: 9, scope: !14482)
!14484 = !DILocation(line: 2292, column: 19, scope: !14482)
!14485 = !DILocation(line: 2292, column: 17, scope: !14482)
!14486 = !DILocation(line: 2292, column: 7, scope: !14482)
!14487 = !DILocation(line: 2293, column: 2, scope: !14482)
!14488 = !DILocation(line: 2294, column: 14, scope: !14369)
!14489 = !DILocation(line: 2294, column: 3, scope: !14369)
!14490 = !DILocation(line: 2294, column: 12, scope: !14369)
!14491 = !DILocation(line: 2295, column: 16, scope: !14369)
!14492 = !DILocation(line: 2295, column: 3, scope: !14369)
!14493 = !DILocation(line: 2295, column: 14, scope: !14369)
!14494 = !DILocation(line: 2296, column: 11, scope: !14369)
!14495 = !DILocation(line: 2296, column: 3, scope: !14369)
!14496 = !DILocation(line: 2296, column: 9, scope: !14369)
!14497 = !DILocation(line: 2298, column: 2, scope: !14369)
!14498 = distinct !DISubprogram(name: "stv090x_search_car_loop", scope: !3, file: !3, line: 2332, type: !14499, scopeLine: 2333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14499 = !DISubroutineType(types: !14500)
!14500 = !{!439, !4654, !445, !445, !439, !445}
!14501 = !DILocalVariable(name: "state", arg: 1, scope: !14498, file: !3, line: 2332, type: !4654)
!14502 = !DILocation(line: 2332, column: 58, scope: !14498)
!14503 = !DILocalVariable(name: "inc", arg: 2, scope: !14498, file: !3, line: 2332, type: !445)
!14504 = !DILocation(line: 2332, column: 69, scope: !14498)
!14505 = !DILocalVariable(name: "timeout", arg: 3, scope: !14498, file: !3, line: 2332, type: !445)
!14506 = !DILocation(line: 2332, column: 78, scope: !14498)
!14507 = !DILocalVariable(name: "zigzag", arg: 4, scope: !14498, file: !3, line: 2332, type: !439)
!14508 = !DILocation(line: 2332, column: 91, scope: !14498)
!14509 = !DILocalVariable(name: "steps_max", arg: 5, scope: !14498, file: !3, line: 2332, type: !445)
!14510 = !DILocation(line: 2332, column: 103, scope: !14498)
!14511 = !DILocalVariable(name: "no_signal", scope: !14498, file: !3, line: 2334, type: !439)
!14512 = !DILocation(line: 2334, column: 6, scope: !14498)
!14513 = !DILocalVariable(name: "lock", scope: !14498, file: !3, line: 2334, type: !439)
!14514 = !DILocation(line: 2334, column: 17, scope: !14498)
!14515 = !DILocalVariable(name: "cpt_step", scope: !14498, file: !3, line: 2335, type: !445)
!14516 = !DILocation(line: 2335, column: 6, scope: !14498)
!14517 = !DILocalVariable(name: "offst_freq", scope: !14498, file: !3, line: 2335, type: !445)
!14518 = !DILocation(line: 2335, column: 20, scope: !14498)
!14519 = !DILocalVariable(name: "car_max", scope: !14498, file: !3, line: 2335, type: !445)
!14520 = !DILocation(line: 2335, column: 32, scope: !14498)
!14521 = !DILocalVariable(name: "reg", scope: !14498, file: !3, line: 2336, type: !571)
!14522 = !DILocation(line: 2336, column: 6, scope: !14498)
!14523 = !DILocation(line: 2338, column: 13, scope: !14498)
!14524 = !DILocation(line: 2338, column: 20, scope: !14498)
!14525 = !DILocation(line: 2338, column: 33, scope: !14498)
!14526 = !DILocation(line: 2338, column: 11, scope: !14498)
!14527 = !DILocation(line: 2339, column: 14, scope: !14498)
!14528 = !DILocation(line: 2339, column: 22, scope: !14498)
!14529 = !DILocation(line: 2339, column: 10, scope: !14498)
!14530 = !DILocation(line: 2340, column: 22, scope: !14498)
!14531 = !DILocation(line: 2340, column: 20, scope: !14498)
!14532 = !DILocation(line: 2340, column: 30, scope: !14498)
!14533 = !DILocation(line: 2340, column: 11, scope: !14498)
!14534 = !DILocation(line: 2341, column: 14, scope: !14498)
!14535 = !DILocation(line: 2341, column: 21, scope: !14498)
!14536 = !DILocation(line: 2341, column: 31, scope: !14498)
!14537 = !DILocation(line: 2341, column: 36, scope: !14498)
!14538 = !DILocation(line: 2341, column: 10, scope: !14498)
!14539 = !DILocation(line: 2342, column: 6, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 2342, column: 6)
!14541 = !DILocation(line: 2342, column: 14, scope: !14540)
!14542 = !DILocation(line: 2342, column: 6, scope: !14498)
!14543 = !DILocation(line: 2343, column: 11, scope: !14540)
!14544 = !DILocation(line: 2343, column: 3, scope: !14540)
!14545 = !DILocation(line: 2345, column: 6, scope: !14546)
!14546 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 2345, column: 6)
!14547 = !DILocation(line: 2345, column: 6, scope: !14498)
!14548 = !DILocation(line: 2346, column: 14, scope: !14546)
!14549 = !DILocation(line: 2346, column: 3, scope: !14546)
!14550 = !DILocation(line: 2348, column: 17, scope: !14546)
!14551 = !DILocation(line: 2348, column: 16, scope: !14546)
!14552 = !DILocation(line: 2348, column: 27, scope: !14546)
!14553 = !DILocation(line: 2348, column: 25, scope: !14546)
!14554 = !DILocation(line: 2348, column: 14, scope: !14546)
!14555 = !DILocation(line: 2350, column: 2, scope: !14498)
!14556 = !DILocation(line: 2351, column: 7, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2351, column: 7)
!14558 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 2350, column: 5)
!14559 = !DILocation(line: 2351, column: 51, scope: !14557)
!14560 = !DILocation(line: 2351, column: 7, scope: !14558)
!14561 = !DILocation(line: 2352, column: 4, scope: !14557)
!14562 = !DILocation(line: 2353, column: 7, scope: !14563)
!14563 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2353, column: 7)
!14564 = !DILocation(line: 2353, column: 73, scope: !14563)
!14565 = !DILocation(line: 2353, column: 7, scope: !14558)
!14566 = !DILocation(line: 2354, column: 4, scope: !14563)
!14567 = !DILocation(line: 2355, column: 7, scope: !14568)
!14568 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2355, column: 7)
!14569 = !DILocation(line: 2355, column: 63, scope: !14568)
!14570 = !DILocation(line: 2355, column: 7, scope: !14558)
!14571 = !DILocation(line: 2356, column: 4, scope: !14568)
!14572 = !DILocation(line: 2357, column: 7, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2357, column: 7)
!14574 = !DILocation(line: 2357, column: 51, scope: !14573)
!14575 = !DILocation(line: 2357, column: 7, scope: !14558)
!14576 = !DILocation(line: 2358, column: 4, scope: !14573)
!14577 = !DILocation(line: 2360, column: 9, scope: !14558)
!14578 = !DILocation(line: 2360, column: 7, scope: !14558)
!14579 = !DILocation(line: 2361, column: 3, scope: !14558)
!14580 = !DILocation(line: 2362, column: 7, scope: !14581)
!14581 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2362, column: 7)
!14582 = !DILocation(line: 2362, column: 50, scope: !14581)
!14583 = !DILocation(line: 2362, column: 7, scope: !14558)
!14584 = !DILocation(line: 2363, column: 4, scope: !14581)
!14585 = !DILocation(line: 2365, column: 7, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14558, file: !3, line: 2365, column: 7)
!14587 = !DILocation(line: 2365, column: 7, scope: !14558)
!14588 = !DILocation(line: 2366, column: 8, scope: !14589)
!14589 = distinct !DILexicalBlock(scope: !14590, file: !3, line: 2366, column: 8)
!14590 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 2365, column: 15)
!14591 = !DILocation(line: 2366, column: 19, scope: !14589)
!14592 = !DILocation(line: 2366, column: 8, scope: !14590)
!14593 = !DILocation(line: 2367, column: 19, scope: !14589)
!14594 = !DILocation(line: 2367, column: 18, scope: !14589)
!14595 = !DILocation(line: 2367, column: 36, scope: !14589)
!14596 = !DILocation(line: 2367, column: 34, scope: !14589)
!14597 = !DILocation(line: 2367, column: 30, scope: !14589)
!14598 = !DILocation(line: 2367, column: 16, scope: !14589)
!14599 = !DILocation(line: 2367, column: 5, scope: !14589)
!14600 = !DILocation(line: 2369, column: 19, scope: !14589)
!14601 = !DILocation(line: 2369, column: 18, scope: !14589)
!14602 = !DILocation(line: 2369, column: 16, scope: !14589)
!14603 = !DILocation(line: 2370, column: 3, scope: !14590)
!14604 = !DILocation(line: 2371, column: 22, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 2370, column: 10)
!14606 = !DILocation(line: 2371, column: 20, scope: !14605)
!14607 = !DILocation(line: 2371, column: 15, scope: !14605)
!14608 = !DILocation(line: 2374, column: 11, scope: !14558)
!14609 = !DILocation(line: 2376, column: 30, scope: !14558)
!14610 = !DILocation(line: 2376, column: 37, scope: !14558)
!14611 = !DILocation(line: 2376, column: 10, scope: !14558)
!14612 = !DILocation(line: 2376, column: 8, scope: !14558)
!14613 = !DILocation(line: 2377, column: 34, scope: !14558)
!14614 = !DILocation(line: 2377, column: 15, scope: !14558)
!14615 = !DILocation(line: 2377, column: 13, scope: !14558)
!14616 = !DILocation(line: 2379, column: 2, scope: !14558)
!14617 = !DILocation(line: 2379, column: 13, scope: !14498)
!14618 = !DILocation(line: 2379, column: 19, scope: !14498)
!14619 = !DILocation(line: 2380, column: 6, scope: !14498)
!14620 = !DILocation(line: 2380, column: 17, scope: !14498)
!14621 = !DILocation(line: 2381, column: 7, scope: !14498)
!14622 = !DILocation(line: 2381, column: 20, scope: !14498)
!14623 = !DILocation(line: 2381, column: 18, scope: !14498)
!14624 = !DILocation(line: 2381, column: 27, scope: !14498)
!14625 = !DILocation(line: 2381, column: 25, scope: !14498)
!14626 = !DILocation(line: 2381, column: 36, scope: !14498)
!14627 = !DILocation(line: 2382, column: 7, scope: !14498)
!14628 = !DILocation(line: 2382, column: 20, scope: !14498)
!14629 = !DILocation(line: 2382, column: 18, scope: !14498)
!14630 = !DILocation(line: 2382, column: 28, scope: !14498)
!14631 = !DILocation(line: 2382, column: 27, scope: !14498)
!14632 = !DILocation(line: 2382, column: 25, scope: !14498)
!14633 = !DILocation(line: 2382, column: 37, scope: !14498)
!14634 = !DILocation(line: 2383, column: 6, scope: !14498)
!14635 = !DILocation(line: 2383, column: 17, scope: !14498)
!14636 = !DILocation(line: 2383, column: 15, scope: !14498)
!14637 = !DILocation(line: 0, scope: !14498)
!14638 = distinct !{!14638, !14555, !14639}
!14639 = !DILocation(line: 2383, column: 27, scope: !14498)
!14640 = !DILocation(line: 2385, column: 8, scope: !14498)
!14641 = !DILocation(line: 2385, column: 6, scope: !14498)
!14642 = !DILocation(line: 2386, column: 2, scope: !14498)
!14643 = !DILocation(line: 2387, column: 6, scope: !14644)
!14644 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 2387, column: 6)
!14645 = !DILocation(line: 2387, column: 49, scope: !14644)
!14646 = !DILocation(line: 2387, column: 6, scope: !14498)
!14647 = !DILocation(line: 2388, column: 4, scope: !14644)
!14648 = !DILocation(line: 2390, column: 9, scope: !14498)
!14649 = !DILocation(line: 2390, column: 2, scope: !14498)
!14650 = !DILabel(scope: !14498, name: "err", file: !3, line: 2391)
!14651 = !DILocation(line: 2391, column: 1, scope: !14498)
!14652 = !DILocation(line: 2392, column: 2, scope: !14498)
!14653 = !DILocation(line: 2392, column: 2, scope: !14654)
!14654 = distinct !DILexicalBlock(scope: !14655, file: !3, line: 2392, column: 2)
!14655 = distinct !DILexicalBlock(scope: !14656, file: !3, line: 2392, column: 2)
!14656 = distinct !DILexicalBlock(scope: !14657, file: !3, line: 2392, column: 2)
!14657 = distinct !DILexicalBlock(scope: !14498, file: !3, line: 2392, column: 2)
!14658 = !DILocation(line: 2392, column: 2, scope: !14655)
!14659 = !DILocation(line: 2392, column: 2, scope: !14660)
!14660 = distinct !DILexicalBlock(scope: !14654, file: !3, line: 2392, column: 2)
!14661 = !DILocation(line: 2392, column: 2, scope: !14662)
!14662 = distinct !DILexicalBlock(scope: !14660, file: !3, line: 2392, column: 2)
!14663 = !DILocation(line: 2392, column: 2, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14662, file: !3, line: 2392, column: 2)
!14665 = !DILocation(line: 2392, column: 2, scope: !14657)
!14666 = !DILocation(line: 2393, column: 2, scope: !14498)
!14667 = !DILocation(line: 2394, column: 1, scope: !14498)
!14668 = distinct !DISubprogram(name: "stv090x_get_std", scope: !3, file: !3, line: 2498, type: !14669, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14669 = !DISubroutineType(types: !14670)
!14670 = !{!319, !4654}
!14671 = !DILocalVariable(name: "state", arg: 1, scope: !14668, file: !3, line: 2498, type: !4654)
!14672 = !DILocation(line: 2498, column: 66, scope: !14668)
!14673 = !DILocalVariable(name: "reg", scope: !14668, file: !3, line: 2500, type: !571)
!14674 = !DILocation(line: 2500, column: 6, scope: !14668)
!14675 = !DILocalVariable(name: "delsys", scope: !14668, file: !3, line: 2501, type: !319)
!14676 = !DILocation(line: 2501, column: 22, scope: !14668)
!14677 = !DILocation(line: 2503, column: 8, scope: !14668)
!14678 = !DILocation(line: 2503, column: 6, scope: !14668)
!14679 = !DILocation(line: 2504, column: 6, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14668, file: !3, line: 2504, column: 6)
!14681 = !DILocation(line: 2504, column: 50, scope: !14680)
!14682 = !DILocation(line: 2504, column: 6, scope: !14668)
!14683 = !DILocation(line: 2505, column: 10, scope: !14680)
!14684 = !DILocation(line: 2505, column: 3, scope: !14680)
!14685 = !DILocation(line: 2506, column: 11, scope: !14686)
!14686 = distinct !DILexicalBlock(scope: !14680, file: !3, line: 2506, column: 11)
!14687 = !DILocation(line: 2506, column: 55, scope: !14686)
!14688 = !DILocation(line: 2506, column: 11, scope: !14680)
!14689 = !DILocation(line: 2507, column: 9, scope: !14690)
!14690 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 2506, column: 61)
!14691 = !DILocation(line: 2507, column: 7, scope: !14690)
!14692 = !DILocation(line: 2508, column: 7, scope: !14693)
!14693 = distinct !DILexicalBlock(scope: !14690, file: !3, line: 2508, column: 7)
!14694 = !DILocation(line: 2508, column: 47, scope: !14693)
!14695 = !DILocation(line: 2508, column: 7, scope: !14690)
!14696 = !DILocation(line: 2509, column: 11, scope: !14693)
!14697 = !DILocation(line: 2509, column: 4, scope: !14693)
!14698 = !DILocation(line: 2511, column: 11, scope: !14693)
!14699 = !DILocation(line: 2512, column: 2, scope: !14690)
!14700 = !DILocation(line: 2513, column: 10, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14686, file: !3, line: 2512, column: 9)
!14702 = !DILocation(line: 2516, column: 9, scope: !14668)
!14703 = !DILocation(line: 2516, column: 2, scope: !14668)
!14704 = distinct !DISubprogram(name: "stv090x_get_car_freq", scope: !3, file: !3, line: 2520, type: !14705, scopeLine: 2521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14705 = !DISubroutineType(types: !14706)
!14706 = !{!445, !4654, !571}
!14707 = !DILocalVariable(name: "state", arg: 1, scope: !14704, file: !3, line: 2520, type: !4654)
!14708 = !DILocation(line: 2520, column: 55, scope: !14704)
!14709 = !DILocalVariable(name: "mclk", arg: 2, scope: !14704, file: !3, line: 2520, type: !571)
!14710 = !DILocation(line: 2520, column: 66, scope: !14704)
!14711 = !DILocalVariable(name: "derot", scope: !14704, file: !3, line: 2522, type: !445)
!14712 = !DILocation(line: 2522, column: 6, scope: !14704)
!14713 = !DILocalVariable(name: "int_1", scope: !14704, file: !3, line: 2522, type: !445)
!14714 = !DILocation(line: 2522, column: 13, scope: !14704)
!14715 = !DILocalVariable(name: "int_2", scope: !14704, file: !3, line: 2522, type: !445)
!14716 = !DILocation(line: 2522, column: 20, scope: !14704)
!14717 = !DILocalVariable(name: "tmp_1", scope: !14704, file: !3, line: 2522, type: !445)
!14718 = !DILocation(line: 2522, column: 27, scope: !14704)
!14719 = !DILocalVariable(name: "tmp_2", scope: !14704, file: !3, line: 2522, type: !445)
!14720 = !DILocation(line: 2522, column: 34, scope: !14704)
!14721 = !DILocation(line: 2524, column: 11, scope: !14704)
!14722 = !DILocation(line: 2524, column: 43, scope: !14704)
!14723 = !DILocation(line: 2524, column: 9, scope: !14704)
!14724 = !DILocation(line: 2525, column: 11, scope: !14704)
!14725 = !DILocation(line: 2525, column: 43, scope: !14704)
!14726 = !DILocation(line: 2525, column: 8, scope: !14704)
!14727 = !DILocation(line: 2526, column: 11, scope: !14704)
!14728 = !DILocation(line: 2526, column: 8, scope: !14704)
!14729 = !DILocation(line: 2528, column: 16, scope: !14704)
!14730 = !DILocation(line: 2528, column: 10, scope: !14704)
!14731 = !DILocation(line: 2528, column: 8, scope: !14704)
!14732 = !DILocation(line: 2529, column: 10, scope: !14704)
!14733 = !DILocation(line: 2529, column: 15, scope: !14704)
!14734 = !DILocation(line: 2529, column: 8, scope: !14704)
!14735 = !DILocation(line: 2530, column: 10, scope: !14704)
!14736 = !DILocation(line: 2530, column: 16, scope: !14704)
!14737 = !DILocation(line: 2530, column: 8, scope: !14704)
!14738 = !DILocation(line: 2533, column: 10, scope: !14704)
!14739 = !DILocation(line: 2533, column: 15, scope: !14704)
!14740 = !DILocation(line: 2533, column: 8, scope: !14704)
!14741 = !DILocation(line: 2534, column: 10, scope: !14704)
!14742 = !DILocation(line: 2534, column: 16, scope: !14704)
!14743 = !DILocation(line: 2534, column: 8, scope: !14704)
!14744 = !DILocation(line: 2536, column: 11, scope: !14704)
!14745 = !DILocation(line: 2536, column: 19, scope: !14704)
!14746 = !DILocation(line: 2536, column: 17, scope: !14704)
!14747 = !DILocation(line: 2537, column: 5, scope: !14704)
!14748 = !DILocation(line: 2537, column: 13, scope: !14704)
!14749 = !DILocation(line: 2537, column: 11, scope: !14704)
!14750 = !DILocation(line: 2537, column: 20, scope: !14704)
!14751 = !DILocation(line: 2536, column: 26, scope: !14704)
!14752 = !DILocation(line: 2538, column: 5, scope: !14704)
!14753 = !DILocation(line: 2538, column: 13, scope: !14704)
!14754 = !DILocation(line: 2538, column: 11, scope: !14704)
!14755 = !DILocation(line: 2538, column: 20, scope: !14704)
!14756 = !DILocation(line: 2537, column: 27, scope: !14704)
!14757 = !DILocation(line: 2536, column: 8, scope: !14704)
!14758 = !DILocation(line: 2540, column: 9, scope: !14704)
!14759 = !DILocation(line: 2540, column: 2, scope: !14704)
!14760 = distinct !DISubprogram(name: "stv090x_get_viterbi", scope: !3, file: !3, line: 2543, type: !4652, scopeLine: 2544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14761 = !DILocalVariable(name: "state", arg: 1, scope: !14760, file: !3, line: 2543, type: !4654)
!14762 = !DILocation(line: 2543, column: 54, scope: !14760)
!14763 = !DILocalVariable(name: "reg", scope: !14760, file: !3, line: 2545, type: !571)
!14764 = !DILocation(line: 2545, column: 6, scope: !14760)
!14765 = !DILocalVariable(name: "rate", scope: !14760, file: !3, line: 2545, type: !571)
!14766 = !DILocation(line: 2545, column: 11, scope: !14760)
!14767 = !DILocation(line: 2547, column: 8, scope: !14760)
!14768 = !DILocation(line: 2547, column: 6, scope: !14760)
!14769 = !DILocation(line: 2548, column: 9, scope: !14760)
!14770 = !DILocation(line: 2548, column: 7, scope: !14760)
!14771 = !DILocation(line: 2550, column: 10, scope: !14760)
!14772 = !DILocation(line: 2550, column: 2, scope: !14760)
!14773 = !DILocation(line: 2552, column: 3, scope: !14774)
!14774 = distinct !DILexicalBlock(scope: !14760, file: !3, line: 2550, column: 16)
!14775 = !DILocation(line: 2552, column: 10, scope: !14774)
!14776 = !DILocation(line: 2552, column: 14, scope: !14774)
!14777 = !DILocation(line: 2553, column: 3, scope: !14774)
!14778 = !DILocation(line: 2556, column: 3, scope: !14774)
!14779 = !DILocation(line: 2556, column: 10, scope: !14774)
!14780 = !DILocation(line: 2556, column: 14, scope: !14774)
!14781 = !DILocation(line: 2557, column: 3, scope: !14774)
!14782 = !DILocation(line: 2560, column: 3, scope: !14774)
!14783 = !DILocation(line: 2560, column: 10, scope: !14774)
!14784 = !DILocation(line: 2560, column: 14, scope: !14774)
!14785 = !DILocation(line: 2561, column: 3, scope: !14774)
!14786 = !DILocation(line: 2564, column: 3, scope: !14774)
!14787 = !DILocation(line: 2564, column: 10, scope: !14774)
!14788 = !DILocation(line: 2564, column: 14, scope: !14774)
!14789 = !DILocation(line: 2565, column: 3, scope: !14774)
!14790 = !DILocation(line: 2568, column: 3, scope: !14774)
!14791 = !DILocation(line: 2568, column: 10, scope: !14774)
!14792 = !DILocation(line: 2568, column: 14, scope: !14774)
!14793 = !DILocation(line: 2569, column: 3, scope: !14774)
!14794 = !DILocation(line: 2572, column: 3, scope: !14774)
!14795 = !DILocation(line: 2572, column: 10, scope: !14774)
!14796 = !DILocation(line: 2572, column: 14, scope: !14774)
!14797 = !DILocation(line: 2573, column: 3, scope: !14774)
!14798 = !DILocation(line: 2576, column: 3, scope: !14774)
!14799 = !DILocation(line: 2576, column: 10, scope: !14774)
!14800 = !DILocation(line: 2576, column: 14, scope: !14774)
!14801 = !DILocation(line: 2577, column: 3, scope: !14774)
!14802 = !DILocation(line: 2580, column: 2, scope: !14760)
!14803 = distinct !DISubprogram(name: "comp2", scope: !3, file: !3, line: 675, type: !14804, scopeLine: 676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14804 = !DISubroutineType(types: !14805)
!14805 = !{!445, !445, !445}
!14806 = !DILocalVariable(name: "__x", arg: 1, scope: !14803, file: !3, line: 675, type: !445)
!14807 = !DILocation(line: 675, column: 29, scope: !14803)
!14808 = !DILocalVariable(name: "__width", arg: 2, scope: !14803, file: !3, line: 675, type: !445)
!14809 = !DILocation(line: 675, column: 38, scope: !14803)
!14810 = !DILocation(line: 677, column: 6, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 677, column: 6)
!14812 = !DILocation(line: 677, column: 14, scope: !14811)
!14813 = !DILocation(line: 677, column: 6, scope: !14803)
!14814 = !DILocation(line: 678, column: 10, scope: !14811)
!14815 = !DILocation(line: 678, column: 3, scope: !14811)
!14816 = !DILocation(line: 680, column: 11, scope: !14811)
!14817 = !DILocation(line: 680, column: 25, scope: !14811)
!14818 = !DILocation(line: 680, column: 33, scope: !14811)
!14819 = !DILocation(line: 680, column: 21, scope: !14811)
!14820 = !DILocation(line: 680, column: 15, scope: !14811)
!14821 = !DILocation(line: 680, column: 10, scope: !14811)
!14822 = !DILocation(line: 680, column: 43, scope: !14811)
!14823 = !DILocation(line: 680, column: 55, scope: !14811)
!14824 = !DILocation(line: 680, column: 52, scope: !14811)
!14825 = !DILocation(line: 680, column: 47, scope: !14811)
!14826 = !DILocation(line: 680, column: 67, scope: !14811)
!14827 = !DILocation(line: 680, column: 3, scope: !14811)
!14828 = !DILocation(line: 681, column: 1, scope: !14803)
!14829 = distinct !DISubprogram(name: "stv090x_get_tmgoffst", scope: !3, file: !3, line: 2661, type: !14298, scopeLine: 2662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14830 = !DILocalVariable(name: "state", arg: 1, scope: !14829, file: !3, line: 2661, type: !4654)
!14831 = !DILocation(line: 2661, column: 55, scope: !14829)
!14832 = !DILocalVariable(name: "srate", arg: 2, scope: !14829, file: !3, line: 2661, type: !571)
!14833 = !DILocation(line: 2661, column: 66, scope: !14829)
!14834 = !DILocalVariable(name: "offst_tmg", scope: !14829, file: !3, line: 2663, type: !445)
!14835 = !DILocation(line: 2663, column: 6, scope: !14829)
!14836 = !DILocation(line: 2665, column: 15, scope: !14829)
!14837 = !DILocation(line: 2665, column: 50, scope: !14829)
!14838 = !DILocation(line: 2665, column: 13, scope: !14829)
!14839 = !DILocation(line: 2666, column: 15, scope: !14829)
!14840 = !DILocation(line: 2666, column: 50, scope: !14829)
!14841 = !DILocation(line: 2666, column: 12, scope: !14829)
!14842 = !DILocation(line: 2667, column: 15, scope: !14829)
!14843 = !DILocation(line: 2667, column: 12, scope: !14829)
!14844 = !DILocation(line: 2669, column: 20, scope: !14829)
!14845 = !DILocation(line: 2669, column: 14, scope: !14829)
!14846 = !DILocation(line: 2669, column: 12, scope: !14829)
!14847 = !DILocation(line: 2670, column: 7, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 2670, column: 6)
!14849 = !DILocation(line: 2670, column: 6, scope: !14829)
!14850 = !DILocation(line: 2671, column: 13, scope: !14848)
!14851 = !DILocation(line: 2671, column: 3, scope: !14848)
!14852 = !DILocation(line: 2673, column: 22, scope: !14829)
!14853 = !DILocation(line: 2673, column: 28, scope: !14829)
!14854 = !DILocation(line: 2673, column: 55, scope: !14829)
!14855 = !DILocation(line: 2673, column: 53, scope: !14829)
!14856 = !DILocation(line: 2673, column: 34, scope: !14829)
!14857 = !DILocation(line: 2673, column: 13, scope: !14829)
!14858 = !DILocation(line: 2674, column: 12, scope: !14829)
!14859 = !DILocation(line: 2676, column: 9, scope: !14829)
!14860 = !DILocation(line: 2676, column: 2, scope: !14829)
!14861 = distinct !DISubprogram(name: "stv090x_optimize_carloop", scope: !3, file: !3, line: 2679, type: !14862, scopeLine: 2680, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!14862 = !DISubroutineType(types: !14863)
!14863 = !{!492, !4654, !345, !445}
!14864 = !DILocalVariable(name: "state", arg: 1, scope: !14861, file: !3, line: 2679, type: !4654)
!14865 = !DILocation(line: 2679, column: 58, scope: !14861)
!14866 = !DILocalVariable(name: "modcod", arg: 2, scope: !14861, file: !3, line: 2679, type: !345)
!14867 = !DILocation(line: 2679, column: 85, scope: !14861)
!14868 = !DILocalVariable(name: "pilots", arg: 3, scope: !14861, file: !3, line: 2679, type: !445)
!14869 = !DILocation(line: 2679, column: 97, scope: !14861)
!14870 = !DILocalVariable(name: "aclc", scope: !14861, file: !3, line: 2681, type: !492)
!14871 = !DILocation(line: 2681, column: 5, scope: !14861)
!14872 = !DILocalVariable(name: "i", scope: !14861, file: !3, line: 2682, type: !445)
!14873 = !DILocation(line: 2682, column: 6, scope: !14861)
!14874 = !DILocalVariable(name: "car_loop", scope: !14861, file: !3, line: 2683, type: !14875)
!14875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4609, size: 64)
!14876 = !DILocation(line: 2683, column: 36, scope: !14861)
!14877 = !DILocalVariable(name: "car_loop_qpsk_low", scope: !14861, file: !3, line: 2683, type: !14875)
!14878 = !DILocation(line: 2683, column: 47, scope: !14861)
!14879 = !DILocalVariable(name: "car_loop_apsk_low", scope: !14861, file: !3, line: 2683, type: !14875)
!14880 = !DILocation(line: 2683, column: 67, scope: !14861)
!14881 = !DILocation(line: 2685, column: 6, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 2685, column: 6)
!14883 = !DILocation(line: 2685, column: 13, scope: !14882)
!14884 = !DILocation(line: 2685, column: 23, scope: !14882)
!14885 = !DILocation(line: 2685, column: 31, scope: !14882)
!14886 = !DILocation(line: 2685, column: 6, scope: !14861)
!14887 = !DILocation(line: 2686, column: 13, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 2685, column: 40)
!14889 = !DILocation(line: 2687, column: 21, scope: !14888)
!14890 = !DILocation(line: 2688, column: 21, scope: !14888)
!14891 = !DILocation(line: 2689, column: 2, scope: !14888)
!14892 = !DILocation(line: 2691, column: 13, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 2689, column: 9)
!14894 = !DILocation(line: 2692, column: 21, scope: !14893)
!14895 = !DILocation(line: 2693, column: 21, scope: !14893)
!14896 = !DILocation(line: 2696, column: 6, scope: !14897)
!14897 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 2696, column: 6)
!14898 = !DILocation(line: 2696, column: 13, scope: !14897)
!14899 = !DILocation(line: 2696, column: 6, scope: !14861)
!14900 = !DILocation(line: 2697, column: 5, scope: !14901)
!14901 = distinct !DILexicalBlock(scope: !14897, file: !3, line: 2696, column: 32)
!14902 = !DILocation(line: 2698, column: 3, scope: !14901)
!14903 = !DILocation(line: 2698, column: 11, scope: !14901)
!14904 = !DILocation(line: 2698, column: 13, scope: !14901)
!14905 = !DILocation(line: 2698, column: 18, scope: !14901)
!14906 = !DILocation(line: 2698, column: 22, scope: !14901)
!14907 = !DILocation(line: 2698, column: 32, scope: !14901)
!14908 = !DILocation(line: 2698, column: 50, scope: !14901)
!14909 = !DILocation(line: 2698, column: 53, scope: !14901)
!14910 = !DILocation(line: 2698, column: 29, scope: !14901)
!14911 = !DILocation(line: 0, scope: !14901)
!14912 = !DILocation(line: 2699, column: 5, scope: !14901)
!14913 = distinct !{!14913, !14902, !14912}
!14914 = !DILocation(line: 2701, column: 7, scope: !14915)
!14915 = distinct !DILexicalBlock(scope: !14901, file: !3, line: 2701, column: 7)
!14916 = !DILocation(line: 2701, column: 9, scope: !14915)
!14917 = !DILocation(line: 2701, column: 7, scope: !14901)
!14918 = !DILocation(line: 2702, column: 6, scope: !14915)
!14919 = !DILocation(line: 2702, column: 4, scope: !14915)
!14920 = !DILocation(line: 2704, column: 2, scope: !14901)
!14921 = !DILocation(line: 2705, column: 5, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14897, file: !3, line: 2704, column: 9)
!14923 = !DILocation(line: 2706, column: 3, scope: !14922)
!14924 = !DILocation(line: 2706, column: 11, scope: !14922)
!14925 = !DILocation(line: 2706, column: 13, scope: !14922)
!14926 = !DILocation(line: 2706, column: 19, scope: !14922)
!14927 = !DILocation(line: 2706, column: 23, scope: !14922)
!14928 = !DILocation(line: 2706, column: 33, scope: !14922)
!14929 = !DILocation(line: 2706, column: 42, scope: !14922)
!14930 = !DILocation(line: 2706, column: 45, scope: !14922)
!14931 = !DILocation(line: 2706, column: 30, scope: !14922)
!14932 = !DILocation(line: 0, scope: !14922)
!14933 = !DILocation(line: 2707, column: 5, scope: !14922)
!14934 = distinct !{!14934, !14923, !14933}
!14935 = !DILocation(line: 2709, column: 7, scope: !14936)
!14936 = distinct !DILexicalBlock(scope: !14922, file: !3, line: 2709, column: 7)
!14937 = !DILocation(line: 2709, column: 9, scope: !14936)
!14938 = !DILocation(line: 2709, column: 7, scope: !14922)
!14939 = !DILocation(line: 2710, column: 6, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14936, file: !3, line: 2709, column: 16)
!14941 = !DILocation(line: 2711, column: 4, scope: !14940)
!14942 = !DILocation(line: 2711, column: 12, scope: !14940)
!14943 = !DILocation(line: 2711, column: 14, scope: !14940)
!14944 = !DILocation(line: 2711, column: 20, scope: !14940)
!14945 = !DILocation(line: 2711, column: 24, scope: !14940)
!14946 = !DILocation(line: 2711, column: 34, scope: !14940)
!14947 = !DILocation(line: 2711, column: 52, scope: !14940)
!14948 = !DILocation(line: 2711, column: 55, scope: !14940)
!14949 = !DILocation(line: 2711, column: 31, scope: !14940)
!14950 = !DILocation(line: 0, scope: !14940)
!14951 = !DILocation(line: 2712, column: 6, scope: !14940)
!14952 = distinct !{!14952, !14941, !14951}
!14953 = !DILocation(line: 2714, column: 8, scope: !14954)
!14954 = distinct !DILexicalBlock(scope: !14940, file: !3, line: 2714, column: 8)
!14955 = !DILocation(line: 2714, column: 10, scope: !14954)
!14956 = !DILocation(line: 2714, column: 8, scope: !14940)
!14957 = !DILocation(line: 2715, column: 7, scope: !14954)
!14958 = !DILocation(line: 2715, column: 5, scope: !14954)
!14959 = !DILocation(line: 2716, column: 3, scope: !14940)
!14960 = !DILocation(line: 2719, column: 6, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14861, file: !3, line: 2719, column: 6)
!14962 = !DILocation(line: 2719, column: 13, scope: !14961)
!14963 = !DILocation(line: 2719, column: 6, scope: !14861)
!14964 = !DILocation(line: 2720, column: 7, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14966, file: !3, line: 2720, column: 7)
!14966 = distinct !DILexicalBlock(scope: !14961, file: !3, line: 2719, column: 33)
!14967 = !DILocation(line: 2720, column: 7, scope: !14966)
!14968 = !DILocation(line: 2721, column: 8, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 2721, column: 8)
!14970 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 2720, column: 15)
!14971 = !DILocation(line: 2721, column: 15, scope: !14969)
!14972 = !DILocation(line: 2721, column: 21, scope: !14969)
!14973 = !DILocation(line: 2721, column: 8, scope: !14970)
!14974 = !DILocation(line: 2722, column: 12, scope: !14969)
!14975 = !DILocation(line: 2722, column: 30, scope: !14969)
!14976 = !DILocation(line: 2722, column: 33, scope: !14969)
!14977 = !DILocation(line: 2722, column: 10, scope: !14969)
!14978 = !DILocation(line: 2722, column: 5, scope: !14969)
!14979 = !DILocation(line: 2723, column: 13, scope: !14980)
!14980 = distinct !DILexicalBlock(scope: !14969, file: !3, line: 2723, column: 13)
!14981 = !DILocation(line: 2723, column: 20, scope: !14980)
!14982 = !DILocation(line: 2723, column: 26, scope: !14980)
!14983 = !DILocation(line: 2723, column: 13, scope: !14969)
!14984 = !DILocation(line: 2724, column: 12, scope: !14980)
!14985 = !DILocation(line: 2724, column: 30, scope: !14980)
!14986 = !DILocation(line: 2724, column: 33, scope: !14980)
!14987 = !DILocation(line: 2724, column: 10, scope: !14980)
!14988 = !DILocation(line: 2724, column: 5, scope: !14980)
!14989 = !DILocation(line: 2725, column: 13, scope: !14990)
!14990 = distinct !DILexicalBlock(scope: !14980, file: !3, line: 2725, column: 13)
!14991 = !DILocation(line: 2725, column: 20, scope: !14990)
!14992 = !DILocation(line: 2725, column: 26, scope: !14990)
!14993 = !DILocation(line: 2725, column: 13, scope: !14980)
!14994 = !DILocation(line: 2726, column: 12, scope: !14990)
!14995 = !DILocation(line: 2726, column: 30, scope: !14990)
!14996 = !DILocation(line: 2726, column: 33, scope: !14990)
!14997 = !DILocation(line: 2726, column: 10, scope: !14990)
!14998 = !DILocation(line: 2726, column: 5, scope: !14990)
!14999 = !DILocation(line: 2727, column: 13, scope: !15000)
!15000 = distinct !DILexicalBlock(scope: !14990, file: !3, line: 2727, column: 13)
!15001 = !DILocation(line: 2727, column: 20, scope: !15000)
!15002 = !DILocation(line: 2727, column: 26, scope: !15000)
!15003 = !DILocation(line: 2727, column: 13, scope: !14990)
!15004 = !DILocation(line: 2728, column: 12, scope: !15000)
!15005 = !DILocation(line: 2728, column: 30, scope: !15000)
!15006 = !DILocation(line: 2728, column: 33, scope: !15000)
!15007 = !DILocation(line: 2728, column: 10, scope: !15000)
!15008 = !DILocation(line: 2728, column: 5, scope: !15000)
!15009 = !DILocation(line: 2730, column: 12, scope: !15000)
!15010 = !DILocation(line: 2730, column: 30, scope: !15000)
!15011 = !DILocation(line: 2730, column: 33, scope: !15000)
!15012 = !DILocation(line: 2730, column: 10, scope: !15000)
!15013 = !DILocation(line: 2731, column: 3, scope: !14970)
!15014 = !DILocation(line: 2732, column: 8, scope: !15015)
!15015 = distinct !DILexicalBlock(scope: !15016, file: !3, line: 2732, column: 8)
!15016 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 2731, column: 10)
!15017 = !DILocation(line: 2732, column: 15, scope: !15015)
!15018 = !DILocation(line: 2732, column: 21, scope: !15015)
!15019 = !DILocation(line: 2732, column: 8, scope: !15016)
!15020 = !DILocation(line: 2733, column: 12, scope: !15015)
!15021 = !DILocation(line: 2733, column: 30, scope: !15015)
!15022 = !DILocation(line: 2733, column: 33, scope: !15015)
!15023 = !DILocation(line: 2733, column: 10, scope: !15015)
!15024 = !DILocation(line: 2733, column: 5, scope: !15015)
!15025 = !DILocation(line: 2734, column: 13, scope: !15026)
!15026 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2734, column: 13)
!15027 = !DILocation(line: 2734, column: 20, scope: !15026)
!15028 = !DILocation(line: 2734, column: 26, scope: !15026)
!15029 = !DILocation(line: 2734, column: 13, scope: !15015)
!15030 = !DILocation(line: 2735, column: 12, scope: !15026)
!15031 = !DILocation(line: 2735, column: 30, scope: !15026)
!15032 = !DILocation(line: 2735, column: 33, scope: !15026)
!15033 = !DILocation(line: 2735, column: 10, scope: !15026)
!15034 = !DILocation(line: 2735, column: 5, scope: !15026)
!15035 = !DILocation(line: 2736, column: 13, scope: !15036)
!15036 = distinct !DILexicalBlock(scope: !15026, file: !3, line: 2736, column: 13)
!15037 = !DILocation(line: 2736, column: 20, scope: !15036)
!15038 = !DILocation(line: 2736, column: 26, scope: !15036)
!15039 = !DILocation(line: 2736, column: 13, scope: !15026)
!15040 = !DILocation(line: 2737, column: 12, scope: !15036)
!15041 = !DILocation(line: 2737, column: 30, scope: !15036)
!15042 = !DILocation(line: 2737, column: 33, scope: !15036)
!15043 = !DILocation(line: 2737, column: 10, scope: !15036)
!15044 = !DILocation(line: 2737, column: 5, scope: !15036)
!15045 = !DILocation(line: 2738, column: 13, scope: !15046)
!15046 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 2738, column: 13)
!15047 = !DILocation(line: 2738, column: 20, scope: !15046)
!15048 = !DILocation(line: 2738, column: 26, scope: !15046)
!15049 = !DILocation(line: 2738, column: 13, scope: !15036)
!15050 = !DILocation(line: 2739, column: 12, scope: !15046)
!15051 = !DILocation(line: 2739, column: 30, scope: !15046)
!15052 = !DILocation(line: 2739, column: 33, scope: !15046)
!15053 = !DILocation(line: 2739, column: 10, scope: !15046)
!15054 = !DILocation(line: 2739, column: 5, scope: !15046)
!15055 = !DILocation(line: 2741, column: 12, scope: !15046)
!15056 = !DILocation(line: 2741, column: 30, scope: !15046)
!15057 = !DILocation(line: 2741, column: 33, scope: !15046)
!15058 = !DILocation(line: 2741, column: 10, scope: !15046)
!15059 = !DILocation(line: 2744, column: 2, scope: !14966)
!15060 = !DILocation(line: 2744, column: 13, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !14961, file: !3, line: 2744, column: 13)
!15062 = !DILocation(line: 2744, column: 20, scope: !15061)
!15063 = !DILocation(line: 2744, column: 13, scope: !14961)
!15064 = !DILocation(line: 2745, column: 7, scope: !15065)
!15065 = distinct !DILexicalBlock(scope: !15066, file: !3, line: 2745, column: 7)
!15066 = distinct !DILexicalBlock(scope: !15061, file: !3, line: 2744, column: 41)
!15067 = !DILocation(line: 2745, column: 7, scope: !15066)
!15068 = !DILocation(line: 2746, column: 8, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15070, file: !3, line: 2746, column: 8)
!15070 = distinct !DILexicalBlock(scope: !15065, file: !3, line: 2745, column: 15)
!15071 = !DILocation(line: 2746, column: 15, scope: !15069)
!15072 = !DILocation(line: 2746, column: 21, scope: !15069)
!15073 = !DILocation(line: 2746, column: 8, scope: !15070)
!15074 = !DILocation(line: 2747, column: 12, scope: !15069)
!15075 = !DILocation(line: 2747, column: 21, scope: !15069)
!15076 = !DILocation(line: 2747, column: 24, scope: !15069)
!15077 = !DILocation(line: 2747, column: 10, scope: !15069)
!15078 = !DILocation(line: 2747, column: 5, scope: !15069)
!15079 = !DILocation(line: 2748, column: 13, scope: !15080)
!15080 = distinct !DILexicalBlock(scope: !15069, file: !3, line: 2748, column: 13)
!15081 = !DILocation(line: 2748, column: 20, scope: !15080)
!15082 = !DILocation(line: 2748, column: 26, scope: !15080)
!15083 = !DILocation(line: 2748, column: 13, scope: !15069)
!15084 = !DILocation(line: 2749, column: 12, scope: !15080)
!15085 = !DILocation(line: 2749, column: 21, scope: !15080)
!15086 = !DILocation(line: 2749, column: 24, scope: !15080)
!15087 = !DILocation(line: 2749, column: 10, scope: !15080)
!15088 = !DILocation(line: 2749, column: 5, scope: !15080)
!15089 = !DILocation(line: 2750, column: 13, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15080, file: !3, line: 2750, column: 13)
!15091 = !DILocation(line: 2750, column: 20, scope: !15090)
!15092 = !DILocation(line: 2750, column: 26, scope: !15090)
!15093 = !DILocation(line: 2750, column: 13, scope: !15080)
!15094 = !DILocation(line: 2751, column: 12, scope: !15090)
!15095 = !DILocation(line: 2751, column: 21, scope: !15090)
!15096 = !DILocation(line: 2751, column: 24, scope: !15090)
!15097 = !DILocation(line: 2751, column: 10, scope: !15090)
!15098 = !DILocation(line: 2751, column: 5, scope: !15090)
!15099 = !DILocation(line: 2752, column: 13, scope: !15100)
!15100 = distinct !DILexicalBlock(scope: !15090, file: !3, line: 2752, column: 13)
!15101 = !DILocation(line: 2752, column: 20, scope: !15100)
!15102 = !DILocation(line: 2752, column: 26, scope: !15100)
!15103 = !DILocation(line: 2752, column: 13, scope: !15090)
!15104 = !DILocation(line: 2753, column: 12, scope: !15100)
!15105 = !DILocation(line: 2753, column: 21, scope: !15100)
!15106 = !DILocation(line: 2753, column: 24, scope: !15100)
!15107 = !DILocation(line: 2753, column: 10, scope: !15100)
!15108 = !DILocation(line: 2753, column: 5, scope: !15100)
!15109 = !DILocation(line: 2755, column: 12, scope: !15100)
!15110 = !DILocation(line: 2755, column: 21, scope: !15100)
!15111 = !DILocation(line: 2755, column: 24, scope: !15100)
!15112 = !DILocation(line: 2755, column: 10, scope: !15100)
!15113 = !DILocation(line: 2756, column: 3, scope: !15070)
!15114 = !DILocation(line: 2757, column: 8, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15116, file: !3, line: 2757, column: 8)
!15116 = distinct !DILexicalBlock(scope: !15065, file: !3, line: 2756, column: 10)
!15117 = !DILocation(line: 2757, column: 15, scope: !15115)
!15118 = !DILocation(line: 2757, column: 21, scope: !15115)
!15119 = !DILocation(line: 2757, column: 8, scope: !15116)
!15120 = !DILocation(line: 2758, column: 12, scope: !15115)
!15121 = !DILocation(line: 2758, column: 21, scope: !15115)
!15122 = !DILocation(line: 2758, column: 24, scope: !15115)
!15123 = !DILocation(line: 2758, column: 10, scope: !15115)
!15124 = !DILocation(line: 2758, column: 5, scope: !15115)
!15125 = !DILocation(line: 2759, column: 13, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15115, file: !3, line: 2759, column: 13)
!15127 = !DILocation(line: 2759, column: 20, scope: !15126)
!15128 = !DILocation(line: 2759, column: 26, scope: !15126)
!15129 = !DILocation(line: 2759, column: 13, scope: !15115)
!15130 = !DILocation(line: 2760, column: 12, scope: !15126)
!15131 = !DILocation(line: 2760, column: 21, scope: !15126)
!15132 = !DILocation(line: 2760, column: 24, scope: !15126)
!15133 = !DILocation(line: 2760, column: 10, scope: !15126)
!15134 = !DILocation(line: 2760, column: 5, scope: !15126)
!15135 = !DILocation(line: 2761, column: 13, scope: !15136)
!15136 = distinct !DILexicalBlock(scope: !15126, file: !3, line: 2761, column: 13)
!15137 = !DILocation(line: 2761, column: 20, scope: !15136)
!15138 = !DILocation(line: 2761, column: 26, scope: !15136)
!15139 = !DILocation(line: 2761, column: 13, scope: !15126)
!15140 = !DILocation(line: 2762, column: 12, scope: !15136)
!15141 = !DILocation(line: 2762, column: 21, scope: !15136)
!15142 = !DILocation(line: 2762, column: 24, scope: !15136)
!15143 = !DILocation(line: 2762, column: 10, scope: !15136)
!15144 = !DILocation(line: 2762, column: 5, scope: !15136)
!15145 = !DILocation(line: 2763, column: 13, scope: !15146)
!15146 = distinct !DILexicalBlock(scope: !15136, file: !3, line: 2763, column: 13)
!15147 = !DILocation(line: 2763, column: 20, scope: !15146)
!15148 = !DILocation(line: 2763, column: 26, scope: !15146)
!15149 = !DILocation(line: 2763, column: 13, scope: !15136)
!15150 = !DILocation(line: 2764, column: 12, scope: !15146)
!15151 = !DILocation(line: 2764, column: 21, scope: !15146)
!15152 = !DILocation(line: 2764, column: 24, scope: !15146)
!15153 = !DILocation(line: 2764, column: 10, scope: !15146)
!15154 = !DILocation(line: 2764, column: 5, scope: !15146)
!15155 = !DILocation(line: 2766, column: 12, scope: !15146)
!15156 = !DILocation(line: 2766, column: 21, scope: !15146)
!15157 = !DILocation(line: 2766, column: 24, scope: !15146)
!15158 = !DILocation(line: 2766, column: 10, scope: !15146)
!15159 = !DILocation(line: 2768, column: 2, scope: !15066)
!15160 = !DILocation(line: 2773, column: 7, scope: !15161)
!15161 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 2773, column: 7)
!15162 = distinct !DILexicalBlock(scope: !15061, file: !3, line: 2768, column: 9)
!15163 = !DILocation(line: 2773, column: 9, scope: !15161)
!15164 = !DILocation(line: 2773, column: 7, scope: !15162)
!15165 = !DILocation(line: 2774, column: 6, scope: !15161)
!15166 = !DILocation(line: 2774, column: 4, scope: !15161)
!15167 = !DILocation(line: 2775, column: 7, scope: !15168)
!15168 = distinct !DILexicalBlock(scope: !15162, file: !3, line: 2775, column: 7)
!15169 = !DILocation(line: 2775, column: 14, scope: !15168)
!15170 = !DILocation(line: 2775, column: 20, scope: !15168)
!15171 = !DILocation(line: 2775, column: 7, scope: !15162)
!15172 = !DILocation(line: 2776, column: 11, scope: !15168)
!15173 = !DILocation(line: 2776, column: 29, scope: !15168)
!15174 = !DILocation(line: 2776, column: 32, scope: !15168)
!15175 = !DILocation(line: 2776, column: 9, scope: !15168)
!15176 = !DILocation(line: 2776, column: 4, scope: !15168)
!15177 = !DILocation(line: 2777, column: 12, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15168, file: !3, line: 2777, column: 12)
!15179 = !DILocation(line: 2777, column: 19, scope: !15178)
!15180 = !DILocation(line: 2777, column: 25, scope: !15178)
!15181 = !DILocation(line: 2777, column: 12, scope: !15168)
!15182 = !DILocation(line: 2778, column: 11, scope: !15178)
!15183 = !DILocation(line: 2778, column: 29, scope: !15178)
!15184 = !DILocation(line: 2778, column: 32, scope: !15178)
!15185 = !DILocation(line: 2778, column: 9, scope: !15178)
!15186 = !DILocation(line: 2778, column: 4, scope: !15178)
!15187 = !DILocation(line: 2779, column: 12, scope: !15188)
!15188 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 2779, column: 12)
!15189 = !DILocation(line: 2779, column: 19, scope: !15188)
!15190 = !DILocation(line: 2779, column: 25, scope: !15188)
!15191 = !DILocation(line: 2779, column: 12, scope: !15178)
!15192 = !DILocation(line: 2780, column: 11, scope: !15188)
!15193 = !DILocation(line: 2780, column: 29, scope: !15188)
!15194 = !DILocation(line: 2780, column: 32, scope: !15188)
!15195 = !DILocation(line: 2780, column: 9, scope: !15188)
!15196 = !DILocation(line: 2780, column: 4, scope: !15188)
!15197 = !DILocation(line: 2781, column: 12, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15188, file: !3, line: 2781, column: 12)
!15199 = !DILocation(line: 2781, column: 19, scope: !15198)
!15200 = !DILocation(line: 2781, column: 25, scope: !15198)
!15201 = !DILocation(line: 2781, column: 12, scope: !15188)
!15202 = !DILocation(line: 2782, column: 11, scope: !15198)
!15203 = !DILocation(line: 2782, column: 29, scope: !15198)
!15204 = !DILocation(line: 2782, column: 32, scope: !15198)
!15205 = !DILocation(line: 2782, column: 9, scope: !15198)
!15206 = !DILocation(line: 2782, column: 4, scope: !15198)
!15207 = !DILocation(line: 2784, column: 11, scope: !15198)
!15208 = !DILocation(line: 2784, column: 29, scope: !15198)
!15209 = !DILocation(line: 2784, column: 32, scope: !15198)
!15210 = !DILocation(line: 2784, column: 9, scope: !15198)
!15211 = !DILocation(line: 2787, column: 9, scope: !14861)
!15212 = !DILocation(line: 2787, column: 2, scope: !14861)
!15213 = distinct !DISubprogram(name: "stv090x_optimize_carloop_short", scope: !3, file: !3, line: 2790, type: !15214, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!15214 = !DISubroutineType(types: !15215)
!15215 = !{!492, !4654}
!15216 = !DILocalVariable(name: "state", arg: 1, scope: !15213, file: !3, line: 2790, type: !4654)
!15217 = !DILocation(line: 2790, column: 64, scope: !15213)
!15218 = !DILocalVariable(name: "short_crl", scope: !15213, file: !3, line: 2792, type: !15219)
!15219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4639, size: 64)
!15220 = !DILocation(line: 2792, column: 37, scope: !15213)
!15221 = !DILocalVariable(name: "index", scope: !15213, file: !3, line: 2793, type: !445)
!15222 = !DILocation(line: 2793, column: 6, scope: !15213)
!15223 = !DILocalVariable(name: "aclc", scope: !15213, file: !3, line: 2794, type: !492)
!15224 = !DILocation(line: 2794, column: 5, scope: !15213)
!15225 = !DILocation(line: 2796, column: 10, scope: !15213)
!15226 = !DILocation(line: 2796, column: 17, scope: !15213)
!15227 = !DILocation(line: 2796, column: 2, scope: !15213)
!15228 = !DILocation(line: 2796, column: 29, scope: !15213)
!15229 = !DILocation(line: 2799, column: 9, scope: !15230)
!15230 = distinct !DILexicalBlock(scope: !15213, file: !3, line: 2796, column: 29)
!15231 = !DILocation(line: 2800, column: 3, scope: !15230)
!15232 = !DILocation(line: 2802, column: 9, scope: !15230)
!15233 = !DILocation(line: 2803, column: 3, scope: !15230)
!15234 = !DILocation(line: 2805, column: 9, scope: !15230)
!15235 = !DILocation(line: 2806, column: 3, scope: !15230)
!15236 = !DILocation(line: 2808, column: 9, scope: !15230)
!15237 = !DILocation(line: 2809, column: 3, scope: !15230)
!15238 = !DILocation(line: 2812, column: 6, scope: !15239)
!15239 = distinct !DILexicalBlock(scope: !15213, file: !3, line: 2812, column: 6)
!15240 = !DILocation(line: 2812, column: 13, scope: !15239)
!15241 = !DILocation(line: 2812, column: 23, scope: !15239)
!15242 = !DILocation(line: 2812, column: 31, scope: !15239)
!15243 = !DILocation(line: 2812, column: 6, scope: !15213)
!15244 = !DILocation(line: 2814, column: 13, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15239, file: !3, line: 2812, column: 40)
!15246 = !DILocation(line: 2815, column: 2, scope: !15245)
!15247 = !DILocation(line: 2817, column: 13, scope: !15248)
!15248 = distinct !DILexicalBlock(scope: !15239, file: !3, line: 2815, column: 9)
!15249 = !DILocation(line: 2820, column: 6, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15213, file: !3, line: 2820, column: 6)
!15251 = !DILocation(line: 2820, column: 13, scope: !15250)
!15252 = !DILocation(line: 2820, column: 19, scope: !15250)
!15253 = !DILocation(line: 2820, column: 6, scope: !15213)
!15254 = !DILocation(line: 2821, column: 10, scope: !15250)
!15255 = !DILocation(line: 2821, column: 20, scope: !15250)
!15256 = !DILocation(line: 2821, column: 27, scope: !15250)
!15257 = !DILocation(line: 2821, column: 8, scope: !15250)
!15258 = !DILocation(line: 2821, column: 3, scope: !15250)
!15259 = !DILocation(line: 2822, column: 11, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15250, file: !3, line: 2822, column: 11)
!15261 = !DILocation(line: 2822, column: 18, scope: !15260)
!15262 = !DILocation(line: 2822, column: 24, scope: !15260)
!15263 = !DILocation(line: 2822, column: 11, scope: !15250)
!15264 = !DILocation(line: 2823, column: 10, scope: !15260)
!15265 = !DILocation(line: 2823, column: 20, scope: !15260)
!15266 = !DILocation(line: 2823, column: 27, scope: !15260)
!15267 = !DILocation(line: 2823, column: 8, scope: !15260)
!15268 = !DILocation(line: 2823, column: 3, scope: !15260)
!15269 = !DILocation(line: 2824, column: 11, scope: !15270)
!15270 = distinct !DILexicalBlock(scope: !15260, file: !3, line: 2824, column: 11)
!15271 = !DILocation(line: 2824, column: 18, scope: !15270)
!15272 = !DILocation(line: 2824, column: 24, scope: !15270)
!15273 = !DILocation(line: 2824, column: 11, scope: !15260)
!15274 = !DILocation(line: 2825, column: 10, scope: !15270)
!15275 = !DILocation(line: 2825, column: 20, scope: !15270)
!15276 = !DILocation(line: 2825, column: 27, scope: !15270)
!15277 = !DILocation(line: 2825, column: 8, scope: !15270)
!15278 = !DILocation(line: 2825, column: 3, scope: !15270)
!15279 = !DILocation(line: 2826, column: 11, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15270, file: !3, line: 2826, column: 11)
!15281 = !DILocation(line: 2826, column: 18, scope: !15280)
!15282 = !DILocation(line: 2826, column: 24, scope: !15280)
!15283 = !DILocation(line: 2826, column: 11, scope: !15270)
!15284 = !DILocation(line: 2827, column: 10, scope: !15280)
!15285 = !DILocation(line: 2827, column: 20, scope: !15280)
!15286 = !DILocation(line: 2827, column: 27, scope: !15280)
!15287 = !DILocation(line: 2827, column: 8, scope: !15280)
!15288 = !DILocation(line: 2827, column: 3, scope: !15280)
!15289 = !DILocation(line: 2829, column: 10, scope: !15280)
!15290 = !DILocation(line: 2829, column: 20, scope: !15280)
!15291 = !DILocation(line: 2829, column: 27, scope: !15280)
!15292 = !DILocation(line: 2829, column: 8, scope: !15280)
!15293 = !DILocation(line: 2831, column: 9, scope: !15213)
!15294 = !DILocation(line: 2831, column: 2, scope: !15213)
!15295 = distinct !DISubprogram(name: "stv090x_get_feclock", scope: !3, file: !3, line: 3080, type: !11100, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!15296 = !DILocalVariable(name: "state", arg: 1, scope: !15295, file: !3, line: 3080, type: !4654)
!15297 = !DILocation(line: 3080, column: 54, scope: !15295)
!15298 = !DILocalVariable(name: "timeout", arg: 2, scope: !15295, file: !3, line: 3080, type: !445)
!15299 = !DILocation(line: 3080, column: 65, scope: !15295)
!15300 = !DILocalVariable(name: "timer", scope: !15295, file: !3, line: 3082, type: !445)
!15301 = !DILocation(line: 3082, column: 6, scope: !15295)
!15302 = !DILocalVariable(name: "lock", scope: !15295, file: !3, line: 3082, type: !445)
!15303 = !DILocation(line: 3082, column: 17, scope: !15295)
!15304 = !DILocalVariable(name: "stat", scope: !15295, file: !3, line: 3082, type: !445)
!15305 = !DILocation(line: 3082, column: 27, scope: !15295)
!15306 = !DILocalVariable(name: "reg", scope: !15295, file: !3, line: 3083, type: !571)
!15307 = !DILocation(line: 3083, column: 6, scope: !15295)
!15308 = !DILocation(line: 3085, column: 2, scope: !15295)
!15309 = !DILocation(line: 3085, column: 10, scope: !15295)
!15310 = !DILocation(line: 3085, column: 18, scope: !15295)
!15311 = !DILocation(line: 3085, column: 16, scope: !15295)
!15312 = !DILocation(line: 3085, column: 27, scope: !15295)
!15313 = !DILocation(line: 3085, column: 32, scope: !15295)
!15314 = !DILocation(line: 3085, column: 31, scope: !15295)
!15315 = !DILocation(line: 0, scope: !15295)
!15316 = !DILocation(line: 3086, column: 9, scope: !15317)
!15317 = distinct !DILexicalBlock(scope: !15295, file: !3, line: 3085, column: 39)
!15318 = !DILocation(line: 3086, column: 7, scope: !15317)
!15319 = !DILocation(line: 3087, column: 10, scope: !15317)
!15320 = !DILocation(line: 3087, column: 8, scope: !15317)
!15321 = !DILocation(line: 3089, column: 11, scope: !15317)
!15322 = !DILocation(line: 3089, column: 3, scope: !15317)
!15323 = !DILocation(line: 3089, column: 17, scope: !15317)
!15324 = !DILocation(line: 3093, column: 9, scope: !15325)
!15325 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 3089, column: 17)
!15326 = !DILocation(line: 3094, column: 4, scope: !15325)
!15327 = !DILocation(line: 3097, column: 10, scope: !15325)
!15328 = !DILocation(line: 3097, column: 8, scope: !15325)
!15329 = !DILocation(line: 3098, column: 11, scope: !15325)
!15330 = !DILocation(line: 3098, column: 9, scope: !15325)
!15331 = !DILocation(line: 3099, column: 4, scope: !15325)
!15332 = !DILocation(line: 3102, column: 10, scope: !15325)
!15333 = !DILocation(line: 3102, column: 8, scope: !15325)
!15334 = !DILocation(line: 3103, column: 11, scope: !15325)
!15335 = !DILocation(line: 3103, column: 9, scope: !15325)
!15336 = !DILocation(line: 3104, column: 4, scope: !15325)
!15337 = !DILocation(line: 3106, column: 8, scope: !15338)
!15338 = distinct !DILexicalBlock(scope: !15317, file: !3, line: 3106, column: 7)
!15339 = !DILocation(line: 3106, column: 7, scope: !15317)
!15340 = !DILocation(line: 3107, column: 4, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15338, file: !3, line: 3106, column: 14)
!15342 = !DILocation(line: 3108, column: 10, scope: !15341)
!15343 = !DILocation(line: 3109, column: 3, scope: !15341)
!15344 = distinct !{!15344, !15308, !15345}
!15345 = !DILocation(line: 3110, column: 2, scope: !15295)
!15346 = !DILocation(line: 3111, column: 9, scope: !15295)
!15347 = !DILocation(line: 3111, column: 2, scope: !15295)
!15348 = distinct !DISubprogram(name: "append_internal", scope: !3, file: !3, line: 83, type: !15349, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!15349 = !DISubroutineType(types: !15350)
!15350 = !{!4450, !4454}
!15351 = !DILocation(line: 445, column: 72, scope: !4943, inlinedAt: !15352)
!15352 = distinct !DILocation(line: 552, column: 10, scope: !4948, inlinedAt: !15353)
!15353 = distinct !DILocation(line: 88, column: 12, scope: !15348)
!15354 = !DILocation(line: 446, column: 9, scope: !4943, inlinedAt: !15352)
!15355 = !DILocation(line: 446, column: 23, scope: !4943, inlinedAt: !15352)
!15356 = !DILocation(line: 448, column: 8, scope: !4943, inlinedAt: !15352)
!15357 = !DILocation(line: 318, column: 67, scope: !4959, inlinedAt: !15358)
!15358 = distinct !DILocation(line: 553, column: 20, scope: !4948, inlinedAt: !15353)
!15359 = !DILocation(line: 346, column: 58, scope: !4965, inlinedAt: !15360)
!15360 = distinct !DILocation(line: 547, column: 11, scope: !4948, inlinedAt: !15353)
!15361 = !DILocation(line: 472, column: 28, scope: !4971, inlinedAt: !15362)
!15362 = distinct !DILocation(line: 481, column: 9, scope: !4976, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 545, column: 11, scope: !4978, inlinedAt: !15353)
!15364 = !DILocation(line: 472, column: 40, scope: !4971, inlinedAt: !15362)
!15365 = !DILocation(line: 472, column: 60, scope: !4971, inlinedAt: !15362)
!15366 = !DILocation(line: 478, column: 51, scope: !4976, inlinedAt: !15363)
!15367 = !DILocation(line: 478, column: 63, scope: !4976, inlinedAt: !15363)
!15368 = !DILocation(line: 480, column: 15, scope: !4976, inlinedAt: !15363)
!15369 = !DILocation(line: 538, column: 45, scope: !4950, inlinedAt: !15353)
!15370 = !DILocation(line: 538, column: 57, scope: !4950, inlinedAt: !15353)
!15371 = !DILocation(line: 542, column: 16, scope: !4948, inlinedAt: !15353)
!15372 = !DILocalVariable(name: "internal", arg: 1, scope: !15348, file: !3, line: 83, type: !4454)
!15373 = !DILocation(line: 83, column: 69, scope: !15348)
!15374 = !DILocalVariable(name: "new_dev", scope: !15348, file: !3, line: 85, type: !4450)
!15375 = !DILocation(line: 85, column: 22, scope: !15348)
!15376 = !DILocalVariable(name: "temp_dev", scope: !15348, file: !3, line: 86, type: !4450)
!15377 = !DILocation(line: 86, column: 22, scope: !15348)
!15378 = !DILocation(line: 540, column: 27, scope: !4949, inlinedAt: !15353)
!15379 = !DILocation(line: 540, column: 6, scope: !4949, inlinedAt: !15353)
!15380 = !DILocation(line: 540, column: 6, scope: !4950, inlinedAt: !15353)
!15381 = !DILocation(line: 544, column: 7, scope: !4978, inlinedAt: !15353)
!15382 = !DILocation(line: 544, column: 12, scope: !4978, inlinedAt: !15353)
!15383 = !DILocation(line: 544, column: 7, scope: !4948, inlinedAt: !15353)
!15384 = !DILocation(line: 545, column: 25, scope: !4978, inlinedAt: !15353)
!15385 = !DILocation(line: 545, column: 31, scope: !4978, inlinedAt: !15353)
!15386 = !DILocation(line: 480, column: 33, scope: !4976, inlinedAt: !15363)
!15387 = !DILocation(line: 480, column: 23, scope: !4976, inlinedAt: !15363)
!15388 = !DILocation(line: 481, column: 29, scope: !4976, inlinedAt: !15363)
!15389 = !DILocation(line: 481, column: 35, scope: !4976, inlinedAt: !15363)
!15390 = !DILocation(line: 481, column: 42, scope: !4976, inlinedAt: !15363)
!15391 = !DILocation(line: 474, column: 23, scope: !4971, inlinedAt: !15362)
!15392 = !DILocation(line: 474, column: 29, scope: !4971, inlinedAt: !15362)
!15393 = !DILocation(line: 474, column: 36, scope: !4971, inlinedAt: !15362)
!15394 = !DILocation(line: 474, column: 9, scope: !4971, inlinedAt: !15362)
!15395 = !DILocation(line: 545, column: 4, scope: !4978, inlinedAt: !15353)
!15396 = !DILocation(line: 547, column: 25, scope: !4948, inlinedAt: !15353)
!15397 = !DILocation(line: 348, column: 7, scope: !5022, inlinedAt: !15360)
!15398 = !DILocation(line: 348, column: 6, scope: !4965, inlinedAt: !15360)
!15399 = !DILocation(line: 349, column: 3, scope: !5022, inlinedAt: !15360)
!15400 = !DILocation(line: 351, column: 6, scope: !5026, inlinedAt: !15360)
!15401 = !DILocation(line: 351, column: 11, scope: !5026, inlinedAt: !15360)
!15402 = !DILocation(line: 351, column: 6, scope: !4965, inlinedAt: !15360)
!15403 = !DILocation(line: 352, column: 3, scope: !5026, inlinedAt: !15360)
!15404 = !DILocation(line: 354, column: 32, scope: !5031, inlinedAt: !15360)
!15405 = !DILocation(line: 354, column: 37, scope: !5031, inlinedAt: !15360)
!15406 = !DILocation(line: 354, column: 42, scope: !5031, inlinedAt: !15360)
!15407 = !DILocation(line: 354, column: 45, scope: !5031, inlinedAt: !15360)
!15408 = !DILocation(line: 354, column: 50, scope: !5031, inlinedAt: !15360)
!15409 = !DILocation(line: 354, column: 6, scope: !4965, inlinedAt: !15360)
!15410 = !DILocation(line: 355, column: 3, scope: !5031, inlinedAt: !15360)
!15411 = !DILocation(line: 356, column: 32, scope: !5039, inlinedAt: !15360)
!15412 = !DILocation(line: 356, column: 37, scope: !5039, inlinedAt: !15360)
!15413 = !DILocation(line: 356, column: 43, scope: !5039, inlinedAt: !15360)
!15414 = !DILocation(line: 356, column: 46, scope: !5039, inlinedAt: !15360)
!15415 = !DILocation(line: 356, column: 51, scope: !5039, inlinedAt: !15360)
!15416 = !DILocation(line: 356, column: 6, scope: !4965, inlinedAt: !15360)
!15417 = !DILocation(line: 357, column: 3, scope: !5039, inlinedAt: !15360)
!15418 = !DILocation(line: 358, column: 6, scope: !5047, inlinedAt: !15360)
!15419 = !DILocation(line: 358, column: 11, scope: !5047, inlinedAt: !15360)
!15420 = !DILocation(line: 358, column: 6, scope: !4965, inlinedAt: !15360)
!15421 = !DILocation(line: 358, column: 26, scope: !5047, inlinedAt: !15360)
!15422 = !DILocation(line: 359, column: 6, scope: !5052, inlinedAt: !15360)
!15423 = !DILocation(line: 359, column: 11, scope: !5052, inlinedAt: !15360)
!15424 = !DILocation(line: 359, column: 6, scope: !4965, inlinedAt: !15360)
!15425 = !DILocation(line: 359, column: 26, scope: !5052, inlinedAt: !15360)
!15426 = !DILocation(line: 360, column: 6, scope: !5057, inlinedAt: !15360)
!15427 = !DILocation(line: 360, column: 11, scope: !5057, inlinedAt: !15360)
!15428 = !DILocation(line: 360, column: 6, scope: !4965, inlinedAt: !15360)
!15429 = !DILocation(line: 360, column: 26, scope: !5057, inlinedAt: !15360)
!15430 = !DILocation(line: 361, column: 6, scope: !5062, inlinedAt: !15360)
!15431 = !DILocation(line: 361, column: 11, scope: !5062, inlinedAt: !15360)
!15432 = !DILocation(line: 361, column: 6, scope: !4965, inlinedAt: !15360)
!15433 = !DILocation(line: 361, column: 26, scope: !5062, inlinedAt: !15360)
!15434 = !DILocation(line: 362, column: 6, scope: !5067, inlinedAt: !15360)
!15435 = !DILocation(line: 362, column: 11, scope: !5067, inlinedAt: !15360)
!15436 = !DILocation(line: 362, column: 6, scope: !4965, inlinedAt: !15360)
!15437 = !DILocation(line: 362, column: 26, scope: !5067, inlinedAt: !15360)
!15438 = !DILocation(line: 363, column: 6, scope: !5072, inlinedAt: !15360)
!15439 = !DILocation(line: 363, column: 11, scope: !5072, inlinedAt: !15360)
!15440 = !DILocation(line: 363, column: 6, scope: !4965, inlinedAt: !15360)
!15441 = !DILocation(line: 363, column: 26, scope: !5072, inlinedAt: !15360)
!15442 = !DILocation(line: 364, column: 6, scope: !5077, inlinedAt: !15360)
!15443 = !DILocation(line: 364, column: 11, scope: !5077, inlinedAt: !15360)
!15444 = !DILocation(line: 364, column: 6, scope: !4965, inlinedAt: !15360)
!15445 = !DILocation(line: 364, column: 26, scope: !5077, inlinedAt: !15360)
!15446 = !DILocation(line: 365, column: 6, scope: !5082, inlinedAt: !15360)
!15447 = !DILocation(line: 365, column: 11, scope: !5082, inlinedAt: !15360)
!15448 = !DILocation(line: 365, column: 6, scope: !4965, inlinedAt: !15360)
!15449 = !DILocation(line: 365, column: 26, scope: !5082, inlinedAt: !15360)
!15450 = !DILocation(line: 366, column: 6, scope: !5087, inlinedAt: !15360)
!15451 = !DILocation(line: 366, column: 11, scope: !5087, inlinedAt: !15360)
!15452 = !DILocation(line: 366, column: 6, scope: !4965, inlinedAt: !15360)
!15453 = !DILocation(line: 366, column: 26, scope: !5087, inlinedAt: !15360)
!15454 = !DILocation(line: 367, column: 6, scope: !5092, inlinedAt: !15360)
!15455 = !DILocation(line: 367, column: 11, scope: !5092, inlinedAt: !15360)
!15456 = !DILocation(line: 367, column: 6, scope: !4965, inlinedAt: !15360)
!15457 = !DILocation(line: 367, column: 26, scope: !5092, inlinedAt: !15360)
!15458 = !DILocation(line: 368, column: 6, scope: !5097, inlinedAt: !15360)
!15459 = !DILocation(line: 368, column: 11, scope: !5097, inlinedAt: !15360)
!15460 = !DILocation(line: 368, column: 6, scope: !4965, inlinedAt: !15360)
!15461 = !DILocation(line: 368, column: 26, scope: !5097, inlinedAt: !15360)
!15462 = !DILocation(line: 369, column: 6, scope: !5102, inlinedAt: !15360)
!15463 = !DILocation(line: 369, column: 11, scope: !5102, inlinedAt: !15360)
!15464 = !DILocation(line: 369, column: 6, scope: !4965, inlinedAt: !15360)
!15465 = !DILocation(line: 369, column: 26, scope: !5102, inlinedAt: !15360)
!15466 = !DILocation(line: 370, column: 6, scope: !5107, inlinedAt: !15360)
!15467 = !DILocation(line: 370, column: 11, scope: !5107, inlinedAt: !15360)
!15468 = !DILocation(line: 370, column: 6, scope: !4965, inlinedAt: !15360)
!15469 = !DILocation(line: 370, column: 26, scope: !5107, inlinedAt: !15360)
!15470 = !DILocation(line: 371, column: 6, scope: !5112, inlinedAt: !15360)
!15471 = !DILocation(line: 371, column: 11, scope: !5112, inlinedAt: !15360)
!15472 = !DILocation(line: 371, column: 6, scope: !4965, inlinedAt: !15360)
!15473 = !DILocation(line: 371, column: 26, scope: !5112, inlinedAt: !15360)
!15474 = !DILocation(line: 372, column: 6, scope: !5117, inlinedAt: !15360)
!15475 = !DILocation(line: 372, column: 11, scope: !5117, inlinedAt: !15360)
!15476 = !DILocation(line: 372, column: 6, scope: !4965, inlinedAt: !15360)
!15477 = !DILocation(line: 372, column: 26, scope: !5117, inlinedAt: !15360)
!15478 = !DILocation(line: 373, column: 6, scope: !5122, inlinedAt: !15360)
!15479 = !DILocation(line: 373, column: 11, scope: !5122, inlinedAt: !15360)
!15480 = !DILocation(line: 373, column: 6, scope: !4965, inlinedAt: !15360)
!15481 = !DILocation(line: 373, column: 26, scope: !5122, inlinedAt: !15360)
!15482 = !DILocation(line: 374, column: 6, scope: !5127, inlinedAt: !15360)
!15483 = !DILocation(line: 374, column: 11, scope: !5127, inlinedAt: !15360)
!15484 = !DILocation(line: 374, column: 6, scope: !4965, inlinedAt: !15360)
!15485 = !DILocation(line: 374, column: 26, scope: !5127, inlinedAt: !15360)
!15486 = !DILocation(line: 375, column: 6, scope: !5132, inlinedAt: !15360)
!15487 = !DILocation(line: 375, column: 11, scope: !5132, inlinedAt: !15360)
!15488 = !DILocation(line: 375, column: 6, scope: !4965, inlinedAt: !15360)
!15489 = !DILocation(line: 375, column: 27, scope: !5132, inlinedAt: !15360)
!15490 = !DILocation(line: 376, column: 6, scope: !5137, inlinedAt: !15360)
!15491 = !DILocation(line: 376, column: 11, scope: !5137, inlinedAt: !15360)
!15492 = !DILocation(line: 376, column: 6, scope: !4965, inlinedAt: !15360)
!15493 = !DILocation(line: 376, column: 32, scope: !5137, inlinedAt: !15360)
!15494 = !DILocation(line: 377, column: 6, scope: !5142, inlinedAt: !15360)
!15495 = !DILocation(line: 377, column: 11, scope: !5142, inlinedAt: !15360)
!15496 = !DILocation(line: 377, column: 6, scope: !4965, inlinedAt: !15360)
!15497 = !DILocation(line: 377, column: 32, scope: !5142, inlinedAt: !15360)
!15498 = !DILocation(line: 378, column: 6, scope: !5147, inlinedAt: !15360)
!15499 = !DILocation(line: 378, column: 11, scope: !5147, inlinedAt: !15360)
!15500 = !DILocation(line: 378, column: 6, scope: !4965, inlinedAt: !15360)
!15501 = !DILocation(line: 378, column: 32, scope: !5147, inlinedAt: !15360)
!15502 = !DILocation(line: 379, column: 6, scope: !5152, inlinedAt: !15360)
!15503 = !DILocation(line: 379, column: 11, scope: !5152, inlinedAt: !15360)
!15504 = !DILocation(line: 379, column: 6, scope: !4965, inlinedAt: !15360)
!15505 = !DILocation(line: 379, column: 33, scope: !5152, inlinedAt: !15360)
!15506 = !DILocation(line: 380, column: 6, scope: !5157, inlinedAt: !15360)
!15507 = !DILocation(line: 380, column: 11, scope: !5157, inlinedAt: !15360)
!15508 = !DILocation(line: 380, column: 6, scope: !4965, inlinedAt: !15360)
!15509 = !DILocation(line: 380, column: 33, scope: !5157, inlinedAt: !15360)
!15510 = !DILocation(line: 381, column: 6, scope: !5162, inlinedAt: !15360)
!15511 = !DILocation(line: 381, column: 11, scope: !5162, inlinedAt: !15360)
!15512 = !DILocation(line: 381, column: 6, scope: !4965, inlinedAt: !15360)
!15513 = !DILocation(line: 381, column: 33, scope: !5162, inlinedAt: !15360)
!15514 = !DILocation(line: 382, column: 2, scope: !5167, inlinedAt: !15360)
!15515 = !DILocation(line: 382, column: 2, scope: !5171, inlinedAt: !15360)
!15516 = !DILocation(line: 382, column: 2, scope: !5172, inlinedAt: !15360)
!15517 = !DILocation(line: 386, column: 1, scope: !4965, inlinedAt: !15360)
!15518 = !DILocation(line: 547, column: 9, scope: !4948, inlinedAt: !15353)
!15519 = !DILocation(line: 549, column: 8, scope: !5178, inlinedAt: !15353)
!15520 = !DILocation(line: 549, column: 7, scope: !4948, inlinedAt: !15353)
!15521 = !DILocation(line: 550, column: 4, scope: !5178, inlinedAt: !15353)
!15522 = !DILocation(line: 553, column: 33, scope: !4948, inlinedAt: !15353)
!15523 = !DILocation(line: 325, column: 6, scope: !5183, inlinedAt: !15358)
!15524 = !DILocation(line: 325, column: 6, scope: !4959, inlinedAt: !15358)
!15525 = !DILocation(line: 326, column: 3, scope: !5183, inlinedAt: !15358)
!15526 = !DILocation(line: 332, column: 9, scope: !4959, inlinedAt: !15358)
!15527 = !DILocation(line: 332, column: 15, scope: !4959, inlinedAt: !15358)
!15528 = !DILocation(line: 332, column: 2, scope: !4959, inlinedAt: !15358)
!15529 = !DILocation(line: 336, column: 1, scope: !4959, inlinedAt: !15358)
!15530 = !DILocation(line: 553, column: 5, scope: !4948, inlinedAt: !15353)
!15531 = !DILocation(line: 553, column: 41, scope: !4948, inlinedAt: !15353)
!15532 = !DILocation(line: 554, column: 5, scope: !4948, inlinedAt: !15353)
!15533 = !DILocation(line: 554, column: 12, scope: !4948, inlinedAt: !15353)
!15534 = !DILocation(line: 448, column: 31, scope: !4943, inlinedAt: !15352)
!15535 = !DILocation(line: 448, column: 34, scope: !4943, inlinedAt: !15352)
!15536 = !DILocation(line: 448, column: 14, scope: !4943, inlinedAt: !15352)
!15537 = !DILocation(line: 450, column: 22, scope: !4943, inlinedAt: !15352)
!15538 = !DILocation(line: 450, column: 25, scope: !4943, inlinedAt: !15352)
!15539 = !DILocation(line: 450, column: 30, scope: !4943, inlinedAt: !15352)
!15540 = !DILocation(line: 450, column: 36, scope: !4943, inlinedAt: !15352)
!15541 = !DILocation(line: 450, column: 8, scope: !4943, inlinedAt: !15352)
!15542 = !DILocation(line: 450, column: 6, scope: !4943, inlinedAt: !15352)
!15543 = !DILocation(line: 451, column: 9, scope: !4943, inlinedAt: !15352)
!15544 = !DILocation(line: 552, column: 3, scope: !4948, inlinedAt: !15353)
!15545 = !DILocation(line: 557, column: 19, scope: !4950, inlinedAt: !15353)
!15546 = !DILocation(line: 557, column: 25, scope: !4950, inlinedAt: !15353)
!15547 = !DILocation(line: 557, column: 9, scope: !4950, inlinedAt: !15353)
!15548 = !DILocation(line: 557, column: 2, scope: !4950, inlinedAt: !15353)
!15549 = !DILocation(line: 558, column: 1, scope: !4950, inlinedAt: !15353)
!15550 = !DILocation(line: 88, column: 12, scope: !15348)
!15551 = !DILocation(line: 88, column: 10, scope: !15348)
!15552 = !DILocation(line: 89, column: 6, scope: !15553)
!15553 = distinct !DILexicalBlock(scope: !15348, file: !3, line: 89, column: 6)
!15554 = !DILocation(line: 89, column: 14, scope: !15553)
!15555 = !DILocation(line: 89, column: 6, scope: !15348)
!15556 = !DILocation(line: 90, column: 23, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15553, file: !3, line: 89, column: 23)
!15558 = !DILocation(line: 90, column: 3, scope: !15557)
!15559 = !DILocation(line: 90, column: 12, scope: !15557)
!15560 = !DILocation(line: 90, column: 21, scope: !15557)
!15561 = !DILocation(line: 91, column: 3, scope: !15557)
!15562 = !DILocation(line: 91, column: 12, scope: !15557)
!15563 = !DILocation(line: 91, column: 21, scope: !15557)
!15564 = !DILocation(line: 94, column: 7, scope: !15565)
!15565 = distinct !DILexicalBlock(scope: !15557, file: !3, line: 94, column: 7)
!15566 = !DILocation(line: 94, column: 25, scope: !15565)
!15567 = !DILocation(line: 94, column: 7, scope: !15557)
!15568 = !DILocation(line: 95, column: 24, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 94, column: 34)
!15570 = !DILocation(line: 95, column: 22, scope: !15569)
!15571 = !DILocation(line: 96, column: 3, scope: !15569)
!15572 = !DILocation(line: 97, column: 15, scope: !15573)
!15573 = distinct !DILexicalBlock(scope: !15565, file: !3, line: 96, column: 10)
!15574 = !DILocation(line: 97, column: 13, scope: !15573)
!15575 = !DILocation(line: 98, column: 4, scope: !15573)
!15576 = !DILocation(line: 98, column: 11, scope: !15573)
!15577 = !DILocation(line: 98, column: 21, scope: !15573)
!15578 = !DILocation(line: 98, column: 30, scope: !15573)
!15579 = !DILocation(line: 99, column: 16, scope: !15573)
!15580 = !DILocation(line: 99, column: 26, scope: !15573)
!15581 = !DILocation(line: 99, column: 14, scope: !15573)
!15582 = distinct !{!15582, !15575, !15580}
!15583 = !DILocation(line: 101, column: 25, scope: !15573)
!15584 = !DILocation(line: 101, column: 4, scope: !15573)
!15585 = !DILocation(line: 101, column: 14, scope: !15573)
!15586 = !DILocation(line: 101, column: 23, scope: !15573)
!15587 = !DILocation(line: 103, column: 2, scope: !15557)
!15588 = !DILocation(line: 105, column: 9, scope: !15348)
!15589 = !DILocation(line: 105, column: 2, scope: !15348)
!15590 = distinct !DISubprogram(name: "stv090x_setup", scope: !3, file: !3, line: 4764, type: !4275, scopeLine: 4765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!15591 = !DILocalVariable(name: "fe", arg: 1, scope: !15590, file: !3, line: 4764, type: !588)
!15592 = !DILocation(line: 4764, column: 47, scope: !15590)
!15593 = !DILocalVariable(name: "state", scope: !15590, file: !3, line: 4766, type: !4654)
!15594 = !DILocation(line: 4766, column: 24, scope: !15590)
!15595 = !DILocation(line: 4766, column: 32, scope: !15590)
!15596 = !DILocation(line: 4766, column: 36, scope: !15590)
!15597 = !DILocalVariable(name: "config", scope: !15590, file: !3, line: 4767, type: !5717)
!15598 = !DILocation(line: 4767, column: 31, scope: !15590)
!15599 = !DILocation(line: 4767, column: 40, scope: !15590)
!15600 = !DILocation(line: 4767, column: 47, scope: !15590)
!15601 = !DILocalVariable(name: "stv090x_initval", scope: !15590, file: !3, line: 4768, type: !15602)
!15602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15603, size: 64)
!15603 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4744)
!15604 = !DILocation(line: 4768, column: 28, scope: !15590)
!15605 = !DILocalVariable(name: "stv090x_cut20_val", scope: !15590, file: !3, line: 4769, type: !15602)
!15606 = !DILocation(line: 4769, column: 28, scope: !15590)
!15607 = !DILocalVariable(name: "t1_size", scope: !15590, file: !3, line: 4770, type: !731)
!15608 = !DILocation(line: 4770, column: 16, scope: !15590)
!15609 = !DILocalVariable(name: "t2_size", scope: !15590, file: !3, line: 4770, type: !731)
!15610 = !DILocation(line: 4770, column: 29, scope: !15590)
!15611 = !DILocalVariable(name: "reg", scope: !15590, file: !3, line: 4771, type: !571)
!15612 = !DILocation(line: 4771, column: 6, scope: !15590)
!15613 = !DILocalVariable(name: "i", scope: !15590, file: !3, line: 4773, type: !439)
!15614 = !DILocation(line: 4773, column: 6, scope: !15590)
!15615 = !DILocation(line: 4775, column: 6, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4775, column: 6)
!15617 = !DILocation(line: 4775, column: 13, scope: !15616)
!15618 = !DILocation(line: 4775, column: 20, scope: !15616)
!15619 = !DILocation(line: 4775, column: 6, scope: !15590)
!15620 = !DILocation(line: 4776, column: 3, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 4775, column: 32)
!15622 = !DILocation(line: 4776, column: 3, scope: !15623)
!15623 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 4776, column: 3)
!15624 = distinct !DILexicalBlock(scope: !15625, file: !3, line: 4776, column: 3)
!15625 = distinct !DILexicalBlock(scope: !15626, file: !3, line: 4776, column: 3)
!15626 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 4776, column: 3)
!15627 = !DILocation(line: 4776, column: 3, scope: !15624)
!15628 = !DILocation(line: 4776, column: 3, scope: !15629)
!15629 = distinct !DILexicalBlock(scope: !15623, file: !3, line: 4776, column: 3)
!15630 = !DILocation(line: 4776, column: 3, scope: !15631)
!15631 = distinct !DILexicalBlock(scope: !15629, file: !3, line: 4776, column: 3)
!15632 = !DILocation(line: 4776, column: 3, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15631, file: !3, line: 4776, column: 3)
!15634 = !DILocation(line: 4776, column: 3, scope: !15626)
!15635 = !DILocation(line: 4777, column: 19, scope: !15621)
!15636 = !DILocation(line: 4778, column: 11, scope: !15621)
!15637 = !DILocation(line: 4779, column: 21, scope: !15621)
!15638 = !DILocation(line: 4780, column: 11, scope: !15621)
!15639 = !DILocation(line: 4781, column: 2, scope: !15621)
!15640 = !DILocation(line: 4781, column: 13, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 4781, column: 13)
!15642 = !DILocation(line: 4781, column: 20, scope: !15641)
!15643 = !DILocation(line: 4781, column: 27, scope: !15641)
!15644 = !DILocation(line: 4781, column: 13, scope: !15616)
!15645 = !DILocation(line: 4782, column: 3, scope: !15646)
!15646 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 4781, column: 39)
!15647 = !DILocation(line: 4782, column: 3, scope: !15648)
!15648 = distinct !DILexicalBlock(scope: !15649, file: !3, line: 4782, column: 3)
!15649 = distinct !DILexicalBlock(scope: !15650, file: !3, line: 4782, column: 3)
!15650 = distinct !DILexicalBlock(scope: !15651, file: !3, line: 4782, column: 3)
!15651 = distinct !DILexicalBlock(scope: !15646, file: !3, line: 4782, column: 3)
!15652 = !DILocation(line: 4782, column: 3, scope: !15649)
!15653 = !DILocation(line: 4782, column: 3, scope: !15654)
!15654 = distinct !DILexicalBlock(scope: !15648, file: !3, line: 4782, column: 3)
!15655 = !DILocation(line: 4782, column: 3, scope: !15656)
!15656 = distinct !DILexicalBlock(scope: !15654, file: !3, line: 4782, column: 3)
!15657 = !DILocation(line: 4782, column: 3, scope: !15658)
!15658 = distinct !DILexicalBlock(scope: !15656, file: !3, line: 4782, column: 3)
!15659 = !DILocation(line: 4782, column: 3, scope: !15651)
!15660 = !DILocation(line: 4783, column: 19, scope: !15646)
!15661 = !DILocation(line: 4784, column: 11, scope: !15646)
!15662 = !DILocation(line: 4785, column: 21, scope: !15646)
!15663 = !DILocation(line: 4786, column: 11, scope: !15646)
!15664 = !DILocation(line: 4787, column: 2, scope: !15646)
!15665 = !DILocation(line: 4792, column: 24, scope: !15666)
!15666 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4792, column: 6)
!15667 = !DILocation(line: 4792, column: 6, scope: !15666)
!15668 = !DILocation(line: 4792, column: 59, scope: !15666)
!15669 = !DILocation(line: 4792, column: 6, scope: !15590)
!15670 = !DILocation(line: 4793, column: 3, scope: !15666)
!15671 = !DILocation(line: 4794, column: 6, scope: !15672)
!15672 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4794, column: 6)
!15673 = !DILocation(line: 4794, column: 13, scope: !15672)
!15674 = !DILocation(line: 4794, column: 20, scope: !15672)
!15675 = !DILocation(line: 4794, column: 6, scope: !15590)
!15676 = !DILocation(line: 4795, column: 25, scope: !15677)
!15677 = distinct !DILexicalBlock(scope: !15672, file: !3, line: 4795, column: 7)
!15678 = !DILocation(line: 4795, column: 7, scope: !15677)
!15679 = !DILocation(line: 4795, column: 60, scope: !15677)
!15680 = !DILocation(line: 4795, column: 7, scope: !15672)
!15681 = !DILocation(line: 4796, column: 4, scope: !15677)
!15682 = !DILocation(line: 4795, column: 62, scope: !15677)
!15683 = !DILocation(line: 4798, column: 2, scope: !15590)
!15684 = !DILocation(line: 4801, column: 24, scope: !15685)
!15685 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4801, column: 6)
!15686 = !DILocation(line: 4801, column: 6, scope: !15685)
!15687 = !DILocation(line: 4801, column: 56, scope: !15685)
!15688 = !DILocation(line: 4801, column: 6, scope: !15590)
!15689 = !DILocation(line: 4802, column: 3, scope: !15685)
!15690 = !DILocation(line: 4803, column: 6, scope: !15691)
!15691 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4803, column: 6)
!15692 = !DILocation(line: 4803, column: 13, scope: !15691)
!15693 = !DILocation(line: 4803, column: 20, scope: !15691)
!15694 = !DILocation(line: 4803, column: 6, scope: !15590)
!15695 = !DILocation(line: 4804, column: 25, scope: !15696)
!15696 = distinct !DILexicalBlock(scope: !15691, file: !3, line: 4804, column: 7)
!15697 = !DILocation(line: 4804, column: 7, scope: !15696)
!15698 = !DILocation(line: 4804, column: 57, scope: !15696)
!15699 = !DILocation(line: 4804, column: 7, scope: !15691)
!15700 = !DILocation(line: 4805, column: 4, scope: !15696)
!15701 = !DILocation(line: 4804, column: 59, scope: !15696)
!15702 = !DILocation(line: 4808, column: 2, scope: !15590)
!15703 = !DILocation(line: 4809, column: 24, scope: !15704)
!15704 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4809, column: 6)
!15705 = !DILocation(line: 4809, column: 50, scope: !15704)
!15706 = !DILocation(line: 4809, column: 6, scope: !15704)
!15707 = !DILocation(line: 4809, column: 55, scope: !15704)
!15708 = !DILocation(line: 4809, column: 6, scope: !15590)
!15709 = !DILocation(line: 4810, column: 3, scope: !15704)
!15710 = !DILocation(line: 4811, column: 6, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4811, column: 6)
!15712 = !DILocation(line: 4811, column: 13, scope: !15711)
!15713 = !DILocation(line: 4811, column: 20, scope: !15711)
!15714 = !DILocation(line: 4811, column: 6, scope: !15590)
!15715 = !DILocation(line: 4812, column: 25, scope: !15716)
!15716 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 4812, column: 7)
!15717 = !DILocation(line: 4812, column: 51, scope: !15716)
!15718 = !DILocation(line: 4812, column: 7, scope: !15716)
!15719 = !DILocation(line: 4812, column: 56, scope: !15716)
!15720 = !DILocation(line: 4812, column: 7, scope: !15711)
!15721 = !DILocation(line: 4813, column: 4, scope: !15716)
!15722 = !DILocation(line: 4812, column: 58, scope: !15716)
!15723 = !DILocation(line: 4815, column: 24, scope: !15724)
!15724 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4815, column: 6)
!15725 = !DILocation(line: 4815, column: 6, scope: !15724)
!15726 = !DILocation(line: 4815, column: 54, scope: !15724)
!15727 = !DILocation(line: 4815, column: 6, scope: !15590)
!15728 = !DILocation(line: 4816, column: 3, scope: !15724)
!15729 = !DILocation(line: 4817, column: 2, scope: !15590)
!15730 = !DILocation(line: 4818, column: 24, scope: !15731)
!15731 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4818, column: 6)
!15732 = !DILocation(line: 4818, column: 6, scope: !15731)
!15733 = !DILocation(line: 4818, column: 53, scope: !15731)
!15734 = !DILocation(line: 4818, column: 6, scope: !15590)
!15735 = !DILocation(line: 4819, column: 3, scope: !15731)
!15736 = !DILocation(line: 4820, column: 24, scope: !15737)
!15737 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4820, column: 6)
!15738 = !DILocation(line: 4820, column: 56, scope: !15737)
!15739 = !DILocation(line: 4820, column: 64, scope: !15737)
!15740 = !DILocation(line: 4820, column: 54, scope: !15737)
!15741 = !DILocation(line: 4820, column: 49, scope: !15737)
!15742 = !DILocation(line: 4820, column: 6, scope: !15737)
!15743 = !DILocation(line: 4820, column: 74, scope: !15737)
!15744 = !DILocation(line: 4820, column: 6, scope: !15590)
!15745 = !DILocation(line: 4821, column: 3, scope: !15737)
!15746 = !DILocation(line: 4822, column: 2, scope: !15590)
!15747 = !DILocation(line: 4825, column: 2, scope: !15590)
!15748 = !DILocation(line: 4825, column: 2, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15750, file: !3, line: 4825, column: 2)
!15750 = distinct !DILexicalBlock(scope: !15751, file: !3, line: 4825, column: 2)
!15751 = distinct !DILexicalBlock(scope: !15752, file: !3, line: 4825, column: 2)
!15752 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4825, column: 2)
!15753 = !DILocation(line: 4825, column: 2, scope: !15750)
!15754 = !DILocation(line: 4825, column: 2, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15749, file: !3, line: 4825, column: 2)
!15756 = !DILocation(line: 4825, column: 2, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15755, file: !3, line: 4825, column: 2)
!15758 = !DILocation(line: 4825, column: 2, scope: !15759)
!15759 = distinct !DILexicalBlock(scope: !15757, file: !3, line: 4825, column: 2)
!15760 = !DILocation(line: 4825, column: 2, scope: !15752)
!15761 = !DILocation(line: 4826, column: 9, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4826, column: 2)
!15763 = !DILocation(line: 4826, column: 7, scope: !15762)
!15764 = !DILocation(line: 4826, column: 14, scope: !15765)
!15765 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 4826, column: 2)
!15766 = !DILocation(line: 4826, column: 18, scope: !15765)
!15767 = !DILocation(line: 4826, column: 16, scope: !15765)
!15768 = !DILocation(line: 4826, column: 2, scope: !15762)
!15769 = !DILocation(line: 4827, column: 25, scope: !15770)
!15770 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 4827, column: 7)
!15771 = distinct !DILexicalBlock(scope: !15765, file: !3, line: 4826, column: 32)
!15772 = !DILocation(line: 4827, column: 32, scope: !15770)
!15773 = !DILocation(line: 4827, column: 48, scope: !15770)
!15774 = !DILocation(line: 4827, column: 51, scope: !15770)
!15775 = !DILocation(line: 4827, column: 57, scope: !15770)
!15776 = !DILocation(line: 4827, column: 73, scope: !15770)
!15777 = !DILocation(line: 4827, column: 76, scope: !15770)
!15778 = !DILocation(line: 4827, column: 7, scope: !15770)
!15779 = !DILocation(line: 4827, column: 82, scope: !15770)
!15780 = !DILocation(line: 4827, column: 7, scope: !15771)
!15781 = !DILocation(line: 4828, column: 4, scope: !15770)
!15782 = !DILocation(line: 4829, column: 2, scope: !15771)
!15783 = !DILocation(line: 4826, column: 28, scope: !15765)
!15784 = !DILocation(line: 4826, column: 2, scope: !15765)
!15785 = distinct !{!15785, !15768, !15786}
!15786 = !DILocation(line: 4829, column: 2, scope: !15762)
!15787 = !DILocation(line: 4831, column: 46, scope: !15590)
!15788 = !DILocation(line: 4831, column: 29, scope: !15590)
!15789 = !DILocation(line: 4831, column: 2, scope: !15590)
!15790 = !DILocation(line: 4831, column: 9, scope: !15590)
!15791 = !DILocation(line: 4831, column: 19, scope: !15590)
!15792 = !DILocation(line: 4831, column: 27, scope: !15590)
!15793 = !DILocation(line: 4832, column: 6, scope: !15794)
!15794 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4832, column: 6)
!15795 = !DILocation(line: 4832, column: 13, scope: !15794)
!15796 = !DILocation(line: 4832, column: 23, scope: !15794)
!15797 = !DILocation(line: 4832, column: 31, scope: !15794)
!15798 = !DILocation(line: 4832, column: 6, scope: !15590)
!15799 = !DILocation(line: 4833, column: 25, scope: !15800)
!15800 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 4833, column: 7)
!15801 = distinct !DILexicalBlock(scope: !15794, file: !3, line: 4832, column: 40)
!15802 = !DILocation(line: 4833, column: 7, scope: !15800)
!15803 = !DILocation(line: 4833, column: 57, scope: !15800)
!15804 = !DILocation(line: 4833, column: 7, scope: !15801)
!15805 = !DILocation(line: 4834, column: 4, scope: !15800)
!15806 = !DILocation(line: 4837, column: 3, scope: !15801)
!15807 = !DILocation(line: 4837, column: 3, scope: !15808)
!15808 = distinct !DILexicalBlock(scope: !15809, file: !3, line: 4837, column: 3)
!15809 = distinct !DILexicalBlock(scope: !15810, file: !3, line: 4837, column: 3)
!15810 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 4837, column: 3)
!15811 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 4837, column: 3)
!15812 = !DILocation(line: 4837, column: 3, scope: !15809)
!15813 = !DILocation(line: 4837, column: 3, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15808, file: !3, line: 4837, column: 3)
!15815 = !DILocation(line: 4837, column: 3, scope: !15816)
!15816 = distinct !DILexicalBlock(scope: !15814, file: !3, line: 4837, column: 3)
!15817 = !DILocation(line: 4837, column: 3, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15816, file: !3, line: 4837, column: 3)
!15819 = !DILocation(line: 4837, column: 3, scope: !15811)
!15820 = !DILocation(line: 4838, column: 10, scope: !15821)
!15821 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 4838, column: 3)
!15822 = !DILocation(line: 4838, column: 8, scope: !15821)
!15823 = !DILocation(line: 4838, column: 15, scope: !15824)
!15824 = distinct !DILexicalBlock(scope: !15821, file: !3, line: 4838, column: 3)
!15825 = !DILocation(line: 4838, column: 19, scope: !15824)
!15826 = !DILocation(line: 4838, column: 17, scope: !15824)
!15827 = !DILocation(line: 4838, column: 3, scope: !15821)
!15828 = !DILocation(line: 4839, column: 26, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15830, file: !3, line: 4839, column: 8)
!15830 = distinct !DILexicalBlock(scope: !15824, file: !3, line: 4838, column: 33)
!15831 = !DILocation(line: 4839, column: 33, scope: !15829)
!15832 = !DILocation(line: 4839, column: 51, scope: !15829)
!15833 = !DILocation(line: 4839, column: 54, scope: !15829)
!15834 = !DILocation(line: 4839, column: 60, scope: !15829)
!15835 = !DILocation(line: 4839, column: 78, scope: !15829)
!15836 = !DILocation(line: 4839, column: 81, scope: !15829)
!15837 = !DILocation(line: 4839, column: 8, scope: !15829)
!15838 = !DILocation(line: 4839, column: 87, scope: !15829)
!15839 = !DILocation(line: 4839, column: 8, scope: !15830)
!15840 = !DILocation(line: 4840, column: 5, scope: !15829)
!15841 = !DILocation(line: 4841, column: 3, scope: !15830)
!15842 = !DILocation(line: 4838, column: 29, scope: !15824)
!15843 = !DILocation(line: 4838, column: 3, scope: !15824)
!15844 = distinct !{!15844, !15827, !15845}
!15845 = !DILocation(line: 4841, column: 3, scope: !15821)
!15846 = !DILocation(line: 4843, column: 2, scope: !15801)
!15847 = !DILocation(line: 4843, column: 13, scope: !15848)
!15848 = distinct !DILexicalBlock(scope: !15794, file: !3, line: 4843, column: 13)
!15849 = !DILocation(line: 4843, column: 20, scope: !15848)
!15850 = !DILocation(line: 4843, column: 30, scope: !15848)
!15851 = !DILocation(line: 4843, column: 38, scope: !15848)
!15852 = !DILocation(line: 4843, column: 13, scope: !15794)
!15853 = !DILocation(line: 4844, column: 3, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15848, file: !3, line: 4843, column: 46)
!15855 = !DILocation(line: 4844, column: 3, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15857, file: !3, line: 4844, column: 3)
!15857 = distinct !DILexicalBlock(scope: !15858, file: !3, line: 4844, column: 3)
!15858 = distinct !DILexicalBlock(scope: !15859, file: !3, line: 4844, column: 3)
!15859 = distinct !DILexicalBlock(scope: !15854, file: !3, line: 4844, column: 3)
!15860 = !DILocation(line: 4844, column: 3, scope: !15857)
!15861 = !DILocation(line: 4844, column: 3, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15856, file: !3, line: 4844, column: 3)
!15863 = !DILocation(line: 4844, column: 3, scope: !15864)
!15864 = distinct !DILexicalBlock(scope: !15862, file: !3, line: 4844, column: 3)
!15865 = !DILocation(line: 4844, column: 3, scope: !15866)
!15866 = distinct !DILexicalBlock(scope: !15864, file: !3, line: 4844, column: 3)
!15867 = !DILocation(line: 4844, column: 3, scope: !15859)
!15868 = !DILocation(line: 4847, column: 3, scope: !15854)
!15869 = !DILocation(line: 4848, column: 13, scope: !15870)
!15870 = distinct !DILexicalBlock(scope: !15848, file: !3, line: 4848, column: 13)
!15871 = !DILocation(line: 4848, column: 20, scope: !15870)
!15872 = !DILocation(line: 4848, column: 30, scope: !15870)
!15873 = !DILocation(line: 4848, column: 38, scope: !15870)
!15874 = !DILocation(line: 4848, column: 13, scope: !15848)
!15875 = !DILocation(line: 4850, column: 3, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15870, file: !3, line: 4848, column: 46)
!15877 = !DILocation(line: 4850, column: 3, scope: !15878)
!15878 = distinct !DILexicalBlock(scope: !15879, file: !3, line: 4850, column: 3)
!15879 = distinct !DILexicalBlock(scope: !15880, file: !3, line: 4850, column: 3)
!15880 = distinct !DILexicalBlock(scope: !15881, file: !3, line: 4850, column: 3)
!15881 = distinct !DILexicalBlock(scope: !15876, file: !3, line: 4850, column: 3)
!15882 = !DILocation(line: 4850, column: 3, scope: !15879)
!15883 = !DILocation(line: 4850, column: 3, scope: !15884)
!15884 = distinct !DILexicalBlock(scope: !15878, file: !3, line: 4850, column: 3)
!15885 = !DILocation(line: 4850, column: 3, scope: !15886)
!15886 = distinct !DILexicalBlock(scope: !15884, file: !3, line: 4850, column: 3)
!15887 = !DILocation(line: 4850, column: 3, scope: !15888)
!15888 = distinct !DILexicalBlock(scope: !15886, file: !3, line: 4850, column: 3)
!15889 = !DILocation(line: 4850, column: 3, scope: !15881)
!15890 = !DILocation(line: 4852, column: 2, scope: !15876)
!15891 = !DILocation(line: 4855, column: 25, scope: !15590)
!15892 = !DILocation(line: 4855, column: 8, scope: !15590)
!15893 = !DILocation(line: 4855, column: 6, scope: !15590)
!15894 = !DILocation(line: 4856, column: 2, scope: !15590)
!15895 = !DILocation(line: 4858, column: 24, scope: !15896)
!15896 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4858, column: 6)
!15897 = !DILocation(line: 4858, column: 48, scope: !15896)
!15898 = !DILocation(line: 4858, column: 6, scope: !15896)
!15899 = !DILocation(line: 4858, column: 53, scope: !15896)
!15900 = !DILocation(line: 4858, column: 6, scope: !15590)
!15901 = !DILocation(line: 4859, column: 3, scope: !15896)
!15902 = !DILocation(line: 4862, column: 25, scope: !15590)
!15903 = !DILocation(line: 4862, column: 8, scope: !15590)
!15904 = !DILocation(line: 4862, column: 6, scope: !15590)
!15905 = !DILocation(line: 4863, column: 2, scope: !15590)
!15906 = !DILocation(line: 4865, column: 24, scope: !15907)
!15907 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4865, column: 6)
!15908 = !DILocation(line: 4865, column: 48, scope: !15907)
!15909 = !DILocation(line: 4865, column: 6, scope: !15907)
!15910 = !DILocation(line: 4865, column: 53, scope: !15907)
!15911 = !DILocation(line: 4865, column: 6, scope: !15590)
!15912 = !DILocation(line: 4866, column: 3, scope: !15907)
!15913 = !DILocation(line: 4868, column: 24, scope: !15914)
!15914 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4868, column: 6)
!15915 = !DILocation(line: 4868, column: 6, scope: !15914)
!15916 = !DILocation(line: 4868, column: 54, scope: !15914)
!15917 = !DILocation(line: 4868, column: 6, scope: !15590)
!15918 = !DILocation(line: 4869, column: 3, scope: !15914)
!15919 = !DILocation(line: 4870, column: 24, scope: !15920)
!15920 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4870, column: 6)
!15921 = !DILocation(line: 4870, column: 6, scope: !15920)
!15922 = !DILocation(line: 4870, column: 54, scope: !15920)
!15923 = !DILocation(line: 4870, column: 6, scope: !15590)
!15924 = !DILocation(line: 4871, column: 3, scope: !15920)
!15925 = !DILocation(line: 4873, column: 2, scope: !15590)
!15926 = !DILabel(scope: !15590, name: "err", file: !3, line: 4874)
!15927 = !DILocation(line: 4874, column: 1, scope: !15590)
!15928 = !DILocation(line: 4875, column: 2, scope: !15590)
!15929 = !DILocation(line: 4875, column: 2, scope: !15930)
!15930 = distinct !DILexicalBlock(scope: !15931, file: !3, line: 4875, column: 2)
!15931 = distinct !DILexicalBlock(scope: !15932, file: !3, line: 4875, column: 2)
!15932 = distinct !DILexicalBlock(scope: !15933, file: !3, line: 4875, column: 2)
!15933 = distinct !DILexicalBlock(scope: !15590, file: !3, line: 4875, column: 2)
!15934 = !DILocation(line: 4875, column: 2, scope: !15931)
!15935 = !DILocation(line: 4875, column: 2, scope: !15936)
!15936 = distinct !DILexicalBlock(scope: !15930, file: !3, line: 4875, column: 2)
!15937 = !DILocation(line: 4875, column: 2, scope: !15938)
!15938 = distinct !DILexicalBlock(scope: !15936, file: !3, line: 4875, column: 2)
!15939 = !DILocation(line: 4875, column: 2, scope: !15940)
!15940 = distinct !DILexicalBlock(scope: !15938, file: !3, line: 4875, column: 2)
!15941 = !DILocation(line: 4875, column: 2, scope: !15933)
!15942 = !DILocation(line: 4876, column: 2, scope: !15590)
!15943 = !DILocation(line: 4877, column: 1, scope: !15590)
!15944 = distinct !DISubprogram(name: "stv090x_set_gpio", scope: !3, file: !3, line: 4879, type: !4703, scopeLine: 4881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!15945 = !DILocalVariable(name: "fe", arg: 1, scope: !15944, file: !3, line: 4879, type: !588)
!15946 = !DILocation(line: 4879, column: 50, scope: !15944)
!15947 = !DILocalVariable(name: "gpio", arg: 2, scope: !15944, file: !3, line: 4879, type: !492)
!15948 = !DILocation(line: 4879, column: 57, scope: !15944)
!15949 = !DILocalVariable(name: "dir", arg: 3, scope: !15944, file: !3, line: 4879, type: !492)
!15950 = !DILocation(line: 4879, column: 66, scope: !15944)
!15951 = !DILocalVariable(name: "value", arg: 4, scope: !15944, file: !3, line: 4880, type: !492)
!15952 = !DILocation(line: 4880, column: 11, scope: !15944)
!15953 = !DILocalVariable(name: "xor_value", arg: 5, scope: !15944, file: !3, line: 4880, type: !492)
!15954 = !DILocation(line: 4880, column: 21, scope: !15944)
!15955 = !DILocalVariable(name: "state", scope: !15944, file: !3, line: 4882, type: !4654)
!15956 = !DILocation(line: 4882, column: 24, scope: !15944)
!15957 = !DILocation(line: 4882, column: 32, scope: !15944)
!15958 = !DILocation(line: 4882, column: 36, scope: !15944)
!15959 = !DILocalVariable(name: "reg", scope: !15944, file: !3, line: 4883, type: !492)
!15960 = !DILocation(line: 4883, column: 5, scope: !15944)
!15961 = !DILocation(line: 4885, column: 2, scope: !15944)
!15962 = !DILocation(line: 4886, column: 2, scope: !15944)
!15963 = !DILocation(line: 4887, column: 2, scope: !15944)
!15964 = !DILocation(line: 4889, column: 27, scope: !15944)
!15965 = !DILocation(line: 4889, column: 34, scope: !15944)
!15966 = !DILocation(line: 4889, column: 58, scope: !15944)
!15967 = !DILocation(line: 4889, column: 9, scope: !15944)
!15968 = !DILocation(line: 4889, column: 2, scope: !15944)
!15969 = distinct !DISubprogram(name: "stv090x_probe", scope: !3, file: !3, line: 4993, type: !4770, scopeLine: 4995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!15970 = !DILocalVariable(name: "client", arg: 1, scope: !15969, file: !3, line: 4993, type: !4709)
!15971 = !DILocation(line: 4993, column: 45, scope: !15969)
!15972 = !DILocalVariable(name: "id", arg: 2, scope: !15969, file: !3, line: 4994, type: !4772)
!15973 = !DILocation(line: 4994, column: 33, scope: !15969)
!15974 = !DILocalVariable(name: "ret", scope: !15969, file: !3, line: 4996, type: !439)
!15975 = !DILocation(line: 4996, column: 6, scope: !15969)
!15976 = !DILocalVariable(name: "config", scope: !15969, file: !3, line: 4997, type: !4663)
!15977 = !DILocation(line: 4997, column: 25, scope: !15969)
!15978 = !DILocation(line: 4997, column: 34, scope: !15969)
!15979 = !DILocation(line: 4997, column: 42, scope: !15969)
!15980 = !DILocation(line: 4997, column: 46, scope: !15969)
!15981 = !DILocalVariable(name: "state", scope: !15969, file: !3, line: 4999, type: !4654)
!15982 = !DILocation(line: 4999, column: 24, scope: !15969)
!15983 = !DILocation(line: 5001, column: 10, scope: !15969)
!15984 = !DILocation(line: 5001, column: 8, scope: !15969)
!15985 = !DILocation(line: 5002, column: 7, scope: !15986)
!15986 = distinct !DILexicalBlock(scope: !15969, file: !3, line: 5002, column: 6)
!15987 = !DILocation(line: 5002, column: 6, scope: !15969)
!15988 = !DILocation(line: 5003, column: 7, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15986, file: !3, line: 5002, column: 14)
!15990 = !DILocation(line: 5004, column: 3, scope: !15989)
!15991 = !DILocation(line: 5007, column: 2, scope: !15969)
!15992 = !DILocation(line: 5007, column: 9, scope: !15969)
!15993 = !DILocation(line: 5007, column: 20, scope: !15969)
!15994 = !DILocation(line: 5008, column: 21, scope: !15969)
!15995 = !DILocation(line: 5008, column: 2, scope: !15969)
!15996 = !DILocation(line: 5008, column: 9, scope: !15969)
!15997 = !DILocation(line: 5008, column: 19, scope: !15969)
!15998 = !DILocation(line: 5009, column: 18, scope: !15969)
!15999 = !DILocation(line: 5009, column: 26, scope: !15969)
!16000 = !DILocation(line: 5009, column: 2, scope: !15969)
!16001 = !DILocation(line: 5009, column: 9, scope: !15969)
!16002 = !DILocation(line: 5009, column: 16, scope: !15969)
!16003 = !DILocation(line: 5010, column: 2, scope: !15969)
!16004 = !DILocation(line: 5010, column: 9, scope: !15969)
!16005 = !DILocation(line: 5010, column: 18, scope: !15969)
!16006 = !DILocation(line: 5010, column: 26, scope: !15969)
!16007 = !DILocation(line: 5011, column: 37, scope: !15969)
!16008 = !DILocation(line: 5011, column: 2, scope: !15969)
!16009 = !DILocation(line: 5011, column: 9, scope: !15969)
!16010 = !DILocation(line: 5011, column: 18, scope: !15969)
!16011 = !DILocation(line: 5011, column: 35, scope: !15969)
!16012 = !DILocation(line: 5012, column: 20, scope: !15969)
!16013 = !DILocation(line: 5012, column: 28, scope: !15969)
!16014 = !DILocation(line: 5012, column: 2, scope: !15969)
!16015 = !DILocation(line: 5012, column: 9, scope: !15969)
!16016 = !DILocation(line: 5012, column: 18, scope: !15969)
!16017 = !DILocation(line: 5014, column: 24, scope: !15969)
!16018 = !DILocation(line: 5014, column: 32, scope: !15969)
!16019 = !DILocation(line: 5014, column: 2, scope: !15969)
!16020 = !DILocation(line: 5014, column: 9, scope: !15969)
!16021 = !DILocation(line: 5014, column: 22, scope: !15969)
!16022 = !DILocation(line: 5015, column: 21, scope: !15969)
!16023 = !DILocation(line: 5015, column: 29, scope: !15969)
!16024 = !DILocation(line: 5015, column: 2, scope: !15969)
!16025 = !DILocation(line: 5015, column: 9, scope: !15969)
!16026 = !DILocation(line: 5015, column: 19, scope: !15969)
!16027 = !DILocation(line: 5017, column: 2, scope: !15969)
!16028 = !DILocation(line: 5017, column: 9, scope: !15969)
!16029 = !DILocation(line: 5017, column: 20, scope: !15969)
!16030 = !DILocation(line: 5019, column: 31, scope: !15969)
!16031 = !DILocation(line: 5019, column: 8, scope: !15969)
!16032 = !DILocation(line: 5019, column: 6, scope: !15969)
!16033 = !DILocation(line: 5020, column: 6, scope: !16034)
!16034 = distinct !DILexicalBlock(scope: !15969, file: !3, line: 5020, column: 6)
!16035 = !DILocation(line: 5020, column: 6, scope: !15969)
!16036 = !DILocation(line: 5021, column: 3, scope: !16034)
!16037 = !DILocation(line: 5023, column: 21, scope: !15969)
!16038 = !DILocation(line: 5023, column: 29, scope: !15969)
!16039 = !DILocation(line: 5023, column: 2, scope: !15969)
!16040 = !DILocation(line: 5026, column: 2, scope: !15969)
!16041 = !DILocation(line: 5026, column: 10, scope: !15969)
!16042 = !DILocation(line: 5026, column: 27, scope: !15969)
!16043 = !DILocation(line: 5028, column: 2, scope: !15969)
!16044 = !DILabel(scope: !15969, name: "error", file: !3, line: 5030)
!16045 = !DILocation(line: 5030, column: 1, scope: !15969)
!16046 = !DILocation(line: 5031, column: 8, scope: !15969)
!16047 = !DILocation(line: 5031, column: 2, scope: !15969)
!16048 = !DILocation(line: 5032, column: 9, scope: !15969)
!16049 = !DILocation(line: 5032, column: 2, scope: !15969)
!16050 = !DILocation(line: 5033, column: 1, scope: !15969)
!16051 = distinct !DISubprogram(name: "stv090x_remove", scope: !3, file: !3, line: 5035, type: !4780, scopeLine: 5036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!16052 = !DILocalVariable(name: "client", arg: 1, scope: !16051, file: !3, line: 5035, type: !4709)
!16053 = !DILocation(line: 5035, column: 46, scope: !16051)
!16054 = !DILocalVariable(name: "state", scope: !16051, file: !3, line: 5037, type: !4654)
!16055 = !DILocation(line: 5037, column: 24, scope: !16051)
!16056 = !DILocation(line: 5037, column: 51, scope: !16051)
!16057 = !DILocation(line: 5037, column: 32, scope: !16051)
!16058 = !DILocation(line: 5039, column: 19, scope: !16051)
!16059 = !DILocation(line: 5039, column: 26, scope: !16051)
!16060 = !DILocation(line: 5039, column: 2, scope: !16051)
!16061 = !DILocation(line: 5040, column: 2, scope: !16051)
!16062 = distinct !DISubprogram(name: "i2c_set_clientdata", scope: !422, file: !422, line: 356, type: !16063, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!16063 = !DISubroutineType(types: !16064)
!16064 = !{null, !4709, !438}
!16065 = !DILocalVariable(name: "client", arg: 1, scope: !16062, file: !422, line: 356, type: !4709)
!16066 = !DILocation(line: 356, column: 58, scope: !16062)
!16067 = !DILocalVariable(name: "data", arg: 2, scope: !16062, file: !422, line: 356, type: !438)
!16068 = !DILocation(line: 356, column: 72, scope: !16062)
!16069 = !DILocation(line: 358, column: 19, scope: !16062)
!16070 = !DILocation(line: 358, column: 27, scope: !16062)
!16071 = !DILocation(line: 358, column: 32, scope: !16062)
!16072 = !DILocation(line: 358, column: 2, scope: !16062)
!16073 = !DILocation(line: 359, column: 1, scope: !16062)
!16074 = distinct !DISubprogram(name: "stv090x_get_dvb_frontend", scope: !3, file: !3, line: 4984, type: !4707, scopeLine: 4985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!16075 = !DILocalVariable(name: "client", arg: 1, scope: !16074, file: !3, line: 4984, type: !4709)
!16076 = !DILocation(line: 4984, column: 73, scope: !16074)
!16077 = !DILocalVariable(name: "state", scope: !16074, file: !3, line: 4986, type: !4654)
!16078 = !DILocation(line: 4986, column: 24, scope: !16074)
!16079 = !DILocation(line: 4986, column: 51, scope: !16074)
!16080 = !DILocation(line: 4986, column: 32, scope: !16074)
!16081 = !DILocation(line: 4990, column: 10, scope: !16074)
!16082 = !DILocation(line: 4990, column: 17, scope: !16074)
!16083 = !DILocation(line: 4990, column: 2, scope: !16074)
!16084 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !237, file: !237, line: 660, type: !16085, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!16085 = !DISubroutineType(types: !16086)
!16086 = !{null, !625, !438}
!16087 = !DILocalVariable(name: "dev", arg: 1, scope: !16084, file: !237, line: 660, type: !625)
!16088 = !DILocation(line: 660, column: 51, scope: !16084)
!16089 = !DILocalVariable(name: "data", arg: 2, scope: !16084, file: !237, line: 660, type: !438)
!16090 = !DILocation(line: 660, column: 62, scope: !16084)
!16091 = !DILocation(line: 662, column: 21, scope: !16084)
!16092 = !DILocation(line: 662, column: 2, scope: !16084)
!16093 = !DILocation(line: 662, column: 7, scope: !16084)
!16094 = !DILocation(line: 662, column: 19, scope: !16084)
!16095 = !DILocation(line: 663, column: 1, scope: !16084)
!16096 = distinct !DISubprogram(name: "i2c_get_clientdata", scope: !422, file: !422, line: 351, type: !16097, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!16097 = !DISubroutineType(types: !16098)
!16098 = !{!438, !16099}
!16099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16100, size: 64)
!16100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4710)
!16101 = !DILocalVariable(name: "client", arg: 1, scope: !16096, file: !422, line: 351, type: !16099)
!16102 = !DILocation(line: 351, column: 65, scope: !16096)
!16103 = !DILocation(line: 353, column: 26, scope: !16096)
!16104 = !DILocation(line: 353, column: 34, scope: !16096)
!16105 = !DILocation(line: 353, column: 9, scope: !16096)
!16106 = !DILocation(line: 353, column: 2, scope: !16096)
!16107 = distinct !DISubprogram(name: "dev_get_drvdata", scope: !237, file: !237, line: 655, type: !16108, scopeLine: 656, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !656)
!16108 = !DISubroutineType(types: !16109)
!16109 = !{!438, !3949}
!16110 = !DILocalVariable(name: "dev", arg: 1, scope: !16107, file: !237, line: 655, type: !3949)
!16111 = !DILocation(line: 655, column: 58, scope: !16107)
!16112 = !DILocation(line: 657, column: 9, scope: !16107)
!16113 = !DILocation(line: 657, column: 14, scope: !16107)
!16114 = !DILocation(line: 657, column: 2, scope: !16107)
