; ModuleID = '../bcout/drivers/iommu/iommu.llvm.bc'
source_filename = "drivers/iommu/iommu.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall4.init\22, \22a\22\09"
module asm "__initcall_iommu_subsys_init4:\09\09\09"
module asm ".long\09iommu_subsys_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"
module asm ".section\09\22.initcall1.init\22, \22a\22\09"
module asm "__initcall_iommu_init1:\09\09\09"
module asm ".long\09iommu_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.spinlock = type { %union.anon.3 }
%union.anon.3 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.obs_kernel_param = type { i8*, i32 (i8*)*, i32 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type opaque
%struct.page = type { i64, %union.anon.1, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.1 = type { %struct.anon.2 }
%struct.anon.2 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.52 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic_t = type { i32 }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%struct.kgid_t = type { i32 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.ida = type { %struct.xarray }
%struct.iommu_group_attribute = type { %struct.attribute, i64 (%struct.iommu_group*, i8*)*, i64 (%struct.iommu_group*, i8*, i64)* }
%struct.iommu_group = type { %struct.kobject, %struct.kobject*, %struct.list_head, %struct.mutex, %struct.blocking_notifier_head, i8*, void (i8*)*, i8*, i32, %struct.iommu_domain*, %struct.iommu_domain*, %struct.list_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.iommu_domain = type { i32, %struct.iommu_ops*, i64, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)*, i8*, %struct.iommu_domain_geometry, i8* }
%struct.iommu_ops = type { i1 (i32)*, %struct.iommu_domain* (i32)*, void (%struct.iommu_domain*)*, i32 (%struct.iommu_domain*, %struct.device*)*, void (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, i64, i64, i64, i32, i32)*, i64 (%struct.iommu_domain*, i64, i64, %struct.iommu_iotlb_gather*)*, void (%struct.iommu_domain*)*, void (%struct.iommu_domain*)*, void (%struct.iommu_domain*, %struct.iommu_iotlb_gather*)*, i64 (%struct.iommu_domain*, i64)*, %struct.iommu_device* (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.iommu_group* (%struct.device*)*, i32 (%struct.iommu_domain*, i32, i8*)*, i32 (%struct.iommu_domain*, i32, i8*)*, void (%struct.device*, %struct.list_head*)*, void (%struct.device*, %struct.list_head*)*, void (%struct.device*, %struct.iommu_domain*, %struct.iommu_resv_region*)*, i32 (%struct.iommu_domain*, i32, i64, i64, i32)*, void (%struct.iommu_domain*, i32)*, i32 (%struct.device*, %struct.of_phandle_args*)*, i1 (%struct.iommu_domain*, %struct.device*)*, i1 (%struct.device*, i32)*, i1 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)*, i32 (%struct.iommu_domain*, %struct.device*)*, void (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)*, %struct.iommu_sva* (%struct.device*, %struct.mm_struct*, i8*)*, void (%struct.iommu_sva*)*, i32 (%struct.iommu_sva*)*, i32 (%struct.device*, %struct.iommu_fault_event*, %struct.iommu_page_response*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_cache_invalidate_info*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i64, %struct.module* }
%struct.iommu_iotlb_gather = type { i64, i64, i64 }
%struct.iommu_device = type { %struct.list_head, %struct.iommu_ops*, %struct.fwnode_handle*, %struct.device* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.dev_iommu = type { %struct.mutex, %struct.iommu_fault_param*, %struct.iommu_fwspec*, %struct.iommu_device*, i8* }
%struct.iommu_fault_param = type { i32 (%struct.iommu_fault*, i8*)*, i8*, %struct.list_head, %struct.mutex }
%struct.iommu_fault = type { i32, i32, %union.anon.65 }
%union.anon.65 = type { %struct.iommu_fault_page_request, [16 x i8] }
%struct.iommu_fault_page_request = type { i32, i32, i32, i32, i64, [2 x i64] }
%struct.iommu_fwspec = type { %struct.iommu_ops*, %struct.fwnode_handle*, i32, i32, i32, [0 x i32] }
%struct.iommu_resv_region = type { %struct.list_head, i64, i64, i32, i32 }
%struct.of_phandle_args = type { %struct.device_node*, i32, [16 x i32] }
%struct.iommu_sva = type { %struct.device* }
%struct.iommu_fault_event = type { %struct.iommu_fault, %struct.list_head }
%struct.iommu_page_response = type { i32, i32, i32, i32, i32, i32 }
%struct.iommu_cache_invalidate_info = type { i32, i32, i8, i8, [6 x i8], %union.anon.66 }
%union.anon.66 = type { %struct.iommu_inv_addr_info }
%struct.iommu_inv_addr_info = type { i32, i32, i64, i64, i64, i64 }
%struct.iommu_gpasid_bind_data = type { i32, i32, i32, i32, i64, i64, i64, i64, [8 x i8], %union.anon.67 }
%union.anon.67 = type { %struct.iommu_gpasid_bind_data_vtd }
%struct.iommu_gpasid_bind_data_vtd = type { i64, i32, i32 }
%struct.iommu_domain_geometry = type { i64, i64, i8 }
%struct.kmem_cache = type opaque
%struct.group_device = type { %struct.list_head, %struct.device*, i8* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.68, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.68 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.group_for_pci_data = type { %struct.pci_dev*, %struct.iommu_group* }
%struct.fsl_mc_device = type { %struct.device, i64, i16, i32, i16, %struct.fsl_mc_io*, %struct.fsl_mc_obj_desc, %struct.resource*, %struct.fsl_mc_device_irq**, %struct.fsl_mc_resource*, %struct.device_link*, i8* }
%struct.fsl_mc_io = type { %struct.device*, i16, i32, i64, i8*, %struct.fsl_mc_device*, %union.anon.69 }
%union.anon.69 = type { %struct.mutex }
%struct.fsl_mc_obj_desc = type { [16 x i8], i32, i16, i16, i16, i8, i8, i32, [16 x i8], i16 }
%struct.fsl_mc_device_irq = type { %struct.msi_desc*, %struct.fsl_mc_device*, i8, %struct.fsl_mc_resource }
%struct.msi_desc = type opaque
%struct.fsl_mc_resource = type { i32, i32, i8*, %struct.fsl_mc_resource_pool*, %struct.list_head }
%struct.fsl_mc_resource_pool = type opaque
%struct.device_link = type { %struct.device*, %struct.list_head, %struct.device*, %struct.list_head, %struct.device, i32, i32, %struct.refcount_struct, %struct.kref, %struct.callback_head, i8 }
%struct.__group_domain_type = type { %struct.device*, i32 }
%struct.iommu_inv_pasid_info = type { i32, i32, i64 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }

@__UNIQUE_ID___addressable_iommu_subsys_init235 = internal global i8* bitcast (i32 ()* @iommu_subsys_init to i8*), section ".discard.addressable", align 8, !dbg !0
@iommu_device_lock = internal global %struct.spinlock undef, align 1, !dbg !4539
@iommu_device_list = internal global %struct.list_head { %struct.list_head* @iommu_device_list, %struct.list_head* @iommu_device_list }, align 8, !dbg !4541
@__setup_str_iommu_set_def_domain_type = internal constant [18 x i8] c"iommu.passthrough\00", section ".init.rodata", align 1, !dbg !4543
@__setup_iommu_set_def_domain_type = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__setup_str_iommu_set_def_domain_type, i32 0, i32 0), i32 (i8*)* @iommu_set_def_domain_type, i32 1 }, section ".init.setup", align 8, !dbg !4501
@__setup_str_iommu_dma_setup = internal constant [13 x i8] c"iommu.strict\00", section ".init.rodata", align 1, !dbg !4548
@__setup_iommu_dma_setup = internal global %struct.obs_kernel_param { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__setup_str_iommu_dma_setup, i32 0, i32 0), i32 (i8*)* @iommu_dma_setup, i32 1 }, section ".init.setup", align 8, !dbg !4512
@iommu_group_kset = internal global %struct.kset* null, align 8, !dbg !4533
@iommu_group_alloc.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4514
@.str = private unnamed_addr constant [14 x i8] c"&group->mutex\00", align 1
@iommu_group_alloc.__key.1 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4519
@.str.2 = private unnamed_addr constant [27 x i8] c"&(&group->notifier)->rwsem\00", align 1
@iommu_group_ida = internal global %struct.ida { %struct.xarray { %struct.spinlock undef, i32 8388613, i8* null } }, align 8, !dbg !4555
@iommu_group_ktype = internal global %struct.kobj_type { void (%struct.kobject*)* @iommu_group_release, %struct.sysfs_ops* @iommu_group_sysfs_ops, %struct.attribute** null, %struct.attribute_group** null, %struct.kobj_ns_type_operations* (%struct.kobject*)* null, i8* (%struct.kobject*)* null, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* null }, align 8, !dbg !4560
@.str.3 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"devices\00", align 1
@iommu_group_attr_reserved_regions = internal global %struct.iommu_group_attribute { %struct.attribute { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i16 292 }, i64 (%struct.iommu_group*, i8*)* @iommu_group_show_resv_regions, i64 (%struct.iommu_group*, i8*, i64)* null }, align 8, !dbg !4564
@iommu_group_attr_type = internal global %struct.iommu_group_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.iommu_group*, i8*)* @iommu_group_show_type, i64 (%struct.iommu_group*, i8*, i64)* null }, align 8, !dbg !4572
@.str.5 = private unnamed_addr constant [22 x i8] c"drivers/iommu/iommu.c\00", align 1
@iommu_group_attr_name = internal global %struct.iommu_group_attribute { %struct.attribute { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.iommu_group*, i8*)* @iommu_group_show_name, i64 (%struct.iommu_group*, i8*, i64)* null }, align 8, !dbg !4574
@.str.6 = private unnamed_addr constant [12 x i8] c"iommu_group\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"%s.%d\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"Adding to iommu group %d\0A\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"Failed to add to iommu group %d: %d\0A\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"Removing from iommu group %d\0A\00", align 1
@iommu_register_device_fault_handler.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4521
@.str.12 = private unnamed_addr constant [26 x i8] c"&param->fault_param->lock\00", align 1
@iommu_page_response._rs = internal global %struct.ratelimit_state { %struct.raw_spinlock undef, i32 1250, i32 10, i32 0, i32 0, i64 0, i64 0 }, align 8, !dbg !4526
@__func__.iommu_page_response = private unnamed_addr constant [20 x i8] c"iommu_page_response\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"no pending PRQ, drop response\0A\00", align 1
@pci_bus_type = external dso_local global %struct.bus_type, align 8
@__UNIQUE_ID___addressable_iommu_init288 = internal global i8* bitcast (i32 ()* @iommu_init to i8*), section ".discard.addressable", align 8, !dbg !4531
@iommu_def_domain_type = internal global i32 0, section ".data..read_mostly", align 4, !dbg !4535
@.str.14 = private unnamed_addr constant [75 x i8] c"\016iommu: Memory encryption detected - Disabling default IOMMU Passthrough\0A\00", align 1
@.str.15 = private unnamed_addr constant [37 x i8] c"\016iommu: Default domain type: %s %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [30 x i8] c"(set via kernel command line)\00", align 1
@.str.17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@iommu_cmd_line = internal global i32 0, section ".data..read_mostly", align 4, !dbg !4537
@.str.18 = private unnamed_addr constant [8 x i8] c"Blocked\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"Passthrough\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"Unmanaged\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"Translated\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@iommu_dma_strict = internal global i8 1, section ".data..read_mostly", align 1, !dbg !4553
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.23 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@iommu_group_sysfs_ops = internal constant %struct.sysfs_ops { i64 (%struct.kobject*, %struct.attribute*, i8*)* @iommu_group_attr_show, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* @iommu_group_attr_store }, align 8, !dbg !4562
@.str.24 = private unnamed_addr constant [17 x i8] c"reserved_regions\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"0x%016llx 0x%016llx %s\0A\00", align 1
@iommu_group_resv_type_string = internal constant [5 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i32 0, i32 0)], align 16, !dbg !4566
@.str.26 = private unnamed_addr constant [7 x i8] c"direct\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"direct-relaxable\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"reserved\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"msi\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.31 = private unnamed_addr constant [9 x i8] c"unknown\0A\00", align 1
@.str.32 = private unnamed_addr constant [9 x i8] c"blocked\0A\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"identity\0A\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"unmanaged\0A\00", align 1
@.str.35 = private unnamed_addr constant [5 x i8] c"DMA\0A\00", align 1
@.str.36 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.38 = private unnamed_addr constant [108 x i8] c"\014iommu: Failed to allocate default IOMMU domain of type %u for group %s - Falling back to IOMMU_DOMAIN_DMA\00", align 1
@.str.39 = private unnamed_addr constant [101 x i8] c"Device needs domain type %s, but device %s in the same iommu group requires type %s - using default\0A\00", align 1
@.str.40 = private unnamed_addr constant [28 x i8] c"include/linux/thread_info.h\00", align 1
@.str.41 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.42 = private unnamed_addr constant [66 x i8] c"\013iommu: unaligned: iova 0x%lx pa %pa size 0x%zx min_pagesz 0x%x\0A\00", align 1
@.str.43 = private unnamed_addr constant [59 x i8] c"\013iommu: unaligned: iova 0x%lx size 0x%zx min_pagesz 0x%x\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@.str.44 = private unnamed_addr constant [13 x i8] c"iommu_groups\00", align 1
@kernel_kobj = external dso_local global %struct.kobject*, align 8
@dev_iommu_get.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !4576
@.str.45 = private unnamed_addr constant [13 x i8] c"&param->lock\00", align 1
@of_fwnode_ops = external dso_local constant %struct.fwnode_operations, align 8
@llvm.used = appending global [4 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_iommu_subsys_init235 to i8*), i8* bitcast (%struct.obs_kernel_param* @__setup_iommu_set_def_domain_type to i8*), i8* bitcast (%struct.obs_kernel_param* @__setup_iommu_dma_setup to i8*), i8* bitcast (i8** @__UNIQUE_ID___addressable_iommu_init288 to i8*)], section "llvm.metadata"

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_subsys_init() #0 section ".init.text" !dbg !4586 {
entry:
  %cmd_line = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd_line, metadata !4589, metadata !DIExpression()), !dbg !4590
  %call = call zeroext i1 @iommu_cmd_line_dma_api() #9, !dbg !4591
  %frombool = zext i1 %call to i8, !dbg !4590
  store i8 %frombool, i8* %cmd_line, align 1, !dbg !4590
  %0 = load i8, i8* %cmd_line, align 1, !dbg !4592
  %tobool = trunc i8 %0 to i1, !dbg !4592
  br i1 %tobool, label %if.end5, label %if.then, !dbg !4594

if.then:                                          ; preds = %entry
  call void @iommu_set_default_translated(i1 zeroext false) #9, !dbg !4595
  %call1 = call zeroext i1 @iommu_default_passthrough() #9, !dbg !4598
  br i1 %call1, label %land.lhs.true, label %if.end, !dbg !4600

land.lhs.true:                                    ; preds = %if.then
  %call2 = call zeroext i1 @mem_encrypt_active() #9, !dbg !4601
  br i1 %call2, label %if.then3, label %if.end, !dbg !4602

if.then3:                                         ; preds = %land.lhs.true
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.14, i64 0, i64 0)) #10, !dbg !4603
  call void @iommu_set_default_translated(i1 zeroext false) #9, !dbg !4605
  br label %if.end, !dbg !4606

if.end:                                           ; preds = %if.then3, %land.lhs.true, %if.then
  br label %if.end5, !dbg !4607

if.end5:                                          ; preds = %if.end, %entry
  %1 = load i32, i32* @iommu_def_domain_type, align 4, !dbg !4608
  %call6 = call i8* @iommu_domain_type_str(i32 %1) #9, !dbg !4608
  %2 = load i8, i8* %cmd_line, align 1, !dbg !4608
  %tobool7 = trunc i8 %2 to i1, !dbg !4608
  %3 = zext i1 %tobool7 to i64, !dbg !4608
  %cond = select i1 %tobool7, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.17, i64 0, i64 0), !dbg !4608
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* %call6, i8* %cond) #10, !dbg !4608
  ret i32 0, !dbg !4609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_device_register(%struct.iommu_device* %iommu) #1 !dbg !4610 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !4613, metadata !DIExpression()), !dbg !4618
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4620, metadata !DIExpression()), !dbg !4622
  %iommu.addr = alloca %struct.iommu_device*, align 8
  store %struct.iommu_device* %iommu, %struct.iommu_device** %iommu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_device** %iommu.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store %struct.spinlock* @iommu_device_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !4626, !srcloc !4628
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4629
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !4629
  %rlock.i = bitcast %union.anon.3* %1 to %struct.raw_spinlock*, !dbg !4629
  %2 = load %struct.iommu_device*, %struct.iommu_device** %iommu.addr, align 8, !dbg !4631
  %list = getelementptr inbounds %struct.iommu_device, %struct.iommu_device* %2, i32 0, i32 0, !dbg !4632
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @iommu_device_list) #9, !dbg !4633
  store %struct.spinlock* @iommu_device_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !4634, !srcloc !4636
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !4637
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4637
  %rlock.i2 = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !4637
  ret i32 0, !dbg !4639
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #1 !dbg !4640 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !4648
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4649
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !4650
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !4650
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !4651
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #9, !dbg !4652
  ret void, !dbg !4653
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_device_unregister(%struct.iommu_device* %iommu) #1 !dbg !4654 {
entry:
  %lock.addr.i1 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i1, metadata !4613, metadata !DIExpression()), !dbg !4657
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4620, metadata !DIExpression()), !dbg !4659
  %iommu.addr = alloca %struct.iommu_device*, align 8
  store %struct.iommu_device* %iommu, %struct.iommu_device** %iommu.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_device** %iommu.addr, metadata !4661, metadata !DIExpression()), !dbg !4662
  store %struct.spinlock* @iommu_device_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !4663, !srcloc !4628
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !4664
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !4664
  %rlock.i = bitcast %union.anon.3* %1 to %struct.raw_spinlock*, !dbg !4664
  %2 = load %struct.iommu_device*, %struct.iommu_device** %iommu.addr, align 8, !dbg !4665
  %list = getelementptr inbounds %struct.iommu_device, %struct.iommu_device* %2, i32 0, i32 0, !dbg !4666
  call void @list_del(%struct.list_head* %list) #9, !dbg !4667
  store %struct.spinlock* @iommu_device_lock, %struct.spinlock** %lock.addr.i1, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !4668, !srcloc !4636
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i1, align 8, !dbg !4669
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !4669
  %rlock.i2 = bitcast %union.anon.3* %4 to %struct.raw_spinlock*, !dbg !4669
  ret void, !dbg !4670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #1 !dbg !4671 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !4674, metadata !DIExpression()), !dbg !4675
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4676
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !4677
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4678
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !4679
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !4680
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !4681
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !4682
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !4683
  ret void, !dbg !4684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_probe_device(%struct.device* %dev) #1 !dbg !4685 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4686, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !4688, metadata !DIExpression()), !dbg !4689
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4690
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !4691
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !4691
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !4692
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !4692
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !4689
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !4693, metadata !DIExpression()), !dbg !4694
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4695, metadata !DIExpression()), !dbg !4696
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4697
  %call = call i32 @__iommu_probe_device(%struct.device* %3, %struct.list_head* null) #9, !dbg !4698
  store i32 %call, i32* %ret, align 4, !dbg !4699
  %4 = load i32, i32* %ret, align 4, !dbg !4700
  %tobool = icmp ne i32 %4, 0, !dbg !4700
  br i1 %tobool, label %if.then, label %if.end, !dbg !4702

if.then:                                          ; preds = %entry
  br label %err_out, !dbg !4703

if.end:                                           ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4704
  %call1 = call %struct.iommu_group* @iommu_group_get(%struct.device* %5) #9, !dbg !4705
  store %struct.iommu_group* %call1, %struct.iommu_group** %group, align 8, !dbg !4706
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4707
  %tobool2 = icmp ne %struct.iommu_group* %6, null, !dbg !4707
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !4709

if.then3:                                         ; preds = %if.end
  br label %err_release, !dbg !4710

if.end4:                                          ; preds = %if.end
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4711
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4712
  %call5 = call i32 @iommu_alloc_default_domain(%struct.iommu_group* %7, %struct.device* %8) #9, !dbg !4713
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4714
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %9, i32 0, i32 9, !dbg !4716
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !4716
  %tobool6 = icmp ne %struct.iommu_domain* %10, null, !dbg !4714
  br i1 %tobool6, label %if.then7, label %if.end13, !dbg !4717

if.then7:                                         ; preds = %if.end4
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4718
  %default_domain8 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %11, i32 0, i32 9, !dbg !4720
  %12 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain8, align 8, !dbg !4720
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4721
  %call9 = call i32 @__iommu_attach_device(%struct.iommu_domain* %12, %struct.device* %13) #9, !dbg !4722
  store i32 %call9, i32* %ret, align 4, !dbg !4723
  %14 = load i32, i32* %ret, align 4, !dbg !4724
  %tobool10 = icmp ne i32 %14, 0, !dbg !4724
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !4726

if.then11:                                        ; preds = %if.then7
  %15 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4727
  call void @iommu_group_put(%struct.iommu_group* %15) #9, !dbg !4729
  br label %err_release, !dbg !4730

if.end12:                                         ; preds = %if.then7
  br label %if.end13, !dbg !4731

if.end13:                                         ; preds = %if.end12, %if.end4
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4732
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4733
  %call14 = call i32 @iommu_create_device_direct_mappings(%struct.iommu_group* %16, %struct.device* %17) #9, !dbg !4734
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4735
  call void @iommu_group_put(%struct.iommu_group* %18) #9, !dbg !4736
  %19 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4737
  %probe_finalize = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %19, i32 0, i32 13, !dbg !4739
  %20 = load void (%struct.device*)*, void (%struct.device*)** %probe_finalize, align 8, !dbg !4739
  %tobool15 = icmp ne void (%struct.device*)* %20, null, !dbg !4737
  br i1 %tobool15, label %if.then16, label %if.end18, !dbg !4740

if.then16:                                        ; preds = %if.end13
  %21 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4741
  %probe_finalize17 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %21, i32 0, i32 13, !dbg !4742
  %22 = load void (%struct.device*)*, void (%struct.device*)** %probe_finalize17, align 8, !dbg !4742
  %23 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4743
  call void %22(%struct.device* %23) #9, !dbg !4741
  br label %if.end18, !dbg !4741

if.end18:                                         ; preds = %if.then16, %if.end13
  store i32 0, i32* %retval, align 4, !dbg !4744
  br label %return, !dbg !4744

err_release:                                      ; preds = %if.then11, %if.then3
  call void @llvm.dbg.label(metadata !4745), !dbg !4746
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4747
  call void @iommu_release_device(%struct.device* %24) #9, !dbg !4748
  br label %err_out, !dbg !4748

err_out:                                          ; preds = %err_release, %if.then
  call void @llvm.dbg.label(metadata !4749), !dbg !4750
  %25 = load i32, i32* %ret, align 4, !dbg !4751
  store i32 %25, i32* %retval, align 4, !dbg !4752
  br label %return, !dbg !4752

return:                                           ; preds = %err_out, %if.end18
  %26 = load i32, i32* %retval, align 4, !dbg !4753
  ret i32 %26, !dbg !4753
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__iommu_probe_device(%struct.device* %dev, %struct.list_head* %group_list) #1 !dbg !4754 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %group_list.addr = alloca %struct.list_head*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %iommu_dev = alloca %struct.iommu_device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  store %struct.list_head* %group_list, %struct.list_head** %group_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %group_list.addr, metadata !4759, metadata !DIExpression()), !dbg !4760
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !4761, metadata !DIExpression()), !dbg !4762
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4763
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !4764
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !4764
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !4765
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !4765
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !4762
  call void @llvm.dbg.declare(metadata %struct.iommu_device** %iommu_dev, metadata !4766, metadata !DIExpression()), !dbg !4767
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !4768, metadata !DIExpression()), !dbg !4769
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4770, metadata !DIExpression()), !dbg !4771
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4772
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !4772
  br i1 %tobool, label %if.end, label %if.then, !dbg !4774

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !4775
  br label %return, !dbg !4775

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4776
  %call = call %struct.dev_iommu* @dev_iommu_get(%struct.device* %4) #9, !dbg !4778
  %tobool1 = icmp ne %struct.dev_iommu* %call, null, !dbg !4778
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4779

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !4780
  br label %return, !dbg !4780

if.end3:                                          ; preds = %if.end
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4781
  %owner = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 40, !dbg !4783
  %6 = load %struct.module*, %struct.module** %owner, align 8, !dbg !4783
  %call4 = call zeroext i1 @try_module_get(%struct.module* %6) #9, !dbg !4784
  br i1 %call4, label %if.end6, label %if.then5, !dbg !4785

if.then5:                                         ; preds = %if.end3
  store i32 -22, i32* %ret, align 4, !dbg !4786
  br label %err_free, !dbg !4788

if.end6:                                          ; preds = %if.end3
  %7 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4789
  %probe_device = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %7, i32 0, i32 11, !dbg !4790
  %8 = load %struct.iommu_device* (%struct.device*)*, %struct.iommu_device* (%struct.device*)** %probe_device, align 8, !dbg !4790
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4791
  %call7 = call %struct.iommu_device* %8(%struct.device* %9) #9, !dbg !4789
  store %struct.iommu_device* %call7, %struct.iommu_device** %iommu_dev, align 8, !dbg !4792
  %10 = load %struct.iommu_device*, %struct.iommu_device** %iommu_dev, align 8, !dbg !4793
  %11 = bitcast %struct.iommu_device* %10 to i8*, !dbg !4793
  %call8 = call zeroext i1 @IS_ERR(i8* %11) #9, !dbg !4795
  br i1 %call8, label %if.then9, label %if.end11, !dbg !4796

if.then9:                                         ; preds = %if.end6
  %12 = load %struct.iommu_device*, %struct.iommu_device** %iommu_dev, align 8, !dbg !4797
  %13 = bitcast %struct.iommu_device* %12 to i8*, !dbg !4797
  %call10 = call i64 @PTR_ERR(i8* %13) #9, !dbg !4799
  %conv = trunc i64 %call10 to i32, !dbg !4799
  store i32 %conv, i32* %ret, align 4, !dbg !4800
  br label %out_module_put, !dbg !4801

if.end11:                                         ; preds = %if.end6
  %14 = load %struct.iommu_device*, %struct.iommu_device** %iommu_dev, align 8, !dbg !4802
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4803
  %iommu = getelementptr inbounds %struct.device, %struct.device* %15, i32 0, i32 33, !dbg !4804
  %16 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !4804
  %iommu_dev12 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %16, i32 0, i32 3, !dbg !4805
  store %struct.iommu_device* %14, %struct.iommu_device** %iommu_dev12, align 8, !dbg !4806
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4807
  %call13 = call %struct.iommu_group* @iommu_group_get_for_dev(%struct.device* %17) #9, !dbg !4808
  store %struct.iommu_group* %call13, %struct.iommu_group** %group, align 8, !dbg !4809
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4810
  %19 = bitcast %struct.iommu_group* %18 to i8*, !dbg !4810
  %call14 = call zeroext i1 @IS_ERR(i8* %19) #9, !dbg !4812
  br i1 %call14, label %if.then15, label %if.end18, !dbg !4813

if.then15:                                        ; preds = %if.end11
  %20 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4814
  %21 = bitcast %struct.iommu_group* %20 to i8*, !dbg !4814
  %call16 = call i64 @PTR_ERR(i8* %21) #9, !dbg !4816
  %conv17 = trunc i64 %call16 to i32, !dbg !4816
  store i32 %conv17, i32* %ret, align 4, !dbg !4817
  br label %out_release, !dbg !4818

if.end18:                                         ; preds = %if.end11
  %22 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4819
  call void @iommu_group_put(%struct.iommu_group* %22) #9, !dbg !4820
  %23 = load %struct.list_head*, %struct.list_head** %group_list.addr, align 8, !dbg !4821
  %tobool19 = icmp ne %struct.list_head* %23, null, !dbg !4821
  br i1 %tobool19, label %land.lhs.true, label %if.end27, !dbg !4823

land.lhs.true:                                    ; preds = %if.end18
  %24 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4824
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %24, i32 0, i32 9, !dbg !4825
  %25 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !4825
  %tobool20 = icmp ne %struct.iommu_domain* %25, null, !dbg !4824
  br i1 %tobool20, label %if.end27, label %land.lhs.true21, !dbg !4826

land.lhs.true21:                                  ; preds = %land.lhs.true
  %26 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4827
  %entry22 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %26, i32 0, i32 11, !dbg !4828
  %call23 = call i32 @list_empty(%struct.list_head* %entry22) #9, !dbg !4829
  %tobool24 = icmp ne i32 %call23, 0, !dbg !4829
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !4830

if.then25:                                        ; preds = %land.lhs.true21
  %27 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4831
  %entry26 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %27, i32 0, i32 11, !dbg !4832
  %28 = load %struct.list_head*, %struct.list_head** %group_list.addr, align 8, !dbg !4833
  call void @list_add_tail(%struct.list_head* %entry26, %struct.list_head* %28) #9, !dbg !4834
  br label %if.end27, !dbg !4834

if.end27:                                         ; preds = %if.then25, %land.lhs.true21, %land.lhs.true, %if.end18
  %29 = load %struct.iommu_device*, %struct.iommu_device** %iommu_dev, align 8, !dbg !4835
  %30 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4836
  %call28 = call i32 @iommu_device_link(%struct.iommu_device* %29, %struct.device* %30) #9, !dbg !4837
  store i32 0, i32* %retval, align 4, !dbg !4838
  br label %return, !dbg !4838

out_release:                                      ; preds = %if.then15
  call void @llvm.dbg.label(metadata !4839), !dbg !4840
  %31 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4841
  %release_device = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %31, i32 0, i32 12, !dbg !4842
  %32 = load void (%struct.device*)*, void (%struct.device*)** %release_device, align 8, !dbg !4842
  %33 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4843
  call void %32(%struct.device* %33) #9, !dbg !4841
  br label %out_module_put, !dbg !4841

out_module_put:                                   ; preds = %out_release, %if.then9
  call void @llvm.dbg.label(metadata !4844), !dbg !4845
  %34 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4846
  %owner29 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %34, i32 0, i32 40, !dbg !4847
  %35 = load %struct.module*, %struct.module** %owner29, align 8, !dbg !4847
  call void @module_put(%struct.module* %35) #9, !dbg !4848
  br label %err_free, !dbg !4848

err_free:                                         ; preds = %out_module_put, %if.then5
  call void @llvm.dbg.label(metadata !4849), !dbg !4850
  %36 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4851
  call void @dev_iommu_free(%struct.device* %36) #9, !dbg !4852
  %37 = load i32, i32* %ret, align 4, !dbg !4853
  store i32 %37, i32* %retval, align 4, !dbg !4854
  br label %return, !dbg !4854

return:                                           ; preds = %err_free, %if.end27, %if.then2, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !4855
  ret i32 %38, !dbg !4855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @iommu_group_get(%struct.device* %dev) #1 !dbg !4856 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4857, metadata !DIExpression()), !dbg !4858
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !4859, metadata !DIExpression()), !dbg !4860
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4861
  %iommu_group = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 32, !dbg !4862
  %1 = load %struct.iommu_group*, %struct.iommu_group** %iommu_group, align 8, !dbg !4862
  store %struct.iommu_group* %1, %struct.iommu_group** %group, align 8, !dbg !4860
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4863
  %tobool = icmp ne %struct.iommu_group* %2, null, !dbg !4863
  br i1 %tobool, label %if.then, label %if.end, !dbg !4865

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4866
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %3, i32 0, i32 1, !dbg !4867
  %4 = load %struct.kobject*, %struct.kobject** %devices_kobj, align 8, !dbg !4867
  %call = call %struct.kobject* @kobject_get(%struct.kobject* %4) #9, !dbg !4868
  br label %if.end, !dbg !4868

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !4869
  ret %struct.iommu_group* %5, !dbg !4870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_alloc_default_domain(%struct.iommu_group* %group, %struct.device* %dev) #1 !dbg !4871 {
entry:
  %retval = alloca i32, align 4
  %group.addr = alloca %struct.iommu_group*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %type = alloca i32, align 4
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !4874, metadata !DIExpression()), !dbg !4875
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4876, metadata !DIExpression()), !dbg !4877
  call void @llvm.dbg.declare(metadata i32* %type, metadata !4878, metadata !DIExpression()), !dbg !4879
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !4880
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 9, !dbg !4882
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !4882
  %tobool = icmp ne %struct.iommu_domain* %1, null, !dbg !4880
  br i1 %tobool, label %if.then, label %if.end, !dbg !4883

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4884
  br label %return, !dbg !4884

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4885
  %call = call i32 @iommu_get_def_domain_type(%struct.device* %2) #9, !dbg !4886
  store i32 %call, i32* %type, align 4, !dbg !4887
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4888
  %bus = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 5, !dbg !4889
  %4 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !4889
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !4890
  %6 = load i32, i32* %type, align 4, !dbg !4891
  %call1 = call i32 @iommu_group_alloc_default_domain(%struct.bus_type* %4, %struct.iommu_group* %5, i32 %6) #9, !dbg !4892
  store i32 %call1, i32* %retval, align 4, !dbg !4893
  br label %return, !dbg !4893

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !4894
  ret i32 %7, !dbg !4894
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__iommu_attach_device(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !4895 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4900, metadata !DIExpression()), !dbg !4901
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !4902
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !4902
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !4902
  %attach_dev = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 3, !dbg !4902
  %2 = load i32 (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)** %attach_dev, align 8, !dbg !4902
  %cmp = icmp eq i32 (%struct.iommu_domain*, %struct.device*)* %2, null, !dbg !4902
  %lnot = xor i1 %cmp, true, !dbg !4902
  %lnot1 = xor i1 %lnot, true, !dbg !4902
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !4902
  %conv = sext i32 %lnot.ext to i64, !dbg !4902
  %tobool = icmp ne i64 %conv, 0, !dbg !4902
  br i1 %tobool, label %if.then, label %if.end, !dbg !4904

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !4905
  br label %return, !dbg !4905

if.end:                                           ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !4906
  %ops2 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !4907
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops2, align 8, !dbg !4907
  %attach_dev3 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 3, !dbg !4908
  %5 = load i32 (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)** %attach_dev3, align 8, !dbg !4908
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !4909
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4910
  %call = call i32 %5(%struct.iommu_domain* %6, %struct.device* %7) #9, !dbg !4906
  store i32 %call, i32* %ret, align 4, !dbg !4911
  %8 = load i32, i32* %ret, align 4, !dbg !4912
  %tobool4 = icmp ne i32 %8, 0, !dbg !4912
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !4914

if.then5:                                         ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4915
  call void @trace_attach_device_to_domain(%struct.device* %9) #9, !dbg !4916
  br label %if.end6, !dbg !4916

if.end6:                                          ; preds = %if.then5, %if.end
  %10 = load i32, i32* %ret, align 4, !dbg !4917
  store i32 %10, i32* %retval, align 4, !dbg !4918
  br label %return, !dbg !4918

return:                                           ; preds = %if.end6, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !4919
  ret i32 %11, !dbg !4919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_group_put(%struct.iommu_group* %group) #1 !dbg !4920 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !4923, metadata !DIExpression()), !dbg !4924
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !4925
  %tobool = icmp ne %struct.iommu_group* %0, null, !dbg !4925
  br i1 %tobool, label %if.then, label %if.end, !dbg !4927

if.then:                                          ; preds = %entry
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !4928
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 1, !dbg !4929
  %2 = load %struct.kobject*, %struct.kobject** %devices_kobj, align 8, !dbg !4929
  call void @kobject_put(%struct.kobject* %2) #9, !dbg !4930
  br label %if.end, !dbg !4930

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4931
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_create_device_direct_mappings(%struct.iommu_group* %group, %struct.device* %dev) #1 !dbg !4932 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !4933, metadata !DIExpression()), !dbg !4938
  %retval = alloca i32, align 4
  %group.addr = alloca %struct.iommu_group*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %domain = alloca %struct.iommu_domain*, align 8
  %entry1 = alloca %struct.iommu_resv_region*, align 8
  %mappings = alloca %struct.list_head, align 8
  %pg_size = alloca i64, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_resv_region*, align 8
  %start = alloca i64, align 8
  %end = alloca i64, align 8
  %addr = alloca i64, align 8
  %phys_addr = alloca i64, align 8
  %__mptr59 = alloca i8*, align 8
  %tmp64 = alloca %struct.iommu_resv_region*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !4940, metadata !DIExpression()), !dbg !4941
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !4942, metadata !DIExpression()), !dbg !4943
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !4944, metadata !DIExpression()), !dbg !4945
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !4946
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 9, !dbg !4947
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !4947
  store %struct.iommu_domain* %1, %struct.iommu_domain** %domain, align 8, !dbg !4945
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %entry1, metadata !4948, metadata !DIExpression()), !dbg !4949
  call void @llvm.dbg.declare(metadata %struct.list_head* %mappings, metadata !4950, metadata !DIExpression()), !dbg !4951
  call void @llvm.dbg.declare(metadata i64* %pg_size, metadata !4952, metadata !DIExpression()), !dbg !4953
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !4954, metadata !DIExpression()), !dbg !4955
  store i32 0, i32* %ret, align 4, !dbg !4955
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !4956
  %tobool = icmp ne %struct.iommu_domain* %2, null, !dbg !4956
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !4958

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !4959
  %type = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 0, !dbg !4960
  %4 = load i32, i32* %type, align 8, !dbg !4960
  %cmp = icmp ne i32 %4, 3, !dbg !4961
  br i1 %cmp, label %if.then, label %if.end, !dbg !4962

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !4963
  br label %return, !dbg !4963

if.end:                                           ; preds = %lor.lhs.false
  br label %do.body, !dbg !4964

do.body:                                          ; preds = %if.end
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !4965
  %pgsize_bitmap = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %5, i32 0, i32 2, !dbg !4965
  %6 = load i64, i64* %pgsize_bitmap, align 8, !dbg !4965
  %tobool2 = icmp ne i64 %6, 0, !dbg !4965
  %lnot = xor i1 %tobool2, true, !dbg !4965
  %lnot3 = xor i1 %lnot, true, !dbg !4965
  %lnot4 = xor i1 %lnot3, true, !dbg !4965
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !4965
  %conv = sext i32 %lnot.ext to i64, !dbg !4965
  %tobool5 = icmp ne i64 %conv, 0, !dbg !4965
  br i1 %tobool5, label %if.then6, label %if.end14, !dbg !4968

if.then6:                                         ; preds = %do.body
  br label %do.body7, !dbg !4965

do.body7:                                         ; preds = %if.then6
  br label %do.body8, !dbg !4969

do.body8:                                         ; preds = %do.body7
  br label %do.end, !dbg !4971

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !4969

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 732, i32 0, i64 12) #11, !dbg !4973, !srcloc !4975
  br label %do.end10, !dbg !4973

do.end10:                                         ; preds = %do.body9
  br label %do.body11, !dbg !4969

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 259) #11, !dbg !4976, !srcloc !4979
  unreachable, !dbg !4980

do.end12:                                         ; No predecessors!
  br label %do.end13, !dbg !4969

do.end13:                                         ; preds = %do.end12
  br label %if.end14, !dbg !4969

if.end14:                                         ; preds = %do.end13, %do.body
  br label %do.end15, !dbg !4968

do.end15:                                         ; preds = %if.end14
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !4981
  %pgsize_bitmap16 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %7, i32 0, i32 2, !dbg !4982
  %8 = load i64, i64* %pgsize_bitmap16, align 8, !dbg !4982
  store i64 %8, i64* %word.addr.i, align 8
  %9 = load i64, i64* %word.addr.i, align 8, !dbg !4983
  %10 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %9) #12, !dbg !4984, !srcloc !4985
  store i64 %10, i64* %word.addr.i, align 8, !dbg !4984
  %11 = load i64, i64* %word.addr.i, align 8, !dbg !4986
  %shl = shl i64 1, %11, !dbg !4987
  store i64 %shl, i64* %pg_size, align 8, !dbg !4988
  call void @INIT_LIST_HEAD(%struct.list_head* %mappings) #9, !dbg !4989
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !4990
  call void @iommu_get_resv_regions(%struct.device* %12, %struct.list_head* %mappings) #9, !dbg !4991
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !4992, metadata !DIExpression()), !dbg !4995
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mappings, i32 0, i32 0, !dbg !4995
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !4995
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !4995
  store i8* %14, i8** %__mptr, align 8, !dbg !4995
  br label %do.body17, !dbg !4995

do.body17:                                        ; preds = %do.end15
  br label %do.end18, !dbg !4996

do.end18:                                         ; preds = %do.body17
  %15 = load i8*, i8** %__mptr, align 8, !dbg !4995
  %add.ptr = getelementptr i8, i8* %15, i64 0, !dbg !4995
  %16 = bitcast i8* %add.ptr to %struct.iommu_resv_region*, !dbg !4995
  store %struct.iommu_resv_region* %16, %struct.iommu_resv_region** %tmp, align 8, !dbg !4996
  %17 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp, align 8, !dbg !4995
  store %struct.iommu_resv_region* %17, %struct.iommu_resv_region** %entry1, align 8, !dbg !4998
  br label %for.cond, !dbg !4998

for.cond:                                         ; preds = %do.end63, %do.end18
  %18 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !4999
  %list = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %18, i32 0, i32 0, !dbg !4999
  %cmp19 = icmp eq %struct.list_head* %list, %mappings, !dbg !4999
  %lnot21 = xor i1 %cmp19, true, !dbg !4999
  br i1 %lnot21, label %for.body, label %for.end66, !dbg !4998

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %start, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata i64* %end, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata i64* %addr, metadata !5006, metadata !DIExpression()), !dbg !5007
  %19 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !5008
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %19, i32 0, i32 1, !dbg !5010
  %20 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5010
  %apply_resv_region = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %20, i32 0, i32 19, !dbg !5011
  %21 = load void (%struct.device*, %struct.iommu_domain*, %struct.iommu_resv_region*)*, void (%struct.device*, %struct.iommu_domain*, %struct.iommu_resv_region*)** %apply_resv_region, align 8, !dbg !5011
  %tobool23 = icmp ne void (%struct.device*, %struct.iommu_domain*, %struct.iommu_resv_region*)* %21, null, !dbg !5008
  br i1 %tobool23, label %if.then24, label %if.end27, !dbg !5012

if.then24:                                        ; preds = %for.body
  %22 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !5013
  %ops25 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %22, i32 0, i32 1, !dbg !5014
  %23 = load %struct.iommu_ops*, %struct.iommu_ops** %ops25, align 8, !dbg !5014
  %apply_resv_region26 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %23, i32 0, i32 19, !dbg !5015
  %24 = load void (%struct.device*, %struct.iommu_domain*, %struct.iommu_resv_region*)*, void (%struct.device*, %struct.iommu_domain*, %struct.iommu_resv_region*)** %apply_resv_region26, align 8, !dbg !5015
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5016
  %26 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !5017
  %27 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5018
  call void %24(%struct.device* %25, %struct.iommu_domain* %26, %struct.iommu_resv_region* %27) #9, !dbg !5013
  br label %if.end27, !dbg !5013

if.end27:                                         ; preds = %if.then24, %for.body
  %28 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5019
  %start28 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %28, i32 0, i32 1, !dbg !5019
  %29 = load i64, i64* %start28, align 8, !dbg !5019
  %30 = load i64, i64* %pg_size, align 8, !dbg !5019
  %sub = sub i64 %30, 1, !dbg !5019
  %add = add i64 %29, %sub, !dbg !5019
  %31 = load i64, i64* %pg_size, align 8, !dbg !5019
  %sub29 = sub i64 %31, 1, !dbg !5019
  %neg = xor i64 %sub29, -1, !dbg !5019
  %and = and i64 %add, %neg, !dbg !5019
  store i64 %and, i64* %start, align 8, !dbg !5020
  %32 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5021
  %start30 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %32, i32 0, i32 1, !dbg !5021
  %33 = load i64, i64* %start30, align 8, !dbg !5021
  %34 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5021
  %length = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %34, i32 0, i32 2, !dbg !5021
  %35 = load i64, i64* %length, align 8, !dbg !5021
  %add31 = add i64 %33, %35, !dbg !5021
  %36 = load i64, i64* %pg_size, align 8, !dbg !5021
  %sub32 = sub i64 %36, 1, !dbg !5021
  %add33 = add i64 %add31, %sub32, !dbg !5021
  %37 = load i64, i64* %pg_size, align 8, !dbg !5021
  %sub34 = sub i64 %37, 1, !dbg !5021
  %neg35 = xor i64 %sub34, -1, !dbg !5021
  %and36 = and i64 %add33, %neg35, !dbg !5021
  store i64 %and36, i64* %end, align 8, !dbg !5022
  %38 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5023
  %type37 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %38, i32 0, i32 4, !dbg !5025
  %39 = load i32, i32* %type37, align 4, !dbg !5025
  %cmp38 = icmp ne i32 %39, 0, !dbg !5026
  br i1 %cmp38, label %land.lhs.true, label %if.end44, !dbg !5027

land.lhs.true:                                    ; preds = %if.end27
  %40 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5028
  %type40 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %40, i32 0, i32 4, !dbg !5029
  %41 = load i32, i32* %type40, align 4, !dbg !5029
  %cmp41 = icmp ne i32 %41, 1, !dbg !5030
  br i1 %cmp41, label %if.then43, label %if.end44, !dbg !5031

if.then43:                                        ; preds = %land.lhs.true
  br label %for.inc58, !dbg !5032

if.end44:                                         ; preds = %land.lhs.true, %if.end27
  %42 = load i64, i64* %start, align 8, !dbg !5033
  store i64 %42, i64* %addr, align 8, !dbg !5035
  br label %for.cond45, !dbg !5036

for.cond45:                                       ; preds = %for.inc, %if.end44
  %43 = load i64, i64* %addr, align 8, !dbg !5037
  %44 = load i64, i64* %end, align 8, !dbg !5039
  %cmp46 = icmp ult i64 %43, %44, !dbg !5040
  br i1 %cmp46, label %for.body48, label %for.end, !dbg !5041

for.body48:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i64* %phys_addr, metadata !5042, metadata !DIExpression()), !dbg !5044
  %45 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !5045
  %46 = load i64, i64* %addr, align 8, !dbg !5046
  %call49 = call i64 @iommu_iova_to_phys(%struct.iommu_domain* %45, i64 %46) #9, !dbg !5047
  store i64 %call49, i64* %phys_addr, align 8, !dbg !5048
  %47 = load i64, i64* %phys_addr, align 8, !dbg !5049
  %tobool50 = icmp ne i64 %47, 0, !dbg !5049
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !5051

if.then51:                                        ; preds = %for.body48
  br label %for.inc, !dbg !5052

if.end52:                                         ; preds = %for.body48
  %48 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !5053
  %49 = load i64, i64* %addr, align 8, !dbg !5054
  %50 = load i64, i64* %addr, align 8, !dbg !5055
  %51 = load i64, i64* %pg_size, align 8, !dbg !5056
  %52 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5057
  %prot = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %52, i32 0, i32 3, !dbg !5058
  %53 = load i32, i32* %prot, align 8, !dbg !5058
  %call53 = call i32 @iommu_map(%struct.iommu_domain* %48, i64 %49, i64 %50, i64 %51, i32 %53) #9, !dbg !5059
  store i32 %call53, i32* %ret, align 4, !dbg !5060
  %54 = load i32, i32* %ret, align 4, !dbg !5061
  %tobool54 = icmp ne i32 %54, 0, !dbg !5061
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !5063

if.then55:                                        ; preds = %if.end52
  br label %out, !dbg !5064

if.end56:                                         ; preds = %if.end52
  br label %for.inc, !dbg !5065

for.inc:                                          ; preds = %if.end56, %if.then51
  %55 = load i64, i64* %pg_size, align 8, !dbg !5066
  %56 = load i64, i64* %addr, align 8, !dbg !5067
  %add57 = add i64 %56, %55, !dbg !5067
  store i64 %add57, i64* %addr, align 8, !dbg !5067
  br label %for.cond45, !dbg !5068, !llvm.loop !5069

for.end:                                          ; preds = %for.cond45
  br label %for.inc58, !dbg !5071

for.inc58:                                        ; preds = %for.end, %if.then43
  call void @llvm.dbg.declare(metadata i8** %__mptr59, metadata !5072, metadata !DIExpression()), !dbg !5074
  %57 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5074
  %list60 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %57, i32 0, i32 0, !dbg !5074
  %next61 = getelementptr inbounds %struct.list_head, %struct.list_head* %list60, i32 0, i32 0, !dbg !5074
  %58 = load %struct.list_head*, %struct.list_head** %next61, align 8, !dbg !5074
  %59 = bitcast %struct.list_head* %58 to i8*, !dbg !5074
  store i8* %59, i8** %__mptr59, align 8, !dbg !5074
  br label %do.body62, !dbg !5074

do.body62:                                        ; preds = %for.inc58
  br label %do.end63, !dbg !5075

do.end63:                                         ; preds = %do.body62
  %60 = load i8*, i8** %__mptr59, align 8, !dbg !5074
  %add.ptr65 = getelementptr i8, i8* %60, i64 0, !dbg !5074
  %61 = bitcast i8* %add.ptr65 to %struct.iommu_resv_region*, !dbg !5074
  store %struct.iommu_resv_region* %61, %struct.iommu_resv_region** %tmp64, align 8, !dbg !5075
  %62 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp64, align 8, !dbg !5074
  store %struct.iommu_resv_region* %62, %struct.iommu_resv_region** %entry1, align 8, !dbg !4999
  br label %for.cond, !dbg !4999, !llvm.loop !5077

for.end66:                                        ; preds = %for.cond
  %63 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !5079
  call void @iommu_flush_iotlb_all(%struct.iommu_domain* %63) #9, !dbg !5080
  br label %out, !dbg !5080

out:                                              ; preds = %for.end66, %if.then55
  call void @llvm.dbg.label(metadata !5081), !dbg !5082
  %64 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5083
  call void @iommu_put_resv_regions(%struct.device* %64, %struct.list_head* %mappings) #9, !dbg !5084
  %65 = load i32, i32* %ret, align 4, !dbg !5085
  store i32 %65, i32* %retval, align 4, !dbg !5086
  br label %return, !dbg !5086

return:                                           ; preds = %out, %if.then
  %66 = load i32, i32* %retval, align 4, !dbg !5087
  ret i32 %66, !dbg !5087
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_release_device(%struct.device* %dev) #1 !dbg !5088 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !5091, metadata !DIExpression()), !dbg !5092
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5093
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !5094
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !5094
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !5095
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !5095
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !5092
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5096
  %iommu = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 33, !dbg !5098
  %4 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !5098
  %tobool = icmp ne %struct.dev_iommu* %4, null, !dbg !5096
  br i1 %tobool, label %if.end, label %if.then, !dbg !5099

if.then:                                          ; preds = %entry
  br label %return, !dbg !5100

if.end:                                           ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5101
  %iommu1 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 33, !dbg !5102
  %6 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu1, align 8, !dbg !5102
  %iommu_dev = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %6, i32 0, i32 3, !dbg !5103
  %7 = load %struct.iommu_device*, %struct.iommu_device** %iommu_dev, align 8, !dbg !5103
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5104
  call void @iommu_device_unlink(%struct.iommu_device* %7, %struct.device* %8) #9, !dbg !5105
  %9 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5106
  %release_device = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %9, i32 0, i32 12, !dbg !5107
  %10 = load void (%struct.device*)*, void (%struct.device*)** %release_device, align 8, !dbg !5107
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5108
  call void %10(%struct.device* %11) #9, !dbg !5106
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5109
  call void @iommu_group_remove_device(%struct.device* %12) #9, !dbg !5110
  %13 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5111
  %owner = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %13, i32 0, i32 40, !dbg !5112
  %14 = load %struct.module*, %struct.module** %owner, align 8, !dbg !5112
  call void @module_put(%struct.module* %14) #9, !dbg !5113
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5114
  call void @dev_iommu_free(%struct.device* %15) #9, !dbg !5115
  br label %return, !dbg !5116

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5116
}

; Function Attrs: noredzone
declare dso_local void @iommu_device_unlink(%struct.iommu_device*, %struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_group_remove_device(%struct.device* %dev) #1 !dbg !5117 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %tmp_device = alloca %struct.group_device*, align 8
  %device = alloca %struct.group_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.group_device*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.group_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5118, metadata !DIExpression()), !dbg !5119
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !5120, metadata !DIExpression()), !dbg !5121
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5122
  %iommu_group = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 32, !dbg !5123
  %1 = load %struct.iommu_group*, %struct.iommu_group** %iommu_group, align 8, !dbg !5123
  store %struct.iommu_group* %1, %struct.iommu_group** %group, align 8, !dbg !5121
  call void @llvm.dbg.declare(metadata %struct.group_device** %tmp_device, metadata !5124, metadata !DIExpression()), !dbg !5125
  call void @llvm.dbg.declare(metadata %struct.group_device** %device, metadata !5126, metadata !DIExpression()), !dbg !5127
  store %struct.group_device* null, %struct.group_device** %device, align 8, !dbg !5127
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5128
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5128
  %id = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %3, i32 0, i32 8, !dbg !5128
  %4 = load i32, i32* %id, align 8, !dbg !5128
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %2, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0), i32 %4) #10, !dbg !5128
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5129
  %notifier = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %5, i32 0, i32 4, !dbg !5130
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5131
  %7 = bitcast %struct.device* %6 to i8*, !dbg !5131
  %call = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 2, i8* %7) #9, !dbg !5132
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5133
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %8, i32 0, i32 3, !dbg !5134
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !5135
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5136, metadata !DIExpression()), !dbg !5139
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5139
  %devices = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %9, i32 0, i32 2, !dbg !5139
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !5139
  %10 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5139
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !5139
  store i8* %11, i8** %__mptr, align 8, !dbg !5139
  br label %do.body, !dbg !5139

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5140

do.end:                                           ; preds = %do.body
  %12 = load i8*, i8** %__mptr, align 8, !dbg !5139
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !5139
  %13 = bitcast i8* %add.ptr to %struct.group_device*, !dbg !5139
  store %struct.group_device* %13, %struct.group_device** %tmp, align 8, !dbg !5140
  %14 = load %struct.group_device*, %struct.group_device** %tmp, align 8, !dbg !5139
  store %struct.group_device* %14, %struct.group_device** %tmp_device, align 8, !dbg !5142
  br label %for.cond, !dbg !5142

for.cond:                                         ; preds = %do.end9, %do.end
  %15 = load %struct.group_device*, %struct.group_device** %tmp_device, align 8, !dbg !5143
  %list = getelementptr inbounds %struct.group_device, %struct.group_device* %15, i32 0, i32 0, !dbg !5143
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5143
  %devices1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %16, i32 0, i32 2, !dbg !5143
  %cmp = icmp eq %struct.list_head* %list, %devices1, !dbg !5143
  %lnot = xor i1 %cmp, true, !dbg !5143
  br i1 %lnot, label %for.body, label %for.end, !dbg !5142

for.body:                                         ; preds = %for.cond
  %17 = load %struct.group_device*, %struct.group_device** %tmp_device, align 8, !dbg !5145
  %dev2 = getelementptr inbounds %struct.group_device, %struct.group_device* %17, i32 0, i32 1, !dbg !5148
  %18 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5148
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5149
  %cmp3 = icmp eq %struct.device* %18, %19, !dbg !5150
  br i1 %cmp3, label %if.then, label %if.end, !dbg !5151

if.then:                                          ; preds = %for.body
  %20 = load %struct.group_device*, %struct.group_device** %tmp_device, align 8, !dbg !5152
  store %struct.group_device* %20, %struct.group_device** %device, align 8, !dbg !5154
  %21 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5155
  %list4 = getelementptr inbounds %struct.group_device, %struct.group_device* %21, i32 0, i32 0, !dbg !5156
  call void @list_del(%struct.list_head* %list4) #9, !dbg !5157
  br label %for.end, !dbg !5158

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5159

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !5160, metadata !DIExpression()), !dbg !5162
  %22 = load %struct.group_device*, %struct.group_device** %tmp_device, align 8, !dbg !5162
  %list6 = getelementptr inbounds %struct.group_device, %struct.group_device* %22, i32 0, i32 0, !dbg !5162
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0, !dbg !5162
  %23 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !5162
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !5162
  store i8* %24, i8** %__mptr5, align 8, !dbg !5162
  br label %do.body8, !dbg !5162

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !5163

do.end9:                                          ; preds = %do.body8
  %25 = load i8*, i8** %__mptr5, align 8, !dbg !5162
  %add.ptr11 = getelementptr i8, i8* %25, i64 0, !dbg !5162
  %26 = bitcast i8* %add.ptr11 to %struct.group_device*, !dbg !5162
  store %struct.group_device* %26, %struct.group_device** %tmp10, align 8, !dbg !5163
  %27 = load %struct.group_device*, %struct.group_device** %tmp10, align 8, !dbg !5162
  store %struct.group_device* %27, %struct.group_device** %tmp_device, align 8, !dbg !5143
  br label %for.cond, !dbg !5143, !llvm.loop !5165

for.end:                                          ; preds = %if.then, %for.cond
  %28 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5167
  %mutex12 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %28, i32 0, i32 3, !dbg !5168
  call void @mutex_unlock(%struct.mutex* %mutex12) #9, !dbg !5169
  %29 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5170
  %tobool = icmp ne %struct.group_device* %29, null, !dbg !5170
  br i1 %tobool, label %if.end14, label %if.then13, !dbg !5172

if.then13:                                        ; preds = %for.end
  br label %return, !dbg !5173

if.end14:                                         ; preds = %for.end
  %30 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5174
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %30, i32 0, i32 1, !dbg !5175
  %31 = load %struct.kobject*, %struct.kobject** %devices_kobj, align 8, !dbg !5175
  %32 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5176
  %name = getelementptr inbounds %struct.group_device, %struct.group_device* %32, i32 0, i32 2, !dbg !5177
  %33 = load i8*, i8** %name, align 8, !dbg !5177
  call void @sysfs_remove_link(%struct.kobject* %31, i8* %33) #9, !dbg !5178
  %34 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5179
  %kobj = getelementptr inbounds %struct.device, %struct.device* %34, i32 0, i32 0, !dbg !5180
  call void @sysfs_remove_link(%struct.kobject* %kobj, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !5181
  %35 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5182
  %id15 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %35, i32 0, i32 8, !dbg !5183
  %36 = load i32, i32* %id15, align 8, !dbg !5183
  %37 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5184
  call void @trace_remove_device_from_group(i32 %36, %struct.device* %37) #9, !dbg !5185
  %38 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5186
  %name16 = getelementptr inbounds %struct.group_device, %struct.group_device* %38, i32 0, i32 2, !dbg !5187
  %39 = load i8*, i8** %name16, align 8, !dbg !5187
  call void @kfree(i8* %39) #9, !dbg !5188
  %40 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5189
  %41 = bitcast %struct.group_device* %40 to i8*, !dbg !5189
  call void @kfree(i8* %41) #9, !dbg !5190
  %42 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5191
  %iommu_group17 = getelementptr inbounds %struct.device, %struct.device* %42, i32 0, i32 32, !dbg !5192
  store %struct.iommu_group* null, %struct.iommu_group** %iommu_group17, align 8, !dbg !5193
  %43 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5194
  %devices_kobj18 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %43, i32 0, i32 1, !dbg !5195
  %44 = load %struct.kobject*, %struct.kobject** %devices_kobj18, align 8, !dbg !5195
  call void @kobject_put(%struct.kobject* %44) #9, !dbg !5196
  br label %return, !dbg !5197

return:                                           ; preds = %if.end14, %if.then13
  ret void, !dbg !5197
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @module_put(%struct.module* %module) #1 !dbg !5198 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !5202, metadata !DIExpression()), !dbg !5203
  ret void, !dbg !5204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_iommu_free(%struct.device* %dev) #1 !dbg !5205 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5206, metadata !DIExpression()), !dbg !5207
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5208
  call void @iommu_fwspec_free(%struct.device* %0) #9, !dbg !5209
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5210
  %iommu = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 33, !dbg !5211
  %2 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !5211
  %3 = bitcast %struct.dev_iommu* %2 to i8*, !dbg !5210
  call void @kfree(i8* %3) #9, !dbg !5212
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5213
  %iommu1 = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 33, !dbg !5214
  store %struct.dev_iommu* null, %struct.dev_iommu** %iommu1, align 8, !dbg !5215
  ret void, !dbg !5216
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_set_def_domain_type(i8* %str) #0 section ".init.text" !dbg !5217 {
entry:
  %retval = alloca i32, align 4
  %str.addr = alloca i8*, align 8
  %pt = alloca i8, align 1
  %ret = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata i8* %pt, metadata !5220, metadata !DIExpression()), !dbg !5221
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5222, metadata !DIExpression()), !dbg !5223
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5224
  %call = call i32 @kstrtobool(i8* %0, i8* %pt) #9, !dbg !5225
  store i32 %call, i32* %ret, align 4, !dbg !5226
  %1 = load i32, i32* %ret, align 4, !dbg !5227
  %tobool = icmp ne i32 %1, 0, !dbg !5227
  br i1 %tobool, label %if.then, label %if.end, !dbg !5229

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !5230
  store i32 %2, i32* %retval, align 4, !dbg !5231
  br label %return, !dbg !5231

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %pt, align 1, !dbg !5232
  %tobool1 = trunc i8 %3 to i1, !dbg !5232
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !5234

if.then2:                                         ; preds = %if.end
  call void @iommu_set_default_passthrough(i1 zeroext true) #9, !dbg !5235
  br label %if.end3, !dbg !5235

if.else:                                          ; preds = %if.end
  call void @iommu_set_default_translated(i1 zeroext true) #9, !dbg !5236
  br label %if.end3

if.end3:                                          ; preds = %if.else, %if.then2
  store i32 0, i32* %retval, align 4, !dbg !5237
  br label %return, !dbg !5237

return:                                           ; preds = %if.end3, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !5238
  ret i32 %4, !dbg !5238
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_dma_setup(i8* %str) #0 section ".init.text" !dbg !5239 {
entry:
  %str.addr = alloca i8*, align 8
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5240, metadata !DIExpression()), !dbg !5241
  %0 = load i8*, i8** %str.addr, align 8, !dbg !5242
  %call = call i32 @kstrtobool(i8* %0, i8* @iommu_dma_strict) #9, !dbg !5243
  ret i32 %call, !dbg !5244
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_get_group_resv_regions(%struct.iommu_group* %group, %struct.list_head* %head) #1 !dbg !5245 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  %device = alloca %struct.group_device*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.group_device*, align 8
  %dev_resv_regions = alloca %struct.list_head, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.group_device*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5248, metadata !DIExpression()), !dbg !5249
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !5250, metadata !DIExpression()), !dbg !5251
  call void @llvm.dbg.declare(metadata %struct.group_device** %device, metadata !5252, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5254, metadata !DIExpression()), !dbg !5255
  store i32 0, i32* %ret, align 4, !dbg !5255
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5256
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 3, !dbg !5257
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !5258
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5259, metadata !DIExpression()), !dbg !5262
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5262
  %devices = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 2, !dbg !5262
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !5262
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5262
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !5262
  store i8* %3, i8** %__mptr, align 8, !dbg !5262
  br label %do.body, !dbg !5262

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5263

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !5262
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !5262
  %5 = bitcast i8* %add.ptr to %struct.group_device*, !dbg !5262
  store %struct.group_device* %5, %struct.group_device** %tmp, align 8, !dbg !5263
  %6 = load %struct.group_device*, %struct.group_device** %tmp, align 8, !dbg !5262
  store %struct.group_device* %6, %struct.group_device** %device, align 8, !dbg !5265
  br label %for.cond, !dbg !5265

for.cond:                                         ; preds = %do.end7, %do.end
  %7 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5266
  %list = getelementptr inbounds %struct.group_device, %struct.group_device* %7, i32 0, i32 0, !dbg !5266
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5266
  %devices1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %8, i32 0, i32 2, !dbg !5266
  %cmp = icmp eq %struct.list_head* %list, %devices1, !dbg !5266
  %lnot = xor i1 %cmp, true, !dbg !5266
  br i1 %lnot, label %for.body, label %for.end, !dbg !5265

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.list_head* %dev_resv_regions, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @INIT_LIST_HEAD(%struct.list_head* %dev_resv_regions) #9, !dbg !5271
  %9 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5272
  %dev = getelementptr inbounds %struct.group_device, %struct.group_device* %9, i32 0, i32 1, !dbg !5273
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !5273
  call void @iommu_get_resv_regions(%struct.device* %10, %struct.list_head* %dev_resv_regions) #9, !dbg !5274
  %11 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !5275
  %call = call i32 @iommu_insert_device_resv_regions(%struct.list_head* %dev_resv_regions, %struct.list_head* %11) #9, !dbg !5276
  store i32 %call, i32* %ret, align 4, !dbg !5277
  %12 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5278
  %dev2 = getelementptr inbounds %struct.group_device, %struct.group_device* %12, i32 0, i32 1, !dbg !5279
  %13 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !5279
  call void @iommu_put_resv_regions(%struct.device* %13, %struct.list_head* %dev_resv_regions) #9, !dbg !5280
  %14 = load i32, i32* %ret, align 4, !dbg !5281
  %tobool = icmp ne i32 %14, 0, !dbg !5281
  br i1 %tobool, label %if.then, label %if.end, !dbg !5283

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5284

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5285

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !5286, metadata !DIExpression()), !dbg !5288
  %15 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5288
  %list4 = getelementptr inbounds %struct.group_device, %struct.group_device* %15, i32 0, i32 0, !dbg !5288
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !5288
  %16 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !5288
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !5288
  store i8* %17, i8** %__mptr3, align 8, !dbg !5288
  br label %do.body6, !dbg !5288

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !5289

do.end7:                                          ; preds = %do.body6
  %18 = load i8*, i8** %__mptr3, align 8, !dbg !5288
  %add.ptr9 = getelementptr i8, i8* %18, i64 0, !dbg !5288
  %19 = bitcast i8* %add.ptr9 to %struct.group_device*, !dbg !5288
  store %struct.group_device* %19, %struct.group_device** %tmp8, align 8, !dbg !5289
  %20 = load %struct.group_device*, %struct.group_device** %tmp8, align 8, !dbg !5288
  store %struct.group_device* %20, %struct.group_device** %device, align 8, !dbg !5266
  br label %for.cond, !dbg !5266, !llvm.loop !5291

for.end:                                          ; preds = %if.then, %for.cond
  %21 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5293
  %mutex10 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %21, i32 0, i32 3, !dbg !5294
  call void @mutex_unlock(%struct.mutex* %mutex10) #9, !dbg !5295
  %22 = load i32, i32* %ret, align 4, !dbg !5296
  ret i32 %22, !dbg !5297
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 !dbg !5298 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5299, metadata !DIExpression()), !dbg !5300
  br label %do.body, !dbg !5301

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !5302

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !5304

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !5302

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5306
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5306
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !5306
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !5306
  br label %do.end3, !dbg !5306

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !5302

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5308
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5309
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !5310
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !5311
  ret void, !dbg !5312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_get_resv_regions(%struct.device* %dev, %struct.list_head* %list) #1 !dbg !5313 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %list.addr = alloca %struct.list_head*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5314, metadata !DIExpression()), !dbg !5315
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5316, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !5318, metadata !DIExpression()), !dbg !5319
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5320
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !5321
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !5321
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !5322
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !5322
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !5319
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5323
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !5323
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5325

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5326
  %get_resv_regions = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 17, !dbg !5327
  %5 = load void (%struct.device*, %struct.list_head*)*, void (%struct.device*, %struct.list_head*)** %get_resv_regions, align 8, !dbg !5327
  %tobool1 = icmp ne void (%struct.device*, %struct.list_head*)* %5, null, !dbg !5326
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5328

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5329
  %get_resv_regions2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 17, !dbg !5330
  %7 = load void (%struct.device*, %struct.list_head*)*, void (%struct.device*, %struct.list_head*)** %get_resv_regions2, align 8, !dbg !5330
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5331
  %9 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5332
  call void %7(%struct.device* %8, %struct.list_head* %9) #9, !dbg !5329
  br label %if.end, !dbg !5329

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_insert_device_resv_regions(%struct.list_head* %dev_resv_regions, %struct.list_head* %group_resv_regions) #1 !dbg !5334 {
entry:
  %dev_resv_regions.addr = alloca %struct.list_head*, align 8
  %group_resv_regions.addr = alloca %struct.list_head*, align 8
  %entry1 = alloca %struct.iommu_resv_region*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_resv_region*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.iommu_resv_region*, align 8
  store %struct.list_head* %dev_resv_regions, %struct.list_head** %dev_resv_regions.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %dev_resv_regions.addr, metadata !5337, metadata !DIExpression()), !dbg !5338
  store %struct.list_head* %group_resv_regions, %struct.list_head** %group_resv_regions.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %group_resv_regions.addr, metadata !5339, metadata !DIExpression()), !dbg !5340
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %entry1, metadata !5341, metadata !DIExpression()), !dbg !5342
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5343, metadata !DIExpression()), !dbg !5344
  store i32 0, i32* %ret, align 4, !dbg !5344
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5345, metadata !DIExpression()), !dbg !5348
  %0 = load %struct.list_head*, %struct.list_head** %dev_resv_regions.addr, align 8, !dbg !5348
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !5348
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !5348
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !5348
  store i8* %2, i8** %__mptr, align 8, !dbg !5348
  br label %do.body, !dbg !5348

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !5349

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5348
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !5348
  %4 = bitcast i8* %add.ptr to %struct.iommu_resv_region*, !dbg !5348
  store %struct.iommu_resv_region* %4, %struct.iommu_resv_region** %tmp, align 8, !dbg !5349
  %5 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp, align 8, !dbg !5348
  store %struct.iommu_resv_region* %5, %struct.iommu_resv_region** %entry1, align 8, !dbg !5351
  br label %for.cond, !dbg !5351

for.cond:                                         ; preds = %do.end6, %do.end
  %6 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5352
  %list = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %6, i32 0, i32 0, !dbg !5352
  %7 = load %struct.list_head*, %struct.list_head** %dev_resv_regions.addr, align 8, !dbg !5352
  %cmp = icmp eq %struct.list_head* %list, %7, !dbg !5352
  %lnot = xor i1 %cmp, true, !dbg !5352
  br i1 %lnot, label %for.body, label %for.end, !dbg !5351

for.body:                                         ; preds = %for.cond
  %8 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5354
  %9 = load %struct.list_head*, %struct.list_head** %group_resv_regions.addr, align 8, !dbg !5356
  %call = call i32 @iommu_insert_resv_region(%struct.iommu_resv_region* %8, %struct.list_head* %9) #9, !dbg !5357
  store i32 %call, i32* %ret, align 4, !dbg !5358
  %10 = load i32, i32* %ret, align 4, !dbg !5359
  %tobool = icmp ne i32 %10, 0, !dbg !5359
  br i1 %tobool, label %if.then, label %if.end, !dbg !5361

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !5362

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5363

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !5364, metadata !DIExpression()), !dbg !5366
  %11 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !5366
  %list3 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %11, i32 0, i32 0, !dbg !5366
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list3, i32 0, i32 0, !dbg !5366
  %12 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !5366
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !5366
  store i8* %13, i8** %__mptr2, align 8, !dbg !5366
  br label %do.body5, !dbg !5366

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !5367

do.end6:                                          ; preds = %do.body5
  %14 = load i8*, i8** %__mptr2, align 8, !dbg !5366
  %add.ptr8 = getelementptr i8, i8* %14, i64 0, !dbg !5366
  %15 = bitcast i8* %add.ptr8 to %struct.iommu_resv_region*, !dbg !5366
  store %struct.iommu_resv_region* %15, %struct.iommu_resv_region** %tmp7, align 8, !dbg !5367
  %16 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp7, align 8, !dbg !5366
  store %struct.iommu_resv_region* %16, %struct.iommu_resv_region** %entry1, align 8, !dbg !5352
  br label %for.cond, !dbg !5352, !llvm.loop !5369

for.end:                                          ; preds = %if.then, %for.cond
  %17 = load i32, i32* %ret, align 4, !dbg !5371
  ret i32 %17, !dbg !5372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_put_resv_regions(%struct.device* %dev, %struct.list_head* %list) #1 !dbg !5373 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %list.addr = alloca %struct.list_head*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5374, metadata !DIExpression()), !dbg !5375
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !5376, metadata !DIExpression()), !dbg !5377
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !5378, metadata !DIExpression()), !dbg !5379
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5380
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !5381
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !5381
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !5382
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !5382
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !5379
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5383
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !5383
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5385

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5386
  %put_resv_regions = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 18, !dbg !5387
  %5 = load void (%struct.device*, %struct.list_head*)*, void (%struct.device*, %struct.list_head*)** %put_resv_regions, align 8, !dbg !5387
  %tobool1 = icmp ne void (%struct.device*, %struct.list_head*)* %5, null, !dbg !5386
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5388

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !5389
  %put_resv_regions2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 18, !dbg !5390
  %7 = load void (%struct.device*, %struct.list_head*)*, void (%struct.device*, %struct.list_head*)** %put_resv_regions2, align 8, !dbg !5390
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5391
  %9 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !5392
  call void %7(%struct.device* %8, %struct.list_head* %9) #9, !dbg !5389
  br label %if.end, !dbg !5389

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5393
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @iommu_group_alloc() #1 !dbg !4516 {
entry:
  %retval = alloca %struct.iommu_group*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !5394, metadata !DIExpression()), !dbg !5395
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5396, metadata !DIExpression()), !dbg !5397
  %call = call i8* @kzalloc(i64 216, i32 3264) #9, !dbg !5398
  %0 = bitcast i8* %call to %struct.iommu_group*, !dbg !5398
  store %struct.iommu_group* %0, %struct.iommu_group** %group, align 8, !dbg !5399
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5400
  %tobool = icmp ne %struct.iommu_group* %1, null, !dbg !5400
  br i1 %tobool, label %if.end, label %if.then, !dbg !5402

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #9, !dbg !5403
  %2 = bitcast i8* %call1 to %struct.iommu_group*, !dbg !5403
  store %struct.iommu_group* %2, %struct.iommu_group** %retval, align 8, !dbg !5404
  br label %return, !dbg !5404

if.end:                                           ; preds = %entry
  %3 = load %struct.kset*, %struct.kset** @iommu_group_kset, align 8, !dbg !5405
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5406
  %kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %4, i32 0, i32 0, !dbg !5407
  %kset = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 3, !dbg !5408
  store %struct.kset* %3, %struct.kset** %kset, align 8, !dbg !5409
  br label %do.body, !dbg !5410

do.body:                                          ; preds = %if.end
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5411
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %5, i32 0, i32 3, !dbg !5411
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), %struct.lock_class_key* @iommu_group_alloc.__key) #9, !dbg !5411
  br label %do.end, !dbg !5411

do.end:                                           ; preds = %do.body
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5413
  %devices = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %6, i32 0, i32 2, !dbg !5414
  call void @INIT_LIST_HEAD(%struct.list_head* %devices) #9, !dbg !5415
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5416
  %entry2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %7, i32 0, i32 11, !dbg !5417
  call void @INIT_LIST_HEAD(%struct.list_head* %entry2) #9, !dbg !5418
  br label %do.body3, !dbg !5419

do.body3:                                         ; preds = %do.end
  br label %do.body4, !dbg !5420

do.body4:                                         ; preds = %do.body3
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5422
  %notifier = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %8, i32 0, i32 4, !dbg !5422
  %rwsem = getelementptr inbounds %struct.blocking_notifier_head, %struct.blocking_notifier_head* %notifier, i32 0, i32 0, !dbg !5422
  call void @__init_rwsem(%struct.rw_semaphore* %rwsem, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), %struct.lock_class_key* @iommu_group_alloc.__key.1) #9, !dbg !5422
  br label %do.end5, !dbg !5422

do.end5:                                          ; preds = %do.body4
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5420
  %notifier6 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %9, i32 0, i32 4, !dbg !5420
  %head = getelementptr inbounds %struct.blocking_notifier_head, %struct.blocking_notifier_head* %notifier6, i32 0, i32 1, !dbg !5420
  store %struct.notifier_block* null, %struct.notifier_block** %head, align 8, !dbg !5420
  br label %do.end7, !dbg !5420

do.end7:                                          ; preds = %do.end5
  %call8 = call i32 @ida_alloc_range(%struct.ida* @iommu_group_ida, i32 0, i32 -1, i32 3264) #9, !dbg !5424
  store i32 %call8, i32* %ret, align 4, !dbg !5425
  %10 = load i32, i32* %ret, align 4, !dbg !5426
  %cmp = icmp slt i32 %10, 0, !dbg !5428
  br i1 %cmp, label %if.then9, label %if.end11, !dbg !5429

if.then9:                                         ; preds = %do.end7
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5430
  %12 = bitcast %struct.iommu_group* %11 to i8*, !dbg !5430
  call void @kfree(i8* %12) #9, !dbg !5432
  %13 = load i32, i32* %ret, align 4, !dbg !5433
  %conv = sext i32 %13 to i64, !dbg !5433
  %call10 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !5434
  %14 = bitcast i8* %call10 to %struct.iommu_group*, !dbg !5434
  store %struct.iommu_group* %14, %struct.iommu_group** %retval, align 8, !dbg !5435
  br label %return, !dbg !5435

if.end11:                                         ; preds = %do.end7
  %15 = load i32, i32* %ret, align 4, !dbg !5436
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5437
  %id = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %16, i32 0, i32 8, !dbg !5438
  store i32 %15, i32* %id, align 8, !dbg !5439
  %17 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5440
  %kobj12 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %17, i32 0, i32 0, !dbg !5441
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5442
  %id13 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %18, i32 0, i32 8, !dbg !5443
  %19 = load i32, i32* %id13, align 8, !dbg !5443
  %call14 = call i32 (%struct.kobject*, %struct.kobj_type*, %struct.kobject*, i8*, ...) @kobject_init_and_add(%struct.kobject* %kobj12, %struct.kobj_type* @iommu_group_ktype, %struct.kobject* null, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %19) #9, !dbg !5444
  store i32 %call14, i32* %ret, align 4, !dbg !5445
  %20 = load i32, i32* %ret, align 4, !dbg !5446
  %tobool15 = icmp ne i32 %20, 0, !dbg !5446
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !5448

if.then16:                                        ; preds = %if.end11
  %21 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5449
  %id17 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %21, i32 0, i32 8, !dbg !5449
  %22 = load i32, i32* %id17, align 8, !dbg !5449
  call void @ida_free(%struct.ida* @iommu_group_ida, i32 %22) #9, !dbg !5449
  %23 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5451
  %kobj18 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %23, i32 0, i32 0, !dbg !5452
  call void @kobject_put(%struct.kobject* %kobj18) #9, !dbg !5453
  %24 = load i32, i32* %ret, align 4, !dbg !5454
  %conv19 = sext i32 %24 to i64, !dbg !5454
  %call20 = call i8* @ERR_PTR(i64 %conv19) #9, !dbg !5455
  %25 = bitcast i8* %call20 to %struct.iommu_group*, !dbg !5455
  store %struct.iommu_group* %25, %struct.iommu_group** %retval, align 8, !dbg !5456
  br label %return, !dbg !5456

if.end21:                                         ; preds = %if.end11
  %26 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5457
  %kobj22 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %26, i32 0, i32 0, !dbg !5458
  %call23 = call %struct.kobject* @kobject_create_and_add(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), %struct.kobject* %kobj22) #9, !dbg !5459
  %27 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5460
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %27, i32 0, i32 1, !dbg !5461
  store %struct.kobject* %call23, %struct.kobject** %devices_kobj, align 8, !dbg !5462
  %28 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5463
  %devices_kobj24 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %28, i32 0, i32 1, !dbg !5465
  %29 = load %struct.kobject*, %struct.kobject** %devices_kobj24, align 8, !dbg !5465
  %tobool25 = icmp ne %struct.kobject* %29, null, !dbg !5463
  br i1 %tobool25, label %if.end29, label %if.then26, !dbg !5466

if.then26:                                        ; preds = %if.end21
  %30 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5467
  %kobj27 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %30, i32 0, i32 0, !dbg !5469
  call void @kobject_put(%struct.kobject* %kobj27) #9, !dbg !5470
  %call28 = call i8* @ERR_PTR(i64 -12) #9, !dbg !5471
  %31 = bitcast i8* %call28 to %struct.iommu_group*, !dbg !5471
  store %struct.iommu_group* %31, %struct.iommu_group** %retval, align 8, !dbg !5472
  br label %return, !dbg !5472

if.end29:                                         ; preds = %if.end21
  %32 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5473
  %kobj30 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %32, i32 0, i32 0, !dbg !5474
  call void @kobject_put(%struct.kobject* %kobj30) #9, !dbg !5475
  %33 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5476
  %call31 = call i32 @iommu_group_create_file(%struct.iommu_group* %33, %struct.iommu_group_attribute* @iommu_group_attr_reserved_regions) #9, !dbg !5477
  store i32 %call31, i32* %ret, align 4, !dbg !5478
  %34 = load i32, i32* %ret, align 4, !dbg !5479
  %tobool32 = icmp ne i32 %34, 0, !dbg !5479
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !5481

if.then33:                                        ; preds = %if.end29
  %35 = load i32, i32* %ret, align 4, !dbg !5482
  %conv34 = sext i32 %35 to i64, !dbg !5482
  %call35 = call i8* @ERR_PTR(i64 %conv34) #9, !dbg !5483
  %36 = bitcast i8* %call35 to %struct.iommu_group*, !dbg !5483
  store %struct.iommu_group* %36, %struct.iommu_group** %retval, align 8, !dbg !5484
  br label %return, !dbg !5484

if.end36:                                         ; preds = %if.end29
  %37 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5485
  %call37 = call i32 @iommu_group_create_file(%struct.iommu_group* %37, %struct.iommu_group_attribute* @iommu_group_attr_type) #9, !dbg !5486
  store i32 %call37, i32* %ret, align 4, !dbg !5487
  %38 = load i32, i32* %ret, align 4, !dbg !5488
  %tobool38 = icmp ne i32 %38, 0, !dbg !5488
  br i1 %tobool38, label %if.then39, label %if.end42, !dbg !5490

if.then39:                                        ; preds = %if.end36
  %39 = load i32, i32* %ret, align 4, !dbg !5491
  %conv40 = sext i32 %39 to i64, !dbg !5491
  %call41 = call i8* @ERR_PTR(i64 %conv40) #9, !dbg !5492
  %40 = bitcast i8* %call41 to %struct.iommu_group*, !dbg !5492
  store %struct.iommu_group* %40, %struct.iommu_group** %retval, align 8, !dbg !5493
  br label %return, !dbg !5493

if.end42:                                         ; preds = %if.end36
  store i32 0, i32* %tmp, align 4, !dbg !5494
  %41 = load i32, i32* %tmp, align 4, !dbg !5497
  %42 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5498
  store %struct.iommu_group* %42, %struct.iommu_group** %retval, align 8, !dbg !5499
  br label %return, !dbg !5499

return:                                           ; preds = %if.end42, %if.then39, %if.then33, %if.then26, %if.then16, %if.then9, %if.then
  %43 = load %struct.iommu_group*, %struct.iommu_group** %retval, align 8, !dbg !5500
  ret %struct.iommu_group* %43, !dbg !5500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 !dbg !5501 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5504, metadata !DIExpression()), !dbg !5508
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5514, metadata !DIExpression()), !dbg !5515
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5516, metadata !DIExpression()), !dbg !5517
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5518, metadata !DIExpression()), !dbg !5519
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5520, metadata !DIExpression()), !dbg !5524
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5526, metadata !DIExpression()), !dbg !5530
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5532, metadata !DIExpression()), !dbg !5536
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5541, metadata !DIExpression()), !dbg !5542
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5543, metadata !DIExpression()), !dbg !5544
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5545, metadata !DIExpression()), !dbg !5546
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5547, metadata !DIExpression()), !dbg !5548
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5549, metadata !DIExpression()), !dbg !5550
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5551, metadata !DIExpression()), !dbg !5552
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5553, metadata !DIExpression()), !dbg !5554
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5555, metadata !DIExpression()), !dbg !5556
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5557, metadata !DIExpression()), !dbg !5558
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5559, metadata !DIExpression()), !dbg !5560
  %0 = load i64, i64* %size.addr, align 8, !dbg !5561
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5562
  %or = or i32 %1, 256, !dbg !5563
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !5564
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #11, !dbg !5565
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !5566

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !5567
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !5568
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !5569

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !5570
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !5571
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !5572
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !5573
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5550
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !5574
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !5575
  %10 = load i32, i32* %order.i.i, align 4, !dbg !5576
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !5577
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !5578
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !5579
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #14, !dbg !5580
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !5580
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !5580
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !5580
  call void @llvm.assume(i1 %maskcond.i.i.i) #11, !dbg !5580
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !5581
  br label %kmalloc.exit, !dbg !5581

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !5582
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5583
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !5583
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !5585

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !5586
  br label %kmalloc_index.exit.i, !dbg !5586

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5587
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !5589
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !5590

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5591
  br label %kmalloc_index.exit.i, !dbg !5591

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5592
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !5594
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !5595

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5596
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !5597
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !5598

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !5599
  br label %kmalloc_index.exit.i, !dbg !5599

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5600
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !5602
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !5603

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5604
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !5605
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !5606

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !5607
  br label %kmalloc_index.exit.i, !dbg !5607

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5608
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !5610
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !5611

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !5612
  br label %kmalloc_index.exit.i, !dbg !5612

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5613
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !5615
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !5616

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !5617
  br label %kmalloc_index.exit.i, !dbg !5617

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5618
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !5620
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !5621

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !5622
  br label %kmalloc_index.exit.i, !dbg !5622

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5623
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !5625
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !5626

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !5627
  br label %kmalloc_index.exit.i, !dbg !5627

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5628
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !5630
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !5631

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !5632
  br label %kmalloc_index.exit.i, !dbg !5632

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5633
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !5635
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !5636

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !5637
  br label %kmalloc_index.exit.i, !dbg !5637

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5638
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !5640
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !5641

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !5642
  br label %kmalloc_index.exit.i, !dbg !5642

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5643
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !5645
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !5646

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !5647
  br label %kmalloc_index.exit.i, !dbg !5647

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5648
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !5650
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !5651

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !5652
  br label %kmalloc_index.exit.i, !dbg !5652

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5653
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !5655
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !5656

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !5657
  br label %kmalloc_index.exit.i, !dbg !5657

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5658
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !5660
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !5661

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !5662
  br label %kmalloc_index.exit.i, !dbg !5662

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5663
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !5665
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !5666

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !5667
  br label %kmalloc_index.exit.i, !dbg !5667

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5668
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !5670
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !5671

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !5672
  br label %kmalloc_index.exit.i, !dbg !5672

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5673
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !5675
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !5676

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !5677
  br label %kmalloc_index.exit.i, !dbg !5677

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5678
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !5680
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !5681

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !5682
  br label %kmalloc_index.exit.i, !dbg !5682

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5683
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !5685
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !5686

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !5687
  br label %kmalloc_index.exit.i, !dbg !5687

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5688
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !5690
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !5691

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !5692
  br label %kmalloc_index.exit.i, !dbg !5692

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5693
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !5695
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !5696

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !5697
  br label %kmalloc_index.exit.i, !dbg !5697

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5698
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !5700
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !5701

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !5702
  br label %kmalloc_index.exit.i, !dbg !5702

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5703
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !5705
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !5706

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !5707
  br label %kmalloc_index.exit.i, !dbg !5707

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5708
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !5710
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !5711

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !5712
  br label %kmalloc_index.exit.i, !dbg !5712

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5713
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !5715
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !5716

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !5717
  br label %kmalloc_index.exit.i, !dbg !5717

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5718
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !5720
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !5721

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !5722
  br label %kmalloc_index.exit.i, !dbg !5722

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !5723
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !5725
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !5726

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !5727
  br label %kmalloc_index.exit.i, !dbg !5727

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.23, i64 0, i64 0), i32 382, i32 0, i64 12) #11, !dbg !5728, !srcloc !5731
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 156) #11, !dbg !5732, !srcloc !5735
  unreachable, !dbg !5736

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !5737
  store i32 %45, i32* %index.i, align 4, !dbg !5738
  %46 = load i32, i32* %index.i, align 4, !dbg !5739
  %tobool.i = icmp ne i32 %46, 0, !dbg !5739
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !5741

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !5742
  br label %kmalloc.exit, !dbg !5742

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !5743
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5744
  %and.i.i = and i32 %48, 17, !dbg !5744
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !5744
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !5744
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !5744
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !5744
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !5746

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !5747
  br label %kmalloc_type.exit.i, !dbg !5747

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !5748
  %and2.i.i = and i32 %49, 1, !dbg !5749
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !5748
  %50 = zext i1 %tobool3.i.i to i64, !dbg !5748
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !5748
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !5750
  br label %kmalloc_type.exit.i, !dbg !5750

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !5751
  %idxprom.i = zext i32 %51 to i64, !dbg !5752
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !5752
  %52 = load i32, i32* %index.i, align 4, !dbg !5753
  %idxprom6.i = zext i32 %52 to i64, !dbg !5752
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !5752
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !5752
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !5754
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !5755
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5756
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5757
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #14, !dbg !5758
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !5758
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !5758
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !5758
  call void @llvm.assume(i1 %maskcond.i.i) #11, !dbg !5758
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5519
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !5759
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !5760
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !5761
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !5762
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #14, !dbg !5763
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !5764
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !5765
  store i8* %62, i8** %retval.i, align 8, !dbg !5766
  br label %kmalloc.exit, !dbg !5766

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !5767
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !5768
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #14, !dbg !5769
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !5769
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !5769
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !5769
  call void @llvm.assume(i1 %maskcond.i) #11, !dbg !5769
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !5770
  br label %kmalloc.exit, !dbg !5770

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !5771
  ret i8* %65, !dbg !5772
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #1 !dbg !5773 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !5777, metadata !DIExpression()), !dbg !5778
  %0 = load i64, i64* %error.addr, align 8, !dbg !5779
  %1 = inttoptr i64 %0 to i8*, !dbg !5780
  ret i8* %1, !dbg !5781
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local void @__init_rwsem(%struct.rw_semaphore*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noredzone
declare dso_local i32 @kobject_init_and_add(%struct.kobject*, %struct.kobj_type*, %struct.kobject*, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #3

; Function Attrs: noredzone
declare dso_local void @kobject_put(%struct.kobject*) #3

; Function Attrs: noredzone
declare dso_local %struct.kobject* @kobject_create_and_add(i8*, %struct.kobject*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_create_file(%struct.iommu_group* %group, %struct.iommu_group_attribute* %attr) #1 !dbg !5782 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %attr.addr = alloca %struct.iommu_group_attribute*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5785, metadata !DIExpression()), !dbg !5786
  store %struct.iommu_group_attribute* %attr, %struct.iommu_group_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group_attribute** %attr.addr, metadata !5787, metadata !DIExpression()), !dbg !5788
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5789
  %kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 0, !dbg !5790
  %1 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %attr.addr, align 8, !dbg !5791
  %attr1 = getelementptr inbounds %struct.iommu_group_attribute, %struct.iommu_group_attribute* %1, i32 0, i32 0, !dbg !5792
  %call = call i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* %attr1) #9, !dbg !5793
  ret i32 %call, !dbg !5794
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @iommu_group_get_by_id(i32 %id) #1 !dbg !5795 {
entry:
  %retval = alloca %struct.iommu_group*, align 8
  %id.addr = alloca i32, align 4
  %group_kobj = alloca %struct.kobject*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %name = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_group*, align 8
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !5798, metadata !DIExpression()), !dbg !5799
  call void @llvm.dbg.declare(metadata %struct.kobject** %group_kobj, metadata !5800, metadata !DIExpression()), !dbg !5801
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !5802, metadata !DIExpression()), !dbg !5803
  call void @llvm.dbg.declare(metadata i8** %name, metadata !5804, metadata !DIExpression()), !dbg !5805
  %0 = load %struct.kset*, %struct.kset** @iommu_group_kset, align 8, !dbg !5806
  %tobool = icmp ne %struct.kset* %0, null, !dbg !5806
  br i1 %tobool, label %if.end, label %if.then, !dbg !5808

if.then:                                          ; preds = %entry
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !5809
  br label %return, !dbg !5809

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %id.addr, align 4, !dbg !5810
  %call = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32 %1) #9, !dbg !5811
  store i8* %call, i8** %name, align 8, !dbg !5812
  %2 = load i8*, i8** %name, align 8, !dbg !5813
  %tobool1 = icmp ne i8* %2, null, !dbg !5813
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5815

if.then2:                                         ; preds = %if.end
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !5816
  br label %return, !dbg !5816

if.end3:                                          ; preds = %if.end
  %3 = load %struct.kset*, %struct.kset** @iommu_group_kset, align 8, !dbg !5817
  %4 = load i8*, i8** %name, align 8, !dbg !5818
  %call4 = call %struct.kobject* @kset_find_obj(%struct.kset* %3, i8* %4) #9, !dbg !5819
  store %struct.kobject* %call4, %struct.kobject** %group_kobj, align 8, !dbg !5820
  %5 = load i8*, i8** %name, align 8, !dbg !5821
  call void @kfree(i8* %5) #9, !dbg !5822
  %6 = load %struct.kobject*, %struct.kobject** %group_kobj, align 8, !dbg !5823
  %tobool5 = icmp ne %struct.kobject* %6, null, !dbg !5823
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !5825

if.then6:                                         ; preds = %if.end3
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !5826
  br label %return, !dbg !5826

if.end7:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5827, metadata !DIExpression()), !dbg !5829
  %7 = load %struct.kobject*, %struct.kobject** %group_kobj, align 8, !dbg !5829
  %8 = bitcast %struct.kobject* %7 to i8*, !dbg !5829
  store i8* %8, i8** %__mptr, align 8, !dbg !5829
  br label %do.body, !dbg !5829

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !5830

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !5829
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !5829
  %10 = bitcast i8* %add.ptr to %struct.iommu_group*, !dbg !5829
  store %struct.iommu_group* %10, %struct.iommu_group** %tmp, align 8, !dbg !5830
  %11 = load %struct.iommu_group*, %struct.iommu_group** %tmp, align 8, !dbg !5829
  store %struct.iommu_group* %11, %struct.iommu_group** %group, align 8, !dbg !5832
  br label %do.body8, !dbg !5833

do.body8:                                         ; preds = %do.end
  %12 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5834
  %id9 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %12, i32 0, i32 8, !dbg !5834
  %13 = load i32, i32* %id9, align 8, !dbg !5834
  %14 = load i32, i32* %id.addr, align 4, !dbg !5834
  %cmp = icmp ne i32 %13, %14, !dbg !5834
  %lnot = xor i1 %cmp, true, !dbg !5834
  %lnot10 = xor i1 %lnot, true, !dbg !5834
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !5834
  %conv = sext i32 %lnot.ext to i64, !dbg !5834
  %tobool11 = icmp ne i64 %conv, 0, !dbg !5834
  br i1 %tobool11, label %if.then12, label %if.end21, !dbg !5837

if.then12:                                        ; preds = %do.body8
  br label %do.body13, !dbg !5834

do.body13:                                        ; preds = %if.then12
  br label %do.body14, !dbg !5838

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !5840

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !5838

do.body16:                                        ; preds = %do.end15
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 644, i32 0, i64 12) #11, !dbg !5842, !srcloc !5844
  br label %do.end17, !dbg !5842

do.end17:                                         ; preds = %do.body16
  br label %do.body18, !dbg !5838

do.body18:                                        ; preds = %do.end17
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 258) #11, !dbg !5845, !srcloc !5848
  unreachable, !dbg !5849

do.end19:                                         ; No predecessors!
  br label %do.end20, !dbg !5838

do.end20:                                         ; preds = %do.end19
  br label %if.end21, !dbg !5838

if.end21:                                         ; preds = %do.end20, %do.body8
  br label %do.end22, !dbg !5837

do.end22:                                         ; preds = %if.end21
  %15 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5850
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %15, i32 0, i32 1, !dbg !5851
  %16 = load %struct.kobject*, %struct.kobject** %devices_kobj, align 8, !dbg !5851
  %call23 = call %struct.kobject* @kobject_get(%struct.kobject* %16) #9, !dbg !5852
  %17 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5853
  %kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %17, i32 0, i32 0, !dbg !5854
  call void @kobject_put(%struct.kobject* %kobj) #9, !dbg !5855
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !5856
  store %struct.iommu_group* %18, %struct.iommu_group** %retval, align 8, !dbg !5857
  br label %return, !dbg !5857

return:                                           ; preds = %do.end22, %if.then6, %if.then2, %if.then
  %19 = load %struct.iommu_group*, %struct.iommu_group** %retval, align 8, !dbg !5858
  ret %struct.iommu_group* %19, !dbg !5858
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kasprintf(i32, i8*, ...) #3

; Function Attrs: noredzone
declare dso_local %struct.kobject* @kset_find_obj(%struct.kset*, i8*) #3

; Function Attrs: noredzone
declare dso_local %struct.kobject* @kobject_get(%struct.kobject*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @iommu_group_get_iommudata(%struct.iommu_group* %group) #1 !dbg !5859 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5862, metadata !DIExpression()), !dbg !5863
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5864
  %iommu_data = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 5, !dbg !5865
  %1 = load i8*, i8** %iommu_data, align 8, !dbg !5865
  ret i8* %1, !dbg !5866
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_group_set_iommudata(%struct.iommu_group* %group, i8* %iommu_data, void (i8*)* %release) #1 !dbg !5867 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %iommu_data.addr = alloca i8*, align 8
  %release.addr = alloca void (i8*)*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5870, metadata !DIExpression()), !dbg !5871
  store i8* %iommu_data, i8** %iommu_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %iommu_data.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  store void (i8*)* %release, void (i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*)** %release.addr, metadata !5874, metadata !DIExpression()), !dbg !5875
  %0 = load i8*, i8** %iommu_data.addr, align 8, !dbg !5876
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5877
  %iommu_data1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 5, !dbg !5878
  store i8* %0, i8** %iommu_data1, align 8, !dbg !5879
  %2 = load void (i8*)*, void (i8*)** %release.addr, align 8, !dbg !5880
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5881
  %iommu_data_release = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %3, i32 0, i32 6, !dbg !5882
  store void (i8*)* %2, void (i8*)** %iommu_data_release, align 8, !dbg !5883
  ret void, !dbg !5884
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_group_set_name(%struct.iommu_group* %group, i8* %name) #1 !dbg !5885 {
entry:
  %retval = alloca i32, align 4
  %group.addr = alloca %struct.iommu_group*, align 8
  %name.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5888, metadata !DIExpression()), !dbg !5889
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !5890, metadata !DIExpression()), !dbg !5891
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5892, metadata !DIExpression()), !dbg !5893
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5894
  %name1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 7, !dbg !5896
  %1 = load i8*, i8** %name1, align 8, !dbg !5896
  %tobool = icmp ne i8* %1, null, !dbg !5894
  br i1 %tobool, label %if.then, label %if.end6, !dbg !5897

if.then:                                          ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5898
  call void @iommu_group_remove_file(%struct.iommu_group* %2, %struct.iommu_group_attribute* @iommu_group_attr_name) #9, !dbg !5900
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5901
  %name2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %3, i32 0, i32 7, !dbg !5902
  %4 = load i8*, i8** %name2, align 8, !dbg !5902
  call void @kfree(i8* %4) #9, !dbg !5903
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5904
  %name3 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %5, i32 0, i32 7, !dbg !5905
  store i8* null, i8** %name3, align 8, !dbg !5906
  %6 = load i8*, i8** %name.addr, align 8, !dbg !5907
  %tobool4 = icmp ne i8* %6, null, !dbg !5907
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !5909

if.then5:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !5910
  br label %return, !dbg !5910

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !5911

if.end6:                                          ; preds = %if.end, %entry
  %7 = load i8*, i8** %name.addr, align 8, !dbg !5912
  %call = call noalias i8* @kstrdup(i8* %7, i32 3264) #9, !dbg !5913
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5914
  %name7 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %8, i32 0, i32 7, !dbg !5915
  store i8* %call, i8** %name7, align 8, !dbg !5916
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5917
  %name8 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %9, i32 0, i32 7, !dbg !5919
  %10 = load i8*, i8** %name8, align 8, !dbg !5919
  %tobool9 = icmp ne i8* %10, null, !dbg !5917
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !5920

if.then10:                                        ; preds = %if.end6
  store i32 -12, i32* %retval, align 4, !dbg !5921
  br label %return, !dbg !5921

if.end11:                                         ; preds = %if.end6
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5922
  %call12 = call i32 @iommu_group_create_file(%struct.iommu_group* %11, %struct.iommu_group_attribute* @iommu_group_attr_name) #9, !dbg !5923
  store i32 %call12, i32* %ret, align 4, !dbg !5924
  %12 = load i32, i32* %ret, align 4, !dbg !5925
  %tobool13 = icmp ne i32 %12, 0, !dbg !5925
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !5927

if.then14:                                        ; preds = %if.end11
  %13 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5928
  %name15 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %13, i32 0, i32 7, !dbg !5930
  %14 = load i8*, i8** %name15, align 8, !dbg !5930
  call void @kfree(i8* %14) #9, !dbg !5931
  %15 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5932
  %name16 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %15, i32 0, i32 7, !dbg !5933
  store i8* null, i8** %name16, align 8, !dbg !5934
  %16 = load i32, i32* %ret, align 4, !dbg !5935
  store i32 %16, i32* %retval, align 4, !dbg !5936
  br label %return, !dbg !5936

if.end17:                                         ; preds = %if.end11
  store i32 0, i32* %retval, align 4, !dbg !5937
  br label %return, !dbg !5937

return:                                           ; preds = %if.end17, %if.then14, %if.then10, %if.then5
  %17 = load i32, i32* %retval, align 4, !dbg !5938
  ret i32 %17, !dbg !5938
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_group_remove_file(%struct.iommu_group* %group, %struct.iommu_group_attribute* %attr) #1 !dbg !5939 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %attr.addr = alloca %struct.iommu_group_attribute*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  store %struct.iommu_group_attribute* %attr, %struct.iommu_group_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group_attribute** %attr.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5946
  %kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 0, !dbg !5947
  %1 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %attr.addr, align 8, !dbg !5948
  %attr1 = getelementptr inbounds %struct.iommu_group_attribute, %struct.iommu_group_attribute* %1, i32 0, i32 0, !dbg !5949
  call void @sysfs_remove_file(%struct.kobject* %kobj, %struct.attribute* %attr1) #9, !dbg !5950
  ret void, !dbg !5951
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kstrdup(i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_group_add_device(%struct.iommu_group* %group, %struct.device* %dev) #1 !dbg !5952 {
entry:
  %retval = alloca i32, align 4
  %group.addr = alloca %struct.iommu_group*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %device = alloca %struct.group_device*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !5953, metadata !DIExpression()), !dbg !5954
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5957, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5959, metadata !DIExpression()), !dbg !5960
  store i32 0, i32* %i, align 4, !dbg !5960
  call void @llvm.dbg.declare(metadata %struct.group_device** %device, metadata !5961, metadata !DIExpression()), !dbg !5962
  %call = call i8* @kzalloc(i64 32, i32 3264) #9, !dbg !5963
  %0 = bitcast i8* %call to %struct.group_device*, !dbg !5963
  store %struct.group_device* %0, %struct.group_device** %device, align 8, !dbg !5964
  %1 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5965
  %tobool = icmp ne %struct.group_device* %1, null, !dbg !5965
  br i1 %tobool, label %if.end, label %if.then, !dbg !5967

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !5968
  br label %return, !dbg !5968

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5969
  %3 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5970
  %dev1 = getelementptr inbounds %struct.group_device, %struct.group_device* %3, i32 0, i32 1, !dbg !5971
  store %struct.device* %2, %struct.device** %dev1, align 8, !dbg !5972
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5973
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !5974
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5975
  %kobj2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %5, i32 0, i32 0, !dbg !5976
  %call3 = call i32 @sysfs_create_link(%struct.kobject* %kobj, %struct.kobject* %kobj2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !5977
  store i32 %call3, i32* %ret, align 4, !dbg !5978
  %6 = load i32, i32* %ret, align 4, !dbg !5979
  %tobool4 = icmp ne i32 %6, 0, !dbg !5979
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5981

if.then5:                                         ; preds = %if.end
  br label %err_free_device, !dbg !5982

if.end6:                                          ; preds = %if.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5983
  %kobj7 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 0, !dbg !5984
  %call8 = call i8* @kobject_name(%struct.kobject* %kobj7) #9, !dbg !5985
  %call9 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0), i8* %call8) #9, !dbg !5986
  %8 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5987
  %name = getelementptr inbounds %struct.group_device, %struct.group_device* %8, i32 0, i32 2, !dbg !5988
  store i8* %call9, i8** %name, align 8, !dbg !5989
  br label %rename, !dbg !5987

rename:                                           ; preds = %if.then20, %if.end6
  call void @llvm.dbg.label(metadata !5990), !dbg !5991
  %9 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !5992
  %name10 = getelementptr inbounds %struct.group_device, %struct.group_device* %9, i32 0, i32 2, !dbg !5994
  %10 = load i8*, i8** %name10, align 8, !dbg !5994
  %tobool11 = icmp ne i8* %10, null, !dbg !5992
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5995

if.then12:                                        ; preds = %rename
  store i32 -12, i32* %ret, align 4, !dbg !5996
  br label %err_remove_link, !dbg !5998

if.end13:                                         ; preds = %rename
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !5999
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %11, i32 0, i32 1, !dbg !6000
  %12 = load %struct.kobject*, %struct.kobject** %devices_kobj, align 8, !dbg !6000
  %13 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6001
  %kobj14 = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 0, !dbg !6002
  %14 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6003
  %name15 = getelementptr inbounds %struct.group_device, %struct.group_device* %14, i32 0, i32 2, !dbg !6004
  %15 = load i8*, i8** %name15, align 8, !dbg !6004
  %call16 = call i32 @sysfs_create_link_nowarn(%struct.kobject* %12, %struct.kobject* %kobj14, i8* %15) #9, !dbg !6005
  store i32 %call16, i32* %ret, align 4, !dbg !6006
  %16 = load i32, i32* %ret, align 4, !dbg !6007
  %tobool17 = icmp ne i32 %16, 0, !dbg !6007
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !6009

if.then18:                                        ; preds = %if.end13
  %17 = load i32, i32* %ret, align 4, !dbg !6010
  %cmp = icmp eq i32 %17, -17, !dbg !6013
  br i1 %cmp, label %land.lhs.true, label %if.end26, !dbg !6014

land.lhs.true:                                    ; preds = %if.then18
  %18 = load i32, i32* %i, align 4, !dbg !6015
  %cmp19 = icmp sge i32 %18, 0, !dbg !6016
  br i1 %cmp19, label %if.then20, label %if.end26, !dbg !6017

if.then20:                                        ; preds = %land.lhs.true
  %19 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6018
  %name21 = getelementptr inbounds %struct.group_device, %struct.group_device* %19, i32 0, i32 2, !dbg !6020
  %20 = load i8*, i8** %name21, align 8, !dbg !6020
  call void @kfree(i8* %20) #9, !dbg !6021
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6022
  %kobj22 = getelementptr inbounds %struct.device, %struct.device* %21, i32 0, i32 0, !dbg !6023
  %call23 = call i8* @kobject_name(%struct.kobject* %kobj22) #9, !dbg !6024
  %22 = load i32, i32* %i, align 4, !dbg !6025
  %inc = add i32 %22, 1, !dbg !6025
  store i32 %inc, i32* %i, align 4, !dbg !6025
  %call24 = call noalias i8* (i32, i8*, ...) @kasprintf(i32 3264, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i8* %call23, i32 %22) #9, !dbg !6026
  %23 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6027
  %name25 = getelementptr inbounds %struct.group_device, %struct.group_device* %23, i32 0, i32 2, !dbg !6028
  store i8* %call24, i8** %name25, align 8, !dbg !6029
  br label %rename, !dbg !6030

if.end26:                                         ; preds = %land.lhs.true, %if.then18
  br label %err_free_name, !dbg !6031

if.end27:                                         ; preds = %if.end13
  %24 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6032
  %devices_kobj28 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %24, i32 0, i32 1, !dbg !6033
  %25 = load %struct.kobject*, %struct.kobject** %devices_kobj28, align 8, !dbg !6033
  %call29 = call %struct.kobject* @kobject_get(%struct.kobject* %25) #9, !dbg !6034
  %26 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6035
  %27 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6036
  %iommu_group = getelementptr inbounds %struct.device, %struct.device* %27, i32 0, i32 32, !dbg !6037
  store %struct.iommu_group* %26, %struct.iommu_group** %iommu_group, align 8, !dbg !6038
  %28 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6039
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %28, i32 0, i32 3, !dbg !6040
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !6041
  %29 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6042
  %list = getelementptr inbounds %struct.group_device, %struct.group_device* %29, i32 0, i32 0, !dbg !6043
  %30 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6044
  %devices = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %30, i32 0, i32 2, !dbg !6045
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %devices) #9, !dbg !6046
  %31 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6047
  %domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %31, i32 0, i32 10, !dbg !6049
  %32 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !6049
  %tobool30 = icmp ne %struct.iommu_domain* %32, null, !dbg !6047
  br i1 %tobool30, label %land.lhs.true31, label %if.end37, !dbg !6050

land.lhs.true31:                                  ; preds = %if.end27
  %33 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6051
  %domain32 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %33, i32 0, i32 10, !dbg !6052
  %34 = load %struct.iommu_domain*, %struct.iommu_domain** %domain32, align 8, !dbg !6052
  %35 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6053
  %call33 = call zeroext i1 @iommu_is_attach_deferred(%struct.iommu_domain* %34, %struct.device* %35) #9, !dbg !6054
  br i1 %call33, label %if.end37, label %if.then34, !dbg !6055

if.then34:                                        ; preds = %land.lhs.true31
  %36 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6056
  %domain35 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %36, i32 0, i32 10, !dbg !6057
  %37 = load %struct.iommu_domain*, %struct.iommu_domain** %domain35, align 8, !dbg !6057
  %38 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6058
  %call36 = call i32 @__iommu_attach_device(%struct.iommu_domain* %37, %struct.device* %38) #9, !dbg !6059
  store i32 %call36, i32* %ret, align 4, !dbg !6060
  br label %if.end37, !dbg !6061

if.end37:                                         ; preds = %if.then34, %land.lhs.true31, %if.end27
  %39 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6062
  %mutex38 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %39, i32 0, i32 3, !dbg !6063
  call void @mutex_unlock(%struct.mutex* %mutex38) #9, !dbg !6064
  %40 = load i32, i32* %ret, align 4, !dbg !6065
  %tobool39 = icmp ne i32 %40, 0, !dbg !6065
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !6067

if.then40:                                        ; preds = %if.end37
  br label %err_put_group, !dbg !6068

if.end41:                                         ; preds = %if.end37
  %41 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6069
  %notifier = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %41, i32 0, i32 4, !dbg !6070
  %42 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6071
  %43 = bitcast %struct.device* %42 to i8*, !dbg !6071
  %call42 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 1, i8* %43) #9, !dbg !6072
  %44 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6073
  %id = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %44, i32 0, i32 8, !dbg !6074
  %45 = load i32, i32* %id, align 8, !dbg !6074
  %46 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6075
  call void @trace_add_device_to_group(i32 %45, %struct.device* %46) #9, !dbg !6076
  %47 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6077
  %48 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6077
  %id43 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %48, i32 0, i32 8, !dbg !6077
  %49 = load i32, i32* %id43, align 8, !dbg !6077
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %47, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i32 %49) #10, !dbg !6077
  store i32 0, i32* %retval, align 4, !dbg !6078
  br label %return, !dbg !6078

err_put_group:                                    ; preds = %if.then40
  call void @llvm.dbg.label(metadata !6079), !dbg !6080
  %50 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6081
  %mutex44 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %50, i32 0, i32 3, !dbg !6082
  call void @mutex_lock(%struct.mutex* %mutex44) #9, !dbg !6083
  %51 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6084
  %list45 = getelementptr inbounds %struct.group_device, %struct.group_device* %51, i32 0, i32 0, !dbg !6085
  call void @list_del(%struct.list_head* %list45) #9, !dbg !6086
  %52 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6087
  %mutex46 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %52, i32 0, i32 3, !dbg !6088
  call void @mutex_unlock(%struct.mutex* %mutex46) #9, !dbg !6089
  %53 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6090
  %iommu_group47 = getelementptr inbounds %struct.device, %struct.device* %53, i32 0, i32 32, !dbg !6091
  store %struct.iommu_group* null, %struct.iommu_group** %iommu_group47, align 8, !dbg !6092
  %54 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6093
  %devices_kobj48 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %54, i32 0, i32 1, !dbg !6094
  %55 = load %struct.kobject*, %struct.kobject** %devices_kobj48, align 8, !dbg !6094
  call void @kobject_put(%struct.kobject* %55) #9, !dbg !6095
  %56 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6096
  %devices_kobj49 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %56, i32 0, i32 1, !dbg !6097
  %57 = load %struct.kobject*, %struct.kobject** %devices_kobj49, align 8, !dbg !6097
  %58 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6098
  %name50 = getelementptr inbounds %struct.group_device, %struct.group_device* %58, i32 0, i32 2, !dbg !6099
  %59 = load i8*, i8** %name50, align 8, !dbg !6099
  call void @sysfs_remove_link(%struct.kobject* %57, i8* %59) #9, !dbg !6100
  br label %err_free_name, !dbg !6100

err_free_name:                                    ; preds = %err_put_group, %if.end26
  call void @llvm.dbg.label(metadata !6101), !dbg !6102
  %60 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6103
  %name51 = getelementptr inbounds %struct.group_device, %struct.group_device* %60, i32 0, i32 2, !dbg !6104
  %61 = load i8*, i8** %name51, align 8, !dbg !6104
  call void @kfree(i8* %61) #9, !dbg !6105
  br label %err_remove_link, !dbg !6105

err_remove_link:                                  ; preds = %err_free_name, %if.then12
  call void @llvm.dbg.label(metadata !6106), !dbg !6107
  %62 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6108
  %kobj52 = getelementptr inbounds %struct.device, %struct.device* %62, i32 0, i32 0, !dbg !6109
  call void @sysfs_remove_link(%struct.kobject* %kobj52, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !6110
  br label %err_free_device, !dbg !6110

err_free_device:                                  ; preds = %err_remove_link, %if.then5
  call void @llvm.dbg.label(metadata !6111), !dbg !6112
  %63 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6113
  %64 = bitcast %struct.group_device* %63 to i8*, !dbg !6113
  call void @kfree(i8* %64) #9, !dbg !6114
  %65 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6115
  %66 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6115
  %id53 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %66, i32 0, i32 8, !dbg !6115
  %67 = load i32, i32* %id53, align 8, !dbg !6115
  %68 = load i32, i32* %ret, align 4, !dbg !6115
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %65, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i32 %67, i32 %68) #10, !dbg !6115
  %69 = load i32, i32* %ret, align 4, !dbg !6116
  store i32 %69, i32* %retval, align 4, !dbg !6117
  br label %return, !dbg !6117

return:                                           ; preds = %err_free_device, %if.end41, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !6118
  ret i32 %70, !dbg !6118
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link(%struct.kobject*, %struct.kobject*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #1 !dbg !6119 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !6126
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !6127
  %1 = load i8*, i8** %name, align 8, !dbg !6127
  ret i8* %1, !dbg !6128
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_link_nowarn(%struct.kobject*, %struct.kobject*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @iommu_is_attach_deferred(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !6129 {
entry:
  %retval = alloca i1, align 1
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !6130, metadata !DIExpression()), !dbg !6131
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6132, metadata !DIExpression()), !dbg !6133
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !6134
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !6136
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !6136
  %is_attach_deferred = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 23, !dbg !6137
  %2 = load i1 (%struct.iommu_domain*, %struct.device*)*, i1 (%struct.iommu_domain*, %struct.device*)** %is_attach_deferred, align 8, !dbg !6137
  %tobool = icmp ne i1 (%struct.iommu_domain*, %struct.device*)* %2, null, !dbg !6134
  br i1 %tobool, label %if.then, label %if.end, !dbg !6138

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !6139
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !6140
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !6140
  %is_attach_deferred2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 23, !dbg !6141
  %5 = load i1 (%struct.iommu_domain*, %struct.device*)*, i1 (%struct.iommu_domain*, %struct.device*)** %is_attach_deferred2, align 8, !dbg !6141
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !6142
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6143
  %call = call zeroext i1 %5(%struct.iommu_domain* %6, %struct.device* %7) #9, !dbg !6139
  store i1 %call, i1* %retval, align 1, !dbg !6144
  br label %return, !dbg !6144

if.end:                                           ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !6145
  br label %return, !dbg !6145

return:                                           ; preds = %if.end, %if.then
  %8 = load i1, i1* %retval, align 1, !dbg !6146
  ret i1 %8, !dbg !6146
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head*, i64, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_add_device_to_group(i32 %group_id, %struct.device* %dev) #1 !dbg !6147 {
entry:
  %group_id.addr = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  store i32 %group_id, i32* %group_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_id.addr, metadata !6151, metadata !DIExpression()), !dbg !6152
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6153, metadata !DIExpression()), !dbg !6152
  ret void, !dbg !6152
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_link(%struct.kobject*, i8*) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_remove_device_from_group(i32 %group_id, %struct.device* %dev) #1 !dbg !6154 {
entry:
  %group_id.addr = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  store i32 %group_id, i32* %group_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %group_id.addr, metadata !6155, metadata !DIExpression()), !dbg !6156
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6157, metadata !DIExpression()), !dbg !6156
  ret void, !dbg !6156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_group_for_each_dev(%struct.iommu_group* %group, i8* %data, i32 (%struct.device*, i8*)* %fn) #1 !dbg !6158 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %data.addr = alloca i8*, align 8
  %fn.addr = alloca i32 (%struct.device*, i8*)*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6164, metadata !DIExpression()), !dbg !6165
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6166, metadata !DIExpression()), !dbg !6167
  store i32 (%struct.device*, i8*)* %fn, i32 (%struct.device*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*, i8*)** %fn.addr, metadata !6168, metadata !DIExpression()), !dbg !6169
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6170, metadata !DIExpression()), !dbg !6171
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6172
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 3, !dbg !6173
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !6174
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6175
  %2 = load i8*, i8** %data.addr, align 8, !dbg !6176
  %3 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %fn.addr, align 8, !dbg !6177
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %1, i8* %2, i32 (%struct.device*, i8*)* %3) #9, !dbg !6178
  store i32 %call, i32* %ret, align 4, !dbg !6179
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6180
  %mutex1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %4, i32 0, i32 3, !dbg !6181
  call void @mutex_unlock(%struct.mutex* %mutex1) #9, !dbg !6182
  %5 = load i32, i32* %ret, align 4, !dbg !6183
  ret i32 %5, !dbg !6184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__iommu_group_for_each_dev(%struct.iommu_group* %group, i8* %data, i32 (%struct.device*, i8*)* %fn) #1 !dbg !6185 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %data.addr = alloca i8*, align 8
  %fn.addr = alloca i32 (%struct.device*, i8*)*, align 8
  %device = alloca %struct.group_device*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.group_device*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.group_device*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6188, metadata !DIExpression()), !dbg !6189
  store i32 (%struct.device*, i8*)* %fn, i32 (%struct.device*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.device*, i8*)** %fn.addr, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.group_device** %device, metadata !6192, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6194, metadata !DIExpression()), !dbg !6195
  store i32 0, i32* %ret, align 4, !dbg !6195
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6196, metadata !DIExpression()), !dbg !6199
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6199
  %devices = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 2, !dbg !6199
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !6199
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6199
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !6199
  store i8* %2, i8** %__mptr, align 8, !dbg !6199
  br label %do.body, !dbg !6199

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6200

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !6199
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !6199
  %4 = bitcast i8* %add.ptr to %struct.group_device*, !dbg !6199
  store %struct.group_device* %4, %struct.group_device** %tmp, align 8, !dbg !6200
  %5 = load %struct.group_device*, %struct.group_device** %tmp, align 8, !dbg !6199
  store %struct.group_device* %5, %struct.group_device** %device, align 8, !dbg !6202
  br label %for.cond, !dbg !6202

for.cond:                                         ; preds = %do.end6, %do.end
  %6 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6203
  %list = getelementptr inbounds %struct.group_device, %struct.group_device* %6, i32 0, i32 0, !dbg !6203
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6203
  %devices1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %7, i32 0, i32 2, !dbg !6203
  %cmp = icmp eq %struct.list_head* %list, %devices1, !dbg !6203
  %lnot = xor i1 %cmp, true, !dbg !6203
  br i1 %lnot, label %for.body, label %for.end, !dbg !6202

for.body:                                         ; preds = %for.cond
  %8 = load i32 (%struct.device*, i8*)*, i32 (%struct.device*, i8*)** %fn.addr, align 8, !dbg !6205
  %9 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6207
  %dev = getelementptr inbounds %struct.group_device, %struct.group_device* %9, i32 0, i32 1, !dbg !6208
  %10 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6208
  %11 = load i8*, i8** %data.addr, align 8, !dbg !6209
  %call = call i32 %8(%struct.device* %10, i8* %11) #9, !dbg !6205
  store i32 %call, i32* %ret, align 4, !dbg !6210
  %12 = load i32, i32* %ret, align 4, !dbg !6211
  %tobool = icmp ne i32 %12, 0, !dbg !6211
  br i1 %tobool, label %if.then, label %if.end, !dbg !6213

if.then:                                          ; preds = %for.body
  br label %for.end, !dbg !6214

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6215

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !6216, metadata !DIExpression()), !dbg !6218
  %13 = load %struct.group_device*, %struct.group_device** %device, align 8, !dbg !6218
  %list3 = getelementptr inbounds %struct.group_device, %struct.group_device* %13, i32 0, i32 0, !dbg !6218
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %list3, i32 0, i32 0, !dbg !6218
  %14 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !6218
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !6218
  store i8* %15, i8** %__mptr2, align 8, !dbg !6218
  br label %do.body5, !dbg !6218

do.body5:                                         ; preds = %for.inc
  br label %do.end6, !dbg !6219

do.end6:                                          ; preds = %do.body5
  %16 = load i8*, i8** %__mptr2, align 8, !dbg !6218
  %add.ptr8 = getelementptr i8, i8* %16, i64 0, !dbg !6218
  %17 = bitcast i8* %add.ptr8 to %struct.group_device*, !dbg !6218
  store %struct.group_device* %17, %struct.group_device** %tmp7, align 8, !dbg !6219
  %18 = load %struct.group_device*, %struct.group_device** %tmp7, align 8, !dbg !6218
  store %struct.group_device* %18, %struct.group_device** %device, align 8, !dbg !6203
  br label %for.cond, !dbg !6203, !llvm.loop !6221

for.end:                                          ; preds = %if.then, %for.cond
  %19 = load i32, i32* %ret, align 4, !dbg !6223
  ret i32 %19, !dbg !6224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @iommu_group_ref_get(%struct.iommu_group* %group) #1 !dbg !6225 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6228, metadata !DIExpression()), !dbg !6229
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6230
  %devices_kobj = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 1, !dbg !6231
  %1 = load %struct.kobject*, %struct.kobject** %devices_kobj, align 8, !dbg !6231
  %call = call %struct.kobject* @kobject_get(%struct.kobject* %1) #9, !dbg !6232
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6233
  ret %struct.iommu_group* %2, !dbg !6234
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_group_register_notifier(%struct.iommu_group* %group, %struct.notifier_block* %nb) #1 !dbg !6235 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6238, metadata !DIExpression()), !dbg !6239
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6240, metadata !DIExpression()), !dbg !6241
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6242
  %notifier = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 4, !dbg !6243
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6244
  %call = call i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head* %notifier, %struct.notifier_block* %1) #9, !dbg !6245
  ret i32 %call, !dbg !6246
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_register(%struct.blocking_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_group_unregister_notifier(%struct.iommu_group* %group, %struct.notifier_block* %nb) #1 !dbg !6247 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %nb.addr = alloca %struct.notifier_block*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6248, metadata !DIExpression()), !dbg !6249
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !6250, metadata !DIExpression()), !dbg !6251
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6252
  %notifier = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 4, !dbg !6253
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !6254
  %call = call i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head* %notifier, %struct.notifier_block* %1) #9, !dbg !6255
  ret i32 %call, !dbg !6256
}

; Function Attrs: noredzone
declare dso_local i32 @blocking_notifier_chain_unregister(%struct.blocking_notifier_head*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_register_device_fault_handler(%struct.device* %dev, i32 (%struct.iommu_fault*, i8*)* %handler, i8* %data) #1 !dbg !4523 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %handler.addr = alloca i32 (%struct.iommu_fault*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %param = alloca %struct.dev_iommu*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6257, metadata !DIExpression()), !dbg !6258
  store i32 (%struct.iommu_fault*, i8*)* %handler, i32 (%struct.iommu_fault*, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.iommu_fault*, i8*)** %handler.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.dev_iommu** %param, metadata !6263, metadata !DIExpression()), !dbg !6264
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6265
  %iommu = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 33, !dbg !6266
  %1 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !6266
  store %struct.dev_iommu* %1, %struct.dev_iommu** %param, align 8, !dbg !6264
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6267, metadata !DIExpression()), !dbg !6268
  store i32 0, i32* %ret, align 4, !dbg !6268
  %2 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6269
  %tobool = icmp ne %struct.dev_iommu* %2, null, !dbg !6269
  br i1 %tobool, label %if.end, label %if.then, !dbg !6271

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6272
  br label %return, !dbg !6272

if.end:                                           ; preds = %entry
  %3 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6273
  %lock = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %3, i32 0, i32 0, !dbg !6274
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !6275
  %4 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6276
  %fault_param = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %4, i32 0, i32 1, !dbg !6278
  %5 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param, align 8, !dbg !6278
  %tobool1 = icmp ne %struct.iommu_fault_param* %5, null, !dbg !6276
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !6279

if.then2:                                         ; preds = %if.end
  store i32 -16, i32* %ret, align 4, !dbg !6280
  br label %done_unlock, !dbg !6282

if.end3:                                          ; preds = %if.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6283
  %call = call %struct.device* @get_device(%struct.device* %6) #9, !dbg !6284
  %call4 = call i8* @kzalloc(i64 56, i32 3264) #9, !dbg !6285
  %7 = bitcast i8* %call4 to %struct.iommu_fault_param*, !dbg !6285
  %8 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6286
  %fault_param5 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %8, i32 0, i32 1, !dbg !6287
  store %struct.iommu_fault_param* %7, %struct.iommu_fault_param** %fault_param5, align 8, !dbg !6288
  %9 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6289
  %fault_param6 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %9, i32 0, i32 1, !dbg !6291
  %10 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param6, align 8, !dbg !6291
  %tobool7 = icmp ne %struct.iommu_fault_param* %10, null, !dbg !6289
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !6292

if.then8:                                         ; preds = %if.end3
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6293
  call void @put_device(%struct.device* %11) #9, !dbg !6295
  store i32 -12, i32* %ret, align 4, !dbg !6296
  br label %done_unlock, !dbg !6297

if.end9:                                          ; preds = %if.end3
  %12 = load i32 (%struct.iommu_fault*, i8*)*, i32 (%struct.iommu_fault*, i8*)** %handler.addr, align 8, !dbg !6298
  %13 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6299
  %fault_param10 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %13, i32 0, i32 1, !dbg !6300
  %14 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param10, align 8, !dbg !6300
  %handler11 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %14, i32 0, i32 0, !dbg !6301
  store i32 (%struct.iommu_fault*, i8*)* %12, i32 (%struct.iommu_fault*, i8*)** %handler11, align 8, !dbg !6302
  %15 = load i8*, i8** %data.addr, align 8, !dbg !6303
  %16 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6304
  %fault_param12 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %16, i32 0, i32 1, !dbg !6305
  %17 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param12, align 8, !dbg !6305
  %data13 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %17, i32 0, i32 1, !dbg !6306
  store i8* %15, i8** %data13, align 8, !dbg !6307
  br label %do.body, !dbg !6308

do.body:                                          ; preds = %if.end9
  %18 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6309
  %fault_param14 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %18, i32 0, i32 1, !dbg !6309
  %19 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param14, align 8, !dbg !6309
  %lock15 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %19, i32 0, i32 3, !dbg !6309
  call void @__mutex_init(%struct.mutex* %lock15, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12, i64 0, i64 0), %struct.lock_class_key* @iommu_register_device_fault_handler.__key) #9, !dbg !6309
  br label %do.end, !dbg !6309

do.end:                                           ; preds = %do.body
  %20 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6311
  %fault_param16 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %20, i32 0, i32 1, !dbg !6312
  %21 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param16, align 8, !dbg !6312
  %faults = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %21, i32 0, i32 2, !dbg !6313
  call void @INIT_LIST_HEAD(%struct.list_head* %faults) #9, !dbg !6314
  br label %done_unlock, !dbg !6314

done_unlock:                                      ; preds = %do.end, %if.then8, %if.then2
  call void @llvm.dbg.label(metadata !6315), !dbg !6316
  %22 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6317
  %lock17 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %22, i32 0, i32 0, !dbg !6318
  call void @mutex_unlock(%struct.mutex* %lock17) #9, !dbg !6319
  %23 = load i32, i32* %ret, align 4, !dbg !6320
  store i32 %23, i32* %retval, align 4, !dbg !6321
  br label %return, !dbg !6321

return:                                           ; preds = %done_unlock, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !6322
  ret i32 %24, !dbg !6322
}

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #3

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_unregister_device_fault_handler(%struct.device* %dev) #1 !dbg !6323 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %param = alloca %struct.dev_iommu*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6324, metadata !DIExpression()), !dbg !6325
  call void @llvm.dbg.declare(metadata %struct.dev_iommu** %param, metadata !6326, metadata !DIExpression()), !dbg !6327
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6328
  %iommu = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 33, !dbg !6329
  %1 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !6329
  store %struct.dev_iommu* %1, %struct.dev_iommu** %param, align 8, !dbg !6327
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6330, metadata !DIExpression()), !dbg !6331
  store i32 0, i32* %ret, align 4, !dbg !6331
  %2 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6332
  %tobool = icmp ne %struct.dev_iommu* %2, null, !dbg !6332
  br i1 %tobool, label %if.end, label %if.then, !dbg !6334

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !6335
  br label %return, !dbg !6335

if.end:                                           ; preds = %entry
  %3 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6336
  %lock = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %3, i32 0, i32 0, !dbg !6337
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !6338
  %4 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6339
  %fault_param = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %4, i32 0, i32 1, !dbg !6341
  %5 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param, align 8, !dbg !6341
  %tobool1 = icmp ne %struct.iommu_fault_param* %5, null, !dbg !6339
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6342

if.then2:                                         ; preds = %if.end
  br label %unlock, !dbg !6343

if.end3:                                          ; preds = %if.end
  %6 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6344
  %fault_param4 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %6, i32 0, i32 1, !dbg !6346
  %7 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param4, align 8, !dbg !6346
  %faults = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %7, i32 0, i32 2, !dbg !6347
  %call = call i32 @list_empty(%struct.list_head* %faults) #9, !dbg !6348
  %tobool5 = icmp ne i32 %call, 0, !dbg !6348
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6349

if.then6:                                         ; preds = %if.end3
  store i32 -16, i32* %ret, align 4, !dbg !6350
  br label %unlock, !dbg !6352

if.end7:                                          ; preds = %if.end3
  %8 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6353
  %fault_param8 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %8, i32 0, i32 1, !dbg !6354
  %9 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param8, align 8, !dbg !6354
  %10 = bitcast %struct.iommu_fault_param* %9 to i8*, !dbg !6353
  call void @kfree(i8* %10) #9, !dbg !6355
  %11 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6356
  %fault_param9 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %11, i32 0, i32 1, !dbg !6357
  store %struct.iommu_fault_param* null, %struct.iommu_fault_param** %fault_param9, align 8, !dbg !6358
  %12 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6359
  call void @put_device(%struct.device* %12) #9, !dbg !6360
  br label %unlock, !dbg !6360

unlock:                                           ; preds = %if.end7, %if.then6, %if.then2
  call void @llvm.dbg.label(metadata !6361), !dbg !6362
  %13 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6363
  %lock10 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %13, i32 0, i32 0, !dbg !6364
  call void @mutex_unlock(%struct.mutex* %lock10) #9, !dbg !6365
  %14 = load i32, i32* %ret, align 4, !dbg !6366
  store i32 %14, i32* %retval, align 4, !dbg !6367
  br label %return, !dbg !6367

return:                                           ; preds = %unlock, %if.then
  %15 = load i32, i32* %retval, align 4, !dbg !6368
  ret i32 %15, !dbg !6368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #1 !dbg !6369 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  br label %do.body, !dbg !6376

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6378

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6376
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !6376
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6376
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !6378
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !6376
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6380
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !6381
  %conv = zext i1 %cmp to i32, !dbg !6381
  ret i32 %conv, !dbg !6382
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_report_device_fault(%struct.device* %dev, %struct.iommu_fault_event* %evt) #1 !dbg !6383 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %evt.addr = alloca %struct.iommu_fault_event*, align 8
  %param = alloca %struct.dev_iommu*, align 8
  %evt_pending = alloca %struct.iommu_fault_event*, align 8
  %fparam = alloca %struct.iommu_fault_param*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6386, metadata !DIExpression()), !dbg !6387
  store %struct.iommu_fault_event* %evt, %struct.iommu_fault_event** %evt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_fault_event** %evt.addr, metadata !6388, metadata !DIExpression()), !dbg !6389
  call void @llvm.dbg.declare(metadata %struct.dev_iommu** %param, metadata !6390, metadata !DIExpression()), !dbg !6391
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6392
  %iommu = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 33, !dbg !6393
  %1 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !6393
  store %struct.dev_iommu* %1, %struct.dev_iommu** %param, align 8, !dbg !6391
  call void @llvm.dbg.declare(metadata %struct.iommu_fault_event** %evt_pending, metadata !6394, metadata !DIExpression()), !dbg !6395
  store %struct.iommu_fault_event* null, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6395
  call void @llvm.dbg.declare(metadata %struct.iommu_fault_param** %fparam, metadata !6396, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6398, metadata !DIExpression()), !dbg !6399
  store i32 0, i32* %ret, align 4, !dbg !6399
  %2 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6400
  %tobool = icmp ne %struct.dev_iommu* %2, null, !dbg !6400
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6402

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt.addr, align 8, !dbg !6403
  %tobool1 = icmp ne %struct.iommu_fault_event* %3, null, !dbg !6403
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6404

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !6405
  br label %return, !dbg !6405

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6406
  %lock = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %4, i32 0, i32 0, !dbg !6407
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !6408
  %5 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6409
  %fault_param = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %5, i32 0, i32 1, !dbg !6410
  %6 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param, align 8, !dbg !6410
  store %struct.iommu_fault_param* %6, %struct.iommu_fault_param** %fparam, align 8, !dbg !6411
  %7 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6412
  %tobool2 = icmp ne %struct.iommu_fault_param* %7, null, !dbg !6412
  br i1 %tobool2, label %lor.lhs.false3, label %if.then5, !dbg !6414

lor.lhs.false3:                                   ; preds = %if.end
  %8 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6415
  %handler = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %8, i32 0, i32 0, !dbg !6416
  %9 = load i32 (%struct.iommu_fault*, i8*)*, i32 (%struct.iommu_fault*, i8*)** %handler, align 8, !dbg !6416
  %tobool4 = icmp ne i32 (%struct.iommu_fault*, i8*)* %9, null, !dbg !6415
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6417

if.then5:                                         ; preds = %lor.lhs.false3, %if.end
  store i32 -22, i32* %ret, align 4, !dbg !6418
  br label %done_unlock, !dbg !6420

if.end6:                                          ; preds = %lor.lhs.false3
  %10 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt.addr, align 8, !dbg !6421
  %fault = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %10, i32 0, i32 0, !dbg !6423
  %type = getelementptr inbounds %struct.iommu_fault, %struct.iommu_fault* %fault, i32 0, i32 0, !dbg !6424
  %11 = load i32, i32* %type, align 8, !dbg !6424
  %cmp = icmp eq i32 %11, 2, !dbg !6425
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !6426

land.lhs.true:                                    ; preds = %if.end6
  %12 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt.addr, align 8, !dbg !6427
  %fault7 = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %12, i32 0, i32 0, !dbg !6428
  %13 = getelementptr inbounds %struct.iommu_fault, %struct.iommu_fault* %fault7, i32 0, i32 2, !dbg !6429
  %prm = bitcast %union.anon.65* %13 to %struct.iommu_fault_page_request*, !dbg !6429
  %flags = getelementptr inbounds %struct.iommu_fault_page_request, %struct.iommu_fault_page_request* %prm, i32 0, i32 0, !dbg !6430
  %14 = load i32, i32* %flags, align 8, !dbg !6430
  %and = and i32 %14, 2, !dbg !6431
  %tobool8 = icmp ne i32 %and, 0, !dbg !6431
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !6432

if.then9:                                         ; preds = %land.lhs.true
  %15 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt.addr, align 8, !dbg !6433
  %16 = bitcast %struct.iommu_fault_event* %15 to i8*, !dbg !6433
  %call = call i8* @kmemdup(i8* %16, i64 80, i32 3264) #9, !dbg !6435
  %17 = bitcast i8* %call to %struct.iommu_fault_event*, !dbg !6435
  store %struct.iommu_fault_event* %17, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6436
  %18 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6437
  %tobool10 = icmp ne %struct.iommu_fault_event* %18, null, !dbg !6437
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !6439

if.then11:                                        ; preds = %if.then9
  store i32 -12, i32* %ret, align 4, !dbg !6440
  br label %done_unlock, !dbg !6442

if.end12:                                         ; preds = %if.then9
  %19 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6443
  %lock13 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %19, i32 0, i32 3, !dbg !6444
  call void @mutex_lock(%struct.mutex* %lock13) #9, !dbg !6445
  %20 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6446
  %list = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %20, i32 0, i32 1, !dbg !6447
  %21 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6448
  %faults = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %21, i32 0, i32 2, !dbg !6449
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %faults) #9, !dbg !6450
  %22 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6451
  %lock14 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %22, i32 0, i32 3, !dbg !6452
  call void @mutex_unlock(%struct.mutex* %lock14) #9, !dbg !6453
  br label %if.end15, !dbg !6454

if.end15:                                         ; preds = %if.end12, %land.lhs.true, %if.end6
  %23 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6455
  %handler16 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %23, i32 0, i32 0, !dbg !6456
  %24 = load i32 (%struct.iommu_fault*, i8*)*, i32 (%struct.iommu_fault*, i8*)** %handler16, align 8, !dbg !6456
  %25 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt.addr, align 8, !dbg !6457
  %fault17 = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %25, i32 0, i32 0, !dbg !6458
  %26 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6459
  %data = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %26, i32 0, i32 1, !dbg !6460
  %27 = load i8*, i8** %data, align 8, !dbg !6460
  %call18 = call i32 %24(%struct.iommu_fault* %fault17, i8* %27) #9, !dbg !6455
  store i32 %call18, i32* %ret, align 4, !dbg !6461
  %28 = load i32, i32* %ret, align 4, !dbg !6462
  %tobool19 = icmp ne i32 %28, 0, !dbg !6462
  br i1 %tobool19, label %land.lhs.true20, label %if.end26, !dbg !6464

land.lhs.true20:                                  ; preds = %if.end15
  %29 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6465
  %tobool21 = icmp ne %struct.iommu_fault_event* %29, null, !dbg !6465
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !6466

if.then22:                                        ; preds = %land.lhs.true20
  %30 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6467
  %lock23 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %30, i32 0, i32 3, !dbg !6469
  call void @mutex_lock(%struct.mutex* %lock23) #9, !dbg !6470
  %31 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6471
  %list24 = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %31, i32 0, i32 1, !dbg !6472
  call void @list_del(%struct.list_head* %list24) #9, !dbg !6473
  %32 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fparam, align 8, !dbg !6474
  %lock25 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %32, i32 0, i32 3, !dbg !6475
  call void @mutex_unlock(%struct.mutex* %lock25) #9, !dbg !6476
  %33 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt_pending, align 8, !dbg !6477
  %34 = bitcast %struct.iommu_fault_event* %33 to i8*, !dbg !6477
  call void @kfree(i8* %34) #9, !dbg !6478
  br label %if.end26, !dbg !6479

if.end26:                                         ; preds = %if.then22, %land.lhs.true20, %if.end15
  br label %done_unlock, !dbg !6465

done_unlock:                                      ; preds = %if.end26, %if.then11, %if.then5
  call void @llvm.dbg.label(metadata !6480), !dbg !6481
  %35 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6482
  %lock27 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %35, i32 0, i32 0, !dbg !6483
  call void @mutex_unlock(%struct.mutex* %lock27) #9, !dbg !6484
  %36 = load i32, i32* %ret, align 4, !dbg !6485
  store i32 %36, i32* %retval, align 4, !dbg !6486
  br label %return, !dbg !6486

return:                                           ; preds = %done_unlock, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !6487
  ret i32 %37, !dbg !6487
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_page_response(%struct.device* %dev, %struct.iommu_page_response* %msg) #1 !dbg !4528 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %msg.addr = alloca %struct.iommu_page_response*, align 8
  %needs_pasid = alloca i8, align 1
  %ret = alloca i32, align 4
  %evt = alloca %struct.iommu_fault_event*, align 8
  %prm = alloca %struct.iommu_fault_page_request*, align 8
  %param = alloca %struct.dev_iommu*, align 8
  %has_pasid = alloca i8, align 1
  %domain = alloca %struct.iommu_domain*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_fault_event*, align 8
  %__mptr59 = alloca i8*, align 8
  %tmp64 = alloca %struct.iommu_fault_event*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6488, metadata !DIExpression()), !dbg !6489
  store %struct.iommu_page_response* %msg, %struct.iommu_page_response** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_page_response** %msg.addr, metadata !6490, metadata !DIExpression()), !dbg !6491
  call void @llvm.dbg.declare(metadata i8* %needs_pasid, metadata !6492, metadata !DIExpression()), !dbg !6493
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6494, metadata !DIExpression()), !dbg !6495
  store i32 -22, i32* %ret, align 4, !dbg !6495
  call void @llvm.dbg.declare(metadata %struct.iommu_fault_event** %evt, metadata !6496, metadata !DIExpression()), !dbg !6497
  call void @llvm.dbg.declare(metadata %struct.iommu_fault_page_request** %prm, metadata !6498, metadata !DIExpression()), !dbg !6500
  call void @llvm.dbg.declare(metadata %struct.dev_iommu** %param, metadata !6501, metadata !DIExpression()), !dbg !6502
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6503
  %iommu = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 33, !dbg !6504
  %1 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !6504
  store %struct.dev_iommu* %1, %struct.dev_iommu** %param, align 8, !dbg !6502
  call void @llvm.dbg.declare(metadata i8* %has_pasid, metadata !6505, metadata !DIExpression()), !dbg !6506
  %2 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6507
  %flags = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %2, i32 0, i32 2, !dbg !6508
  %3 = load i32, i32* %flags, align 4, !dbg !6508
  %and = and i32 %3, 1, !dbg !6509
  %tobool = icmp ne i32 %and, 0, !dbg !6507
  %frombool = zext i1 %tobool to i8, !dbg !6506
  store i8 %frombool, i8* %has_pasid, align 1, !dbg !6506
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !6510, metadata !DIExpression()), !dbg !6511
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6512
  %call = call %struct.iommu_domain* @iommu_get_domain_for_dev(%struct.device* %4) #9, !dbg !6513
  store %struct.iommu_domain* %call, %struct.iommu_domain** %domain, align 8, !dbg !6511
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !6514
  %tobool1 = icmp ne %struct.iommu_domain* %5, null, !dbg !6514
  br i1 %tobool1, label %lor.lhs.false, label %if.then, !dbg !6516

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !6517
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %6, i32 0, i32 1, !dbg !6518
  %7 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !6518
  %page_response = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %7, i32 0, i32 34, !dbg !6519
  %8 = load i32 (%struct.device*, %struct.iommu_fault_event*, %struct.iommu_page_response*)*, i32 (%struct.device*, %struct.iommu_fault_event*, %struct.iommu_page_response*)** %page_response, align 8, !dbg !6519
  %tobool2 = icmp ne i32 (%struct.device*, %struct.iommu_fault_event*, %struct.iommu_page_response*)* %8, null, !dbg !6517
  br i1 %tobool2, label %if.end, label %if.then, !dbg !6520

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -19, i32* %retval, align 4, !dbg !6521
  br label %return, !dbg !6521

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6522
  %tobool3 = icmp ne %struct.dev_iommu* %9, null, !dbg !6522
  br i1 %tobool3, label %lor.lhs.false4, label %if.then6, !dbg !6524

lor.lhs.false4:                                   ; preds = %if.end
  %10 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6525
  %fault_param = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %10, i32 0, i32 1, !dbg !6526
  %11 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param, align 8, !dbg !6526
  %tobool5 = icmp ne %struct.iommu_fault_param* %11, null, !dbg !6525
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6527

if.then6:                                         ; preds = %lor.lhs.false4, %if.end
  store i32 -22, i32* %retval, align 4, !dbg !6528
  br label %return, !dbg !6528

if.end7:                                          ; preds = %lor.lhs.false4
  %12 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6529
  %version = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %12, i32 0, i32 1, !dbg !6531
  %13 = load i32, i32* %version, align 4, !dbg !6531
  %cmp = icmp ne i32 %13, 1, !dbg !6532
  br i1 %cmp, label %if.then12, label %lor.lhs.false8, !dbg !6533

lor.lhs.false8:                                   ; preds = %if.end7
  %14 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6534
  %flags9 = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %14, i32 0, i32 2, !dbg !6535
  %15 = load i32, i32* %flags9, align 4, !dbg !6535
  %and10 = and i32 %15, -2, !dbg !6536
  %tobool11 = icmp ne i32 %and10, 0, !dbg !6536
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !6537

if.then12:                                        ; preds = %lor.lhs.false8, %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !6538
  br label %return, !dbg !6538

if.end13:                                         ; preds = %lor.lhs.false8
  %16 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6539
  %fault_param14 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %16, i32 0, i32 1, !dbg !6540
  %17 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param14, align 8, !dbg !6540
  %lock = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %17, i32 0, i32 3, !dbg !6541
  call void @mutex_lock(%struct.mutex* %lock) #9, !dbg !6542
  %18 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6543
  %fault_param15 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %18, i32 0, i32 1, !dbg !6545
  %19 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param15, align 8, !dbg !6545
  %faults = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %19, i32 0, i32 2, !dbg !6546
  %call16 = call i32 @list_empty(%struct.list_head* %faults) #9, !dbg !6547
  %tobool17 = icmp ne i32 %call16, 0, !dbg !6547
  br i1 %tobool17, label %if.then18, label %if.end23, !dbg !6548

if.then18:                                        ; preds = %if.end13
  br label %do.body, !dbg !6549

do.body:                                          ; preds = %if.then18
  %call19 = call i32 @___ratelimit(%struct.ratelimit_state* @iommu_page_response._rs, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.iommu_page_response, i64 0, i64 0)) #9, !dbg !6551
  %tobool20 = icmp ne i32 %call19, 0, !dbg !6551
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !6554

if.then21:                                        ; preds = %do.body
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6551
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0)) #10, !dbg !6551
  br label %if.end22, !dbg !6551

if.end22:                                         ; preds = %if.then21, %do.body
  br label %do.end, !dbg !6554

do.end:                                           ; preds = %if.end22
  br label %done_unlock, !dbg !6555

if.end23:                                         ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6556, metadata !DIExpression()), !dbg !6559
  %21 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6559
  %fault_param24 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %21, i32 0, i32 1, !dbg !6559
  %22 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param24, align 8, !dbg !6559
  %faults25 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %22, i32 0, i32 2, !dbg !6559
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %faults25, i32 0, i32 0, !dbg !6559
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6559
  %24 = bitcast %struct.list_head* %23 to i8*, !dbg !6559
  store i8* %24, i8** %__mptr, align 8, !dbg !6559
  br label %do.body26, !dbg !6559

do.body26:                                        ; preds = %if.end23
  br label %do.end27, !dbg !6560

do.end27:                                         ; preds = %do.body26
  %25 = load i8*, i8** %__mptr, align 8, !dbg !6559
  %add.ptr = getelementptr i8, i8* %25, i64 -64, !dbg !6559
  %26 = bitcast i8* %add.ptr to %struct.iommu_fault_event*, !dbg !6559
  store %struct.iommu_fault_event* %26, %struct.iommu_fault_event** %tmp, align 8, !dbg !6560
  %27 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %tmp, align 8, !dbg !6559
  store %struct.iommu_fault_event* %27, %struct.iommu_fault_event** %evt, align 8, !dbg !6562
  br label %for.cond, !dbg !6562

for.cond:                                         ; preds = %do.end63, %do.end27
  %28 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt, align 8, !dbg !6563
  %list = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %28, i32 0, i32 1, !dbg !6563
  %29 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6563
  %fault_param28 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %29, i32 0, i32 1, !dbg !6563
  %30 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param28, align 8, !dbg !6563
  %faults29 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %30, i32 0, i32 2, !dbg !6563
  %cmp30 = icmp eq %struct.list_head* %list, %faults29, !dbg !6563
  %lnot = xor i1 %cmp30, true, !dbg !6563
  br i1 %lnot, label %for.body, label %for.end, !dbg !6562

for.body:                                         ; preds = %for.cond
  %31 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt, align 8, !dbg !6565
  %fault = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %31, i32 0, i32 0, !dbg !6567
  %32 = getelementptr inbounds %struct.iommu_fault, %struct.iommu_fault* %fault, i32 0, i32 2, !dbg !6568
  %prm31 = bitcast %union.anon.65* %32 to %struct.iommu_fault_page_request*, !dbg !6568
  store %struct.iommu_fault_page_request* %prm31, %struct.iommu_fault_page_request** %prm, align 8, !dbg !6569
  %33 = load %struct.iommu_fault_page_request*, %struct.iommu_fault_page_request** %prm, align 8, !dbg !6570
  %grpid = getelementptr inbounds %struct.iommu_fault_page_request, %struct.iommu_fault_page_request* %33, i32 0, i32 2, !dbg !6572
  %34 = load i32, i32* %grpid, align 8, !dbg !6572
  %35 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6573
  %grpid32 = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %35, i32 0, i32 4, !dbg !6574
  %36 = load i32, i32* %grpid32, align 4, !dbg !6574
  %cmp33 = icmp ne i32 %34, %36, !dbg !6575
  br i1 %cmp33, label %if.then34, label %if.end35, !dbg !6576

if.then34:                                        ; preds = %for.body
  br label %for.inc, !dbg !6577

if.end35:                                         ; preds = %for.body
  %37 = load %struct.iommu_fault_page_request*, %struct.iommu_fault_page_request** %prm, align 8, !dbg !6578
  %flags36 = getelementptr inbounds %struct.iommu_fault_page_request, %struct.iommu_fault_page_request* %37, i32 0, i32 0, !dbg !6579
  %38 = load i32, i32* %flags36, align 8, !dbg !6579
  %and37 = and i32 %38, 8, !dbg !6580
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6578
  %frombool39 = zext i1 %tobool38 to i8, !dbg !6581
  store i8 %frombool39, i8* %needs_pasid, align 1, !dbg !6581
  %39 = load i8, i8* %needs_pasid, align 1, !dbg !6582
  %tobool40 = trunc i8 %39 to i1, !dbg !6582
  br i1 %tobool40, label %land.lhs.true, label %if.end46, !dbg !6584

land.lhs.true:                                    ; preds = %if.end35
  %40 = load i8, i8* %has_pasid, align 1, !dbg !6585
  %tobool41 = trunc i8 %40 to i1, !dbg !6585
  br i1 %tobool41, label %lor.lhs.false42, label %if.then45, !dbg !6586

lor.lhs.false42:                                  ; preds = %land.lhs.true
  %41 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6587
  %pasid = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %41, i32 0, i32 3, !dbg !6588
  %42 = load i32, i32* %pasid, align 4, !dbg !6588
  %43 = load %struct.iommu_fault_page_request*, %struct.iommu_fault_page_request** %prm, align 8, !dbg !6589
  %pasid43 = getelementptr inbounds %struct.iommu_fault_page_request, %struct.iommu_fault_page_request* %43, i32 0, i32 1, !dbg !6590
  %44 = load i32, i32* %pasid43, align 4, !dbg !6590
  %cmp44 = icmp ne i32 %42, %44, !dbg !6591
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !6592

if.then45:                                        ; preds = %lor.lhs.false42, %land.lhs.true
  br label %for.inc, !dbg !6593

if.end46:                                         ; preds = %lor.lhs.false42, %if.end35
  %45 = load i8, i8* %needs_pasid, align 1, !dbg !6594
  %tobool47 = trunc i8 %45 to i1, !dbg !6594
  br i1 %tobool47, label %if.end54, label %land.lhs.true48, !dbg !6596

land.lhs.true48:                                  ; preds = %if.end46
  %46 = load i8, i8* %has_pasid, align 1, !dbg !6597
  %tobool49 = trunc i8 %46 to i1, !dbg !6597
  br i1 %tobool49, label %if.then50, label %if.end54, !dbg !6598

if.then50:                                        ; preds = %land.lhs.true48
  %47 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6599
  %flags51 = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %47, i32 0, i32 2, !dbg !6601
  %48 = load i32, i32* %flags51, align 4, !dbg !6602
  %and52 = and i32 %48, -2, !dbg !6602
  store i32 %and52, i32* %flags51, align 4, !dbg !6602
  %49 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6603
  %pasid53 = getelementptr inbounds %struct.iommu_page_response, %struct.iommu_page_response* %49, i32 0, i32 3, !dbg !6604
  store i32 0, i32* %pasid53, align 4, !dbg !6605
  br label %if.end54, !dbg !6606

if.end54:                                         ; preds = %if.then50, %land.lhs.true48, %if.end46
  %50 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !6607
  %ops55 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %50, i32 0, i32 1, !dbg !6608
  %51 = load %struct.iommu_ops*, %struct.iommu_ops** %ops55, align 8, !dbg !6608
  %page_response56 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %51, i32 0, i32 34, !dbg !6609
  %52 = load i32 (%struct.device*, %struct.iommu_fault_event*, %struct.iommu_page_response*)*, i32 (%struct.device*, %struct.iommu_fault_event*, %struct.iommu_page_response*)** %page_response56, align 8, !dbg !6609
  %53 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6610
  %54 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt, align 8, !dbg !6611
  %55 = load %struct.iommu_page_response*, %struct.iommu_page_response** %msg.addr, align 8, !dbg !6612
  %call57 = call i32 %52(%struct.device* %53, %struct.iommu_fault_event* %54, %struct.iommu_page_response* %55) #9, !dbg !6607
  store i32 %call57, i32* %ret, align 4, !dbg !6613
  %56 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt, align 8, !dbg !6614
  %list58 = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %56, i32 0, i32 1, !dbg !6615
  call void @list_del(%struct.list_head* %list58) #9, !dbg !6616
  %57 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt, align 8, !dbg !6617
  %58 = bitcast %struct.iommu_fault_event* %57 to i8*, !dbg !6617
  call void @kfree(i8* %58) #9, !dbg !6618
  br label %for.end, !dbg !6619

for.inc:                                          ; preds = %if.then45, %if.then34
  call void @llvm.dbg.declare(metadata i8** %__mptr59, metadata !6620, metadata !DIExpression()), !dbg !6622
  %59 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %evt, align 8, !dbg !6622
  %list60 = getelementptr inbounds %struct.iommu_fault_event, %struct.iommu_fault_event* %59, i32 0, i32 1, !dbg !6622
  %next61 = getelementptr inbounds %struct.list_head, %struct.list_head* %list60, i32 0, i32 0, !dbg !6622
  %60 = load %struct.list_head*, %struct.list_head** %next61, align 8, !dbg !6622
  %61 = bitcast %struct.list_head* %60 to i8*, !dbg !6622
  store i8* %61, i8** %__mptr59, align 8, !dbg !6622
  br label %do.body62, !dbg !6622

do.body62:                                        ; preds = %for.inc
  br label %do.end63, !dbg !6623

do.end63:                                         ; preds = %do.body62
  %62 = load i8*, i8** %__mptr59, align 8, !dbg !6622
  %add.ptr65 = getelementptr i8, i8* %62, i64 -64, !dbg !6622
  %63 = bitcast i8* %add.ptr65 to %struct.iommu_fault_event*, !dbg !6622
  store %struct.iommu_fault_event* %63, %struct.iommu_fault_event** %tmp64, align 8, !dbg !6623
  %64 = load %struct.iommu_fault_event*, %struct.iommu_fault_event** %tmp64, align 8, !dbg !6622
  store %struct.iommu_fault_event* %64, %struct.iommu_fault_event** %evt, align 8, !dbg !6563
  br label %for.cond, !dbg !6563, !llvm.loop !6625

for.end:                                          ; preds = %if.end54, %for.cond
  br label %done_unlock, !dbg !6626

done_unlock:                                      ; preds = %for.end, %do.end
  call void @llvm.dbg.label(metadata !6627), !dbg !6628
  %65 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !6629
  %fault_param66 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %65, i32 0, i32 1, !dbg !6630
  %66 = load %struct.iommu_fault_param*, %struct.iommu_fault_param** %fault_param66, align 8, !dbg !6630
  %lock67 = getelementptr inbounds %struct.iommu_fault_param, %struct.iommu_fault_param* %66, i32 0, i32 3, !dbg !6631
  call void @mutex_unlock(%struct.mutex* %lock67) #9, !dbg !6632
  %67 = load i32, i32* %ret, align 4, !dbg !6633
  store i32 %67, i32* %retval, align 4, !dbg !6634
  br label %return, !dbg !6634

return:                                           ; preds = %done_unlock, %if.then12, %if.then6, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !6635
  ret i32 %68, !dbg !6635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_domain* @iommu_get_domain_for_dev(%struct.device* %dev) #1 !dbg !6636 {
entry:
  %retval = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %domain = alloca %struct.iommu_domain*, align 8
  %group = alloca %struct.iommu_group*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6639, metadata !DIExpression()), !dbg !6640
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !6641, metadata !DIExpression()), !dbg !6642
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !6643, metadata !DIExpression()), !dbg !6644
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6645
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %0) #9, !dbg !6646
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !6647
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6648
  %tobool = icmp ne %struct.iommu_group* %1, null, !dbg !6648
  br i1 %tobool, label %if.end, label %if.then, !dbg !6650

if.then:                                          ; preds = %entry
  store %struct.iommu_domain* null, %struct.iommu_domain** %retval, align 8, !dbg !6651
  br label %return, !dbg !6651

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6652
  %domain1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %2, i32 0, i32 10, !dbg !6653
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain1, align 8, !dbg !6653
  store %struct.iommu_domain* %3, %struct.iommu_domain** %domain, align 8, !dbg !6654
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6655
  call void @iommu_group_put(%struct.iommu_group* %4) #9, !dbg !6656
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !6657
  store %struct.iommu_domain* %5, %struct.iommu_domain** %retval, align 8, !dbg !6658
  br label %return, !dbg !6658

return:                                           ; preds = %if.end, %if.then
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %retval, align 8, !dbg !6659
  ret %struct.iommu_domain* %6, !dbg !6659
}

; Function Attrs: noredzone
declare dso_local i32 @___ratelimit(%struct.ratelimit_state*, i8*) #3

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_group_id(%struct.iommu_group* %group) #1 !dbg !6660 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6663, metadata !DIExpression()), !dbg !6664
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6665
  %id = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 8, !dbg !6666
  %1 = load i32, i32* %id, align 8, !dbg !6666
  ret i32 %1, !dbg !6667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @generic_device_group(%struct.device* %dev) #1 !dbg !6668 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6669, metadata !DIExpression()), !dbg !6670
  %call = call %struct.iommu_group* @iommu_group_alloc() #9, !dbg !6671
  ret %struct.iommu_group* %call, !dbg !6672
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @pci_device_group(%struct.device* %dev) #1 !dbg !6673 {
entry:
  %retval = alloca %struct.iommu_group*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %data = alloca %struct.group_for_pci_data, align 8
  %bus = alloca %struct.pci_bus*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %devfns = alloca [4 x i64], align 16
  %__ret_warn_on = alloca i32, align 4
  %tmp17 = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !6676, metadata !DIExpression()), !dbg !6677
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6678, metadata !DIExpression()), !dbg !6680
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6680
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6680
  store i8* %1, i8** %__mptr, align 8, !dbg !6680
  br label %do.body, !dbg !6680

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6681

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6680
  %add.ptr = getelementptr i8, i8* %2, i64 -176, !dbg !6680
  %3 = bitcast i8* %add.ptr to %struct.pci_dev*, !dbg !6680
  store %struct.pci_dev* %3, %struct.pci_dev** %tmp, align 8, !dbg !6681
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6680
  store %struct.pci_dev* %4, %struct.pci_dev** %pdev, align 8, !dbg !6677
  call void @llvm.dbg.declare(metadata %struct.group_for_pci_data* %data, metadata !6683, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %bus, metadata !6689, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !6691, metadata !DIExpression()), !dbg !6692
  store %struct.iommu_group* null, %struct.iommu_group** %group, align 8, !dbg !6692
  call void @llvm.dbg.declare(metadata [4 x i64]* %devfns, metadata !6693, metadata !DIExpression()), !dbg !6695
  %5 = bitcast [4 x i64]* %devfns to i8*, !dbg !6695
  call void @llvm.memset.p0i8.i64(i8* align 16 %5, i8 0, i64 32, i1 false), !dbg !6695
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6696, metadata !DIExpression()), !dbg !6699
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6699
  %bus1 = getelementptr inbounds %struct.device, %struct.device* %6, i32 0, i32 5, !dbg !6699
  %7 = load %struct.bus_type*, %struct.bus_type** %bus1, align 8, !dbg !6699
  %cmp = icmp eq %struct.bus_type* %7, @pci_bus_type, !dbg !6699
  %lnot = xor i1 %cmp, true, !dbg !6699
  %lnot2 = xor i1 %lnot, true, !dbg !6699
  %lnot3 = xor i1 %lnot2, true, !dbg !6699
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6699
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6699
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !6700
  %tobool = icmp ne i32 %8, 0, !dbg !6700
  %lnot4 = xor i1 %tobool, true, !dbg !6700
  %lnot6 = xor i1 %lnot4, true, !dbg !6700
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !6700
  %conv = sext i32 %lnot.ext7 to i64, !dbg !6700
  %tobool8 = icmp ne i64 %conv, 0, !dbg !6700
  br i1 %tobool8, label %if.then, label %if.end, !dbg !6699

if.then:                                          ; preds = %do.end
  br label %do.body9, !dbg !6700

do.body9:                                         ; preds = %if.then
  br label %do.body10, !dbg !6702

do.body10:                                        ; preds = %do.body9
  br label %do.end11, !dbg !6704

do.end11:                                         ; preds = %do.body10
  br label %do.body12, !dbg !6702

do.body12:                                        ; preds = %do.end11
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1393, i32 2305, i64 12) #11, !dbg !6706, !srcloc !6708
  br label %do.end13, !dbg !6706

do.end13:                                         ; preds = %do.body12
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 271) #11, !dbg !6709, !srcloc !6711
  br label %do.body14, !dbg !6702

do.body14:                                        ; preds = %do.end13
  br label %do.end15, !dbg !6712

do.end15:                                         ; preds = %do.body14
  br label %do.end16, !dbg !6702

do.end16:                                         ; preds = %do.end15
  br label %if.end, !dbg !6702

if.end:                                           ; preds = %do.end16, %do.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !6699
  %tobool18 = icmp ne i32 %9, 0, !dbg !6699
  %lnot19 = xor i1 %tobool18, true, !dbg !6699
  %lnot21 = xor i1 %lnot19, true, !dbg !6699
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !6699
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !6699
  store i64 %conv23, i64* %tmp17, align 8, !dbg !6700
  %10 = load i64, i64* %tmp17, align 8, !dbg !6699
  %tobool24 = icmp ne i64 %10, 0, !dbg !6714
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !6715

if.then25:                                        ; preds = %if.end
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !6716
  %11 = bitcast i8* %call to %struct.iommu_group*, !dbg !6716
  store %struct.iommu_group* %11, %struct.iommu_group** %retval, align 8, !dbg !6717
  br label %return, !dbg !6717

if.end26:                                         ; preds = %if.end
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6718
  %13 = bitcast %struct.group_for_pci_data* %data to i8*, !dbg !6720
  %call27 = call i32 @pci_for_each_dma_alias(%struct.pci_dev* %12, i32 (%struct.pci_dev*, i16, i8*)* @get_pci_alias_or_group, i8* %13) #9, !dbg !6721
  %tobool28 = icmp ne i32 %call27, 0, !dbg !6721
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !6722

if.then29:                                        ; preds = %if.end26
  %group30 = getelementptr inbounds %struct.group_for_pci_data, %struct.group_for_pci_data* %data, i32 0, i32 1, !dbg !6723
  %14 = load %struct.iommu_group*, %struct.iommu_group** %group30, align 8, !dbg !6723
  store %struct.iommu_group* %14, %struct.iommu_group** %retval, align 8, !dbg !6724
  br label %return, !dbg !6724

if.end31:                                         ; preds = %if.end26
  %pdev32 = getelementptr inbounds %struct.group_for_pci_data, %struct.group_for_pci_data* %data, i32 0, i32 0, !dbg !6725
  %15 = load %struct.pci_dev*, %struct.pci_dev** %pdev32, align 8, !dbg !6725
  store %struct.pci_dev* %15, %struct.pci_dev** %pdev, align 8, !dbg !6726
  %16 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6727
  %bus33 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %16, i32 0, i32 1, !dbg !6729
  %17 = load %struct.pci_bus*, %struct.pci_bus** %bus33, align 8, !dbg !6729
  store %struct.pci_bus* %17, %struct.pci_bus** %bus, align 8, !dbg !6730
  br label %for.cond, !dbg !6731

for.cond:                                         ; preds = %for.inc, %if.end31
  %18 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6732
  %call34 = call zeroext i1 @pci_is_root_bus(%struct.pci_bus* %18) #9, !dbg !6734
  %lnot35 = xor i1 %call34, true, !dbg !6735
  br i1 %lnot35, label %for.body, label %for.end, !dbg !6736

for.body:                                         ; preds = %for.cond
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6737
  %self = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 4, !dbg !6740
  %20 = load %struct.pci_dev*, %struct.pci_dev** %self, align 8, !dbg !6740
  %tobool37 = icmp ne %struct.pci_dev* %20, null, !dbg !6737
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !6741

if.then38:                                        ; preds = %for.body
  br label %for.inc, !dbg !6742

if.end39:                                         ; preds = %for.body
  %21 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6743
  %self40 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %21, i32 0, i32 4, !dbg !6745
  %22 = load %struct.pci_dev*, %struct.pci_dev** %self40, align 8, !dbg !6745
  %call41 = call zeroext i1 @pci_acs_path_enabled(%struct.pci_dev* %22, %struct.pci_dev* null, i16 zeroext 29) #9, !dbg !6746
  br i1 %call41, label %if.then42, label %if.end43, !dbg !6747

if.then42:                                        ; preds = %if.end39
  br label %for.end, !dbg !6748

if.end43:                                         ; preds = %if.end39
  %23 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6749
  %self44 = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %23, i32 0, i32 4, !dbg !6750
  %24 = load %struct.pci_dev*, %struct.pci_dev** %self44, align 8, !dbg !6750
  store %struct.pci_dev* %24, %struct.pci_dev** %pdev, align 8, !dbg !6751
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6752
  %dev45 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 41, !dbg !6753
  %call46 = call %struct.iommu_group* @iommu_group_get(%struct.device* %dev45) #9, !dbg !6754
  store %struct.iommu_group* %call46, %struct.iommu_group** %group, align 8, !dbg !6755
  %26 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6756
  %tobool47 = icmp ne %struct.iommu_group* %26, null, !dbg !6756
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !6758

if.then48:                                        ; preds = %if.end43
  %27 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6759
  store %struct.iommu_group* %27, %struct.iommu_group** %retval, align 8, !dbg !6760
  br label %return, !dbg !6760

if.end49:                                         ; preds = %if.end43
  br label %for.inc, !dbg !6761

for.inc:                                          ; preds = %if.end49, %if.then38
  %28 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6762
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %28, i32 0, i32 1, !dbg !6763
  %29 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6763
  store %struct.pci_bus* %29, %struct.pci_bus** %bus, align 8, !dbg !6764
  br label %for.cond, !dbg !6765, !llvm.loop !6766

for.end:                                          ; preds = %if.then42, %for.cond
  %30 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6768
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %devfns, i64 0, i64 0, !dbg !6769
  %call50 = call %struct.iommu_group* @get_pci_alias_group(%struct.pci_dev* %30, i64* %arraydecay) #9, !dbg !6770
  store %struct.iommu_group* %call50, %struct.iommu_group** %group, align 8, !dbg !6771
  %31 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6772
  %tobool51 = icmp ne %struct.iommu_group* %31, null, !dbg !6772
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !6774

if.then52:                                        ; preds = %for.end
  %32 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6775
  store %struct.iommu_group* %32, %struct.iommu_group** %retval, align 8, !dbg !6776
  br label %return, !dbg !6776

if.end53:                                         ; preds = %for.end
  %33 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !6777
  %arraydecay54 = getelementptr inbounds [4 x i64], [4 x i64]* %devfns, i64 0, i64 0, !dbg !6778
  %call55 = call %struct.iommu_group* @get_pci_function_alias_group(%struct.pci_dev* %33, i64* %arraydecay54) #9, !dbg !6779
  store %struct.iommu_group* %call55, %struct.iommu_group** %group, align 8, !dbg !6780
  %34 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6781
  %tobool56 = icmp ne %struct.iommu_group* %34, null, !dbg !6781
  br i1 %tobool56, label %if.then57, label %if.end58, !dbg !6783

if.then57:                                        ; preds = %if.end53
  %35 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6784
  store %struct.iommu_group* %35, %struct.iommu_group** %retval, align 8, !dbg !6785
  br label %return, !dbg !6785

if.end58:                                         ; preds = %if.end53
  %call59 = call %struct.iommu_group* @iommu_group_alloc() #9, !dbg !6786
  store %struct.iommu_group* %call59, %struct.iommu_group** %retval, align 8, !dbg !6787
  br label %return, !dbg !6787

return:                                           ; preds = %if.end58, %if.then57, %if.then52, %if.then48, %if.then29, %if.then25
  %36 = load %struct.iommu_group*, %struct.iommu_group** %retval, align 8, !dbg !6788
  ret %struct.iommu_group* %36, !dbg !6788
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noredzone
declare dso_local i32 @pci_for_each_dma_alias(%struct.pci_dev*, i32 (%struct.pci_dev*, i16, i8*)*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_pci_alias_or_group(%struct.pci_dev* %pdev, i16 zeroext %alias, i8* %opaque) #1 !dbg !6789 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %alias.addr = alloca i16, align 2
  %opaque.addr = alloca i8*, align 8
  %data = alloca %struct.group_for_pci_data*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6792, metadata !DIExpression()), !dbg !6793
  store i16 %alias, i16* %alias.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %alias.addr, metadata !6794, metadata !DIExpression()), !dbg !6795
  store i8* %opaque, i8** %opaque.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opaque.addr, metadata !6796, metadata !DIExpression()), !dbg !6797
  call void @llvm.dbg.declare(metadata %struct.group_for_pci_data** %data, metadata !6798, metadata !DIExpression()), !dbg !6800
  %0 = load i8*, i8** %opaque.addr, align 8, !dbg !6801
  %1 = bitcast i8* %0 to %struct.group_for_pci_data*, !dbg !6801
  store %struct.group_for_pci_data* %1, %struct.group_for_pci_data** %data, align 8, !dbg !6800
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6802
  %3 = load %struct.group_for_pci_data*, %struct.group_for_pci_data** %data, align 8, !dbg !6803
  %pdev1 = getelementptr inbounds %struct.group_for_pci_data, %struct.group_for_pci_data* %3, i32 0, i32 0, !dbg !6804
  store %struct.pci_dev* %2, %struct.pci_dev** %pdev1, align 8, !dbg !6805
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6806
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %4, i32 0, i32 41, !dbg !6807
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %dev) #9, !dbg !6808
  %5 = load %struct.group_for_pci_data*, %struct.group_for_pci_data** %data, align 8, !dbg !6809
  %group = getelementptr inbounds %struct.group_for_pci_data, %struct.group_for_pci_data* %5, i32 0, i32 1, !dbg !6810
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !6811
  %6 = load %struct.group_for_pci_data*, %struct.group_for_pci_data** %data, align 8, !dbg !6812
  %group2 = getelementptr inbounds %struct.group_for_pci_data, %struct.group_for_pci_data* %6, i32 0, i32 1, !dbg !6813
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group2, align 8, !dbg !6813
  %cmp = icmp ne %struct.iommu_group* %7, null, !dbg !6814
  %conv = zext i1 %cmp to i32, !dbg !6814
  ret i32 %conv, !dbg !6815
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @pci_is_root_bus(%struct.pci_bus* %pbus) #1 !dbg !6816 {
entry:
  %pbus.addr = alloca %struct.pci_bus*, align 8
  store %struct.pci_bus* %pbus, %struct.pci_bus** %pbus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_bus** %pbus.addr, metadata !6819, metadata !DIExpression()), !dbg !6820
  %0 = load %struct.pci_bus*, %struct.pci_bus** %pbus.addr, align 8, !dbg !6821
  %parent = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %0, i32 0, i32 1, !dbg !6822
  %1 = load %struct.pci_bus*, %struct.pci_bus** %parent, align 8, !dbg !6822
  %tobool = icmp ne %struct.pci_bus* %1, null, !dbg !6823
  %lnot = xor i1 %tobool, true, !dbg !6823
  ret i1 %lnot, !dbg !6824
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_acs_path_enabled(%struct.pci_dev*, %struct.pci_dev*, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iommu_group* @get_pci_alias_group(%struct.pci_dev* %pdev, i64* %devfns) #1 !dbg !6825 {
entry:
  %retval = alloca %struct.iommu_group*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %devfns.addr = alloca i64*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %group = alloca %struct.iommu_group*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6828, metadata !DIExpression()), !dbg !6829
  store i64* %devfns, i64** %devfns.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %devfns.addr, metadata !6830, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %tmp, metadata !6832, metadata !DIExpression()), !dbg !6833
  store %struct.pci_dev* null, %struct.pci_dev** %tmp, align 8, !dbg !6833
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !6834, metadata !DIExpression()), !dbg !6835
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6836
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 6, !dbg !6838
  %1 = load i32, i32* %devfn, align 8, !dbg !6838
  %and = and i32 %1, 255, !dbg !6839
  %conv = zext i32 %and to i64, !dbg !6836
  %2 = load i64*, i64** %devfns.addr, align 8, !dbg !6840
  %call = call zeroext i1 @test_and_set_bit(i64 %conv, i64* %2) #9, !dbg !6841
  br i1 %call, label %if.then, label %if.end, !dbg !6842

if.then:                                          ; preds = %entry
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !6843
  br label %return, !dbg !6843

if.end:                                           ; preds = %entry
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6844
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %3, i32 0, i32 41, !dbg !6845
  %call1 = call %struct.iommu_group* @iommu_group_get(%struct.device* %dev) #9, !dbg !6846
  store %struct.iommu_group* %call1, %struct.iommu_group** %group, align 8, !dbg !6847
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6848
  %tobool = icmp ne %struct.iommu_group* %4, null, !dbg !6848
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !6850

if.then2:                                         ; preds = %if.end
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6851
  store %struct.iommu_group* %5, %struct.iommu_group** %retval, align 8, !dbg !6852
  br label %return, !dbg !6852

if.end3:                                          ; preds = %if.end
  br label %while.cond, !dbg !6853

while.cond:                                       ; preds = %if.end23, %if.then11, %if.end3
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6853
  %call4 = call %struct.pci_dev* @pci_get_device(i32 -1, i32 -1, %struct.pci_dev* %6) #9, !dbg !6853
  store %struct.pci_dev* %call4, %struct.pci_dev** %tmp, align 8, !dbg !6853
  %cmp = icmp ne %struct.pci_dev* %call4, null, !dbg !6853
  br i1 %cmp, label %while.body, label %while.end, !dbg !6853

while.body:                                       ; preds = %while.cond
  %7 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6854
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6857
  %cmp6 = icmp eq %struct.pci_dev* %7, %8, !dbg !6858
  br i1 %cmp6, label %if.then11, label %lor.lhs.false, !dbg !6859

lor.lhs.false:                                    ; preds = %while.body
  %9 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6860
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %9, i32 0, i32 1, !dbg !6861
  %10 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6861
  %11 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6862
  %bus8 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %11, i32 0, i32 1, !dbg !6863
  %12 = load %struct.pci_bus*, %struct.pci_bus** %bus8, align 8, !dbg !6863
  %cmp9 = icmp ne %struct.pci_bus* %10, %12, !dbg !6864
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !6865

if.then11:                                        ; preds = %lor.lhs.false, %while.body
  br label %while.cond, !dbg !6866, !llvm.loop !6867

if.end12:                                         ; preds = %lor.lhs.false
  %13 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6869
  %14 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6871
  %call13 = call zeroext i1 @pci_devs_are_dma_aliases(%struct.pci_dev* %13, %struct.pci_dev* %14) #9, !dbg !6872
  br i1 %call13, label %if.then14, label %if.end23, !dbg !6873

if.then14:                                        ; preds = %if.end12
  %15 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6874
  %16 = load i64*, i64** %devfns.addr, align 8, !dbg !6876
  %call15 = call %struct.iommu_group* @get_pci_alias_group(%struct.pci_dev* %15, i64* %16) #9, !dbg !6877
  store %struct.iommu_group* %call15, %struct.iommu_group** %group, align 8, !dbg !6878
  %17 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6879
  %tobool16 = icmp ne %struct.iommu_group* %17, null, !dbg !6879
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6881

if.then17:                                        ; preds = %if.then14
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6882
  call void @pci_dev_put(%struct.pci_dev* %18) #9, !dbg !6884
  %19 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6885
  store %struct.iommu_group* %19, %struct.iommu_group** %retval, align 8, !dbg !6886
  br label %return, !dbg !6886

if.end18:                                         ; preds = %if.then14
  %20 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6887
  %21 = load i64*, i64** %devfns.addr, align 8, !dbg !6888
  %call19 = call %struct.iommu_group* @get_pci_function_alias_group(%struct.pci_dev* %20, i64* %21) #9, !dbg !6889
  store %struct.iommu_group* %call19, %struct.iommu_group** %group, align 8, !dbg !6890
  %22 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6891
  %tobool20 = icmp ne %struct.iommu_group* %22, null, !dbg !6891
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !6893

if.then21:                                        ; preds = %if.end18
  %23 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6894
  call void @pci_dev_put(%struct.pci_dev* %23) #9, !dbg !6896
  %24 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6897
  store %struct.iommu_group* %24, %struct.iommu_group** %retval, align 8, !dbg !6898
  br label %return, !dbg !6898

if.end22:                                         ; preds = %if.end18
  br label %if.end23, !dbg !6899

if.end23:                                         ; preds = %if.end22, %if.end12
  br label %while.cond, !dbg !6853, !llvm.loop !6867

while.end:                                        ; preds = %while.cond
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !6900
  br label %return, !dbg !6900

return:                                           ; preds = %while.end, %if.then21, %if.then17, %if.then2, %if.then
  %25 = load %struct.iommu_group*, %struct.iommu_group** %retval, align 8, !dbg !6901
  ret %struct.iommu_group* %25, !dbg !6901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iommu_group* @get_pci_function_alias_group(%struct.pci_dev* %pdev, i64* %devfns) #1 !dbg !6902 {
entry:
  %retval = alloca %struct.iommu_group*, align 8
  %pdev.addr = alloca %struct.pci_dev*, align 8
  %devfns.addr = alloca i64*, align 8
  %tmp = alloca %struct.pci_dev*, align 8
  %group = alloca %struct.iommu_group*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !6903, metadata !DIExpression()), !dbg !6904
  store i64* %devfns, i64** %devfns.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %devfns.addr, metadata !6905, metadata !DIExpression()), !dbg !6906
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %tmp, metadata !6907, metadata !DIExpression()), !dbg !6908
  store %struct.pci_dev* null, %struct.pci_dev** %tmp, align 8, !dbg !6908
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !6909, metadata !DIExpression()), !dbg !6910
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6911
  %multifunction = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %0, i32 0, i32 46, !dbg !6913
  %1 = bitcast [5 x i8]* %multifunction to i40*, !dbg !6913
  %bf.load = load i40, i40* %1, align 1, !dbg !6913
  %bf.lshr = lshr i40 %bf.load, 4, !dbg !6913
  %bf.clear = and i40 %bf.lshr, 1, !dbg !6913
  %bf.cast = trunc i40 %bf.clear to i32, !dbg !6913
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !6911
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !6914

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6915
  %call = call zeroext i1 @pci_acs_enabled(%struct.pci_dev* %2, i16 zeroext 29) #9, !dbg !6916
  br i1 %call, label %if.then, label %if.end, !dbg !6917

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !6918
  br label %return, !dbg !6918

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond, !dbg !6919

while.cond:                                       ; preds = %if.end18, %if.then13, %if.end
  %3 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6919
  %call1 = call %struct.pci_dev* @pci_get_device(i32 -1, i32 -1, %struct.pci_dev* %3) #9, !dbg !6919
  store %struct.pci_dev* %call1, %struct.pci_dev** %tmp, align 8, !dbg !6919
  %cmp = icmp ne %struct.pci_dev* %call1, null, !dbg !6919
  br i1 %cmp, label %while.body, label %while.end, !dbg !6919

while.body:                                       ; preds = %while.cond
  %4 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6920
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6923
  %cmp2 = icmp eq %struct.pci_dev* %4, %5, !dbg !6924
  br i1 %cmp2, label %if.then13, label %lor.lhs.false3, !dbg !6925

lor.lhs.false3:                                   ; preds = %while.body
  %6 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6926
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %6, i32 0, i32 1, !dbg !6927
  %7 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !dbg !6927
  %8 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6928
  %bus4 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %8, i32 0, i32 1, !dbg !6929
  %9 = load %struct.pci_bus*, %struct.pci_bus** %bus4, align 8, !dbg !6929
  %cmp5 = icmp ne %struct.pci_bus* %7, %9, !dbg !6930
  br i1 %cmp5, label %if.then13, label %lor.lhs.false6, !dbg !6931

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %10 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6932
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 6, !dbg !6932
  %11 = load i32, i32* %devfn, align 8, !dbg !6932
  %shr = lshr i32 %11, 3, !dbg !6932
  %and = and i32 %shr, 31, !dbg !6932
  %12 = load %struct.pci_dev*, %struct.pci_dev** %pdev.addr, align 8, !dbg !6933
  %devfn7 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %12, i32 0, i32 6, !dbg !6933
  %13 = load i32, i32* %devfn7, align 8, !dbg !6933
  %shr8 = lshr i32 %13, 3, !dbg !6933
  %and9 = and i32 %shr8, 31, !dbg !6933
  %cmp10 = icmp ne i32 %and, %and9, !dbg !6934
  br i1 %cmp10, label %if.then13, label %lor.lhs.false11, !dbg !6935

lor.lhs.false11:                                  ; preds = %lor.lhs.false6
  %14 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6936
  %call12 = call zeroext i1 @pci_acs_enabled(%struct.pci_dev* %14, i16 zeroext 29) #9, !dbg !6937
  br i1 %call12, label %if.then13, label %if.end14, !dbg !6938

if.then13:                                        ; preds = %lor.lhs.false11, %lor.lhs.false6, %lor.lhs.false3, %while.body
  br label %while.cond, !dbg !6939, !llvm.loop !6940

if.end14:                                         ; preds = %lor.lhs.false11
  %15 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6942
  %16 = load i64*, i64** %devfns.addr, align 8, !dbg !6943
  %call15 = call %struct.iommu_group* @get_pci_alias_group(%struct.pci_dev* %15, i64* %16) #9, !dbg !6944
  store %struct.iommu_group* %call15, %struct.iommu_group** %group, align 8, !dbg !6945
  %17 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6946
  %tobool16 = icmp ne %struct.iommu_group* %17, null, !dbg !6946
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !6948

if.then17:                                        ; preds = %if.end14
  %18 = load %struct.pci_dev*, %struct.pci_dev** %tmp, align 8, !dbg !6949
  call void @pci_dev_put(%struct.pci_dev* %18) #9, !dbg !6951
  %19 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6952
  store %struct.iommu_group* %19, %struct.iommu_group** %retval, align 8, !dbg !6953
  br label %return, !dbg !6953

if.end18:                                         ; preds = %if.end14
  br label %while.cond, !dbg !6919, !llvm.loop !6940

while.end:                                        ; preds = %while.cond
  store %struct.iommu_group* null, %struct.iommu_group** %retval, align 8, !dbg !6954
  br label %return, !dbg !6954

return:                                           ; preds = %while.end, %if.then17, %if.then
  %20 = load %struct.iommu_group*, %struct.iommu_group** %retval, align 8, !dbg !6955
  ret %struct.iommu_group* %20, !dbg !6955
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_group* @fsl_mc_device_group(%struct.device* %dev) #1 !dbg !6956 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %cont_dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.fsl_mc_device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  call void @llvm.dbg.declare(metadata %struct.device** %cont_dev, metadata !6959, metadata !DIExpression()), !dbg !6960
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6961, metadata !DIExpression()), !dbg !6963
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6963
  %1 = bitcast %struct.device* %0 to i8*, !dbg !6963
  store i8* %1, i8** %__mptr, align 8, !dbg !6963
  br label %do.body, !dbg !6963

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !6964

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !6963
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !6963
  %3 = bitcast i8* %add.ptr to %struct.fsl_mc_device*, !dbg !6963
  store %struct.fsl_mc_device* %3, %struct.fsl_mc_device** %tmp, align 8, !dbg !6964
  %4 = load %struct.fsl_mc_device*, %struct.fsl_mc_device** %tmp, align 8, !dbg !6963
  %flags = getelementptr inbounds %struct.fsl_mc_device, %struct.fsl_mc_device* %4, i32 0, i32 2, !dbg !6966
  %5 = load i16, i16* %flags, align 8, !dbg !6966
  %conv = zext i16 %5 to i32, !dbg !6966
  %and = and i32 %conv, 1, !dbg !6966
  %tobool = icmp ne i32 %and, 0, !dbg !6966
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !6966

cond.true:                                        ; preds = %do.end
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6966
  br label %cond.end, !dbg !6966

cond.false:                                       ; preds = %do.end
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6966
  %parent = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 1, !dbg !6966
  %8 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6966
  br label %cond.end, !dbg !6966

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.device* [ %6, %cond.true ], [ %8, %cond.false ], !dbg !6966
  store %struct.device* %cond, %struct.device** %cont_dev, align 8, !dbg !6960
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !6967, metadata !DIExpression()), !dbg !6968
  %9 = load %struct.device*, %struct.device** %cont_dev, align 8, !dbg !6969
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %9) #9, !dbg !6970
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !6971
  %10 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6972
  %tobool1 = icmp ne %struct.iommu_group* %10, null, !dbg !6972
  br i1 %tobool1, label %if.end, label %if.then, !dbg !6974

if.then:                                          ; preds = %cond.end
  %call2 = call %struct.iommu_group* @iommu_group_alloc() #9, !dbg !6975
  store %struct.iommu_group* %call2, %struct.iommu_group** %group, align 8, !dbg !6976
  br label %if.end, !dbg !6977

if.end:                                           ; preds = %if.then, %cond.end
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !6978
  ret %struct.iommu_group* %11, !dbg !6979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_domain* @iommu_group_default_domain(%struct.iommu_group* %group) #1 !dbg !6980 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !6983, metadata !DIExpression()), !dbg !6984
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !6985
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 9, !dbg !6986
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !6986
  ret %struct.iommu_domain* %1, !dbg !6987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bus_iommu_probe(%struct.bus_type* %bus) #1 !dbg !6988 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.bus_type*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %next = alloca %struct.iommu_group*, align 8
  %group_list = alloca %struct.list_head, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_group*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.iommu_group*, align 8
  %__mptr22 = alloca i8*, align 8
  %tmp27 = alloca %struct.iommu_group*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !6991, metadata !DIExpression()), !dbg !6992
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !6993, metadata !DIExpression()), !dbg !6994
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %next, metadata !6995, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.declare(metadata %struct.list_head* %group_list, metadata !6997, metadata !DIExpression()), !dbg !6998
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %group_list, i32 0, i32 0, !dbg !6998
  store %struct.list_head* %group_list, %struct.list_head** %next1, align 8, !dbg !6998
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %group_list, i32 0, i32 1, !dbg !6998
  store %struct.list_head* %group_list, %struct.list_head** %prev, align 8, !dbg !6998
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6999, metadata !DIExpression()), !dbg !7000
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7001
  %1 = bitcast %struct.list_head* %group_list to i8*, !dbg !7002
  %call = call i32 @bus_for_each_dev(%struct.bus_type* %0, %struct.device* null, i8* %1, i32 (%struct.device*, i8*)* @probe_iommu_group) #9, !dbg !7003
  store i32 %call, i32* %ret, align 4, !dbg !7004
  %2 = load i32, i32* %ret, align 4, !dbg !7005
  %tobool = icmp ne i32 %2, 0, !dbg !7005
  br i1 %tobool, label %if.then, label %if.end, !dbg !7007

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !7008
  store i32 %3, i32* %retval, align 4, !dbg !7009
  br label %return, !dbg !7009

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7010, metadata !DIExpression()), !dbg !7013
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %group_list, i32 0, i32 0, !dbg !7013
  %4 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !7013
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !7013
  store i8* %5, i8** %__mptr, align 8, !dbg !7013
  br label %do.body, !dbg !7013

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !7014

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !7013
  %add.ptr = getelementptr i8, i8* %6, i64 -200, !dbg !7013
  %7 = bitcast i8* %add.ptr to %struct.iommu_group*, !dbg !7013
  store %struct.iommu_group* %7, %struct.iommu_group** %tmp, align 8, !dbg !7014
  %8 = load %struct.iommu_group*, %struct.iommu_group** %tmp, align 8, !dbg !7013
  store %struct.iommu_group* %8, %struct.iommu_group** %group, align 8, !dbg !7016
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !7017, metadata !DIExpression()), !dbg !7019
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7019
  %entry4 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %9, i32 0, i32 11, !dbg !7019
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %entry4, i32 0, i32 0, !dbg !7019
  %10 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !7019
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7019
  store i8* %11, i8** %__mptr3, align 8, !dbg !7019
  br label %do.body6, !dbg !7019

do.body6:                                         ; preds = %do.end
  br label %do.end7, !dbg !7020

do.end7:                                          ; preds = %do.body6
  %12 = load i8*, i8** %__mptr3, align 8, !dbg !7019
  %add.ptr9 = getelementptr i8, i8* %12, i64 -200, !dbg !7019
  %13 = bitcast i8* %add.ptr9 to %struct.iommu_group*, !dbg !7019
  store %struct.iommu_group* %13, %struct.iommu_group** %tmp8, align 8, !dbg !7020
  %14 = load %struct.iommu_group*, %struct.iommu_group** %tmp8, align 8, !dbg !7019
  store %struct.iommu_group* %14, %struct.iommu_group** %next, align 8, !dbg !7016
  br label %for.cond, !dbg !7016

for.cond:                                         ; preds = %do.end26, %do.end7
  %15 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7022
  %entry10 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %15, i32 0, i32 11, !dbg !7022
  %cmp = icmp eq %struct.list_head* %entry10, %group_list, !dbg !7022
  %lnot = xor i1 %cmp, true, !dbg !7022
  br i1 %lnot, label %for.body, label %for.end, !dbg !7016

for.body:                                         ; preds = %for.cond
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7024
  %entry11 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %16, i32 0, i32 11, !dbg !7026
  call void @list_del_init(%struct.list_head* %entry11) #9, !dbg !7027
  %17 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7028
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %17, i32 0, i32 3, !dbg !7029
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !7030
  %18 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7031
  %19 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7032
  call void @probe_alloc_default_domain(%struct.bus_type* %18, %struct.iommu_group* %19) #9, !dbg !7033
  %20 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7034
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %20, i32 0, i32 9, !dbg !7036
  %21 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !7036
  %tobool12 = icmp ne %struct.iommu_domain* %21, null, !dbg !7034
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !7037

if.then13:                                        ; preds = %for.body
  %22 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7038
  %mutex14 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %22, i32 0, i32 3, !dbg !7040
  call void @mutex_unlock(%struct.mutex* %mutex14) #9, !dbg !7041
  br label %for.inc, !dbg !7042

if.end15:                                         ; preds = %for.body
  %23 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7043
  %call16 = call i32 @iommu_group_create_direct_mappings(%struct.iommu_group* %23) #9, !dbg !7044
  %24 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7045
  %call17 = call i32 @__iommu_group_dma_attach(%struct.iommu_group* %24) #9, !dbg !7046
  store i32 %call17, i32* %ret, align 4, !dbg !7047
  %25 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7048
  %mutex18 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %25, i32 0, i32 3, !dbg !7049
  call void @mutex_unlock(%struct.mutex* %mutex18) #9, !dbg !7050
  %26 = load i32, i32* %ret, align 4, !dbg !7051
  %tobool19 = icmp ne i32 %26, 0, !dbg !7051
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !7053

if.then20:                                        ; preds = %if.end15
  br label %for.end, !dbg !7054

if.end21:                                         ; preds = %if.end15
  %27 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7055
  call void @__iommu_group_dma_finalize(%struct.iommu_group* %27) #9, !dbg !7056
  br label %for.inc, !dbg !7057

for.inc:                                          ; preds = %if.end21, %if.then13
  %28 = load %struct.iommu_group*, %struct.iommu_group** %next, align 8, !dbg !7022
  store %struct.iommu_group* %28, %struct.iommu_group** %group, align 8, !dbg !7022
  call void @llvm.dbg.declare(metadata i8** %__mptr22, metadata !7058, metadata !DIExpression()), !dbg !7060
  %29 = load %struct.iommu_group*, %struct.iommu_group** %next, align 8, !dbg !7060
  %entry23 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %29, i32 0, i32 11, !dbg !7060
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %entry23, i32 0, i32 0, !dbg !7060
  %30 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !7060
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !7060
  store i8* %31, i8** %__mptr22, align 8, !dbg !7060
  br label %do.body25, !dbg !7060

do.body25:                                        ; preds = %for.inc
  br label %do.end26, !dbg !7061

do.end26:                                         ; preds = %do.body25
  %32 = load i8*, i8** %__mptr22, align 8, !dbg !7060
  %add.ptr28 = getelementptr i8, i8* %32, i64 -200, !dbg !7060
  %33 = bitcast i8* %add.ptr28 to %struct.iommu_group*, !dbg !7060
  store %struct.iommu_group* %33, %struct.iommu_group** %tmp27, align 8, !dbg !7061
  %34 = load %struct.iommu_group*, %struct.iommu_group** %tmp27, align 8, !dbg !7060
  store %struct.iommu_group* %34, %struct.iommu_group** %next, align 8, !dbg !7022
  br label %for.cond, !dbg !7022, !llvm.loop !7063

for.end:                                          ; preds = %if.then20, %for.cond
  %35 = load i32, i32* %ret, align 4, !dbg !7065
  store i32 %35, i32* %retval, align 4, !dbg !7066
  br label %return, !dbg !7066

return:                                           ; preds = %for.end, %if.then
  %36 = load i32, i32* %retval, align 4, !dbg !7067
  ret i32 %36, !dbg !7067
}

; Function Attrs: noredzone
declare dso_local i32 @bus_for_each_dev(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @probe_iommu_group(%struct.device* %dev, i8* %data) #1 !dbg !7068 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %group_list = alloca %struct.list_head*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7069, metadata !DIExpression()), !dbg !7070
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  call void @llvm.dbg.declare(metadata %struct.list_head** %group_list, metadata !7073, metadata !DIExpression()), !dbg !7074
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7075
  %1 = bitcast i8* %0 to %struct.list_head*, !dbg !7075
  store %struct.list_head* %1, %struct.list_head** %group_list, align 8, !dbg !7074
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !7076, metadata !DIExpression()), !dbg !7077
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7078, metadata !DIExpression()), !dbg !7079
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7080
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %2) #9, !dbg !7081
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !7082
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7083
  %tobool = icmp ne %struct.iommu_group* %3, null, !dbg !7083
  br i1 %tobool, label %if.then, label %if.end, !dbg !7085

if.then:                                          ; preds = %entry
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7086
  call void @iommu_group_put(%struct.iommu_group* %4) #9, !dbg !7088
  store i32 0, i32* %retval, align 4, !dbg !7089
  br label %return, !dbg !7089

if.end:                                           ; preds = %entry
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7090
  %6 = load %struct.list_head*, %struct.list_head** %group_list, align 8, !dbg !7091
  %call1 = call i32 @__iommu_probe_device(%struct.device* %5, %struct.list_head* %6) #9, !dbg !7092
  store i32 %call1, i32* %ret, align 4, !dbg !7093
  %7 = load i32, i32* %ret, align 4, !dbg !7094
  %cmp = icmp eq i32 %7, -19, !dbg !7096
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7097

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !7098
  br label %if.end3, !dbg !7099

if.end3:                                          ; preds = %if.then2, %if.end
  %8 = load i32, i32* %ret, align 4, !dbg !7100
  store i32 %8, i32* %retval, align 4, !dbg !7101
  br label %return, !dbg !7101

return:                                           ; preds = %if.end3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7102
  ret i32 %9, !dbg !7102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #1 !dbg !7103 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !7104, metadata !DIExpression()), !dbg !7105
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7106
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !7107
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !7108
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #9, !dbg !7109
  ret void, !dbg !7110
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @probe_alloc_default_domain(%struct.bus_type* %bus, %struct.iommu_group* %group) #1 !dbg !7111 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  %group.addr = alloca %struct.iommu_group*, align 8
  %gtype = alloca %struct.__group_domain_type, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7114, metadata !DIExpression()), !dbg !7115
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !7116, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.declare(metadata %struct.__group_domain_type* %gtype, metadata !7118, metadata !DIExpression()), !dbg !7123
  %0 = bitcast %struct.__group_domain_type* %gtype to i8*, !dbg !7124
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 16, i1 false), !dbg !7124
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7125
  %2 = bitcast %struct.__group_domain_type* %gtype to i8*, !dbg !7126
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %1, i8* %2, i32 (%struct.device*, i8*)* @probe_get_default_domain_type) #9, !dbg !7127
  %type = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %gtype, i32 0, i32 1, !dbg !7128
  %3 = load i32, i32* %type, align 8, !dbg !7128
  %tobool = icmp ne i32 %3, 0, !dbg !7130
  br i1 %tobool, label %if.end, label %if.then, !dbg !7131

if.then:                                          ; preds = %entry
  %4 = load i32, i32* @iommu_def_domain_type, align 4, !dbg !7132
  %type1 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %gtype, i32 0, i32 1, !dbg !7133
  store i32 %4, i32* %type1, align 8, !dbg !7134
  br label %if.end, !dbg !7135

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7136
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7137
  %type2 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %gtype, i32 0, i32 1, !dbg !7138
  %7 = load i32, i32* %type2, align 8, !dbg !7138
  %call3 = call i32 @iommu_group_alloc_default_domain(%struct.bus_type* %5, %struct.iommu_group* %6, i32 %7) #9, !dbg !7139
  ret void, !dbg !7140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_create_direct_mappings(%struct.iommu_group* %group) #1 !dbg !7141 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !7142, metadata !DIExpression()), !dbg !7143
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7144
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7145
  %2 = bitcast %struct.iommu_group* %1 to i8*, !dbg !7145
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %0, i8* %2, i32 (%struct.device*, i8*)* @iommu_do_create_direct_mappings) #9, !dbg !7146
  ret i32 %call, !dbg !7147
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__iommu_group_dma_attach(%struct.iommu_group* %group) #1 !dbg !7148 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !7149, metadata !DIExpression()), !dbg !7150
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7151
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7152
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 9, !dbg !7153
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !7153
  %3 = bitcast %struct.iommu_domain* %2 to i8*, !dbg !7152
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %0, i8* %3, i32 (%struct.device*, i8*)* @iommu_group_do_dma_attach) #9, !dbg !7154
  ret i32 %call, !dbg !7155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__iommu_group_dma_finalize(%struct.iommu_group* %group) #1 !dbg !7156 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !7157, metadata !DIExpression()), !dbg !7158
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7159
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7160
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 9, !dbg !7161
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !7161
  %3 = bitcast %struct.iommu_domain* %2 to i8*, !dbg !7160
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %0, i8* %3, i32 (%struct.device*, i8*)* @iommu_group_do_probe_finalize) #9, !dbg !7162
  ret void, !dbg !7163
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @bus_set_iommu(%struct.bus_type* %bus, %struct.iommu_ops* %ops) #1 !dbg !7164 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.bus_type*, align 8
  %ops.addr = alloca %struct.iommu_ops*, align 8
  %err = alloca i32, align 4
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7167, metadata !DIExpression()), !dbg !7168
  store %struct.iommu_ops* %ops, %struct.iommu_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops.addr, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7171, metadata !DIExpression()), !dbg !7172
  %0 = load %struct.iommu_ops*, %struct.iommu_ops** %ops.addr, align 8, !dbg !7173
  %cmp = icmp eq %struct.iommu_ops* %0, null, !dbg !7175
  br i1 %cmp, label %if.then, label %if.end, !dbg !7176

if.then:                                          ; preds = %entry
  %1 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7177
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !7179
  store %struct.iommu_ops* null, %struct.iommu_ops** %iommu_ops, align 8, !dbg !7180
  store i32 0, i32* %retval, align 4, !dbg !7181
  br label %return, !dbg !7181

if.end:                                           ; preds = %entry
  %2 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7182
  %iommu_ops1 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %2, i32 0, i32 19, !dbg !7184
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops1, align 8, !dbg !7184
  %cmp2 = icmp ne %struct.iommu_ops* %3, null, !dbg !7185
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7186

if.then3:                                         ; preds = %if.end
  store i32 -16, i32* %retval, align 4, !dbg !7187
  br label %return, !dbg !7187

if.end4:                                          ; preds = %if.end
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops.addr, align 8, !dbg !7188
  %5 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7189
  %iommu_ops5 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %5, i32 0, i32 19, !dbg !7190
  store %struct.iommu_ops* %4, %struct.iommu_ops** %iommu_ops5, align 8, !dbg !7191
  %6 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7192
  %7 = load %struct.iommu_ops*, %struct.iommu_ops** %ops.addr, align 8, !dbg !7193
  %call = call i32 @iommu_bus_init(%struct.bus_type* %6, %struct.iommu_ops* %7) #9, !dbg !7194
  store i32 %call, i32* %err, align 4, !dbg !7195
  %8 = load i32, i32* %err, align 4, !dbg !7196
  %tobool = icmp ne i32 %8, 0, !dbg !7196
  br i1 %tobool, label %if.then6, label %if.end8, !dbg !7198

if.then6:                                         ; preds = %if.end4
  %9 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7199
  %iommu_ops7 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %9, i32 0, i32 19, !dbg !7200
  store %struct.iommu_ops* null, %struct.iommu_ops** %iommu_ops7, align 8, !dbg !7201
  br label %if.end8, !dbg !7199

if.end8:                                          ; preds = %if.then6, %if.end4
  %10 = load i32, i32* %err, align 4, !dbg !7202
  store i32 %10, i32* %retval, align 4, !dbg !7203
  br label %return, !dbg !7203

return:                                           ; preds = %if.end8, %if.then3, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !7204
  ret i32 %11, !dbg !7204
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_bus_init(%struct.bus_type* %bus, %struct.iommu_ops* %ops) #1 !dbg !7205 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.bus_type*, align 8
  %ops.addr = alloca %struct.iommu_ops*, align 8
  %nb = alloca %struct.notifier_block*, align 8
  %err = alloca i32, align 4
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  store %struct.iommu_ops* %ops, %struct.iommu_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb, metadata !7210, metadata !DIExpression()), !dbg !7211
  call void @llvm.dbg.declare(metadata i32* %err, metadata !7212, metadata !DIExpression()), !dbg !7213
  %call = call i8* @kzalloc(i64 24, i32 3264) #9, !dbg !7214
  %0 = bitcast i8* %call to %struct.notifier_block*, !dbg !7214
  store %struct.notifier_block* %0, %struct.notifier_block** %nb, align 8, !dbg !7215
  %1 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !7216
  %tobool = icmp ne %struct.notifier_block* %1, null, !dbg !7216
  br i1 %tobool, label %if.end, label %if.then, !dbg !7218

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !7219
  br label %return, !dbg !7219

if.end:                                           ; preds = %entry
  %2 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !7220
  %notifier_call = getelementptr inbounds %struct.notifier_block, %struct.notifier_block* %2, i32 0, i32 0, !dbg !7221
  store i32 (%struct.notifier_block*, i64, i8*)* @iommu_bus_notifier, i32 (%struct.notifier_block*, i64, i8*)** %notifier_call, align 8, !dbg !7222
  %3 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7223
  %4 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !7224
  %call1 = call i32 @bus_register_notifier(%struct.bus_type* %3, %struct.notifier_block* %4) #9, !dbg !7225
  store i32 %call1, i32* %err, align 4, !dbg !7226
  %5 = load i32, i32* %err, align 4, !dbg !7227
  %tobool2 = icmp ne i32 %5, 0, !dbg !7227
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !7229

if.then3:                                         ; preds = %if.end
  br label %out_free, !dbg !7230

if.end4:                                          ; preds = %if.end
  %6 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7231
  %call5 = call i32 @bus_iommu_probe(%struct.bus_type* %6) #9, !dbg !7232
  store i32 %call5, i32* %err, align 4, !dbg !7233
  %7 = load i32, i32* %err, align 4, !dbg !7234
  %tobool6 = icmp ne i32 %7, 0, !dbg !7234
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !7236

if.then7:                                         ; preds = %if.end4
  br label %out_err, !dbg !7237

if.end8:                                          ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !7238
  br label %return, !dbg !7238

out_err:                                          ; preds = %if.then7
  call void @llvm.dbg.label(metadata !7239), !dbg !7240
  %8 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7241
  %call9 = call i32 @bus_for_each_dev(%struct.bus_type* %8, %struct.device* null, i8* null, i32 (%struct.device*, i8*)* @remove_iommu_group) #9, !dbg !7242
  %9 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7243
  %10 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !7244
  %call10 = call i32 @bus_unregister_notifier(%struct.bus_type* %9, %struct.notifier_block* %10) #9, !dbg !7245
  br label %out_free, !dbg !7245

out_free:                                         ; preds = %out_err, %if.then3
  call void @llvm.dbg.label(metadata !7246), !dbg !7247
  %11 = load %struct.notifier_block*, %struct.notifier_block** %nb, align 8, !dbg !7248
  %12 = bitcast %struct.notifier_block* %11 to i8*, !dbg !7248
  call void @kfree(i8* %12) #9, !dbg !7249
  %13 = load i32, i32* %err, align 4, !dbg !7250
  store i32 %13, i32* %retval, align 4, !dbg !7251
  br label %return, !dbg !7251

return:                                           ; preds = %out_free, %if.end8, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !7252
  ret i32 %14, !dbg !7252
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @iommu_present(%struct.bus_type* %bus) #1 !dbg !7253 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7256, metadata !DIExpression()), !dbg !7257
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7258
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %0, i32 0, i32 19, !dbg !7259
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !7259
  %cmp = icmp ne %struct.iommu_ops* %1, null, !dbg !7260
  ret i1 %cmp, !dbg !7261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @iommu_capable(%struct.bus_type* %bus, i32 %cap) #1 !dbg !7262 {
entry:
  %retval = alloca i1, align 1
  %bus.addr = alloca %struct.bus_type*, align 8
  %cap.addr = alloca i32, align 4
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7265, metadata !DIExpression()), !dbg !7266
  store i32 %cap, i32* %cap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cap.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7269
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %0, i32 0, i32 19, !dbg !7271
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !7271
  %tobool = icmp ne %struct.iommu_ops* %1, null, !dbg !7269
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7272

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7273
  %iommu_ops1 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %2, i32 0, i32 19, !dbg !7274
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops1, align 8, !dbg !7274
  %capable = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %3, i32 0, i32 0, !dbg !7275
  %4 = load i1 (i32)*, i1 (i32)** %capable, align 8, !dbg !7275
  %tobool2 = icmp ne i1 (i32)* %4, null, !dbg !7273
  br i1 %tobool2, label %if.end, label %if.then, !dbg !7276

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !7277
  br label %return, !dbg !7277

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7278
  %iommu_ops3 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %5, i32 0, i32 19, !dbg !7279
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops3, align 8, !dbg !7279
  %capable4 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 0, !dbg !7280
  %7 = load i1 (i32)*, i1 (i32)** %capable4, align 8, !dbg !7280
  %8 = load i32, i32* %cap.addr, align 4, !dbg !7281
  %call = call zeroext i1 %7(i32 %8) #9, !dbg !7278
  store i1 %call, i1* %retval, align 1, !dbg !7282
  br label %return, !dbg !7282

return:                                           ; preds = %if.end, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !7283
  ret i1 %9, !dbg !7283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_set_fault_handler(%struct.iommu_domain* %domain, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)* %handler, i8* %token) #1 !dbg !7284 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %handler.addr = alloca i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)*, align 8
  %token.addr = alloca i8*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7287, metadata !DIExpression()), !dbg !7288
  store i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)* %handler, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)** %handler.addr, metadata !7289, metadata !DIExpression()), !dbg !7290
  store i8* %token, i8** %token.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %token.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  br label %do.body, !dbg !7293

do.body:                                          ; preds = %entry
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7294
  %tobool = icmp ne %struct.iommu_domain* %0, null, !dbg !7294
  %lnot = xor i1 %tobool, true, !dbg !7294
  %lnot1 = xor i1 %lnot, true, !dbg !7294
  %lnot2 = xor i1 %lnot1, true, !dbg !7294
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7294
  %conv = sext i32 %lnot.ext to i64, !dbg !7294
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7294
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7297

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !7294

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !7298

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !7300

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !7298

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1885, i32 0, i64 12) #11, !dbg !7302, !srcloc !7304
  br label %do.end7, !dbg !7302

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !7298

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 277) #11, !dbg !7305, !srcloc !7308
  unreachable, !dbg !7309

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !7298

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !7298

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !7297

do.end11:                                         ; preds = %if.end
  %1 = load i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)*, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)** %handler.addr, align 8, !dbg !7310
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7311
  %handler12 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %2, i32 0, i32 3, !dbg !7312
  store i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)* %1, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)** %handler12, align 8, !dbg !7313
  %3 = load i8*, i8** %token.addr, align 8, !dbg !7314
  %4 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7315
  %handler_token = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %4, i32 0, i32 4, !dbg !7316
  store i8* %3, i8** %handler_token, align 8, !dbg !7317
  ret void, !dbg !7318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_domain* @iommu_domain_alloc(%struct.bus_type* %bus) #1 !dbg !7319 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7324
  %call = call %struct.iommu_domain* @__iommu_domain_alloc(%struct.bus_type* %0, i32 1) #9, !dbg !7325
  ret %struct.iommu_domain* %call, !dbg !7326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iommu_domain* @__iommu_domain_alloc(%struct.bus_type* %bus, i32 %type) #1 !dbg !7327 {
entry:
  %retval = alloca %struct.iommu_domain*, align 8
  %bus.addr = alloca %struct.bus_type*, align 8
  %type.addr = alloca i32, align 4
  %domain = alloca %struct.iommu_domain*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7332, metadata !DIExpression()), !dbg !7333
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !7334, metadata !DIExpression()), !dbg !7335
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7336
  %cmp = icmp eq %struct.bus_type* %0, null, !dbg !7338
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7339

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7340
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !7341
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !7341
  %cmp1 = icmp eq %struct.iommu_ops* %2, null, !dbg !7342
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7343

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.iommu_domain* null, %struct.iommu_domain** %retval, align 8, !dbg !7344
  br label %return, !dbg !7344

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7345
  %iommu_ops2 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %3, i32 0, i32 19, !dbg !7346
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops2, align 8, !dbg !7346
  %domain_alloc = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 1, !dbg !7347
  %5 = load %struct.iommu_domain* (i32)*, %struct.iommu_domain* (i32)** %domain_alloc, align 8, !dbg !7347
  %6 = load i32, i32* %type.addr, align 4, !dbg !7348
  %call = call %struct.iommu_domain* %5(i32 %6) #9, !dbg !7345
  store %struct.iommu_domain* %call, %struct.iommu_domain** %domain, align 8, !dbg !7349
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !7350
  %tobool = icmp ne %struct.iommu_domain* %7, null, !dbg !7350
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !7352

if.then3:                                         ; preds = %if.end
  store %struct.iommu_domain* null, %struct.iommu_domain** %retval, align 8, !dbg !7353
  br label %return, !dbg !7353

if.end4:                                          ; preds = %if.end
  %8 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7354
  %iommu_ops5 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %8, i32 0, i32 19, !dbg !7355
  %9 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops5, align 8, !dbg !7355
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !7356
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %10, i32 0, i32 1, !dbg !7357
  store %struct.iommu_ops* %9, %struct.iommu_ops** %ops, align 8, !dbg !7358
  %11 = load i32, i32* %type.addr, align 4, !dbg !7359
  %12 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !7360
  %type6 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %12, i32 0, i32 0, !dbg !7361
  store i32 %11, i32* %type6, align 8, !dbg !7362
  %13 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !7363
  %iommu_ops7 = getelementptr inbounds %struct.bus_type, %struct.bus_type* %13, i32 0, i32 19, !dbg !7364
  %14 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops7, align 8, !dbg !7364
  %pgsize_bitmap = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %14, i32 0, i32 39, !dbg !7365
  %15 = load i64, i64* %pgsize_bitmap, align 8, !dbg !7365
  %16 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !7366
  %pgsize_bitmap8 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %16, i32 0, i32 2, !dbg !7367
  store i64 %15, i64* %pgsize_bitmap8, align 8, !dbg !7368
  %17 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !7369
  store %struct.iommu_domain* %17, %struct.iommu_domain** %retval, align 8, !dbg !7370
  br label %return, !dbg !7370

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %18 = load %struct.iommu_domain*, %struct.iommu_domain** %retval, align 8, !dbg !7371
  ret %struct.iommu_domain* %18, !dbg !7371
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_domain_free(%struct.iommu_domain* %domain) #1 !dbg !7372 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7373, metadata !DIExpression()), !dbg !7374
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7375
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !7376
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !7376
  %domain_free = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 2, !dbg !7377
  %2 = load void (%struct.iommu_domain*)*, void (%struct.iommu_domain*)** %domain_free, align 8, !dbg !7377
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7378
  call void %2(%struct.iommu_domain* %3) #9, !dbg !7375
  ret void, !dbg !7379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_attach_device(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !7380 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7383, metadata !DIExpression()), !dbg !7384
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !7385, metadata !DIExpression()), !dbg !7386
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7387, metadata !DIExpression()), !dbg !7388
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7389
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %0) #9, !dbg !7390
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !7391
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7392
  %tobool = icmp ne %struct.iommu_group* %1, null, !dbg !7392
  br i1 %tobool, label %if.end, label %if.then, !dbg !7394

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7395
  br label %return, !dbg !7395

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7396
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %2, i32 0, i32 3, !dbg !7397
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !7398
  store i32 -22, i32* %ret, align 4, !dbg !7399
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7400
  %call1 = call i32 @iommu_group_device_count(%struct.iommu_group* %3) #9, !dbg !7402
  %cmp = icmp ne i32 %call1, 1, !dbg !7403
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7404

if.then2:                                         ; preds = %if.end
  br label %out_unlock, !dbg !7405

if.end3:                                          ; preds = %if.end
  %4 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7406
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7407
  %call4 = call i32 @__iommu_attach_group(%struct.iommu_domain* %4, %struct.iommu_group* %5) #9, !dbg !7408
  store i32 %call4, i32* %ret, align 4, !dbg !7409
  br label %out_unlock, !dbg !7410

out_unlock:                                       ; preds = %if.end3, %if.then2
  call void @llvm.dbg.label(metadata !7411), !dbg !7412
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7413
  %mutex5 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %6, i32 0, i32 3, !dbg !7414
  call void @mutex_unlock(%struct.mutex* %mutex5) #9, !dbg !7415
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !7416
  call void @iommu_group_put(%struct.iommu_group* %7) #9, !dbg !7417
  %8 = load i32, i32* %ret, align 4, !dbg !7418
  store i32 %8, i32* %retval, align 4, !dbg !7419
  br label %return, !dbg !7419

return:                                           ; preds = %out_unlock, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !7420
  ret i32 %9, !dbg !7420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_device_count(%struct.iommu_group* %group) #1 !dbg !7421 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %entry1 = alloca %struct.group_device*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.group_device*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.group_device*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !7422, metadata !DIExpression()), !dbg !7423
  call void @llvm.dbg.declare(metadata %struct.group_device** %entry1, metadata !7424, metadata !DIExpression()), !dbg !7425
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7426, metadata !DIExpression()), !dbg !7427
  store i32 0, i32* %ret, align 4, !dbg !7427
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7428, metadata !DIExpression()), !dbg !7431
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7431
  %devices = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 2, !dbg !7431
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %devices, i32 0, i32 0, !dbg !7431
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7431
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7431
  store i8* %2, i8** %__mptr, align 8, !dbg !7431
  br label %do.body, !dbg !7431

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7432

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7431
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7431
  %4 = bitcast i8* %add.ptr to %struct.group_device*, !dbg !7431
  store %struct.group_device* %4, %struct.group_device** %tmp, align 8, !dbg !7432
  %5 = load %struct.group_device*, %struct.group_device** %tmp, align 8, !dbg !7431
  store %struct.group_device* %5, %struct.group_device** %entry1, align 8, !dbg !7434
  br label %for.cond, !dbg !7434

for.cond:                                         ; preds = %do.end7, %do.end
  %6 = load %struct.group_device*, %struct.group_device** %entry1, align 8, !dbg !7435
  %list = getelementptr inbounds %struct.group_device, %struct.group_device* %6, i32 0, i32 0, !dbg !7435
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7435
  %devices2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %7, i32 0, i32 2, !dbg !7435
  %cmp = icmp eq %struct.list_head* %list, %devices2, !dbg !7435
  %lnot = xor i1 %cmp, true, !dbg !7435
  br i1 %lnot, label %for.body, label %for.end, !dbg !7434

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %ret, align 4, !dbg !7437
  %inc = add i32 %8, 1, !dbg !7437
  store i32 %inc, i32* %ret, align 4, !dbg !7437
  br label %for.inc, !dbg !7438

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !7439, metadata !DIExpression()), !dbg !7441
  %9 = load %struct.group_device*, %struct.group_device** %entry1, align 8, !dbg !7441
  %list4 = getelementptr inbounds %struct.group_device, %struct.group_device* %9, i32 0, i32 0, !dbg !7441
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !7441
  %10 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !7441
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !7441
  store i8* %11, i8** %__mptr3, align 8, !dbg !7441
  br label %do.body6, !dbg !7441

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !7442

do.end7:                                          ; preds = %do.body6
  %12 = load i8*, i8** %__mptr3, align 8, !dbg !7441
  %add.ptr9 = getelementptr i8, i8* %12, i64 0, !dbg !7441
  %13 = bitcast i8* %add.ptr9 to %struct.group_device*, !dbg !7441
  store %struct.group_device* %13, %struct.group_device** %tmp8, align 8, !dbg !7442
  %14 = load %struct.group_device*, %struct.group_device** %tmp8, align 8, !dbg !7441
  store %struct.group_device* %14, %struct.group_device** %entry1, align 8, !dbg !7435
  br label %for.cond, !dbg !7435, !llvm.loop !7444

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %ret, align 4, !dbg !7446
  ret i32 %15, !dbg !7447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__iommu_attach_group(%struct.iommu_domain* %domain, %struct.iommu_group* %group) #1 !dbg !7448 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %group.addr = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !7453, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7455, metadata !DIExpression()), !dbg !7456
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7457
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 9, !dbg !7459
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !7459
  %tobool = icmp ne %struct.iommu_domain* %1, null, !dbg !7457
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7460

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7461
  %domain1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %2, i32 0, i32 10, !dbg !7462
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain1, align 8, !dbg !7462
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7463
  %default_domain2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %4, i32 0, i32 9, !dbg !7464
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain2, align 8, !dbg !7464
  %cmp = icmp ne %struct.iommu_domain* %3, %5, !dbg !7465
  br i1 %cmp, label %if.then, label %if.end, !dbg !7466

if.then:                                          ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !7467
  br label %return, !dbg !7467

if.end:                                           ; preds = %land.lhs.true, %entry
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7468
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7469
  %8 = bitcast %struct.iommu_domain* %7 to i8*, !dbg !7469
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %6, i8* %8, i32 (%struct.device*, i8*)* @iommu_group_do_attach_device) #9, !dbg !7470
  store i32 %call, i32* %ret, align 4, !dbg !7471
  %9 = load i32, i32* %ret, align 4, !dbg !7472
  %cmp3 = icmp eq i32 %9, 0, !dbg !7474
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !7475

if.then4:                                         ; preds = %if.end
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7476
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !7477
  %domain5 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %11, i32 0, i32 10, !dbg !7478
  store %struct.iommu_domain* %10, %struct.iommu_domain** %domain5, align 8, !dbg !7479
  br label %if.end6, !dbg !7477

if.end6:                                          ; preds = %if.then4, %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !7480
  store i32 %12, i32* %retval, align 4, !dbg !7481
  br label %return, !dbg !7481

return:                                           ; preds = %if.end6, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !7482
  ret i32 %13, !dbg !7482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_uapi_cache_invalidate(%struct.iommu_domain* %domain, %struct.device* %dev, i8* %uinfo) #1 !dbg !7483 {
entry:
  %retval.i.i48 = alloca i1, align 1
  %addr.addr.i.i49 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i49, metadata !7486, metadata !DIExpression()), !dbg !7491
  %bytes.addr.i.i50 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i50, metadata !7500, metadata !DIExpression()), !dbg !7501
  %is_source.addr.i.i51 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i51, metadata !7502, metadata !DIExpression()), !dbg !7503
  %sz.i.i52 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i52, metadata !7504, metadata !DIExpression()), !dbg !7505
  %__ret_warn_on.i.i53 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i53, metadata !7506, metadata !DIExpression()), !dbg !7509
  %tmp.i.i54 = alloca i64, align 8
  %to.addr.i55 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i55, metadata !7510, metadata !DIExpression()), !dbg !7511
  %from.addr.i56 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i56, metadata !7512, metadata !DIExpression()), !dbg !7513
  %n.addr.i57 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i57, metadata !7514, metadata !DIExpression()), !dbg !7515
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7486, metadata !DIExpression()), !dbg !7516
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7500, metadata !DIExpression()), !dbg !7520
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7502, metadata !DIExpression()), !dbg !7521
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7504, metadata !DIExpression()), !dbg !7522
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7506, metadata !DIExpression()), !dbg !7523
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7510, metadata !DIExpression()), !dbg !7524
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7512, metadata !DIExpression()), !dbg !7525
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7514, metadata !DIExpression()), !dbg !7526
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %uinfo.addr = alloca i8*, align 8
  %inv_info = alloca %struct.iommu_cache_invalidate_info, align 8
  %minsz = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x278 = alloca i32, align 4
  %__UNIQUE_ID___y279 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7529, metadata !DIExpression()), !dbg !7530
  store i8* %uinfo, i8** %uinfo.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uinfo.addr, metadata !7531, metadata !DIExpression()), !dbg !7532
  call void @llvm.dbg.declare(metadata %struct.iommu_cache_invalidate_info* %inv_info, metadata !7533, metadata !DIExpression()), !dbg !7534
  %0 = bitcast %struct.iommu_cache_invalidate_info* %inv_info to i8*, !dbg !7534
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !7534
  call void @llvm.dbg.declare(metadata i32* %minsz, metadata !7535, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7537, metadata !DIExpression()), !dbg !7538
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7539
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %1, i32 0, i32 1, !dbg !7539
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !7539
  %cache_invalidate = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %2, i32 0, i32 35, !dbg !7539
  %3 = load i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_cache_invalidate_info*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_cache_invalidate_info*)** %cache_invalidate, align 8, !dbg !7539
  %tobool = icmp ne i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_cache_invalidate_info*)* %3, null, !dbg !7539
  %lnot = xor i1 %tobool, true, !dbg !7539
  %lnot1 = xor i1 %lnot, true, !dbg !7539
  %lnot2 = xor i1 %lnot1, true, !dbg !7539
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7539
  %conv = sext i32 %lnot.ext to i64, !dbg !7539
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7539
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7541

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7542
  br label %return, !dbg !7542

if.end:                                           ; preds = %entry
  store i32 16, i32* %minsz, align 4, !dbg !7543
  %4 = bitcast %struct.iommu_cache_invalidate_info* %inv_info to i8*, !dbg !7544
  %5 = load i8*, i8** %uinfo.addr, align 8, !dbg !7545
  %6 = load i32, i32* %minsz, align 4, !dbg !7546
  %conv4 = zext i32 %6 to i64, !dbg !7546
  store i8* %4, i8** %to.addr.i, align 8
  store i8* %5, i8** %from.addr.i, align 8
  store i64 %conv4, i64* %n.addr.i, align 8
  %7 = load i8*, i8** %to.addr.i, align 8, !dbg !7547
  %8 = load i64, i64* %n.addr.i, align 8, !dbg !7547
  store i8* %7, i8** %addr.addr.i.i, align 8
  store i64 %8, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7522
  %9 = load i32, i32* %sz.i.i, align 4, !dbg !7548
  %cmp.i.i = icmp sge i32 %9, 0, !dbg !7548
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7548

land.rhs.i.i:                                     ; preds = %if.end
  %10 = load i32, i32* %sz.i.i, align 4, !dbg !7548
  %conv.i.i = sext i32 %10 to i64, !dbg !7548
  %11 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7548
  %cmp1.i.i = icmp ult i64 %conv.i.i, %11, !dbg !7548
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %if.end
  %12 = phi i1 [ false, %if.end ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7550
  %lnot.i.i = xor i1 %12, true, !dbg !7548
  %lnot.ext.i.i = zext i1 %12 to i32, !dbg !7548
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7548
  br i1 %12, label %if.then.i.i, label %if.end10.i.i, !dbg !7551

if.then.i.i:                                      ; preds = %land.end.i.i
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7552
  %14 = call i1 @llvm.is.constant.i64(i64 %13) #11, !dbg !7555
  br i1 %14, label %if.else.i.i, label %if.then5.i.i, !dbg !7556

if.then5.i.i:                                     ; preds = %if.then.i.i
  %15 = load i32, i32* %sz.i.i, align 4, !dbg !7557
  %16 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7558
  call void @copy_overflow(i32 %15, i64 %16) #14, !dbg !7559
  br label %if.end9.i.i, !dbg !7559

if.else.i.i:                                      ; preds = %if.then.i.i
  %17 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7560
  %tobool6.i.i = trunc i8 %17 to i1, !dbg !7560
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7562

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !7563
  br label %if.end.i.i, !dbg !7563

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !7564
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7565
  br label %check_copy_size.exit.i, !dbg !7565

if.end10.i.i:                                     ; preds = %land.end.i.i
  %18 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7523
  %cmp11.i.i = icmp ugt i64 %18, 2147483647, !dbg !7523
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7523
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7523
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7523
  %19 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7566
  %tobool17.i.i = icmp ne i32 %19, 0, !dbg !7566
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7566
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7566
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7566
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7523

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !7568, !srcloc !7571
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #11, !dbg !7572, !srcloc !7574
  br label %if.end31.i.i, !dbg !7575

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %20 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7523
  %tobool32.i.i = icmp ne i32 %20, 0, !dbg !7523
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7523
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7523
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7523
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7566
  %21 = load i64, i64* %tmp.i.i, align 8, !dbg !7523
  %tobool38.i.i = icmp ne i64 %21, 0, !dbg !7576
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7577

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7578
  br label %check_copy_size.exit.i, !dbg !7578

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %22 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7579
  %23 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7580
  %24 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7581
  %tobool41.i.i = trunc i8 %24 to i1, !dbg !7581
  call void @check_object_size(i8* %22, i64 %23, i1 zeroext %tobool41.i.i) #14, !dbg !7582
  store i1 true, i1* %retval.i.i, align 1, !dbg !7583
  br label %check_copy_size.exit.i, !dbg !7583

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %25 = load i1, i1* %retval.i.i, align 1, !dbg !7584
  %lnot.i = xor i1 %25, true, !dbg !7547
  %lnot.ext.i = zext i1 %25 to i32, !dbg !7547
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7547
  br i1 %25, label %if.then.i, label %copy_from_user.exit, !dbg !7585

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %26 = load i8*, i8** %to.addr.i, align 8, !dbg !7586
  %27 = load i8*, i8** %from.addr.i, align 8, !dbg !7587
  %28 = load i64, i64* %n.addr.i, align 8, !dbg !7588
  %call2.i = call i64 @_copy_from_user(i8* %26, i8* %27, i64 %28) #14, !dbg !7589
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7590
  br label %copy_from_user.exit, !dbg !7591

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %29 = load i64, i64* %n.addr.i, align 8, !dbg !7592
  %tobool5 = icmp ne i64 %29, 0, !dbg !7593
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7594

if.then6:                                         ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7595
  br label %return, !dbg !7595

if.end7:                                          ; preds = %copy_from_user.exit
  %argsz = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %inv_info, i32 0, i32 0, !dbg !7596
  %30 = load i32, i32* %argsz, align 8, !dbg !7596
  %31 = load i32, i32* %minsz, align 4, !dbg !7598
  %cmp = icmp ult i32 %30, %31, !dbg !7599
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !7600

if.then9:                                         ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !7601
  br label %return, !dbg !7601

if.end10:                                         ; preds = %if.end7
  %granularity = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %inv_info, i32 0, i32 3, !dbg !7602
  %32 = load i8, i8* %granularity, align 1, !dbg !7602
  %conv11 = zext i8 %32 to i32, !dbg !7604
  %cmp12 = icmp eq i32 %conv11, 1, !dbg !7605
  br i1 %cmp12, label %land.lhs.true, label %if.end19, !dbg !7606

land.lhs.true:                                    ; preds = %if.end10
  %argsz14 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %inv_info, i32 0, i32 0, !dbg !7607
  %33 = load i32, i32* %argsz14, align 8, !dbg !7607
  %conv15 = zext i32 %33 to i64, !dbg !7608
  %cmp16 = icmp ult i64 %conv15, 32, !dbg !7609
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !7610

if.then18:                                        ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !7611
  br label %return, !dbg !7611

if.end19:                                         ; preds = %land.lhs.true, %if.end10
  %granularity20 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %inv_info, i32 0, i32 3, !dbg !7612
  %34 = load i8, i8* %granularity20, align 1, !dbg !7612
  %conv21 = zext i8 %34 to i32, !dbg !7614
  %cmp22 = icmp eq i32 %conv21, 2, !dbg !7615
  br i1 %cmp22, label %land.lhs.true24, label %if.end30, !dbg !7616

land.lhs.true24:                                  ; preds = %if.end19
  %argsz25 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %inv_info, i32 0, i32 0, !dbg !7617
  %35 = load i32, i32* %argsz25, align 8, !dbg !7617
  %conv26 = zext i32 %35 to i64, !dbg !7618
  %cmp27 = icmp ult i64 %conv26, 56, !dbg !7619
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7620

if.then29:                                        ; preds = %land.lhs.true24
  store i32 -22, i32* %retval, align 4, !dbg !7621
  br label %return, !dbg !7621

if.end30:                                         ; preds = %land.lhs.true24, %if.end19
  %36 = bitcast %struct.iommu_cache_invalidate_info* %inv_info to i8*, !dbg !7622
  %37 = load i32, i32* %minsz, align 4, !dbg !7623
  %idx.ext = zext i32 %37 to i64, !dbg !7624
  %add.ptr = getelementptr i8, i8* %36, i64 %idx.ext, !dbg !7624
  %38 = load i8*, i8** %uinfo.addr, align 8, !dbg !7625
  %39 = load i32, i32* %minsz, align 4, !dbg !7626
  %idx.ext31 = zext i32 %39 to i64, !dbg !7627
  %add.ptr32 = getelementptr i8, i8* %38, i64 %idx.ext31, !dbg !7627
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x278, metadata !7628, metadata !DIExpression()), !dbg !7630
  %argsz33 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %inv_info, i32 0, i32 0, !dbg !7630
  %40 = load i32, i32* %argsz33, align 8, !dbg !7630
  store i32 %40, i32* %__UNIQUE_ID___x278, align 4, !dbg !7630
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y279, metadata !7631, metadata !DIExpression()), !dbg !7630
  store i32 56, i32* %__UNIQUE_ID___y279, align 4, !dbg !7630
  %41 = load i32, i32* %__UNIQUE_ID___x278, align 4, !dbg !7630
  %42 = load i32, i32* %__UNIQUE_ID___y279, align 4, !dbg !7630
  %cmp34 = icmp ult i32 %41, %42, !dbg !7630
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !7630

cond.true:                                        ; preds = %if.end30
  %43 = load i32, i32* %__UNIQUE_ID___x278, align 4, !dbg !7630
  br label %cond.end, !dbg !7630

cond.false:                                       ; preds = %if.end30
  %44 = load i32, i32* %__UNIQUE_ID___y279, align 4, !dbg !7630
  br label %cond.end, !dbg !7630

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %43, %cond.true ], [ %44, %cond.false ], !dbg !7630
  store i32 %cond, i32* %tmp, align 4, !dbg !7630
  %45 = load i32, i32* %tmp, align 4, !dbg !7630
  %46 = load i32, i32* %minsz, align 4, !dbg !7632
  %sub = sub i32 %45, %46, !dbg !7633
  %conv36 = zext i32 %sub to i64, !dbg !7634
  store i8* %add.ptr, i8** %to.addr.i55, align 8
  store i8* %add.ptr32, i8** %from.addr.i56, align 8
  store i64 %conv36, i64* %n.addr.i57, align 8
  %47 = load i8*, i8** %to.addr.i55, align 8, !dbg !7635
  %48 = load i64, i64* %n.addr.i57, align 8, !dbg !7635
  store i8* %47, i8** %addr.addr.i.i49, align 8
  store i64 %48, i64* %bytes.addr.i.i50, align 8
  store i8 0, i8* %is_source.addr.i.i51, align 1
  store i32 -1, i32* %sz.i.i52, align 4, !dbg !7505
  %49 = load i32, i32* %sz.i.i52, align 4, !dbg !7636
  %cmp.i.i58 = icmp sge i32 %49, 0, !dbg !7636
  br i1 %cmp.i.i58, label %land.rhs.i.i61, label %land.end.i.i65, !dbg !7636

land.rhs.i.i61:                                   ; preds = %cond.end
  %50 = load i32, i32* %sz.i.i52, align 4, !dbg !7636
  %conv.i.i59 = sext i32 %50 to i64, !dbg !7636
  %51 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !7636
  %cmp1.i.i60 = icmp ult i64 %conv.i.i59, %51, !dbg !7636
  br label %land.end.i.i65

land.end.i.i65:                                   ; preds = %land.rhs.i.i61, %cond.end
  %52 = phi i1 [ false, %cond.end ], [ %cmp1.i.i60, %land.rhs.i.i61 ], !dbg !7637
  %lnot.i.i62 = xor i1 %52, true, !dbg !7636
  %lnot.ext.i.i63 = zext i1 %52 to i32, !dbg !7636
  %conv4.i.i64 = sext i32 %lnot.ext.i.i63 to i64, !dbg !7636
  br i1 %52, label %if.then.i.i66, label %if.end10.i.i81, !dbg !7638

if.then.i.i66:                                    ; preds = %land.end.i.i65
  %53 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !7639
  %54 = call i1 @llvm.is.constant.i64(i64 %53) #11, !dbg !7640
  br i1 %54, label %if.else.i.i69, label %if.then5.i.i67, !dbg !7641

if.then5.i.i67:                                   ; preds = %if.then.i.i66
  %55 = load i32, i32* %sz.i.i52, align 4, !dbg !7642
  %56 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !7643
  call void @copy_overflow(i32 %55, i64 %56) #14, !dbg !7644
  br label %if.end9.i.i73, !dbg !7644

if.else.i.i69:                                    ; preds = %if.then.i.i66
  %57 = load i8, i8* %is_source.addr.i.i51, align 1, !dbg !7645
  %tobool6.i.i68 = trunc i8 %57 to i1, !dbg !7645
  br i1 %tobool6.i.i68, label %if.then7.i.i70, label %if.else8.i.i71, !dbg !7646

if.then7.i.i70:                                   ; preds = %if.else.i.i69
  call void @__bad_copy_from() #14, !dbg !7647
  br label %if.end.i.i72, !dbg !7647

if.else8.i.i71:                                   ; preds = %if.else.i.i69
  call void @__bad_copy_to() #14, !dbg !7648
  br label %if.end.i.i72

if.end.i.i72:                                     ; preds = %if.else8.i.i71, %if.then7.i.i70
  br label %if.end9.i.i73

if.end9.i.i73:                                    ; preds = %if.end.i.i72, %if.then5.i.i67
  store i1 false, i1* %retval.i.i48, align 1, !dbg !7649
  br label %check_copy_size.exit.i95, !dbg !7649

if.end10.i.i81:                                   ; preds = %land.end.i.i65
  %58 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !7509
  %cmp11.i.i74 = icmp ugt i64 %58, 2147483647, !dbg !7509
  %lnot13.i.i75 = xor i1 %cmp11.i.i74, true, !dbg !7509
  %lnot.ext16.i.i76 = zext i1 %cmp11.i.i74 to i32, !dbg !7509
  store i32 %lnot.ext16.i.i76, i32* %__ret_warn_on.i.i53, align 4, !dbg !7509
  %59 = load i32, i32* %__ret_warn_on.i.i53, align 4, !dbg !7650
  %tobool17.i.i77 = icmp ne i32 %59, 0, !dbg !7650
  %lnot18.i.i78 = xor i1 %tobool17.i.i77, true, !dbg !7650
  %lnot.ext21.i.i79 = zext i1 %tobool17.i.i77 to i32, !dbg !7650
  %conv22.i.i80 = sext i32 %lnot.ext21.i.i79 to i64, !dbg !7650
  br i1 %tobool17.i.i77, label %if.then24.i.i82, label %if.end31.i.i88, !dbg !7509

if.then24.i.i82:                                  ; preds = %if.end10.i.i81
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !7651, !srcloc !7571
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #11, !dbg !7652, !srcloc !7574
  br label %if.end31.i.i88, !dbg !7653

if.end31.i.i88:                                   ; preds = %if.then24.i.i82, %if.end10.i.i81
  %60 = load i32, i32* %__ret_warn_on.i.i53, align 4, !dbg !7509
  %tobool32.i.i83 = icmp ne i32 %60, 0, !dbg !7509
  %lnot33.i.i84 = xor i1 %tobool32.i.i83, true, !dbg !7509
  %lnot.ext36.i.i85 = zext i1 %tobool32.i.i83 to i32, !dbg !7509
  %conv37.i.i86 = sext i32 %lnot.ext36.i.i85 to i64, !dbg !7509
  store i64 %conv37.i.i86, i64* %tmp.i.i54, align 8, !dbg !7650
  %61 = load i64, i64* %tmp.i.i54, align 8, !dbg !7509
  %tobool38.i.i87 = icmp ne i64 %61, 0, !dbg !7654
  br i1 %tobool38.i.i87, label %if.then39.i.i89, label %if.end40.i.i91, !dbg !7655

if.then39.i.i89:                                  ; preds = %if.end31.i.i88
  store i1 false, i1* %retval.i.i48, align 1, !dbg !7656
  br label %check_copy_size.exit.i95, !dbg !7656

if.end40.i.i91:                                   ; preds = %if.end31.i.i88
  %62 = load i8*, i8** %addr.addr.i.i49, align 8, !dbg !7657
  %63 = load i64, i64* %bytes.addr.i.i50, align 8, !dbg !7658
  %64 = load i8, i8* %is_source.addr.i.i51, align 1, !dbg !7659
  %tobool41.i.i90 = trunc i8 %64 to i1, !dbg !7659
  call void @check_object_size(i8* %62, i64 %63, i1 zeroext %tobool41.i.i90) #14, !dbg !7660
  store i1 true, i1* %retval.i.i48, align 1, !dbg !7661
  br label %check_copy_size.exit.i95, !dbg !7661

check_copy_size.exit.i95:                         ; preds = %if.end40.i.i91, %if.then39.i.i89, %if.end9.i.i73
  %65 = load i1, i1* %retval.i.i48, align 1, !dbg !7662
  %lnot.i92 = xor i1 %65, true, !dbg !7635
  %lnot.ext.i93 = zext i1 %65 to i32, !dbg !7635
  %conv.i94 = sext i32 %lnot.ext.i93 to i64, !dbg !7635
  br i1 %65, label %if.then.i97, label %copy_from_user.exit98, !dbg !7663

if.then.i97:                                      ; preds = %check_copy_size.exit.i95
  %66 = load i8*, i8** %to.addr.i55, align 8, !dbg !7664
  %67 = load i8*, i8** %from.addr.i56, align 8, !dbg !7665
  %68 = load i64, i64* %n.addr.i57, align 8, !dbg !7666
  %call2.i96 = call i64 @_copy_from_user(i8* %66, i8* %67, i64 %68) #14, !dbg !7667
  store i64 %call2.i96, i64* %n.addr.i57, align 8, !dbg !7668
  br label %copy_from_user.exit98, !dbg !7669

copy_from_user.exit98:                            ; preds = %check_copy_size.exit.i95, %if.then.i97
  %69 = load i64, i64* %n.addr.i57, align 8, !dbg !7670
  %tobool38 = icmp ne i64 %69, 0, !dbg !7671
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !7672

if.then39:                                        ; preds = %copy_from_user.exit98
  store i32 -14, i32* %retval, align 4, !dbg !7673
  br label %return, !dbg !7673

if.end40:                                         ; preds = %copy_from_user.exit98
  %call41 = call i32 @iommu_check_cache_invl_data(%struct.iommu_cache_invalidate_info* %inv_info) #9, !dbg !7674
  store i32 %call41, i32* %ret, align 4, !dbg !7675
  %70 = load i32, i32* %ret, align 4, !dbg !7676
  %tobool42 = icmp ne i32 %70, 0, !dbg !7676
  br i1 %tobool42, label %if.then43, label %if.end44, !dbg !7678

if.then43:                                        ; preds = %if.end40
  %71 = load i32, i32* %ret, align 4, !dbg !7679
  store i32 %71, i32* %retval, align 4, !dbg !7680
  br label %return, !dbg !7680

if.end44:                                         ; preds = %if.end40
  %72 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7681
  %ops45 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %72, i32 0, i32 1, !dbg !7682
  %73 = load %struct.iommu_ops*, %struct.iommu_ops** %ops45, align 8, !dbg !7682
  %cache_invalidate46 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %73, i32 0, i32 35, !dbg !7683
  %74 = load i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_cache_invalidate_info*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_cache_invalidate_info*)** %cache_invalidate46, align 8, !dbg !7683
  %75 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7684
  %76 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7685
  %call47 = call i32 %74(%struct.iommu_domain* %75, %struct.device* %76, %struct.iommu_cache_invalidate_info* %inv_info) #9, !dbg !7681
  store i32 %call47, i32* %retval, align 4, !dbg !7686
  br label %return, !dbg !7686

return:                                           ; preds = %if.end44, %if.then43, %if.then39, %if.then29, %if.then18, %if.then9, %if.then6, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !7687
  ret i32 %77, !dbg !7687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_check_cache_invl_data(%struct.iommu_cache_invalidate_info* %info) #1 !dbg !7688 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.iommu_cache_invalidate_info*, align 8
  %mask = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.iommu_cache_invalidate_info* %info, %struct.iommu_cache_invalidate_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_cache_invalidate_info** %info.addr, metadata !7691, metadata !DIExpression()), !dbg !7692
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !7693, metadata !DIExpression()), !dbg !7694
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7695, metadata !DIExpression()), !dbg !7696
  %0 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7697
  %version = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %0, i32 0, i32 1, !dbg !7699
  %1 = load i32, i32* %version, align 4, !dbg !7699
  %cmp = icmp ne i32 %1, 1, !dbg !7700
  br i1 %cmp, label %if.then, label %if.end, !dbg !7701

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7702
  br label %return, !dbg !7702

if.end:                                           ; preds = %entry
  store i32 7, i32* %mask, align 4, !dbg !7703
  %2 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7704
  %cache = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %2, i32 0, i32 2, !dbg !7706
  %3 = load i8, i8* %cache, align 8, !dbg !7706
  %conv = zext i8 %3 to i32, !dbg !7704
  %4 = load i32, i32* %mask, align 4, !dbg !7707
  %neg = xor i32 %4, -1, !dbg !7708
  %and = and i32 %conv, %neg, !dbg !7709
  %tobool = icmp ne i32 %and, 0, !dbg !7709
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !7710

if.then1:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7711
  br label %return, !dbg !7711

if.end2:                                          ; preds = %if.end
  %5 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7712
  %granularity = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %5, i32 0, i32 3, !dbg !7714
  %6 = load i8, i8* %granularity, align 1, !dbg !7714
  %conv3 = zext i8 %6 to i32, !dbg !7712
  %cmp4 = icmp sge i32 %conv3, 3, !dbg !7715
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !7716

if.then6:                                         ; preds = %if.end2
  store i32 -22, i32* %retval, align 4, !dbg !7717
  br label %return, !dbg !7717

if.end7:                                          ; preds = %if.end2
  %7 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7718
  %granularity8 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %7, i32 0, i32 3, !dbg !7719
  %8 = load i8, i8* %granularity8, align 1, !dbg !7719
  %conv9 = zext i8 %8 to i32, !dbg !7718
  switch i32 %conv9, label %sw.default [
    i32 2, label %sw.bb
    i32 1, label %sw.bb21
    i32 0, label %sw.bb29
  ], !dbg !7720

sw.bb:                                            ; preds = %if.end7
  %9 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7721
  %cache10 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %9, i32 0, i32 2, !dbg !7724
  %10 = load i8, i8* %cache10, align 8, !dbg !7724
  %conv11 = zext i8 %10 to i32, !dbg !7721
  %and12 = and i32 %conv11, 4, !dbg !7725
  %tobool13 = icmp ne i32 %and12, 0, !dbg !7725
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7726

if.then14:                                        ; preds = %sw.bb
  store i32 -22, i32* %retval, align 4, !dbg !7727
  br label %return, !dbg !7727

if.end15:                                         ; preds = %sw.bb
  store i32 7, i32* %mask, align 4, !dbg !7728
  %11 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7729
  %granu = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %11, i32 0, i32 5, !dbg !7731
  %addr_info = bitcast %union.anon.66* %granu to %struct.iommu_inv_addr_info*, !dbg !7732
  %flags = getelementptr inbounds %struct.iommu_inv_addr_info, %struct.iommu_inv_addr_info* %addr_info, i32 0, i32 0, !dbg !7733
  %12 = load i32, i32* %flags, align 8, !dbg !7733
  %13 = load i32, i32* %mask, align 4, !dbg !7734
  %neg16 = xor i32 %13, -1, !dbg !7735
  %and17 = and i32 %12, %neg16, !dbg !7736
  %tobool18 = icmp ne i32 %and17, 0, !dbg !7736
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !7737

if.then19:                                        ; preds = %if.end15
  store i32 -22, i32* %retval, align 4, !dbg !7738
  br label %return, !dbg !7738

if.end20:                                         ; preds = %if.end15
  br label %sw.epilog, !dbg !7739

sw.bb21:                                          ; preds = %if.end7
  store i32 3, i32* %mask, align 4, !dbg !7740
  %14 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7741
  %granu22 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %14, i32 0, i32 5, !dbg !7743
  %pasid_info = bitcast %union.anon.66* %granu22 to %struct.iommu_inv_pasid_info*, !dbg !7744
  %flags23 = getelementptr inbounds %struct.iommu_inv_pasid_info, %struct.iommu_inv_pasid_info* %pasid_info, i32 0, i32 0, !dbg !7745
  %15 = load i32, i32* %flags23, align 8, !dbg !7745
  %16 = load i32, i32* %mask, align 4, !dbg !7746
  %neg24 = xor i32 %16, -1, !dbg !7747
  %and25 = and i32 %15, %neg24, !dbg !7748
  %tobool26 = icmp ne i32 %and25, 0, !dbg !7748
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !7749

if.then27:                                        ; preds = %sw.bb21
  store i32 -22, i32* %retval, align 4, !dbg !7750
  br label %return, !dbg !7750

if.end28:                                         ; preds = %sw.bb21
  br label %sw.epilog, !dbg !7751

sw.bb29:                                          ; preds = %if.end7
  %17 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7752
  %cache30 = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %17, i32 0, i32 2, !dbg !7754
  %18 = load i8, i8* %cache30, align 8, !dbg !7754
  %conv31 = zext i8 %18 to i32, !dbg !7752
  %and32 = and i32 %conv31, 2, !dbg !7755
  %tobool33 = icmp ne i32 %and32, 0, !dbg !7755
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !7756

if.then34:                                        ; preds = %sw.bb29
  store i32 -22, i32* %retval, align 4, !dbg !7757
  br label %return, !dbg !7757

if.end35:                                         ; preds = %sw.bb29
  br label %sw.epilog, !dbg !7758

sw.default:                                       ; preds = %if.end7
  store i32 -22, i32* %retval, align 4, !dbg !7759
  br label %return, !dbg !7759

sw.epilog:                                        ; preds = %if.end35, %if.end28, %if.end20
  store i32 0, i32* %i, align 4, !dbg !7760
  br label %for.cond, !dbg !7762

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %19 = load i32, i32* %i, align 4, !dbg !7763
  %conv36 = sext i32 %19 to i64, !dbg !7763
  %cmp37 = icmp ult i64 %conv36, 6, !dbg !7765
  br i1 %cmp37, label %for.body, label %for.end, !dbg !7766

for.body:                                         ; preds = %for.cond
  %20 = load %struct.iommu_cache_invalidate_info*, %struct.iommu_cache_invalidate_info** %info.addr, align 8, !dbg !7767
  %padding = getelementptr inbounds %struct.iommu_cache_invalidate_info, %struct.iommu_cache_invalidate_info* %20, i32 0, i32 4, !dbg !7770
  %21 = load i32, i32* %i, align 4, !dbg !7771
  %idxprom = sext i32 %21 to i64, !dbg !7767
  %arrayidx = getelementptr [6 x i8], [6 x i8]* %padding, i64 0, i64 %idxprom, !dbg !7767
  %22 = load i8, i8* %arrayidx, align 1, !dbg !7767
  %tobool39 = icmp ne i8 %22, 0, !dbg !7767
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !7772

if.then40:                                        ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !7773
  br label %return, !dbg !7773

if.end41:                                         ; preds = %for.body
  br label %for.inc, !dbg !7774

for.inc:                                          ; preds = %if.end41
  %23 = load i32, i32* %i, align 4, !dbg !7775
  %inc = add i32 %23, 1, !dbg !7775
  store i32 %inc, i32* %i, align 4, !dbg !7775
  br label %for.cond, !dbg !7776, !llvm.loop !7777

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !7779
  br label %return, !dbg !7779

return:                                           ; preds = %for.end, %if.then40, %sw.default, %if.then34, %if.then27, %if.then19, %if.then14, %if.then6, %if.then1, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !7780
  ret i32 %24, !dbg !7780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_uapi_sva_bind_gpasid(%struct.iommu_domain* %domain, %struct.device* %dev, i8* %udata) #1 !dbg !7781 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %udata.addr = alloca i8*, align 8
  %data = alloca %struct.iommu_gpasid_bind_data, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7782, metadata !DIExpression()), !dbg !7783
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7784, metadata !DIExpression()), !dbg !7785
  store i8* %udata, i8** %udata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %udata.addr, metadata !7786, metadata !DIExpression()), !dbg !7787
  call void @llvm.dbg.declare(metadata %struct.iommu_gpasid_bind_data* %data, metadata !7788, metadata !DIExpression()), !dbg !7789
  %0 = bitcast %struct.iommu_gpasid_bind_data* %data to i8*, !dbg !7789
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 72, i1 false), !dbg !7789
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7790, metadata !DIExpression()), !dbg !7791
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7792
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %1, i32 0, i32 1, !dbg !7792
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !7792
  %sva_bind_gpasid = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %2, i32 0, i32 36, !dbg !7792
  %3 = load i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)** %sva_bind_gpasid, align 8, !dbg !7792
  %tobool = icmp ne i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)* %3, null, !dbg !7792
  %lnot = xor i1 %tobool, true, !dbg !7792
  %lnot1 = xor i1 %lnot, true, !dbg !7792
  %lnot2 = xor i1 %lnot1, true, !dbg !7792
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7792
  %conv = sext i32 %lnot.ext to i64, !dbg !7792
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7792
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7794

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7795
  br label %return, !dbg !7795

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %udata.addr, align 8, !dbg !7796
  %call = call i32 @iommu_sva_prepare_bind_data(i8* %4, %struct.iommu_gpasid_bind_data* %data) #9, !dbg !7797
  store i32 %call, i32* %ret, align 4, !dbg !7798
  %5 = load i32, i32* %ret, align 4, !dbg !7799
  %tobool4 = icmp ne i32 %5, 0, !dbg !7799
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7801

if.then5:                                         ; preds = %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !7802
  store i32 %6, i32* %retval, align 4, !dbg !7803
  br label %return, !dbg !7803

if.end6:                                          ; preds = %if.end
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7804
  %ops7 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %7, i32 0, i32 1, !dbg !7805
  %8 = load %struct.iommu_ops*, %struct.iommu_ops** %ops7, align 8, !dbg !7805
  %sva_bind_gpasid8 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %8, i32 0, i32 36, !dbg !7806
  %9 = load i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)** %sva_bind_gpasid8, align 8, !dbg !7806
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7807
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7808
  %call9 = call i32 %9(%struct.iommu_domain* %10, %struct.device* %11, %struct.iommu_gpasid_bind_data* %data) #9, !dbg !7804
  store i32 %call9, i32* %retval, align 4, !dbg !7809
  br label %return, !dbg !7809

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7810
  ret i32 %12, !dbg !7810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_sva_prepare_bind_data(i8* %udata, %struct.iommu_gpasid_bind_data* %data) #1 !dbg !7811 {
entry:
  %retval.i.i15 = alloca i1, align 1
  %addr.addr.i.i16 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i16, metadata !7486, metadata !DIExpression()), !dbg !7814
  %bytes.addr.i.i17 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i17, metadata !7500, metadata !DIExpression()), !dbg !7818
  %is_source.addr.i.i18 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i18, metadata !7502, metadata !DIExpression()), !dbg !7819
  %sz.i.i19 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i19, metadata !7504, metadata !DIExpression()), !dbg !7820
  %__ret_warn_on.i.i20 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i20, metadata !7506, metadata !DIExpression()), !dbg !7821
  %tmp.i.i21 = alloca i64, align 8
  %to.addr.i22 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i22, metadata !7510, metadata !DIExpression()), !dbg !7822
  %from.addr.i23 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i23, metadata !7512, metadata !DIExpression()), !dbg !7823
  %n.addr.i24 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i24, metadata !7514, metadata !DIExpression()), !dbg !7824
  %retval.i.i = alloca i1, align 1
  %addr.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr.i.i, metadata !7486, metadata !DIExpression()), !dbg !7825
  %bytes.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %bytes.addr.i.i, metadata !7500, metadata !DIExpression()), !dbg !7829
  %is_source.addr.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %is_source.addr.i.i, metadata !7502, metadata !DIExpression()), !dbg !7830
  %sz.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.i.i, metadata !7504, metadata !DIExpression()), !dbg !7831
  %__ret_warn_on.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on.i.i, metadata !7506, metadata !DIExpression()), !dbg !7832
  %tmp.i.i = alloca i64, align 8
  %to.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr.i, metadata !7510, metadata !DIExpression()), !dbg !7833
  %from.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr.i, metadata !7512, metadata !DIExpression()), !dbg !7834
  %n.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr.i, metadata !7514, metadata !DIExpression()), !dbg !7835
  %retval = alloca i32, align 4
  %udata.addr = alloca i8*, align 8
  %data.addr = alloca %struct.iommu_gpasid_bind_data*, align 8
  %minsz = alloca i32, align 4
  %__UNIQUE_ID___x280 = alloca i32, align 4
  %__UNIQUE_ID___y281 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store i8* %udata, i8** %udata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %udata.addr, metadata !7836, metadata !DIExpression()), !dbg !7837
  store %struct.iommu_gpasid_bind_data* %data, %struct.iommu_gpasid_bind_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_gpasid_bind_data** %data.addr, metadata !7838, metadata !DIExpression()), !dbg !7839
  call void @llvm.dbg.declare(metadata i32* %minsz, metadata !7840, metadata !DIExpression()), !dbg !7841
  store i32 56, i32* %minsz, align 4, !dbg !7842
  %0 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !7843
  %1 = bitcast %struct.iommu_gpasid_bind_data* %0 to i8*, !dbg !7843
  %2 = load i8*, i8** %udata.addr, align 8, !dbg !7844
  %3 = load i32, i32* %minsz, align 4, !dbg !7845
  %conv = zext i32 %3 to i64, !dbg !7845
  store i8* %1, i8** %to.addr.i, align 8
  store i8* %2, i8** %from.addr.i, align 8
  store i64 %conv, i64* %n.addr.i, align 8
  %4 = load i8*, i8** %to.addr.i, align 8, !dbg !7846
  %5 = load i64, i64* %n.addr.i, align 8, !dbg !7846
  store i8* %4, i8** %addr.addr.i.i, align 8
  store i64 %5, i64* %bytes.addr.i.i, align 8
  store i8 0, i8* %is_source.addr.i.i, align 1
  store i32 -1, i32* %sz.i.i, align 4, !dbg !7831
  %6 = load i32, i32* %sz.i.i, align 4, !dbg !7847
  %cmp.i.i = icmp sge i32 %6, 0, !dbg !7847
  br i1 %cmp.i.i, label %land.rhs.i.i, label %land.end.i.i, !dbg !7847

land.rhs.i.i:                                     ; preds = %entry
  %7 = load i32, i32* %sz.i.i, align 4, !dbg !7847
  %conv.i.i = sext i32 %7 to i64, !dbg !7847
  %8 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7847
  %cmp1.i.i = icmp ult i64 %conv.i.i, %8, !dbg !7847
  br label %land.end.i.i

land.end.i.i:                                     ; preds = %land.rhs.i.i, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp1.i.i, %land.rhs.i.i ], !dbg !7848
  %lnot.i.i = xor i1 %9, true, !dbg !7847
  %lnot.ext.i.i = zext i1 %9 to i32, !dbg !7847
  %conv4.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7847
  br i1 %9, label %if.then.i.i, label %if.end10.i.i, !dbg !7849

if.then.i.i:                                      ; preds = %land.end.i.i
  %10 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7850
  %11 = call i1 @llvm.is.constant.i64(i64 %10) #11, !dbg !7851
  br i1 %11, label %if.else.i.i, label %if.then5.i.i, !dbg !7852

if.then5.i.i:                                     ; preds = %if.then.i.i
  %12 = load i32, i32* %sz.i.i, align 4, !dbg !7853
  %13 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7854
  call void @copy_overflow(i32 %12, i64 %13) #14, !dbg !7855
  br label %if.end9.i.i, !dbg !7855

if.else.i.i:                                      ; preds = %if.then.i.i
  %14 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7856
  %tobool6.i.i = trunc i8 %14 to i1, !dbg !7856
  br i1 %tobool6.i.i, label %if.then7.i.i, label %if.else8.i.i, !dbg !7857

if.then7.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_from() #14, !dbg !7858
  br label %if.end.i.i, !dbg !7858

if.else8.i.i:                                     ; preds = %if.else.i.i
  call void @__bad_copy_to() #14, !dbg !7859
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.else8.i.i, %if.then7.i.i
  br label %if.end9.i.i

if.end9.i.i:                                      ; preds = %if.end.i.i, %if.then5.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7860
  br label %check_copy_size.exit.i, !dbg !7860

if.end10.i.i:                                     ; preds = %land.end.i.i
  %15 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7832
  %cmp11.i.i = icmp ugt i64 %15, 2147483647, !dbg !7832
  %lnot13.i.i = xor i1 %cmp11.i.i, true, !dbg !7832
  %lnot.ext16.i.i = zext i1 %cmp11.i.i to i32, !dbg !7832
  store i32 %lnot.ext16.i.i, i32* %__ret_warn_on.i.i, align 4, !dbg !7832
  %16 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7861
  %tobool17.i.i = icmp ne i32 %16, 0, !dbg !7861
  %lnot18.i.i = xor i1 %tobool17.i.i, true, !dbg !7861
  %lnot.ext21.i.i = zext i1 %tobool17.i.i to i32, !dbg !7861
  %conv22.i.i = sext i32 %lnot.ext21.i.i to i64, !dbg !7861
  br i1 %tobool17.i.i, label %if.then24.i.i, label %if.end31.i.i, !dbg !7832

if.then24.i.i:                                    ; preds = %if.end10.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !7862, !srcloc !7571
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #11, !dbg !7863, !srcloc !7574
  br label %if.end31.i.i, !dbg !7864

if.end31.i.i:                                     ; preds = %if.then24.i.i, %if.end10.i.i
  %17 = load i32, i32* %__ret_warn_on.i.i, align 4, !dbg !7832
  %tobool32.i.i = icmp ne i32 %17, 0, !dbg !7832
  %lnot33.i.i = xor i1 %tobool32.i.i, true, !dbg !7832
  %lnot.ext36.i.i = zext i1 %tobool32.i.i to i32, !dbg !7832
  %conv37.i.i = sext i32 %lnot.ext36.i.i to i64, !dbg !7832
  store i64 %conv37.i.i, i64* %tmp.i.i, align 8, !dbg !7861
  %18 = load i64, i64* %tmp.i.i, align 8, !dbg !7832
  %tobool38.i.i = icmp ne i64 %18, 0, !dbg !7865
  br i1 %tobool38.i.i, label %if.then39.i.i, label %if.end40.i.i, !dbg !7866

if.then39.i.i:                                    ; preds = %if.end31.i.i
  store i1 false, i1* %retval.i.i, align 1, !dbg !7867
  br label %check_copy_size.exit.i, !dbg !7867

if.end40.i.i:                                     ; preds = %if.end31.i.i
  %19 = load i8*, i8** %addr.addr.i.i, align 8, !dbg !7868
  %20 = load i64, i64* %bytes.addr.i.i, align 8, !dbg !7869
  %21 = load i8, i8* %is_source.addr.i.i, align 1, !dbg !7870
  %tobool41.i.i = trunc i8 %21 to i1, !dbg !7870
  call void @check_object_size(i8* %19, i64 %20, i1 zeroext %tobool41.i.i) #14, !dbg !7871
  store i1 true, i1* %retval.i.i, align 1, !dbg !7872
  br label %check_copy_size.exit.i, !dbg !7872

check_copy_size.exit.i:                           ; preds = %if.end40.i.i, %if.then39.i.i, %if.end9.i.i
  %22 = load i1, i1* %retval.i.i, align 1, !dbg !7873
  %lnot.i = xor i1 %22, true, !dbg !7846
  %lnot.ext.i = zext i1 %22 to i32, !dbg !7846
  %conv.i = sext i32 %lnot.ext.i to i64, !dbg !7846
  br i1 %22, label %if.then.i, label %copy_from_user.exit, !dbg !7874

if.then.i:                                        ; preds = %check_copy_size.exit.i
  %23 = load i8*, i8** %to.addr.i, align 8, !dbg !7875
  %24 = load i8*, i8** %from.addr.i, align 8, !dbg !7876
  %25 = load i64, i64* %n.addr.i, align 8, !dbg !7877
  %call2.i = call i64 @_copy_from_user(i8* %23, i8* %24, i64 %25) #14, !dbg !7878
  store i64 %call2.i, i64* %n.addr.i, align 8, !dbg !7879
  br label %copy_from_user.exit, !dbg !7880

copy_from_user.exit:                              ; preds = %check_copy_size.exit.i, %if.then.i
  %26 = load i64, i64* %n.addr.i, align 8, !dbg !7881
  %tobool = icmp ne i64 %26, 0, !dbg !7882
  br i1 %tobool, label %if.then, label %if.end, !dbg !7883

if.then:                                          ; preds = %copy_from_user.exit
  store i32 -14, i32* %retval, align 4, !dbg !7884
  br label %return, !dbg !7884

if.end:                                           ; preds = %copy_from_user.exit
  %27 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !7885
  %argsz = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %27, i32 0, i32 0, !dbg !7887
  %28 = load i32, i32* %argsz, align 8, !dbg !7887
  %29 = load i32, i32* %minsz, align 4, !dbg !7888
  %cmp = icmp ult i32 %28, %29, !dbg !7889
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7890

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7891
  br label %return, !dbg !7891

if.end3:                                          ; preds = %if.end
  %30 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !7892
  %31 = bitcast %struct.iommu_gpasid_bind_data* %30 to i8*, !dbg !7893
  %32 = load i32, i32* %minsz, align 4, !dbg !7894
  %idx.ext = zext i32 %32 to i64, !dbg !7895
  %add.ptr = getelementptr i8, i8* %31, i64 %idx.ext, !dbg !7895
  %33 = load i8*, i8** %udata.addr, align 8, !dbg !7896
  %34 = load i32, i32* %minsz, align 4, !dbg !7897
  %idx.ext4 = zext i32 %34 to i64, !dbg !7898
  %add.ptr5 = getelementptr i8, i8* %33, i64 %idx.ext4, !dbg !7898
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x280, metadata !7899, metadata !DIExpression()), !dbg !7901
  %35 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !7901
  %argsz6 = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %35, i32 0, i32 0, !dbg !7901
  %36 = load i32, i32* %argsz6, align 8, !dbg !7901
  store i32 %36, i32* %__UNIQUE_ID___x280, align 4, !dbg !7901
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y281, metadata !7902, metadata !DIExpression()), !dbg !7901
  store i32 72, i32* %__UNIQUE_ID___y281, align 4, !dbg !7901
  %37 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !7901
  %38 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !7901
  %cmp7 = icmp ult i32 %37, %38, !dbg !7901
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !7901

cond.true:                                        ; preds = %if.end3
  %39 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !7901
  br label %cond.end, !dbg !7901

cond.false:                                       ; preds = %if.end3
  %40 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !7901
  br label %cond.end, !dbg !7901

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %39, %cond.true ], [ %40, %cond.false ], !dbg !7901
  store i32 %cond, i32* %tmp, align 4, !dbg !7901
  %41 = load i32, i32* %tmp, align 4, !dbg !7901
  %42 = load i32, i32* %minsz, align 4, !dbg !7903
  %sub = sub i32 %41, %42, !dbg !7904
  %conv9 = zext i32 %sub to i64, !dbg !7905
  store i8* %add.ptr, i8** %to.addr.i22, align 8
  store i8* %add.ptr5, i8** %from.addr.i23, align 8
  store i64 %conv9, i64* %n.addr.i24, align 8
  %43 = load i8*, i8** %to.addr.i22, align 8, !dbg !7906
  %44 = load i64, i64* %n.addr.i24, align 8, !dbg !7906
  store i8* %43, i8** %addr.addr.i.i16, align 8
  store i64 %44, i64* %bytes.addr.i.i17, align 8
  store i8 0, i8* %is_source.addr.i.i18, align 1
  store i32 -1, i32* %sz.i.i19, align 4, !dbg !7820
  %45 = load i32, i32* %sz.i.i19, align 4, !dbg !7907
  %cmp.i.i25 = icmp sge i32 %45, 0, !dbg !7907
  br i1 %cmp.i.i25, label %land.rhs.i.i28, label %land.end.i.i32, !dbg !7907

land.rhs.i.i28:                                   ; preds = %cond.end
  %46 = load i32, i32* %sz.i.i19, align 4, !dbg !7907
  %conv.i.i26 = sext i32 %46 to i64, !dbg !7907
  %47 = load i64, i64* %bytes.addr.i.i17, align 8, !dbg !7907
  %cmp1.i.i27 = icmp ult i64 %conv.i.i26, %47, !dbg !7907
  br label %land.end.i.i32

land.end.i.i32:                                   ; preds = %land.rhs.i.i28, %cond.end
  %48 = phi i1 [ false, %cond.end ], [ %cmp1.i.i27, %land.rhs.i.i28 ], !dbg !7908
  %lnot.i.i29 = xor i1 %48, true, !dbg !7907
  %lnot.ext.i.i30 = zext i1 %48 to i32, !dbg !7907
  %conv4.i.i31 = sext i32 %lnot.ext.i.i30 to i64, !dbg !7907
  br i1 %48, label %if.then.i.i33, label %if.end10.i.i48, !dbg !7909

if.then.i.i33:                                    ; preds = %land.end.i.i32
  %49 = load i64, i64* %bytes.addr.i.i17, align 8, !dbg !7910
  %50 = call i1 @llvm.is.constant.i64(i64 %49) #11, !dbg !7911
  br i1 %50, label %if.else.i.i36, label %if.then5.i.i34, !dbg !7912

if.then5.i.i34:                                   ; preds = %if.then.i.i33
  %51 = load i32, i32* %sz.i.i19, align 4, !dbg !7913
  %52 = load i64, i64* %bytes.addr.i.i17, align 8, !dbg !7914
  call void @copy_overflow(i32 %51, i64 %52) #14, !dbg !7915
  br label %if.end9.i.i40, !dbg !7915

if.else.i.i36:                                    ; preds = %if.then.i.i33
  %53 = load i8, i8* %is_source.addr.i.i18, align 1, !dbg !7916
  %tobool6.i.i35 = trunc i8 %53 to i1, !dbg !7916
  br i1 %tobool6.i.i35, label %if.then7.i.i37, label %if.else8.i.i38, !dbg !7917

if.then7.i.i37:                                   ; preds = %if.else.i.i36
  call void @__bad_copy_from() #14, !dbg !7918
  br label %if.end.i.i39, !dbg !7918

if.else8.i.i38:                                   ; preds = %if.else.i.i36
  call void @__bad_copy_to() #14, !dbg !7919
  br label %if.end.i.i39

if.end.i.i39:                                     ; preds = %if.else8.i.i38, %if.then7.i.i37
  br label %if.end9.i.i40

if.end9.i.i40:                                    ; preds = %if.end.i.i39, %if.then5.i.i34
  store i1 false, i1* %retval.i.i15, align 1, !dbg !7920
  br label %check_copy_size.exit.i62, !dbg !7920

if.end10.i.i48:                                   ; preds = %land.end.i.i32
  %54 = load i64, i64* %bytes.addr.i.i17, align 8, !dbg !7821
  %cmp11.i.i41 = icmp ugt i64 %54, 2147483647, !dbg !7821
  %lnot13.i.i42 = xor i1 %cmp11.i.i41, true, !dbg !7821
  %lnot.ext16.i.i43 = zext i1 %cmp11.i.i41 to i32, !dbg !7821
  store i32 %lnot.ext16.i.i43, i32* %__ret_warn_on.i.i20, align 4, !dbg !7821
  %55 = load i32, i32* %__ret_warn_on.i.i20, align 4, !dbg !7921
  %tobool17.i.i44 = icmp ne i32 %55, 0, !dbg !7921
  %lnot18.i.i45 = xor i1 %tobool17.i.i44, true, !dbg !7921
  %lnot.ext21.i.i46 = zext i1 %tobool17.i.i44 to i32, !dbg !7921
  %conv22.i.i47 = sext i32 %lnot.ext21.i.i46 to i64, !dbg !7921
  br i1 %tobool17.i.i44, label %if.then24.i.i49, label %if.end31.i.i55, !dbg !7821

if.then24.i.i49:                                  ; preds = %if.end10.i.i48
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 150, i32 2307, i64 12) #11, !dbg !7922, !srcloc !7571
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 39) #11, !dbg !7923, !srcloc !7574
  br label %if.end31.i.i55, !dbg !7924

if.end31.i.i55:                                   ; preds = %if.then24.i.i49, %if.end10.i.i48
  %56 = load i32, i32* %__ret_warn_on.i.i20, align 4, !dbg !7821
  %tobool32.i.i50 = icmp ne i32 %56, 0, !dbg !7821
  %lnot33.i.i51 = xor i1 %tobool32.i.i50, true, !dbg !7821
  %lnot.ext36.i.i52 = zext i1 %tobool32.i.i50 to i32, !dbg !7821
  %conv37.i.i53 = sext i32 %lnot.ext36.i.i52 to i64, !dbg !7821
  store i64 %conv37.i.i53, i64* %tmp.i.i21, align 8, !dbg !7921
  %57 = load i64, i64* %tmp.i.i21, align 8, !dbg !7821
  %tobool38.i.i54 = icmp ne i64 %57, 0, !dbg !7925
  br i1 %tobool38.i.i54, label %if.then39.i.i56, label %if.end40.i.i58, !dbg !7926

if.then39.i.i56:                                  ; preds = %if.end31.i.i55
  store i1 false, i1* %retval.i.i15, align 1, !dbg !7927
  br label %check_copy_size.exit.i62, !dbg !7927

if.end40.i.i58:                                   ; preds = %if.end31.i.i55
  %58 = load i8*, i8** %addr.addr.i.i16, align 8, !dbg !7928
  %59 = load i64, i64* %bytes.addr.i.i17, align 8, !dbg !7929
  %60 = load i8, i8* %is_source.addr.i.i18, align 1, !dbg !7930
  %tobool41.i.i57 = trunc i8 %60 to i1, !dbg !7930
  call void @check_object_size(i8* %58, i64 %59, i1 zeroext %tobool41.i.i57) #14, !dbg !7931
  store i1 true, i1* %retval.i.i15, align 1, !dbg !7932
  br label %check_copy_size.exit.i62, !dbg !7932

check_copy_size.exit.i62:                         ; preds = %if.end40.i.i58, %if.then39.i.i56, %if.end9.i.i40
  %61 = load i1, i1* %retval.i.i15, align 1, !dbg !7933
  %lnot.i59 = xor i1 %61, true, !dbg !7906
  %lnot.ext.i60 = zext i1 %61 to i32, !dbg !7906
  %conv.i61 = sext i32 %lnot.ext.i60 to i64, !dbg !7906
  br i1 %61, label %if.then.i64, label %copy_from_user.exit65, !dbg !7934

if.then.i64:                                      ; preds = %check_copy_size.exit.i62
  %62 = load i8*, i8** %to.addr.i22, align 8, !dbg !7935
  %63 = load i8*, i8** %from.addr.i23, align 8, !dbg !7936
  %64 = load i64, i64* %n.addr.i24, align 8, !dbg !7937
  %call2.i63 = call i64 @_copy_from_user(i8* %62, i8* %63, i64 %64) #14, !dbg !7938
  store i64 %call2.i63, i64* %n.addr.i24, align 8, !dbg !7939
  br label %copy_from_user.exit65, !dbg !7940

copy_from_user.exit65:                            ; preds = %check_copy_size.exit.i62, %if.then.i64
  %65 = load i64, i64* %n.addr.i24, align 8, !dbg !7941
  %tobool11 = icmp ne i64 %65, 0, !dbg !7942
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !7943

if.then12:                                        ; preds = %copy_from_user.exit65
  store i32 -14, i32* %retval, align 4, !dbg !7944
  br label %return, !dbg !7944

if.end13:                                         ; preds = %copy_from_user.exit65
  %66 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !7945
  %call14 = call i32 @iommu_check_bind_data(%struct.iommu_gpasid_bind_data* %66) #9, !dbg !7946
  store i32 %call14, i32* %retval, align 4, !dbg !7947
  br label %return, !dbg !7947

return:                                           ; preds = %if.end13, %if.then12, %if.then2, %if.then
  %67 = load i32, i32* %retval, align 4, !dbg !7948
  ret i32 %67, !dbg !7948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_sva_unbind_gpasid(%struct.iommu_domain* %domain, %struct.device* %dev, i32 %pasid) #1 !dbg !7949 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %pasid.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7954, metadata !DIExpression()), !dbg !7955
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7956, metadata !DIExpression()), !dbg !7957
  store i32 %pasid, i32* %pasid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pasid.addr, metadata !7958, metadata !DIExpression()), !dbg !7959
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7960
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !7960
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !7960
  %sva_unbind_gpasid = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 37, !dbg !7960
  %2 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %sva_unbind_gpasid, align 8, !dbg !7960
  %tobool = icmp ne i32 (%struct.device*, i32)* %2, null, !dbg !7960
  %lnot = xor i1 %tobool, true, !dbg !7960
  %lnot1 = xor i1 %lnot, true, !dbg !7960
  %lnot2 = xor i1 %lnot1, true, !dbg !7960
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7960
  %conv = sext i32 %lnot.ext to i64, !dbg !7960
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7960
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7962

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7963
  br label %return, !dbg !7963

if.end:                                           ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7964
  %ops4 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !7965
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops4, align 8, !dbg !7965
  %sva_unbind_gpasid5 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 37, !dbg !7966
  %5 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %sva_unbind_gpasid5, align 8, !dbg !7966
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7967
  %7 = load i32, i32* %pasid.addr, align 4, !dbg !7968
  %call = call i32 %5(%struct.device* %6, i32 %7) #9, !dbg !7964
  store i32 %call, i32* %retval, align 4, !dbg !7969
  br label %return, !dbg !7969

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7970
  ret i32 %8, !dbg !7970
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_uapi_sva_unbind_gpasid(%struct.iommu_domain* %domain, %struct.device* %dev, i8* %udata) #1 !dbg !7971 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %udata.addr = alloca i8*, align 8
  %data = alloca %struct.iommu_gpasid_bind_data, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !7972, metadata !DIExpression()), !dbg !7973
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7974, metadata !DIExpression()), !dbg !7975
  store i8* %udata, i8** %udata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %udata.addr, metadata !7976, metadata !DIExpression()), !dbg !7977
  call void @llvm.dbg.declare(metadata %struct.iommu_gpasid_bind_data* %data, metadata !7978, metadata !DIExpression()), !dbg !7979
  %0 = bitcast %struct.iommu_gpasid_bind_data* %data to i8*, !dbg !7979
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 72, i1 false), !dbg !7979
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7980, metadata !DIExpression()), !dbg !7981
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7982
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %1, i32 0, i32 1, !dbg !7982
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !7982
  %sva_bind_gpasid = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %2, i32 0, i32 36, !dbg !7982
  %3 = load i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)*, i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)** %sva_bind_gpasid, align 8, !dbg !7982
  %tobool = icmp ne i32 (%struct.iommu_domain*, %struct.device*, %struct.iommu_gpasid_bind_data*)* %3, null, !dbg !7982
  %lnot = xor i1 %tobool, true, !dbg !7982
  %lnot1 = xor i1 %lnot, true, !dbg !7982
  %lnot2 = xor i1 %lnot1, true, !dbg !7982
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !7982
  %conv = sext i32 %lnot.ext to i64, !dbg !7982
  %tobool3 = icmp ne i64 %conv, 0, !dbg !7982
  br i1 %tobool3, label %if.then, label %if.end, !dbg !7984

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !7985
  br label %return, !dbg !7985

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** %udata.addr, align 8, !dbg !7986
  %call = call i32 @iommu_sva_prepare_bind_data(i8* %4, %struct.iommu_gpasid_bind_data* %data) #9, !dbg !7987
  store i32 %call, i32* %ret, align 4, !dbg !7988
  %5 = load i32, i32* %ret, align 4, !dbg !7989
  %tobool4 = icmp ne i32 %5, 0, !dbg !7989
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7991

if.then5:                                         ; preds = %if.end
  %6 = load i32, i32* %ret, align 4, !dbg !7992
  store i32 %6, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

if.end6:                                          ; preds = %if.end
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !7994
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7995
  %hpasid = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %data, i32 0, i32 6, !dbg !7996
  %9 = load i64, i64* %hpasid, align 8, !dbg !7996
  %conv7 = trunc i64 %9 to i32, !dbg !7997
  %call8 = call i32 @iommu_sva_unbind_gpasid(%struct.iommu_domain* %7, %struct.device* %8, i32 %conv7) #9, !dbg !7998
  store i32 %call8, i32* %retval, align 4, !dbg !7999
  br label %return, !dbg !7999

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !8000
  ret i32 %10, !dbg !8000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_detach_device(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !8001 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !8006, metadata !DIExpression()), !dbg !8007
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8008
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %0) #9, !dbg !8009
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !8010
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !8011
  %tobool = icmp ne %struct.iommu_group* %1, null, !dbg !8011
  br i1 %tobool, label %if.end, label %if.then, !dbg !8013

if.then:                                          ; preds = %entry
  br label %return, !dbg !8014

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !8015
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %2, i32 0, i32 3, !dbg !8016
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !8017
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !8018
  %call1 = call i32 @iommu_group_device_count(%struct.iommu_group* %3) #9, !dbg !8020
  %cmp = icmp ne i32 %call1, 1, !dbg !8021
  br i1 %cmp, label %if.then2, label %if.end20, !dbg !8022

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8023, metadata !DIExpression()), !dbg !8026
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8026
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !8027
  %tobool3 = icmp ne i32 %4, 0, !dbg !8027
  %lnot = xor i1 %tobool3, true, !dbg !8027
  %lnot4 = xor i1 %lnot, true, !dbg !8027
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !8027
  %conv = sext i32 %lnot.ext to i64, !dbg !8027
  %tobool5 = icmp ne i64 %conv, 0, !dbg !8027
  br i1 %tobool5, label %if.then6, label %if.end13, !dbg !8026

if.then6:                                         ; preds = %if.then2
  br label %do.body, !dbg !8027

do.body:                                          ; preds = %if.then6
  br label %do.body7, !dbg !8029

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !8031

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !8029

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2199, i32 2305, i64 12) #11, !dbg !8033, !srcloc !8035
  br label %do.end9, !dbg !8033

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 282) #11, !dbg !8036, !srcloc !8038
  br label %do.body10, !dbg !8029

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !8039

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !8029

do.end12:                                         ; preds = %do.end11
  br label %if.end13, !dbg !8029

if.end13:                                         ; preds = %do.end12, %if.then2
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !8026
  %tobool14 = icmp ne i32 %5, 0, !dbg !8026
  %lnot15 = xor i1 %tobool14, true, !dbg !8026
  %lnot17 = xor i1 %lnot15, true, !dbg !8026
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !8026
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !8026
  store i64 %conv19, i64* %tmp, align 8, !dbg !8027
  %6 = load i64, i64* %tmp, align 8, !dbg !8026
  br label %out_unlock, !dbg !8041

if.end20:                                         ; preds = %if.end
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8042
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !8043
  call void @__iommu_detach_group(%struct.iommu_domain* %7, %struct.iommu_group* %8) #9, !dbg !8044
  br label %out_unlock, !dbg !8044

out_unlock:                                       ; preds = %if.end20, %if.end13
  call void @llvm.dbg.label(metadata !8045), !dbg !8046
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !8047
  %mutex21 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %9, i32 0, i32 3, !dbg !8048
  call void @mutex_unlock(%struct.mutex* %mutex21) #9, !dbg !8049
  %10 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !8050
  call void @iommu_group_put(%struct.iommu_group* %10) #9, !dbg !8051
  br label %return, !dbg !8052

return:                                           ; preds = %out_unlock, %if.then
  ret void, !dbg !8052
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__iommu_detach_group(%struct.iommu_domain* %domain, %struct.iommu_group* %group) #1 !dbg !8053 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %group.addr = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8062
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 9, !dbg !8064
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !8064
  %tobool = icmp ne %struct.iommu_domain* %1, null, !dbg !8062
  br i1 %tobool, label %if.end, label %if.then, !dbg !8065

if.then:                                          ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8066
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8068
  %4 = bitcast %struct.iommu_domain* %3 to i8*, !dbg !8068
  %call = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %2, i8* %4, i32 (%struct.device*, i8*)* @iommu_group_do_detach_device) #9, !dbg !8069
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8070
  %domain1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %5, i32 0, i32 10, !dbg !8071
  store %struct.iommu_domain* null, %struct.iommu_domain** %domain1, align 8, !dbg !8072
  br label %if.end29, !dbg !8073

if.end:                                           ; preds = %entry
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8074
  %domain2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %6, i32 0, i32 10, !dbg !8076
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain2, align 8, !dbg !8076
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8077
  %default_domain3 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %8, i32 0, i32 9, !dbg !8078
  %9 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain3, align 8, !dbg !8078
  %cmp = icmp eq %struct.iommu_domain* %7, %9, !dbg !8079
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !8080

if.then4:                                         ; preds = %if.end
  br label %if.end29, !dbg !8081

if.end5:                                          ; preds = %if.end
  %10 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8082
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8083
  %default_domain6 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %11, i32 0, i32 9, !dbg !8084
  %12 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain6, align 8, !dbg !8084
  %13 = bitcast %struct.iommu_domain* %12 to i8*, !dbg !8083
  %call7 = call i32 @__iommu_group_for_each_dev(%struct.iommu_group* %10, i8* %13, i32 (%struct.device*, i8*)* @iommu_group_do_attach_device) #9, !dbg !8085
  store i32 %call7, i32* %ret, align 4, !dbg !8086
  %14 = load i32, i32* %ret, align 4, !dbg !8087
  %cmp8 = icmp ne i32 %14, 0, !dbg !8089
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !8090

if.then9:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8091, metadata !DIExpression()), !dbg !8093
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !8093
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !8094
  %tobool10 = icmp ne i32 %15, 0, !dbg !8094
  %lnot = xor i1 %tobool10, true, !dbg !8094
  %lnot11 = xor i1 %lnot, true, !dbg !8094
  %lnot.ext = zext i1 %lnot11 to i32, !dbg !8094
  %conv = sext i32 %lnot.ext to i64, !dbg !8094
  %tobool12 = icmp ne i64 %conv, 0, !dbg !8094
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !8093

if.then13:                                        ; preds = %if.then9
  br label %do.body, !dbg !8094

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !8096

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !8098

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !8096

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2310, i32 2305, i64 12) #11, !dbg !8100, !srcloc !8102
  br label %do.end16, !dbg !8100

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 283) #11, !dbg !8103, !srcloc !8105
  br label %do.body17, !dbg !8096

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !8106

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !8096

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !8096

if.end20:                                         ; preds = %do.end19, %if.then9
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !8093
  %tobool21 = icmp ne i32 %16, 0, !dbg !8093
  %lnot22 = xor i1 %tobool21, true, !dbg !8093
  %lnot24 = xor i1 %lnot22, true, !dbg !8093
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !8093
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !8093
  store i64 %conv26, i64* %tmp, align 8, !dbg !8094
  %17 = load i64, i64* %tmp, align 8, !dbg !8093
  br label %if.end29, !dbg !8108

if.else:                                          ; preds = %if.end5
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8109
  %default_domain27 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %18, i32 0, i32 9, !dbg !8110
  %19 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain27, align 8, !dbg !8110
  %20 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8111
  %domain28 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %20, i32 0, i32 10, !dbg !8112
  store %struct.iommu_domain* %19, %struct.iommu_domain** %domain28, align 8, !dbg !8113
  br label %if.end29

if.end29:                                         ; preds = %if.then, %if.then4, %if.else, %if.end20
  ret void, !dbg !8114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_domain* @iommu_get_dma_domain(%struct.device* %dev) #1 !dbg !8115 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8116, metadata !DIExpression()), !dbg !8117
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8118
  %iommu_group = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 32, !dbg !8119
  %1 = load %struct.iommu_group*, %struct.iommu_group** %iommu_group, align 8, !dbg !8119
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 9, !dbg !8120
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !8120
  ret %struct.iommu_domain* %2, !dbg !8121
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_attach_group(%struct.iommu_domain* %domain, %struct.iommu_group* %group) #1 !dbg !8122 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %group.addr = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !8125, metadata !DIExpression()), !dbg !8126
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8127, metadata !DIExpression()), !dbg !8128
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8129
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 3, !dbg !8130
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !8131
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8132
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8133
  %call = call i32 @__iommu_attach_group(%struct.iommu_domain* %1, %struct.iommu_group* %2) #9, !dbg !8134
  store i32 %call, i32* %ret, align 4, !dbg !8135
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8136
  %mutex1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %3, i32 0, i32 3, !dbg !8137
  call void @mutex_unlock(%struct.mutex* %mutex1) #9, !dbg !8138
  %4 = load i32, i32* %ret, align 4, !dbg !8139
  ret i32 %4, !dbg !8140
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_detach_group(%struct.iommu_domain* %domain, %struct.iommu_group* %group) #1 !dbg !8141 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %group.addr = alloca %struct.iommu_group*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8142, metadata !DIExpression()), !dbg !8143
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !8144, metadata !DIExpression()), !dbg !8145
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8146
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 3, !dbg !8147
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !8148
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8149
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8150
  call void @__iommu_detach_group(%struct.iommu_domain* %1, %struct.iommu_group* %2) #9, !dbg !8151
  %3 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !8152
  %mutex1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %3, i32 0, i32 3, !dbg !8153
  call void @mutex_unlock(%struct.mutex* %mutex1) #9, !dbg !8154
  ret void, !dbg !8155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @iommu_iova_to_phys(%struct.iommu_domain* %domain, i64 %iova) #1 !dbg !8156 {
entry:
  %retval = alloca i64, align 8
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8157, metadata !DIExpression()), !dbg !8158
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8159, metadata !DIExpression()), !dbg !8160
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8161
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !8161
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8161
  %iova_to_phys = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 10, !dbg !8161
  %2 = load i64 (%struct.iommu_domain*, i64)*, i64 (%struct.iommu_domain*, i64)** %iova_to_phys, align 8, !dbg !8161
  %cmp = icmp eq i64 (%struct.iommu_domain*, i64)* %2, null, !dbg !8161
  %lnot = xor i1 %cmp, true, !dbg !8161
  %lnot1 = xor i1 %lnot, true, !dbg !8161
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8161
  %conv = sext i32 %lnot.ext to i64, !dbg !8161
  %tobool = icmp ne i64 %conv, 0, !dbg !8161
  br i1 %tobool, label %if.then, label %if.end, !dbg !8163

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !8164
  br label %return, !dbg !8164

if.end:                                           ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8165
  %ops2 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !8166
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops2, align 8, !dbg !8166
  %iova_to_phys3 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 10, !dbg !8167
  %5 = load i64 (%struct.iommu_domain*, i64)*, i64 (%struct.iommu_domain*, i64)** %iova_to_phys3, align 8, !dbg !8167
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8168
  %7 = load i64, i64* %iova.addr, align 8, !dbg !8169
  %call = call i64 %5(%struct.iommu_domain* %6, i64 %7) #9, !dbg !8165
  store i64 %call, i64* %retval, align 8, !dbg !8170
  br label %return, !dbg !8170

return:                                           ; preds = %if.end, %if.then
  %8 = load i64, i64* %retval, align 8, !dbg !8171
  ret i64 %8, !dbg !8171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_map(%struct.iommu_domain* %domain, i64 %iova, i64 %paddr, i64 %size, i32 %prot) #1 !dbg !8172 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %paddr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8175, metadata !DIExpression()), !dbg !8176
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8177, metadata !DIExpression()), !dbg !8178
  store i64 %paddr, i64* %paddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %paddr.addr, metadata !8179, metadata !DIExpression()), !dbg !8180
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8181, metadata !DIExpression()), !dbg !8182
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8183, metadata !DIExpression()), !dbg !8184
  br label %do.body, !dbg !8185

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8186

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8188

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !8186

do.end2:                                          ; preds = %do.end
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8190
  %1 = load i64, i64* %iova.addr, align 8, !dbg !8191
  %2 = load i64, i64* %paddr.addr, align 8, !dbg !8192
  %3 = load i64, i64* %size.addr, align 8, !dbg !8193
  %4 = load i32, i32* %prot.addr, align 4, !dbg !8194
  %call = call i32 @__iommu_map(%struct.iommu_domain* %0, i64 %1, i64 %2, i64 %3, i32 %4, i32 3264) #9, !dbg !8195
  ret i32 %call, !dbg !8196
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__iommu_map(%struct.iommu_domain* %domain, i64 %iova, i64 %paddr, i64 %size, i32 %prot, i32 %gfp) #1 !dbg !8197 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !4933, metadata !DIExpression()), !dbg !8198
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %paddr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  %gfp.addr = alloca i32, align 4
  %ops = alloca %struct.iommu_ops*, align 8
  %orig_iova = alloca i64, align 8
  %min_pagesz = alloca i32, align 4
  %orig_size = alloca i64, align 8
  %orig_paddr = alloca i64, align 8
  %ret = alloca i32, align 4
  %tmp = alloca i32, align 4
  %pgsize = alloca i64, align 8
  %tmp27 = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8200, metadata !DIExpression()), !dbg !8201
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8202, metadata !DIExpression()), !dbg !8203
  store i64 %paddr, i64* %paddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %paddr.addr, metadata !8204, metadata !DIExpression()), !dbg !8205
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8206, metadata !DIExpression()), !dbg !8207
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8208, metadata !DIExpression()), !dbg !8209
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8210, metadata !DIExpression()), !dbg !8211
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !8212, metadata !DIExpression()), !dbg !8213
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8214
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !8215
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !8215
  store %struct.iommu_ops* %1, %struct.iommu_ops** %ops, align 8, !dbg !8213
  call void @llvm.dbg.declare(metadata i64* %orig_iova, metadata !8216, metadata !DIExpression()), !dbg !8217
  %2 = load i64, i64* %iova.addr, align 8, !dbg !8218
  store i64 %2, i64* %orig_iova, align 8, !dbg !8217
  call void @llvm.dbg.declare(metadata i32* %min_pagesz, metadata !8219, metadata !DIExpression()), !dbg !8220
  call void @llvm.dbg.declare(metadata i64* %orig_size, metadata !8221, metadata !DIExpression()), !dbg !8222
  %3 = load i64, i64* %size.addr, align 8, !dbg !8223
  store i64 %3, i64* %orig_size, align 8, !dbg !8222
  call void @llvm.dbg.declare(metadata i64* %orig_paddr, metadata !8224, metadata !DIExpression()), !dbg !8225
  %4 = load i64, i64* %paddr.addr, align 8, !dbg !8226
  store i64 %4, i64* %orig_paddr, align 8, !dbg !8225
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8227, metadata !DIExpression()), !dbg !8228
  store i32 0, i32* %ret, align 4, !dbg !8228
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8229
  %map = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 5, !dbg !8229
  %6 = load i32 (%struct.iommu_domain*, i64, i64, i64, i32, i32)*, i32 (%struct.iommu_domain*, i64, i64, i64, i32, i32)** %map, align 8, !dbg !8229
  %cmp = icmp eq i32 (%struct.iommu_domain*, i64, i64, i64, i32, i32)* %6, null, !dbg !8229
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8229

lor.rhs:                                          ; preds = %entry
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8229
  %pgsize_bitmap = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %7, i32 0, i32 2, !dbg !8229
  %8 = load i64, i64* %pgsize_bitmap, align 8, !dbg !8229
  %cmp2 = icmp eq i64 %8, 0, !dbg !8229
  br label %lor.end, !dbg !8229

lor.end:                                          ; preds = %lor.rhs, %entry
  %9 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lnot = xor i1 %9, true, !dbg !8229
  %lnot3 = xor i1 %lnot, true, !dbg !8229
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8229
  %conv = sext i32 %lnot.ext to i64, !dbg !8229
  %tobool = icmp ne i64 %conv, 0, !dbg !8229
  br i1 %tobool, label %if.then, label %if.end, !dbg !8231

if.then:                                          ; preds = %lor.end
  store i32 -19, i32* %retval, align 4, !dbg !8232
  br label %return, !dbg !8232

if.end:                                           ; preds = %lor.end
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8233
  %type = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %10, i32 0, i32 0, !dbg !8233
  %11 = load i32, i32* %type, align 8, !dbg !8233
  %and = and i32 %11, 1, !dbg !8233
  %tobool4 = icmp ne i32 %and, 0, !dbg !8233
  %lnot5 = xor i1 %tobool4, true, !dbg !8233
  %lnot7 = xor i1 %lnot5, true, !dbg !8233
  %lnot9 = xor i1 %lnot7, true, !dbg !8233
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !8233
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !8233
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !8233
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8235

if.then13:                                        ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !8236
  br label %return, !dbg !8236

if.end14:                                         ; preds = %if.end
  %12 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8237
  %pgsize_bitmap15 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %12, i32 0, i32 2, !dbg !8238
  %13 = load i64, i64* %pgsize_bitmap15, align 8, !dbg !8238
  store i64 %13, i64* %word.addr.i, align 8
  %14 = load i64, i64* %word.addr.i, align 8, !dbg !8239
  %15 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %14) #12, !dbg !8240, !srcloc !4985
  store i64 %15, i64* %word.addr.i, align 8, !dbg !8240
  %16 = load i64, i64* %word.addr.i, align 8, !dbg !8241
  %sh_prom = trunc i64 %16 to i32, !dbg !8242
  %shl = shl i32 1, %sh_prom, !dbg !8242
  store i32 %shl, i32* %min_pagesz, align 4, !dbg !8243
  %17 = load i64, i64* %iova.addr, align 8, !dbg !8244
  %18 = load i64, i64* %paddr.addr, align 8, !dbg !8244
  %or = or i64 %17, %18, !dbg !8244
  %19 = load i64, i64* %size.addr, align 8, !dbg !8244
  %or16 = or i64 %or, %19, !dbg !8244
  %20 = load i32, i32* %min_pagesz, align 4, !dbg !8244
  %conv17 = zext i32 %20 to i64, !dbg !8244
  %sub = sub i64 %conv17, 1, !dbg !8244
  %and18 = and i64 %or16, %sub, !dbg !8244
  %cmp19 = icmp eq i64 %and18, 0, !dbg !8244
  br i1 %cmp19, label %if.end23, label %if.then21, !dbg !8246

if.then21:                                        ; preds = %if.end14
  %21 = load i64, i64* %iova.addr, align 8, !dbg !8247
  %22 = load i64, i64* %size.addr, align 8, !dbg !8247
  %23 = load i32, i32* %min_pagesz, align 4, !dbg !8247
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.42, i64 0, i64 0), i64 %21, i64* %paddr.addr, i64 %22, i32 %23) #10, !dbg !8247
  store i32 -22, i32* %retval, align 4, !dbg !8249
  br label %return, !dbg !8249

if.end23:                                         ; preds = %if.end14
  store i32 0, i32* %tmp, align 4, !dbg !8250
  %24 = load i32, i32* %tmp, align 4, !dbg !8253
  br label %while.cond, !dbg !8254

while.cond:                                       ; preds = %if.end32, %if.end23
  %25 = load i64, i64* %size.addr, align 8, !dbg !8255
  %tobool24 = icmp ne i64 %25, 0, !dbg !8254
  br i1 %tobool24, label %while.body, label %while.end, !dbg !8254

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %pgsize, metadata !8256, metadata !DIExpression()), !dbg !8258
  %26 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8259
  %27 = load i64, i64* %iova.addr, align 8, !dbg !8260
  %28 = load i64, i64* %paddr.addr, align 8, !dbg !8261
  %or25 = or i64 %27, %28, !dbg !8262
  %29 = load i64, i64* %size.addr, align 8, !dbg !8263
  %call26 = call i64 @iommu_pgsize(%struct.iommu_domain* %26, i64 %or25, i64 %29) #9, !dbg !8264
  store i64 %call26, i64* %pgsize, align 8, !dbg !8258
  store i32 0, i32* %tmp27, align 4, !dbg !8265
  %30 = load i32, i32* %tmp27, align 4, !dbg !8268
  %31 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8269
  %map28 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %31, i32 0, i32 5, !dbg !8270
  %32 = load i32 (%struct.iommu_domain*, i64, i64, i64, i32, i32)*, i32 (%struct.iommu_domain*, i64, i64, i64, i32, i32)** %map28, align 8, !dbg !8270
  %33 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8271
  %34 = load i64, i64* %iova.addr, align 8, !dbg !8272
  %35 = load i64, i64* %paddr.addr, align 8, !dbg !8273
  %36 = load i64, i64* %pgsize, align 8, !dbg !8274
  %37 = load i32, i32* %prot.addr, align 4, !dbg !8275
  %38 = load i32, i32* %gfp.addr, align 4, !dbg !8276
  %call29 = call i32 %32(%struct.iommu_domain* %33, i64 %34, i64 %35, i64 %36, i32 %37, i32 %38) #9, !dbg !8269
  store i32 %call29, i32* %ret, align 4, !dbg !8277
  %39 = load i32, i32* %ret, align 4, !dbg !8278
  %tobool30 = icmp ne i32 %39, 0, !dbg !8278
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !8280

if.then31:                                        ; preds = %while.body
  br label %while.end, !dbg !8281

if.end32:                                         ; preds = %while.body
  %40 = load i64, i64* %pgsize, align 8, !dbg !8282
  %41 = load i64, i64* %iova.addr, align 8, !dbg !8283
  %add = add i64 %41, %40, !dbg !8283
  store i64 %add, i64* %iova.addr, align 8, !dbg !8283
  %42 = load i64, i64* %pgsize, align 8, !dbg !8284
  %43 = load i64, i64* %paddr.addr, align 8, !dbg !8285
  %add33 = add i64 %43, %42, !dbg !8285
  store i64 %add33, i64* %paddr.addr, align 8, !dbg !8285
  %44 = load i64, i64* %pgsize, align 8, !dbg !8286
  %45 = load i64, i64* %size.addr, align 8, !dbg !8287
  %sub34 = sub i64 %45, %44, !dbg !8287
  store i64 %sub34, i64* %size.addr, align 8, !dbg !8287
  br label %while.cond, !dbg !8254, !llvm.loop !8288

while.end:                                        ; preds = %if.then31, %while.cond
  %46 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8290
  %iotlb_sync_map = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %46, i32 0, i32 8, !dbg !8292
  %47 = load void (%struct.iommu_domain*)*, void (%struct.iommu_domain*)** %iotlb_sync_map, align 8, !dbg !8292
  %tobool35 = icmp ne void (%struct.iommu_domain*)* %47, null, !dbg !8290
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !8293

if.then36:                                        ; preds = %while.end
  %48 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8294
  %iotlb_sync_map37 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %48, i32 0, i32 8, !dbg !8295
  %49 = load void (%struct.iommu_domain*)*, void (%struct.iommu_domain*)** %iotlb_sync_map37, align 8, !dbg !8295
  %50 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8296
  call void %49(%struct.iommu_domain* %50) #9, !dbg !8294
  br label %if.end38, !dbg !8294

if.end38:                                         ; preds = %if.then36, %while.end
  %51 = load i32, i32* %ret, align 4, !dbg !8297
  %tobool39 = icmp ne i32 %51, 0, !dbg !8297
  br i1 %tobool39, label %if.then40, label %if.else, !dbg !8299

if.then40:                                        ; preds = %if.end38
  %52 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8300
  %53 = load i64, i64* %orig_iova, align 8, !dbg !8301
  %54 = load i64, i64* %orig_size, align 8, !dbg !8302
  %55 = load i64, i64* %size.addr, align 8, !dbg !8303
  %sub41 = sub i64 %54, %55, !dbg !8304
  %call42 = call i64 @iommu_unmap(%struct.iommu_domain* %52, i64 %53, i64 %sub41) #9, !dbg !8305
  br label %if.end43, !dbg !8305

if.else:                                          ; preds = %if.end38
  %56 = load i64, i64* %orig_iova, align 8, !dbg !8306
  %57 = load i64, i64* %orig_paddr, align 8, !dbg !8307
  %58 = load i64, i64* %orig_size, align 8, !dbg !8308
  call void @trace_map(i64 %56, i64 %57, i64 %58) #9, !dbg !8309
  br label %if.end43

if.end43:                                         ; preds = %if.else, %if.then40
  %59 = load i32, i32* %ret, align 4, !dbg !8310
  store i32 %59, i32* %retval, align 4, !dbg !8311
  br label %return, !dbg !8311

return:                                           ; preds = %if.end43, %if.then21, %if.then13, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !8312
  ret i32 %60, !dbg !8312
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_map_atomic(%struct.iommu_domain* %domain, i64 %iova, i64 %paddr, i64 %size, i32 %prot) #1 !dbg !8313 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %paddr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  store i64 %paddr, i64* %paddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %paddr.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8320, metadata !DIExpression()), !dbg !8321
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8322, metadata !DIExpression()), !dbg !8323
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8324
  %1 = load i64, i64* %iova.addr, align 8, !dbg !8325
  %2 = load i64, i64* %paddr.addr, align 8, !dbg !8326
  %3 = load i64, i64* %size.addr, align 8, !dbg !8327
  %4 = load i32, i32* %prot.addr, align 4, !dbg !8328
  %call = call i32 @__iommu_map(%struct.iommu_domain* %0, i64 %1, i64 %2, i64 %3, i32 %4, i32 2592) #9, !dbg !8329
  ret i32 %call, !dbg !8330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @iommu_unmap(%struct.iommu_domain* %domain, i64 %iova, i64 %size) #1 !dbg !8331 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %iotlb_gather = alloca %struct.iommu_iotlb_gather, align 8
  %ret = alloca i64, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8334, metadata !DIExpression()), !dbg !8335
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8336, metadata !DIExpression()), !dbg !8337
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8338, metadata !DIExpression()), !dbg !8339
  call void @llvm.dbg.declare(metadata %struct.iommu_iotlb_gather* %iotlb_gather, metadata !8340, metadata !DIExpression()), !dbg !8341
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !8342, metadata !DIExpression()), !dbg !8343
  call void @iommu_iotlb_gather_init(%struct.iommu_iotlb_gather* %iotlb_gather) #9, !dbg !8344
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8345
  %1 = load i64, i64* %iova.addr, align 8, !dbg !8346
  %2 = load i64, i64* %size.addr, align 8, !dbg !8347
  %call = call i64 @__iommu_unmap(%struct.iommu_domain* %0, i64 %1, i64 %2, %struct.iommu_iotlb_gather* %iotlb_gather) #9, !dbg !8348
  store i64 %call, i64* %ret, align 8, !dbg !8349
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8350
  call void @iommu_iotlb_sync(%struct.iommu_domain* %3, %struct.iommu_iotlb_gather* %iotlb_gather) #9, !dbg !8351
  %4 = load i64, i64* %ret, align 8, !dbg !8352
  ret i64 %4, !dbg !8353
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_iotlb_gather_init(%struct.iommu_iotlb_gather* %gather) #1 !dbg !8354 {
entry:
  %gather.addr = alloca %struct.iommu_iotlb_gather*, align 8
  %.compoundliteral = alloca %struct.iommu_iotlb_gather, align 8
  store %struct.iommu_iotlb_gather* %gather, %struct.iommu_iotlb_gather** %gather.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_iotlb_gather** %gather.addr, metadata !8357, metadata !DIExpression()), !dbg !8358
  %0 = load %struct.iommu_iotlb_gather*, %struct.iommu_iotlb_gather** %gather.addr, align 8, !dbg !8359
  %start = getelementptr inbounds %struct.iommu_iotlb_gather, %struct.iommu_iotlb_gather* %.compoundliteral, i32 0, i32 0, !dbg !8360
  store i64 -1, i64* %start, align 8, !dbg !8360
  %end = getelementptr inbounds %struct.iommu_iotlb_gather, %struct.iommu_iotlb_gather* %.compoundliteral, i32 0, i32 1, !dbg !8360
  store i64 0, i64* %end, align 8, !dbg !8360
  %pgsize = getelementptr inbounds %struct.iommu_iotlb_gather, %struct.iommu_iotlb_gather* %.compoundliteral, i32 0, i32 2, !dbg !8360
  store i64 0, i64* %pgsize, align 8, !dbg !8360
  %1 = bitcast %struct.iommu_iotlb_gather* %0 to i8*, !dbg !8361
  %2 = bitcast %struct.iommu_iotlb_gather* %.compoundliteral to i8*, !dbg !8361
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 24, i1 false), !dbg !8361
  ret void, !dbg !8362
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__iommu_unmap(%struct.iommu_domain* %domain, i64 %iova, i64 %size, %struct.iommu_iotlb_gather* %iotlb_gather) #1 !dbg !8363 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !4933, metadata !DIExpression()), !dbg !8364
  %retval = alloca i64, align 8
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %iotlb_gather.addr = alloca %struct.iommu_iotlb_gather*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %unmapped_page = alloca i64, align 8
  %unmapped = alloca i64, align 8
  %orig_iova = alloca i64, align 8
  %min_pagesz = alloca i32, align 4
  %tmp = alloca i32, align 4
  %pgsize = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8366, metadata !DIExpression()), !dbg !8367
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8368, metadata !DIExpression()), !dbg !8369
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8370, metadata !DIExpression()), !dbg !8371
  store %struct.iommu_iotlb_gather* %iotlb_gather, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_iotlb_gather** %iotlb_gather.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !8374, metadata !DIExpression()), !dbg !8375
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8376
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !8377
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !8377
  store %struct.iommu_ops* %1, %struct.iommu_ops** %ops, align 8, !dbg !8375
  call void @llvm.dbg.declare(metadata i64* %unmapped_page, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata i64* %unmapped, metadata !8380, metadata !DIExpression()), !dbg !8381
  store i64 0, i64* %unmapped, align 8, !dbg !8381
  call void @llvm.dbg.declare(metadata i64* %orig_iova, metadata !8382, metadata !DIExpression()), !dbg !8383
  %2 = load i64, i64* %iova.addr, align 8, !dbg !8384
  store i64 %2, i64* %orig_iova, align 8, !dbg !8383
  call void @llvm.dbg.declare(metadata i32* %min_pagesz, metadata !8385, metadata !DIExpression()), !dbg !8386
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8387
  %unmap = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %3, i32 0, i32 6, !dbg !8387
  %4 = load i64 (%struct.iommu_domain*, i64, i64, %struct.iommu_iotlb_gather*)*, i64 (%struct.iommu_domain*, i64, i64, %struct.iommu_iotlb_gather*)** %unmap, align 8, !dbg !8387
  %cmp = icmp eq i64 (%struct.iommu_domain*, i64, i64, %struct.iommu_iotlb_gather*)* %4, null, !dbg !8387
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !8387

lor.rhs:                                          ; preds = %entry
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8387
  %pgsize_bitmap = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %5, i32 0, i32 2, !dbg !8387
  %6 = load i64, i64* %pgsize_bitmap, align 8, !dbg !8387
  %cmp2 = icmp eq i64 %6, 0, !dbg !8387
  br label %lor.end, !dbg !8387

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp2, %lor.rhs ]
  %lnot = xor i1 %7, true, !dbg !8387
  %lnot3 = xor i1 %lnot, true, !dbg !8387
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !8387
  %conv = sext i32 %lnot.ext to i64, !dbg !8387
  %tobool = icmp ne i64 %conv, 0, !dbg !8387
  br i1 %tobool, label %if.then, label %if.end, !dbg !8389

if.then:                                          ; preds = %lor.end
  store i64 0, i64* %retval, align 8, !dbg !8390
  br label %return, !dbg !8390

if.end:                                           ; preds = %lor.end
  %8 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8391
  %type = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %8, i32 0, i32 0, !dbg !8391
  %9 = load i32, i32* %type, align 8, !dbg !8391
  %and = and i32 %9, 1, !dbg !8391
  %tobool4 = icmp ne i32 %and, 0, !dbg !8391
  %lnot5 = xor i1 %tobool4, true, !dbg !8391
  %lnot7 = xor i1 %lnot5, true, !dbg !8391
  %lnot9 = xor i1 %lnot7, true, !dbg !8391
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !8391
  %conv11 = sext i32 %lnot.ext10 to i64, !dbg !8391
  %tobool12 = icmp ne i64 %conv11, 0, !dbg !8391
  br i1 %tobool12, label %if.then13, label %if.end14, !dbg !8393

if.then13:                                        ; preds = %if.end
  store i64 0, i64* %retval, align 8, !dbg !8394
  br label %return, !dbg !8394

if.end14:                                         ; preds = %if.end
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8395
  %pgsize_bitmap15 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %10, i32 0, i32 2, !dbg !8396
  %11 = load i64, i64* %pgsize_bitmap15, align 8, !dbg !8396
  store i64 %11, i64* %word.addr.i, align 8
  %12 = load i64, i64* %word.addr.i, align 8, !dbg !8397
  %13 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %12) #12, !dbg !8398, !srcloc !4985
  store i64 %13, i64* %word.addr.i, align 8, !dbg !8398
  %14 = load i64, i64* %word.addr.i, align 8, !dbg !8399
  %sh_prom = trunc i64 %14 to i32, !dbg !8400
  %shl = shl i32 1, %sh_prom, !dbg !8400
  store i32 %shl, i32* %min_pagesz, align 4, !dbg !8401
  %15 = load i64, i64* %iova.addr, align 8, !dbg !8402
  %16 = load i64, i64* %size.addr, align 8, !dbg !8402
  %or = or i64 %15, %16, !dbg !8402
  %17 = load i32, i32* %min_pagesz, align 4, !dbg !8402
  %conv16 = zext i32 %17 to i64, !dbg !8402
  %sub = sub i64 %conv16, 1, !dbg !8402
  %and17 = and i64 %or, %sub, !dbg !8402
  %cmp18 = icmp eq i64 %and17, 0, !dbg !8402
  br i1 %cmp18, label %if.end22, label %if.then20, !dbg !8404

if.then20:                                        ; preds = %if.end14
  %18 = load i64, i64* %iova.addr, align 8, !dbg !8405
  %19 = load i64, i64* %size.addr, align 8, !dbg !8405
  %20 = load i32, i32* %min_pagesz, align 4, !dbg !8405
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.43, i64 0, i64 0), i64 %18, i64 %19, i32 %20) #10, !dbg !8405
  store i64 0, i64* %retval, align 8, !dbg !8407
  br label %return, !dbg !8407

if.end22:                                         ; preds = %if.end14
  store i32 0, i32* %tmp, align 4, !dbg !8408
  %21 = load i32, i32* %tmp, align 4, !dbg !8411
  br label %while.cond, !dbg !8412

while.cond:                                       ; preds = %if.end31, %if.end22
  %22 = load i64, i64* %unmapped, align 8, !dbg !8413
  %23 = load i64, i64* %size.addr, align 8, !dbg !8414
  %cmp23 = icmp ult i64 %22, %23, !dbg !8415
  br i1 %cmp23, label %while.body, label %while.end, !dbg !8412

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %pgsize, metadata !8416, metadata !DIExpression()), !dbg !8418
  %24 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8419
  %25 = load i64, i64* %iova.addr, align 8, !dbg !8420
  %26 = load i64, i64* %size.addr, align 8, !dbg !8421
  %27 = load i64, i64* %unmapped, align 8, !dbg !8422
  %sub25 = sub i64 %26, %27, !dbg !8423
  %call26 = call i64 @iommu_pgsize(%struct.iommu_domain* %24, i64 %25, i64 %sub25) #9, !dbg !8424
  store i64 %call26, i64* %pgsize, align 8, !dbg !8418
  %28 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8425
  %unmap27 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %28, i32 0, i32 6, !dbg !8426
  %29 = load i64 (%struct.iommu_domain*, i64, i64, %struct.iommu_iotlb_gather*)*, i64 (%struct.iommu_domain*, i64, i64, %struct.iommu_iotlb_gather*)** %unmap27, align 8, !dbg !8426
  %30 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8427
  %31 = load i64, i64* %iova.addr, align 8, !dbg !8428
  %32 = load i64, i64* %pgsize, align 8, !dbg !8429
  %33 = load %struct.iommu_iotlb_gather*, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8, !dbg !8430
  %call28 = call i64 %29(%struct.iommu_domain* %30, i64 %31, i64 %32, %struct.iommu_iotlb_gather* %33) #9, !dbg !8425
  store i64 %call28, i64* %unmapped_page, align 8, !dbg !8431
  %34 = load i64, i64* %unmapped_page, align 8, !dbg !8432
  %tobool29 = icmp ne i64 %34, 0, !dbg !8432
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !8434

if.then30:                                        ; preds = %while.body
  br label %while.end, !dbg !8435

if.end31:                                         ; preds = %while.body
  store i32 0, i32* %tmp32, align 4, !dbg !8436
  %35 = load i32, i32* %tmp32, align 4, !dbg !8439
  %36 = load i64, i64* %unmapped_page, align 8, !dbg !8440
  %37 = load i64, i64* %iova.addr, align 8, !dbg !8441
  %add = add i64 %37, %36, !dbg !8441
  store i64 %add, i64* %iova.addr, align 8, !dbg !8441
  %38 = load i64, i64* %unmapped_page, align 8, !dbg !8442
  %39 = load i64, i64* %unmapped, align 8, !dbg !8443
  %add33 = add i64 %39, %38, !dbg !8443
  store i64 %add33, i64* %unmapped, align 8, !dbg !8443
  br label %while.cond, !dbg !8412, !llvm.loop !8444

while.end:                                        ; preds = %if.then30, %while.cond
  %40 = load i64, i64* %orig_iova, align 8, !dbg !8446
  %41 = load i64, i64* %size.addr, align 8, !dbg !8447
  %42 = load i64, i64* %unmapped, align 8, !dbg !8448
  call void @trace_unmap(i64 %40, i64 %41, i64 %42) #9, !dbg !8449
  %43 = load i64, i64* %unmapped, align 8, !dbg !8450
  store i64 %43, i64* %retval, align 8, !dbg !8451
  br label %return, !dbg !8451

return:                                           ; preds = %while.end, %if.then20, %if.then13, %if.then
  %44 = load i64, i64* %retval, align 8, !dbg !8452
  ret i64 %44, !dbg !8452
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_iotlb_sync(%struct.iommu_domain* %domain, %struct.iommu_iotlb_gather* %iotlb_gather) #1 !dbg !8453 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iotlb_gather.addr = alloca %struct.iommu_iotlb_gather*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8454, metadata !DIExpression()), !dbg !8455
  store %struct.iommu_iotlb_gather* %iotlb_gather, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_iotlb_gather** %iotlb_gather.addr, metadata !8456, metadata !DIExpression()), !dbg !8457
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8458
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !8460
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8460
  %iotlb_sync = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 9, !dbg !8461
  %2 = load void (%struct.iommu_domain*, %struct.iommu_iotlb_gather*)*, void (%struct.iommu_domain*, %struct.iommu_iotlb_gather*)** %iotlb_sync, align 8, !dbg !8461
  %tobool = icmp ne void (%struct.iommu_domain*, %struct.iommu_iotlb_gather*)* %2, null, !dbg !8458
  br i1 %tobool, label %if.then, label %if.end, !dbg !8462

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8463
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !8464
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !8464
  %iotlb_sync2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 9, !dbg !8465
  %5 = load void (%struct.iommu_domain*, %struct.iommu_iotlb_gather*)*, void (%struct.iommu_domain*, %struct.iommu_iotlb_gather*)** %iotlb_sync2, align 8, !dbg !8465
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8466
  %7 = load %struct.iommu_iotlb_gather*, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8, !dbg !8467
  call void %5(%struct.iommu_domain* %6, %struct.iommu_iotlb_gather* %7) #9, !dbg !8463
  br label %if.end, !dbg !8463

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.iommu_iotlb_gather*, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8, !dbg !8468
  call void @iommu_iotlb_gather_init(%struct.iommu_iotlb_gather* %8) #9, !dbg !8469
  ret void, !dbg !8470
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @iommu_unmap_fast(%struct.iommu_domain* %domain, i64 %iova, i64 %size, %struct.iommu_iotlb_gather* %iotlb_gather) #1 !dbg !8471 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %iotlb_gather.addr = alloca %struct.iommu_iotlb_gather*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8472, metadata !DIExpression()), !dbg !8473
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8474, metadata !DIExpression()), !dbg !8475
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8476, metadata !DIExpression()), !dbg !8477
  store %struct.iommu_iotlb_gather* %iotlb_gather, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_iotlb_gather** %iotlb_gather.addr, metadata !8478, metadata !DIExpression()), !dbg !8479
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8480
  %1 = load i64, i64* %iova.addr, align 8, !dbg !8481
  %2 = load i64, i64* %size.addr, align 8, !dbg !8482
  %3 = load %struct.iommu_iotlb_gather*, %struct.iommu_iotlb_gather** %iotlb_gather.addr, align 8, !dbg !8483
  %call = call i64 @__iommu_unmap(%struct.iommu_domain* %0, i64 %1, i64 %2, %struct.iommu_iotlb_gather* %3) #9, !dbg !8484
  ret i64 %call, !dbg !8485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @iommu_map_sg(%struct.iommu_domain* %domain, i64 %iova, %struct.scatterlist* %sg, i32 %nents, i32 %prot) #1 !dbg !8486 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %sg.addr = alloca %struct.scatterlist*, align 8
  %nents.addr = alloca i32, align 4
  %prot.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8498, metadata !DIExpression()), !dbg !8499
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  br label %do.body, !dbg !8508

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8509

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8511

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !8509

do.end2:                                          ; preds = %do.end
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8513
  %1 = load i64, i64* %iova.addr, align 8, !dbg !8514
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !8515
  %3 = load i32, i32* %nents.addr, align 4, !dbg !8516
  %4 = load i32, i32* %prot.addr, align 4, !dbg !8517
  %call = call i64 @__iommu_map_sg(%struct.iommu_domain* %0, i64 %1, %struct.scatterlist* %2, i32 %3, i32 %4, i32 3264) #9, !dbg !8518
  ret i64 %call, !dbg !8519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__iommu_map_sg(%struct.iommu_domain* %domain, i64 %iova, %struct.scatterlist* %sg, i32 %nents, i32 %prot, i32 %gfp) #1 !dbg !8520 {
entry:
  %retval = alloca i64, align 8
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %sg.addr = alloca %struct.scatterlist*, align 8
  %nents.addr = alloca i32, align 4
  %prot.addr = alloca i32, align 4
  %gfp.addr = alloca i32, align 4
  %len = alloca i64, align 8
  %mapped = alloca i64, align 8
  %start = alloca i64, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %s_phys = alloca i64, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !8529, metadata !DIExpression()), !dbg !8530
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8531, metadata !DIExpression()), !dbg !8532
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8533, metadata !DIExpression()), !dbg !8534
  call void @llvm.dbg.declare(metadata i64* %len, metadata !8535, metadata !DIExpression()), !dbg !8536
  store i64 0, i64* %len, align 8, !dbg !8536
  call void @llvm.dbg.declare(metadata i64* %mapped, metadata !8537, metadata !DIExpression()), !dbg !8538
  store i64 0, i64* %mapped, align 8, !dbg !8538
  call void @llvm.dbg.declare(metadata i64* %start, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8541, metadata !DIExpression()), !dbg !8542
  store i32 0, i32* %i, align 4, !dbg !8542
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8543, metadata !DIExpression()), !dbg !8544
  br label %while.cond, !dbg !8545

while.cond:                                       ; preds = %if.end18, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8546
  %1 = load i32, i32* %nents.addr, align 4, !dbg !8547
  %cmp = icmp ule i32 %0, %1, !dbg !8548
  br i1 %cmp, label %while.body, label %while.end, !dbg !8545

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %s_phys, metadata !8549, metadata !DIExpression()), !dbg !8551
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !8552
  %call = call i64 @sg_phys(%struct.scatterlist* %2) #9, !dbg !8553
  store i64 %call, i64* %s_phys, align 8, !dbg !8551
  %3 = load i64, i64* %len, align 8, !dbg !8554
  %tobool = icmp ne i64 %3, 0, !dbg !8554
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !8556

land.lhs.true:                                    ; preds = %while.body
  %4 = load i64, i64* %s_phys, align 8, !dbg !8557
  %5 = load i64, i64* %start, align 8, !dbg !8558
  %6 = load i64, i64* %len, align 8, !dbg !8559
  %add = add i64 %5, %6, !dbg !8560
  %cmp1 = icmp ne i64 %4, %add, !dbg !8561
  br i1 %cmp1, label %if.then, label %if.end7, !dbg !8562

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8563
  %8 = load i64, i64* %iova.addr, align 8, !dbg !8565
  %9 = load i64, i64* %mapped, align 8, !dbg !8566
  %add2 = add i64 %8, %9, !dbg !8567
  %10 = load i64, i64* %start, align 8, !dbg !8568
  %11 = load i64, i64* %len, align 8, !dbg !8569
  %12 = load i32, i32* %prot.addr, align 4, !dbg !8570
  %13 = load i32, i32* %gfp.addr, align 4, !dbg !8571
  %call3 = call i32 @__iommu_map(%struct.iommu_domain* %7, i64 %add2, i64 %10, i64 %11, i32 %12, i32 %13) #9, !dbg !8572
  store i32 %call3, i32* %ret, align 4, !dbg !8573
  %14 = load i32, i32* %ret, align 4, !dbg !8574
  %tobool4 = icmp ne i32 %14, 0, !dbg !8574
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !8576

if.then5:                                         ; preds = %if.then
  br label %out_err, !dbg !8577

if.end:                                           ; preds = %if.then
  %15 = load i64, i64* %len, align 8, !dbg !8578
  %16 = load i64, i64* %mapped, align 8, !dbg !8579
  %add6 = add i64 %16, %15, !dbg !8579
  store i64 %add6, i64* %mapped, align 8, !dbg !8579
  store i64 0, i64* %len, align 8, !dbg !8580
  br label %if.end7, !dbg !8581

if.end7:                                          ; preds = %if.end, %land.lhs.true, %while.body
  %17 = load i64, i64* %len, align 8, !dbg !8582
  %tobool8 = icmp ne i64 %17, 0, !dbg !8582
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !8584

if.then9:                                         ; preds = %if.end7
  %18 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !8585
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %18, i32 0, i32 2, !dbg !8587
  %19 = load i32, i32* %length, align 4, !dbg !8587
  %conv = zext i32 %19 to i64, !dbg !8585
  %20 = load i64, i64* %len, align 8, !dbg !8588
  %add10 = add i64 %20, %conv, !dbg !8588
  store i64 %add10, i64* %len, align 8, !dbg !8588
  br label %if.end13, !dbg !8589

if.else:                                          ; preds = %if.end7
  %21 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !8590
  %length11 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %21, i32 0, i32 2, !dbg !8592
  %22 = load i32, i32* %length11, align 4, !dbg !8592
  %conv12 = zext i32 %22 to i64, !dbg !8590
  store i64 %conv12, i64* %len, align 8, !dbg !8593
  %23 = load i64, i64* %s_phys, align 8, !dbg !8594
  store i64 %23, i64* %start, align 8, !dbg !8595
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then9
  %24 = load i32, i32* %i, align 4, !dbg !8596
  %inc = add i32 %24, 1, !dbg !8596
  store i32 %inc, i32* %i, align 4, !dbg !8596
  %25 = load i32, i32* %nents.addr, align 4, !dbg !8598
  %cmp14 = icmp ult i32 %inc, %25, !dbg !8599
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !8600

if.then16:                                        ; preds = %if.end13
  %26 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !8601
  %call17 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %26) #9, !dbg !8602
  store %struct.scatterlist* %call17, %struct.scatterlist** %sg.addr, align 8, !dbg !8603
  br label %if.end18, !dbg !8604

if.end18:                                         ; preds = %if.then16, %if.end13
  br label %while.cond, !dbg !8545, !llvm.loop !8605

while.end:                                        ; preds = %while.cond
  %27 = load i64, i64* %mapped, align 8, !dbg !8607
  store i64 %27, i64* %retval, align 8, !dbg !8608
  br label %return, !dbg !8608

out_err:                                          ; preds = %if.then5
  call void @llvm.dbg.label(metadata !8609), !dbg !8610
  %28 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8611
  %29 = load i64, i64* %iova.addr, align 8, !dbg !8612
  %30 = load i64, i64* %mapped, align 8, !dbg !8613
  %call19 = call i64 @iommu_unmap(%struct.iommu_domain* %28, i64 %29, i64 %30) #9, !dbg !8614
  store i64 0, i64* %retval, align 8, !dbg !8615
  br label %return, !dbg !8615

return:                                           ; preds = %out_err, %while.end
  %31 = load i64, i64* %retval, align 8, !dbg !8616
  ret i64 %31, !dbg !8616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @iommu_map_sg_atomic(%struct.iommu_domain* %domain, i64 %iova, %struct.scatterlist* %sg, i32 %nents, i32 %prot) #1 !dbg !8617 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %iova.addr = alloca i64, align 8
  %sg.addr = alloca %struct.scatterlist*, align 8
  %nents.addr = alloca i32, align 4
  %prot.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8618, metadata !DIExpression()), !dbg !8619
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8620, metadata !DIExpression()), !dbg !8621
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !8622, metadata !DIExpression()), !dbg !8623
  store i32 %nents, i32* %nents.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %nents.addr, metadata !8624, metadata !DIExpression()), !dbg !8625
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8626, metadata !DIExpression()), !dbg !8627
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8628
  %1 = load i64, i64* %iova.addr, align 8, !dbg !8629
  %2 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !8630
  %3 = load i32, i32* %nents.addr, align 4, !dbg !8631
  %4 = load i32, i32* %prot.addr, align 4, !dbg !8632
  %call = call i64 @__iommu_map_sg(%struct.iommu_domain* %0, i64 %1, %struct.scatterlist* %2, i32 %3, i32 %4, i32 2592) #9, !dbg !8633
  ret i64 %call, !dbg !8634
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_domain_window_enable(%struct.iommu_domain* %domain, i32 %wnd_nr, i64 %paddr, i64 %size, i32 %prot) #1 !dbg !8635 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %wnd_nr.addr = alloca i32, align 4
  %paddr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8636, metadata !DIExpression()), !dbg !8637
  store i32 %wnd_nr, i32* %wnd_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wnd_nr.addr, metadata !8638, metadata !DIExpression()), !dbg !8639
  store i64 %paddr, i64* %paddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %paddr.addr, metadata !8640, metadata !DIExpression()), !dbg !8641
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8642, metadata !DIExpression()), !dbg !8643
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8644, metadata !DIExpression()), !dbg !8645
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8646
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !8646
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8646
  %domain_window_enable = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 20, !dbg !8646
  %2 = load i32 (%struct.iommu_domain*, i32, i64, i64, i32)*, i32 (%struct.iommu_domain*, i32, i64, i64, i32)** %domain_window_enable, align 8, !dbg !8646
  %cmp = icmp eq i32 (%struct.iommu_domain*, i32, i64, i64, i32)* %2, null, !dbg !8646
  %lnot = xor i1 %cmp, true, !dbg !8646
  %lnot1 = xor i1 %lnot, true, !dbg !8646
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8646
  %conv = sext i32 %lnot.ext to i64, !dbg !8646
  %tobool = icmp ne i64 %conv, 0, !dbg !8646
  br i1 %tobool, label %if.then, label %if.end, !dbg !8648

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !8649
  br label %return, !dbg !8649

if.end:                                           ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8650
  %ops2 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !8651
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops2, align 8, !dbg !8651
  %domain_window_enable3 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 20, !dbg !8652
  %5 = load i32 (%struct.iommu_domain*, i32, i64, i64, i32)*, i32 (%struct.iommu_domain*, i32, i64, i64, i32)** %domain_window_enable3, align 8, !dbg !8652
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8653
  %7 = load i32, i32* %wnd_nr.addr, align 4, !dbg !8654
  %8 = load i64, i64* %paddr.addr, align 8, !dbg !8655
  %9 = load i64, i64* %size.addr, align 8, !dbg !8656
  %10 = load i32, i32* %prot.addr, align 4, !dbg !8657
  %call = call i32 %5(%struct.iommu_domain* %6, i32 %7, i64 %8, i64 %9, i32 %10) #9, !dbg !8650
  store i32 %call, i32* %retval, align 4, !dbg !8658
  br label %return, !dbg !8658

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8659
  ret i32 %11, !dbg !8659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_domain_window_disable(%struct.iommu_domain* %domain, i32 %wnd_nr) #1 !dbg !8660 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %wnd_nr.addr = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8661, metadata !DIExpression()), !dbg !8662
  store i32 %wnd_nr, i32* %wnd_nr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wnd_nr.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8665
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !8665
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8665
  %domain_window_disable = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 21, !dbg !8665
  %2 = load void (%struct.iommu_domain*, i32)*, void (%struct.iommu_domain*, i32)** %domain_window_disable, align 8, !dbg !8665
  %cmp = icmp eq void (%struct.iommu_domain*, i32)* %2, null, !dbg !8665
  %lnot = xor i1 %cmp, true, !dbg !8665
  %lnot1 = xor i1 %lnot, true, !dbg !8665
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8665
  %conv = sext i32 %lnot.ext to i64, !dbg !8665
  %tobool = icmp ne i64 %conv, 0, !dbg !8665
  br i1 %tobool, label %if.then, label %if.end, !dbg !8667

if.then:                                          ; preds = %entry
  br label %return, !dbg !8668

if.end:                                           ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8669
  %ops2 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !8670
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops2, align 8, !dbg !8670
  %domain_window_disable3 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 21, !dbg !8671
  %5 = load void (%struct.iommu_domain*, i32)*, void (%struct.iommu_domain*, i32)** %domain_window_disable3, align 8, !dbg !8671
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8672
  %7 = load i32, i32* %wnd_nr.addr, align 4, !dbg !8673
  call void %5(%struct.iommu_domain* %6, i32 %7) #9, !dbg !8669
  br label %return, !dbg !8674

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8675
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @report_iommu_fault(%struct.iommu_domain* %domain, %struct.device* %dev, i64 %iova, i32 %flags) #1 !dbg !8676 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %iova.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8679, metadata !DIExpression()), !dbg !8680
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8681, metadata !DIExpression()), !dbg !8682
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8683, metadata !DIExpression()), !dbg !8684
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8687, metadata !DIExpression()), !dbg !8688
  store i32 -38, i32* %ret, align 4, !dbg !8688
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8689
  %handler = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 3, !dbg !8691
  %1 = load i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)*, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)** %handler, align 8, !dbg !8691
  %tobool = icmp ne i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)* %1, null, !dbg !8689
  br i1 %tobool, label %if.then, label %if.end, !dbg !8692

if.then:                                          ; preds = %entry
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8693
  %handler1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %2, i32 0, i32 3, !dbg !8694
  %3 = load i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)*, i32 (%struct.iommu_domain*, %struct.device*, i64, i32, i8*)** %handler1, align 8, !dbg !8694
  %4 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8695
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8696
  %6 = load i64, i64* %iova.addr, align 8, !dbg !8697
  %7 = load i32, i32* %flags.addr, align 4, !dbg !8698
  %8 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8699
  %handler_token = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %8, i32 0, i32 4, !dbg !8700
  %9 = load i8*, i8** %handler_token, align 8, !dbg !8700
  %call = call i32 %3(%struct.iommu_domain* %4, %struct.device* %5, i64 %6, i32 %7, i8* %9) #9, !dbg !8693
  store i32 %call, i32* %ret, align 4, !dbg !8701
  br label %if.end, !dbg !8702

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8703
  %11 = load i64, i64* %iova.addr, align 8, !dbg !8704
  %12 = load i32, i32* %flags.addr, align 4, !dbg !8705
  call void @trace_io_page_fault(%struct.device* %10, i64 %11, i32 %12) #9, !dbg !8706
  %13 = load i32, i32* %ret, align 4, !dbg !8707
  ret i32 %13, !dbg !8708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_io_page_fault(%struct.device* %dev, i64 %iova, i32 %flags) #1 !dbg !8709 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %iova.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8712, metadata !DIExpression()), !dbg !8713
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !8714, metadata !DIExpression()), !dbg !8713
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8715, metadata !DIExpression()), !dbg !8713
  ret void, !dbg !8713
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_init() #0 section ".init.text" !dbg !8716 {
entry:
  %0 = load %struct.kobject*, %struct.kobject** @kernel_kobj, align 8, !dbg !8717
  %call = call %struct.kset* @kset_create_and_add(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44, i64 0, i64 0), %struct.kset_uevent_ops* null, %struct.kobject* %0) #9, !dbg !8718
  store %struct.kset* %call, %struct.kset** @iommu_group_kset, align 8, !dbg !8719
  br label %do.body, !dbg !8720

do.body:                                          ; preds = %entry
  %1 = load %struct.kset*, %struct.kset** @iommu_group_kset, align 8, !dbg !8721
  %tobool = icmp ne %struct.kset* %1, null, !dbg !8721
  %lnot = xor i1 %tobool, true, !dbg !8721
  %lnot1 = xor i1 %lnot, true, !dbg !8721
  %lnot2 = xor i1 %lnot1, true, !dbg !8721
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !8721
  %conv = sext i32 %lnot.ext to i64, !dbg !8721
  %tobool3 = icmp ne i64 %conv, 0, !dbg !8721
  br i1 %tobool3, label %if.then, label %if.end, !dbg !8724

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !8721

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !8725

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !8727

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !8725

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2640, i32 0, i64 12) #11, !dbg !8729, !srcloc !8731
  br label %do.end7, !dbg !8729

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !8725

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 287) #11, !dbg !8732, !srcloc !8735
  unreachable, !dbg !8736

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !8725

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !8725

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !8724

do.end11:                                         ; preds = %if.end
  call void @iommu_debugfs_setup() #9, !dbg !8737
  ret i32 0, !dbg !8738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_domain_get_attr(%struct.iommu_domain* %domain, i32 %attr, i8* %data) #1 !dbg !8739 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %attr.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %geometry = alloca %struct.iommu_domain_geometry*, align 8
  %paging = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8740, metadata !DIExpression()), !dbg !8741
  store i32 %attr, i32* %attr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attr.addr, metadata !8742, metadata !DIExpression()), !dbg !8743
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8744, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.declare(metadata %struct.iommu_domain_geometry** %geometry, metadata !8746, metadata !DIExpression()), !dbg !8748
  call void @llvm.dbg.declare(metadata i8** %paging, metadata !8749, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8751, metadata !DIExpression()), !dbg !8752
  store i32 0, i32* %ret, align 4, !dbg !8752
  %0 = load i32, i32* %attr.addr, align 4, !dbg !8753
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
  ], !dbg !8754

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %data.addr, align 8, !dbg !8755
  %2 = bitcast i8* %1 to %struct.iommu_domain_geometry*, !dbg !8755
  store %struct.iommu_domain_geometry* %2, %struct.iommu_domain_geometry** %geometry, align 8, !dbg !8757
  %3 = load %struct.iommu_domain_geometry*, %struct.iommu_domain_geometry** %geometry, align 8, !dbg !8758
  %4 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8759
  %geometry1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %4, i32 0, i32 5, !dbg !8760
  %5 = bitcast %struct.iommu_domain_geometry* %3 to i8*, !dbg !8760
  %6 = bitcast %struct.iommu_domain_geometry* %geometry1 to i8*, !dbg !8760
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 24, i1 false), !dbg !8760
  br label %sw.epilog, !dbg !8761

sw.bb2:                                           ; preds = %entry
  %7 = load i8*, i8** %data.addr, align 8, !dbg !8762
  store i8* %7, i8** %paging, align 8, !dbg !8763
  %8 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8764
  %pgsize_bitmap = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %8, i32 0, i32 2, !dbg !8765
  %9 = load i64, i64* %pgsize_bitmap, align 8, !dbg !8765
  %cmp = icmp ne i64 %9, 0, !dbg !8766
  %10 = load i8*, i8** %paging, align 8, !dbg !8767
  %frombool = zext i1 %cmp to i8, !dbg !8768
  store i8 %frombool, i8* %10, align 1, !dbg !8768
  br label %sw.epilog, !dbg !8769

sw.default:                                       ; preds = %entry
  %11 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8770
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %11, i32 0, i32 1, !dbg !8772
  %12 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8772
  %domain_get_attr = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %12, i32 0, i32 15, !dbg !8773
  %13 = load i32 (%struct.iommu_domain*, i32, i8*)*, i32 (%struct.iommu_domain*, i32, i8*)** %domain_get_attr, align 8, !dbg !8773
  %tobool = icmp ne i32 (%struct.iommu_domain*, i32, i8*)* %13, null, !dbg !8770
  br i1 %tobool, label %if.end, label %if.then, !dbg !8774

if.then:                                          ; preds = %sw.default
  store i32 -22, i32* %retval, align 4, !dbg !8775
  br label %return, !dbg !8775

if.end:                                           ; preds = %sw.default
  %14 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8776
  %ops3 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %14, i32 0, i32 1, !dbg !8777
  %15 = load %struct.iommu_ops*, %struct.iommu_ops** %ops3, align 8, !dbg !8777
  %domain_get_attr4 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %15, i32 0, i32 15, !dbg !8778
  %16 = load i32 (%struct.iommu_domain*, i32, i8*)*, i32 (%struct.iommu_domain*, i32, i8*)** %domain_get_attr4, align 8, !dbg !8778
  %17 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8779
  %18 = load i32, i32* %attr.addr, align 4, !dbg !8780
  %19 = load i8*, i8** %data.addr, align 8, !dbg !8781
  %call = call i32 %16(%struct.iommu_domain* %17, i32 %18, i8* %19) #9, !dbg !8776
  store i32 %call, i32* %ret, align 4, !dbg !8782
  br label %sw.epilog, !dbg !8783

sw.epilog:                                        ; preds = %if.end, %sw.bb2, %sw.bb
  %20 = load i32, i32* %ret, align 4, !dbg !8784
  store i32 %20, i32* %retval, align 4, !dbg !8785
  br label %return, !dbg !8785

return:                                           ; preds = %sw.epilog, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !8786
  ret i32 %21, !dbg !8786
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_domain_set_attr(%struct.iommu_domain* %domain, i32 %attr, i8* %data) #1 !dbg !8787 {
entry:
  %retval = alloca i32, align 4
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %attr.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !8788, metadata !DIExpression()), !dbg !8789
  store i32 %attr, i32* %attr.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %attr.addr, metadata !8790, metadata !DIExpression()), !dbg !8791
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8792, metadata !DIExpression()), !dbg !8793
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8794, metadata !DIExpression()), !dbg !8795
  store i32 0, i32* %ret, align 4, !dbg !8795
  %0 = load i32, i32* %attr.addr, align 4, !dbg !8796
  switch i32 %0, label %sw.default [
  ], !dbg !8797

sw.default:                                       ; preds = %entry
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8798
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %1, i32 0, i32 1, !dbg !8801
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8801
  %domain_set_attr = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %2, i32 0, i32 16, !dbg !8802
  %3 = load i32 (%struct.iommu_domain*, i32, i8*)*, i32 (%struct.iommu_domain*, i32, i8*)** %domain_set_attr, align 8, !dbg !8802
  %cmp = icmp eq i32 (%struct.iommu_domain*, i32, i8*)* %3, null, !dbg !8803
  br i1 %cmp, label %if.then, label %if.end, !dbg !8804

if.then:                                          ; preds = %sw.default
  store i32 -22, i32* %retval, align 4, !dbg !8805
  br label %return, !dbg !8805

if.end:                                           ; preds = %sw.default
  %4 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8806
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %4, i32 0, i32 1, !dbg !8807
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !8807
  %domain_set_attr2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 16, !dbg !8808
  %6 = load i32 (%struct.iommu_domain*, i32, i8*)*, i32 (%struct.iommu_domain*, i32, i8*)** %domain_set_attr2, align 8, !dbg !8808
  %7 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !8809
  %8 = load i32, i32* %attr.addr, align 4, !dbg !8810
  %9 = load i8*, i8** %data.addr, align 8, !dbg !8811
  %call = call i32 %6(%struct.iommu_domain* %7, i32 %8, i8* %9) #9, !dbg !8806
  store i32 %call, i32* %ret, align 4, !dbg !8812
  br label %sw.epilog, !dbg !8813

sw.epilog:                                        ; preds = %if.end
  %10 = load i32, i32* %ret, align 4, !dbg !8814
  store i32 %10, i32* %retval, align 4, !dbg !8815
  br label %return, !dbg !8815

return:                                           ; preds = %sw.epilog, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8816
  ret i32 %11, !dbg !8816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @generic_iommu_put_resv_regions(%struct.device* %dev, %struct.list_head* %list) #1 !dbg !8817 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %list.addr = alloca %struct.list_head*, align 8
  %entry1 = alloca %struct.iommu_resv_region*, align 8
  %next = alloca %struct.iommu_resv_region*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_resv_region*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp8 = alloca %struct.iommu_resv_region*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.iommu_resv_region*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8818, metadata !DIExpression()), !dbg !8819
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8820, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %entry1, metadata !8822, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %next, metadata !8824, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8826, metadata !DIExpression()), !dbg !8829
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8829
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !8829
  %1 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !8829
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !8829
  store i8* %2, i8** %__mptr, align 8, !dbg !8829
  br label %do.body, !dbg !8829

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8830

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !8829
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !8829
  %4 = bitcast i8* %add.ptr to %struct.iommu_resv_region*, !dbg !8829
  store %struct.iommu_resv_region* %4, %struct.iommu_resv_region** %tmp, align 8, !dbg !8830
  %5 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp, align 8, !dbg !8829
  store %struct.iommu_resv_region* %5, %struct.iommu_resv_region** %entry1, align 8, !dbg !8832
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !8833, metadata !DIExpression()), !dbg !8835
  %6 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !8835
  %list4 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %6, i32 0, i32 0, !dbg !8835
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4, i32 0, i32 0, !dbg !8835
  %7 = load %struct.list_head*, %struct.list_head** %next5, align 8, !dbg !8835
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !8835
  store i8* %8, i8** %__mptr3, align 8, !dbg !8835
  br label %do.body6, !dbg !8835

do.body6:                                         ; preds = %do.end
  br label %do.end7, !dbg !8836

do.end7:                                          ; preds = %do.body6
  %9 = load i8*, i8** %__mptr3, align 8, !dbg !8835
  %add.ptr9 = getelementptr i8, i8* %9, i64 0, !dbg !8835
  %10 = bitcast i8* %add.ptr9 to %struct.iommu_resv_region*, !dbg !8835
  store %struct.iommu_resv_region* %10, %struct.iommu_resv_region** %tmp8, align 8, !dbg !8836
  %11 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp8, align 8, !dbg !8835
  store %struct.iommu_resv_region* %11, %struct.iommu_resv_region** %next, align 8, !dbg !8832
  br label %for.cond, !dbg !8832

for.cond:                                         ; preds = %do.end15, %do.end7
  %12 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !8838
  %list10 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %12, i32 0, i32 0, !dbg !8838
  %13 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8838
  %cmp = icmp eq %struct.list_head* %list10, %13, !dbg !8838
  %lnot = xor i1 %cmp, true, !dbg !8838
  br i1 %lnot, label %for.body, label %for.end, !dbg !8832

for.body:                                         ; preds = %for.cond
  %14 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %entry1, align 8, !dbg !8840
  %15 = bitcast %struct.iommu_resv_region* %14 to i8*, !dbg !8840
  call void @kfree(i8* %15) #9, !dbg !8841
  br label %for.inc, !dbg !8841

for.inc:                                          ; preds = %for.body
  %16 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %next, align 8, !dbg !8838
  store %struct.iommu_resv_region* %16, %struct.iommu_resv_region** %entry1, align 8, !dbg !8838
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !8842, metadata !DIExpression()), !dbg !8844
  %17 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %next, align 8, !dbg !8844
  %list12 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %17, i32 0, i32 0, !dbg !8844
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %list12, i32 0, i32 0, !dbg !8844
  %18 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !8844
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !8844
  store i8* %19, i8** %__mptr11, align 8, !dbg !8844
  br label %do.body14, !dbg !8844

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !8845

do.end15:                                         ; preds = %do.body14
  %20 = load i8*, i8** %__mptr11, align 8, !dbg !8844
  %add.ptr17 = getelementptr i8, i8* %20, i64 0, !dbg !8844
  %21 = bitcast i8* %add.ptr17 to %struct.iommu_resv_region*, !dbg !8844
  store %struct.iommu_resv_region* %21, %struct.iommu_resv_region** %tmp16, align 8, !dbg !8845
  %22 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp16, align 8, !dbg !8844
  store %struct.iommu_resv_region* %22, %struct.iommu_resv_region** %next, align 8, !dbg !8838
  br label %for.cond, !dbg !8838, !llvm.loop !8847

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8849
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_resv_region* @iommu_alloc_resv_region(i64 %start, i64 %length, i32 %prot, i32 %type) #1 !dbg !8850 {
entry:
  %retval = alloca %struct.iommu_resv_region*, align 8
  %start.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %prot.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %region = alloca %struct.iommu_resv_region*, align 8
  store i64 %start, i64* %start.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %start.addr, metadata !8853, metadata !DIExpression()), !dbg !8854
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8855, metadata !DIExpression()), !dbg !8856
  store i32 %prot, i32* %prot.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prot.addr, metadata !8857, metadata !DIExpression()), !dbg !8858
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8859, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %region, metadata !8861, metadata !DIExpression()), !dbg !8862
  %call = call i8* @kzalloc(i64 40, i32 3264) #9, !dbg !8863
  %0 = bitcast i8* %call to %struct.iommu_resv_region*, !dbg !8863
  store %struct.iommu_resv_region* %0, %struct.iommu_resv_region** %region, align 8, !dbg !8864
  %1 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8865
  %tobool = icmp ne %struct.iommu_resv_region* %1, null, !dbg !8865
  br i1 %tobool, label %if.end, label %if.then, !dbg !8867

if.then:                                          ; preds = %entry
  store %struct.iommu_resv_region* null, %struct.iommu_resv_region** %retval, align 8, !dbg !8868
  br label %return, !dbg !8868

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8869
  %list = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %2, i32 0, i32 0, !dbg !8870
  call void @INIT_LIST_HEAD(%struct.list_head* %list) #9, !dbg !8871
  %3 = load i64, i64* %start.addr, align 8, !dbg !8872
  %4 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8873
  %start1 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %4, i32 0, i32 1, !dbg !8874
  store i64 %3, i64* %start1, align 8, !dbg !8875
  %5 = load i64, i64* %length.addr, align 8, !dbg !8876
  %6 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8877
  %length2 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %6, i32 0, i32 2, !dbg !8878
  store i64 %5, i64* %length2, align 8, !dbg !8879
  %7 = load i32, i32* %prot.addr, align 4, !dbg !8880
  %8 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8881
  %prot3 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %8, i32 0, i32 3, !dbg !8882
  store i32 %7, i32* %prot3, align 8, !dbg !8883
  %9 = load i32, i32* %type.addr, align 4, !dbg !8884
  %10 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8885
  %type4 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %10, i32 0, i32 4, !dbg !8886
  store i32 %9, i32* %type4, align 4, !dbg !8887
  %11 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !8888
  store %struct.iommu_resv_region* %11, %struct.iommu_resv_region** %retval, align 8, !dbg !8889
  br label %return, !dbg !8889

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %retval, align 8, !dbg !8890
  ret %struct.iommu_resv_region* %12, !dbg !8890
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_set_default_passthrough(i1 zeroext %cmd_line) #1 !dbg !8891 {
entry:
  %cmd_line.addr = alloca i8, align 1
  %frombool = zext i1 %cmd_line to i8
  store i8 %frombool, i8* %cmd_line.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd_line.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  %0 = load i8, i8* %cmd_line.addr, align 1, !dbg !8896
  %tobool = trunc i8 %0 to i1, !dbg !8896
  br i1 %tobool, label %if.then, label %if.end, !dbg !8898

if.then:                                          ; preds = %entry
  call void @iommu_set_cmd_line_dma_api() #9, !dbg !8899
  br label %if.end, !dbg !8899

if.end:                                           ; preds = %if.then, %entry
  store i32 4, i32* @iommu_def_domain_type, align 4, !dbg !8900
  ret void, !dbg !8901
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_set_cmd_line_dma_api() #1 !dbg !8902 {
entry:
  %0 = load i32, i32* @iommu_cmd_line, align 4, !dbg !8903
  %conv = zext i32 %0 to i64, !dbg !8903
  %or = or i64 %conv, 1, !dbg !8903
  %conv1 = trunc i64 %or to i32, !dbg !8903
  store i32 %conv1, i32* @iommu_cmd_line, align 4, !dbg !8903
  ret void, !dbg !8904
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_set_default_translated(i1 zeroext %cmd_line) #1 !dbg !8905 {
entry:
  %cmd_line.addr = alloca i8, align 1
  %frombool = zext i1 %cmd_line to i8
  store i8 %frombool, i8* %cmd_line.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %cmd_line.addr, metadata !8906, metadata !DIExpression()), !dbg !8907
  %0 = load i8, i8* %cmd_line.addr, align 1, !dbg !8908
  %tobool = trunc i8 %0 to i1, !dbg !8908
  br i1 %tobool, label %if.then, label %if.end, !dbg !8910

if.then:                                          ; preds = %entry
  call void @iommu_set_cmd_line_dma_api() #9, !dbg !8911
  br label %if.end, !dbg !8911

if.end:                                           ; preds = %if.then, %entry
  store i32 3, i32* @iommu_def_domain_type, align 4, !dbg !8912
  ret void, !dbg !8913
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @iommu_default_passthrough() #1 !dbg !8914 {
entry:
  %0 = load i32, i32* @iommu_def_domain_type, align 4, !dbg !8915
  %cmp = icmp eq i32 %0, 4, !dbg !8916
  ret i1 %cmp, !dbg !8917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_ops* @iommu_ops_from_fwnode(%struct.fwnode_handle* %fwnode) #1 !dbg !8918 {
entry:
  %lock.addr.i10 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i10, metadata !4613, metadata !DIExpression()), !dbg !8921
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !4620, metadata !DIExpression()), !dbg !8923
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %iommu = alloca %struct.iommu_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_device*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp8 = alloca %struct.iommu_device*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !8925, metadata !DIExpression()), !dbg !8926
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !8927, metadata !DIExpression()), !dbg !8928
  store %struct.iommu_ops* null, %struct.iommu_ops** %ops, align 8, !dbg !8928
  call void @llvm.dbg.declare(metadata %struct.iommu_device** %iommu, metadata !8929, metadata !DIExpression()), !dbg !8930
  store %struct.spinlock* @iommu_device_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8931, !srcloc !4628
  %0 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8932
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %0, i32 0, i32 0, !dbg !8932
  %rlock.i = bitcast %union.anon.3* %1 to %struct.raw_spinlock*, !dbg !8932
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8933, metadata !DIExpression()), !dbg !8936
  %2 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @iommu_device_list, i32 0, i32 0), align 8, !dbg !8936
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !8936
  store i8* %3, i8** %__mptr, align 8, !dbg !8936
  br label %do.body, !dbg !8936

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8937

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !8936
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !8936
  %5 = bitcast i8* %add.ptr to %struct.iommu_device*, !dbg !8936
  store %struct.iommu_device* %5, %struct.iommu_device** %tmp, align 8, !dbg !8937
  %6 = load %struct.iommu_device*, %struct.iommu_device** %tmp, align 8, !dbg !8936
  store %struct.iommu_device* %6, %struct.iommu_device** %iommu, align 8, !dbg !8939
  br label %for.cond, !dbg !8939

for.cond:                                         ; preds = %do.end7, %do.end
  %7 = load %struct.iommu_device*, %struct.iommu_device** %iommu, align 8, !dbg !8940
  %list = getelementptr inbounds %struct.iommu_device, %struct.iommu_device* %7, i32 0, i32 0, !dbg !8940
  %cmp = icmp eq %struct.list_head* %list, @iommu_device_list, !dbg !8940
  %lnot = xor i1 %cmp, true, !dbg !8940
  br i1 %lnot, label %for.body, label %for.end, !dbg !8939

for.body:                                         ; preds = %for.cond
  %8 = load %struct.iommu_device*, %struct.iommu_device** %iommu, align 8, !dbg !8942
  %fwnode1 = getelementptr inbounds %struct.iommu_device, %struct.iommu_device* %8, i32 0, i32 2, !dbg !8944
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode1, align 8, !dbg !8944
  %10 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !8945
  %cmp2 = icmp eq %struct.fwnode_handle* %9, %10, !dbg !8946
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8947

if.then:                                          ; preds = %for.body
  %11 = load %struct.iommu_device*, %struct.iommu_device** %iommu, align 8, !dbg !8948
  %ops3 = getelementptr inbounds %struct.iommu_device, %struct.iommu_device* %11, i32 0, i32 1, !dbg !8950
  %12 = load %struct.iommu_ops*, %struct.iommu_ops** %ops3, align 8, !dbg !8950
  store %struct.iommu_ops* %12, %struct.iommu_ops** %ops, align 8, !dbg !8951
  br label %for.end, !dbg !8952

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8945

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !8953, metadata !DIExpression()), !dbg !8955
  %13 = load %struct.iommu_device*, %struct.iommu_device** %iommu, align 8, !dbg !8955
  %list5 = getelementptr inbounds %struct.iommu_device, %struct.iommu_device* %13, i32 0, i32 0, !dbg !8955
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list5, i32 0, i32 0, !dbg !8955
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8955
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !8955
  store i8* %15, i8** %__mptr4, align 8, !dbg !8955
  br label %do.body6, !dbg !8955

do.body6:                                         ; preds = %for.inc
  br label %do.end7, !dbg !8956

do.end7:                                          ; preds = %do.body6
  %16 = load i8*, i8** %__mptr4, align 8, !dbg !8955
  %add.ptr9 = getelementptr i8, i8* %16, i64 0, !dbg !8955
  %17 = bitcast i8* %add.ptr9 to %struct.iommu_device*, !dbg !8955
  store %struct.iommu_device* %17, %struct.iommu_device** %tmp8, align 8, !dbg !8956
  %18 = load %struct.iommu_device*, %struct.iommu_device** %tmp8, align 8, !dbg !8955
  store %struct.iommu_device* %18, %struct.iommu_device** %iommu, align 8, !dbg !8940
  br label %for.cond, !dbg !8940, !llvm.loop !8958

for.end:                                          ; preds = %if.then, %for.cond
  store %struct.spinlock* @iommu_device_lock, %struct.spinlock** %lock.addr.i10, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #11, !dbg !8960, !srcloc !4636
  %19 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i10, align 8, !dbg !8961
  %20 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %19, i32 0, i32 0, !dbg !8961
  %rlock.i11 = bitcast %union.anon.3* %20 to %struct.raw_spinlock*, !dbg !8961
  %21 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !8962
  ret %struct.iommu_ops* %21, !dbg !8963
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_fwspec_init(%struct.device* %dev, %struct.fwnode_handle* %iommu_fwnode, %struct.iommu_ops* %ops) #1 !dbg !8964 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %iommu_fwnode.addr = alloca %struct.fwnode_handle*, align 8
  %ops.addr = alloca %struct.iommu_ops*, align 8
  %fwspec = alloca %struct.iommu_fwspec*, align 8
  %__to_of_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.device_node*, align 8
  %__mptr = alloca i8*, align 8
  %tmp12 = alloca %struct.device_node*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8967, metadata !DIExpression()), !dbg !8968
  store %struct.fwnode_handle* %iommu_fwnode, %struct.fwnode_handle** %iommu_fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %iommu_fwnode.addr, metadata !8969, metadata !DIExpression()), !dbg !8970
  store %struct.iommu_ops* %ops, %struct.iommu_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata %struct.iommu_fwspec** %fwspec, metadata !8973, metadata !DIExpression()), !dbg !8974
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8975
  %call = call %struct.iommu_fwspec* @dev_iommu_fwspec_get(%struct.device* %0) #9, !dbg !8976
  store %struct.iommu_fwspec* %call, %struct.iommu_fwspec** %fwspec, align 8, !dbg !8974
  %1 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !8977
  %tobool = icmp ne %struct.iommu_fwspec* %1, null, !dbg !8977
  br i1 %tobool, label %if.then, label %if.end, !dbg !8979

if.then:                                          ; preds = %entry
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %ops.addr, align 8, !dbg !8980
  %3 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !8981
  %ops1 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %3, i32 0, i32 0, !dbg !8982
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !8982
  %cmp = icmp eq %struct.iommu_ops* %2, %4, !dbg !8983
  %5 = zext i1 %cmp to i64, !dbg !8980
  %cond = select i1 %cmp, i32 0, i32 -22, !dbg !8980
  store i32 %cond, i32* %retval, align 4, !dbg !8984
  br label %return, !dbg !8984

if.end:                                           ; preds = %entry
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8985
  %call2 = call %struct.dev_iommu* @dev_iommu_get(%struct.device* %6) #9, !dbg !8987
  %tobool3 = icmp ne %struct.dev_iommu* %call2, null, !dbg !8987
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !8988

if.then4:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !8989
  br label %return, !dbg !8989

if.end5:                                          ; preds = %if.end
  %call6 = call i64 @__ab_c_size(i64 1, i64 4, i64 32) #9, !dbg !8990
  %call7 = call i8* @kzalloc(i64 %call6, i32 3264) #9, !dbg !8991
  %7 = bitcast i8* %call7 to %struct.iommu_fwspec*, !dbg !8991
  store %struct.iommu_fwspec* %7, %struct.iommu_fwspec** %fwspec, align 8, !dbg !8992
  %8 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !8993
  %tobool8 = icmp ne %struct.iommu_fwspec* %8, null, !dbg !8993
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !8995

if.then9:                                         ; preds = %if.end5
  store i32 -12, i32* %retval, align 4, !dbg !8996
  br label %return, !dbg !8996

if.end10:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_of_node_fwnode, metadata !8997, metadata !DIExpression()), !dbg !8999
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %iommu_fwnode.addr, align 8, !dbg !8999
  store %struct.fwnode_handle* %9, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !8999
  %10 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !8999
  %call11 = call zeroext i1 @is_of_node(%struct.fwnode_handle* %10) #9, !dbg !8999
  br i1 %call11, label %cond.true, label %cond.false, !dbg !8999

cond.true:                                        ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9000, metadata !DIExpression()), !dbg !9002
  %11 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_of_node_fwnode, align 8, !dbg !9002
  %12 = bitcast %struct.fwnode_handle* %11 to i8*, !dbg !9002
  store i8* %12, i8** %__mptr, align 8, !dbg !9002
  br label %do.body, !dbg !9002

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9003

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !9002
  %add.ptr = getelementptr i8, i8* %13, i64 -24, !dbg !9002
  %14 = bitcast i8* %add.ptr to %struct.device_node*, !dbg !9002
  store %struct.device_node* %14, %struct.device_node** %tmp12, align 8, !dbg !9003
  %15 = load %struct.device_node*, %struct.device_node** %tmp12, align 8, !dbg !9002
  br label %cond.end, !dbg !8999

cond.false:                                       ; preds = %if.end10
  br label %cond.end, !dbg !8999

cond.end:                                         ; preds = %cond.false, %do.end
  %cond13 = phi %struct.device_node* [ %15, %do.end ], [ null, %cond.false ], !dbg !8999
  store %struct.device_node* %cond13, %struct.device_node** %tmp, align 8, !dbg !8999
  %16 = load %struct.device_node*, %struct.device_node** %tmp, align 8, !dbg !8999
  %call14 = call %struct.device_node* @of_node_get(%struct.device_node* %16) #9, !dbg !9005
  %17 = load %struct.fwnode_handle*, %struct.fwnode_handle** %iommu_fwnode.addr, align 8, !dbg !9006
  %18 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9007
  %iommu_fwnode15 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %18, i32 0, i32 1, !dbg !9008
  store %struct.fwnode_handle* %17, %struct.fwnode_handle** %iommu_fwnode15, align 8, !dbg !9009
  %19 = load %struct.iommu_ops*, %struct.iommu_ops** %ops.addr, align 8, !dbg !9010
  %20 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9011
  %ops16 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %20, i32 0, i32 0, !dbg !9012
  store %struct.iommu_ops* %19, %struct.iommu_ops** %ops16, align 8, !dbg !9013
  %21 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9014
  %22 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9015
  call void @dev_iommu_fwspec_set(%struct.device* %21, %struct.iommu_fwspec* %22) #9, !dbg !9016
  store i32 0, i32* %retval, align 4, !dbg !9017
  br label %return, !dbg !9017

return:                                           ; preds = %cond.end, %if.then9, %if.then4, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !9018
  ret i32 %23, !dbg !9018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iommu_fwspec* @dev_iommu_fwspec_get(%struct.device* %dev) #1 !dbg !9019 {
entry:
  %retval = alloca %struct.iommu_fwspec*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9022, metadata !DIExpression()), !dbg !9023
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9024
  %iommu = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 33, !dbg !9026
  %1 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !9026
  %tobool = icmp ne %struct.dev_iommu* %1, null, !dbg !9024
  br i1 %tobool, label %if.then, label %if.else, !dbg !9027

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9028
  %iommu1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 33, !dbg !9029
  %3 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu1, align 8, !dbg !9029
  %fwspec = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %3, i32 0, i32 2, !dbg !9030
  %4 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9030
  store %struct.iommu_fwspec* %4, %struct.iommu_fwspec** %retval, align 8, !dbg !9031
  br label %return, !dbg !9031

if.else:                                          ; preds = %entry
  store %struct.iommu_fwspec* null, %struct.iommu_fwspec** %retval, align 8, !dbg !9032
  br label %return, !dbg !9032

return:                                           ; preds = %if.else, %if.then
  %5 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %retval, align 8, !dbg !9033
  ret %struct.iommu_fwspec* %5, !dbg !9033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.dev_iommu* @dev_iommu_get(%struct.device* %dev) #1 !dbg !4578 {
entry:
  %retval = alloca %struct.dev_iommu*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %param = alloca %struct.dev_iommu*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9034, metadata !DIExpression()), !dbg !9035
  call void @llvm.dbg.declare(metadata %struct.dev_iommu** %param, metadata !9036, metadata !DIExpression()), !dbg !9037
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9038
  %iommu = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 33, !dbg !9039
  %1 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !9039
  store %struct.dev_iommu* %1, %struct.dev_iommu** %param, align 8, !dbg !9037
  %2 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !9040
  %tobool = icmp ne %struct.dev_iommu* %2, null, !dbg !9040
  br i1 %tobool, label %if.then, label %if.end, !dbg !9042

if.then:                                          ; preds = %entry
  %3 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !9043
  store %struct.dev_iommu* %3, %struct.dev_iommu** %retval, align 8, !dbg !9044
  br label %return, !dbg !9044

if.end:                                           ; preds = %entry
  %call = call i8* @kzalloc(i64 56, i32 3264) #9, !dbg !9045
  %4 = bitcast i8* %call to %struct.dev_iommu*, !dbg !9045
  store %struct.dev_iommu* %4, %struct.dev_iommu** %param, align 8, !dbg !9046
  %5 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !9047
  %tobool1 = icmp ne %struct.dev_iommu* %5, null, !dbg !9047
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !9049

if.then2:                                         ; preds = %if.end
  store %struct.dev_iommu* null, %struct.dev_iommu** %retval, align 8, !dbg !9050
  br label %return, !dbg !9050

if.end3:                                          ; preds = %if.end
  br label %do.body, !dbg !9051

do.body:                                          ; preds = %if.end3
  %6 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !9052
  %lock = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %6, i32 0, i32 0, !dbg !9052
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45, i64 0, i64 0), %struct.lock_class_key* @dev_iommu_get.__key) #9, !dbg !9052
  br label %do.end, !dbg !9052

do.end:                                           ; preds = %do.body
  %7 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !9054
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9055
  %iommu4 = getelementptr inbounds %struct.device, %struct.device* %8, i32 0, i32 33, !dbg !9056
  store %struct.dev_iommu* %7, %struct.dev_iommu** %iommu4, align 8, !dbg !9057
  %9 = load %struct.dev_iommu*, %struct.dev_iommu** %param, align 8, !dbg !9058
  store %struct.dev_iommu* %9, %struct.dev_iommu** %retval, align 8, !dbg !9059
  br label %return, !dbg !9059

return:                                           ; preds = %do.end, %if.then2, %if.then
  %10 = load %struct.dev_iommu*, %struct.dev_iommu** %retval, align 8, !dbg !9060
  ret %struct.dev_iommu* %10, !dbg !9060
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #1 !dbg !9061 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !9065, metadata !DIExpression()), !dbg !9066
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !9067, metadata !DIExpression()), !dbg !9068
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !9069, metadata !DIExpression()), !dbg !9070
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !9071, metadata !DIExpression()), !dbg !9072
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !9073, metadata !DIExpression()), !dbg !9076
  %0 = load i64, i64* %a.addr, align 8, !dbg !9076
  store i64 %0, i64* %__a, align 8, !dbg !9076
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !9077, metadata !DIExpression()), !dbg !9076
  %1 = load i64, i64* %b.addr, align 8, !dbg !9076
  store i64 %1, i64* %__b, align 8, !dbg !9076
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !9078, metadata !DIExpression()), !dbg !9076
  store i64* %bytes, i64** %__d, align 8, !dbg !9076
  %cmp = icmp eq i64* %__a, %__b, !dbg !9076
  %conv = zext i1 %cmp to i32, !dbg !9076
  %2 = load i64*, i64** %__d, align 8, !dbg !9076
  %cmp1 = icmp eq i64* %__a, %2, !dbg !9076
  %conv2 = zext i1 %cmp1 to i32, !dbg !9076
  %3 = load i64, i64* %__a, align 8, !dbg !9076
  %4 = load i64, i64* %__b, align 8, !dbg !9076
  %5 = load i64*, i64** %__d, align 8, !dbg !9076
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !9076
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !9076
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !9076
  store i64 %8, i64* %5, align 8, !dbg !9076
  %frombool = zext i1 %7 to i8, !dbg !9076
  store i8 %frombool, i8* %tmp, align 1, !dbg !9076
  %9 = load i8, i8* %tmp, align 1, !dbg !9076
  %tobool = trunc i8 %9 to i1, !dbg !9076
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #9, !dbg !9080
  br i1 %call, label %if.then, label %if.end, !dbg !9081

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !9082
  br label %return, !dbg !9082

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !9083, metadata !DIExpression()), !dbg !9086
  %10 = load i64, i64* %bytes, align 8, !dbg !9086
  store i64 %10, i64* %__a3, align 8, !dbg !9086
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !9087, metadata !DIExpression()), !dbg !9086
  %11 = load i64, i64* %c.addr, align 8, !dbg !9086
  store i64 %11, i64* %__b4, align 8, !dbg !9086
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !9088, metadata !DIExpression()), !dbg !9086
  store i64* %bytes, i64** %__d5, align 8, !dbg !9086
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !9086
  %conv7 = zext i1 %cmp6 to i32, !dbg !9086
  %12 = load i64*, i64** %__d5, align 8, !dbg !9086
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !9086
  %conv9 = zext i1 %cmp8 to i32, !dbg !9086
  %13 = load i64, i64* %__a3, align 8, !dbg !9086
  %14 = load i64, i64* %__b4, align 8, !dbg !9086
  %15 = load i64*, i64** %__d5, align 8, !dbg !9086
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !9086
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !9086
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !9086
  store i64 %18, i64* %15, align 8, !dbg !9086
  %frombool11 = zext i1 %17 to i8, !dbg !9086
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !9086
  %19 = load i8, i8* %tmp10, align 1, !dbg !9086
  %tobool12 = trunc i8 %19 to i1, !dbg !9086
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #9, !dbg !9089
  br i1 %call13, label %if.then14, label %if.end15, !dbg !9090

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !9091
  br label %return, !dbg !9091

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !9092
  store i64 %20, i64* %retval, align 8, !dbg !9093
  br label %return, !dbg !9093

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !9094
  ret i64 %21, !dbg !9094
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_node_get(%struct.device_node* %node) #1 !dbg !9095 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !9098, metadata !DIExpression()), !dbg !9099
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !9100
  ret %struct.device_node* %0, !dbg !9101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_of_node(%struct.fwnode_handle* %fwnode) #1 !dbg !9102 {
entry:
  %fwnode.addr = alloca %struct.fwnode_handle*, align 8
  store %struct.fwnode_handle* %fwnode, %struct.fwnode_handle** %fwnode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %fwnode.addr, metadata !9103, metadata !DIExpression()), !dbg !9104
  %0 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !9105
  %1 = bitcast %struct.fwnode_handle* %0 to i8*, !dbg !9105
  %call = call zeroext i1 @IS_ERR_OR_NULL(i8* %1) #9, !dbg !9106
  br i1 %call, label %land.end, label %land.rhs, !dbg !9107

land.rhs:                                         ; preds = %entry
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode.addr, align 8, !dbg !9108
  %ops = getelementptr inbounds %struct.fwnode_handle, %struct.fwnode_handle* %2, i32 0, i32 1, !dbg !9109
  %3 = load %struct.fwnode_operations*, %struct.fwnode_operations** %ops, align 8, !dbg !9109
  %cmp = icmp eq %struct.fwnode_operations* %3, @of_fwnode_ops, !dbg !9110
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !9111
  ret i1 %4, !dbg !9112
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_iommu_fwspec_set(%struct.device* %dev, %struct.iommu_fwspec* %fwspec) #1 !dbg !9113 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fwspec.addr = alloca %struct.iommu_fwspec*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9116, metadata !DIExpression()), !dbg !9117
  store %struct.iommu_fwspec* %fwspec, %struct.iommu_fwspec** %fwspec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_fwspec** %fwspec.addr, metadata !9118, metadata !DIExpression()), !dbg !9119
  %0 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec.addr, align 8, !dbg !9120
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9121
  %iommu = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 33, !dbg !9122
  %2 = load %struct.dev_iommu*, %struct.dev_iommu** %iommu, align 8, !dbg !9122
  %fwspec1 = getelementptr inbounds %struct.dev_iommu, %struct.dev_iommu* %2, i32 0, i32 2, !dbg !9123
  store %struct.iommu_fwspec* %0, %struct.iommu_fwspec** %fwspec1, align 8, !dbg !9124
  ret void, !dbg !9125
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_fwspec_free(%struct.device* %dev) #1 !dbg !9126 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %fwspec = alloca %struct.iommu_fwspec*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9127, metadata !DIExpression()), !dbg !9128
  call void @llvm.dbg.declare(metadata %struct.iommu_fwspec** %fwspec, metadata !9129, metadata !DIExpression()), !dbg !9130
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9131
  %call = call %struct.iommu_fwspec* @dev_iommu_fwspec_get(%struct.device* %0) #9, !dbg !9132
  store %struct.iommu_fwspec* %call, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9130
  %1 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9133
  %tobool = icmp ne %struct.iommu_fwspec* %1, null, !dbg !9133
  br i1 %tobool, label %if.then, label %if.end, !dbg !9135

if.then:                                          ; preds = %entry
  %2 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9136
  %iommu_fwnode = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %2, i32 0, i32 1, !dbg !9138
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %iommu_fwnode, align 8, !dbg !9138
  call void @fwnode_handle_put(%struct.fwnode_handle* %3) #9, !dbg !9139
  %4 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9140
  %5 = bitcast %struct.iommu_fwspec* %4 to i8*, !dbg !9140
  call void @kfree(i8* %5) #9, !dbg !9141
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9142
  call void @dev_iommu_fwspec_set(%struct.device* %6, %struct.iommu_fwspec* null) #9, !dbg !9143
  br label %if.end, !dbg !9144

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9145
}

; Function Attrs: noredzone
declare dso_local void @fwnode_handle_put(%struct.fwnode_handle*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_fwspec_add_ids(%struct.device* %dev, i32* %ids, i32 %num_ids) #1 !dbg !9146 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ids.addr = alloca i32*, align 8
  %num_ids.addr = alloca i32, align 4
  %fwspec = alloca %struct.iommu_fwspec*, align 8
  %i = alloca i32, align 4
  %new_num = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9149, metadata !DIExpression()), !dbg !9150
  store i32* %ids, i32** %ids.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ids.addr, metadata !9151, metadata !DIExpression()), !dbg !9152
  store i32 %num_ids, i32* %num_ids.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_ids.addr, metadata !9153, metadata !DIExpression()), !dbg !9154
  call void @llvm.dbg.declare(metadata %struct.iommu_fwspec** %fwspec, metadata !9155, metadata !DIExpression()), !dbg !9156
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9157
  %call = call %struct.iommu_fwspec* @dev_iommu_fwspec_get(%struct.device* %0) #9, !dbg !9158
  store %struct.iommu_fwspec* %call, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9156
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9159, metadata !DIExpression()), !dbg !9160
  call void @llvm.dbg.declare(metadata i32* %new_num, metadata !9161, metadata !DIExpression()), !dbg !9162
  %1 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9163
  %tobool = icmp ne %struct.iommu_fwspec* %1, null, !dbg !9163
  br i1 %tobool, label %if.end, label %if.then, !dbg !9165

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !9166
  br label %return, !dbg !9166

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9167
  %num_ids1 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %2, i32 0, i32 4, !dbg !9168
  %3 = load i32, i32* %num_ids1, align 8, !dbg !9168
  %4 = load i32, i32* %num_ids.addr, align 4, !dbg !9169
  %add = add i32 %3, %4, !dbg !9170
  store i32 %add, i32* %new_num, align 4, !dbg !9171
  %5 = load i32, i32* %new_num, align 4, !dbg !9172
  %cmp = icmp sgt i32 %5, 1, !dbg !9174
  br i1 %cmp, label %if.then2, label %if.end8, !dbg !9175

if.then2:                                         ; preds = %if.end
  %6 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9176
  %7 = bitcast %struct.iommu_fwspec* %6 to i8*, !dbg !9176
  %8 = load i32, i32* %new_num, align 4, !dbg !9178
  %conv = sext i32 %8 to i64, !dbg !9178
  %call3 = call i64 @__ab_c_size(i64 %conv, i64 4, i64 32) #9, !dbg !9178
  %call4 = call i8* @krealloc(i8* %7, i64 %call3, i32 3264) #9, !dbg !9179
  %9 = bitcast i8* %call4 to %struct.iommu_fwspec*, !dbg !9179
  store %struct.iommu_fwspec* %9, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9180
  %10 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9181
  %tobool5 = icmp ne %struct.iommu_fwspec* %10, null, !dbg !9181
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !9183

if.then6:                                         ; preds = %if.then2
  store i32 -12, i32* %retval, align 4, !dbg !9184
  br label %return, !dbg !9184

if.end7:                                          ; preds = %if.then2
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9185
  %12 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9186
  call void @dev_iommu_fwspec_set(%struct.device* %11, %struct.iommu_fwspec* %12) #9, !dbg !9187
  br label %if.end8, !dbg !9188

if.end8:                                          ; preds = %if.end7, %if.end
  store i32 0, i32* %i, align 4, !dbg !9189
  br label %for.cond, !dbg !9191

for.cond:                                         ; preds = %for.inc, %if.end8
  %13 = load i32, i32* %i, align 4, !dbg !9192
  %14 = load i32, i32* %num_ids.addr, align 4, !dbg !9194
  %cmp9 = icmp slt i32 %13, %14, !dbg !9195
  br i1 %cmp9, label %for.body, label %for.end, !dbg !9196

for.body:                                         ; preds = %for.cond
  %15 = load i32*, i32** %ids.addr, align 8, !dbg !9197
  %16 = load i32, i32* %i, align 4, !dbg !9198
  %idxprom = sext i32 %16 to i64, !dbg !9197
  %arrayidx = getelementptr i32, i32* %15, i64 %idxprom, !dbg !9197
  %17 = load i32, i32* %arrayidx, align 4, !dbg !9197
  %18 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9199
  %ids11 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %18, i32 0, i32 5, !dbg !9200
  %19 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9201
  %num_ids12 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %19, i32 0, i32 4, !dbg !9202
  %20 = load i32, i32* %num_ids12, align 8, !dbg !9202
  %21 = load i32, i32* %i, align 4, !dbg !9203
  %add13 = add i32 %20, %21, !dbg !9204
  %idxprom14 = zext i32 %add13 to i64, !dbg !9199
  %arrayidx15 = getelementptr [0 x i32], [0 x i32]* %ids11, i64 0, i64 %idxprom14, !dbg !9199
  store i32 %17, i32* %arrayidx15, align 4, !dbg !9205
  br label %for.inc, !dbg !9199

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !9206
  %inc = add i32 %22, 1, !dbg !9206
  store i32 %inc, i32* %i, align 4, !dbg !9206
  br label %for.cond, !dbg !9207, !llvm.loop !9208

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %new_num, align 4, !dbg !9210
  %24 = load %struct.iommu_fwspec*, %struct.iommu_fwspec** %fwspec, align 8, !dbg !9211
  %num_ids16 = getelementptr inbounds %struct.iommu_fwspec, %struct.iommu_fwspec* %24, i32 0, i32 4, !dbg !9212
  store i32 %23, i32* %num_ids16, align 8, !dbg !9213
  store i32 0, i32* %retval, align 4, !dbg !9214
  br label %return, !dbg !9214

return:                                           ; preds = %for.end, %if.then6, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !9215
  ret i32 %25, !dbg !9215
}

; Function Attrs: noredzone
declare dso_local i8* @krealloc(i8*, i64, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @iommu_dev_has_feature(%struct.device* %dev, i32 %feat) #1 !dbg !9216 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.device*, align 8
  %feat.addr = alloca i32, align 4
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9217, metadata !DIExpression()), !dbg !9218
  store i32 %feat, i32* %feat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %feat.addr, metadata !9219, metadata !DIExpression()), !dbg !9220
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9221, metadata !DIExpression()), !dbg !9222
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9223
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9224
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9224
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !9225
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9225
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !9222
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9226
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !9226
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9228

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9229
  %dev_has_feat = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 24, !dbg !9230
  %5 = load i1 (%struct.device*, i32)*, i1 (%struct.device*, i32)** %dev_has_feat, align 8, !dbg !9230
  %tobool1 = icmp ne i1 (%struct.device*, i32)* %5, null, !dbg !9229
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9231

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9232
  %dev_has_feat2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 24, !dbg !9233
  %7 = load i1 (%struct.device*, i32)*, i1 (%struct.device*, i32)** %dev_has_feat2, align 8, !dbg !9233
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9234
  %9 = load i32, i32* %feat.addr, align 4, !dbg !9235
  %call = call zeroext i1 %7(%struct.device* %8, i32 %9) #9, !dbg !9232
  store i1 %call, i1* %retval, align 1, !dbg !9236
  br label %return, !dbg !9236

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !9237
  br label %return, !dbg !9237

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !9238
  ret i1 %10, !dbg !9238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_dev_enable_feature(%struct.device* %dev, i32 %feat) #1 !dbg !9239 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %feat.addr = alloca i32, align 4
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9240, metadata !DIExpression()), !dbg !9241
  store i32 %feat, i32* %feat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %feat.addr, metadata !9242, metadata !DIExpression()), !dbg !9243
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9244, metadata !DIExpression()), !dbg !9245
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9246
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9247
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9247
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !9248
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9248
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !9245
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9249
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !9249
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9251

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9252
  %dev_enable_feat = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 26, !dbg !9253
  %5 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %dev_enable_feat, align 8, !dbg !9253
  %tobool1 = icmp ne i32 (%struct.device*, i32)* %5, null, !dbg !9252
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9254

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9255
  %dev_enable_feat2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 26, !dbg !9256
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %dev_enable_feat2, align 8, !dbg !9256
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9257
  %9 = load i32, i32* %feat.addr, align 4, !dbg !9258
  %call = call i32 %7(%struct.device* %8, i32 %9) #9, !dbg !9255
  store i32 %call, i32* %retval, align 4, !dbg !9259
  br label %return, !dbg !9259

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 -19, i32* %retval, align 4, !dbg !9260
  br label %return, !dbg !9260

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !9261
  ret i32 %10, !dbg !9261
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_dev_disable_feature(%struct.device* %dev, i32 %feat) #1 !dbg !9262 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %feat.addr = alloca i32, align 4
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9263, metadata !DIExpression()), !dbg !9264
  store i32 %feat, i32* %feat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %feat.addr, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9267, metadata !DIExpression()), !dbg !9268
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9269
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9270
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9270
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !9271
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9271
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !9268
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9272
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !9272
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9274

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9275
  %dev_disable_feat = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 27, !dbg !9276
  %5 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %dev_disable_feat, align 8, !dbg !9276
  %tobool1 = icmp ne i32 (%struct.device*, i32)* %5, null, !dbg !9275
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9277

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9278
  %dev_disable_feat2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 27, !dbg !9279
  %7 = load i32 (%struct.device*, i32)*, i32 (%struct.device*, i32)** %dev_disable_feat2, align 8, !dbg !9279
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9280
  %9 = load i32, i32* %feat.addr, align 4, !dbg !9281
  %call = call i32 %7(%struct.device* %8, i32 %9) #9, !dbg !9278
  store i32 %call, i32* %retval, align 4, !dbg !9282
  br label %return, !dbg !9282

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 -16, i32* %retval, align 4, !dbg !9283
  br label %return, !dbg !9283

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !9284
  ret i32 %10, !dbg !9284
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @iommu_dev_feature_enabled(%struct.device* %dev, i32 %feat) #1 !dbg !9285 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.device*, align 8
  %feat.addr = alloca i32, align 4
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9286, metadata !DIExpression()), !dbg !9287
  store i32 %feat, i32* %feat.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %feat.addr, metadata !9288, metadata !DIExpression()), !dbg !9289
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9290, metadata !DIExpression()), !dbg !9291
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9292
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9293
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9293
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !9294
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9294
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !9291
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9295
  %tobool = icmp ne %struct.iommu_ops* %3, null, !dbg !9295
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9297

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9298
  %dev_feat_enabled = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 25, !dbg !9299
  %5 = load i1 (%struct.device*, i32)*, i1 (%struct.device*, i32)** %dev_feat_enabled, align 8, !dbg !9299
  %tobool1 = icmp ne i1 (%struct.device*, i32)* %5, null, !dbg !9298
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9300

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9301
  %dev_feat_enabled2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 25, !dbg !9302
  %7 = load i1 (%struct.device*, i32)*, i1 (%struct.device*, i32)** %dev_feat_enabled2, align 8, !dbg !9302
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9303
  %9 = load i32, i32* %feat.addr, align 4, !dbg !9304
  %call = call zeroext i1 %7(%struct.device* %8, i32 %9) #9, !dbg !9301
  store i1 %call, i1* %retval, align 1, !dbg !9305
  br label %return, !dbg !9305

if.end:                                           ; preds = %land.lhs.true, %entry
  store i1 false, i1* %retval, align 1, !dbg !9306
  br label %return, !dbg !9306

return:                                           ; preds = %if.end, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !9307
  ret i1 %10, !dbg !9307
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_aux_attach_device(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !9308 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !9309, metadata !DIExpression()), !dbg !9310
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9311, metadata !DIExpression()), !dbg !9312
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9313, metadata !DIExpression()), !dbg !9314
  store i32 -19, i32* %ret, align 4, !dbg !9314
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9315
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !9317
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9317
  %aux_attach_dev = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 28, !dbg !9318
  %2 = load i32 (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)** %aux_attach_dev, align 8, !dbg !9318
  %tobool = icmp ne i32 (%struct.iommu_domain*, %struct.device*)* %2, null, !dbg !9315
  br i1 %tobool, label %if.then, label %if.end, !dbg !9319

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9320
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !9321
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !9321
  %aux_attach_dev2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 28, !dbg !9322
  %5 = load i32 (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)** %aux_attach_dev2, align 8, !dbg !9322
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9323
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9324
  %call = call i32 %5(%struct.iommu_domain* %6, %struct.device* %7) #9, !dbg !9320
  store i32 %call, i32* %ret, align 4, !dbg !9325
  br label %if.end, !dbg !9326

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !9327
  %tobool3 = icmp ne i32 %8, 0, !dbg !9327
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9329

if.then4:                                         ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9330
  call void @trace_attach_device_to_domain(%struct.device* %9) #9, !dbg !9331
  br label %if.end5, !dbg !9331

if.end5:                                          ; preds = %if.then4, %if.end
  %10 = load i32, i32* %ret, align 4, !dbg !9332
  ret i32 %10, !dbg !9333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_attach_device_to_domain(%struct.device* %dev) #1 !dbg !9334 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9335, metadata !DIExpression()), !dbg !9336
  ret void, !dbg !9336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_aux_detach_device(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !9337 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !9338, metadata !DIExpression()), !dbg !9339
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9340, metadata !DIExpression()), !dbg !9341
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9342
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !9344
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9344
  %aux_detach_dev = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 29, !dbg !9345
  %2 = load void (%struct.iommu_domain*, %struct.device*)*, void (%struct.iommu_domain*, %struct.device*)** %aux_detach_dev, align 8, !dbg !9345
  %tobool = icmp ne void (%struct.iommu_domain*, %struct.device*)* %2, null, !dbg !9342
  br i1 %tobool, label %if.then, label %if.end, !dbg !9346

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9347
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !9349
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !9349
  %aux_detach_dev2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 29, !dbg !9350
  %5 = load void (%struct.iommu_domain*, %struct.device*)*, void (%struct.iommu_domain*, %struct.device*)** %aux_detach_dev2, align 8, !dbg !9350
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9351
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9352
  call void %5(%struct.iommu_domain* %6, %struct.device* %7) #9, !dbg !9347
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9353
  call void @trace_detach_device_from_domain(%struct.device* %8) #9, !dbg !9354
  br label %if.end, !dbg !9355

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9356
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_detach_device_from_domain(%struct.device* %dev) #1 !dbg !9357 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9358, metadata !DIExpression()), !dbg !9359
  ret void, !dbg !9359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_aux_get_pasid(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !9360 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ret = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !9361, metadata !DIExpression()), !dbg !9362
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9363, metadata !DIExpression()), !dbg !9364
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9365, metadata !DIExpression()), !dbg !9366
  store i32 -19, i32* %ret, align 4, !dbg !9366
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9367
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !9369
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9369
  %aux_get_pasid = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 30, !dbg !9370
  %2 = load i32 (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)** %aux_get_pasid, align 8, !dbg !9370
  %tobool = icmp ne i32 (%struct.iommu_domain*, %struct.device*)* %2, null, !dbg !9367
  br i1 %tobool, label %if.then, label %if.end, !dbg !9371

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9372
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !9373
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !9373
  %aux_get_pasid2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 30, !dbg !9374
  %5 = load i32 (%struct.iommu_domain*, %struct.device*)*, i32 (%struct.iommu_domain*, %struct.device*)** %aux_get_pasid2, align 8, !dbg !9374
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !9375
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9376
  %call = call i32 %5(%struct.iommu_domain* %6, %struct.device* %7) #9, !dbg !9372
  store i32 %call, i32* %ret, align 4, !dbg !9377
  br label %if.end, !dbg !9378

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %ret, align 4, !dbg !9379
  ret i32 %8, !dbg !9380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.iommu_sva* @iommu_sva_bind_device(%struct.device* %dev, %struct.mm_struct* %mm, i8* %drvdata) #1 !dbg !9381 {
entry:
  %retval = alloca %struct.iommu_sva*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %mm.addr = alloca %struct.mm_struct*, align 8
  %drvdata.addr = alloca i8*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %handle = alloca %struct.iommu_sva*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9382, metadata !DIExpression()), !dbg !9383
  store %struct.mm_struct* %mm, %struct.mm_struct** %mm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mm_struct** %mm.addr, metadata !9384, metadata !DIExpression()), !dbg !9385
  store i8* %drvdata, i8** %drvdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %drvdata.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !9388, metadata !DIExpression()), !dbg !9389
  call void @llvm.dbg.declare(metadata %struct.iommu_sva** %handle, metadata !9390, metadata !DIExpression()), !dbg !9391
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !9392
  %0 = bitcast i8* %call to %struct.iommu_sva*, !dbg !9392
  store %struct.iommu_sva* %0, %struct.iommu_sva** %handle, align 8, !dbg !9391
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9393, metadata !DIExpression()), !dbg !9394
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9395
  %bus = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 5, !dbg !9396
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9396
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %2, i32 0, i32 19, !dbg !9397
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9397
  store %struct.iommu_ops* %3, %struct.iommu_ops** %ops, align 8, !dbg !9394
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9398
  %tobool = icmp ne %struct.iommu_ops* %4, null, !dbg !9398
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9400

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9401
  %sva_bind = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 31, !dbg !9402
  %6 = load %struct.iommu_sva* (%struct.device*, %struct.mm_struct*, i8*)*, %struct.iommu_sva* (%struct.device*, %struct.mm_struct*, i8*)** %sva_bind, align 8, !dbg !9402
  %tobool1 = icmp ne %struct.iommu_sva* (%struct.device*, %struct.mm_struct*, i8*)* %6, null, !dbg !9401
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9403

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call2 = call i8* @ERR_PTR(i64 -19) #9, !dbg !9404
  %7 = bitcast i8* %call2 to %struct.iommu_sva*, !dbg !9404
  store %struct.iommu_sva* %7, %struct.iommu_sva** %retval, align 8, !dbg !9405
  br label %return, !dbg !9405

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9406
  %call3 = call %struct.iommu_group* @iommu_group_get(%struct.device* %8) #9, !dbg !9407
  store %struct.iommu_group* %call3, %struct.iommu_group** %group, align 8, !dbg !9408
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9409
  %tobool4 = icmp ne %struct.iommu_group* %9, null, !dbg !9409
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !9411

if.then5:                                         ; preds = %if.end
  %call6 = call i8* @ERR_PTR(i64 -19) #9, !dbg !9412
  %10 = bitcast i8* %call6 to %struct.iommu_sva*, !dbg !9412
  store %struct.iommu_sva* %10, %struct.iommu_sva** %retval, align 8, !dbg !9413
  br label %return, !dbg !9413

if.end7:                                          ; preds = %if.end
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9414
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %11, i32 0, i32 3, !dbg !9415
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !9416
  %12 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9417
  %call8 = call i32 @iommu_group_device_count(%struct.iommu_group* %12) #9, !dbg !9419
  %cmp = icmp ne i32 %call8, 1, !dbg !9420
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !9421

if.then9:                                         ; preds = %if.end7
  br label %out_unlock, !dbg !9422

if.end10:                                         ; preds = %if.end7
  %13 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9423
  %sva_bind11 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %13, i32 0, i32 31, !dbg !9424
  %14 = load %struct.iommu_sva* (%struct.device*, %struct.mm_struct*, i8*)*, %struct.iommu_sva* (%struct.device*, %struct.mm_struct*, i8*)** %sva_bind11, align 8, !dbg !9424
  %15 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9425
  %16 = load %struct.mm_struct*, %struct.mm_struct** %mm.addr, align 8, !dbg !9426
  %17 = load i8*, i8** %drvdata.addr, align 8, !dbg !9427
  %call12 = call %struct.iommu_sva* %14(%struct.device* %15, %struct.mm_struct* %16, i8* %17) #9, !dbg !9423
  store %struct.iommu_sva* %call12, %struct.iommu_sva** %handle, align 8, !dbg !9428
  br label %out_unlock, !dbg !9429

out_unlock:                                       ; preds = %if.end10, %if.then9
  call void @llvm.dbg.label(metadata !9430), !dbg !9431
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9432
  %mutex13 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %18, i32 0, i32 3, !dbg !9433
  call void @mutex_unlock(%struct.mutex* %mutex13) #9, !dbg !9434
  %19 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9435
  call void @iommu_group_put(%struct.iommu_group* %19) #9, !dbg !9436
  %20 = load %struct.iommu_sva*, %struct.iommu_sva** %handle, align 8, !dbg !9437
  store %struct.iommu_sva* %20, %struct.iommu_sva** %retval, align 8, !dbg !9438
  br label %return, !dbg !9438

return:                                           ; preds = %out_unlock, %if.then5, %if.then
  %21 = load %struct.iommu_sva*, %struct.iommu_sva** %retval, align 8, !dbg !9439
  ret %struct.iommu_sva* %21, !dbg !9439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @iommu_sva_unbind_device(%struct.iommu_sva* %handle) #1 !dbg !9440 {
entry:
  %handle.addr = alloca %struct.iommu_sva*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %dev = alloca %struct.device*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.iommu_sva* %handle, %struct.iommu_sva** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_sva** %handle.addr, metadata !9441, metadata !DIExpression()), !dbg !9442
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !9443, metadata !DIExpression()), !dbg !9444
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9445, metadata !DIExpression()), !dbg !9446
  %0 = load %struct.iommu_sva*, %struct.iommu_sva** %handle.addr, align 8, !dbg !9447
  %dev1 = getelementptr inbounds %struct.iommu_sva, %struct.iommu_sva* %0, i32 0, i32 0, !dbg !9448
  %1 = load %struct.device*, %struct.device** %dev1, align 8, !dbg !9448
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !9446
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9449, metadata !DIExpression()), !dbg !9450
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9451
  %bus = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 5, !dbg !9452
  %3 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9452
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %3, i32 0, i32 19, !dbg !9453
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9453
  store %struct.iommu_ops* %4, %struct.iommu_ops** %ops, align 8, !dbg !9450
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9454
  %tobool = icmp ne %struct.iommu_ops* %5, null, !dbg !9454
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9456

lor.lhs.false:                                    ; preds = %entry
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9457
  %sva_unbind = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 32, !dbg !9458
  %7 = load void (%struct.iommu_sva*)*, void (%struct.iommu_sva*)** %sva_unbind, align 8, !dbg !9458
  %tobool2 = icmp ne void (%struct.iommu_sva*)* %7, null, !dbg !9457
  br i1 %tobool2, label %if.end, label %if.then, !dbg !9459

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !9460

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9461
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %8) #9, !dbg !9462
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !9463
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9464
  %tobool3 = icmp ne %struct.iommu_group* %9, null, !dbg !9464
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9466

if.then4:                                         ; preds = %if.end
  br label %return, !dbg !9467

if.end5:                                          ; preds = %if.end
  %10 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9468
  %mutex = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %10, i32 0, i32 3, !dbg !9469
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !9470
  %11 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9471
  %sva_unbind6 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %11, i32 0, i32 32, !dbg !9472
  %12 = load void (%struct.iommu_sva*)*, void (%struct.iommu_sva*)** %sva_unbind6, align 8, !dbg !9472
  %13 = load %struct.iommu_sva*, %struct.iommu_sva** %handle.addr, align 8, !dbg !9473
  call void %12(%struct.iommu_sva* %13) #9, !dbg !9471
  %14 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9474
  %mutex7 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %14, i32 0, i32 3, !dbg !9475
  call void @mutex_unlock(%struct.mutex* %mutex7) #9, !dbg !9476
  %15 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9477
  call void @iommu_group_put(%struct.iommu_group* %15) #9, !dbg !9478
  br label %return, !dbg !9479

return:                                           ; preds = %if.end5, %if.then4, %if.then
  ret void, !dbg !9479
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @iommu_sva_get_pasid(%struct.iommu_sva* %handle) #1 !dbg !9480 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca %struct.iommu_sva*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  store %struct.iommu_sva* %handle, %struct.iommu_sva** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_sva** %handle.addr, metadata !9481, metadata !DIExpression()), !dbg !9482
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9483, metadata !DIExpression()), !dbg !9484
  %0 = load %struct.iommu_sva*, %struct.iommu_sva** %handle.addr, align 8, !dbg !9485
  %dev = getelementptr inbounds %struct.iommu_sva, %struct.iommu_sva* %0, i32 0, i32 0, !dbg !9486
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9486
  %bus = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 5, !dbg !9487
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9487
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %2, i32 0, i32 19, !dbg !9488
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9488
  store %struct.iommu_ops* %3, %struct.iommu_ops** %ops, align 8, !dbg !9484
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9489
  %tobool = icmp ne %struct.iommu_ops* %4, null, !dbg !9489
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9491

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9492
  %sva_get_pasid = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 33, !dbg !9493
  %6 = load i32 (%struct.iommu_sva*)*, i32 (%struct.iommu_sva*)** %sva_get_pasid, align 8, !dbg !9493
  %tobool1 = icmp ne i32 (%struct.iommu_sva*)* %6, null, !dbg !9492
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9494

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -1, i32* %retval, align 4, !dbg !9495
  br label %return, !dbg !9495

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9496
  %sva_get_pasid2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %7, i32 0, i32 33, !dbg !9497
  %8 = load i32 (%struct.iommu_sva*)*, i32 (%struct.iommu_sva*)** %sva_get_pasid2, align 8, !dbg !9497
  %9 = load %struct.iommu_sva*, %struct.iommu_sva** %handle.addr, align 8, !dbg !9498
  %call = call i32 %8(%struct.iommu_sva* %9) #9, !dbg !9496
  store i32 %call, i32* %retval, align 4, !dbg !9499
  br label %return, !dbg !9499

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !9500
  ret i32 %10, !dbg !9500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @iommu_cmd_line_dma_api() #1 !dbg !9501 {
entry:
  %0 = load i32, i32* @iommu_cmd_line, align 4, !dbg !9502
  %conv = zext i32 %0 to i64, !dbg !9502
  %and = and i64 %conv, 1, !dbg !9503
  %tobool = icmp ne i64 %and, 0, !dbg !9504
  %lnot = xor i1 %tobool, true, !dbg !9504
  %lnot1 = xor i1 %lnot, true, !dbg !9505
  ret i1 %lnot1, !dbg !9506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mem_encrypt_active() #1 !dbg !9507 {
entry:
  ret i1 false, !dbg !9509
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @iommu_domain_type_str(i32 %t) #1 !dbg !9510 {
entry:
  %retval = alloca i8*, align 8
  %t.addr = alloca i32, align 4
  store i32 %t, i32* %t.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %t.addr, metadata !9513, metadata !DIExpression()), !dbg !9514
  %0 = load i32, i32* %t.addr, align 4, !dbg !9515
  switch i32 %0, label %sw.default [
    i32 0, label %sw.bb
    i32 4, label %sw.bb1
    i32 1, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !9516

sw.bb:                                            ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i64 0, i64 0), i8** %retval, align 8, !dbg !9517
  br label %return, !dbg !9517

sw.bb1:                                           ; preds = %entry
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i8** %retval, align 8, !dbg !9519
  br label %return, !dbg !9519

sw.bb2:                                           ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0), i8** %retval, align 8, !dbg !9520
  br label %return, !dbg !9520

sw.bb3:                                           ; preds = %entry
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8** %retval, align 8, !dbg !9521
  br label %return, !dbg !9521

sw.default:                                       ; preds = %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i8** %retval, align 8, !dbg !9522
  br label %return, !dbg !9522

return:                                           ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %1 = load i8*, i8** %retval, align 8, !dbg !9523
  ret i8* %1, !dbg !9523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9524 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9527, metadata !DIExpression()), !dbg !9528
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9529, metadata !DIExpression()), !dbg !9530
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9531, metadata !DIExpression()), !dbg !9532
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9533
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9535
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9536
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !9537
  br i1 %call, label %if.end, label %if.then, !dbg !9538

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !9539

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9540
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9541
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !9542
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !9543
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9544
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9545
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !9546
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !9547
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9548
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9549
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !9550
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !9551
  br label %do.body, !dbg !9552

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !9553

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !9555

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !9553

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !9557
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9557
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !9557
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !9557
  br label %do.end7, !dbg !9557

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !9553

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !9559
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9560 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9567, metadata !DIExpression()), !dbg !9568
  ret i1 true, !dbg !9569
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #1 !dbg !9570 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9571, metadata !DIExpression()), !dbg !9572
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9573
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !9575
  br i1 %call, label %if.end, label %if.then, !dbg !9576

if.then:                                          ; preds = %entry
  br label %return, !dbg !9577

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9578
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9579
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9579
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9580
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9581
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9581
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !9582
  br label %return, !dbg !9583

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9583
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #1 !dbg !9584 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9587, metadata !DIExpression()), !dbg !9588
  ret i1 true, !dbg !9589
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9590 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9591, metadata !DIExpression()), !dbg !9592
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9595
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9596
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !9597
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !9598
  br label %do.body, !dbg !9599

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !9600

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !9602

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !9600

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9604
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9604
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9604
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !9604
  br label %do.end5, !dbg !9604

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !9600

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !9606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @try_module_get(%struct.module* %module) #1 !dbg !9607 {
entry:
  %module.addr = alloca %struct.module*, align 8
  store %struct.module* %module, %struct.module** %module.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %module.addr, metadata !9610, metadata !DIExpression()), !dbg !9611
  ret i1 true, !dbg !9612
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #1 !dbg !9613 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9616, metadata !DIExpression()), !dbg !9617
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9618
  %1 = ptrtoint i8* %0 to i64, !dbg !9618
  %2 = inttoptr i64 %1 to i8*, !dbg !9618
  %3 = ptrtoint i8* %2 to i64, !dbg !9618
  %cmp = icmp uge i64 %3, -4095, !dbg !9618
  %lnot = xor i1 %cmp, true, !dbg !9618
  %lnot1 = xor i1 %lnot, true, !dbg !9618
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9618
  %conv = sext i32 %lnot.ext to i64, !dbg !9618
  %tobool = icmp ne i64 %conv, 0, !dbg !9618
  ret i1 %tobool, !dbg !9619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #1 !dbg !9620 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !9623, metadata !DIExpression()), !dbg !9624
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !9625
  %1 = ptrtoint i8* %0 to i64, !dbg !9626
  ret i64 %1, !dbg !9627
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.iommu_group* @iommu_group_get_for_dev(%struct.device* %dev) #1 !dbg !9628 {
entry:
  %retval = alloca %struct.iommu_group*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9629, metadata !DIExpression()), !dbg !9630
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !9631, metadata !DIExpression()), !dbg !9632
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9633
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !9634
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !9634
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !9635
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !9635
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !9632
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !9636, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9638, metadata !DIExpression()), !dbg !9639
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9640
  %call = call %struct.iommu_group* @iommu_group_get(%struct.device* %3) #9, !dbg !9641
  store %struct.iommu_group* %call, %struct.iommu_group** %group, align 8, !dbg !9642
  %4 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9643
  %tobool = icmp ne %struct.iommu_group* %4, null, !dbg !9643
  br i1 %tobool, label %if.then, label %if.end, !dbg !9645

if.then:                                          ; preds = %entry
  %5 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9646
  store %struct.iommu_group* %5, %struct.iommu_group** %retval, align 8, !dbg !9647
  br label %return, !dbg !9647

if.end:                                           ; preds = %entry
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9648
  %tobool1 = icmp ne %struct.iommu_ops* %6, null, !dbg !9648
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !9650

if.then2:                                         ; preds = %if.end
  %call3 = call i8* @ERR_PTR(i64 -22) #9, !dbg !9651
  %7 = bitcast i8* %call3 to %struct.iommu_group*, !dbg !9651
  store %struct.iommu_group* %7, %struct.iommu_group** %retval, align 8, !dbg !9652
  br label %return, !dbg !9652

if.end4:                                          ; preds = %if.end
  %8 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !9653
  %device_group = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %8, i32 0, i32 14, !dbg !9654
  %9 = load %struct.iommu_group* (%struct.device*)*, %struct.iommu_group* (%struct.device*)** %device_group, align 8, !dbg !9654
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9655
  %call5 = call %struct.iommu_group* %9(%struct.device* %10) #9, !dbg !9653
  store %struct.iommu_group* %call5, %struct.iommu_group** %group, align 8, !dbg !9656
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9657, metadata !DIExpression()), !dbg !9660
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9660
  %cmp = icmp eq %struct.iommu_group* %11, null, !dbg !9660
  %lnot = xor i1 %cmp, true, !dbg !9660
  %lnot6 = xor i1 %lnot, true, !dbg !9660
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !9660
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9660
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !9661
  %tobool7 = icmp ne i32 %12, 0, !dbg !9661
  %lnot8 = xor i1 %tobool7, true, !dbg !9661
  %lnot10 = xor i1 %lnot8, true, !dbg !9661
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !9661
  %conv = sext i32 %lnot.ext11 to i64, !dbg !9661
  %tobool12 = icmp ne i64 %conv, 0, !dbg !9661
  br i1 %tobool12, label %if.then13, label %if.end20, !dbg !9660

if.then13:                                        ; preds = %if.end4
  br label %do.body, !dbg !9661

do.body:                                          ; preds = %if.then13
  br label %do.body14, !dbg !9663

do.body14:                                        ; preds = %do.body
  br label %do.end, !dbg !9665

do.end:                                           ; preds = %do.body14
  br label %do.body15, !dbg !9663

do.body15:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 1541, i32 2307, i64 12) #11, !dbg !9667, !srcloc !9669
  br label %do.end16, !dbg !9667

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 273) #11, !dbg !9670, !srcloc !9672
  br label %do.body17, !dbg !9663

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !9673

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !9663

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !9663

if.end20:                                         ; preds = %do.end19, %if.end4
  %13 = load i32, i32* %__ret_warn_on, align 4, !dbg !9660
  %tobool21 = icmp ne i32 %13, 0, !dbg !9660
  %lnot22 = xor i1 %tobool21, true, !dbg !9660
  %lnot24 = xor i1 %lnot22, true, !dbg !9660
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !9660
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !9660
  store i64 %conv26, i64* %tmp, align 8, !dbg !9661
  %14 = load i64, i64* %tmp, align 8, !dbg !9660
  %tobool27 = icmp ne i64 %14, 0, !dbg !9675
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !9676

if.then28:                                        ; preds = %if.end20
  %call29 = call i8* @ERR_PTR(i64 -22) #9, !dbg !9677
  %15 = bitcast i8* %call29 to %struct.iommu_group*, !dbg !9677
  store %struct.iommu_group* %15, %struct.iommu_group** %retval, align 8, !dbg !9678
  br label %return, !dbg !9678

if.end30:                                         ; preds = %if.end20
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9679
  %17 = bitcast %struct.iommu_group* %16 to i8*, !dbg !9679
  %call31 = call zeroext i1 @IS_ERR(i8* %17) #9, !dbg !9681
  br i1 %call31, label %if.then32, label %if.end33, !dbg !9682

if.then32:                                        ; preds = %if.end30
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9683
  store %struct.iommu_group* %18, %struct.iommu_group** %retval, align 8, !dbg !9684
  br label %return, !dbg !9684

if.end33:                                         ; preds = %if.end30
  %19 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9685
  %20 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9686
  %call34 = call i32 @iommu_group_add_device(%struct.iommu_group* %19, %struct.device* %20) #9, !dbg !9687
  store i32 %call34, i32* %ret, align 4, !dbg !9688
  %21 = load i32, i32* %ret, align 4, !dbg !9689
  %tobool35 = icmp ne i32 %21, 0, !dbg !9689
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !9691

if.then36:                                        ; preds = %if.end33
  br label %out_put_group, !dbg !9692

if.end37:                                         ; preds = %if.end33
  %22 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9693
  store %struct.iommu_group* %22, %struct.iommu_group** %retval, align 8, !dbg !9694
  br label %return, !dbg !9694

out_put_group:                                    ; preds = %if.then36
  call void @llvm.dbg.label(metadata !9695), !dbg !9696
  %23 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !9697
  call void @iommu_group_put(%struct.iommu_group* %23) #9, !dbg !9698
  %24 = load i32, i32* %ret, align 4, !dbg !9699
  %conv38 = sext i32 %24 to i64, !dbg !9699
  %call39 = call i8* @ERR_PTR(i64 %conv38) #9, !dbg !9700
  %25 = bitcast i8* %call39 to %struct.iommu_group*, !dbg !9700
  store %struct.iommu_group* %25, %struct.iommu_group** %retval, align 8, !dbg !9701
  br label %return, !dbg !9701

return:                                           ; preds = %out_put_group, %if.end37, %if.then32, %if.then28, %if.then2, %if.then
  %26 = load %struct.iommu_group*, %struct.iommu_group** %retval, align 8, !dbg !9702
  ret %struct.iommu_group* %26, !dbg !9702
}

; Function Attrs: noredzone
declare dso_local i32 @iommu_device_link(%struct.iommu_device*, %struct.device*) #3

; Function Attrs: noredzone
declare dso_local i32 @kstrtobool(i8*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_insert_resv_region(%struct.iommu_resv_region* %new, %struct.list_head* %regions) #1 !dbg !9703 {
entry:
  %retval = alloca i32, align 4
  %new.addr = alloca %struct.iommu_resv_region*, align 8
  %regions.addr = alloca %struct.list_head*, align 8
  %iter = alloca %struct.iommu_resv_region*, align 8
  %tmp = alloca %struct.iommu_resv_region*, align 8
  %nr = alloca %struct.iommu_resv_region*, align 8
  %top = alloca %struct.iommu_resv_region*, align 8
  %stack = alloca %struct.list_head, align 8
  %__mptr = alloca i8*, align 8
  %tmp2 = alloca %struct.iommu_resv_region*, align 8
  %__mptr14 = alloca i8*, align 8
  %tmp19 = alloca %struct.iommu_resv_region*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp27 = alloca %struct.iommu_resv_region*, align 8
  %__mptr29 = alloca i8*, align 8
  %tmp34 = alloca %struct.iommu_resv_region*, align 8
  %top_end = alloca i64, align 8
  %iter_end = alloca i64, align 8
  %__mptr49 = alloca i8*, align 8
  %tmp53 = alloca %struct.iommu_resv_region*, align 8
  %__mptr66 = alloca i8*, align 8
  %tmp71 = alloca %struct.iommu_resv_region*, align 8
  %__UNIQUE_ID___x247 = alloca i64, align 8
  %__UNIQUE_ID___y248 = alloca i64, align 8
  %tmp84 = alloca i64, align 8
  %__mptr93 = alloca i8*, align 8
  %tmp98 = alloca %struct.iommu_resv_region*, align 8
  store %struct.iommu_resv_region* %new, %struct.iommu_resv_region** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %new.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  store %struct.list_head* %regions, %struct.list_head** %regions.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %regions.addr, metadata !9708, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %iter, metadata !9710, metadata !DIExpression()), !dbg !9711
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %tmp, metadata !9712, metadata !DIExpression()), !dbg !9713
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %nr, metadata !9714, metadata !DIExpression()), !dbg !9715
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %top, metadata !9716, metadata !DIExpression()), !dbg !9717
  call void @llvm.dbg.declare(metadata %struct.list_head* %stack, metadata !9718, metadata !DIExpression()), !dbg !9719
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %stack, i32 0, i32 0, !dbg !9719
  store %struct.list_head* %stack, %struct.list_head** %next, align 8, !dbg !9719
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %stack, i32 0, i32 1, !dbg !9719
  store %struct.list_head* %stack, %struct.list_head** %prev, align 8, !dbg !9719
  %0 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %new.addr, align 8, !dbg !9720
  %start = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %0, i32 0, i32 1, !dbg !9721
  %1 = load i64, i64* %start, align 8, !dbg !9721
  %2 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %new.addr, align 8, !dbg !9722
  %length = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %2, i32 0, i32 2, !dbg !9723
  %3 = load i64, i64* %length, align 8, !dbg !9723
  %4 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %new.addr, align 8, !dbg !9724
  %prot = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %4, i32 0, i32 3, !dbg !9725
  %5 = load i32, i32* %prot, align 8, !dbg !9725
  %6 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %new.addr, align 8, !dbg !9726
  %type = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %6, i32 0, i32 4, !dbg !9727
  %7 = load i32, i32* %type, align 4, !dbg !9727
  %call = call %struct.iommu_resv_region* @iommu_alloc_resv_region(i64 %1, i64 %3, i32 %5, i32 %7) #9, !dbg !9728
  store %struct.iommu_resv_region* %call, %struct.iommu_resv_region** %nr, align 8, !dbg !9729
  %8 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %nr, align 8, !dbg !9730
  %tobool = icmp ne %struct.iommu_resv_region* %8, null, !dbg !9730
  br i1 %tobool, label %if.end, label %if.then, !dbg !9732

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9733
  br label %return, !dbg !9733

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9734, metadata !DIExpression()), !dbg !9737
  %9 = load %struct.list_head*, %struct.list_head** %regions.addr, align 8, !dbg !9737
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !9737
  %10 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !9737
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !9737
  store i8* %11, i8** %__mptr, align 8, !dbg !9737
  br label %do.body, !dbg !9737

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9738

do.end:                                           ; preds = %do.body
  %12 = load i8*, i8** %__mptr, align 8, !dbg !9737
  %add.ptr = getelementptr i8, i8* %12, i64 0, !dbg !9737
  %13 = bitcast i8* %add.ptr to %struct.iommu_resv_region*, !dbg !9737
  store %struct.iommu_resv_region* %13, %struct.iommu_resv_region** %tmp2, align 8, !dbg !9738
  %14 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp2, align 8, !dbg !9737
  store %struct.iommu_resv_region* %14, %struct.iommu_resv_region** %iter, align 8, !dbg !9740
  br label %for.cond, !dbg !9740

for.cond:                                         ; preds = %do.end18, %do.end
  %15 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9741
  %list = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %15, i32 0, i32 0, !dbg !9741
  %16 = load %struct.list_head*, %struct.list_head** %regions.addr, align 8, !dbg !9741
  %cmp = icmp eq %struct.list_head* %list, %16, !dbg !9741
  %lnot = xor i1 %cmp, true, !dbg !9741
  br i1 %lnot, label %for.body, label %for.end, !dbg !9740

for.body:                                         ; preds = %for.cond
  %17 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %nr, align 8, !dbg !9743
  %start3 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %17, i32 0, i32 1, !dbg !9746
  %18 = load i64, i64* %start3, align 8, !dbg !9746
  %19 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9747
  %start4 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %19, i32 0, i32 1, !dbg !9748
  %20 = load i64, i64* %start4, align 8, !dbg !9748
  %cmp5 = icmp ult i64 %18, %20, !dbg !9749
  br i1 %cmp5, label %if.then12, label %lor.lhs.false, !dbg !9750

lor.lhs.false:                                    ; preds = %for.body
  %21 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %nr, align 8, !dbg !9751
  %start6 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %21, i32 0, i32 1, !dbg !9752
  %22 = load i64, i64* %start6, align 8, !dbg !9752
  %23 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9753
  %start7 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %23, i32 0, i32 1, !dbg !9754
  %24 = load i64, i64* %start7, align 8, !dbg !9754
  %cmp8 = icmp eq i64 %22, %24, !dbg !9755
  br i1 %cmp8, label %land.lhs.true, label %if.end13, !dbg !9756

land.lhs.true:                                    ; preds = %lor.lhs.false
  %25 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %nr, align 8, !dbg !9757
  %type9 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %25, i32 0, i32 4, !dbg !9758
  %26 = load i32, i32* %type9, align 4, !dbg !9758
  %27 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9759
  %type10 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %27, i32 0, i32 4, !dbg !9760
  %28 = load i32, i32* %type10, align 4, !dbg !9760
  %cmp11 = icmp ule i32 %26, %28, !dbg !9761
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9762

if.then12:                                        ; preds = %land.lhs.true, %for.body
  br label %for.end, !dbg !9763

if.end13:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !9764

for.inc:                                          ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i8** %__mptr14, metadata !9765, metadata !DIExpression()), !dbg !9767
  %29 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9767
  %list15 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %29, i32 0, i32 0, !dbg !9767
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %list15, i32 0, i32 0, !dbg !9767
  %30 = load %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !9767
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !9767
  store i8* %31, i8** %__mptr14, align 8, !dbg !9767
  br label %do.body17, !dbg !9767

do.body17:                                        ; preds = %for.inc
  br label %do.end18, !dbg !9768

do.end18:                                         ; preds = %do.body17
  %32 = load i8*, i8** %__mptr14, align 8, !dbg !9767
  %add.ptr20 = getelementptr i8, i8* %32, i64 0, !dbg !9767
  %33 = bitcast i8* %add.ptr20 to %struct.iommu_resv_region*, !dbg !9767
  store %struct.iommu_resv_region* %33, %struct.iommu_resv_region** %tmp19, align 8, !dbg !9768
  %34 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp19, align 8, !dbg !9767
  store %struct.iommu_resv_region* %34, %struct.iommu_resv_region** %iter, align 8, !dbg !9741
  br label %for.cond, !dbg !9741, !llvm.loop !9770

for.end:                                          ; preds = %if.then12, %for.cond
  %35 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %nr, align 8, !dbg !9772
  %list21 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %35, i32 0, i32 0, !dbg !9773
  %36 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9774
  %list22 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %36, i32 0, i32 0, !dbg !9775
  call void @list_add_tail(%struct.list_head* %list21, %struct.list_head* %list22) #9, !dbg !9776
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !9777, metadata !DIExpression()), !dbg !9780
  %37 = load %struct.list_head*, %struct.list_head** %regions.addr, align 8, !dbg !9780
  %next24 = getelementptr inbounds %struct.list_head, %struct.list_head* %37, i32 0, i32 0, !dbg !9780
  %38 = load %struct.list_head*, %struct.list_head** %next24, align 8, !dbg !9780
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !9780
  store i8* %39, i8** %__mptr23, align 8, !dbg !9780
  br label %do.body25, !dbg !9780

do.body25:                                        ; preds = %for.end
  br label %do.end26, !dbg !9781

do.end26:                                         ; preds = %do.body25
  %40 = load i8*, i8** %__mptr23, align 8, !dbg !9780
  %add.ptr28 = getelementptr i8, i8* %40, i64 0, !dbg !9780
  %41 = bitcast i8* %add.ptr28 to %struct.iommu_resv_region*, !dbg !9780
  store %struct.iommu_resv_region* %41, %struct.iommu_resv_region** %tmp27, align 8, !dbg !9781
  %42 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp27, align 8, !dbg !9780
  store %struct.iommu_resv_region* %42, %struct.iommu_resv_region** %iter, align 8, !dbg !9783
  call void @llvm.dbg.declare(metadata i8** %__mptr29, metadata !9784, metadata !DIExpression()), !dbg !9786
  %43 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9786
  %list30 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %43, i32 0, i32 0, !dbg !9786
  %next31 = getelementptr inbounds %struct.list_head, %struct.list_head* %list30, i32 0, i32 0, !dbg !9786
  %44 = load %struct.list_head*, %struct.list_head** %next31, align 8, !dbg !9786
  %45 = bitcast %struct.list_head* %44 to i8*, !dbg !9786
  store i8* %45, i8** %__mptr29, align 8, !dbg !9786
  br label %do.body32, !dbg !9786

do.body32:                                        ; preds = %do.end26
  br label %do.end33, !dbg !9787

do.end33:                                         ; preds = %do.body32
  %46 = load i8*, i8** %__mptr29, align 8, !dbg !9786
  %add.ptr35 = getelementptr i8, i8* %46, i64 0, !dbg !9786
  %47 = bitcast i8* %add.ptr35 to %struct.iommu_resv_region*, !dbg !9786
  store %struct.iommu_resv_region* %47, %struct.iommu_resv_region** %tmp34, align 8, !dbg !9787
  %48 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp34, align 8, !dbg !9786
  store %struct.iommu_resv_region* %48, %struct.iommu_resv_region** %tmp, align 8, !dbg !9783
  br label %for.cond36, !dbg !9783

for.cond36:                                       ; preds = %do.end97, %do.end33
  %49 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9789
  %list37 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %49, i32 0, i32 0, !dbg !9789
  %50 = load %struct.list_head*, %struct.list_head** %regions.addr, align 8, !dbg !9789
  %cmp38 = icmp eq %struct.list_head* %list37, %50, !dbg !9789
  %lnot39 = xor i1 %cmp38, true, !dbg !9789
  br i1 %lnot39, label %for.body40, label %for.end100, !dbg !9783

for.body40:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata i64* %top_end, metadata !9791, metadata !DIExpression()), !dbg !9793
  call void @llvm.dbg.declare(metadata i64* %iter_end, metadata !9794, metadata !DIExpression()), !dbg !9795
  %51 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9796
  %start41 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %51, i32 0, i32 1, !dbg !9797
  %52 = load i64, i64* %start41, align 8, !dbg !9797
  %53 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9798
  %length42 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %53, i32 0, i32 2, !dbg !9799
  %54 = load i64, i64* %length42, align 8, !dbg !9799
  %add = add i64 %52, %54, !dbg !9800
  %sub = sub i64 %add, 1, !dbg !9801
  store i64 %sub, i64* %iter_end, align 8, !dbg !9795
  %55 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9802
  %type43 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %55, i32 0, i32 4, !dbg !9804
  %56 = load i32, i32* %type43, align 4, !dbg !9804
  %57 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %new.addr, align 8, !dbg !9805
  %type44 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %57, i32 0, i32 4, !dbg !9806
  %58 = load i32, i32* %type44, align 4, !dbg !9806
  %cmp45 = icmp ne i32 %56, %58, !dbg !9807
  br i1 %cmp45, label %if.then46, label %if.end48, !dbg !9808

if.then46:                                        ; preds = %for.body40
  %59 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9809
  %list47 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %59, i32 0, i32 0, !dbg !9811
  call void @list_move_tail(%struct.list_head* %list47, %struct.list_head* %stack) #9, !dbg !9812
  br label %for.inc92, !dbg !9813

if.end48:                                         ; preds = %for.body40
  call void @llvm.dbg.declare(metadata i8** %__mptr49, metadata !9814, metadata !DIExpression()), !dbg !9817
  %prev50 = getelementptr inbounds %struct.list_head, %struct.list_head* %stack, i32 0, i32 1, !dbg !9817
  %60 = load %struct.list_head*, %struct.list_head** %prev50, align 8, !dbg !9817
  %61 = bitcast %struct.list_head* %60 to i8*, !dbg !9817
  store i8* %61, i8** %__mptr49, align 8, !dbg !9817
  br label %do.body51, !dbg !9817

do.body51:                                        ; preds = %if.end48
  br label %do.end52, !dbg !9818

do.end52:                                         ; preds = %do.body51
  %62 = load i8*, i8** %__mptr49, align 8, !dbg !9817
  %add.ptr54 = getelementptr i8, i8* %62, i64 0, !dbg !9817
  %63 = bitcast i8* %add.ptr54 to %struct.iommu_resv_region*, !dbg !9817
  store %struct.iommu_resv_region* %63, %struct.iommu_resv_region** %tmp53, align 8, !dbg !9818
  %64 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp53, align 8, !dbg !9817
  store %struct.iommu_resv_region* %64, %struct.iommu_resv_region** %top, align 8, !dbg !9820
  br label %for.cond55, !dbg !9820

for.cond55:                                       ; preds = %do.end70, %do.end52
  %65 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9821
  %list56 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %65, i32 0, i32 0, !dbg !9821
  %cmp57 = icmp eq %struct.list_head* %list56, %stack, !dbg !9821
  %lnot58 = xor i1 %cmp57, true, !dbg !9821
  br i1 %lnot58, label %for.body59, label %for.end73, !dbg !9820

for.body59:                                       ; preds = %for.cond55
  %66 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9823
  %type60 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %66, i32 0, i32 4, !dbg !9825
  %67 = load i32, i32* %type60, align 4, !dbg !9825
  %68 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9826
  %type61 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %68, i32 0, i32 4, !dbg !9827
  %69 = load i32, i32* %type61, align 4, !dbg !9827
  %cmp62 = icmp eq i32 %67, %69, !dbg !9828
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !9829

if.then63:                                        ; preds = %for.body59
  br label %check_overlap, !dbg !9830

if.end64:                                         ; preds = %for.body59
  br label %for.inc65, !dbg !9827

for.inc65:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata i8** %__mptr66, metadata !9831, metadata !DIExpression()), !dbg !9833
  %70 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9833
  %list67 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %70, i32 0, i32 0, !dbg !9833
  %prev68 = getelementptr inbounds %struct.list_head, %struct.list_head* %list67, i32 0, i32 1, !dbg !9833
  %71 = load %struct.list_head*, %struct.list_head** %prev68, align 8, !dbg !9833
  %72 = bitcast %struct.list_head* %71 to i8*, !dbg !9833
  store i8* %72, i8** %__mptr66, align 8, !dbg !9833
  br label %do.body69, !dbg !9833

do.body69:                                        ; preds = %for.inc65
  br label %do.end70, !dbg !9834

do.end70:                                         ; preds = %do.body69
  %73 = load i8*, i8** %__mptr66, align 8, !dbg !9833
  %add.ptr72 = getelementptr i8, i8* %73, i64 0, !dbg !9833
  %74 = bitcast i8* %add.ptr72 to %struct.iommu_resv_region*, !dbg !9833
  store %struct.iommu_resv_region* %74, %struct.iommu_resv_region** %tmp71, align 8, !dbg !9834
  %75 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp71, align 8, !dbg !9833
  store %struct.iommu_resv_region* %75, %struct.iommu_resv_region** %top, align 8, !dbg !9821
  br label %for.cond55, !dbg !9821, !llvm.loop !9836

for.end73:                                        ; preds = %for.cond55
  %76 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9838
  %list74 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %76, i32 0, i32 0, !dbg !9839
  call void @list_move_tail(%struct.list_head* %list74, %struct.list_head* %stack) #9, !dbg !9840
  br label %for.inc92, !dbg !9841

check_overlap:                                    ; preds = %if.then63
  call void @llvm.dbg.label(metadata !9842), !dbg !9843
  %77 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9844
  %start75 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %77, i32 0, i32 1, !dbg !9845
  %78 = load i64, i64* %start75, align 8, !dbg !9845
  %79 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9846
  %length76 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %79, i32 0, i32 2, !dbg !9847
  %80 = load i64, i64* %length76, align 8, !dbg !9847
  %add77 = add i64 %78, %80, !dbg !9848
  %sub78 = sub i64 %add77, 1, !dbg !9849
  store i64 %sub78, i64* %top_end, align 8, !dbg !9850
  %81 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9851
  %start79 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %81, i32 0, i32 1, !dbg !9853
  %82 = load i64, i64* %start79, align 8, !dbg !9853
  %83 = load i64, i64* %top_end, align 8, !dbg !9854
  %add80 = add i64 %83, 1, !dbg !9855
  %cmp81 = icmp ugt i64 %82, %add80, !dbg !9856
  br i1 %cmp81, label %if.then82, label %if.else, !dbg !9857

if.then82:                                        ; preds = %check_overlap
  %84 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9858
  %list83 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %84, i32 0, i32 0, !dbg !9860
  call void @list_move_tail(%struct.list_head* %list83, %struct.list_head* %stack) #9, !dbg !9861
  br label %if.end91, !dbg !9862

if.else:                                          ; preds = %check_overlap
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x247, metadata !9863, metadata !DIExpression()), !dbg !9866
  %85 = load i64, i64* %top_end, align 8, !dbg !9866
  store i64 %85, i64* %__UNIQUE_ID___x247, align 8, !dbg !9866
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y248, metadata !9867, metadata !DIExpression()), !dbg !9866
  %86 = load i64, i64* %iter_end, align 8, !dbg !9866
  store i64 %86, i64* %__UNIQUE_ID___y248, align 8, !dbg !9866
  %87 = load i64, i64* %__UNIQUE_ID___x247, align 8, !dbg !9866
  %88 = load i64, i64* %__UNIQUE_ID___y248, align 8, !dbg !9866
  %cmp85 = icmp ugt i64 %87, %88, !dbg !9866
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !9866

cond.true:                                        ; preds = %if.else
  %89 = load i64, i64* %__UNIQUE_ID___x247, align 8, !dbg !9866
  br label %cond.end, !dbg !9866

cond.false:                                       ; preds = %if.else
  %90 = load i64, i64* %__UNIQUE_ID___y248, align 8, !dbg !9866
  br label %cond.end, !dbg !9866

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %89, %cond.true ], [ %90, %cond.false ], !dbg !9866
  store i64 %cond, i64* %tmp84, align 8, !dbg !9866
  %91 = load i64, i64* %tmp84, align 8, !dbg !9866
  %92 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9868
  %start86 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %92, i32 0, i32 1, !dbg !9869
  %93 = load i64, i64* %start86, align 8, !dbg !9869
  %sub87 = sub i64 %91, %93, !dbg !9870
  %add88 = add i64 %sub87, 1, !dbg !9871
  %94 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %top, align 8, !dbg !9872
  %length89 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %94, i32 0, i32 2, !dbg !9873
  store i64 %add88, i64* %length89, align 8, !dbg !9874
  %95 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9875
  %list90 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %95, i32 0, i32 0, !dbg !9876
  call void @list_del(%struct.list_head* %list90) #9, !dbg !9877
  %96 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %iter, align 8, !dbg !9878
  %97 = bitcast %struct.iommu_resv_region* %96 to i8*, !dbg !9878
  call void @kfree(i8* %97) #9, !dbg !9879
  br label %if.end91

if.end91:                                         ; preds = %cond.end, %if.then82
  br label %for.inc92, !dbg !9880

for.inc92:                                        ; preds = %if.end91, %for.end73, %if.then46
  %98 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp, align 8, !dbg !9789
  store %struct.iommu_resv_region* %98, %struct.iommu_resv_region** %iter, align 8, !dbg !9789
  call void @llvm.dbg.declare(metadata i8** %__mptr93, metadata !9881, metadata !DIExpression()), !dbg !9883
  %99 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp, align 8, !dbg !9883
  %list94 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %99, i32 0, i32 0, !dbg !9883
  %next95 = getelementptr inbounds %struct.list_head, %struct.list_head* %list94, i32 0, i32 0, !dbg !9883
  %100 = load %struct.list_head*, %struct.list_head** %next95, align 8, !dbg !9883
  %101 = bitcast %struct.list_head* %100 to i8*, !dbg !9883
  store i8* %101, i8** %__mptr93, align 8, !dbg !9883
  br label %do.body96, !dbg !9883

do.body96:                                        ; preds = %for.inc92
  br label %do.end97, !dbg !9884

do.end97:                                         ; preds = %do.body96
  %102 = load i8*, i8** %__mptr93, align 8, !dbg !9883
  %add.ptr99 = getelementptr i8, i8* %102, i64 0, !dbg !9883
  %103 = bitcast i8* %add.ptr99 to %struct.iommu_resv_region*, !dbg !9883
  store %struct.iommu_resv_region* %103, %struct.iommu_resv_region** %tmp98, align 8, !dbg !9884
  %104 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp98, align 8, !dbg !9883
  store %struct.iommu_resv_region* %104, %struct.iommu_resv_region** %tmp, align 8, !dbg !9789
  br label %for.cond36, !dbg !9789, !llvm.loop !9886

for.end100:                                       ; preds = %for.cond36
  %105 = load %struct.list_head*, %struct.list_head** %regions.addr, align 8, !dbg !9888
  call void @list_splice(%struct.list_head* %stack, %struct.list_head* %105) #9, !dbg !9889
  store i32 0, i32* %retval, align 4, !dbg !9890
  br label %return, !dbg !9890

return:                                           ; preds = %for.end100, %if.then
  %106 = load i32, i32* %retval, align 4, !dbg !9891
  ret i32 %106, !dbg !9891
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #1 !dbg !9892 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9893, metadata !DIExpression()), !dbg !9894
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9895, metadata !DIExpression()), !dbg !9896
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9897
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !9898
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9899
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9900
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #9, !dbg !9901
  ret void, !dbg !9902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice(%struct.list_head* %list, %struct.list_head* %head) #1 !dbg !9903 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9906, metadata !DIExpression()), !dbg !9907
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9908, metadata !DIExpression()), !dbg !9909
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9910
  %call = call i32 @list_empty(%struct.list_head* %0) #9, !dbg !9912
  %tobool = icmp ne i32 %call, 0, !dbg !9912
  br i1 %tobool, label %if.end, label %if.then, !dbg !9913

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9914
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9915
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9916
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !9917
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9917
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #9, !dbg !9918
  br label %if.end, !dbg !9918

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9919
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #1 !dbg !9920 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9923, metadata !DIExpression()), !dbg !9924
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !9925, metadata !DIExpression()), !dbg !9926
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !9927, metadata !DIExpression()), !dbg !9928
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !9929, metadata !DIExpression()), !dbg !9930
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9931
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9932
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !9932
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !9930
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !9933, metadata !DIExpression()), !dbg !9934
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9935
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !9936
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !9936
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !9934
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9937
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !9938
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !9939
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !9940
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !9941
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !9942
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !9943
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !9944
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9945
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !9946
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !9947
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !9948
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !9949
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !9950
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !9951
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !9952
  ret void, !dbg !9953
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #6

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #8 !dbg !9954 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9958, metadata !DIExpression()), !dbg !9962
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9964, metadata !DIExpression()), !dbg !9965
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9966, metadata !DIExpression()), !dbg !9967
  %0 = load i64, i64* %size.addr, align 8, !dbg !9968
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !9970
  br i1 %1, label %if.then, label %if.end447, !dbg !9971

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !9972
  %tobool = icmp ne i64 %2, 0, !dbg !9972
  br i1 %tobool, label %if.end, label %if.then1, !dbg !9975

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !9976
  br label %return, !dbg !9976

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !9977
  %cmp = icmp ult i64 %3, 4096, !dbg !9979
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9980

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9981
  br label %return, !dbg !9981

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub = sub i64 %4, 1, !dbg !9982
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !9982
  br i1 %5, label %cond.true, label %cond.false442, !dbg !9982

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub4 = sub i64 %6, 1, !dbg !9982
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !9982
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !9982

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub6 = sub i64 %8, 1, !dbg !9982
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !9982
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !9982

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !9982

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub9 = sub i64 %9, 1, !dbg !9982
  %and = and i64 %sub9, -9223372036854775808, !dbg !9982
  %tobool10 = icmp ne i64 %and, 0, !dbg !9982
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !9982

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !9982

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub13 = sub i64 %10, 1, !dbg !9982
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !9982
  %tobool15 = icmp ne i64 %and14, 0, !dbg !9982
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !9982

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !9982

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub18 = sub i64 %11, 1, !dbg !9982
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !9982
  %tobool20 = icmp ne i64 %and19, 0, !dbg !9982
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !9982

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !9982

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub23 = sub i64 %12, 1, !dbg !9982
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !9982
  %tobool25 = icmp ne i64 %and24, 0, !dbg !9982
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !9982

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !9982

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub28 = sub i64 %13, 1, !dbg !9982
  %and29 = and i64 %sub28, 576460752303423488, !dbg !9982
  %tobool30 = icmp ne i64 %and29, 0, !dbg !9982
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !9982

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !9982

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub33 = sub i64 %14, 1, !dbg !9982
  %and34 = and i64 %sub33, 288230376151711744, !dbg !9982
  %tobool35 = icmp ne i64 %and34, 0, !dbg !9982
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !9982

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !9982

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub38 = sub i64 %15, 1, !dbg !9982
  %and39 = and i64 %sub38, 144115188075855872, !dbg !9982
  %tobool40 = icmp ne i64 %and39, 0, !dbg !9982
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !9982

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !9982

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub43 = sub i64 %16, 1, !dbg !9982
  %and44 = and i64 %sub43, 72057594037927936, !dbg !9982
  %tobool45 = icmp ne i64 %and44, 0, !dbg !9982
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !9982

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !9982

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub48 = sub i64 %17, 1, !dbg !9982
  %and49 = and i64 %sub48, 36028797018963968, !dbg !9982
  %tobool50 = icmp ne i64 %and49, 0, !dbg !9982
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !9982

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !9982

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub53 = sub i64 %18, 1, !dbg !9982
  %and54 = and i64 %sub53, 18014398509481984, !dbg !9982
  %tobool55 = icmp ne i64 %and54, 0, !dbg !9982
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !9982

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !9982

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub58 = sub i64 %19, 1, !dbg !9982
  %and59 = and i64 %sub58, 9007199254740992, !dbg !9982
  %tobool60 = icmp ne i64 %and59, 0, !dbg !9982
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !9982

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !9982

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub63 = sub i64 %20, 1, !dbg !9982
  %and64 = and i64 %sub63, 4503599627370496, !dbg !9982
  %tobool65 = icmp ne i64 %and64, 0, !dbg !9982
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !9982

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !9982

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub68 = sub i64 %21, 1, !dbg !9982
  %and69 = and i64 %sub68, 2251799813685248, !dbg !9982
  %tobool70 = icmp ne i64 %and69, 0, !dbg !9982
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !9982

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !9982

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub73 = sub i64 %22, 1, !dbg !9982
  %and74 = and i64 %sub73, 1125899906842624, !dbg !9982
  %tobool75 = icmp ne i64 %and74, 0, !dbg !9982
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !9982

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !9982

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub78 = sub i64 %23, 1, !dbg !9982
  %and79 = and i64 %sub78, 562949953421312, !dbg !9982
  %tobool80 = icmp ne i64 %and79, 0, !dbg !9982
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !9982

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !9982

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub83 = sub i64 %24, 1, !dbg !9982
  %and84 = and i64 %sub83, 281474976710656, !dbg !9982
  %tobool85 = icmp ne i64 %and84, 0, !dbg !9982
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !9982

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !9982

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub88 = sub i64 %25, 1, !dbg !9982
  %and89 = and i64 %sub88, 140737488355328, !dbg !9982
  %tobool90 = icmp ne i64 %and89, 0, !dbg !9982
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !9982

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !9982

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub93 = sub i64 %26, 1, !dbg !9982
  %and94 = and i64 %sub93, 70368744177664, !dbg !9982
  %tobool95 = icmp ne i64 %and94, 0, !dbg !9982
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !9982

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !9982

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub98 = sub i64 %27, 1, !dbg !9982
  %and99 = and i64 %sub98, 35184372088832, !dbg !9982
  %tobool100 = icmp ne i64 %and99, 0, !dbg !9982
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !9982

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !9982

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub103 = sub i64 %28, 1, !dbg !9982
  %and104 = and i64 %sub103, 17592186044416, !dbg !9982
  %tobool105 = icmp ne i64 %and104, 0, !dbg !9982
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !9982

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !9982

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub108 = sub i64 %29, 1, !dbg !9982
  %and109 = and i64 %sub108, 8796093022208, !dbg !9982
  %tobool110 = icmp ne i64 %and109, 0, !dbg !9982
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !9982

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !9982

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub113 = sub i64 %30, 1, !dbg !9982
  %and114 = and i64 %sub113, 4398046511104, !dbg !9982
  %tobool115 = icmp ne i64 %and114, 0, !dbg !9982
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !9982

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !9982

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub118 = sub i64 %31, 1, !dbg !9982
  %and119 = and i64 %sub118, 2199023255552, !dbg !9982
  %tobool120 = icmp ne i64 %and119, 0, !dbg !9982
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !9982

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !9982

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub123 = sub i64 %32, 1, !dbg !9982
  %and124 = and i64 %sub123, 1099511627776, !dbg !9982
  %tobool125 = icmp ne i64 %and124, 0, !dbg !9982
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !9982

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !9982

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub128 = sub i64 %33, 1, !dbg !9982
  %and129 = and i64 %sub128, 549755813888, !dbg !9982
  %tobool130 = icmp ne i64 %and129, 0, !dbg !9982
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9982

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !9982

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub133 = sub i64 %34, 1, !dbg !9982
  %and134 = and i64 %sub133, 274877906944, !dbg !9982
  %tobool135 = icmp ne i64 %and134, 0, !dbg !9982
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !9982

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !9982

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub138 = sub i64 %35, 1, !dbg !9982
  %and139 = and i64 %sub138, 137438953472, !dbg !9982
  %tobool140 = icmp ne i64 %and139, 0, !dbg !9982
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !9982

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !9982

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub143 = sub i64 %36, 1, !dbg !9982
  %and144 = and i64 %sub143, 68719476736, !dbg !9982
  %tobool145 = icmp ne i64 %and144, 0, !dbg !9982
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !9982

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !9982

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub148 = sub i64 %37, 1, !dbg !9982
  %and149 = and i64 %sub148, 34359738368, !dbg !9982
  %tobool150 = icmp ne i64 %and149, 0, !dbg !9982
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !9982

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !9982

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub153 = sub i64 %38, 1, !dbg !9982
  %and154 = and i64 %sub153, 17179869184, !dbg !9982
  %tobool155 = icmp ne i64 %and154, 0, !dbg !9982
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !9982

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !9982

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub158 = sub i64 %39, 1, !dbg !9982
  %and159 = and i64 %sub158, 8589934592, !dbg !9982
  %tobool160 = icmp ne i64 %and159, 0, !dbg !9982
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !9982

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !9982

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub163 = sub i64 %40, 1, !dbg !9982
  %and164 = and i64 %sub163, 4294967296, !dbg !9982
  %tobool165 = icmp ne i64 %and164, 0, !dbg !9982
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !9982

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !9982

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub168 = sub i64 %41, 1, !dbg !9982
  %and169 = and i64 %sub168, 2147483648, !dbg !9982
  %tobool170 = icmp ne i64 %and169, 0, !dbg !9982
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !9982

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !9982

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub173 = sub i64 %42, 1, !dbg !9982
  %and174 = and i64 %sub173, 1073741824, !dbg !9982
  %tobool175 = icmp ne i64 %and174, 0, !dbg !9982
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !9982

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !9982

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub178 = sub i64 %43, 1, !dbg !9982
  %and179 = and i64 %sub178, 536870912, !dbg !9982
  %tobool180 = icmp ne i64 %and179, 0, !dbg !9982
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !9982

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !9982

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub183 = sub i64 %44, 1, !dbg !9982
  %and184 = and i64 %sub183, 268435456, !dbg !9982
  %tobool185 = icmp ne i64 %and184, 0, !dbg !9982
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !9982

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !9982

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub188 = sub i64 %45, 1, !dbg !9982
  %and189 = and i64 %sub188, 134217728, !dbg !9982
  %tobool190 = icmp ne i64 %and189, 0, !dbg !9982
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !9982

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !9982

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub193 = sub i64 %46, 1, !dbg !9982
  %and194 = and i64 %sub193, 67108864, !dbg !9982
  %tobool195 = icmp ne i64 %and194, 0, !dbg !9982
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !9982

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !9982

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub198 = sub i64 %47, 1, !dbg !9982
  %and199 = and i64 %sub198, 33554432, !dbg !9982
  %tobool200 = icmp ne i64 %and199, 0, !dbg !9982
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !9982

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !9982

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub203 = sub i64 %48, 1, !dbg !9982
  %and204 = and i64 %sub203, 16777216, !dbg !9982
  %tobool205 = icmp ne i64 %and204, 0, !dbg !9982
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !9982

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !9982

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub208 = sub i64 %49, 1, !dbg !9982
  %and209 = and i64 %sub208, 8388608, !dbg !9982
  %tobool210 = icmp ne i64 %and209, 0, !dbg !9982
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !9982

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !9982

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub213 = sub i64 %50, 1, !dbg !9982
  %and214 = and i64 %sub213, 4194304, !dbg !9982
  %tobool215 = icmp ne i64 %and214, 0, !dbg !9982
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !9982

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !9982

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub218 = sub i64 %51, 1, !dbg !9982
  %and219 = and i64 %sub218, 2097152, !dbg !9982
  %tobool220 = icmp ne i64 %and219, 0, !dbg !9982
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !9982

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !9982

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub223 = sub i64 %52, 1, !dbg !9982
  %and224 = and i64 %sub223, 1048576, !dbg !9982
  %tobool225 = icmp ne i64 %and224, 0, !dbg !9982
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !9982

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !9982

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub228 = sub i64 %53, 1, !dbg !9982
  %and229 = and i64 %sub228, 524288, !dbg !9982
  %tobool230 = icmp ne i64 %and229, 0, !dbg !9982
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !9982

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !9982

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub233 = sub i64 %54, 1, !dbg !9982
  %and234 = and i64 %sub233, 262144, !dbg !9982
  %tobool235 = icmp ne i64 %and234, 0, !dbg !9982
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !9982

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !9982

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub238 = sub i64 %55, 1, !dbg !9982
  %and239 = and i64 %sub238, 131072, !dbg !9982
  %tobool240 = icmp ne i64 %and239, 0, !dbg !9982
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !9982

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !9982

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub243 = sub i64 %56, 1, !dbg !9982
  %and244 = and i64 %sub243, 65536, !dbg !9982
  %tobool245 = icmp ne i64 %and244, 0, !dbg !9982
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !9982

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !9982

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub248 = sub i64 %57, 1, !dbg !9982
  %and249 = and i64 %sub248, 32768, !dbg !9982
  %tobool250 = icmp ne i64 %and249, 0, !dbg !9982
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !9982

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !9982

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub253 = sub i64 %58, 1, !dbg !9982
  %and254 = and i64 %sub253, 16384, !dbg !9982
  %tobool255 = icmp ne i64 %and254, 0, !dbg !9982
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !9982

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !9982

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub258 = sub i64 %59, 1, !dbg !9982
  %and259 = and i64 %sub258, 8192, !dbg !9982
  %tobool260 = icmp ne i64 %and259, 0, !dbg !9982
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !9982

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !9982

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub263 = sub i64 %60, 1, !dbg !9982
  %and264 = and i64 %sub263, 4096, !dbg !9982
  %tobool265 = icmp ne i64 %and264, 0, !dbg !9982
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !9982

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !9982

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub268 = sub i64 %61, 1, !dbg !9982
  %and269 = and i64 %sub268, 2048, !dbg !9982
  %tobool270 = icmp ne i64 %and269, 0, !dbg !9982
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !9982

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !9982

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub273 = sub i64 %62, 1, !dbg !9982
  %and274 = and i64 %sub273, 1024, !dbg !9982
  %tobool275 = icmp ne i64 %and274, 0, !dbg !9982
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !9982

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !9982

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub278 = sub i64 %63, 1, !dbg !9982
  %and279 = and i64 %sub278, 512, !dbg !9982
  %tobool280 = icmp ne i64 %and279, 0, !dbg !9982
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !9982

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !9982

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub283 = sub i64 %64, 1, !dbg !9982
  %and284 = and i64 %sub283, 256, !dbg !9982
  %tobool285 = icmp ne i64 %and284, 0, !dbg !9982
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !9982

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !9982

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub288 = sub i64 %65, 1, !dbg !9982
  %and289 = and i64 %sub288, 128, !dbg !9982
  %tobool290 = icmp ne i64 %and289, 0, !dbg !9982
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !9982

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !9982

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub293 = sub i64 %66, 1, !dbg !9982
  %and294 = and i64 %sub293, 64, !dbg !9982
  %tobool295 = icmp ne i64 %and294, 0, !dbg !9982
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !9982

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !9982

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub298 = sub i64 %67, 1, !dbg !9982
  %and299 = and i64 %sub298, 32, !dbg !9982
  %tobool300 = icmp ne i64 %and299, 0, !dbg !9982
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !9982

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !9982

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub303 = sub i64 %68, 1, !dbg !9982
  %and304 = and i64 %sub303, 16, !dbg !9982
  %tobool305 = icmp ne i64 %and304, 0, !dbg !9982
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !9982

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !9982

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub308 = sub i64 %69, 1, !dbg !9982
  %and309 = and i64 %sub308, 8, !dbg !9982
  %tobool310 = icmp ne i64 %and309, 0, !dbg !9982
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !9982

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !9982

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub313 = sub i64 %70, 1, !dbg !9982
  %and314 = and i64 %sub313, 4, !dbg !9982
  %tobool315 = icmp ne i64 %and314, 0, !dbg !9982
  %71 = zext i1 %tobool315 to i64, !dbg !9982
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !9982
  br label %cond.end, !dbg !9982

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !9982
  br label %cond.end317, !dbg !9982

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !9982
  br label %cond.end319, !dbg !9982

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !9982
  br label %cond.end321, !dbg !9982

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !9982
  br label %cond.end323, !dbg !9982

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !9982
  br label %cond.end325, !dbg !9982

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !9982
  br label %cond.end327, !dbg !9982

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !9982
  br label %cond.end329, !dbg !9982

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !9982
  br label %cond.end331, !dbg !9982

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !9982
  br label %cond.end333, !dbg !9982

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !9982
  br label %cond.end335, !dbg !9982

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !9982
  br label %cond.end337, !dbg !9982

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !9982
  br label %cond.end339, !dbg !9982

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !9982
  br label %cond.end341, !dbg !9982

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !9982
  br label %cond.end343, !dbg !9982

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !9982
  br label %cond.end345, !dbg !9982

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !9982
  br label %cond.end347, !dbg !9982

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !9982
  br label %cond.end349, !dbg !9982

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !9982
  br label %cond.end351, !dbg !9982

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !9982
  br label %cond.end353, !dbg !9982

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !9982
  br label %cond.end355, !dbg !9982

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !9982
  br label %cond.end357, !dbg !9982

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !9982
  br label %cond.end359, !dbg !9982

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !9982
  br label %cond.end361, !dbg !9982

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !9982
  br label %cond.end363, !dbg !9982

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !9982
  br label %cond.end365, !dbg !9982

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !9982
  br label %cond.end367, !dbg !9982

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !9982
  br label %cond.end369, !dbg !9982

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !9982
  br label %cond.end371, !dbg !9982

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !9982
  br label %cond.end373, !dbg !9982

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !9982
  br label %cond.end375, !dbg !9982

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !9982
  br label %cond.end377, !dbg !9982

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !9982
  br label %cond.end379, !dbg !9982

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !9982
  br label %cond.end381, !dbg !9982

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !9982
  br label %cond.end383, !dbg !9982

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !9982
  br label %cond.end385, !dbg !9982

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !9982
  br label %cond.end387, !dbg !9982

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !9982
  br label %cond.end389, !dbg !9982

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !9982
  br label %cond.end391, !dbg !9982

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !9982
  br label %cond.end393, !dbg !9982

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !9982
  br label %cond.end395, !dbg !9982

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !9982
  br label %cond.end397, !dbg !9982

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !9982
  br label %cond.end399, !dbg !9982

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !9982
  br label %cond.end401, !dbg !9982

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !9982
  br label %cond.end403, !dbg !9982

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !9982
  br label %cond.end405, !dbg !9982

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !9982
  br label %cond.end407, !dbg !9982

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !9982
  br label %cond.end409, !dbg !9982

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !9982
  br label %cond.end411, !dbg !9982

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !9982
  br label %cond.end413, !dbg !9982

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !9982
  br label %cond.end415, !dbg !9982

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !9982
  br label %cond.end417, !dbg !9982

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !9982
  br label %cond.end419, !dbg !9982

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !9982
  br label %cond.end421, !dbg !9982

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !9982
  br label %cond.end423, !dbg !9982

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !9982
  br label %cond.end425, !dbg !9982

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !9982
  br label %cond.end427, !dbg !9982

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !9982
  br label %cond.end429, !dbg !9982

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !9982
  br label %cond.end431, !dbg !9982

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !9982
  br label %cond.end433, !dbg !9982

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !9982
  br label %cond.end435, !dbg !9982

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !9982
  br label %cond.end437, !dbg !9982

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !9982
  br label %cond.end440, !dbg !9982

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !9982

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !9982
  br label %cond.end444, !dbg !9982

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !9982
  %sub443 = sub i64 %72, 1, !dbg !9982
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !9982
  br label %cond.end444, !dbg !9982

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !9982
  %sub446 = sub i32 %cond445, 12, !dbg !9983
  %add = add i32 %sub446, 1, !dbg !9984
  store i32 %add, i32* %retval, align 4, !dbg !9985
  br label %return, !dbg !9985

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !9986
  %dec = add i64 %73, -1, !dbg !9986
  store i64 %dec, i64* %size.addr, align 8, !dbg !9986
  %74 = load i64, i64* %size.addr, align 8, !dbg !9987
  %shr = lshr i64 %74, 12, !dbg !9987
  store i64 %shr, i64* %size.addr, align 8, !dbg !9987
  %75 = load i64, i64* %size.addr, align 8, !dbg !9988
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !9965
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !9989
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !9990
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #12, !dbg !9989, !srcloc !9991
  store i32 %78, i32* %bitpos.i, align 4, !dbg !9989
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !9992
  %add.i = add i32 %79, 1, !dbg !9993
  store i32 %add.i, i32* %retval, align 4, !dbg !9994
  br label %return, !dbg !9994

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !9995
  ret i32 %80, !dbg !9995
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #8 !dbg !9996 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !9958, metadata !DIExpression()), !dbg !10000
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !9964, metadata !DIExpression()), !dbg !10002
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  %0 = load i64, i64* %n.addr, align 8, !dbg !10005
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10002
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10006
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10007
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #12, !dbg !10006, !srcloc !9991
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10006
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10008
  %add.i = add i32 %4, 1, !dbg !10009
  %sub = sub i32 %add.i, 1, !dbg !10010
  ret i32 %sub, !dbg !10011
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #1 !dbg !10012 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10016, metadata !DIExpression()), !dbg !10017
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10018, metadata !DIExpression()), !dbg !10019
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10020, metadata !DIExpression()), !dbg !10021
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10022, metadata !DIExpression()), !dbg !10023
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10024
  ret i8* %0, !dbg !10025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_group_release(%struct.kobject* %kobj) #1 !dbg !10026 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_group*, align 8
  %tmp1 = alloca i32, align 4
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10027, metadata !DIExpression()), !dbg !10028
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !10029, metadata !DIExpression()), !dbg !10030
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10031, metadata !DIExpression()), !dbg !10033
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10033
  %1 = bitcast %struct.kobject* %0 to i8*, !dbg !10033
  store i8* %1, i8** %__mptr, align 8, !dbg !10033
  br label %do.body, !dbg !10033

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10034

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10033
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10033
  %3 = bitcast i8* %add.ptr to %struct.iommu_group*, !dbg !10033
  store %struct.iommu_group* %3, %struct.iommu_group** %tmp, align 8, !dbg !10034
  %4 = load %struct.iommu_group*, %struct.iommu_group** %tmp, align 8, !dbg !10033
  store %struct.iommu_group* %4, %struct.iommu_group** %group, align 8, !dbg !10030
  store i32 0, i32* %tmp1, align 4, !dbg !10036
  %5 = load i32, i32* %tmp1, align 4, !dbg !10039
  %6 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10040
  %iommu_data_release = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %6, i32 0, i32 6, !dbg !10042
  %7 = load void (i8*)*, void (i8*)** %iommu_data_release, align 8, !dbg !10042
  %tobool = icmp ne void (i8*)* %7, null, !dbg !10040
  br i1 %tobool, label %if.then, label %if.end, !dbg !10043

if.then:                                          ; preds = %do.end
  %8 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10044
  %iommu_data_release2 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %8, i32 0, i32 6, !dbg !10045
  %9 = load void (i8*)*, void (i8*)** %iommu_data_release2, align 8, !dbg !10045
  %10 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10046
  %iommu_data = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %10, i32 0, i32 5, !dbg !10047
  %11 = load i8*, i8** %iommu_data, align 8, !dbg !10047
  call void %9(i8* %11) #9, !dbg !10044
  br label %if.end, !dbg !10044

if.end:                                           ; preds = %if.then, %do.end
  %12 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10048
  %id = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %12, i32 0, i32 8, !dbg !10048
  %13 = load i32, i32* %id, align 8, !dbg !10048
  call void @ida_free(%struct.ida* @iommu_group_ida, i32 %13) #9, !dbg !10048
  %14 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10049
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %14, i32 0, i32 9, !dbg !10051
  %15 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !10051
  %tobool3 = icmp ne %struct.iommu_domain* %15, null, !dbg !10049
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !10052

if.then4:                                         ; preds = %if.end
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10053
  %default_domain5 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %16, i32 0, i32 9, !dbg !10054
  %17 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain5, align 8, !dbg !10054
  call void @iommu_domain_free(%struct.iommu_domain* %17) #9, !dbg !10055
  br label %if.end6, !dbg !10055

if.end6:                                          ; preds = %if.then4, %if.end
  %18 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10056
  %name = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %18, i32 0, i32 7, !dbg !10057
  %19 = load i8*, i8** %name, align 8, !dbg !10057
  call void @kfree(i8* %19) #9, !dbg !10058
  %20 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10059
  %21 = bitcast %struct.iommu_group* %20 to i8*, !dbg !10059
  call void @kfree(i8* %21) #9, !dbg !10060
  ret void, !dbg !10061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iommu_group_attr_show(%struct.kobject* %kobj, %struct.attribute* %__attr, i8* %buf) #1 !dbg !10062 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %__attr.addr = alloca %struct.attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %attr = alloca %struct.iommu_group_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_group_attribute*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.iommu_group*, align 8
  %ret = alloca i64, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  store %struct.attribute* %__attr, %struct.attribute** %__attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %__attr.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10067, metadata !DIExpression()), !dbg !10068
  call void @llvm.dbg.declare(metadata %struct.iommu_group_attribute** %attr, metadata !10069, metadata !DIExpression()), !dbg !10070
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10071, metadata !DIExpression()), !dbg !10073
  %0 = load %struct.attribute*, %struct.attribute** %__attr.addr, align 8, !dbg !10073
  %1 = bitcast %struct.attribute* %0 to i8*, !dbg !10073
  store i8* %1, i8** %__mptr, align 8, !dbg !10073
  br label %do.body, !dbg !10073

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10074

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10073
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10073
  %3 = bitcast i8* %add.ptr to %struct.iommu_group_attribute*, !dbg !10073
  store %struct.iommu_group_attribute* %3, %struct.iommu_group_attribute** %tmp, align 8, !dbg !10074
  %4 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %tmp, align 8, !dbg !10073
  store %struct.iommu_group_attribute* %4, %struct.iommu_group_attribute** %attr, align 8, !dbg !10070
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !10076, metadata !DIExpression()), !dbg !10077
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !10078, metadata !DIExpression()), !dbg !10080
  %5 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10080
  %6 = bitcast %struct.kobject* %5 to i8*, !dbg !10080
  store i8* %6, i8** %__mptr1, align 8, !dbg !10080
  br label %do.body2, !dbg !10080

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10081

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !10080
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !10080
  %8 = bitcast i8* %add.ptr5 to %struct.iommu_group*, !dbg !10080
  store %struct.iommu_group* %8, %struct.iommu_group** %tmp4, align 8, !dbg !10081
  %9 = load %struct.iommu_group*, %struct.iommu_group** %tmp4, align 8, !dbg !10080
  store %struct.iommu_group* %9, %struct.iommu_group** %group, align 8, !dbg !10077
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10083, metadata !DIExpression()), !dbg !10084
  store i64 -5, i64* %ret, align 8, !dbg !10084
  %10 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %attr, align 8, !dbg !10085
  %show = getelementptr inbounds %struct.iommu_group_attribute, %struct.iommu_group_attribute* %10, i32 0, i32 1, !dbg !10087
  %11 = load i64 (%struct.iommu_group*, i8*)*, i64 (%struct.iommu_group*, i8*)** %show, align 8, !dbg !10087
  %tobool = icmp ne i64 (%struct.iommu_group*, i8*)* %11, null, !dbg !10085
  br i1 %tobool, label %if.then, label %if.end, !dbg !10088

if.then:                                          ; preds = %do.end3
  %12 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %attr, align 8, !dbg !10089
  %show6 = getelementptr inbounds %struct.iommu_group_attribute, %struct.iommu_group_attribute* %12, i32 0, i32 1, !dbg !10090
  %13 = load i64 (%struct.iommu_group*, i8*)*, i64 (%struct.iommu_group*, i8*)** %show6, align 8, !dbg !10090
  %14 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10091
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !10092
  %call = call i64 %13(%struct.iommu_group* %14, i8* %15) #9, !dbg !10089
  store i64 %call, i64* %ret, align 8, !dbg !10093
  br label %if.end, !dbg !10094

if.end:                                           ; preds = %if.then, %do.end3
  %16 = load i64, i64* %ret, align 8, !dbg !10095
  ret i64 %16, !dbg !10096
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iommu_group_attr_store(%struct.kobject* %kobj, %struct.attribute* %__attr, i8* %buf, i64 %count) #1 !dbg !10097 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %__attr.addr = alloca %struct.attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %attr = alloca %struct.iommu_group_attribute*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_group_attribute*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp4 = alloca %struct.iommu_group*, align 8
  %ret = alloca i64, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10098, metadata !DIExpression()), !dbg !10099
  store %struct.attribute* %__attr, %struct.attribute** %__attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %__attr.addr, metadata !10100, metadata !DIExpression()), !dbg !10101
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10102, metadata !DIExpression()), !dbg !10103
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10104, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.declare(metadata %struct.iommu_group_attribute** %attr, metadata !10106, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10108, metadata !DIExpression()), !dbg !10110
  %0 = load %struct.attribute*, %struct.attribute** %__attr.addr, align 8, !dbg !10110
  %1 = bitcast %struct.attribute* %0 to i8*, !dbg !10110
  store i8* %1, i8** %__mptr, align 8, !dbg !10110
  br label %do.body, !dbg !10110

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10111

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10110
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !10110
  %3 = bitcast i8* %add.ptr to %struct.iommu_group_attribute*, !dbg !10110
  store %struct.iommu_group_attribute* %3, %struct.iommu_group_attribute** %tmp, align 8, !dbg !10111
  %4 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %tmp, align 8, !dbg !10110
  store %struct.iommu_group_attribute* %4, %struct.iommu_group_attribute** %attr, align 8, !dbg !10107
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !10113, metadata !DIExpression()), !dbg !10114
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !10115, metadata !DIExpression()), !dbg !10117
  %5 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10117
  %6 = bitcast %struct.kobject* %5 to i8*, !dbg !10117
  store i8* %6, i8** %__mptr1, align 8, !dbg !10117
  br label %do.body2, !dbg !10117

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !10118

do.end3:                                          ; preds = %do.body2
  %7 = load i8*, i8** %__mptr1, align 8, !dbg !10117
  %add.ptr5 = getelementptr i8, i8* %7, i64 0, !dbg !10117
  %8 = bitcast i8* %add.ptr5 to %struct.iommu_group*, !dbg !10117
  store %struct.iommu_group* %8, %struct.iommu_group** %tmp4, align 8, !dbg !10118
  %9 = load %struct.iommu_group*, %struct.iommu_group** %tmp4, align 8, !dbg !10117
  store %struct.iommu_group* %9, %struct.iommu_group** %group, align 8, !dbg !10114
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10120, metadata !DIExpression()), !dbg !10121
  store i64 -5, i64* %ret, align 8, !dbg !10121
  %10 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %attr, align 8, !dbg !10122
  %store = getelementptr inbounds %struct.iommu_group_attribute, %struct.iommu_group_attribute* %10, i32 0, i32 2, !dbg !10124
  %11 = load i64 (%struct.iommu_group*, i8*, i64)*, i64 (%struct.iommu_group*, i8*, i64)** %store, align 8, !dbg !10124
  %tobool = icmp ne i64 (%struct.iommu_group*, i8*, i64)* %11, null, !dbg !10122
  br i1 %tobool, label %if.then, label %if.end, !dbg !10125

if.then:                                          ; preds = %do.end3
  %12 = load %struct.iommu_group_attribute*, %struct.iommu_group_attribute** %attr, align 8, !dbg !10126
  %store6 = getelementptr inbounds %struct.iommu_group_attribute, %struct.iommu_group_attribute* %12, i32 0, i32 2, !dbg !10127
  %13 = load i64 (%struct.iommu_group*, i8*, i64)*, i64 (%struct.iommu_group*, i8*, i64)** %store6, align 8, !dbg !10127
  %14 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10128
  %15 = load i8*, i8** %buf.addr, align 8, !dbg !10129
  %16 = load i64, i64* %count.addr, align 8, !dbg !10130
  %call = call i64 %13(%struct.iommu_group* %14, i8* %15, i64 %16) #9, !dbg !10126
  store i64 %call, i64* %ret, align 8, !dbg !10131
  br label %if.end, !dbg !10132

if.end:                                           ; preds = %if.then, %do.end3
  %17 = load i64, i64* %ret, align 8, !dbg !10133
  ret i64 %17, !dbg !10134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @sysfs_create_file(%struct.kobject* %kobj, %struct.attribute* %attr) #1 !dbg !10135 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10140, metadata !DIExpression()), !dbg !10141
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !10142, metadata !DIExpression()), !dbg !10143
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10144
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !10145
  %call = call i32 @sysfs_create_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #9, !dbg !10146
  ret i32 %call, !dbg !10147
}

; Function Attrs: noredzone
declare dso_local i32 @sysfs_create_file_ns(%struct.kobject*, %struct.attribute*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iommu_group_show_resv_regions(%struct.iommu_group* %group, i8* %buf) #1 !dbg !10148 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %buf.addr = alloca i8*, align 8
  %region = alloca %struct.iommu_resv_region*, align 8
  %next = alloca %struct.iommu_resv_region*, align 8
  %group_resv_regions = alloca %struct.list_head, align 8
  %str = alloca i8*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.iommu_resv_region*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.iommu_resv_region*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.iommu_resv_region*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !10149, metadata !DIExpression()), !dbg !10150
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10151, metadata !DIExpression()), !dbg !10152
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %region, metadata !10153, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.declare(metadata %struct.iommu_resv_region** %next, metadata !10155, metadata !DIExpression()), !dbg !10156
  call void @llvm.dbg.declare(metadata %struct.list_head* %group_resv_regions, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.declare(metadata i8** %str, metadata !10159, metadata !DIExpression()), !dbg !10160
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10161
  store i8* %0, i8** %str, align 8, !dbg !10160
  call void @INIT_LIST_HEAD(%struct.list_head* %group_resv_regions) #9, !dbg !10162
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10163
  %call = call i32 @iommu_get_group_resv_regions(%struct.iommu_group* %1, %struct.list_head* %group_resv_regions) #9, !dbg !10164
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10165, metadata !DIExpression()), !dbg !10168
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %group_resv_regions, i32 0, i32 0, !dbg !10168
  %2 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !10168
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !10168
  store i8* %3, i8** %__mptr, align 8, !dbg !10168
  br label %do.body, !dbg !10168

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10169

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !10168
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !10168
  %5 = bitcast i8* %add.ptr to %struct.iommu_resv_region*, !dbg !10168
  store %struct.iommu_resv_region* %5, %struct.iommu_resv_region** %tmp, align 8, !dbg !10169
  %6 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp, align 8, !dbg !10168
  store %struct.iommu_resv_region* %6, %struct.iommu_resv_region** %region, align 8, !dbg !10171
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !10172, metadata !DIExpression()), !dbg !10174
  %7 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10174
  %list = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %7, i32 0, i32 0, !dbg !10174
  %next3 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !10174
  %8 = load %struct.list_head*, %struct.list_head** %next3, align 8, !dbg !10174
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !10174
  store i8* %9, i8** %__mptr2, align 8, !dbg !10174
  br label %do.body4, !dbg !10174

do.body4:                                         ; preds = %do.end
  br label %do.end5, !dbg !10175

do.end5:                                          ; preds = %do.body4
  %10 = load i8*, i8** %__mptr2, align 8, !dbg !10174
  %add.ptr7 = getelementptr i8, i8* %10, i64 0, !dbg !10174
  %11 = bitcast i8* %add.ptr7 to %struct.iommu_resv_region*, !dbg !10174
  store %struct.iommu_resv_region* %11, %struct.iommu_resv_region** %tmp6, align 8, !dbg !10175
  %12 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp6, align 8, !dbg !10174
  store %struct.iommu_resv_region* %12, %struct.iommu_resv_region** %next, align 8, !dbg !10171
  br label %for.cond, !dbg !10171

for.cond:                                         ; preds = %do.end16, %do.end5
  %13 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10177
  %list8 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %13, i32 0, i32 0, !dbg !10177
  %cmp = icmp eq %struct.list_head* %list8, %group_resv_regions, !dbg !10177
  %lnot = xor i1 %cmp, true, !dbg !10177
  br i1 %lnot, label %for.body, label %for.end, !dbg !10171

for.body:                                         ; preds = %for.cond
  %14 = load i8*, i8** %str, align 8, !dbg !10179
  %15 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10181
  %start = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %15, i32 0, i32 1, !dbg !10182
  %16 = load i64, i64* %start, align 8, !dbg !10182
  %17 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10183
  %start9 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %17, i32 0, i32 1, !dbg !10184
  %18 = load i64, i64* %start9, align 8, !dbg !10184
  %19 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10185
  %length = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %19, i32 0, i32 2, !dbg !10186
  %20 = load i64, i64* %length, align 8, !dbg !10186
  %add = add i64 %18, %20, !dbg !10187
  %sub = sub i64 %add, 1, !dbg !10188
  %21 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10189
  %type = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %21, i32 0, i32 4, !dbg !10190
  %22 = load i32, i32* %type, align 4, !dbg !10190
  %idxprom = zext i32 %22 to i64, !dbg !10191
  %arrayidx = getelementptr [5 x i8*], [5 x i8*]* @iommu_group_resv_type_string, i64 0, i64 %idxprom, !dbg !10191
  %23 = load i8*, i8** %arrayidx, align 8, !dbg !10191
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0), i64 %16, i64 %sub, i8* %23) #9, !dbg !10192
  %24 = load i8*, i8** %str, align 8, !dbg !10193
  %idx.ext = sext i32 %call10 to i64, !dbg !10193
  %add.ptr11 = getelementptr i8, i8* %24, i64 %idx.ext, !dbg !10193
  store i8* %add.ptr11, i8** %str, align 8, !dbg !10193
  %25 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %region, align 8, !dbg !10194
  %26 = bitcast %struct.iommu_resv_region* %25 to i8*, !dbg !10194
  call void @kfree(i8* %26) #9, !dbg !10195
  br label %for.inc, !dbg !10196

for.inc:                                          ; preds = %for.body
  %27 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %next, align 8, !dbg !10177
  store %struct.iommu_resv_region* %27, %struct.iommu_resv_region** %region, align 8, !dbg !10177
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !10197, metadata !DIExpression()), !dbg !10199
  %28 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %next, align 8, !dbg !10199
  %list13 = getelementptr inbounds %struct.iommu_resv_region, %struct.iommu_resv_region* %28, i32 0, i32 0, !dbg !10199
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13, i32 0, i32 0, !dbg !10199
  %29 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !10199
  %30 = bitcast %struct.list_head* %29 to i8*, !dbg !10199
  store i8* %30, i8** %__mptr12, align 8, !dbg !10199
  br label %do.body15, !dbg !10199

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !10200

do.end16:                                         ; preds = %do.body15
  %31 = load i8*, i8** %__mptr12, align 8, !dbg !10199
  %add.ptr18 = getelementptr i8, i8* %31, i64 0, !dbg !10199
  %32 = bitcast i8* %add.ptr18 to %struct.iommu_resv_region*, !dbg !10199
  store %struct.iommu_resv_region* %32, %struct.iommu_resv_region** %tmp17, align 8, !dbg !10200
  %33 = load %struct.iommu_resv_region*, %struct.iommu_resv_region** %tmp17, align 8, !dbg !10199
  store %struct.iommu_resv_region* %33, %struct.iommu_resv_region** %next, align 8, !dbg !10177
  br label %for.cond, !dbg !10177, !llvm.loop !10202

for.end:                                          ; preds = %for.cond
  %34 = load i8*, i8** %str, align 8, !dbg !10204
  %35 = load i8*, i8** %buf.addr, align 8, !dbg !10205
  %sub.ptr.lhs.cast = ptrtoint i8* %34 to i64, !dbg !10206
  %sub.ptr.rhs.cast = ptrtoint i8* %35 to i64, !dbg !10206
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10206
  ret i64 %sub.ptr.sub, !dbg !10207
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iommu_group_show_type(%struct.iommu_group* %group, i8* %buf) #1 !dbg !10208 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %buf.addr = alloca i8*, align 8
  %type = alloca i8*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !10209, metadata !DIExpression()), !dbg !10210
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10211, metadata !DIExpression()), !dbg !10212
  call void @llvm.dbg.declare(metadata i8** %type, metadata !10213, metadata !DIExpression()), !dbg !10214
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.31, i64 0, i64 0), i8** %type, align 8, !dbg !10214
  %0 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10215
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %0, i32 0, i32 9, !dbg !10217
  %1 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain, align 8, !dbg !10217
  %tobool = icmp ne %struct.iommu_domain* %1, null, !dbg !10215
  br i1 %tobool, label %if.then, label %if.end, !dbg !10218

if.then:                                          ; preds = %entry
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10219
  %default_domain1 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %2, i32 0, i32 9, !dbg !10221
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %default_domain1, align 8, !dbg !10221
  %type2 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 0, !dbg !10222
  %4 = load i32, i32* %type2, align 8, !dbg !10222
  switch i32 %4, label %sw.epilog [
    i32 0, label %sw.bb
    i32 4, label %sw.bb3
    i32 1, label %sw.bb4
    i32 3, label %sw.bb5
  ], !dbg !10223

sw.bb:                                            ; preds = %if.then
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.32, i64 0, i64 0), i8** %type, align 8, !dbg !10224
  br label %sw.epilog, !dbg !10226

sw.bb3:                                           ; preds = %if.then
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8** %type, align 8, !dbg !10227
  br label %sw.epilog, !dbg !10228

sw.bb4:                                           ; preds = %if.then
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8** %type, align 8, !dbg !10229
  br label %sw.epilog, !dbg !10230

sw.bb5:                                           ; preds = %if.then
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.35, i64 0, i64 0), i8** %type, align 8, !dbg !10231
  br label %sw.epilog, !dbg !10232

sw.epilog:                                        ; preds = %if.then, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb
  br label %if.end, !dbg !10233

if.end:                                           ; preds = %sw.epilog, %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !10234
  %6 = load i8*, i8** %type, align 8, !dbg !10235
  %call = call i8* @strcpy(i8* %5, i8* %6) #9, !dbg !10236
  %7 = load i8*, i8** %type, align 8, !dbg !10237
  %call6 = call i64 @strlen(i8* %7) #9, !dbg !10238
  ret i64 %call6, !dbg !10239
}

; Function Attrs: noredzone
declare dso_local i8* @strcpy(i8*, i8*) #3

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sysfs_remove_file(%struct.kobject* %kobj, %struct.attribute* %attr) #1 !dbg !10240 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  %attr.addr = alloca %struct.attribute*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  store %struct.attribute* %attr, %struct.attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attribute** %attr.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !10247
  %1 = load %struct.attribute*, %struct.attribute** %attr.addr, align 8, !dbg !10248
  call void @sysfs_remove_file_ns(%struct.kobject* %0, %struct.attribute* %1, i8* null) #9, !dbg !10249
  ret void, !dbg !10250
}

; Function Attrs: noredzone
declare dso_local void @sysfs_remove_file_ns(%struct.kobject*, %struct.attribute*, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iommu_group_show_name(%struct.iommu_group* %group, i8* %buf) #1 !dbg !10251 {
entry:
  %group.addr = alloca %struct.iommu_group*, align 8
  %buf.addr = alloca i8*, align 8
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !10252, metadata !DIExpression()), !dbg !10253
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !10254, metadata !DIExpression()), !dbg !10255
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !10256
  %1 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10257
  %name = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %1, i32 0, i32 7, !dbg !10258
  %2 = load i8*, i8** %name, align 8, !dbg !10258
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8* %2) #9, !dbg !10259
  %conv = sext i32 %call to i64, !dbg !10259
  ret i64 %conv, !dbg !10260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_flush_iotlb_all(%struct.iommu_domain* %domain) #1 !dbg !10261 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !10262, metadata !DIExpression()), !dbg !10263
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10264
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %0, i32 0, i32 1, !dbg !10266
  %1 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10266
  %flush_iotlb_all = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %1, i32 0, i32 7, !dbg !10267
  %2 = load void (%struct.iommu_domain*)*, void (%struct.iommu_domain*)** %flush_iotlb_all, align 8, !dbg !10267
  %tobool = icmp ne void (%struct.iommu_domain*)* %2, null, !dbg !10264
  br i1 %tobool, label %if.then, label %if.end, !dbg !10268

if.then:                                          ; preds = %entry
  %3 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10269
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %3, i32 0, i32 1, !dbg !10270
  %4 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !10270
  %flush_iotlb_all2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %4, i32 0, i32 7, !dbg !10271
  %5 = load void (%struct.iommu_domain*)*, void (%struct.iommu_domain*)** %flush_iotlb_all2, align 8, !dbg !10271
  %6 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10272
  call void %5(%struct.iommu_domain* %6) #9, !dbg !10269
  br label %if.end, !dbg !10269

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10273
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #1 !dbg !10274 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !10280, metadata !DIExpression()), !dbg !10282
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !10284, metadata !DIExpression()), !dbg !10285
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !10286, metadata !DIExpression()), !dbg !10288
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10289, metadata !DIExpression()), !dbg !10297
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10299, metadata !DIExpression()), !dbg !10300
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !10301, metadata !DIExpression()), !dbg !10302
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !10303, metadata !DIExpression()), !dbg !10304
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !10305
  %1 = load i64, i64* %nr.addr, align 8, !dbg !10306
  %div = sdiv i64 %1, 64, !dbg !10306
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !10307
  %2 = bitcast i64* %add.ptr to i8*, !dbg !10305
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !10308
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10309
  %conv.i = trunc i64 %4 to i32, !dbg !10309
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #14, !dbg !10310
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !10311
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !10311
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #14, !dbg !10311
  %7 = load i64, i64* %nr.addr, align 8, !dbg !10312
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !10313
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !10288
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !10288
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #11, !dbg !10288, !srcloc !10314
  store i8 %11, i8* %c.i, align 1, !dbg !10288
  %12 = load i8, i8* %c.i, align 1, !dbg !10288
  %tobool.i = trunc i8 %12 to i1, !dbg !10288
  %frombool.i = zext i1 %tobool.i to i8, !dbg !10288
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !10288
  %13 = load i8, i8* %tmp.i, align 1, !dbg !10288
  %tobool1.i = trunc i8 %13 to i1, !dbg !10288
  ret i1 %tobool1.i, !dbg !10315
}

; Function Attrs: noredzone
declare dso_local %struct.pci_dev* @pci_get_device(i32, i32, %struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_devs_are_dma_aliases(%struct.pci_dev*, %struct.pci_dev*) #3

; Function Attrs: noredzone
declare dso_local void @pci_dev_put(%struct.pci_dev*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #1 !dbg !10316 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !10320, metadata !DIExpression()), !dbg !10321
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10322, metadata !DIExpression()), !dbg !10323
  ret i1 true, !dbg !10324
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #1 !dbg !10325 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10329, metadata !DIExpression()), !dbg !10330
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  ret void, !dbg !10335
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @pci_acs_enabled(%struct.pci_dev*, i16 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_get_def_domain_type(%struct.device* %dev) #1 !dbg !10336 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %type = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10337, metadata !DIExpression()), !dbg !10338
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !10339, metadata !DIExpression()), !dbg !10340
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10341
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10342
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10342
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !10343
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !10343
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !10340
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10344, metadata !DIExpression()), !dbg !10345
  store i32 0, i32* %type, align 4, !dbg !10345
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10346
  %def_domain_type = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %3, i32 0, i32 38, !dbg !10348
  %4 = load i32 (%struct.device*)*, i32 (%struct.device*)** %def_domain_type, align 8, !dbg !10348
  %tobool = icmp ne i32 (%struct.device*)* %4, null, !dbg !10346
  br i1 %tobool, label %if.then, label %if.end, !dbg !10349

if.then:                                          ; preds = %entry
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10350
  %def_domain_type1 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 38, !dbg !10351
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %def_domain_type1, align 8, !dbg !10351
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10352
  %call = call i32 %6(%struct.device* %7) #9, !dbg !10350
  store i32 %call, i32* %type, align 4, !dbg !10353
  br label %if.end, !dbg !10354

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* %type, align 4, !dbg !10355
  %cmp = icmp eq i32 %8, 0, !dbg !10356
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10357

cond.true:                                        ; preds = %if.end
  %9 = load i32, i32* @iommu_def_domain_type, align 4, !dbg !10358
  br label %cond.end, !dbg !10357

cond.false:                                       ; preds = %if.end
  %10 = load i32, i32* %type, align 4, !dbg !10359
  br label %cond.end, !dbg !10357

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !10357
  ret i32 %cond, !dbg !10360
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_alloc_default_domain(%struct.bus_type* %bus, %struct.iommu_group* %group, i32 %type) #1 !dbg !10361 {
entry:
  %retval = alloca i32, align 4
  %bus.addr = alloca %struct.bus_type*, align 8
  %group.addr = alloca %struct.iommu_group*, align 8
  %type.addr = alloca i32, align 4
  %dom = alloca %struct.iommu_domain*, align 8
  %attr = alloca i32, align 4
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  store %struct.iommu_group* %group, %struct.iommu_group** %group.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %dom, metadata !10370, metadata !DIExpression()), !dbg !10371
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !10372
  %1 = load i32, i32* %type.addr, align 4, !dbg !10373
  %call = call %struct.iommu_domain* @__iommu_domain_alloc(%struct.bus_type* %0, i32 %1) #9, !dbg !10374
  store %struct.iommu_domain* %call, %struct.iommu_domain** %dom, align 8, !dbg !10375
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %dom, align 8, !dbg !10376
  %tobool = icmp ne %struct.iommu_domain* %2, null, !dbg !10376
  br i1 %tobool, label %if.end5, label %land.lhs.true, !dbg !10378

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %type.addr, align 4, !dbg !10379
  %cmp = icmp ne i32 %3, 3, !dbg !10380
  br i1 %cmp, label %if.then, label %if.end5, !dbg !10381

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !10382
  %call1 = call %struct.iommu_domain* @__iommu_domain_alloc(%struct.bus_type* %4, i32 3) #9, !dbg !10384
  store %struct.iommu_domain* %call1, %struct.iommu_domain** %dom, align 8, !dbg !10385
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %dom, align 8, !dbg !10386
  %tobool2 = icmp ne %struct.iommu_domain* %5, null, !dbg !10386
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10388

if.then3:                                         ; preds = %if.then
  %6 = load i32, i32* %type.addr, align 4, !dbg !10389
  %7 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10389
  %name = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %7, i32 0, i32 7, !dbg !10389
  %8 = load i8*, i8** %name, align 8, !dbg !10389
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([108 x i8], [108 x i8]* @.str.38, i64 0, i64 0), i32 %6, i8* %8) #10, !dbg !10389
  br label %if.end, !dbg !10389

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end5, !dbg !10390

if.end5:                                          ; preds = %if.end, %land.lhs.true, %entry
  %9 = load %struct.iommu_domain*, %struct.iommu_domain** %dom, align 8, !dbg !10391
  %tobool6 = icmp ne %struct.iommu_domain* %9, null, !dbg !10391
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10393

if.then7:                                         ; preds = %if.end5
  store i32 -12, i32* %retval, align 4, !dbg !10394
  br label %return, !dbg !10394

if.end8:                                          ; preds = %if.end5
  %10 = load %struct.iommu_domain*, %struct.iommu_domain** %dom, align 8, !dbg !10395
  %11 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10396
  %default_domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %11, i32 0, i32 9, !dbg !10397
  store %struct.iommu_domain* %10, %struct.iommu_domain** %default_domain, align 8, !dbg !10398
  %12 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10399
  %domain = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %12, i32 0, i32 10, !dbg !10401
  %13 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10401
  %tobool9 = icmp ne %struct.iommu_domain* %13, null, !dbg !10399
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !10402

if.then10:                                        ; preds = %if.end8
  %14 = load %struct.iommu_domain*, %struct.iommu_domain** %dom, align 8, !dbg !10403
  %15 = load %struct.iommu_group*, %struct.iommu_group** %group.addr, align 8, !dbg !10404
  %domain11 = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %15, i32 0, i32 10, !dbg !10405
  store %struct.iommu_domain* %14, %struct.iommu_domain** %domain11, align 8, !dbg !10406
  br label %if.end12, !dbg !10404

if.end12:                                         ; preds = %if.then10, %if.end8
  %16 = load i8, i8* @iommu_dma_strict, align 1, !dbg !10407
  %tobool13 = trunc i8 %16 to i1, !dbg !10407
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !10409

if.then14:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i32* %attr, metadata !10410, metadata !DIExpression()), !dbg !10412
  store i32 1, i32* %attr, align 4, !dbg !10412
  %17 = load %struct.iommu_domain*, %struct.iommu_domain** %dom, align 8, !dbg !10413
  %18 = bitcast i32* %attr to i8*, !dbg !10414
  %call15 = call i32 @iommu_domain_set_attr(%struct.iommu_domain* %17, i32 7, i8* %18) #9, !dbg !10415
  br label %if.end16, !dbg !10416

if.end16:                                         ; preds = %if.then14, %if.end12
  store i32 0, i32* %retval, align 4, !dbg !10417
  br label %return, !dbg !10417

return:                                           ; preds = %if.end16, %if.then7
  %19 = load i32, i32* %retval, align 4, !dbg !10418
  ret i32 %19, !dbg !10418
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @probe_get_default_domain_type(%struct.device* %dev, i8* %data) #1 !dbg !10419 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %ops = alloca %struct.iommu_ops*, align 8
  %gtype = alloca %struct.__group_domain_type*, align 8
  %type = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10420, metadata !DIExpression()), !dbg !10421
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10422, metadata !DIExpression()), !dbg !10423
  call void @llvm.dbg.declare(metadata %struct.iommu_ops** %ops, metadata !10424, metadata !DIExpression()), !dbg !10425
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10426
  %bus = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5, !dbg !10427
  %1 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !dbg !10427
  %iommu_ops = getelementptr inbounds %struct.bus_type, %struct.bus_type* %1, i32 0, i32 19, !dbg !10428
  %2 = load %struct.iommu_ops*, %struct.iommu_ops** %iommu_ops, align 8, !dbg !10428
  store %struct.iommu_ops* %2, %struct.iommu_ops** %ops, align 8, !dbg !10425
  call void @llvm.dbg.declare(metadata %struct.__group_domain_type** %gtype, metadata !10429, metadata !DIExpression()), !dbg !10431
  %3 = load i8*, i8** %data.addr, align 8, !dbg !10432
  %4 = bitcast i8* %3 to %struct.__group_domain_type*, !dbg !10432
  store %struct.__group_domain_type* %4, %struct.__group_domain_type** %gtype, align 8, !dbg !10431
  call void @llvm.dbg.declare(metadata i32* %type, metadata !10433, metadata !DIExpression()), !dbg !10434
  store i32 0, i32* %type, align 4, !dbg !10434
  %5 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10435
  %def_domain_type = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %5, i32 0, i32 38, !dbg !10437
  %6 = load i32 (%struct.device*)*, i32 (%struct.device*)** %def_domain_type, align 8, !dbg !10437
  %tobool = icmp ne i32 (%struct.device*)* %6, null, !dbg !10435
  br i1 %tobool, label %if.then, label %if.end, !dbg !10438

if.then:                                          ; preds = %entry
  %7 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10439
  %def_domain_type1 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %7, i32 0, i32 38, !dbg !10440
  %8 = load i32 (%struct.device*)*, i32 (%struct.device*)** %def_domain_type1, align 8, !dbg !10440
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10441
  %call = call i32 %8(%struct.device* %9) #9, !dbg !10439
  store i32 %call, i32* %type, align 4, !dbg !10442
  br label %if.end, !dbg !10443

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %type, align 4, !dbg !10444
  %tobool2 = icmp ne i32 %10, 0, !dbg !10444
  br i1 %tobool2, label %if.then3, label %if.end21, !dbg !10446

if.then3:                                         ; preds = %if.end
  %11 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10447
  %type4 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %11, i32 0, i32 1, !dbg !10450
  %12 = load i32, i32* %type4, align 8, !dbg !10450
  %tobool5 = icmp ne i32 %12, 0, !dbg !10447
  br i1 %tobool5, label %land.lhs.true, label %if.end14, !dbg !10451

land.lhs.true:                                    ; preds = %if.then3
  %13 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10452
  %type6 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %13, i32 0, i32 1, !dbg !10453
  %14 = load i32, i32* %type6, align 8, !dbg !10453
  %15 = load i32, i32* %type, align 4, !dbg !10454
  %cmp = icmp ne i32 %14, %15, !dbg !10455
  br i1 %cmp, label %if.then7, label %if.end14, !dbg !10456

if.then7:                                         ; preds = %land.lhs.true
  %16 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10457
  %17 = load i32, i32* %type, align 4, !dbg !10457
  %call8 = call i8* @iommu_domain_type_str(i32 %17) #9, !dbg !10457
  %18 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10457
  %dev9 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %18, i32 0, i32 0, !dbg !10457
  %19 = load %struct.device*, %struct.device** %dev9, align 8, !dbg !10457
  %call10 = call i8* @dev_name(%struct.device* %19) #9, !dbg !10457
  %20 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10457
  %type11 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %20, i32 0, i32 1, !dbg !10457
  %21 = load i32, i32* %type11, align 8, !dbg !10457
  %call12 = call i8* @iommu_domain_type_str(i32 %21) #9, !dbg !10457
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.39, i64 0, i64 0), i8* %call8, i8* %call10, i8* %call12) #10, !dbg !10457
  %22 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10459
  %type13 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %22, i32 0, i32 1, !dbg !10460
  store i32 0, i32* %type13, align 8, !dbg !10461
  br label %if.end14, !dbg !10462

if.end14:                                         ; preds = %if.then7, %land.lhs.true, %if.then3
  %23 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10463
  %dev15 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %23, i32 0, i32 0, !dbg !10465
  %24 = load %struct.device*, %struct.device** %dev15, align 8, !dbg !10465
  %tobool16 = icmp ne %struct.device* %24, null, !dbg !10463
  br i1 %tobool16, label %if.end20, label %if.then17, !dbg !10466

if.then17:                                        ; preds = %if.end14
  %25 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10467
  %26 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10469
  %dev18 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %26, i32 0, i32 0, !dbg !10470
  store %struct.device* %25, %struct.device** %dev18, align 8, !dbg !10471
  %27 = load i32, i32* %type, align 4, !dbg !10472
  %28 = load %struct.__group_domain_type*, %struct.__group_domain_type** %gtype, align 8, !dbg !10473
  %type19 = getelementptr inbounds %struct.__group_domain_type, %struct.__group_domain_type* %28, i32 0, i32 1, !dbg !10474
  store i32 %27, i32* %type19, align 8, !dbg !10475
  br label %if.end20, !dbg !10476

if.end20:                                         ; preds = %if.then17, %if.end14
  br label %if.end21, !dbg !10477

if.end21:                                         ; preds = %if.end20, %if.end
  ret i32 0, !dbg !10478
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #1 !dbg !10479 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10482, metadata !DIExpression()), !dbg !10483
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10484
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !10486
  %1 = load i8*, i8** %init_name, align 8, !dbg !10486
  %tobool = icmp ne i8* %1, null, !dbg !10484
  br i1 %tobool, label %if.then, label %if.end, !dbg !10487

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10488
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !10489
  %3 = load i8*, i8** %init_name1, align 8, !dbg !10489
  store i8* %3, i8** %retval, align 8, !dbg !10490
  br label %return, !dbg !10490

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10491
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !10492
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #9, !dbg !10493
  store i8* %call, i8** %retval, align 8, !dbg !10494
  br label %return, !dbg !10494

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !10495
  ret i8* %5, !dbg !10495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_do_create_direct_mappings(%struct.device* %dev, i8* %data) #1 !dbg !10496 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %group = alloca %struct.iommu_group*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10497, metadata !DIExpression()), !dbg !10498
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10499, metadata !DIExpression()), !dbg !10500
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !10501, metadata !DIExpression()), !dbg !10502
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10503
  %1 = bitcast i8* %0 to %struct.iommu_group*, !dbg !10503
  store %struct.iommu_group* %1, %struct.iommu_group** %group, align 8, !dbg !10502
  %2 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10504
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10505
  %call = call i32 @iommu_create_device_direct_mappings(%struct.iommu_group* %2, %struct.device* %3) #9, !dbg !10506
  ret i32 0, !dbg !10507
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_do_dma_attach(%struct.device* %dev, i8* %data) #1 !dbg !10508 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %domain = alloca %struct.iommu_domain*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10509, metadata !DIExpression()), !dbg !10510
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10511, metadata !DIExpression()), !dbg !10512
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !10513, metadata !DIExpression()), !dbg !10514
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10515
  %1 = bitcast i8* %0 to %struct.iommu_domain*, !dbg !10515
  store %struct.iommu_domain* %1, %struct.iommu_domain** %domain, align 8, !dbg !10514
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10516, metadata !DIExpression()), !dbg !10517
  store i32 0, i32* %ret, align 4, !dbg !10517
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10518
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10520
  %call = call zeroext i1 @iommu_is_attach_deferred(%struct.iommu_domain* %2, %struct.device* %3) #9, !dbg !10521
  br i1 %call, label %if.end, label %if.then, !dbg !10522

if.then:                                          ; preds = %entry
  %4 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10523
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10524
  %call1 = call i32 @__iommu_attach_device(%struct.iommu_domain* %4, %struct.device* %5) #9, !dbg !10525
  store i32 %call1, i32* %ret, align 4, !dbg !10526
  br label %if.end, !dbg !10527

if.end:                                           ; preds = %if.then, %entry
  %6 = load i32, i32* %ret, align 4, !dbg !10528
  ret i32 %6, !dbg !10529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_do_probe_finalize(%struct.device* %dev, i8* %data) #1 !dbg !10530 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %domain = alloca %struct.iommu_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10531, metadata !DIExpression()), !dbg !10532
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10533, metadata !DIExpression()), !dbg !10534
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !10535, metadata !DIExpression()), !dbg !10536
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10537
  %1 = bitcast i8* %0 to %struct.iommu_domain*, !dbg !10537
  store %struct.iommu_domain* %1, %struct.iommu_domain** %domain, align 8, !dbg !10536
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10538
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %2, i32 0, i32 1, !dbg !10540
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10540
  %probe_finalize = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %3, i32 0, i32 13, !dbg !10541
  %4 = load void (%struct.device*)*, void (%struct.device*)** %probe_finalize, align 8, !dbg !10541
  %tobool = icmp ne void (%struct.device*)* %4, null, !dbg !10538
  br i1 %tobool, label %if.then, label %if.end, !dbg !10542

if.then:                                          ; preds = %entry
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10543
  %ops1 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %5, i32 0, i32 1, !dbg !10544
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops1, align 8, !dbg !10544
  %probe_finalize2 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 13, !dbg !10545
  %7 = load void (%struct.device*)*, void (%struct.device*)** %probe_finalize2, align 8, !dbg !10545
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10546
  call void %7(%struct.device* %8) #9, !dbg !10543
  br label %if.end, !dbg !10543

if.end:                                           ; preds = %if.then, %entry
  ret i32 0, !dbg !10547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_bus_notifier(%struct.notifier_block* %nb, i64 %action, i8* %data) #1 !dbg !10548 {
entry:
  %retval = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %action.addr = alloca i64, align 8
  %data.addr = alloca i8*, align 8
  %group_action = alloca i64, align 8
  %dev = alloca %struct.device*, align 8
  %group = alloca %struct.iommu_group*, align 8
  %ret = alloca i32, align 4
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !10549, metadata !DIExpression()), !dbg !10550
  store i64 %action, i64* %action.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %action.addr, metadata !10551, metadata !DIExpression()), !dbg !10552
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  call void @llvm.dbg.declare(metadata i64* %group_action, metadata !10555, metadata !DIExpression()), !dbg !10556
  store i64 0, i64* %group_action, align 8, !dbg !10556
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !10557, metadata !DIExpression()), !dbg !10558
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10559
  %1 = bitcast i8* %0 to %struct.device*, !dbg !10559
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !10558
  call void @llvm.dbg.declare(metadata %struct.iommu_group** %group, metadata !10560, metadata !DIExpression()), !dbg !10561
  %2 = load i64, i64* %action.addr, align 8, !dbg !10562
  %cmp = icmp eq i64 %2, 1, !dbg !10564
  br i1 %cmp, label %if.then, label %if.else, !dbg !10565

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10566, metadata !DIExpression()), !dbg !10568
  %3 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10569
  %call = call i32 @iommu_probe_device(%struct.device* %3) #9, !dbg !10570
  store i32 %call, i32* %ret, align 4, !dbg !10571
  %4 = load i32, i32* %ret, align 4, !dbg !10572
  %tobool = icmp ne i32 %4, 0, !dbg !10573
  %5 = zext i1 %tobool to i64, !dbg !10573
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !10573
  store i32 %cond, i32* %retval, align 4, !dbg !10574
  br label %return, !dbg !10574

if.else:                                          ; preds = %entry
  %6 = load i64, i64* %action.addr, align 8, !dbg !10575
  %cmp1 = icmp eq i64 %6, 3, !dbg !10577
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10578

if.then2:                                         ; preds = %if.else
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10579
  call void @iommu_release_device(%struct.device* %7) #9, !dbg !10581
  store i32 1, i32* %retval, align 4, !dbg !10582
  br label %return, !dbg !10582

if.end:                                           ; preds = %if.else
  br label %if.end3

if.end3:                                          ; preds = %if.end
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10583
  %call4 = call %struct.iommu_group* @iommu_group_get(%struct.device* %8) #9, !dbg !10584
  store %struct.iommu_group* %call4, %struct.iommu_group** %group, align 8, !dbg !10585
  %9 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10586
  %tobool5 = icmp ne %struct.iommu_group* %9, null, !dbg !10586
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !10588

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !10589
  br label %return, !dbg !10589

if.end7:                                          ; preds = %if.end3
  %10 = load i64, i64* %action.addr, align 8, !dbg !10590
  switch i64 %10, label %sw.epilog [
    i64 4, label %sw.bb
    i64 5, label %sw.bb8
    i64 6, label %sw.bb9
    i64 7, label %sw.bb10
  ], !dbg !10591

sw.bb:                                            ; preds = %if.end7
  store i64 3, i64* %group_action, align 8, !dbg !10592
  br label %sw.epilog, !dbg !10594

sw.bb8:                                           ; preds = %if.end7
  store i64 4, i64* %group_action, align 8, !dbg !10595
  br label %sw.epilog, !dbg !10596

sw.bb9:                                           ; preds = %if.end7
  store i64 5, i64* %group_action, align 8, !dbg !10597
  br label %sw.epilog, !dbg !10598

sw.bb10:                                          ; preds = %if.end7
  store i64 6, i64* %group_action, align 8, !dbg !10599
  br label %sw.epilog, !dbg !10600

sw.epilog:                                        ; preds = %if.end7, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb
  %11 = load i64, i64* %group_action, align 8, !dbg !10601
  %tobool11 = icmp ne i64 %11, 0, !dbg !10601
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !10603

if.then12:                                        ; preds = %sw.epilog
  %12 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10604
  %notifier = getelementptr inbounds %struct.iommu_group, %struct.iommu_group* %12, i32 0, i32 4, !dbg !10605
  %13 = load i64, i64* %group_action, align 8, !dbg !10606
  %14 = load %struct.device*, %struct.device** %dev, align 8, !dbg !10607
  %15 = bitcast %struct.device* %14 to i8*, !dbg !10607
  %call13 = call i32 @blocking_notifier_call_chain(%struct.blocking_notifier_head* %notifier, i64 %13, i8* %15) #9, !dbg !10608
  br label %if.end14, !dbg !10608

if.end14:                                         ; preds = %if.then12, %sw.epilog
  %16 = load %struct.iommu_group*, %struct.iommu_group** %group, align 8, !dbg !10609
  call void @iommu_group_put(%struct.iommu_group* %16) #9, !dbg !10610
  store i32 0, i32* %retval, align 4, !dbg !10611
  br label %return, !dbg !10611

return:                                           ; preds = %if.end14, %if.then6, %if.then2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10612
  ret i32 %17, !dbg !10612
}

; Function Attrs: noredzone
declare dso_local i32 @bus_register_notifier(%struct.bus_type*, %struct.notifier_block*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @remove_iommu_group(%struct.device* %dev, i8* %data) #1 !dbg !10613 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10614, metadata !DIExpression()), !dbg !10615
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10616, metadata !DIExpression()), !dbg !10617
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10618
  call void @iommu_release_device(%struct.device* %0) #9, !dbg !10619
  ret i32 0, !dbg !10620
}

; Function Attrs: noredzone
declare dso_local i32 @bus_unregister_notifier(%struct.bus_type*, %struct.notifier_block*) #3

; Function Attrs: noredzone
declare dso_local i64 @_copy_from_user(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @copy_overflow(i32 %size, i64 %count) #1 !dbg !10621 {
entry:
  %size.addr = alloca i32, align 4
  %count.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !10624, metadata !DIExpression()), !dbg !10625
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !10626, metadata !DIExpression()), !dbg !10627
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10628, metadata !DIExpression()), !dbg !10630
  store i32 1, i32* %__ret_warn_on, align 4, !dbg !10630
  %0 = load i32, i32* %__ret_warn_on, align 4, !dbg !10631
  %tobool = icmp ne i32 %0, 0, !dbg !10631
  %lnot = xor i1 %tobool, true, !dbg !10631
  %lnot1 = xor i1 %lnot, true, !dbg !10631
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10631
  %conv = sext i32 %lnot.ext to i64, !dbg !10631
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10631
  br i1 %tobool2, label %if.then, label %if.end, !dbg !10630

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !10631

do.body:                                          ; preds = %if.then
  br label %do.body3, !dbg !10633

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !10635

do.end:                                           ; preds = %do.body3
  %1 = load i32, i32* %size.addr, align 4, !dbg !10633
  %2 = load i64, i64* %count.addr, align 8, !dbg !10633
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.41, i64 0, i64 0), i32 %1, i64 %2) #9, !dbg !10633
  br label %do.body4, !dbg !10633

do.body4:                                         ; preds = %do.end
  br label %do.body5, !dbg !10637

do.body5:                                         ; preds = %do.body4
  br label %do.end6, !dbg !10639

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !10637

do.body7:                                         ; preds = %do.end6
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.40, i64 0, i64 0), i32 134, i32 2313, i64 12) #11, !dbg !10641, !srcloc !10643
  br label %do.end8, !dbg !10641

do.end8:                                          ; preds = %do.body7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 38) #11, !dbg !10644, !srcloc !10646
  br label %do.body9, !dbg !10637

do.body9:                                         ; preds = %do.end8
  br label %do.end10, !dbg !10647

do.end10:                                         ; preds = %do.body9
  br label %do.end11, !dbg !10637

do.end11:                                         ; preds = %do.end10
  br label %do.body12, !dbg !10633

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !10649

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !10633

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !10633

if.end:                                           ; preds = %do.end14, %entry
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !10630
  %tobool15 = icmp ne i32 %3, 0, !dbg !10630
  %lnot16 = xor i1 %tobool15, true, !dbg !10630
  %lnot18 = xor i1 %lnot16, true, !dbg !10630
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10630
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10630
  store i64 %conv20, i64* %tmp, align 8, !dbg !10631
  %4 = load i64, i64* %tmp, align 8, !dbg !10630
  ret void, !dbg !10651
}

; Function Attrs: noredzone
declare dso_local void @__bad_copy_from() #3

; Function Attrs: noredzone
declare dso_local void @__bad_copy_to() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 !dbg !10652 {
entry:
  %ptr.addr = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %to_user.addr = alloca i8, align 1
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10655, metadata !DIExpression()), !dbg !10656
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10657, metadata !DIExpression()), !dbg !10658
  %frombool = zext i1 %to_user to i8
  store i8 %frombool, i8* %to_user.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %to_user.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  ret void, !dbg !10661
}

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_check_bind_data(%struct.iommu_gpasid_bind_data* %data) #1 !dbg !10662 {
entry:
  %retval = alloca i32, align 4
  %data.addr = alloca %struct.iommu_gpasid_bind_data*, align 8
  %mask = alloca i64, align 8
  %i = alloca i32, align 4
  store %struct.iommu_gpasid_bind_data* %data, %struct.iommu_gpasid_bind_data** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_gpasid_bind_data** %data.addr, metadata !10665, metadata !DIExpression()), !dbg !10666
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !10667, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10669, metadata !DIExpression()), !dbg !10670
  %0 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !10671
  %version = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %0, i32 0, i32 1, !dbg !10673
  %1 = load i32, i32* %version, align 4, !dbg !10673
  %cmp = icmp ne i32 %1, 1, !dbg !10674
  br i1 %cmp, label %if.then, label %if.end, !dbg !10675

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10676
  br label %return, !dbg !10676

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !10677
  %format = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %2, i32 0, i32 2, !dbg !10679
  %3 = load i32, i32* %format, align 8, !dbg !10679
  %cmp1 = icmp uge i32 %3, 2, !dbg !10680
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !10681

if.then2:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10682
  br label %return, !dbg !10682

if.end3:                                          ; preds = %if.end
  store i64 1, i64* %mask, align 8, !dbg !10683
  %4 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !10684
  %flags = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %4, i32 0, i32 4, !dbg !10686
  %5 = load i64, i64* %flags, align 8, !dbg !10686
  %6 = load i64, i64* %mask, align 8, !dbg !10687
  %neg = xor i64 %6, -1, !dbg !10688
  %and = and i64 %5, %neg, !dbg !10689
  %tobool = icmp ne i64 %and, 0, !dbg !10689
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !10690

if.then4:                                         ; preds = %if.end3
  store i32 -22, i32* %retval, align 4, !dbg !10691
  br label %return, !dbg !10691

if.end5:                                          ; preds = %if.end3
  store i32 0, i32* %i, align 4, !dbg !10692
  br label %for.cond, !dbg !10694

for.cond:                                         ; preds = %for.inc, %if.end5
  %7 = load i32, i32* %i, align 4, !dbg !10695
  %conv = sext i32 %7 to i64, !dbg !10695
  %cmp6 = icmp ult i64 %conv, 8, !dbg !10697
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10698

for.body:                                         ; preds = %for.cond
  %8 = load %struct.iommu_gpasid_bind_data*, %struct.iommu_gpasid_bind_data** %data.addr, align 8, !dbg !10699
  %padding = getelementptr inbounds %struct.iommu_gpasid_bind_data, %struct.iommu_gpasid_bind_data* %8, i32 0, i32 8, !dbg !10702
  %9 = load i32, i32* %i, align 4, !dbg !10703
  %idxprom = sext i32 %9 to i64, !dbg !10699
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %padding, i64 0, i64 %idxprom, !dbg !10699
  %10 = load i8, i8* %arrayidx, align 1, !dbg !10699
  %tobool8 = icmp ne i8 %10, 0, !dbg !10699
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !10704

if.then9:                                         ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !10705
  br label %return, !dbg !10705

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !10706

for.inc:                                          ; preds = %if.end10
  %11 = load i32, i32* %i, align 4, !dbg !10707
  %inc = add i32 %11, 1, !dbg !10707
  store i32 %inc, i32* %i, align 4, !dbg !10707
  br label %for.cond, !dbg !10708, !llvm.loop !10709

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10711
  br label %return, !dbg !10711

return:                                           ; preds = %for.end, %if.then9, %if.then4, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !10712
  ret i32 %12, !dbg !10712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_do_attach_device(%struct.device* %dev, i8* %data) #1 !dbg !10713 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %domain = alloca %struct.iommu_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10714, metadata !DIExpression()), !dbg !10715
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10716, metadata !DIExpression()), !dbg !10717
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !10718, metadata !DIExpression()), !dbg !10719
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10720
  %1 = bitcast i8* %0 to %struct.iommu_domain*, !dbg !10720
  store %struct.iommu_domain* %1, %struct.iommu_domain** %domain, align 8, !dbg !10719
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10721
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10722
  %call = call i32 @__iommu_attach_device(%struct.iommu_domain* %2, %struct.device* %3) #9, !dbg !10723
  ret i32 %call, !dbg !10724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @iommu_group_do_detach_device(%struct.device* %dev, i8* %data) #1 !dbg !10725 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %domain = alloca %struct.iommu_domain*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10726, metadata !DIExpression()), !dbg !10727
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10728, metadata !DIExpression()), !dbg !10729
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain, metadata !10730, metadata !DIExpression()), !dbg !10731
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10732
  %1 = bitcast i8* %0 to %struct.iommu_domain*, !dbg !10732
  store %struct.iommu_domain* %1, %struct.iommu_domain** %domain, align 8, !dbg !10731
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain, align 8, !dbg !10733
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10734
  call void @__iommu_detach_device(%struct.iommu_domain* %2, %struct.device* %3) #9, !dbg !10735
  ret i32 0, !dbg !10736
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__iommu_detach_device(%struct.iommu_domain* %domain, %struct.device* %dev) #1 !dbg !10737 {
entry:
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !10738, metadata !DIExpression()), !dbg !10739
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10740, metadata !DIExpression()), !dbg !10741
  %0 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10742
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10744
  %call = call zeroext i1 @iommu_is_attach_deferred(%struct.iommu_domain* %0, %struct.device* %1) #9, !dbg !10745
  br i1 %call, label %if.then, label %if.end, !dbg !10746

if.then:                                          ; preds = %entry
  br label %return, !dbg !10747

if.end:                                           ; preds = %entry
  %2 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10748
  %ops = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %2, i32 0, i32 1, !dbg !10748
  %3 = load %struct.iommu_ops*, %struct.iommu_ops** %ops, align 8, !dbg !10748
  %detach_dev = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %3, i32 0, i32 4, !dbg !10748
  %4 = load void (%struct.iommu_domain*, %struct.device*)*, void (%struct.iommu_domain*, %struct.device*)** %detach_dev, align 8, !dbg !10748
  %cmp = icmp eq void (%struct.iommu_domain*, %struct.device*)* %4, null, !dbg !10748
  %lnot = xor i1 %cmp, true, !dbg !10748
  %lnot1 = xor i1 %lnot, true, !dbg !10748
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10748
  %conv = sext i32 %lnot.ext to i64, !dbg !10748
  %tobool = icmp ne i64 %conv, 0, !dbg !10748
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !10750

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !10751

if.end3:                                          ; preds = %if.end
  %5 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10752
  %ops4 = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %5, i32 0, i32 1, !dbg !10753
  %6 = load %struct.iommu_ops*, %struct.iommu_ops** %ops4, align 8, !dbg !10753
  %detach_dev5 = getelementptr inbounds %struct.iommu_ops, %struct.iommu_ops* %6, i32 0, i32 4, !dbg !10754
  %7 = load void (%struct.iommu_domain*, %struct.device*)*, void (%struct.iommu_domain*, %struct.device*)** %detach_dev5, align 8, !dbg !10754
  %8 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10755
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10756
  call void %7(%struct.iommu_domain* %8, %struct.device* %9) #9, !dbg !10752
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10757
  call void @trace_detach_device_from_domain(%struct.device* %10) #9, !dbg !10758
  br label %return, !dbg !10759

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !10759
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @iommu_pgsize(%struct.iommu_domain* %domain, i64 %addr_merge, i64 %size) #1 !dbg !10760 {
entry:
  %word.addr.i31 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i31, metadata !10761, metadata !DIExpression()), !dbg !10763
  %word.addr.i30 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i30, metadata !4933, metadata !DIExpression()), !dbg !10765
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !10761, metadata !DIExpression()), !dbg !10769
  %domain.addr = alloca %struct.iommu_domain*, align 8
  %addr_merge.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %pgsize_idx = alloca i32, align 4
  %pgsize = alloca i64, align 8
  %align_pgsize_idx = alloca i32, align 4
  %__UNIQUE_ID___x284 = alloca i32, align 4
  %__UNIQUE_ID___y285 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.iommu_domain* %domain, %struct.iommu_domain** %domain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.iommu_domain** %domain.addr, metadata !10771, metadata !DIExpression()), !dbg !10772
  store i64 %addr_merge, i64* %addr_merge.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %addr_merge.addr, metadata !10773, metadata !DIExpression()), !dbg !10774
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10775, metadata !DIExpression()), !dbg !10776
  call void @llvm.dbg.declare(metadata i32* %pgsize_idx, metadata !10777, metadata !DIExpression()), !dbg !10778
  call void @llvm.dbg.declare(metadata i64* %pgsize, metadata !10779, metadata !DIExpression()), !dbg !10780
  %0 = load i64, i64* %size.addr, align 8, !dbg !10781
  store i64 %0, i64* %word.addr.i, align 8
  %1 = load i64, i64* %word.addr.i, align 8, !dbg !10782
  %2 = call i64 asm "bsr $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %1) #12, !dbg !10783, !srcloc !10784
  store i64 %2, i64* %word.addr.i, align 8, !dbg !10783
  %3 = load i64, i64* %word.addr.i, align 8, !dbg !10785
  %conv = trunc i64 %3 to i32, !dbg !10786
  store i32 %conv, i32* %pgsize_idx, align 4, !dbg !10787
  %4 = load i64, i64* %addr_merge.addr, align 8, !dbg !10788
  %tobool = icmp ne i64 %4, 0, !dbg !10788
  %lnot = xor i1 %tobool, true, !dbg !10788
  %lnot1 = xor i1 %lnot, true, !dbg !10788
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10788
  %conv2 = sext i32 %lnot.ext to i64, !dbg !10788
  %tobool3 = icmp ne i64 %conv2, 0, !dbg !10788
  br i1 %tobool3, label %if.then, label %if.end, !dbg !10789

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %align_pgsize_idx, metadata !10790, metadata !DIExpression()), !dbg !10791
  %5 = load i64, i64* %addr_merge.addr, align 8, !dbg !10792
  store i64 %5, i64* %word.addr.i30, align 8
  %6 = load i64, i64* %word.addr.i30, align 8, !dbg !10793
  %7 = call i64 asm "rep; bsf $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %6) #12, !dbg !10794, !srcloc !4985
  store i64 %7, i64* %word.addr.i30, align 8, !dbg !10794
  %8 = load i64, i64* %word.addr.i30, align 8, !dbg !10795
  %conv5 = trunc i64 %8 to i32, !dbg !10796
  store i32 %conv5, i32* %align_pgsize_idx, align 4, !dbg !10791
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x284, metadata !10797, metadata !DIExpression()), !dbg !10799
  %9 = load i32, i32* %pgsize_idx, align 4, !dbg !10799
  store i32 %9, i32* %__UNIQUE_ID___x284, align 4, !dbg !10799
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y285, metadata !10800, metadata !DIExpression()), !dbg !10799
  %10 = load i32, i32* %align_pgsize_idx, align 4, !dbg !10799
  store i32 %10, i32* %__UNIQUE_ID___y285, align 4, !dbg !10799
  %11 = load i32, i32* %__UNIQUE_ID___x284, align 4, !dbg !10799
  %12 = load i32, i32* %__UNIQUE_ID___y285, align 4, !dbg !10799
  %cmp = icmp ult i32 %11, %12, !dbg !10799
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10799

cond.true:                                        ; preds = %if.then
  %13 = load i32, i32* %__UNIQUE_ID___x284, align 4, !dbg !10799
  br label %cond.end, !dbg !10799

cond.false:                                       ; preds = %if.then
  %14 = load i32, i32* %__UNIQUE_ID___y285, align 4, !dbg !10799
  br label %cond.end, !dbg !10799

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %13, %cond.true ], [ %14, %cond.false ], !dbg !10799
  store i32 %cond, i32* %tmp, align 4, !dbg !10799
  %15 = load i32, i32* %tmp, align 4, !dbg !10799
  store i32 %15, i32* %pgsize_idx, align 4, !dbg !10801
  br label %if.end, !dbg !10802

if.end:                                           ; preds = %cond.end, %entry
  %16 = load i32, i32* %pgsize_idx, align 4, !dbg !10803
  %add = add i32 %16, 1, !dbg !10804
  %sh_prom = zext i32 %add to i64, !dbg !10805
  %shl = shl i64 1, %sh_prom, !dbg !10805
  %sub = sub i64 %shl, 1, !dbg !10806
  store i64 %sub, i64* %pgsize, align 8, !dbg !10807
  %17 = load %struct.iommu_domain*, %struct.iommu_domain** %domain.addr, align 8, !dbg !10808
  %pgsize_bitmap = getelementptr inbounds %struct.iommu_domain, %struct.iommu_domain* %17, i32 0, i32 2, !dbg !10809
  %18 = load i64, i64* %pgsize_bitmap, align 8, !dbg !10809
  %19 = load i64, i64* %pgsize, align 8, !dbg !10810
  %and = and i64 %19, %18, !dbg !10810
  store i64 %and, i64* %pgsize, align 8, !dbg !10810
  br label %do.body, !dbg !10811

do.body:                                          ; preds = %if.end
  %20 = load i64, i64* %pgsize, align 8, !dbg !10812
  %tobool7 = icmp ne i64 %20, 0, !dbg !10812
  %lnot8 = xor i1 %tobool7, true, !dbg !10812
  %lnot10 = xor i1 %lnot8, true, !dbg !10812
  %lnot12 = xor i1 %lnot10, true, !dbg !10812
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !10812
  %conv14 = sext i32 %lnot.ext13 to i64, !dbg !10812
  %tobool15 = icmp ne i64 %conv14, 0, !dbg !10812
  br i1 %tobool15, label %if.then16, label %if.end24, !dbg !10815

if.then16:                                        ; preds = %do.body
  br label %do.body17, !dbg !10812

do.body17:                                        ; preds = %if.then16
  br label %do.body18, !dbg !10816

do.body18:                                        ; preds = %do.body17
  br label %do.end, !dbg !10818

do.end:                                           ; preds = %do.body18
  br label %do.body19, !dbg !10816

do.body19:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i32 2355, i32 0, i64 12) #11, !dbg !10820, !srcloc !10822
  br label %do.end20, !dbg !10820

do.end20:                                         ; preds = %do.body19
  br label %do.body21, !dbg !10816

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 286) #11, !dbg !10823, !srcloc !10826
  unreachable, !dbg !10827

do.end22:                                         ; No predecessors!
  br label %do.end23, !dbg !10816

do.end23:                                         ; preds = %do.end22
  br label %if.end24, !dbg !10816

if.end24:                                         ; preds = %do.end23, %do.body
  br label %do.end25, !dbg !10815

do.end25:                                         ; preds = %if.end24
  %21 = load i64, i64* %pgsize, align 8, !dbg !10828
  store i64 %21, i64* %word.addr.i31, align 8
  %22 = load i64, i64* %word.addr.i31, align 8, !dbg !10829
  %23 = call i64 asm "bsr $1,$0", "=r,rm,~{dirflag},~{fpsr},~{flags}"(i64 %22) #12, !dbg !10830, !srcloc !10784
  store i64 %23, i64* %word.addr.i31, align 8, !dbg !10830
  %24 = load i64, i64* %word.addr.i31, align 8, !dbg !10831
  %conv27 = trunc i64 %24 to i32, !dbg !10832
  store i32 %conv27, i32* %pgsize_idx, align 4, !dbg !10833
  %25 = load i32, i32* %pgsize_idx, align 4, !dbg !10834
  %sh_prom28 = zext i32 %25 to i64, !dbg !10835
  %shl29 = shl i64 1, %sh_prom28, !dbg !10835
  store i64 %shl29, i64* %pgsize, align 8, !dbg !10836
  %26 = load i64, i64* %pgsize, align 8, !dbg !10837
  ret i64 %26, !dbg !10838
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_map(i64 %iova, i64 %paddr, i64 %size) #1 !dbg !10839 {
entry:
  %iova.addr = alloca i64, align 8
  %paddr.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !10842, metadata !DIExpression()), !dbg !10843
  store i64 %paddr, i64* %paddr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %paddr.addr, metadata !10844, metadata !DIExpression()), !dbg !10843
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10845, metadata !DIExpression()), !dbg !10843
  ret void, !dbg !10843
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_unmap(i64 %iova, i64 %size, i64 %unmapped_size) #1 !dbg !10846 {
entry:
  %iova.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %unmapped_size.addr = alloca i64, align 8
  store i64 %iova, i64* %iova.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %iova.addr, metadata !10849, metadata !DIExpression()), !dbg !10850
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10851, metadata !DIExpression()), !dbg !10850
  store i64 %unmapped_size, i64* %unmapped_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %unmapped_size.addr, metadata !10852, metadata !DIExpression()), !dbg !10850
  ret void, !dbg !10850
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @sg_phys(%struct.scatterlist* %sg) #1 !dbg !10853 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10856, metadata !DIExpression()), !dbg !10857
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10858
  %call = call %struct.page* @sg_page(%struct.scatterlist* %0) #9, !dbg !10858
  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !10858
  %2 = inttoptr i64 %1 to %struct.page*, !dbg !10858
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %call to i64, !dbg !10858
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %2 to i64, !dbg !10858
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10858
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64, !dbg !10858
  %shl = shl i64 %sub.ptr.div, 12, !dbg !10858
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10859
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %3, i32 0, i32 1, !dbg !10860
  %4 = load i32, i32* %offset, align 8, !dbg !10860
  %conv = zext i32 %4 to i64, !dbg !10859
  %add = add i64 %shl, %conv, !dbg !10861
  ret i64 %add, !dbg !10862
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #1 !dbg !10863 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !10866, metadata !DIExpression()), !dbg !10867
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !10868
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !10869
  %1 = load i64, i64* %page_link, align 8, !dbg !10869
  %and = and i64 %1, -4, !dbg !10870
  %2 = inttoptr i64 %and to %struct.page*, !dbg !10871
  ret %struct.page* %2, !dbg !10872
}

; Function Attrs: noredzone
declare dso_local %struct.kset* @kset_create_and_add(i8*, %struct.kset_uevent_ops*, %struct.kobject*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @iommu_debugfs_setup() #1 !dbg !10873 {
entry:
  ret void, !dbg !10874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #1 !dbg !10875 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !10878, metadata !DIExpression()), !dbg !10879
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !10880
  %tobool = trunc i8 %0 to i1, !dbg !10880
  %lnot = xor i1 %tobool, true, !dbg !10880
  %lnot1 = xor i1 %lnot, true, !dbg !10880
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10880
  %conv = sext i32 %lnot.ext to i64, !dbg !10880
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10880
  ret i1 %tobool2, !dbg !10881
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #1 !dbg !10882 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10883, metadata !DIExpression()), !dbg !10884
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10885
  %tobool = icmp ne i8* %0, null, !dbg !10885
  %lnot = xor i1 %tobool, true, !dbg !10885
  %lnot1 = xor i1 %lnot, true, !dbg !10885
  %lnot2 = xor i1 %lnot1, true, !dbg !10885
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !10885
  %conv = sext i32 %lnot.ext to i64, !dbg !10885
  %tobool3 = icmp ne i64 %conv, 0, !dbg !10885
  br i1 %tobool3, label %lor.end, label %lor.rhs, !dbg !10886

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %ptr.addr, align 8, !dbg !10887
  %2 = ptrtoint i8* %1 to i64, !dbg !10887
  %3 = inttoptr i64 %2 to i8*, !dbg !10887
  %4 = ptrtoint i8* %3 to i64, !dbg !10887
  %cmp = icmp uge i64 %4, -4095, !dbg !10887
  %lnot5 = xor i1 %cmp, true, !dbg !10887
  %lnot7 = xor i1 %lnot5, true, !dbg !10887
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !10887
  %conv9 = sext i32 %lnot.ext8 to i64, !dbg !10887
  %tobool10 = icmp ne i64 %conv9, 0, !dbg !10886
  br label %lor.end, !dbg !10886

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool10, %lor.rhs ]
  ret i1 %5, !dbg !10888
}

attributes #0 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone speculatable willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind willreturn }
attributes #6 = { nounwind readnone willreturn }
attributes #7 = { nounwind willreturn }
attributes #8 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noredzone }
attributes #10 = { cold noredzone }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { noredzone nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4581, !4582, !4583, !4584}
!llvm.ident = !{!4585}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_iommu_subsys_init235", scope: !2, file: !3, line: 151, type: !162, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !161, globals: !4500, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/iommu/iommu.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !12, !19, !25, !30, !36, !43, !49, !58, !66, !72, !78, !85, !93, !99, !110, !117, !121, !126, !134, !143, !148, !154}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iommu_cap", file: !6, line: 92, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/iommu.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "IOMMU_CAP_CACHE_COHERENCY", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "IOMMU_CAP_INTR_REMAP", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "IOMMU_CAP_NOEXEC", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !13, line: 15, baseType: !7, size: 32, elements: !14)
!13 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!14 = !{!15, !16, !17, !18}
!15 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!18 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !20, line: 546, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23, !24}
!22 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !26, line: 65, baseType: !7, size: 32, elements: !27)
!26 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!27 = !{!28, !29}
!28 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!29 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !31, line: 16, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35}
!33 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !37, line: 59, baseType: !7, size: 32, elements: !38)
!37 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!38 = !{!39, !40, !41, !42}
!39 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!40 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!41 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!42 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !44, line: 54, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48}
!46 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!49 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !50, line: 296, baseType: !7, size: 32, elements: !51)
!50 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!51 = !{!52, !53, !54, !55, !56, !57}
!52 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!54 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!55 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!56 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!57 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!58 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !59, line: 9, baseType: !7, size: 32, elements: !60)
!59 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!60 = !{!61, !62, !63, !64, !65}
!61 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!62 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!63 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!64 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!65 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !67, line: 26, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !73, line: 44, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77}
!75 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !79, line: 343, baseType: !7, size: 32, elements: !80)
!79 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!80 = !{!81, !82, !83, !84}
!81 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !86, line: 524, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!87 = !{!88, !89, !90, !91, !92}
!88 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !86, line: 502, baseType: !7, size: 32, elements: !94)
!94 = !{!95, !96, !97, !98}
!95 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!99 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iommu_attr", file: !6, line: 112, baseType: !7, size: 32, elements: !100)
!100 = !{!101, !102, !103, !104, !105, !106, !107, !108, !109}
!101 = !DIEnumerator(name: "DOMAIN_ATTR_GEOMETRY", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_ATTR_PAGING", value: 1, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_ATTR_WINDOWS", value: 2, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_ATTR_FSL_PAMU_STASH", value: 3, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_ATTR_FSL_PAMU_ENABLE", value: 4, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_ATTR_FSL_PAMUV1", value: 5, isUnsigned: true)
!107 = !DIEnumerator(name: "DOMAIN_ATTR_NESTING", value: 6, isUnsigned: true)
!108 = !DIEnumerator(name: "DOMAIN_ATTR_DMA_USE_FLUSH_QUEUE", value: 7, isUnsigned: true)
!109 = !DIEnumerator(name: "DOMAIN_ATTR_MAX", value: 8, isUnsigned: true)
!110 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iommu_resv_type", file: !6, line: 125, baseType: !7, size: 32, elements: !111)
!111 = !{!112, !113, !114, !115, !116}
!112 = !DIEnumerator(name: "IOMMU_RESV_DIRECT", value: 0, isUnsigned: true)
!113 = !DIEnumerator(name: "IOMMU_RESV_DIRECT_RELAXABLE", value: 1, isUnsigned: true)
!114 = !DIEnumerator(name: "IOMMU_RESV_RESERVED", value: 2, isUnsigned: true)
!115 = !DIEnumerator(name: "IOMMU_RESV_MSI", value: 3, isUnsigned: true)
!116 = !DIEnumerator(name: "IOMMU_RESV_SW_MSI", value: 4, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iommu_dev_features", file: !6, line: 159, baseType: !7, size: 32, elements: !118)
!118 = !{!119, !120}
!119 = !DIEnumerator(name: "IOMMU_DEV_FEAT_AUX", value: 0, isUnsigned: true)
!120 = !DIEnumerator(name: "IOMMU_DEV_FEAT_SVA", value: 1, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iommu_fault_type", file: !122, line: 17, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/uapi/linux/iommu.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125}
!124 = !DIEnumerator(name: "IOMMU_FAULT_DMA_UNRECOV", value: 1, isUnsigned: true)
!125 = !DIEnumerator(name: "IOMMU_FAULT_PAGE_REQ", value: 2, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fsl_mc_pool_type", file: !127, line: 58, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./include/linux/fsl/mc.h", directory: "/home/lizy2001/genbc/linux")
!128 = !{!129, !130, !131, !132, !133}
!129 = !DIEnumerator(name: "FSL_MC_POOL_DPMCP", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "FSL_MC_POOL_DPBP", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "FSL_MC_POOL_DPCON", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "FSL_MC_POOL_IRQ", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "FSL_MC_NUM_POOL_TYPES", value: 4, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "device_link_state", file: !79, line: 306, baseType: !135, size: 32, elements: !136)
!135 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!136 = !{!137, !138, !139, !140, !141, !142}
!137 = !DIEnumerator(name: "DL_STATE_NONE", value: -1)
!138 = !DIEnumerator(name: "DL_STATE_DORMANT", value: 0)
!139 = !DIEnumerator(name: "DL_STATE_AVAILABLE", value: 1)
!140 = !DIEnumerator(name: "DL_STATE_CONSUMER_PROBE", value: 2)
!141 = !DIEnumerator(name: "DL_STATE_ACTIVE", value: 3)
!142 = !DIEnumerator(name: "DL_STATE_SUPPLIER_UNBIND", value: 4)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !144, line: 10, baseType: !7, size: 32, elements: !145)
!144 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!145 = !{!146, !147}
!146 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "iommu_inv_granularity", file: !122, line: 162, baseType: !7, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153}
!150 = !DIEnumerator(name: "IOMMU_INV_GRANU_DOMAIN", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "IOMMU_INV_GRANU_PASID", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "IOMMU_INV_GRANU_ADDR", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "IOMMU_INV_GRANU_NR", value: 3, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !155, line: 305, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!156 = !{!157, !158, !159, !160}
!157 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!160 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!161 = !{!162, !163, !708, !3650, !3783, !4130, !4240, !4409, !376, !3694, !3548, !135, !3719, !4484, !285, !270, !4486, !494, !2091, !384, !4498, !885, !685, !282}
!162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_device", file: !3, line: 50, size: 256, elements: !165)
!165 = !{!166, !173, !4129}
!166 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !164, file: !3, line: 51, baseType: !167, size: 128)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !168, line: 178, size: 128, elements: !169)
!168 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!169 = !{!170, !172}
!170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !167, file: !168, line: 179, baseType: !171, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !167, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !167, file: !168, line: 179, baseType: !171, size: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !164, file: !3, line: 52, baseType: !174, size: 64, offset: 128)
!174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !175, size: 64)
!175 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !79, line: 461, size: 5568, elements: !176)
!176 = !{!177, !3338, !3339, !3342, !3343, !3394, !3896, !3897, !3898, !3899, !3900, !3909, !4014, !4027, !4030, !4031, !4035, !4037, !4038, !4039, !4043, !4049, !4050, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4091, !4092, !4093, !4094, !4125, !4126, !4127, !4128}
!177 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !175, file: !79, line: 462, baseType: !178, size: 512)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !179, line: 64, size: 512, elements: !180)
!179 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!180 = !{!181, !185, !186, !188, !248, !3189, !3328, !3333, !3334, !3335, !3336, !3337}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !178, file: !179, line: 65, baseType: !182, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !184)
!184 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !178, file: !179, line: 66, baseType: !167, size: 128, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !178, file: !179, line: 67, baseType: !187, size: 64, offset: 192)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !178, file: !179, line: 68, baseType: !189, size: 64, offset: 256)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !179, line: 192, size: 704, elements: !191)
!191 = !{!192, !193, !209, !210}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !190, file: !179, line: 193, baseType: !167, size: 128)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !190, file: !179, line: 194, baseType: !194, offset: 128)
!194 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !195, line: 83, baseType: !196)
!195 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !195, line: 71, elements: !197)
!197 = !{!198}
!198 = !DIDerivedType(tag: DW_TAG_member, scope: !196, file: !195, line: 72, baseType: !199)
!199 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !196, file: !195, line: 72, elements: !200)
!200 = !{!201}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !199, file: !195, line: 73, baseType: !202)
!202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !195, line: 20, elements: !203)
!203 = !{!204}
!204 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !202, file: !195, line: 21, baseType: !205)
!205 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !206, line: 25, baseType: !207)
!206 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !206, line: 25, elements: !208)
!208 = !{}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !190, file: !179, line: 195, baseType: !178, size: 512, offset: 128)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !190, file: !179, line: 196, baseType: !211, size: 64, offset: 640)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !212, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !213)
!213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !179, line: 156, size: 192, elements: !214)
!214 = !{!215, !220, !225}
!215 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !213, file: !179, line: 157, baseType: !216, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !217)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !218, size: 64)
!218 = !DISubroutineType(types: !219)
!219 = !{!135, !189, !187}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !213, file: !179, line: 158, baseType: !221, size: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !222)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DISubroutineType(types: !224)
!224 = !{!182, !189, !187}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !213, file: !179, line: 159, baseType: !226, size: 64, offset: 128)
!226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !227)
!227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!228 = !DISubroutineType(types: !229)
!229 = !{!135, !189, !187, !230}
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !179, line: 148, size: 20736, elements: !232)
!232 = !{!233, !238, !242, !243, !247}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !231, file: !179, line: 149, baseType: !234, size: 192)
!234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 192, elements: !236)
!235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!236 = !{!237}
!237 = !DISubrange(count: 3)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !231, file: !179, line: 150, baseType: !239, size: 4096, offset: 192)
!239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 4096, elements: !240)
!240 = !{!241}
!241 = !DISubrange(count: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !231, file: !179, line: 151, baseType: !135, size: 32, offset: 4288)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !231, file: !179, line: 152, baseType: !244, size: 16384, offset: 4320)
!244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 16384, elements: !245)
!245 = !{!246}
!246 = !DISubrange(count: 2048)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !231, file: !179, line: 153, baseType: !135, size: 32, offset: 20704)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !178, file: !179, line: 69, baseType: !249, size: 64, offset: 320)
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !179, line: 138, size: 448, elements: !251)
!251 = !{!252, !256, !286, !288, !3151, !3179, !3183}
!252 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !250, file: !179, line: 139, baseType: !253, size: 64)
!253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !254, size: 64)
!254 = !DISubroutineType(types: !255)
!255 = !{null, !187}
!256 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !250, file: !179, line: 140, baseType: !257, size: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !259)
!259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !260, line: 230, size: 128, elements: !261)
!260 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!261 = !{!262, !278}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !259, file: !260, line: 231, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DISubroutineType(types: !265)
!265 = !{!266, !187, !271, !235}
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !168, line: 60, baseType: !267)
!267 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !268, line: 73, baseType: !269)
!268 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!269 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !268, line: 15, baseType: !270)
!270 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !260, line: 30, size: 128, elements: !273)
!273 = !{!274, !275}
!274 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !272, file: !260, line: 31, baseType: !182, size: 64)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !272, file: !260, line: 32, baseType: !276, size: 16, offset: 64)
!276 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !168, line: 19, baseType: !277)
!277 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !259, file: !260, line: 232, baseType: !279, size: 64, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!280 = !DISubroutineType(types: !281)
!281 = !{!266, !187, !271, !182, !282}
!282 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !168, line: 55, baseType: !283)
!283 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !268, line: 72, baseType: !284)
!284 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !268, line: 16, baseType: !285)
!285 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !250, file: !179, line: 141, baseType: !287, size: 64, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !250, file: !179, line: 142, baseType: !289, size: 64, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !292)
!292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !260, line: 84, size: 320, elements: !293)
!293 = !{!294, !295, !299, !3148, !3149}
!294 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !292, file: !260, line: 85, baseType: !182, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !292, file: !260, line: 86, baseType: !296, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DISubroutineType(types: !298)
!298 = !{!276, !187, !271, !135}
!299 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !292, file: !260, line: 88, baseType: !300, size: 64, offset: 128)
!300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !301, size: 64)
!301 = !DISubroutineType(types: !302)
!302 = !{!276, !187, !303, !135}
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !260, line: 168, size: 448, elements: !305)
!305 = !{!306, !307, !308, !309, !3143, !3144}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !304, file: !260, line: 169, baseType: !272, size: 128)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !304, file: !260, line: 170, baseType: !282, size: 64, offset: 128)
!308 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !304, file: !260, line: 171, baseType: !162, size: 64, offset: 192)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !304, file: !260, line: 172, baseType: !310, size: 64, offset: 256)
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = !DISubroutineType(types: !312)
!312 = !{!266, !313, !187, !303, !235, !492, !282}
!313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !314, size: 64)
!314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !50, line: 916, size: 1856, align: 32, elements: !315)
!315 = !{!316, !334, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3126, !3127, !3136, !3137, !3138, !3139, !3140, !3141, !3142}
!316 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !314, file: !50, line: 920, baseType: !317, size: 128)
!317 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !314, file: !50, line: 917, size: 128, elements: !318)
!318 = !{!319, !325}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !317, file: !50, line: 918, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !321, line: 58, size: 64, elements: !322)
!321 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!322 = !{!323}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !320, file: !321, line: 59, baseType: !324, size: 64)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !317, file: !50, line: 919, baseType: !326, size: 128, align: 64)
!326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !168, line: 216, size: 128, align: 64, elements: !327)
!327 = !{!328, !330}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !326, file: !168, line: 217, baseType: !329, size: 64)
!329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !326, file: !168, line: 218, baseType: !331, size: 64, offset: 64)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DISubroutineType(types: !333)
!333 = !{null, !329}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !314, file: !50, line: 921, baseType: !335, size: 128, offset: 128)
!335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !336, line: 8, size: 128, elements: !337)
!336 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!337 = !{!338, !342}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !335, file: !336, line: 9, baseType: !339, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !341, line: 18, flags: DIFlagFwdDecl)
!341 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!342 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !335, file: !336, line: 10, baseType: !343, size: 64, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !341, line: 89, size: 1536, elements: !345)
!345 = !{!346, !347, !357, !365, !366, !389, !3076, !3078, !3090, !3091, !3092, !3093, !3094, !3100, !3101, !3102}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !344, file: !341, line: 91, baseType: !7, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !344, file: !341, line: 92, baseType: !348, size: 32, offset: 32)
!348 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !349, line: 277, baseType: !350)
!349 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !349, line: 277, size: 32, elements: !351)
!351 = !{!352}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !350, file: !349, line: 277, baseType: !353, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !349, line: 70, baseType: !354)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !349, line: 65, size: 32, elements: !355)
!355 = !{!356}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !354, file: !349, line: 66, baseType: !7, size: 32)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !344, file: !341, line: 93, baseType: !358, size: 128, offset: 64)
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !359, line: 38, size: 128, elements: !360)
!359 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!360 = !{!361, !363}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !358, file: !359, line: 39, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !358, file: !359, line: 39, baseType: !364, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !362, size: 64)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !344, file: !341, line: 94, baseType: !343, size: 64, offset: 192)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !344, file: !341, line: 95, baseType: !367, size: 128, offset: 256)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !341, line: 47, size: 128, elements: !368)
!368 = !{!369, !385}
!369 = !DIDerivedType(tag: DW_TAG_member, scope: !367, file: !341, line: 48, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !367, file: !341, line: 48, size: 64, elements: !371)
!371 = !{!372, !381}
!372 = !DIDerivedType(tag: DW_TAG_member, scope: !370, file: !341, line: 49, baseType: !373, size: 64)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !370, file: !341, line: 49, size: 64, elements: !374)
!374 = !{!375, !380}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !373, file: !341, line: 50, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !377, line: 21, baseType: !378)
!377 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!378 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !379, line: 27, baseType: !7)
!379 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!380 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !373, file: !341, line: 50, baseType: !376, size: 32, offset: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !370, file: !341, line: 52, baseType: !382, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !377, line: 23, baseType: !383)
!383 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !379, line: 31, baseType: !384)
!384 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !367, file: !341, line: 54, baseType: !386, size: 64, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !387, size: 64)
!387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !388)
!388 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !344, file: !341, line: 96, baseType: !390, size: 64, offset: 384)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !50, line: 610, size: 4224, elements: !392)
!392 = !{!393, !394, !395, !403, !410, !411, !559, !2787, !2788, !2789, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !3052, !3060, !3061, !3062, !3072, !3073, !3074, !3075}
!393 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !391, file: !50, line: 611, baseType: !276, size: 16)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !391, file: !50, line: 612, baseType: !277, size: 16, offset: 16)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !391, file: !50, line: 613, baseType: !396, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !397, line: 23, baseType: !398)
!397 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!398 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !397, line: 21, size: 32, elements: !399)
!399 = !{!400}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !398, file: !397, line: 22, baseType: !401, size: 32)
!401 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !168, line: 32, baseType: !402)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !268, line: 49, baseType: !7)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !391, file: !50, line: 614, baseType: !404, size: 32, offset: 64)
!404 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !397, line: 28, baseType: !405)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !397, line: 26, size: 32, elements: !406)
!406 = !{!407}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !405, file: !397, line: 27, baseType: !408, size: 32)
!408 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !168, line: 33, baseType: !409)
!409 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !268, line: 50, baseType: !7)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !391, file: !50, line: 615, baseType: !7, size: 32, offset: 96)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !391, file: !50, line: 622, baseType: !412, size: 64, offset: 128)
!412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !414)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !50, line: 1864, size: 1536, align: 512, elements: !415)
!415 = !{!416, !420, !433, !437, !443, !447, !453, !457, !461, !465, !469, !470, !476, !480, !506, !535, !539, !545, !550, !554, !555}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !414, file: !50, line: 1865, baseType: !417, size: 64)
!417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!418 = !DISubroutineType(types: !419)
!419 = !{!343, !390, !343, !7}
!420 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !414, file: !50, line: 1866, baseType: !421, size: 64, offset: 64)
!421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !422, size: 64)
!422 = !DISubroutineType(types: !423)
!423 = !{!182, !343, !390, !424}
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !426, line: 10, size: 128, elements: !427)
!426 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!427 = !{!428, !432}
!428 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !425, file: !426, line: 11, baseType: !429, size: 64)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DISubroutineType(types: !431)
!431 = !{null, !162}
!432 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !425, file: !426, line: 12, baseType: !162, size: 64, offset: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !414, file: !50, line: 1867, baseType: !434, size: 64, offset: 128)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{!135, !390, !135}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !414, file: !50, line: 1868, baseType: !438, size: 64, offset: 192)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{!441, !390, !135}
!441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !442, size: 64)
!442 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !50, line: 581, flags: DIFlagFwdDecl)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !414, file: !50, line: 1870, baseType: !444, size: 64, offset: 256)
!444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !445, size: 64)
!445 = !DISubroutineType(types: !446)
!446 = !{!135, !343, !235, !135}
!447 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !414, file: !50, line: 1872, baseType: !448, size: 64, offset: 320)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DISubroutineType(types: !450)
!450 = !{!135, !390, !343, !276, !451}
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !168, line: 30, baseType: !452)
!452 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !414, file: !50, line: 1873, baseType: !454, size: 64, offset: 384)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{!135, !343, !390, !343}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !414, file: !50, line: 1874, baseType: !458, size: 64, offset: 448)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DISubroutineType(types: !460)
!460 = !{!135, !390, !343}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !414, file: !50, line: 1875, baseType: !462, size: 64, offset: 512)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DISubroutineType(types: !464)
!464 = !{!135, !390, !343, !182}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !414, file: !50, line: 1876, baseType: !466, size: 64, offset: 576)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{!135, !390, !343, !276}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !414, file: !50, line: 1877, baseType: !458, size: 64, offset: 640)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !414, file: !50, line: 1878, baseType: !471, size: 64, offset: 704)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!135, !390, !343, !276, !474}
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !168, line: 16, baseType: !475)
!475 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !168, line: 13, baseType: !376)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !414, file: !50, line: 1879, baseType: !477, size: 64, offset: 768)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!135, !390, !343, !390, !343, !7}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !414, file: !50, line: 1881, baseType: !481, size: 64, offset: 832)
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DISubroutineType(types: !483)
!483 = !{!135, !343, !484}
!484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !50, line: 219, size: 640, elements: !486)
!486 = !{!487, !488, !489, !490, !491, !495, !503, !504, !505}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !485, file: !50, line: 220, baseType: !7, size: 32)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !485, file: !50, line: 221, baseType: !276, size: 16, offset: 32)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !485, file: !50, line: 222, baseType: !396, size: 32, offset: 64)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !485, file: !50, line: 223, baseType: !404, size: 32, offset: 96)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !485, file: !50, line: 224, baseType: !492, size: 64, offset: 128)
!492 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !168, line: 46, baseType: !493)
!493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !268, line: 88, baseType: !494)
!494 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !485, file: !50, line: 225, baseType: !496, size: 128, offset: 192)
!496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !497, line: 13, size: 128, elements: !498)
!497 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!498 = !{!499, !502}
!499 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !496, file: !497, line: 14, baseType: !500, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !497, line: 8, baseType: !501)
!501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !379, line: 30, baseType: !494)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !496, file: !497, line: 15, baseType: !270, size: 64, offset: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !485, file: !50, line: 226, baseType: !496, size: 128, offset: 320)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !485, file: !50, line: 227, baseType: !496, size: 128, offset: 448)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !485, file: !50, line: 234, baseType: !313, size: 64, offset: 576)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !414, file: !50, line: 1882, baseType: !507, size: 64, offset: 896)
!507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !508, size: 64)
!508 = !DISubroutineType(types: !509)
!509 = !{!135, !510, !512, !376, !7}
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !335)
!512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !514, line: 22, size: 1152, elements: !515)
!514 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!515 = !{!516, !517, !518, !519, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !513, file: !514, line: 23, baseType: !376, size: 32)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !513, file: !514, line: 24, baseType: !276, size: 16, offset: 32)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !513, file: !514, line: 25, baseType: !7, size: 32, offset: 64)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !513, file: !514, line: 26, baseType: !520, size: 32, offset: 96)
!520 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !168, line: 104, baseType: !376)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !513, file: !514, line: 27, baseType: !382, size: 64, offset: 128)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !513, file: !514, line: 28, baseType: !382, size: 64, offset: 192)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !513, file: !514, line: 37, baseType: !382, size: 64, offset: 256)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !513, file: !514, line: 38, baseType: !474, size: 32, offset: 320)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !513, file: !514, line: 39, baseType: !474, size: 32, offset: 352)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !513, file: !514, line: 40, baseType: !396, size: 32, offset: 384)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !513, file: !514, line: 41, baseType: !404, size: 32, offset: 416)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !513, file: !514, line: 42, baseType: !492, size: 64, offset: 448)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !513, file: !514, line: 43, baseType: !496, size: 128, offset: 512)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !513, file: !514, line: 44, baseType: !496, size: 128, offset: 640)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !513, file: !514, line: 45, baseType: !496, size: 128, offset: 768)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !513, file: !514, line: 46, baseType: !496, size: 128, offset: 896)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !513, file: !514, line: 47, baseType: !382, size: 64, offset: 1024)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !513, file: !514, line: 48, baseType: !382, size: 64, offset: 1088)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !414, file: !50, line: 1883, baseType: !536, size: 64, offset: 960)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = !DISubroutineType(types: !538)
!538 = !{!266, !343, !235, !282}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !414, file: !50, line: 1884, baseType: !540, size: 64, offset: 1024)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DISubroutineType(types: !542)
!542 = !{!135, !390, !543, !382, !382}
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !50, line: 50, flags: DIFlagFwdDecl)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !414, file: !50, line: 1886, baseType: !546, size: 64, offset: 1088)
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = !DISubroutineType(types: !548)
!548 = !{!135, !390, !549, !135}
!549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !496, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !414, file: !50, line: 1887, baseType: !551, size: 64, offset: 1152)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!135, !390, !343, !313, !7, !276}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !414, file: !50, line: 1890, baseType: !466, size: 64, offset: 1216)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !414, file: !50, line: 1891, baseType: !556, size: 64, offset: 1280)
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !557, size: 64)
!557 = !DISubroutineType(types: !558)
!558 = !{!135, !390, !441, !135}
!559 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !391, file: !50, line: 623, baseType: !560, size: 64, offset: 192)
!560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !561, size: 64)
!561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !50, line: 1416, size: 9472, elements: !562)
!562 = !{!563, !564, !565, !566, !567, !568, !618, !2394, !2476, !2559, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2575, !2579, !2580, !2583, !2584, !2587, !2588, !2589, !2630, !2657, !2658, !2659, !2660, !2661, !2662, !2665, !2667, !2674, !2675, !2677, !2678, !2679, !2738, !2739, !2754, !2755, !2756, !2757, !2758, !2761, !2762, !2763, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786}
!563 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !561, file: !50, line: 1417, baseType: !167, size: 128)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !561, file: !50, line: 1418, baseType: !474, size: 32, offset: 128)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !561, file: !50, line: 1419, baseType: !388, size: 8, offset: 160)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !561, file: !50, line: 1420, baseType: !285, size: 64, offset: 192)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !561, file: !50, line: 1421, baseType: !492, size: 64, offset: 256)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !561, file: !50, line: 1422, baseType: !569, size: 64, offset: 320)
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !50, line: 2228, size: 576, elements: !571)
!571 = !{!572, !573, !574, !581, !585, !589, !593, !597, !598, !608, !611, !612, !613, !615, !616, !617}
!572 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !570, file: !50, line: 2229, baseType: !182, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !570, file: !50, line: 2230, baseType: !135, size: 32, offset: 64)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !570, file: !50, line: 2238, baseType: !575, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !576, size: 64)
!576 = !DISubroutineType(types: !577)
!577 = !{!135, !578}
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !580, line: 28, flags: DIFlagFwdDecl)
!580 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!581 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !570, file: !50, line: 2239, baseType: !582, size: 64, offset: 192)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !584)
!584 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !50, line: 70, flags: DIFlagFwdDecl)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !570, file: !50, line: 2240, baseType: !586, size: 64, offset: 256)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!343, !569, !135, !182, !162}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !570, file: !50, line: 2242, baseType: !590, size: 64, offset: 320)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{null, !560}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !570, file: !50, line: 2243, baseType: !594, size: 64, offset: 384)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !596, line: 76, flags: DIFlagFwdDecl)
!596 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!597 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !570, file: !50, line: 2244, baseType: !569, size: 64, offset: 448)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !570, file: !50, line: 2245, baseType: !599, size: 64, offset: 512)
!599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !168, line: 182, size: 64, elements: !600)
!600 = !{!601}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !599, file: !168, line: 183, baseType: !602, size: 64)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !168, line: 186, size: 128, elements: !604)
!604 = !{!605, !606}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !603, file: !168, line: 187, baseType: !602, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !603, file: !168, line: 187, baseType: !607, size: 64, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !570, file: !50, line: 2247, baseType: !609, offset: 576)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !610, line: 187, elements: !208)
!610 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!611 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !570, file: !50, line: 2248, baseType: !609, offset: 576)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !570, file: !50, line: 2249, baseType: !609, offset: 576)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !570, file: !50, line: 2250, baseType: !614, offset: 576)
!614 = !DICompositeType(tag: DW_TAG_array_type, baseType: !609, elements: !236)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !570, file: !50, line: 2252, baseType: !609, offset: 576)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !570, file: !50, line: 2253, baseType: !609, offset: 576)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !570, file: !50, line: 2254, baseType: !609, offset: 576)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !561, file: !50, line: 1423, baseType: !619, size: 64, offset: 384)
!619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !620, size: 64)
!620 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !621)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !50, line: 1935, size: 1472, elements: !622)
!622 = !{!623, !627, !631, !632, !636, !642, !646, !647, !648, !652, !656, !657, !658, !659, !665, !670, !671, !678, !679, !680, !681, !2378, !2393}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !621, file: !50, line: 1936, baseType: !624, size: 64)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!625 = !DISubroutineType(types: !626)
!626 = !{!390, !560}
!627 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !621, file: !50, line: 1937, baseType: !628, size: 64, offset: 64)
!628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !629, size: 64)
!629 = !DISubroutineType(types: !630)
!630 = !{null, !390}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !621, file: !50, line: 1938, baseType: !628, size: 64, offset: 128)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !621, file: !50, line: 1940, baseType: !633, size: 64, offset: 192)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DISubroutineType(types: !635)
!635 = !{null, !390, !135}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !621, file: !50, line: 1941, baseType: !637, size: 64, offset: 256)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{!135, !390, !640}
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !20, line: 40, flags: DIFlagFwdDecl)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !621, file: !50, line: 1942, baseType: !643, size: 64, offset: 320)
!643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!644 = !DISubroutineType(types: !645)
!645 = !{!135, !390}
!646 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !621, file: !50, line: 1943, baseType: !628, size: 64, offset: 384)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !621, file: !50, line: 1944, baseType: !590, size: 64, offset: 448)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !621, file: !50, line: 1945, baseType: !649, size: 64, offset: 512)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DISubroutineType(types: !651)
!651 = !{!135, !560, !135}
!652 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !621, file: !50, line: 1946, baseType: !653, size: 64, offset: 576)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{!135, !560}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !621, file: !50, line: 1947, baseType: !653, size: 64, offset: 640)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !621, file: !50, line: 1948, baseType: !653, size: 64, offset: 704)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !621, file: !50, line: 1949, baseType: !653, size: 64, offset: 768)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !621, file: !50, line: 1950, baseType: !660, size: 64, offset: 832)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DISubroutineType(types: !662)
!662 = !{!135, !343, !663}
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !50, line: 57, flags: DIFlagFwdDecl)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !621, file: !50, line: 1951, baseType: !666, size: 64, offset: 896)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!135, !560, !669, !235}
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !621, file: !50, line: 1952, baseType: !590, size: 64, offset: 960)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !621, file: !50, line: 1954, baseType: !672, size: 64, offset: 1024)
!672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!673 = !DISubroutineType(types: !674)
!674 = !{!135, !675, !343}
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !677, line: 539, flags: DIFlagFwdDecl)
!677 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!678 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !621, file: !50, line: 1955, baseType: !672, size: 64, offset: 1088)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !621, file: !50, line: 1956, baseType: !672, size: 64, offset: 1152)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !621, file: !50, line: 1957, baseType: !672, size: 64, offset: 1216)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !621, file: !50, line: 1963, baseType: !682, size: 64, offset: 1280)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DISubroutineType(types: !684)
!684 = !{!135, !560, !685, !708}
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !687, line: 68, size: 512, align: 128, elements: !688)
!687 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!688 = !{!689, !690, !2370, !2377}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !686, file: !687, line: 69, baseType: !285, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, scope: !686, file: !687, line: 77, baseType: !691, size: 320, offset: 64)
!691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !686, file: !687, line: 77, size: 320, elements: !692)
!692 = !{!693, !881, !886, !914, !922, !928, !2301, !2369}
!693 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 78, baseType: !694, size: 320)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 78, size: 320, elements: !695)
!695 = !{!696, !697, !879, !880}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !694, file: !687, line: 84, baseType: !167, size: 128)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !694, file: !687, line: 86, baseType: !698, size: 64, offset: 128)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !50, line: 451, size: 1216, align: 64, elements: !700)
!700 = !{!701, !702, !710, !711, !716, !731, !747, !748, !749, !750, !872, !873, !876, !877, !878}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !699, file: !50, line: 452, baseType: !390, size: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !699, file: !50, line: 453, baseType: !703, size: 128, offset: 64)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !704, line: 292, size: 128, elements: !705)
!704 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!705 = !{!706, !707, !709}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !703, file: !704, line: 293, baseType: !194)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !703, file: !704, line: 295, baseType: !708, size: 32)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !168, line: 148, baseType: !7)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !703, file: !704, line: 296, baseType: !162, size: 64, offset: 64)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !699, file: !50, line: 454, baseType: !708, size: 32, offset: 192)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !699, file: !50, line: 455, baseType: !712, size: 32, offset: 224)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !168, line: 168, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 166, size: 32, elements: !714)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !713, file: !168, line: 167, baseType: !135, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !699, file: !50, line: 460, baseType: !717, size: 128, offset: 256)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !718, line: 125, size: 128, elements: !719)
!718 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!719 = !{!720, !730}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !717, file: !718, line: 126, baseType: !721, size: 64)
!721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !718, line: 31, size: 64, elements: !722)
!722 = !{!723}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !721, file: !718, line: 32, baseType: !724, size: 64)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !718, line: 24, size: 192, align: 64, elements: !726)
!726 = !{!727, !728, !729}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !725, file: !718, line: 25, baseType: !285, size: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !725, file: !718, line: 26, baseType: !724, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !725, file: !718, line: 27, baseType: !724, size: 64, offset: 128)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !717, file: !718, line: 127, baseType: !724, size: 64, offset: 64)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !699, file: !50, line: 461, baseType: !732, size: 256, offset: 384)
!732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !733, line: 35, size: 256, elements: !734)
!733 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!734 = !{!735, !743, !744, !746}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !732, file: !733, line: 36, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !737, line: 13, baseType: !738)
!737 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !168, line: 175, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !168, line: 173, size: 64, elements: !740)
!740 = !{!741}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !739, file: !168, line: 174, baseType: !742, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !377, line: 22, baseType: !501)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !732, file: !733, line: 42, baseType: !736, size: 64, offset: 64)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !732, file: !733, line: 46, baseType: !745, offset: 128)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !195, line: 29, baseType: !202)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !732, file: !733, line: 47, baseType: !167, size: 128, offset: 128)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !699, file: !50, line: 462, baseType: !285, size: 64, offset: 640)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !699, file: !50, line: 463, baseType: !285, size: 64, offset: 704)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !699, file: !50, line: 464, baseType: !285, size: 64, offset: 768)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !699, file: !50, line: 465, baseType: !751, size: 64, offset: 832)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !753)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !50, line: 367, size: 1408, elements: !754)
!754 = !{!755, !759, !763, !767, !771, !775, !781, !787, !791, !796, !800, !804, !808, !836, !840, !846, !847, !848, !852, !857, !861, !868}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !753, file: !50, line: 368, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !757, size: 64)
!757 = !DISubroutineType(types: !758)
!758 = !{!135, !685, !640}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !753, file: !50, line: 369, baseType: !760, size: 64, offset: 64)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DISubroutineType(types: !762)
!762 = !{!135, !313, !685}
!763 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !753, file: !50, line: 372, baseType: !764, size: 64, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DISubroutineType(types: !766)
!766 = !{!135, !698, !640}
!767 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !753, file: !50, line: 375, baseType: !768, size: 64, offset: 192)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!135, !685}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !753, file: !50, line: 381, baseType: !772, size: 64, offset: 256)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!135, !313, !698, !171, !7}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !753, file: !50, line: 383, baseType: !776, size: 64, offset: 320)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DISubroutineType(types: !778)
!778 = !{null, !779}
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !50, line: 290, flags: DIFlagFwdDecl)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !753, file: !50, line: 385, baseType: !782, size: 64, offset: 384)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DISubroutineType(types: !784)
!784 = !{!135, !313, !698, !492, !7, !7, !785, !786}
!785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !753, file: !50, line: 388, baseType: !788, size: 64, offset: 448)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !789, size: 64)
!789 = !DISubroutineType(types: !790)
!790 = !{!135, !313, !698, !492, !7, !7, !685, !162}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !753, file: !50, line: 393, baseType: !792, size: 64, offset: 512)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = !DISubroutineType(types: !794)
!794 = !{!795, !698, !795}
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !168, line: 125, baseType: !382)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !753, file: !50, line: 394, baseType: !797, size: 64, offset: 576)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DISubroutineType(types: !799)
!799 = !{null, !685, !7, !7}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !753, file: !50, line: 395, baseType: !801, size: 64, offset: 640)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DISubroutineType(types: !803)
!803 = !{!135, !685, !708}
!804 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !753, file: !50, line: 396, baseType: !805, size: 64, offset: 704)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DISubroutineType(types: !807)
!807 = !{null, !685}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !753, file: !50, line: 397, baseType: !809, size: 64, offset: 768)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DISubroutineType(types: !811)
!811 = !{!266, !812, !834}
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !50, line: 320, size: 384, elements: !814)
!814 = !{!815, !816, !817, !821, !822, !823, !826, !827}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !813, file: !50, line: 321, baseType: !313, size: 64)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !813, file: !50, line: 326, baseType: !492, size: 64, offset: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !813, file: !50, line: 327, baseType: !818, size: 64, offset: 128)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{null, !812, !270, !270}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !813, file: !50, line: 328, baseType: !162, size: 64, offset: 192)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !813, file: !50, line: 329, baseType: !135, size: 32, offset: 256)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !813, file: !50, line: 330, baseType: !824, size: 16, offset: 288)
!824 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !377, line: 19, baseType: !825)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !379, line: 24, baseType: !277)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !813, file: !50, line: 331, baseType: !824, size: 16, offset: 304)
!827 = !DIDerivedType(tag: DW_TAG_member, scope: !813, file: !50, line: 332, baseType: !828, size: 64, offset: 320)
!828 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !813, file: !50, line: 332, size: 64, elements: !829)
!829 = !{!830, !831}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !828, file: !50, line: 333, baseType: !7, size: 32)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !828, file: !50, line: 334, baseType: !832, size: 64)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !50, line: 334, flags: DIFlagFwdDecl)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !50, line: 64, flags: DIFlagFwdDecl)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !753, file: !50, line: 402, baseType: !837, size: 64, offset: 832)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{!135, !698, !685, !685, !12}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !753, file: !50, line: 404, baseType: !841, size: 64, offset: 896)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!451, !685, !844}
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !845, line: 305, baseType: !7)
!845 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!846 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !753, file: !50, line: 405, baseType: !805, size: 64, offset: 960)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !753, file: !50, line: 406, baseType: !768, size: 64, offset: 1024)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !753, file: !50, line: 407, baseType: !849, size: 64, offset: 1088)
!849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !850, size: 64)
!850 = !DISubroutineType(types: !851)
!851 = !{!135, !685, !285, !285}
!852 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !753, file: !50, line: 409, baseType: !853, size: 64, offset: 1152)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !854, size: 64)
!854 = !DISubroutineType(types: !855)
!855 = !{null, !685, !856, !856}
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !753, file: !50, line: 410, baseType: !858, size: 64, offset: 1216)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{!135, !698, !685}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !753, file: !50, line: 413, baseType: !862, size: 64, offset: 1280)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DISubroutineType(types: !864)
!864 = !{!135, !865, !313, !867}
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !50, line: 61, flags: DIFlagFwdDecl)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !795, size: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !753, file: !50, line: 415, baseType: !869, size: 64, offset: 1344)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DISubroutineType(types: !871)
!871 = !{null, !313}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !699, file: !50, line: 466, baseType: !285, size: 64, offset: 896)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !699, file: !50, line: 467, baseType: !874, size: 32, offset: 960)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !875, line: 8, baseType: !376)
!875 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!876 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !699, file: !50, line: 468, baseType: !194, offset: 992)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !699, file: !50, line: 469, baseType: !167, size: 128, offset: 1024)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !699, file: !50, line: 470, baseType: !162, size: 64, offset: 1152)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !694, file: !687, line: 87, baseType: !285, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !694, file: !687, line: 94, baseType: !285, size: 64, offset: 256)
!881 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 96, baseType: !882, size: 64)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 96, size: 64, elements: !883)
!883 = !{!884}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !882, file: !687, line: 101, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !168, line: 143, baseType: !382)
!886 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 103, baseType: !887, size: 320)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 103, size: 320, elements: !888)
!888 = !{!889, !899, !902, !903}
!889 = !DIDerivedType(tag: DW_TAG_member, scope: !887, file: !687, line: 104, baseType: !890, size: 128)
!890 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !687, line: 104, size: 128, elements: !891)
!891 = !{!892, !893}
!892 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !890, file: !687, line: 105, baseType: !167, size: 128)
!893 = !DIDerivedType(tag: DW_TAG_member, scope: !890, file: !687, line: 106, baseType: !894, size: 128)
!894 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !890, file: !687, line: 106, size: 128, elements: !895)
!895 = !{!896, !897, !898}
!896 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !894, file: !687, line: 107, baseType: !685, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !894, file: !687, line: 109, baseType: !135, size: 32, offset: 64)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !894, file: !687, line: 110, baseType: !135, size: 32, offset: 96)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !887, file: !687, line: 117, baseType: !900, size: 64, offset: 128)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !687, line: 117, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !887, file: !687, line: 119, baseType: !162, size: 64, offset: 192)
!903 = !DIDerivedType(tag: DW_TAG_member, scope: !887, file: !687, line: 120, baseType: !904, size: 64, offset: 256)
!904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !887, file: !687, line: 120, size: 64, elements: !905)
!905 = !{!906, !907, !908}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !904, file: !687, line: 121, baseType: !162, size: 64)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !904, file: !687, line: 122, baseType: !285, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, scope: !904, file: !687, line: 123, baseType: !909, size: 32)
!909 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !904, file: !687, line: 123, size: 32, elements: !910)
!910 = !{!911, !912, !913}
!911 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !909, file: !687, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !909, file: !687, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !909, file: !687, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 130, baseType: !915, size: 192)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 130, size: 192, elements: !916)
!916 = !{!917, !918, !919, !920, !921}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !915, file: !687, line: 131, baseType: !285, size: 64)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !915, file: !687, line: 134, baseType: !388, size: 8, offset: 64)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !915, file: !687, line: 135, baseType: !388, size: 8, offset: 72)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !915, file: !687, line: 136, baseType: !712, size: 32, offset: 96)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !915, file: !687, line: 137, baseType: !7, size: 32, offset: 128)
!922 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 139, baseType: !923, size: 256)
!923 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 139, size: 256, elements: !924)
!924 = !{!925, !926, !927}
!925 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !923, file: !687, line: 140, baseType: !285, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !923, file: !687, line: 141, baseType: !712, size: 32, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !923, file: !687, line: 143, baseType: !167, size: 128, offset: 128)
!928 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 145, baseType: !929, size: 256)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 145, size: 256, elements: !930)
!930 = !{!931, !932, !934, !935, !2300}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !929, file: !687, line: 146, baseType: !285, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !929, file: !687, line: 147, baseType: !933, size: 64, offset: 64)
!933 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !677, line: 509, baseType: !685)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !929, file: !687, line: 148, baseType: !285, size: 64, offset: 128)
!935 = !DIDerivedType(tag: DW_TAG_member, scope: !929, file: !687, line: 149, baseType: !936, size: 64, offset: 192)
!936 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !929, file: !687, line: 149, size: 64, elements: !937)
!937 = !{!938, !2299}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !936, file: !687, line: 150, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !687, line: 388, size: 7296, elements: !941)
!941 = !{!942, !2295}
!942 = !DIDerivedType(tag: DW_TAG_member, scope: !940, file: !687, line: 389, baseType: !943, size: 7296)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !940, file: !687, line: 389, size: 7296, elements: !944)
!944 = !{!945, !1063, !1064, !1065, !1069, !1070, !1071, !1072, !1073, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1114, !1122, !1125, !1171, !1172, !2279, !2280, !2283, !2284, !2285, !2288, !2289, !2290, !2293, !2294}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !943, file: !687, line: 390, baseType: !946, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !947, size: 64)
!947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !687, line: 305, size: 1472, elements: !948)
!948 = !{!949, !950, !951, !952, !953, !954, !955, !956, !963, !964, !969, !970, !973, !1057, !1058, !1059, !1060, !1061}
!949 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !947, file: !687, line: 308, baseType: !285, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !947, file: !687, line: 309, baseType: !285, size: 64, offset: 64)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !947, file: !687, line: 313, baseType: !946, size: 64, offset: 128)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !947, file: !687, line: 313, baseType: !946, size: 64, offset: 192)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !947, file: !687, line: 315, baseType: !725, size: 192, align: 64, offset: 256)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !947, file: !687, line: 323, baseType: !285, size: 64, offset: 448)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !947, file: !687, line: 327, baseType: !939, size: 64, offset: 512)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !947, file: !687, line: 333, baseType: !957, size: 64, offset: 576)
!957 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !677, line: 284, baseType: !958)
!958 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !677, line: 284, size: 64, elements: !959)
!959 = !{!960}
!960 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !958, file: !677, line: 284, baseType: !961, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !962, line: 19, baseType: !285)
!962 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!963 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !947, file: !687, line: 334, baseType: !285, size: 64, offset: 640)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !947, file: !687, line: 343, baseType: !965, size: 256, offset: 704)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !947, file: !687, line: 340, size: 256, elements: !966)
!966 = !{!967, !968}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !965, file: !687, line: 341, baseType: !725, size: 192, align: 64)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !965, file: !687, line: 342, baseType: !285, size: 64, offset: 192)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !947, file: !687, line: 351, baseType: !167, size: 128, offset: 960)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !947, file: !687, line: 353, baseType: !971, size: 64, offset: 1088)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !687, line: 353, flags: DIFlagFwdDecl)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !947, file: !687, line: 356, baseType: !974, size: 64, offset: 1152)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !976)
!976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !20, line: 557, size: 832, elements: !977)
!977 = !{!978, !982, !983, !987, !991, !1031, !1035, !1039, !1043, !1044, !1045, !1049, !1053}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !976, file: !20, line: 558, baseType: !979, size: 64)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !946}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !976, file: !20, line: 559, baseType: !979, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !976, file: !20, line: 560, baseType: !984, size: 64, offset: 128)
!984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!985 = !DISubroutineType(types: !986)
!986 = !{!135, !946, !285}
!987 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !976, file: !20, line: 561, baseType: !988, size: 64, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!135, !946}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !976, file: !20, line: 562, baseType: !992, size: 64, offset: 256)
!992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!993 = !DISubroutineType(types: !994)
!994 = !{!995, !996}
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !687, line: 682, baseType: !7)
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !20, line: 508, size: 768, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1003, !1004, !1011, !1018, !1024, !1025, !1026, !1028, !1030}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !997, file: !20, line: 509, baseType: !946, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !997, file: !20, line: 510, baseType: !7, size: 32, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !997, file: !20, line: 511, baseType: !708, size: 32, offset: 96)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !997, file: !20, line: 512, baseType: !285, size: 64, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !997, file: !20, line: 513, baseType: !285, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !997, file: !20, line: 514, baseType: !1005, size: 64, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !677, line: 385, baseType: !1007)
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !677, line: 385, size: 64, elements: !1008)
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1007, file: !677, line: 385, baseType: !1010, size: 64)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !962, line: 15, baseType: !285)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !997, file: !20, line: 516, baseType: !1012, size: 64, offset: 320)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !677, line: 359, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !677, line: 359, size: 64, elements: !1015)
!1015 = !{!1016}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1014, file: !677, line: 359, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !962, line: 16, baseType: !285)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !997, file: !20, line: 519, baseType: !1019, size: 64, offset: 384)
!1019 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !962, line: 21, baseType: !1020)
!1020 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !962, line: 21, size: 64, elements: !1021)
!1021 = !{!1022}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1020, file: !962, line: 21, baseType: !1023, size: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !962, line: 14, baseType: !285)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !997, file: !20, line: 521, baseType: !685, size: 64, offset: 448)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !997, file: !20, line: 522, baseType: !685, size: 64, offset: 512)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !997, file: !20, line: 528, baseType: !1027, size: 64, offset: 576)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1019, size: 64)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !997, file: !20, line: 532, baseType: !1029, size: 64, offset: 640)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !194, size: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !997, file: !20, line: 536, baseType: !933, size: 64, offset: 704)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !976, file: !20, line: 563, baseType: !1032, size: 64, offset: 320)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DISubroutineType(types: !1034)
!1034 = !{!995, !996, !19}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !976, file: !20, line: 565, baseType: !1036, size: 64, offset: 384)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DISubroutineType(types: !1038)
!1038 = !{null, !996, !285, !285}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !976, file: !20, line: 567, baseType: !1040, size: 64, offset: 448)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!285, !946}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !976, file: !20, line: 571, baseType: !992, size: 64, offset: 512)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !976, file: !20, line: 574, baseType: !992, size: 64, offset: 576)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !976, file: !20, line: 579, baseType: !1046, size: 64, offset: 640)
!1046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1047, size: 64)
!1047 = !DISubroutineType(types: !1048)
!1048 = !{!135, !946, !285, !162, !135, !135}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !976, file: !20, line: 585, baseType: !1050, size: 64, offset: 704)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!182, !946}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !976, file: !20, line: 615, baseType: !1054, size: 64, offset: 768)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!685, !946, !285}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !947, file: !687, line: 359, baseType: !285, size: 64, offset: 1216)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !947, file: !687, line: 361, baseType: !313, size: 64, offset: 1280)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !947, file: !687, line: 362, baseType: !162, size: 64, offset: 1344)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !947, file: !687, line: 365, baseType: !736, size: 64, offset: 1408)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !947, file: !687, line: 373, baseType: !1062, offset: 1472)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !687, line: 296, elements: !208)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !943, file: !687, line: 391, baseType: !721, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !943, file: !687, line: 392, baseType: !382, size: 64, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !943, file: !687, line: 394, baseType: !1066, size: 64, offset: 192)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!285, !313, !285, !285, !285, !285}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !943, file: !687, line: 398, baseType: !285, size: 64, offset: 256)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !943, file: !687, line: 399, baseType: !285, size: 64, offset: 320)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !943, file: !687, line: 405, baseType: !285, size: 64, offset: 384)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !943, file: !687, line: 406, baseType: !285, size: 64, offset: 448)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !943, file: !687, line: 407, baseType: !1074, size: 64, offset: 512)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !677, line: 286, baseType: !1076)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !677, line: 286, size: 64, elements: !1077)
!1077 = !{!1078}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1076, file: !677, line: 286, baseType: !1079, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !962, line: 18, baseType: !285)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !943, file: !687, line: 416, baseType: !712, size: 32, offset: 576)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !943, file: !687, line: 428, baseType: !712, size: 32, offset: 608)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !943, file: !687, line: 437, baseType: !712, size: 32, offset: 640)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !943, file: !687, line: 447, baseType: !712, size: 32, offset: 672)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !943, file: !687, line: 450, baseType: !736, size: 64, offset: 704)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !943, file: !687, line: 452, baseType: !135, size: 32, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !943, file: !687, line: 454, baseType: !194, offset: 800)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !943, file: !687, line: 457, baseType: !732, size: 256, offset: 832)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !943, file: !687, line: 459, baseType: !167, size: 128, offset: 1088)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !943, file: !687, line: 466, baseType: !285, size: 64, offset: 1216)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !943, file: !687, line: 467, baseType: !285, size: 64, offset: 1280)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !943, file: !687, line: 469, baseType: !285, size: 64, offset: 1344)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !943, file: !687, line: 470, baseType: !285, size: 64, offset: 1408)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !943, file: !687, line: 471, baseType: !738, size: 64, offset: 1472)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !943, file: !687, line: 472, baseType: !285, size: 64, offset: 1536)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !943, file: !687, line: 473, baseType: !285, size: 64, offset: 1600)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !943, file: !687, line: 474, baseType: !285, size: 64, offset: 1664)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !943, file: !687, line: 475, baseType: !285, size: 64, offset: 1728)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !943, file: !687, line: 477, baseType: !194, offset: 1792)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !943, file: !687, line: 478, baseType: !285, size: 64, offset: 1792)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !943, file: !687, line: 478, baseType: !285, size: 64, offset: 1856)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !943, file: !687, line: 478, baseType: !285, size: 64, offset: 1920)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !943, file: !687, line: 478, baseType: !285, size: 64, offset: 1984)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !943, file: !687, line: 479, baseType: !285, size: 64, offset: 2048)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !943, file: !687, line: 479, baseType: !285, size: 64, offset: 2112)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !943, file: !687, line: 479, baseType: !285, size: 64, offset: 2176)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !943, file: !687, line: 480, baseType: !285, size: 64, offset: 2240)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !943, file: !687, line: 480, baseType: !285, size: 64, offset: 2304)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !943, file: !687, line: 480, baseType: !285, size: 64, offset: 2368)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !943, file: !687, line: 480, baseType: !285, size: 64, offset: 2432)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !943, file: !687, line: 482, baseType: !1111, size: 2816, offset: 2496)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 2816, elements: !1112)
!1112 = !{!1113}
!1113 = !DISubrange(count: 44)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !943, file: !687, line: 488, baseType: !1115, size: 256, offset: 5312)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1116, line: 60, size: 256, elements: !1117)
!1116 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1117 = !{!1118}
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1115, file: !1116, line: 61, baseType: !1119, size: 256)
!1119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !736, size: 256, elements: !1120)
!1120 = !{!1121}
!1121 = !DISubrange(count: 4)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !943, file: !687, line: 490, baseType: !1123, size: 64, offset: 5568)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !687, line: 490, flags: DIFlagFwdDecl)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !943, file: !687, line: 493, baseType: !1126, size: 896, offset: 5632)
!1126 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1127, line: 53, baseType: !1128)
!1127 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1127, line: 13, size: 896, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1136, !1137, !1144, !1145, !1165, !1166, !1167}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1128, file: !1127, line: 18, baseType: !382, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1128, file: !1127, line: 28, baseType: !738, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1128, file: !1127, line: 31, baseType: !732, size: 256, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1128, file: !1127, line: 32, baseType: !1134, size: 64, offset: 384)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1127, line: 32, flags: DIFlagFwdDecl)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1128, file: !1127, line: 37, baseType: !277, size: 16, offset: 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1128, file: !1127, line: 40, baseType: !1138, size: 192, offset: 512)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1139, line: 53, size: 192, elements: !1140)
!1139 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1140 = !{!1141, !1142, !1143}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1138, file: !1139, line: 54, baseType: !736, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1138, file: !1139, line: 55, baseType: !194, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1138, file: !1139, line: 59, baseType: !167, size: 128, offset: 64)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1128, file: !1127, line: 41, baseType: !162, size: 64, offset: 704)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1128, file: !1127, line: 42, baseType: !1146, size: 64, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1148)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1149, line: 13, size: 896, elements: !1150)
!1149 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1150 = !{!1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164}
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1148, file: !1149, line: 14, baseType: !162, size: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1148, file: !1149, line: 15, baseType: !285, size: 64, offset: 64)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1148, file: !1149, line: 17, baseType: !285, size: 64, offset: 128)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1148, file: !1149, line: 17, baseType: !285, size: 64, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1148, file: !1149, line: 19, baseType: !270, size: 64, offset: 256)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1148, file: !1149, line: 21, baseType: !270, size: 64, offset: 320)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1148, file: !1149, line: 22, baseType: !270, size: 64, offset: 384)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1148, file: !1149, line: 23, baseType: !270, size: 64, offset: 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1148, file: !1149, line: 24, baseType: !270, size: 64, offset: 512)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1148, file: !1149, line: 25, baseType: !270, size: 64, offset: 576)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1148, file: !1149, line: 26, baseType: !270, size: 64, offset: 640)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1148, file: !1149, line: 27, baseType: !270, size: 64, offset: 704)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1148, file: !1149, line: 28, baseType: !270, size: 64, offset: 768)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1148, file: !1149, line: 29, baseType: !270, size: 64, offset: 832)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1128, file: !1127, line: 44, baseType: !712, size: 32, offset: 832)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1128, file: !1127, line: 50, baseType: !824, size: 16, offset: 864)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1128, file: !1127, line: 51, baseType: !1168, size: 16, offset: 880)
!1168 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !377, line: 18, baseType: !1169)
!1169 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !379, line: 23, baseType: !1170)
!1170 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !943, file: !687, line: 495, baseType: !285, size: 64, offset: 6528)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !943, file: !687, line: 497, baseType: !1173, size: 64, offset: 6592)
!1173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1174, size: 64)
!1174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !687, line: 381, size: 384, elements: !1175)
!1175 = !{!1176, !1177, !2278}
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1174, file: !687, line: 382, baseType: !712, size: 32)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1174, file: !687, line: 383, baseType: !1178, size: 128, offset: 64)
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !687, line: 376, size: 128, elements: !1179)
!1179 = !{!1180, !2276}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1178, file: !687, line: 377, baseType: !1181, size: 64)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1183, line: 640, size: 48640, elements: !1184)
!1183 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1184 = !{!1185, !1191, !1193, !1194, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1211, !1229, !1240, !1325, !1326, !1327, !1338, !1339, !1341, !1342, !1343, !1344, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1423, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1461, !1463, !1464, !1465, !1477, !1478, !1479, !1480, !1481, !1482, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1506, !1511, !1695, !1696, !1697, !1698, !1702, !1705, !1708, !1711, !1714, !1717, !1818, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1864, !1865, !1866, !1867, !1868, !1873, !1874, !1875, !1878, !1879, !1882, !1885, !1888, !1891, !1934, !1937, !1938, !2017, !2018, !2021, !2022, !2025, !2026, !2027, !2031, !2032, !2033, !2046, !2047, !2048, !2058, !2063, !2066, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1182, file: !1183, line: 646, baseType: !1186, size: 128)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1187, line: 56, size: 128, elements: !1188)
!1187 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1188 = !{!1189, !1190}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1186, file: !1187, line: 57, baseType: !285, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1186, file: !1187, line: 58, baseType: !376, size: 32, offset: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1182, file: !1183, line: 649, baseType: !1192, size: 64, offset: 128)
!1192 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !270)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1182, file: !1183, line: 657, baseType: !162, size: 64, offset: 192)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1182, file: !1183, line: 658, baseType: !1195, size: 32, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1196, line: 113, baseType: !1197)
!1196 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1196, line: 111, size: 32, elements: !1198)
!1198 = !{!1199}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1197, file: !1196, line: 112, baseType: !712, size: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1182, file: !1183, line: 660, baseType: !7, size: 32, offset: 288)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1182, file: !1183, line: 661, baseType: !7, size: 32, offset: 320)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1182, file: !1183, line: 684, baseType: !135, size: 32, offset: 352)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1182, file: !1183, line: 686, baseType: !135, size: 32, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1182, file: !1183, line: 687, baseType: !135, size: 32, offset: 416)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1182, file: !1183, line: 688, baseType: !135, size: 32, offset: 448)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1182, file: !1183, line: 689, baseType: !7, size: 32, offset: 480)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1182, file: !1183, line: 691, baseType: !1208, size: 64, offset: 512)
!1208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1209, size: 64)
!1209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1210)
!1210 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1183, line: 691, flags: DIFlagFwdDecl)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1182, file: !1183, line: 692, baseType: !1212, size: 832, offset: 576)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1183, line: 451, size: 832, elements: !1213)
!1213 = !{!1214, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1212, file: !1183, line: 453, baseType: !1215, size: 128)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1183, line: 325, size: 128, elements: !1216)
!1216 = !{!1217, !1218}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1215, file: !1183, line: 326, baseType: !285, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1215, file: !1183, line: 327, baseType: !376, size: 32, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1212, file: !1183, line: 454, baseType: !725, size: 192, align: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1212, file: !1183, line: 455, baseType: !167, size: 128, offset: 320)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1212, file: !1183, line: 456, baseType: !7, size: 32, offset: 448)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1212, file: !1183, line: 458, baseType: !382, size: 64, offset: 512)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1212, file: !1183, line: 459, baseType: !382, size: 64, offset: 576)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1212, file: !1183, line: 460, baseType: !382, size: 64, offset: 640)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1212, file: !1183, line: 461, baseType: !382, size: 64, offset: 704)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1212, file: !1183, line: 463, baseType: !382, size: 64, offset: 768)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1212, file: !1183, line: 465, baseType: !1228, offset: 832)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1183, line: 415, elements: !208)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1182, file: !1183, line: 693, baseType: !1230, size: 384, offset: 1408)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1183, line: 489, size: 384, elements: !1231)
!1231 = !{!1232, !1233, !1234, !1235, !1236, !1237, !1238}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1230, file: !1183, line: 490, baseType: !167, size: 128)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1230, file: !1183, line: 491, baseType: !285, size: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1230, file: !1183, line: 492, baseType: !285, size: 64, offset: 192)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1230, file: !1183, line: 493, baseType: !7, size: 32, offset: 256)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1230, file: !1183, line: 494, baseType: !277, size: 16, offset: 288)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1230, file: !1183, line: 495, baseType: !277, size: 16, offset: 304)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1230, file: !1183, line: 497, baseType: !1239, size: 64, offset: 320)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1182, file: !1183, line: 697, baseType: !1241, size: 1792, offset: 1792)
!1241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1183, line: 507, size: 1792, elements: !1242)
!1242 = !{!1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1322, !1323}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1241, file: !1183, line: 508, baseType: !725, size: 192, align: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1241, file: !1183, line: 515, baseType: !382, size: 64, offset: 192)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1241, file: !1183, line: 516, baseType: !382, size: 64, offset: 256)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1241, file: !1183, line: 517, baseType: !382, size: 64, offset: 320)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1241, file: !1183, line: 518, baseType: !382, size: 64, offset: 384)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1241, file: !1183, line: 519, baseType: !382, size: 64, offset: 448)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1241, file: !1183, line: 526, baseType: !742, size: 64, offset: 512)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1241, file: !1183, line: 527, baseType: !382, size: 64, offset: 576)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1241, file: !1183, line: 528, baseType: !7, size: 32, offset: 640)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1241, file: !1183, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1241, file: !1183, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1241, file: !1183, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1241, file: !1183, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1241, file: !1183, line: 563, baseType: !1257, size: 512, offset: 704)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !26, line: 118, size: 512, elements: !1258)
!1258 = !{!1259, !1267, !1268, !1273, !1316, !1319, !1320, !1321}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1257, file: !26, line: 119, baseType: !1260, size: 256)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1261, line: 9, size: 256, elements: !1262)
!1261 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1262 = !{!1263, !1264}
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1260, file: !1261, line: 10, baseType: !725, size: 192, align: 64)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1260, file: !1261, line: 11, baseType: !1265, size: 64, offset: 192)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1266, line: 29, baseType: !742)
!1266 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1257, file: !26, line: 120, baseType: !1265, size: 64, offset: 256)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1257, file: !26, line: 121, baseType: !1269, size: 64, offset: 320)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{!25, !1272}
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1257, file: !26, line: 122, baseType: !1274, size: 64, offset: 384)
!1274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !26, line: 159, size: 512, align: 512, elements: !1276)
!1276 = !{!1277, !1297, !1298, !1301, !1306, !1307, !1311, !1315}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1275, file: !26, line: 160, baseType: !1278, size: 64)
!1278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1279, size: 64)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !26, line: 214, size: 4608, align: 512, elements: !1280)
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1279, file: !26, line: 215, baseType: !745)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1279, file: !26, line: 216, baseType: !7, size: 32)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1279, file: !26, line: 217, baseType: !7, size: 32, offset: 32)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1279, file: !26, line: 218, baseType: !7, size: 32, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1279, file: !26, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1279, file: !26, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1279, file: !26, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1279, file: !26, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1279, file: !26, line: 233, baseType: !1265, size: 64, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1279, file: !26, line: 234, baseType: !1272, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1279, file: !26, line: 235, baseType: !1265, size: 64, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1279, file: !26, line: 236, baseType: !1272, size: 64, offset: 320)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1279, file: !26, line: 237, baseType: !1294, size: 4096, offset: 512)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1275, size: 4096, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 8)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1275, file: !26, line: 161, baseType: !7, size: 32, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1275, file: !26, line: 162, baseType: !1299, size: 32, offset: 96)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !168, line: 27, baseType: !1300)
!1300 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !268, line: 96, baseType: !135)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1275, file: !26, line: 163, baseType: !1302, size: 32, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !349, line: 276, baseType: !1303)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !349, line: 276, size: 32, elements: !1304)
!1304 = !{!1305}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1303, file: !349, line: 276, baseType: !353, size: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1275, file: !26, line: 164, baseType: !1272, size: 64, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1275, file: !26, line: 165, baseType: !1308, size: 128, offset: 256)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1261, line: 14, size: 128, elements: !1309)
!1309 = !{!1310}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1308, file: !1261, line: 15, baseType: !717, size: 128)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1275, file: !26, line: 166, baseType: !1312, size: 64, offset: 384)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!1265}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1275, file: !26, line: 167, baseType: !1265, size: 64, offset: 448)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1257, file: !26, line: 123, baseType: !1317, size: 8, offset: 448)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !377, line: 17, baseType: !1318)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !379, line: 21, baseType: !388)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1257, file: !26, line: 124, baseType: !1317, size: 8, offset: 456)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1257, file: !26, line: 125, baseType: !1317, size: 8, offset: 464)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1257, file: !26, line: 126, baseType: !1317, size: 8, offset: 472)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1241, file: !1183, line: 572, baseType: !1257, size: 512, offset: 1216)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1241, file: !1183, line: 580, baseType: !1324, size: 64, offset: 1728)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1182, file: !1183, line: 721, baseType: !7, size: 32, offset: 3584)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1182, file: !1183, line: 722, baseType: !135, size: 32, offset: 3616)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1182, file: !1183, line: 723, baseType: !1328, size: 64, offset: 3648)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1331, line: 17, baseType: !1332)
!1331 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1331, line: 17, size: 64, elements: !1333)
!1333 = !{!1334}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1332, file: !1331, line: 17, baseType: !1335, size: 64)
!1335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, size: 64, elements: !1336)
!1336 = !{!1337}
!1337 = !DISubrange(count: 1)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1182, file: !1183, line: 724, baseType: !1330, size: 64, offset: 3712)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1182, file: !1183, line: 749, baseType: !1340, offset: 3776)
!1340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1183, line: 290, elements: !208)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1182, file: !1183, line: 751, baseType: !167, size: 128, offset: 3776)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1182, file: !1183, line: 757, baseType: !939, size: 64, offset: 3904)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1182, file: !1183, line: 758, baseType: !939, size: 64, offset: 3968)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1182, file: !1183, line: 761, baseType: !1345, size: 320, offset: 4032)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1116, line: 34, size: 320, elements: !1346)
!1346 = !{!1347, !1348}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1345, file: !1116, line: 35, baseType: !382, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1345, file: !1116, line: 36, baseType: !1349, size: 256, offset: 64)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !946, size: 256, elements: !1120)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1182, file: !1183, line: 766, baseType: !135, size: 32, offset: 4352)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1182, file: !1183, line: 767, baseType: !135, size: 32, offset: 4384)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1182, file: !1183, line: 768, baseType: !135, size: 32, offset: 4416)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1182, file: !1183, line: 770, baseType: !135, size: 32, offset: 4448)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1182, file: !1183, line: 772, baseType: !285, size: 64, offset: 4480)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1182, file: !1183, line: 775, baseType: !7, size: 32, offset: 4544)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1182, file: !1183, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1182, file: !1183, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1182, file: !1183, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1182, file: !1183, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1182, file: !1183, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1182, file: !1183, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1182, file: !1183, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1182, file: !1183, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1182, file: !1183, line: 831, baseType: !285, size: 64, offset: 4672)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1182, file: !1183, line: 833, baseType: !1366, size: 384, offset: 4736)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !31, line: 25, size: 384, elements: !1367)
!1367 = !{!1368, !1373}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1366, file: !31, line: 26, baseType: !1369, size: 64)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1370, size: 64)
!1370 = !DISubroutineType(types: !1371)
!1371 = !{!270, !1372}
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_member, scope: !1366, file: !31, line: 27, baseType: !1374, size: 320, offset: 64)
!1374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1366, file: !31, line: 27, size: 320, elements: !1375)
!1375 = !{!1376, !1386, !1413}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1374, file: !31, line: 36, baseType: !1377, size: 320)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1374, file: !31, line: 29, size: 320, elements: !1378)
!1378 = !{!1379, !1381, !1382, !1383, !1384, !1385}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1377, file: !31, line: 30, baseType: !1380, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1377, file: !31, line: 31, baseType: !376, size: 32, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1377, file: !31, line: 32, baseType: !376, size: 32, offset: 96)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1377, file: !31, line: 33, baseType: !376, size: 32, offset: 128)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1377, file: !31, line: 34, baseType: !382, size: 64, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1377, file: !31, line: 35, baseType: !1380, size: 64, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1374, file: !31, line: 46, baseType: !1387, size: 192)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1374, file: !31, line: 38, size: 192, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1412}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1387, file: !31, line: 39, baseType: !1299, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1387, file: !31, line: 40, baseType: !30, size: 32, offset: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, scope: !1387, file: !31, line: 41, baseType: !1392, size: 64, offset: 64)
!1392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1387, file: !31, line: 41, size: 64, elements: !1393)
!1393 = !{!1394, !1402}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1392, file: !31, line: 42, baseType: !1395, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1397, line: 7, size: 128, elements: !1398)
!1397 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1398 = !{!1399, !1401}
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1396, file: !1397, line: 8, baseType: !1400, size: 64)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !268, line: 93, baseType: !494)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1396, file: !1397, line: 9, baseType: !494, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1392, file: !31, line: 43, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1405, line: 7, size: 64, elements: !1406)
!1405 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1406 = !{!1407, !1411}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1404, file: !1405, line: 8, baseType: !1408, size: 32)
!1408 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1405, line: 5, baseType: !1409)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !377, line: 20, baseType: !1410)
!1410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !379, line: 26, baseType: !135)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1404, file: !1405, line: 9, baseType: !1409, size: 32, offset: 32)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1387, file: !31, line: 45, baseType: !382, size: 64, offset: 128)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1374, file: !31, line: 54, baseType: !1414, size: 256)
!1414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1374, file: !31, line: 48, size: 256, elements: !1415)
!1415 = !{!1416, !1419, !1420, !1421, !1422}
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1414, file: !31, line: 49, baseType: !1417, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !31, line: 14, flags: DIFlagFwdDecl)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1414, file: !31, line: 50, baseType: !135, size: 32, offset: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1414, file: !31, line: 51, baseType: !135, size: 32, offset: 96)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1414, file: !31, line: 52, baseType: !285, size: 64, offset: 128)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1414, file: !31, line: 53, baseType: !285, size: 64, offset: 192)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1182, file: !1183, line: 835, baseType: !1424, size: 32, offset: 5120)
!1424 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !168, line: 22, baseType: !1425)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !268, line: 28, baseType: !135)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1182, file: !1183, line: 836, baseType: !1424, size: 32, offset: 5152)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1182, file: !1183, line: 840, baseType: !285, size: 64, offset: 5184)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1182, file: !1183, line: 849, baseType: !1181, size: 64, offset: 5248)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1182, file: !1183, line: 852, baseType: !1181, size: 64, offset: 5312)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1182, file: !1183, line: 857, baseType: !167, size: 128, offset: 5376)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1182, file: !1183, line: 858, baseType: !167, size: 128, offset: 5504)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1182, file: !1183, line: 859, baseType: !1181, size: 64, offset: 5632)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1182, file: !1183, line: 867, baseType: !167, size: 128, offset: 5696)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1182, file: !1183, line: 868, baseType: !167, size: 128, offset: 5824)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1182, file: !1183, line: 871, baseType: !1436, size: 64, offset: 5952)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !59, line: 59, size: 768, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1444, !1445, !1452, !1453}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1437, file: !59, line: 61, baseType: !1195, size: 32)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1437, file: !59, line: 62, baseType: !7, size: 32, offset: 32)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1437, file: !59, line: 63, baseType: !194, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1437, file: !59, line: 65, baseType: !1443, size: 256, offset: 64)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !599, size: 256, elements: !1120)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1437, file: !59, line: 66, baseType: !599, size: 64, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1437, file: !59, line: 68, baseType: !1446, size: 128, offset: 384)
!1446 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1447, line: 40, baseType: !1448)
!1447 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1447, line: 36, size: 128, elements: !1449)
!1449 = !{!1450, !1451}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1448, file: !1447, line: 37, baseType: !194)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1448, file: !1447, line: 38, baseType: !167, size: 128)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1437, file: !59, line: 69, baseType: !326, size: 128, align: 64, offset: 512)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1437, file: !59, line: 70, baseType: !1454, size: 128, offset: 640)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1455, size: 128, elements: !1336)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !59, line: 54, size: 128, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1455, file: !59, line: 55, baseType: !135, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1455, file: !59, line: 56, baseType: !1459, size: 64, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !59, line: 56, flags: DIFlagFwdDecl)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1182, file: !1183, line: 872, baseType: !1462, size: 512, offset: 6016)
!1462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !603, size: 512, elements: !1120)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1182, file: !1183, line: 873, baseType: !167, size: 128, offset: 6528)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1182, file: !1183, line: 874, baseType: !167, size: 128, offset: 6656)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1182, file: !1183, line: 876, baseType: !1466, size: 64, offset: 6784)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1468, line: 26, size: 192, elements: !1469)
!1468 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1469 = !{!1470, !1471}
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1467, file: !1468, line: 27, baseType: !7, size: 32)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1467, file: !1468, line: 28, baseType: !1472, size: 128, offset: 64)
!1472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1473, line: 43, size: 128, elements: !1474)
!1473 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1474 = !{!1475, !1476}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1472, file: !1473, line: 44, baseType: !745)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1472, file: !1473, line: 45, baseType: !167, size: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1182, file: !1183, line: 879, baseType: !669, size: 64, offset: 6848)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1182, file: !1183, line: 882, baseType: !669, size: 64, offset: 6912)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1182, file: !1183, line: 884, baseType: !382, size: 64, offset: 6976)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1182, file: !1183, line: 885, baseType: !382, size: 64, offset: 7040)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1182, file: !1183, line: 890, baseType: !382, size: 64, offset: 7104)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1182, file: !1183, line: 891, baseType: !1483, size: 128, offset: 7168)
!1483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1183, line: 242, size: 128, elements: !1484)
!1484 = !{!1485, !1486, !1487}
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1483, file: !1183, line: 244, baseType: !382, size: 64)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1483, file: !1183, line: 245, baseType: !382, size: 64, offset: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1483, file: !1183, line: 246, baseType: !745, offset: 128)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1182, file: !1183, line: 900, baseType: !285, size: 64, offset: 7296)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1182, file: !1183, line: 901, baseType: !285, size: 64, offset: 7360)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1182, file: !1183, line: 904, baseType: !382, size: 64, offset: 7424)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1182, file: !1183, line: 907, baseType: !382, size: 64, offset: 7488)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1182, file: !1183, line: 910, baseType: !285, size: 64, offset: 7552)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1182, file: !1183, line: 911, baseType: !285, size: 64, offset: 7616)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1182, file: !1183, line: 914, baseType: !1495, size: 640, offset: 7680)
!1495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1496, line: 123, size: 640, elements: !1497)
!1496 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1497 = !{!1498, !1504, !1505}
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1495, file: !1496, line: 124, baseType: !1499, size: 576)
!1499 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1500, size: 576, elements: !236)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1496, line: 108, size: 192, elements: !1501)
!1501 = !{!1502, !1503}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1500, file: !1496, line: 109, baseType: !382, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1500, file: !1496, line: 110, baseType: !1308, size: 128, offset: 64)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1495, file: !1496, line: 125, baseType: !7, size: 32, offset: 576)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1495, file: !1496, line: 126, baseType: !7, size: 32, offset: 608)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1182, file: !1183, line: 917, baseType: !1507, size: 192, offset: 8320)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1496, line: 134, size: 192, elements: !1508)
!1508 = !{!1509, !1510}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1507, file: !1496, line: 135, baseType: !326, size: 128, align: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1507, file: !1496, line: 136, baseType: !7, size: 32, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1182, file: !1183, line: 923, baseType: !1512, size: 64, offset: 8512)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1514)
!1514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1515, line: 111, size: 1280, elements: !1516)
!1515 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1536, !1537, !1538, !1539, !1540, !1541, !1648, !1649, !1650, !1651, !1677, !1680, !1690}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1514, file: !1515, line: 112, baseType: !712, size: 32)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1514, file: !1515, line: 120, baseType: !396, size: 32, offset: 32)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1514, file: !1515, line: 121, baseType: !404, size: 32, offset: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1514, file: !1515, line: 122, baseType: !396, size: 32, offset: 96)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1514, file: !1515, line: 123, baseType: !404, size: 32, offset: 128)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1514, file: !1515, line: 124, baseType: !396, size: 32, offset: 160)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1514, file: !1515, line: 125, baseType: !404, size: 32, offset: 192)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1514, file: !1515, line: 126, baseType: !396, size: 32, offset: 224)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1514, file: !1515, line: 127, baseType: !404, size: 32, offset: 256)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1514, file: !1515, line: 128, baseType: !7, size: 32, offset: 288)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1514, file: !1515, line: 129, baseType: !1528, size: 64, offset: 320)
!1528 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1529, line: 26, baseType: !1530)
!1529 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1529, line: 24, size: 64, elements: !1531)
!1531 = !{!1532}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1530, file: !1529, line: 25, baseType: !1533, size: 64)
!1533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !378, size: 64, elements: !1534)
!1534 = !{!1535}
!1535 = !DISubrange(count: 2)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1514, file: !1515, line: 130, baseType: !1528, size: 64, offset: 384)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1514, file: !1515, line: 131, baseType: !1528, size: 64, offset: 448)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1514, file: !1515, line: 132, baseType: !1528, size: 64, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1514, file: !1515, line: 133, baseType: !1528, size: 64, offset: 576)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1514, file: !1515, line: 135, baseType: !388, size: 8, offset: 640)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1514, file: !1515, line: 137, baseType: !1542, size: 64, offset: 704)
!1542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1543, size: 64)
!1543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1544, line: 189, size: 1664, elements: !1545)
!1544 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1545 = !{!1546, !1547, !1550, !1555, !1556, !1559, !1560, !1565, !1566, !1567, !1568, !1570, !1571, !1572, !1573, !1574, !1612, !1633}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1543, file: !1544, line: 190, baseType: !1195, size: 32)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1543, file: !1544, line: 191, baseType: !1548, size: 32, offset: 32)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1544, line: 28, baseType: !1549)
!1549 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !168, line: 98, baseType: !1409)
!1550 = !DIDerivedType(tag: DW_TAG_member, scope: !1543, file: !1544, line: 192, baseType: !1551, size: 192, offset: 64)
!1551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1543, file: !1544, line: 192, size: 192, elements: !1552)
!1552 = !{!1553, !1554}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1551, file: !1544, line: 193, baseType: !167, size: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1551, file: !1544, line: 194, baseType: !725, size: 192, align: 64)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1543, file: !1544, line: 199, baseType: !732, size: 256, offset: 256)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1543, file: !1544, line: 200, baseType: !1557, size: 64, offset: 512)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1544, line: 200, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1543, file: !1544, line: 201, baseType: !162, size: 64, offset: 576)
!1560 = !DIDerivedType(tag: DW_TAG_member, scope: !1543, file: !1544, line: 202, baseType: !1561, size: 64, offset: 640)
!1561 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1543, file: !1544, line: 202, size: 64, elements: !1562)
!1562 = !{!1563, !1564}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1561, file: !1544, line: 203, baseType: !500, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1561, file: !1544, line: 204, baseType: !500, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1543, file: !1544, line: 206, baseType: !500, size: 64, offset: 704)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1543, file: !1544, line: 207, baseType: !396, size: 32, offset: 768)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1543, file: !1544, line: 208, baseType: !404, size: 32, offset: 800)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1543, file: !1544, line: 209, baseType: !1569, size: 32, offset: 832)
!1569 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1544, line: 31, baseType: !520)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1543, file: !1544, line: 210, baseType: !277, size: 16, offset: 864)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1543, file: !1544, line: 211, baseType: !277, size: 16, offset: 880)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1543, file: !1544, line: 215, baseType: !1170, size: 16, offset: 896)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1543, file: !1544, line: 222, baseType: !285, size: 64, offset: 960)
!1574 = !DIDerivedType(tag: DW_TAG_member, scope: !1543, file: !1544, line: 239, baseType: !1575, size: 320, offset: 1024)
!1575 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1543, file: !1544, line: 239, size: 320, elements: !1576)
!1576 = !{!1577, !1604}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1575, file: !1544, line: 240, baseType: !1578, size: 320)
!1578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1544, line: 108, size: 320, elements: !1579)
!1579 = !{!1580, !1581, !1593, !1596, !1603}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1578, file: !1544, line: 110, baseType: !285, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, scope: !1578, file: !1544, line: 111, baseType: !1582, size: 64, offset: 64)
!1582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1578, file: !1544, line: 111, size: 64, elements: !1583)
!1583 = !{!1584, !1592}
!1584 = !DIDerivedType(tag: DW_TAG_member, scope: !1582, file: !1544, line: 112, baseType: !1585, size: 64)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1582, file: !1544, line: 112, size: 64, elements: !1586)
!1586 = !{!1587, !1588}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1585, file: !1544, line: 114, baseType: !824, size: 16)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1585, file: !1544, line: 115, baseType: !1589, size: 48, offset: 16)
!1589 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 48, elements: !1590)
!1590 = !{!1591}
!1591 = !DISubrange(count: 6)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1582, file: !1544, line: 121, baseType: !285, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1578, file: !1544, line: 123, baseType: !1594, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1544, line: 96, flags: DIFlagFwdDecl)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1578, file: !1544, line: 124, baseType: !1597, size: 64, offset: 192)
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1544, line: 102, size: 192, elements: !1599)
!1599 = !{!1600, !1601, !1602}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1598, file: !1544, line: 103, baseType: !326, size: 128, align: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1598, file: !1544, line: 104, baseType: !1195, size: 32, offset: 128)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1598, file: !1544, line: 105, baseType: !451, size: 8, offset: 160)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1578, file: !1544, line: 125, baseType: !182, size: 64, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_member, scope: !1575, file: !1544, line: 241, baseType: !1605, size: 320)
!1605 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1575, file: !1544, line: 241, size: 320, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610, !1611}
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1605, file: !1544, line: 242, baseType: !285, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1605, file: !1544, line: 243, baseType: !285, size: 64, offset: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1605, file: !1544, line: 244, baseType: !1594, size: 64, offset: 128)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1605, file: !1544, line: 245, baseType: !1597, size: 64, offset: 192)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1605, file: !1544, line: 246, baseType: !235, size: 64, offset: 256)
!1612 = !DIDerivedType(tag: DW_TAG_member, scope: !1543, file: !1544, line: 254, baseType: !1613, size: 256, offset: 1344)
!1613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1543, file: !1544, line: 254, size: 256, elements: !1614)
!1614 = !{!1615, !1621}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1613, file: !1544, line: 255, baseType: !1616, size: 256)
!1616 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1544, line: 128, size: 256, elements: !1617)
!1617 = !{!1618, !1619}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1616, file: !1544, line: 129, baseType: !162, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1616, file: !1544, line: 130, baseType: !1620, size: 256)
!1620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !162, size: 256, elements: !1120)
!1621 = !DIDerivedType(tag: DW_TAG_member, scope: !1613, file: !1544, line: 256, baseType: !1622, size: 256)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1613, file: !1544, line: 256, size: 256, elements: !1623)
!1623 = !{!1624, !1625}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1622, file: !1544, line: 258, baseType: !167, size: 128)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1622, file: !1544, line: 259, baseType: !1626, size: 128, offset: 128)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1627, line: 22, size: 128, elements: !1628)
!1627 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1628 = !{!1629, !1632}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1626, file: !1627, line: 23, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1627, line: 23, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1626, file: !1627, line: 24, baseType: !285, size: 64, offset: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1543, file: !1544, line: 274, baseType: !1634, size: 64, offset: 1600)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1544, line: 170, size: 192, elements: !1636)
!1636 = !{!1637, !1646, !1647}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1635, file: !1544, line: 171, baseType: !1638, size: 64)
!1638 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1544, line: 165, baseType: !1639)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!135, !1542, !1642, !1644, !1542}
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1595)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1616)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1635, file: !1544, line: 172, baseType: !1542, size: 64, offset: 64)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1635, file: !1544, line: 173, baseType: !1594, size: 64, offset: 128)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1514, file: !1515, line: 138, baseType: !1542, size: 64, offset: 768)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1514, file: !1515, line: 139, baseType: !1542, size: 64, offset: 832)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1514, file: !1515, line: 140, baseType: !1542, size: 64, offset: 896)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1514, file: !1515, line: 145, baseType: !1652, size: 64, offset: 960)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1654, line: 13, size: 896, elements: !1655)
!1654 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1655 = !{!1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1653, file: !1654, line: 14, baseType: !1195, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1653, file: !1654, line: 15, baseType: !712, size: 32, offset: 32)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1653, file: !1654, line: 16, baseType: !712, size: 32, offset: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1653, file: !1654, line: 21, baseType: !736, size: 64, offset: 128)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1653, file: !1654, line: 27, baseType: !285, size: 64, offset: 192)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1653, file: !1654, line: 28, baseType: !285, size: 64, offset: 256)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1653, file: !1654, line: 29, baseType: !736, size: 64, offset: 320)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1653, file: !1654, line: 32, baseType: !603, size: 128, offset: 384)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1653, file: !1654, line: 33, baseType: !396, size: 32, offset: 512)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1653, file: !1654, line: 37, baseType: !736, size: 64, offset: 576)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1653, file: !1654, line: 44, baseType: !1667, size: 256, offset: 640)
!1667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1668, line: 15, size: 256, elements: !1669)
!1668 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1669 = !{!1670, !1671, !1672, !1673, !1674, !1675, !1676}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1667, file: !1668, line: 16, baseType: !745)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1667, file: !1668, line: 18, baseType: !135, size: 32)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1667, file: !1668, line: 19, baseType: !135, size: 32, offset: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1667, file: !1668, line: 20, baseType: !135, size: 32, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1667, file: !1668, line: 21, baseType: !135, size: 32, offset: 96)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1667, file: !1668, line: 22, baseType: !285, size: 64, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1667, file: !1668, line: 23, baseType: !285, size: 64, offset: 192)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1514, file: !1515, line: 146, baseType: !1678, size: 64, offset: 1024)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !397, line: 18, flags: DIFlagFwdDecl)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1514, file: !1515, line: 147, baseType: !1681, size: 64, offset: 1088)
!1681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1682, size: 64)
!1682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1515, line: 25, size: 64, elements: !1683)
!1683 = !{!1684, !1685, !1686}
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1682, file: !1515, line: 26, baseType: !712, size: 32)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1682, file: !1515, line: 27, baseType: !135, size: 32, offset: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1682, file: !1515, line: 28, baseType: !1687, offset: 64)
!1687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !404, elements: !1688)
!1688 = !{!1689}
!1689 = !DISubrange(count: 0)
!1690 = !DIDerivedType(tag: DW_TAG_member, scope: !1514, file: !1515, line: 149, baseType: !1691, size: 128, offset: 1152)
!1691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1514, file: !1515, line: 149, size: 128, elements: !1692)
!1692 = !{!1693, !1694}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1691, file: !1515, line: 150, baseType: !135, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1691, file: !1515, line: 151, baseType: !326, size: 128, align: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1182, file: !1183, line: 926, baseType: !1512, size: 64, offset: 8576)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1182, file: !1183, line: 929, baseType: !1512, size: 64, offset: 8640)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1182, file: !1183, line: 933, baseType: !1542, size: 64, offset: 8704)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1182, file: !1183, line: 943, baseType: !1699, size: 128, offset: 8768)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 128, elements: !1700)
!1700 = !{!1701}
!1701 = !DISubrange(count: 16)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1182, file: !1183, line: 945, baseType: !1703, size: 64, offset: 8896)
!1703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1704, size: 64)
!1704 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1183, line: 49, flags: DIFlagFwdDecl)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1182, file: !1183, line: 956, baseType: !1706, size: 64, offset: 8960)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1183, line: 45, flags: DIFlagFwdDecl)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1182, file: !1183, line: 959, baseType: !1709, size: 64, offset: 9024)
!1709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1710, size: 64)
!1710 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1183, line: 959, flags: DIFlagFwdDecl)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1182, file: !1183, line: 962, baseType: !1712, size: 64, offset: 9088)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1183, line: 66, flags: DIFlagFwdDecl)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1182, file: !1183, line: 966, baseType: !1715, size: 64, offset: 9152)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1183, line: 50, flags: DIFlagFwdDecl)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1182, file: !1183, line: 969, baseType: !1718, size: 64, offset: 9216)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1720, line: 82, size: 7296, elements: !1721)
!1720 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1721 = !{!1722, !1723, !1724, !1725, !1726, !1727, !1728, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1757, !1766, !1767, !1769, !1770, !1771, !1774, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1804, !1805, !1812, !1813, !1814, !1815, !1816, !1817}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1719, file: !1720, line: 83, baseType: !1195, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1719, file: !1720, line: 84, baseType: !712, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1719, file: !1720, line: 85, baseType: !135, size: 32, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1719, file: !1720, line: 86, baseType: !167, size: 128, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1719, file: !1720, line: 88, baseType: !1446, size: 128, offset: 256)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1719, file: !1720, line: 91, baseType: !1181, size: 64, offset: 384)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1719, file: !1720, line: 94, baseType: !1729, size: 192, offset: 448)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1730, line: 30, size: 192, elements: !1731)
!1730 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1731 = !{!1732, !1733}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1729, file: !1730, line: 31, baseType: !167, size: 128)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1729, file: !1730, line: 32, baseType: !1734, size: 64, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1735, line: 25, baseType: !1736)
!1735 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1735, line: 23, size: 64, elements: !1737)
!1737 = !{!1738}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1736, file: !1735, line: 24, baseType: !1335, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1719, file: !1720, line: 97, baseType: !599, size: 64, offset: 640)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1719, file: !1720, line: 100, baseType: !135, size: 32, offset: 704)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1719, file: !1720, line: 106, baseType: !135, size: 32, offset: 736)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1719, file: !1720, line: 107, baseType: !1181, size: 64, offset: 768)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1719, file: !1720, line: 110, baseType: !135, size: 32, offset: 832)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1719, file: !1720, line: 111, baseType: !7, size: 32, offset: 864)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1719, file: !1720, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1719, file: !1720, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1719, file: !1720, line: 128, baseType: !135, size: 32, offset: 928)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1719, file: !1720, line: 129, baseType: !167, size: 128, offset: 960)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1719, file: !1720, line: 132, baseType: !1257, size: 512, offset: 1088)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1719, file: !1720, line: 133, baseType: !1265, size: 64, offset: 1600)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1719, file: !1720, line: 140, baseType: !1752, size: 256, offset: 1664)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1753, size: 256, elements: !1534)
!1753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1720, line: 38, size: 128, elements: !1754)
!1754 = !{!1755, !1756}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1753, file: !1720, line: 39, baseType: !382, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1753, file: !1720, line: 40, baseType: !382, size: 64, offset: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1719, file: !1720, line: 146, baseType: !1758, size: 192, offset: 1920)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1720, line: 66, size: 192, elements: !1759)
!1759 = !{!1760}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1758, file: !1720, line: 67, baseType: !1761, size: 192)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1720, line: 47, size: 192, elements: !1762)
!1762 = !{!1763, !1764, !1765}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1761, file: !1720, line: 48, baseType: !738, size: 64)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1761, file: !1720, line: 49, baseType: !738, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1761, file: !1720, line: 50, baseType: !738, size: 64, offset: 128)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1719, file: !1720, line: 150, baseType: !1495, size: 640, offset: 2112)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1719, file: !1720, line: 153, baseType: !1768, size: 256, offset: 2752)
!1768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1436, size: 256, elements: !1120)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1719, file: !1720, line: 159, baseType: !1436, size: 64, offset: 3008)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1719, file: !1720, line: 162, baseType: !135, size: 32, offset: 3072)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1719, file: !1720, line: 164, baseType: !1772, size: 64, offset: 3136)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1720, line: 164, flags: DIFlagFwdDecl)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1719, file: !1720, line: 175, baseType: !1775, size: 32, offset: 3200)
!1775 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !349, line: 805, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !349, line: 798, size: 32, elements: !1777)
!1777 = !{!1778, !1779}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1776, file: !349, line: 803, baseType: !348, size: 32)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1776, file: !349, line: 804, baseType: !194, offset: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1719, file: !1720, line: 176, baseType: !382, size: 64, offset: 3264)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1719, file: !1720, line: 176, baseType: !382, size: 64, offset: 3328)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1719, file: !1720, line: 176, baseType: !382, size: 64, offset: 3392)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1719, file: !1720, line: 176, baseType: !382, size: 64, offset: 3456)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1719, file: !1720, line: 177, baseType: !382, size: 64, offset: 3520)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1719, file: !1720, line: 178, baseType: !382, size: 64, offset: 3584)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1719, file: !1720, line: 179, baseType: !1483, size: 128, offset: 3648)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1719, file: !1720, line: 180, baseType: !285, size: 64, offset: 3776)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1719, file: !1720, line: 180, baseType: !285, size: 64, offset: 3840)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1719, file: !1720, line: 180, baseType: !285, size: 64, offset: 3904)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1719, file: !1720, line: 180, baseType: !285, size: 64, offset: 3968)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1719, file: !1720, line: 181, baseType: !285, size: 64, offset: 4032)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1719, file: !1720, line: 181, baseType: !285, size: 64, offset: 4096)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1719, file: !1720, line: 181, baseType: !285, size: 64, offset: 4160)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1719, file: !1720, line: 181, baseType: !285, size: 64, offset: 4224)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1719, file: !1720, line: 182, baseType: !285, size: 64, offset: 4288)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1719, file: !1720, line: 182, baseType: !285, size: 64, offset: 4352)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1719, file: !1720, line: 182, baseType: !285, size: 64, offset: 4416)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1719, file: !1720, line: 182, baseType: !285, size: 64, offset: 4480)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1719, file: !1720, line: 183, baseType: !285, size: 64, offset: 4544)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1719, file: !1720, line: 183, baseType: !285, size: 64, offset: 4608)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1719, file: !1720, line: 184, baseType: !1802, offset: 4672)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1803, line: 12, elements: !208)
!1803 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1719, file: !1720, line: 192, baseType: !384, size: 64, offset: 4672)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1719, file: !1720, line: 203, baseType: !1806, size: 2048, offset: 4736)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1807, size: 2048, elements: !1700)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1808, line: 43, size: 128, elements: !1809)
!1808 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1809 = !{!1810, !1811}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1807, file: !1808, line: 44, baseType: !284, size: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1807, file: !1808, line: 45, baseType: !284, size: 64, offset: 64)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1719, file: !1720, line: 220, baseType: !451, size: 8, offset: 6784)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1719, file: !1720, line: 221, baseType: !1170, size: 16, offset: 6800)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1719, file: !1720, line: 222, baseType: !1170, size: 16, offset: 6816)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1719, file: !1720, line: 224, baseType: !939, size: 64, offset: 6848)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1719, file: !1720, line: 227, baseType: !1138, size: 192, offset: 6912)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1719, file: !1720, line: 233, baseType: !1138, size: 192, offset: 7104)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1182, file: !1183, line: 970, baseType: !1819, size: 64, offset: 9280)
!1819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1820, size: 64)
!1820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1720, line: 20, size: 16576, elements: !1821)
!1821 = !{!1822, !1823, !1824, !1825}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1820, file: !1720, line: 21, baseType: !194)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1820, file: !1720, line: 22, baseType: !1195, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1820, file: !1720, line: 23, baseType: !1446, size: 128, offset: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1820, file: !1720, line: 24, baseType: !1826, size: 16384, offset: 192)
!1826 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1827, size: 16384, elements: !240)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1730, line: 49, size: 256, elements: !1828)
!1828 = !{!1829}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1827, file: !1730, line: 50, baseType: !1830, size: 256)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1730, line: 35, size: 256, elements: !1831)
!1831 = !{!1832, !1839, !1840, !1846}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1830, file: !1730, line: 37, baseType: !1833, size: 64)
!1833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1834, line: 19, baseType: !1835)
!1834 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1834, line: 18, baseType: !1837)
!1837 = !DISubroutineType(types: !1838)
!1838 = !{null, !135}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1830, file: !1730, line: 38, baseType: !285, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1830, file: !1730, line: 44, baseType: !1841, size: 64, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1834, line: 22, baseType: !1842)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1834, line: 21, baseType: !1844)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{null}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1830, file: !1730, line: 46, baseType: !1734, size: 64, offset: 192)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1182, file: !1183, line: 971, baseType: !1734, size: 64, offset: 9344)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1182, file: !1183, line: 972, baseType: !1734, size: 64, offset: 9408)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1182, file: !1183, line: 974, baseType: !1734, size: 64, offset: 9472)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1182, file: !1183, line: 975, baseType: !1729, size: 192, offset: 9536)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1182, file: !1183, line: 976, baseType: !285, size: 64, offset: 9728)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1182, file: !1183, line: 977, baseType: !282, size: 64, offset: 9792)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1182, file: !1183, line: 978, baseType: !7, size: 32, offset: 9856)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1182, file: !1183, line: 980, baseType: !329, size: 64, offset: 9920)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1182, file: !1183, line: 989, baseType: !1856, size: 128, offset: 9984)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1857, line: 35, size: 128, elements: !1858)
!1857 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1858 = !{!1859, !1860, !1861}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1856, file: !1857, line: 36, baseType: !135, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1856, file: !1857, line: 37, baseType: !712, size: 32, offset: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1856, file: !1857, line: 38, baseType: !1862, size: 64, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1857, line: 23, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1182, file: !1183, line: 992, baseType: !382, size: 64, offset: 10112)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1182, file: !1183, line: 993, baseType: !382, size: 64, offset: 10176)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1182, file: !1183, line: 996, baseType: !194, offset: 10240)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1182, file: !1183, line: 999, baseType: !745, offset: 10240)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1182, file: !1183, line: 1001, baseType: !1869, size: 64, offset: 10240)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1183, line: 636, size: 64, elements: !1870)
!1870 = !{!1871}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1869, file: !1183, line: 637, baseType: !1872, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1182, file: !1183, line: 1005, baseType: !717, size: 128, offset: 10304)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1182, file: !1183, line: 1007, baseType: !1181, size: 64, offset: 10432)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1182, file: !1183, line: 1009, baseType: !1876, size: 64, offset: 10496)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1877, size: 64)
!1877 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1183, line: 1009, flags: DIFlagFwdDecl)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1182, file: !1183, line: 1043, baseType: !162, size: 64, offset: 10560)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1182, file: !1183, line: 1046, baseType: !1880, size: 64, offset: 10624)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1183, line: 41, flags: DIFlagFwdDecl)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1182, file: !1183, line: 1050, baseType: !1883, size: 64, offset: 10688)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1183, line: 42, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1182, file: !1183, line: 1054, baseType: !1886, size: 64, offset: 10752)
!1886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1887, size: 64)
!1887 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1183, line: 55, flags: DIFlagFwdDecl)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1182, file: !1183, line: 1056, baseType: !1889, size: 64, offset: 10816)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1183, line: 40, flags: DIFlagFwdDecl)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1182, file: !1183, line: 1058, baseType: !1892, size: 64, offset: 10880)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1894, line: 99, size: 704, elements: !1895)
!1894 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901, !1902, !1921, !1922}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1893, file: !1894, line: 100, baseType: !736, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1893, file: !1894, line: 101, baseType: !712, size: 32, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1893, file: !1894, line: 102, baseType: !712, size: 32, offset: 96)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1893, file: !1894, line: 105, baseType: !194, offset: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1893, file: !1894, line: 107, baseType: !277, size: 16, offset: 128)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1893, file: !1894, line: 109, baseType: !703, size: 128, offset: 192)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1893, file: !1894, line: 110, baseType: !1903, size: 64, offset: 320)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1894, line: 73, size: 448, elements: !1905)
!1905 = !{!1906, !1909, !1910, !1915, !1920}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1904, file: !1894, line: 74, baseType: !1907, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!1908 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1894, line: 74, flags: DIFlagFwdDecl)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1904, file: !1894, line: 75, baseType: !1892, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !1894, line: 83, baseType: !1911, size: 128, offset: 128)
!1911 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !1894, line: 83, size: 128, elements: !1912)
!1912 = !{!1913, !1914}
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1911, file: !1894, line: 84, baseType: !167, size: 128)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1911, file: !1894, line: 85, baseType: !900, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, scope: !1904, file: !1894, line: 87, baseType: !1916, size: 128, offset: 256)
!1916 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1904, file: !1894, line: 87, size: 128, elements: !1917)
!1917 = !{!1918, !1919}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1916, file: !1894, line: 88, baseType: !603, size: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1916, file: !1894, line: 89, baseType: !326, size: 128, align: 64)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1904, file: !1894, line: 92, baseType: !7, size: 32, offset: 384)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1893, file: !1894, line: 111, baseType: !599, size: 64, offset: 384)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1893, file: !1894, line: 113, baseType: !1923, size: 256, offset: 448)
!1923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1924, line: 102, size: 256, elements: !1925)
!1924 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1925 = !{!1926, !1927, !1928}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1923, file: !1924, line: 103, baseType: !736, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1923, file: !1924, line: 104, baseType: !167, size: 128, offset: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1923, file: !1924, line: 105, baseType: !1929, size: 64, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1924, line: 21, baseType: !1930)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DISubroutineType(types: !1932)
!1932 = !{null, !1933}
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1182, file: !1183, line: 1061, baseType: !1935, size: 64, offset: 10944)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1183, line: 43, flags: DIFlagFwdDecl)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1182, file: !1183, line: 1064, baseType: !285, size: 64, offset: 11008)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1182, file: !1183, line: 1065, baseType: !1939, size: 64, offset: 11072)
!1939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1940, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1730, line: 14, baseType: !1941)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1730, line: 12, size: 384, elements: !1942)
!1942 = !{!1943}
!1943 = !DIDerivedType(tag: DW_TAG_member, scope: !1941, file: !1730, line: 13, baseType: !1944, size: 384)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1941, file: !1730, line: 13, size: 384, elements: !1945)
!1945 = !{!1946, !1947, !1948, !1949}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1944, file: !1730, line: 13, baseType: !135, size: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1944, file: !1730, line: 13, baseType: !135, size: 32, offset: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1944, file: !1730, line: 13, baseType: !135, size: 32, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1944, file: !1730, line: 13, baseType: !1950, size: 256, offset: 128)
!1950 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1951, line: 32, size: 256, elements: !1952)
!1951 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1952 = !{!1953, !1958, !1971, !1977, !1986, !2006, !2011}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1950, file: !1951, line: 37, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 34, size: 64, elements: !1955)
!1955 = !{!1956, !1957}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1954, file: !1951, line: 35, baseType: !1425, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1954, file: !1951, line: 36, baseType: !402, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1950, file: !1951, line: 45, baseType: !1959, size: 192)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 40, size: 192, elements: !1960)
!1960 = !{!1961, !1963, !1964, !1970}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1959, file: !1951, line: 41, baseType: !1962, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !268, line: 95, baseType: !135)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1959, file: !1951, line: 42, baseType: !135, size: 32, offset: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1959, file: !1951, line: 43, baseType: !1965, size: 64, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1951, line: 11, baseType: !1966)
!1966 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1951, line: 8, size: 64, elements: !1967)
!1967 = !{!1968, !1969}
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1966, file: !1951, line: 9, baseType: !135, size: 32)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1966, file: !1951, line: 10, baseType: !162, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1959, file: !1951, line: 44, baseType: !135, size: 32, offset: 128)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1950, file: !1951, line: 52, baseType: !1972, size: 128)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 48, size: 128, elements: !1973)
!1973 = !{!1974, !1975, !1976}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1972, file: !1951, line: 49, baseType: !1425, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1972, file: !1951, line: 50, baseType: !402, size: 32, offset: 32)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1972, file: !1951, line: 51, baseType: !1965, size: 64, offset: 64)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1950, file: !1951, line: 61, baseType: !1978, size: 256)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 55, size: 256, elements: !1979)
!1979 = !{!1980, !1981, !1982, !1983, !1985}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1978, file: !1951, line: 56, baseType: !1425, size: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1978, file: !1951, line: 57, baseType: !402, size: 32, offset: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1978, file: !1951, line: 58, baseType: !135, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1978, file: !1951, line: 59, baseType: !1984, size: 64, offset: 128)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !268, line: 94, baseType: !269)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1978, file: !1951, line: 60, baseType: !1984, size: 64, offset: 192)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1950, file: !1951, line: 95, baseType: !1987, size: 256)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 64, size: 256, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1987, file: !1951, line: 65, baseType: !162, size: 64)
!1990 = !DIDerivedType(tag: DW_TAG_member, scope: !1987, file: !1951, line: 77, baseType: !1991, size: 192, offset: 64)
!1991 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1987, file: !1951, line: 77, size: 192, elements: !1992)
!1992 = !{!1993, !1994, !2001}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1991, file: !1951, line: 82, baseType: !1170, size: 16)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1991, file: !1951, line: 88, baseType: !1995, size: 192)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1991, file: !1951, line: 84, size: 192, elements: !1996)
!1996 = !{!1997, !1999, !2000}
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1995, file: !1951, line: 85, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 64, elements: !1295)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1995, file: !1951, line: 86, baseType: !162, size: 64, offset: 64)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1995, file: !1951, line: 87, baseType: !162, size: 64, offset: 128)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1991, file: !1951, line: 93, baseType: !2002, size: 96)
!2002 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1991, file: !1951, line: 90, size: 96, elements: !2003)
!2003 = !{!2004, !2005}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2002, file: !1951, line: 91, baseType: !1998, size: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2002, file: !1951, line: 92, baseType: !378, size: 32, offset: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1950, file: !1951, line: 101, baseType: !2007, size: 128)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 98, size: 128, elements: !2008)
!2008 = !{!2009, !2010}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2007, file: !1951, line: 99, baseType: !270, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2007, file: !1951, line: 100, baseType: !135, size: 32, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1950, file: !1951, line: 108, baseType: !2012, size: 128)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1950, file: !1951, line: 104, size: 128, elements: !2013)
!2013 = !{!2014, !2015, !2016}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2012, file: !1951, line: 105, baseType: !162, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2012, file: !1951, line: 106, baseType: !135, size: 32, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2012, file: !1951, line: 107, baseType: !7, size: 32, offset: 96)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1182, file: !1183, line: 1067, baseType: !1802, offset: 11136)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1182, file: !1183, line: 1099, baseType: !2019, size: 64, offset: 11136)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1183, line: 56, flags: DIFlagFwdDecl)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1182, file: !1183, line: 1103, baseType: !167, size: 128, offset: 11200)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1182, file: !1183, line: 1104, baseType: !2023, size: 64, offset: 11328)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1183, line: 46, flags: DIFlagFwdDecl)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1182, file: !1183, line: 1105, baseType: !1138, size: 192, offset: 11392)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1182, file: !1183, line: 1106, baseType: !7, size: 32, offset: 11584)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1182, file: !1183, line: 1109, baseType: !2028, size: 128, offset: 11648)
!2028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2029, size: 128, elements: !1534)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1183, line: 51, flags: DIFlagFwdDecl)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1182, file: !1183, line: 1110, baseType: !1138, size: 192, offset: 11776)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1182, file: !1183, line: 1111, baseType: !167, size: 128, offset: 11968)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1182, file: !1183, line: 1173, baseType: !2034, size: 64, offset: 12096)
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 64)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2036, line: 62, size: 256, align: 256, elements: !2037)
!2036 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2037 = !{!2038, !2039, !2040, !2045}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2035, file: !2036, line: 75, baseType: !378, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2035, file: !2036, line: 90, baseType: !378, size: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2035, file: !2036, line: 124, baseType: !2041, size: 64, offset: 64)
!2041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2035, file: !2036, line: 109, size: 64, elements: !2042)
!2042 = !{!2043, !2044}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2041, file: !2036, line: 110, baseType: !383, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2041, file: !2036, line: 112, baseType: !383, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2035, file: !2036, line: 144, baseType: !378, size: 32, offset: 128)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1182, file: !1183, line: 1174, baseType: !376, size: 32, offset: 12160)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1182, file: !1183, line: 1179, baseType: !285, size: 64, offset: 12224)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1182, file: !1183, line: 1182, baseType: !2049, size: 128, offset: 12288)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1116, line: 76, size: 128, elements: !2050)
!2050 = !{!2051, !2056, !2057}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2049, file: !1116, line: 85, baseType: !2052, size: 64)
!2052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2053, line: 7, size: 64, elements: !2054)
!2053 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2054 = !{!2055}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2052, file: !2053, line: 12, baseType: !1332, size: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2049, file: !1116, line: 88, baseType: !451, size: 8, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2049, file: !1116, line: 95, baseType: !451, size: 8, offset: 72)
!2058 = !DIDerivedType(tag: DW_TAG_member, scope: !1182, file: !1183, line: 1184, baseType: !2059, size: 128, offset: 12416)
!2059 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1182, file: !1183, line: 1184, size: 128, elements: !2060)
!2060 = !{!2061, !2062}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2059, file: !1183, line: 1185, baseType: !1195, size: 32)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2059, file: !1183, line: 1186, baseType: !326, size: 128, align: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1182, file: !1183, line: 1190, baseType: !2064, size: 64, offset: 12544)
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1183, line: 53, flags: DIFlagFwdDecl)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1182, file: !1183, line: 1192, baseType: !2067, size: 128, offset: 12608)
!2067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1116, line: 64, size: 128, elements: !2068)
!2068 = !{!2069, !2070, !2071}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2067, file: !1116, line: 65, baseType: !685, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2067, file: !1116, line: 67, baseType: !378, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2067, file: !1116, line: 68, baseType: !378, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1182, file: !1183, line: 1206, baseType: !135, size: 32, offset: 12736)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1182, file: !1183, line: 1207, baseType: !135, size: 32, offset: 12768)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1182, file: !1183, line: 1209, baseType: !285, size: 64, offset: 12800)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1182, file: !1183, line: 1219, baseType: !382, size: 64, offset: 12864)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1182, file: !1183, line: 1220, baseType: !382, size: 64, offset: 12928)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1182, file: !1183, line: 1317, baseType: !135, size: 32, offset: 12992)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1182, file: !1183, line: 1319, baseType: !1181, size: 64, offset: 13056)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1182, file: !1183, line: 1322, baseType: !2080, size: 64, offset: 13120)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2082, line: 56, size: 512, elements: !2083)
!2082 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2083 = !{!2084, !2085, !2086, !2087, !2088, !2089, !2090, !2092}
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2081, file: !2082, line: 57, baseType: !2080, size: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2081, file: !2082, line: 58, baseType: !162, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2081, file: !2082, line: 59, baseType: !285, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2081, file: !2082, line: 60, baseType: !285, size: 64, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2081, file: !2082, line: 61, baseType: !785, size: 64, offset: 256)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2081, file: !2082, line: 62, baseType: !7, size: 32, offset: 320)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2081, file: !2082, line: 63, baseType: !2091, size: 64, offset: 384)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !168, line: 153, baseType: !382)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2081, file: !2082, line: 64, baseType: !2093, size: 64, offset: 448)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1182, file: !1183, line: 1326, baseType: !1195, size: 32, offset: 13184)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1182, file: !1183, line: 1342, baseType: !162, size: 64, offset: 13248)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1182, file: !1183, line: 1343, baseType: !383, size: 64, offset: 13312)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1182, file: !1183, line: 1344, baseType: !382, size: 64, offset: 13376)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1182, file: !1183, line: 1345, baseType: !383, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1182, file: !1183, line: 1346, baseType: !383, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1182, file: !1183, line: 1347, baseType: !383, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1182, file: !1183, line: 1348, baseType: !326, size: 128, align: 64, offset: 13504)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1182, file: !1183, line: 1358, baseType: !2104, size: 34816, offset: 13824)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2105, line: 485, size: 34816, elements: !2106)
!2105 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2106 = !{!2107, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2136, !2137, !2138, !2139, !2140, !2141, !2144, !2145, !2146}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2104, file: !2105, line: 487, baseType: !2108, size: 192)
!2108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2109, size: 192, elements: !236)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2110, line: 16, size: 64, elements: !2111)
!2110 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2111 = !{!2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2109, file: !2110, line: 17, baseType: !824, size: 16)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2109, file: !2110, line: 18, baseType: !824, size: 16, offset: 16)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2109, file: !2110, line: 19, baseType: !824, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2109, file: !2110, line: 19, baseType: !824, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2109, file: !2110, line: 19, baseType: !824, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2109, file: !2110, line: 19, baseType: !824, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2109, file: !2110, line: 19, baseType: !824, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2109, file: !2110, line: 20, baseType: !824, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2109, file: !2110, line: 20, baseType: !824, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2109, file: !2110, line: 20, baseType: !824, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2109, file: !2110, line: 20, baseType: !824, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2109, file: !2110, line: 20, baseType: !824, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2109, file: !2110, line: 20, baseType: !824, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2104, file: !2105, line: 491, baseType: !285, size: 64, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2104, file: !2105, line: 495, baseType: !277, size: 16, offset: 256)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2104, file: !2105, line: 496, baseType: !277, size: 16, offset: 272)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2104, file: !2105, line: 497, baseType: !277, size: 16, offset: 288)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2104, file: !2105, line: 498, baseType: !277, size: 16, offset: 304)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2104, file: !2105, line: 502, baseType: !285, size: 64, offset: 320)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2104, file: !2105, line: 503, baseType: !285, size: 64, offset: 384)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2104, file: !2105, line: 514, baseType: !2133, size: 256, offset: 448)
!2133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2134, size: 256, elements: !1120)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2105, line: 483, flags: DIFlagFwdDecl)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2104, file: !2105, line: 516, baseType: !285, size: 64, offset: 704)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2104, file: !2105, line: 518, baseType: !285, size: 64, offset: 768)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2104, file: !2105, line: 520, baseType: !285, size: 64, offset: 832)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2104, file: !2105, line: 521, baseType: !285, size: 64, offset: 896)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2104, file: !2105, line: 522, baseType: !285, size: 64, offset: 960)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2104, file: !2105, line: 528, baseType: !2142, size: 64, offset: 1024)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2105, line: 10, flags: DIFlagFwdDecl)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2104, file: !2105, line: 535, baseType: !285, size: 64, offset: 1088)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2104, file: !2105, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2104, file: !2105, line: 540, baseType: !2147, size: 33280, offset: 1536)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2148, line: 317, size: 33280, elements: !2149)
!2148 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2147, file: !2148, line: 330, baseType: !7, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2147, file: !2148, line: 337, baseType: !285, size: 64, offset: 64)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2147, file: !2148, line: 348, baseType: !2153, size: 32768, offset: 512)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2148, line: 304, size: 32768, elements: !2154)
!2154 = !{!2155, !2170, !2209, !2259, !2272}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2153, file: !2148, line: 305, baseType: !2156, size: 896)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2148, line: 12, size: 896, elements: !2157)
!2157 = !{!2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2169}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2156, file: !2148, line: 13, baseType: !376, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2156, file: !2148, line: 14, baseType: !376, size: 32, offset: 32)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2156, file: !2148, line: 15, baseType: !376, size: 32, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2156, file: !2148, line: 16, baseType: !376, size: 32, offset: 96)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2156, file: !2148, line: 17, baseType: !376, size: 32, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2156, file: !2148, line: 18, baseType: !376, size: 32, offset: 160)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2156, file: !2148, line: 19, baseType: !376, size: 32, offset: 192)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2156, file: !2148, line: 22, baseType: !2166, size: 640, offset: 224)
!2166 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 640, elements: !2167)
!2167 = !{!2168}
!2168 = !DISubrange(count: 20)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2156, file: !2148, line: 25, baseType: !376, size: 32, offset: 864)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2153, file: !2148, line: 306, baseType: !2171, size: 4096, align: 128)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2148, line: 34, size: 4096, align: 128, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176, !2177, !2192, !2193, !2194, !2198, !2200, !2204}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2171, file: !2148, line: 35, baseType: !824, size: 16)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2171, file: !2148, line: 36, baseType: !824, size: 16, offset: 16)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2171, file: !2148, line: 37, baseType: !824, size: 16, offset: 32)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2171, file: !2148, line: 38, baseType: !824, size: 16, offset: 48)
!2177 = !DIDerivedType(tag: DW_TAG_member, scope: !2171, file: !2148, line: 39, baseType: !2178, size: 128, offset: 64)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2171, file: !2148, line: 39, size: 128, elements: !2179)
!2179 = !{!2180, !2185}
!2180 = !DIDerivedType(tag: DW_TAG_member, scope: !2178, file: !2148, line: 40, baseType: !2181, size: 128)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2178, file: !2148, line: 40, size: 128, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2181, file: !2148, line: 41, baseType: !382, size: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2181, file: !2148, line: 42, baseType: !382, size: 64, offset: 64)
!2185 = !DIDerivedType(tag: DW_TAG_member, scope: !2178, file: !2148, line: 44, baseType: !2186, size: 128)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2178, file: !2148, line: 44, size: 128, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2186, file: !2148, line: 45, baseType: !376, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2186, file: !2148, line: 46, baseType: !376, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2186, file: !2148, line: 47, baseType: !376, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2186, file: !2148, line: 48, baseType: !376, size: 32, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2171, file: !2148, line: 51, baseType: !376, size: 32, offset: 192)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2171, file: !2148, line: 52, baseType: !376, size: 32, offset: 224)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2171, file: !2148, line: 55, baseType: !2195, size: 1024, offset: 256)
!2195 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 1024, elements: !2196)
!2196 = !{!2197}
!2197 = !DISubrange(count: 32)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2171, file: !2148, line: 58, baseType: !2199, size: 2048, offset: 1280)
!2199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 2048, elements: !240)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2171, file: !2148, line: 60, baseType: !2201, size: 384, offset: 3328)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 384, elements: !2202)
!2202 = !{!2203}
!2203 = !DISubrange(count: 12)
!2204 = !DIDerivedType(tag: DW_TAG_member, scope: !2171, file: !2148, line: 62, baseType: !2205, size: 384, offset: 3712)
!2205 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2171, file: !2148, line: 62, size: 384, elements: !2206)
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2205, file: !2148, line: 63, baseType: !2201, size: 384)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2205, file: !2148, line: 64, baseType: !2201, size: 384)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2153, file: !2148, line: 307, baseType: !2210, size: 1088)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2148, line: 79, size: 1088, elements: !2211)
!2211 = !{!2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2258}
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2210, file: !2148, line: 80, baseType: !376, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2210, file: !2148, line: 81, baseType: !376, size: 32, offset: 32)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2210, file: !2148, line: 82, baseType: !376, size: 32, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2210, file: !2148, line: 83, baseType: !376, size: 32, offset: 96)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2210, file: !2148, line: 84, baseType: !376, size: 32, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2210, file: !2148, line: 85, baseType: !376, size: 32, offset: 160)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2210, file: !2148, line: 86, baseType: !376, size: 32, offset: 192)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2210, file: !2148, line: 88, baseType: !2166, size: 640, offset: 224)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2210, file: !2148, line: 89, baseType: !1317, size: 8, offset: 864)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2210, file: !2148, line: 90, baseType: !1317, size: 8, offset: 872)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2210, file: !2148, line: 91, baseType: !1317, size: 8, offset: 880)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2210, file: !2148, line: 92, baseType: !1317, size: 8, offset: 888)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2210, file: !2148, line: 93, baseType: !1317, size: 8, offset: 896)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2210, file: !2148, line: 94, baseType: !1317, size: 8, offset: 904)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2210, file: !2148, line: 95, baseType: !2227, size: 64, offset: 960)
!2227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2229, line: 11, size: 128, elements: !2230)
!2229 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2230 = !{!2231, !2232}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2228, file: !2229, line: 12, baseType: !270, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2228, file: !2229, line: 13, baseType: !2233, size: 64, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2235, line: 56, size: 1344, elements: !2236)
!2235 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2236 = !{!2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2234, file: !2235, line: 61, baseType: !285, size: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2234, file: !2235, line: 62, baseType: !285, size: 64, offset: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2234, file: !2235, line: 63, baseType: !285, size: 64, offset: 128)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2234, file: !2235, line: 64, baseType: !285, size: 64, offset: 192)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2234, file: !2235, line: 65, baseType: !285, size: 64, offset: 256)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2234, file: !2235, line: 66, baseType: !285, size: 64, offset: 320)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2234, file: !2235, line: 68, baseType: !285, size: 64, offset: 384)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2234, file: !2235, line: 69, baseType: !285, size: 64, offset: 448)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2234, file: !2235, line: 70, baseType: !285, size: 64, offset: 512)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2234, file: !2235, line: 71, baseType: !285, size: 64, offset: 576)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2234, file: !2235, line: 72, baseType: !285, size: 64, offset: 640)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2234, file: !2235, line: 73, baseType: !285, size: 64, offset: 704)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2234, file: !2235, line: 74, baseType: !285, size: 64, offset: 768)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2234, file: !2235, line: 75, baseType: !285, size: 64, offset: 832)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2234, file: !2235, line: 76, baseType: !285, size: 64, offset: 896)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2234, file: !2235, line: 81, baseType: !285, size: 64, offset: 960)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2234, file: !2235, line: 83, baseType: !285, size: 64, offset: 1024)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2234, file: !2235, line: 84, baseType: !285, size: 64, offset: 1088)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2234, file: !2235, line: 85, baseType: !285, size: 64, offset: 1152)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2234, file: !2235, line: 86, baseType: !285, size: 64, offset: 1216)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2234, file: !2235, line: 87, baseType: !285, size: 64, offset: 1280)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2210, file: !2148, line: 96, baseType: !376, size: 32, offset: 1024)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2153, file: !2148, line: 308, baseType: !2260, size: 4608, align: 512)
!2260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2148, line: 289, size: 4608, align: 512, elements: !2261)
!2261 = !{!2262, !2263, !2270}
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2260, file: !2148, line: 290, baseType: !2171, size: 4096, align: 128)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2260, file: !2148, line: 291, baseType: !2264, size: 512, offset: 4096)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2148, line: 268, size: 512, elements: !2265)
!2265 = !{!2266, !2267, !2268}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2264, file: !2148, line: 269, baseType: !382, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2264, file: !2148, line: 270, baseType: !382, size: 64, offset: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2264, file: !2148, line: 271, baseType: !2269, size: 384, offset: 128)
!2269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 384, elements: !1590)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2260, file: !2148, line: 292, baseType: !2271, offset: 4608)
!2271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, elements: !1688)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2153, file: !2148, line: 309, baseType: !2273, size: 32768)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1317, size: 32768, elements: !2274)
!2274 = !{!2275}
!2275 = !DISubrange(count: 4096)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1178, file: !687, line: 378, baseType: !2277, size: 64, offset: 64)
!2277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1178, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1174, file: !687, line: 384, baseType: !1467, size: 192, offset: 192)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !943, file: !687, line: 500, baseType: !194, offset: 6656)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !943, file: !687, line: 501, baseType: !2281, size: 64, offset: 6656)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !687, line: 387, flags: DIFlagFwdDecl)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !943, file: !687, line: 516, baseType: !1678, size: 64, offset: 6720)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !943, file: !687, line: 519, baseType: !313, size: 64, offset: 6784)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !943, file: !687, line: 521, baseType: !2286, size: 64, offset: 6848)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !687, line: 521, flags: DIFlagFwdDecl)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !943, file: !687, line: 545, baseType: !712, size: 32, offset: 6912)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !943, file: !687, line: 548, baseType: !451, size: 8, offset: 6944)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !943, file: !687, line: 550, baseType: !2291, offset: 6952)
!2291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2292, line: 142, elements: !208)
!2292 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !943, file: !687, line: 554, baseType: !1923, size: 256, offset: 6976)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !943, file: !687, line: 557, baseType: !376, size: 32, offset: 7232)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !940, file: !687, line: 565, baseType: !2296, offset: 7296)
!2296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !285, elements: !2297)
!2297 = !{!2298}
!2298 = !DISubrange(count: -1)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !936, file: !687, line: 151, baseType: !712, size: 32)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !929, file: !687, line: 156, baseType: !194, offset: 256)
!2301 = !DIDerivedType(tag: DW_TAG_member, scope: !691, file: !687, line: 159, baseType: !2302, size: 128)
!2302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !691, file: !687, line: 159, size: 128, elements: !2303)
!2303 = !{!2304, !2368}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2302, file: !687, line: 161, baseType: !2305, size: 64)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !37, line: 110, size: 1152, elements: !2307)
!2307 = !{!2308, !2318, !2339, !2340, !2341, !2342, !2343, !2355, !2356, !2357}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2306, file: !37, line: 111, baseType: !2309, size: 384)
!2309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !37, line: 19, size: 384, elements: !2310)
!2310 = !{!2311, !2313, !2314, !2315, !2316, !2317}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2309, file: !37, line: 20, baseType: !2312, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !285)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2309, file: !37, line: 21, baseType: !2312, size: 64, offset: 64)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2309, file: !37, line: 22, baseType: !2312, size: 64, offset: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2309, file: !37, line: 23, baseType: !285, size: 64, offset: 192)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2309, file: !37, line: 24, baseType: !285, size: 64, offset: 256)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2309, file: !37, line: 25, baseType: !285, size: 64, offset: 320)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2306, file: !37, line: 112, baseType: !2319, size: 64, offset: 384)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2320, size: 64)
!2320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2321, line: 105, size: 128, elements: !2322)
!2321 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2322 = !{!2323, !2324}
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2320, file: !2321, line: 110, baseType: !285, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2320, file: !2321, line: 118, baseType: !2325, size: 64, offset: 64)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2321, line: 95, size: 448, elements: !2327)
!2327 = !{!2328, !2329, !2334, !2335, !2336, !2337, !2338}
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2326, file: !2321, line: 96, baseType: !736, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2326, file: !2321, line: 97, baseType: !2330, size: 64, offset: 64)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2321, line: 60, baseType: !2332)
!2332 = !DISubroutineType(types: !2333)
!2333 = !{null, !2319}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2326, file: !2321, line: 98, baseType: !2330, size: 64, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2326, file: !2321, line: 99, baseType: !451, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2326, file: !2321, line: 100, baseType: !451, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2326, file: !2321, line: 101, baseType: !326, size: 128, align: 64, offset: 256)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2326, file: !2321, line: 102, baseType: !2319, size: 64, offset: 384)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2306, file: !37, line: 113, baseType: !2320, size: 128, offset: 448)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2306, file: !37, line: 114, baseType: !1467, size: 192, offset: 576)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2306, file: !37, line: 115, baseType: !36, size: 32, offset: 768)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2306, file: !37, line: 116, baseType: !7, size: 32, offset: 800)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2306, file: !37, line: 117, baseType: !2344, size: 64, offset: 832)
!2344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!2345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2346)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !37, line: 67, size: 256, elements: !2347)
!2347 = !{!2348, !2349, !2353, !2354}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2346, file: !37, line: 73, baseType: !805, size: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2346, file: !37, line: 78, baseType: !2350, size: 64, offset: 64)
!2350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2351, size: 64)
!2351 = !DISubroutineType(types: !2352)
!2352 = !{null, !2305}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2346, file: !37, line: 83, baseType: !2350, size: 64, offset: 128)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2346, file: !37, line: 89, baseType: !992, size: 64, offset: 192)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2306, file: !37, line: 118, baseType: !162, size: 64, offset: 896)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2306, file: !37, line: 119, baseType: !135, size: 32, offset: 960)
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2306, file: !37, line: 120, baseType: !2358, size: 128, offset: 1024)
!2358 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2306, file: !37, line: 120, size: 128, elements: !2359)
!2359 = !{!2360, !2366}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2358, file: !37, line: 121, baseType: !2361, size: 128)
!2361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2362, line: 6, size: 128, elements: !2363)
!2362 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2363 = !{!2364, !2365}
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2361, file: !2362, line: 7, baseType: !382, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2361, file: !2362, line: 8, baseType: !382, size: 64, offset: 64)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2358, file: !37, line: 122, baseType: !2367)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2361, elements: !1688)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2302, file: !687, line: 162, baseType: !162, size: 64, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !691, file: !687, line: 176, baseType: !326, size: 128, align: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, scope: !686, file: !687, line: 179, baseType: !2371, size: 32, offset: 384)
!2371 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !686, file: !687, line: 179, size: 32, elements: !2372)
!2372 = !{!2373, !2374, !2375, !2376}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2371, file: !687, line: 184, baseType: !712, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2371, file: !687, line: 192, baseType: !7, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2371, file: !687, line: 194, baseType: !7, size: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2371, file: !687, line: 195, baseType: !135, size: 32)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !686, file: !687, line: 199, baseType: !712, size: 32, offset: 416)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !621, file: !50, line: 1964, baseType: !2379, size: 64, offset: 1344)
!2379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!2380 = !DISubroutineType(types: !2381)
!2381 = !{!270, !560, !2382}
!2382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!2383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2384, line: 12, size: 256, elements: !2385)
!2384 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2385 = !{!2386, !2387, !2388, !2389, !2390}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2383, file: !2384, line: 13, baseType: !708, size: 32)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2383, file: !2384, line: 16, baseType: !135, size: 32, offset: 32)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2383, file: !2384, line: 23, baseType: !285, size: 64, offset: 64)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2383, file: !2384, line: 30, baseType: !285, size: 64, offset: 128)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2383, file: !2384, line: 33, baseType: !2391, size: 64, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2392, size: 64)
!2392 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !687, line: 27, flags: DIFlagFwdDecl)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !621, file: !50, line: 1966, baseType: !2379, size: 64, offset: 1408)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !561, file: !50, line: 1424, baseType: !2395, size: 64, offset: 448)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2397)
!2397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !44, line: 322, size: 704, elements: !2398)
!2398 = !{!2399, !2445, !2449, !2453, !2454, !2455, !2456, !2457, !2462, !2467, !2471}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2397, file: !44, line: 323, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DISubroutineType(types: !2402)
!2402 = !{!135, !2403}
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !44, line: 294, size: 1600, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2430, !2431, !2432}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2404, file: !44, line: 295, baseType: !603, size: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2404, file: !44, line: 296, baseType: !167, size: 128, offset: 128)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2404, file: !44, line: 297, baseType: !167, size: 128, offset: 256)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2404, file: !44, line: 298, baseType: !167, size: 128, offset: 384)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2404, file: !44, line: 299, baseType: !1138, size: 192, offset: 512)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2404, file: !44, line: 300, baseType: !194, offset: 704)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2404, file: !44, line: 301, baseType: !712, size: 32, offset: 704)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2404, file: !44, line: 302, baseType: !560, size: 64, offset: 768)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2404, file: !44, line: 303, baseType: !2415, size: 64, offset: 832)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !44, line: 68, size: 64, elements: !2416)
!2416 = !{!2417, !2429}
!2417 = !DIDerivedType(tag: DW_TAG_member, scope: !2415, file: !44, line: 69, baseType: !2418, size: 32)
!2418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2415, file: !44, line: 69, size: 32, elements: !2419)
!2419 = !{!2420, !2421, !2422}
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2418, file: !44, line: 70, baseType: !396, size: 32)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2418, file: !44, line: 71, baseType: !404, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2418, file: !44, line: 72, baseType: !2423, size: 32)
!2423 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2424, line: 24, baseType: !2425)
!2424 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2425 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2424, line: 22, size: 32, elements: !2426)
!2426 = !{!2427}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2425, file: !2424, line: 23, baseType: !2428, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2424, line: 20, baseType: !402)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2415, file: !44, line: 74, baseType: !43, size: 32, offset: 32)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2404, file: !44, line: 304, baseType: !492, size: 64, offset: 896)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2404, file: !44, line: 305, baseType: !285, size: 64, offset: 960)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2404, file: !44, line: 306, baseType: !2433, size: 576, offset: 1024)
!2433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !44, line: 205, size: 576, elements: !2434)
!2434 = !{!2435, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444}
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2433, file: !44, line: 206, baseType: !2436, size: 64)
!2436 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !44, line: 66, baseType: !494)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2433, file: !44, line: 207, baseType: !2436, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2433, file: !44, line: 208, baseType: !2436, size: 64, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2433, file: !44, line: 209, baseType: !2436, size: 64, offset: 192)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2433, file: !44, line: 210, baseType: !2436, size: 64, offset: 256)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2433, file: !44, line: 211, baseType: !2436, size: 64, offset: 320)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2433, file: !44, line: 212, baseType: !2436, size: 64, offset: 384)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2433, file: !44, line: 213, baseType: !500, size: 64, offset: 448)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2433, file: !44, line: 214, baseType: !500, size: 64, offset: 512)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2397, file: !44, line: 324, baseType: !2446, size: 64, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DISubroutineType(types: !2448)
!2448 = !{!2403, !560, !135}
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2397, file: !44, line: 325, baseType: !2450, size: 64, offset: 128)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DISubroutineType(types: !2452)
!2452 = !{null, !2403}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2397, file: !44, line: 326, baseType: !2400, size: 64, offset: 192)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2397, file: !44, line: 327, baseType: !2400, size: 64, offset: 256)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2397, file: !44, line: 328, baseType: !2400, size: 64, offset: 320)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2397, file: !44, line: 329, baseType: !649, size: 64, offset: 384)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2397, file: !44, line: 332, baseType: !2458, size: 64, offset: 448)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DISubroutineType(types: !2460)
!2460 = !{!2461, !390}
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2397, file: !44, line: 333, baseType: !2463, size: 64, offset: 512)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DISubroutineType(types: !2465)
!2465 = !{!135, !390, !2466}
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2397, file: !44, line: 335, baseType: !2468, size: 64, offset: 576)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = !DISubroutineType(types: !2470)
!2470 = !{!135, !390, !2461}
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2397, file: !44, line: 337, baseType: !2472, size: 64, offset: 640)
!2472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2473, size: 64)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!135, !560, !2475}
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !561, file: !50, line: 1425, baseType: !2477, size: 64, offset: 512)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2479)
!2479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !44, line: 428, size: 704, elements: !2480)
!2480 = !{!2481, !2485, !2486, !2490, !2491, !2492, !2507, !2530, !2534, !2535, !2558}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2479, file: !44, line: 429, baseType: !2482, size: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!135, !560, !135, !135, !510}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2479, file: !44, line: 430, baseType: !649, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2479, file: !44, line: 431, baseType: !2487, size: 64, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{!135, !560, !7}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2479, file: !44, line: 432, baseType: !2487, size: 64, offset: 192)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2479, file: !44, line: 433, baseType: !649, size: 64, offset: 256)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2479, file: !44, line: 434, baseType: !2493, size: 64, offset: 320)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!135, !560, !135, !2496}
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !44, line: 415, size: 256, elements: !2498)
!2498 = !{!2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2497, file: !44, line: 416, baseType: !135, size: 32)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2497, file: !44, line: 417, baseType: !7, size: 32, offset: 32)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2497, file: !44, line: 418, baseType: !7, size: 32, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2497, file: !44, line: 420, baseType: !7, size: 32, offset: 96)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2497, file: !44, line: 421, baseType: !7, size: 32, offset: 128)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2497, file: !44, line: 422, baseType: !7, size: 32, offset: 160)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2497, file: !44, line: 423, baseType: !7, size: 32, offset: 192)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2497, file: !44, line: 424, baseType: !7, size: 32, offset: 224)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2479, file: !44, line: 435, baseType: !2508, size: 64, offset: 384)
!2508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2509, size: 64)
!2509 = !DISubroutineType(types: !2510)
!2510 = !{!135, !560, !2415, !2511}
!2511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2512, size: 64)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !44, line: 343, size: 960, elements: !2513)
!2513 = !{!2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529}
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2512, file: !44, line: 344, baseType: !135, size: 32)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2512, file: !44, line: 345, baseType: !382, size: 64, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2512, file: !44, line: 346, baseType: !382, size: 64, offset: 128)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2512, file: !44, line: 347, baseType: !382, size: 64, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2512, file: !44, line: 348, baseType: !382, size: 64, offset: 256)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2512, file: !44, line: 349, baseType: !382, size: 64, offset: 320)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2512, file: !44, line: 350, baseType: !382, size: 64, offset: 384)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2512, file: !44, line: 351, baseType: !742, size: 64, offset: 448)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2512, file: !44, line: 353, baseType: !742, size: 64, offset: 512)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2512, file: !44, line: 354, baseType: !135, size: 32, offset: 576)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2512, file: !44, line: 355, baseType: !135, size: 32, offset: 608)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2512, file: !44, line: 356, baseType: !382, size: 64, offset: 640)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2512, file: !44, line: 357, baseType: !382, size: 64, offset: 704)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2512, file: !44, line: 358, baseType: !382, size: 64, offset: 768)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2512, file: !44, line: 359, baseType: !742, size: 64, offset: 832)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2512, file: !44, line: 360, baseType: !135, size: 32, offset: 896)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2479, file: !44, line: 436, baseType: !2531, size: 64, offset: 448)
!2531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2532, size: 64)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!135, !560, !2475, !2511}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2479, file: !44, line: 438, baseType: !2508, size: 64, offset: 512)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2479, file: !44, line: 439, baseType: !2536, size: 64, offset: 576)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = !DISubroutineType(types: !2538)
!2538 = !{!135, !560, !2539}
!2539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2540, size: 64)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !44, line: 409, size: 1408, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2540, file: !44, line: 410, baseType: !7, size: 32)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2540, file: !44, line: 411, baseType: !2544, size: 1344, offset: 64)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2545, size: 1344, elements: !236)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !44, line: 395, size: 448, elements: !2546)
!2546 = !{!2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2557}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2545, file: !44, line: 396, baseType: !7, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2545, file: !44, line: 397, baseType: !7, size: 32, offset: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2545, file: !44, line: 399, baseType: !7, size: 32, offset: 64)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2545, file: !44, line: 400, baseType: !7, size: 32, offset: 96)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2545, file: !44, line: 401, baseType: !7, size: 32, offset: 128)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2545, file: !44, line: 402, baseType: !7, size: 32, offset: 160)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2545, file: !44, line: 403, baseType: !7, size: 32, offset: 192)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2545, file: !44, line: 404, baseType: !384, size: 64, offset: 256)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2545, file: !44, line: 405, baseType: !2556, size: 64, offset: 320)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !168, line: 126, baseType: !382)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2545, file: !44, line: 406, baseType: !2556, size: 64, offset: 384)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2479, file: !44, line: 440, baseType: !2487, size: 64, offset: 640)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !561, file: !50, line: 1426, baseType: !2560, size: 64, offset: 576)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2562)
!2562 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !50, line: 49, flags: DIFlagFwdDecl)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !561, file: !50, line: 1427, baseType: !285, size: 64, offset: 640)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !561, file: !50, line: 1428, baseType: !285, size: 64, offset: 704)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !561, file: !50, line: 1429, baseType: !285, size: 64, offset: 768)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !561, file: !50, line: 1430, baseType: !343, size: 64, offset: 832)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !561, file: !50, line: 1431, baseType: !732, size: 256, offset: 896)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !561, file: !50, line: 1432, baseType: !135, size: 32, offset: 1152)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !561, file: !50, line: 1433, baseType: !712, size: 32, offset: 1184)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !561, file: !50, line: 1437, baseType: !2571, size: 64, offset: 1216)
!2571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2572, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2574)
!2574 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !50, line: 1437, flags: DIFlagFwdDecl)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !561, file: !50, line: 1449, baseType: !2576, size: 64, offset: 1280)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !359, line: 34, size: 64, elements: !2577)
!2577 = !{!2578}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2576, file: !359, line: 35, baseType: !362, size: 64)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !561, file: !50, line: 1450, baseType: !167, size: 128, offset: 1344)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !561, file: !50, line: 1451, baseType: !2581, size: 64, offset: 1472)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !50, line: 699, flags: DIFlagFwdDecl)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !561, file: !50, line: 1452, baseType: !1889, size: 64, offset: 1536)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !561, file: !50, line: 1453, baseType: !2585, size: 64, offset: 1600)
!2585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2586, size: 64)
!2586 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !50, line: 1453, flags: DIFlagFwdDecl)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !561, file: !50, line: 1454, baseType: !603, size: 128, offset: 1664)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !561, file: !50, line: 1455, baseType: !7, size: 32, offset: 1792)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !561, file: !50, line: 1456, baseType: !2590, size: 2432, offset: 1856)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !44, line: 518, size: 2432, elements: !2591)
!2591 = !{!2592, !2593, !2594, !2596, !2628}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2590, file: !44, line: 519, baseType: !7, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2590, file: !44, line: 520, baseType: !732, size: 256, offset: 64)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2590, file: !44, line: 521, baseType: !2595, size: 192, offset: 320)
!2595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !390, size: 192, elements: !236)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2590, file: !44, line: 522, baseType: !2597, size: 1728, offset: 512)
!2597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2598, size: 1728, elements: !236)
!2598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !44, line: 222, size: 576, elements: !2599)
!2599 = !{!2600, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627}
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2598, file: !44, line: 223, baseType: !2601, size: 64)
!2601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2602, size: 64)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !44, line: 443, size: 256, elements: !2603)
!2603 = !{!2604, !2605, !2618, !2619}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2602, file: !44, line: 444, baseType: !135, size: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2602, file: !44, line: 445, baseType: !2606, size: 64, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2607, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2608)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !44, line: 310, size: 512, elements: !2609)
!2609 = !{!2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2608, file: !44, line: 311, baseType: !649, size: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2608, file: !44, line: 312, baseType: !649, size: 64, offset: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2608, file: !44, line: 313, baseType: !649, size: 64, offset: 128)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2608, file: !44, line: 314, baseType: !649, size: 64, offset: 192)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2608, file: !44, line: 315, baseType: !2400, size: 64, offset: 256)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2608, file: !44, line: 316, baseType: !2400, size: 64, offset: 320)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2608, file: !44, line: 317, baseType: !2400, size: 64, offset: 384)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2608, file: !44, line: 318, baseType: !2472, size: 64, offset: 448)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2602, file: !44, line: 446, baseType: !594, size: 64, offset: 128)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2602, file: !44, line: 447, baseType: !2601, size: 64, offset: 192)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2598, file: !44, line: 224, baseType: !135, size: 32, offset: 64)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2598, file: !44, line: 226, baseType: !167, size: 128, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2598, file: !44, line: 227, baseType: !285, size: 64, offset: 256)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2598, file: !44, line: 228, baseType: !7, size: 32, offset: 320)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2598, file: !44, line: 229, baseType: !7, size: 32, offset: 352)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2598, file: !44, line: 230, baseType: !2436, size: 64, offset: 384)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2598, file: !44, line: 231, baseType: !2436, size: 64, offset: 448)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2598, file: !44, line: 232, baseType: !162, size: 64, offset: 512)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2590, file: !44, line: 523, baseType: !2629, size: 192, offset: 2240)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2606, size: 192, elements: !236)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !561, file: !50, line: 1458, baseType: !2631, size: 2112, offset: 4288)
!2631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !50, line: 1410, size: 2112, elements: !2632)
!2632 = !{!2633, !2634, !2635}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2631, file: !50, line: 1411, baseType: !135, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2631, file: !50, line: 1412, baseType: !1446, size: 128, offset: 64)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2631, file: !50, line: 1413, baseType: !2636, size: 1920, offset: 192)
!2636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2637, size: 1920, elements: !236)
!2637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2638, line: 12, size: 640, elements: !2639)
!2638 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2639 = !{!2640, !2648, !2650, !2655, !2656}
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2637, file: !2638, line: 13, baseType: !2641, size: 320)
!2641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2642, line: 17, size: 320, elements: !2643)
!2642 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2643 = !{!2644, !2645, !2646, !2647}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2641, file: !2642, line: 18, baseType: !135, size: 32)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2641, file: !2642, line: 19, baseType: !135, size: 32, offset: 32)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2641, file: !2642, line: 20, baseType: !1446, size: 128, offset: 64)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2641, file: !2642, line: 22, baseType: !326, size: 128, align: 64, offset: 192)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2637, file: !2638, line: 14, baseType: !2649, size: 64, offset: 320)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2637, file: !2638, line: 15, baseType: !2651, size: 64, offset: 384)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2652, line: 16, size: 64, elements: !2653)
!2652 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2653 = !{!2654}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2651, file: !2652, line: 17, baseType: !1181, size: 64)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2637, file: !2638, line: 16, baseType: !1446, size: 128, offset: 448)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2637, file: !2638, line: 17, baseType: !712, size: 32, offset: 576)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !561, file: !50, line: 1465, baseType: !162, size: 64, offset: 6400)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !561, file: !50, line: 1468, baseType: !376, size: 32, offset: 6464)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !561, file: !50, line: 1470, baseType: !500, size: 64, offset: 6528)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !561, file: !50, line: 1471, baseType: !500, size: 64, offset: 6592)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !561, file: !50, line: 1473, baseType: !378, size: 32, offset: 6656)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !561, file: !50, line: 1474, baseType: !2663, size: 64, offset: 6720)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !50, line: 603, flags: DIFlagFwdDecl)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !561, file: !50, line: 1477, baseType: !2666, size: 256, offset: 6784)
!2666 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 256, elements: !2196)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !561, file: !50, line: 1478, baseType: !2668, size: 128, offset: 7040)
!2668 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2669, line: 18, baseType: !2670)
!2669 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2670 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2669, line: 16, size: 128, elements: !2671)
!2671 = !{!2672}
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2670, file: !2669, line: 17, baseType: !2673, size: 128)
!2673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 128, elements: !1700)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !561, file: !50, line: 1480, baseType: !7, size: 32, offset: 7168)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !561, file: !50, line: 1481, baseType: !2676, size: 32, offset: 7200)
!2676 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !168, line: 150, baseType: !7)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !561, file: !50, line: 1487, baseType: !1138, size: 192, offset: 7232)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !561, file: !50, line: 1493, baseType: !182, size: 64, offset: 7424)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !561, file: !50, line: 1495, baseType: !2680, size: 64, offset: 7488)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !341, line: 135, size: 1024, align: 512, elements: !2683)
!2683 = !{!2684, !2688, !2689, !2696, !2702, !2706, !2710, !2714, !2715, !2719, !2723, !2728, !2732}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2682, file: !341, line: 136, baseType: !2685, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2686, size: 64)
!2686 = !DISubroutineType(types: !2687)
!2687 = !{!135, !343, !7}
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2682, file: !341, line: 137, baseType: !2685, size: 64, offset: 64)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2682, file: !341, line: 138, baseType: !2690, size: 64, offset: 128)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{!135, !2693, !2695}
!2693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2694, size: 64)
!2694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !344)
!2695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2682, file: !341, line: 139, baseType: !2697, size: 64, offset: 192)
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{!135, !2693, !7, !182, !2700}
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !367)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2682, file: !341, line: 141, baseType: !2703, size: 64, offset: 256)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!135, !2693}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2682, file: !341, line: 142, baseType: !2707, size: 64, offset: 320)
!2707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2708, size: 64)
!2708 = !DISubroutineType(types: !2709)
!2709 = !{!135, !343}
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2682, file: !341, line: 143, baseType: !2711, size: 64, offset: 384)
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{null, !343}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2682, file: !341, line: 144, baseType: !2711, size: 64, offset: 448)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2682, file: !341, line: 145, baseType: !2716, size: 64, offset: 512)
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2717 = !DISubroutineType(types: !2718)
!2718 = !{null, !343, !390}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2682, file: !341, line: 146, baseType: !2720, size: 64, offset: 576)
!2720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2721, size: 64)
!2721 = !DISubroutineType(types: !2722)
!2722 = !{!235, !343, !235, !135}
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2682, file: !341, line: 147, baseType: !2724, size: 64, offset: 640)
!2724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2725, size: 64)
!2725 = !DISubroutineType(types: !2726)
!2726 = !{!339, !2727}
!2727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2682, file: !341, line: 148, baseType: !2729, size: 64, offset: 704)
!2729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2730, size: 64)
!2730 = !DISubroutineType(types: !2731)
!2731 = !{!135, !510, !451}
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2682, file: !341, line: 149, baseType: !2733, size: 64, offset: 768)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DISubroutineType(types: !2735)
!2735 = !{!343, !343, !2736}
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !391)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !561, file: !50, line: 1500, baseType: !135, size: 32, offset: 7552)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !561, file: !50, line: 1502, baseType: !2740, size: 448, offset: 7616)
!2740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2384, line: 60, size: 448, elements: !2741)
!2741 = !{!2742, !2747, !2748, !2749, !2750, !2751, !2752}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2740, file: !2384, line: 61, baseType: !2743, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DISubroutineType(types: !2745)
!2745 = !{!285, !2746, !2382}
!2746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2740, file: !2384, line: 63, baseType: !2743, size: 64, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2740, file: !2384, line: 66, baseType: !270, size: 64, offset: 128)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2740, file: !2384, line: 67, baseType: !135, size: 32, offset: 192)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2740, file: !2384, line: 68, baseType: !7, size: 32, offset: 224)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2740, file: !2384, line: 71, baseType: !167, size: 128, offset: 256)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2740, file: !2384, line: 77, baseType: !2753, size: 64, offset: 384)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !561, file: !50, line: 1505, baseType: !736, size: 64, offset: 8064)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !561, file: !50, line: 1508, baseType: !736, size: 64, offset: 8128)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !561, file: !50, line: 1511, baseType: !135, size: 32, offset: 8192)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !561, file: !50, line: 1514, baseType: !874, size: 32, offset: 8224)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !561, file: !50, line: 1517, baseType: !2759, size: 64, offset: 8256)
!2759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2760, size: 64)
!2760 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1924, line: 18, flags: DIFlagFwdDecl)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !561, file: !50, line: 1518, baseType: !599, size: 64, offset: 8320)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !561, file: !50, line: 1525, baseType: !1678, size: 64, offset: 8384)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !561, file: !50, line: 1532, baseType: !2764, size: 64, offset: 8448)
!2764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2765, line: 52, size: 64, elements: !2766)
!2765 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2766 = !{!2767}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2764, file: !2765, line: 53, baseType: !2768, size: 64)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2765, line: 40, size: 256, elements: !2770)
!2770 = !{!2771, !2772, !2777}
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2769, file: !2765, line: 42, baseType: !194)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2769, file: !2765, line: 44, baseType: !2773, size: 192)
!2773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2765, line: 28, size: 192, elements: !2774)
!2774 = !{!2775, !2776}
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2773, file: !2765, line: 29, baseType: !167, size: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2773, file: !2765, line: 31, baseType: !270, size: 64, offset: 128)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2769, file: !2765, line: 49, baseType: !270, size: 64, offset: 192)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !561, file: !50, line: 1533, baseType: !2764, size: 64, offset: 8512)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !561, file: !50, line: 1534, baseType: !326, size: 128, align: 64, offset: 8576)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !561, file: !50, line: 1535, baseType: !1923, size: 256, offset: 8704)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !561, file: !50, line: 1537, baseType: !1138, size: 192, offset: 8960)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !561, file: !50, line: 1542, baseType: !135, size: 32, offset: 9152)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !561, file: !50, line: 1545, baseType: !194, offset: 9184)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !561, file: !50, line: 1546, baseType: !167, size: 128, offset: 9216)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !561, file: !50, line: 1548, baseType: !194, offset: 9344)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !561, file: !50, line: 1549, baseType: !167, size: 128, offset: 9344)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !391, file: !50, line: 624, baseType: !698, size: 64, offset: 256)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !391, file: !50, line: 631, baseType: !285, size: 64, offset: 320)
!2789 = !DIDerivedType(tag: DW_TAG_member, scope: !391, file: !50, line: 639, baseType: !2790, size: 32, offset: 384)
!2790 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !391, file: !50, line: 639, size: 32, elements: !2791)
!2791 = !{!2792, !2794}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2790, file: !50, line: 640, baseType: !2793, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2790, file: !50, line: 641, baseType: !7, size: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !391, file: !50, line: 643, baseType: !474, size: 32, offset: 416)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !391, file: !50, line: 644, baseType: !492, size: 64, offset: 448)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !391, file: !50, line: 645, baseType: !496, size: 128, offset: 512)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !391, file: !50, line: 646, baseType: !496, size: 128, offset: 640)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !391, file: !50, line: 647, baseType: !496, size: 128, offset: 768)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !391, file: !50, line: 648, baseType: !194, offset: 896)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !391, file: !50, line: 649, baseType: !277, size: 16, offset: 896)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !391, file: !50, line: 650, baseType: !1317, size: 8, offset: 912)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !391, file: !50, line: 651, baseType: !1317, size: 8, offset: 920)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !391, file: !50, line: 652, baseType: !2556, size: 64, offset: 960)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !391, file: !50, line: 659, baseType: !285, size: 64, offset: 1024)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !391, file: !50, line: 660, baseType: !732, size: 256, offset: 1088)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !391, file: !50, line: 662, baseType: !285, size: 64, offset: 1344)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !391, file: !50, line: 663, baseType: !285, size: 64, offset: 1408)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !391, file: !50, line: 665, baseType: !603, size: 128, offset: 1472)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !391, file: !50, line: 666, baseType: !167, size: 128, offset: 1600)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !391, file: !50, line: 675, baseType: !167, size: 128, offset: 1728)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !391, file: !50, line: 676, baseType: !167, size: 128, offset: 1856)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !391, file: !50, line: 677, baseType: !167, size: 128, offset: 1984)
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !391, file: !50, line: 678, baseType: !2815, size: 128, offset: 2112)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !391, file: !50, line: 678, size: 128, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2815, file: !50, line: 679, baseType: !599, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2815, file: !50, line: 680, baseType: !326, size: 128, align: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !391, file: !50, line: 682, baseType: !738, size: 64, offset: 2240)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !391, file: !50, line: 683, baseType: !738, size: 64, offset: 2304)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !391, file: !50, line: 684, baseType: !712, size: 32, offset: 2368)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !391, file: !50, line: 685, baseType: !712, size: 32, offset: 2400)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !391, file: !50, line: 686, baseType: !712, size: 32, offset: 2432)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !391, file: !50, line: 688, baseType: !712, size: 32, offset: 2464)
!2825 = !DIDerivedType(tag: DW_TAG_member, scope: !391, file: !50, line: 690, baseType: !2826, size: 64, offset: 2496)
!2826 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !391, file: !50, line: 690, size: 64, elements: !2827)
!2827 = !{!2828, !3051}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2826, file: !50, line: 691, baseType: !2829, size: 64)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2831)
!2831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !50, line: 1822, size: 2048, elements: !2832)
!2832 = !{!2833, !2834, !2838, !2843, !2847, !2848, !2849, !2853, !2866, !2867, !2875, !2879, !2880, !2884, !2885, !2889, !2894, !2895, !2899, !2903, !3011, !3015, !3016, !3020, !3021, !3025, !3029, !3034, !3038, !3042, !3046, !3050}
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2831, file: !50, line: 1823, baseType: !594, size: 64)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2831, file: !50, line: 1824, baseType: !2835, size: 64, offset: 64)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DISubroutineType(types: !2837)
!2837 = !{!492, !313, !492, !135}
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2831, file: !50, line: 1825, baseType: !2839, size: 64, offset: 128)
!2839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2840, size: 64)
!2840 = !DISubroutineType(types: !2841)
!2841 = !{!266, !313, !235, !282, !2842}
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !492, size: 64)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2831, file: !50, line: 1826, baseType: !2844, size: 64, offset: 192)
!2844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2845, size: 64)
!2845 = !DISubroutineType(types: !2846)
!2846 = !{!266, !313, !182, !282, !2842}
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2831, file: !50, line: 1827, baseType: !809, size: 64, offset: 256)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2831, file: !50, line: 1828, baseType: !809, size: 64, offset: 320)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2831, file: !50, line: 1829, baseType: !2850, size: 64, offset: 384)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!135, !812, !451}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2831, file: !50, line: 1830, baseType: !2854, size: 64, offset: 448)
!2854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2855, size: 64)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{!135, !313, !2857}
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !50, line: 1776, size: 128, elements: !2859)
!2859 = !{!2860, !2865}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2858, file: !50, line: 1777, baseType: !2861, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !50, line: 1773, baseType: !2862)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!135, !2857, !182, !135, !492, !382, !7}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2858, file: !50, line: 1778, baseType: !492, size: 64, offset: 64)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2831, file: !50, line: 1831, baseType: !2854, size: 64, offset: 512)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2831, file: !50, line: 1832, baseType: !2868, size: 64, offset: 576)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DISubroutineType(types: !2870)
!2870 = !{!2871, !313, !2873}
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2872, line: 52, baseType: !7)
!2872 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !580, line: 27, flags: DIFlagFwdDecl)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2831, file: !50, line: 1833, baseType: !2876, size: 64, offset: 640)
!2876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2877, size: 64)
!2877 = !DISubroutineType(types: !2878)
!2878 = !{!270, !313, !7, !285}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2831, file: !50, line: 1834, baseType: !2876, size: 64, offset: 704)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2831, file: !50, line: 1835, baseType: !2881, size: 64, offset: 768)
!2881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2882, size: 64)
!2882 = !DISubroutineType(types: !2883)
!2883 = !{!135, !313, !946}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2831, file: !50, line: 1836, baseType: !285, size: 64, offset: 832)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2831, file: !50, line: 1837, baseType: !2886, size: 64, offset: 896)
!2886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2887, size: 64)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{!135, !390, !313}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2831, file: !50, line: 1838, baseType: !2890, size: 64, offset: 960)
!2890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2891, size: 64)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!135, !313, !2893}
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !50, line: 1007, baseType: !162)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2831, file: !50, line: 1839, baseType: !2886, size: 64, offset: 1024)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2831, file: !50, line: 1840, baseType: !2896, size: 64, offset: 1088)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!135, !313, !492, !492, !135}
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2831, file: !50, line: 1841, baseType: !2900, size: 64, offset: 1152)
!2900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2901, size: 64)
!2901 = !DISubroutineType(types: !2902)
!2902 = !{!135, !135, !313, !135}
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2831, file: !50, line: 1842, baseType: !2904, size: 64, offset: 1216)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DISubroutineType(types: !2906)
!2906 = !{!135, !313, !135, !2907}
!2907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2908, size: 64)
!2908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !50, line: 1062, size: 1664, elements: !2909)
!2909 = !{!2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2941, !2942, !2943, !2956, !2987}
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2908, file: !50, line: 1063, baseType: !2907, size: 64)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2908, file: !50, line: 1064, baseType: !167, size: 128, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2908, file: !50, line: 1065, baseType: !603, size: 128, offset: 192)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2908, file: !50, line: 1066, baseType: !167, size: 128, offset: 320)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2908, file: !50, line: 1069, baseType: !167, size: 128, offset: 448)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2908, file: !50, line: 1072, baseType: !2893, size: 64, offset: 576)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2908, file: !50, line: 1073, baseType: !7, size: 32, offset: 640)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2908, file: !50, line: 1074, baseType: !388, size: 8, offset: 672)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2908, file: !50, line: 1075, baseType: !7, size: 32, offset: 704)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2908, file: !50, line: 1076, baseType: !135, size: 32, offset: 736)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2908, file: !50, line: 1077, baseType: !1446, size: 128, offset: 768)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2908, file: !50, line: 1078, baseType: !313, size: 64, offset: 896)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2908, file: !50, line: 1079, baseType: !492, size: 64, offset: 960)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2908, file: !50, line: 1080, baseType: !492, size: 64, offset: 1024)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2908, file: !50, line: 1082, baseType: !2925, size: 64, offset: 1088)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2926, size: 64)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !50, line: 1314, size: 320, elements: !2927)
!2927 = !{!2928, !2936, !2937, !2938, !2939, !2940}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2926, file: !50, line: 1315, baseType: !2929)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2930, line: 20, baseType: !2931)
!2930 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2930, line: 11, elements: !2932)
!2932 = !{!2933}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2931, file: !2930, line: 12, baseType: !2934)
!2934 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !206, line: 33, baseType: !2935)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !206, line: 31, elements: !208)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2926, file: !50, line: 1316, baseType: !135, size: 32)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2926, file: !50, line: 1317, baseType: !135, size: 32, offset: 32)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2926, file: !50, line: 1318, baseType: !2925, size: 64, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2926, file: !50, line: 1319, baseType: !313, size: 64, offset: 128)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2926, file: !50, line: 1320, baseType: !326, size: 128, align: 64, offset: 192)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2908, file: !50, line: 1084, baseType: !285, size: 64, offset: 1152)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2908, file: !50, line: 1085, baseType: !285, size: 64, offset: 1216)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2908, file: !50, line: 1087, baseType: !2944, size: 64, offset: 1280)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2946)
!2946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !50, line: 1011, size: 128, elements: !2947)
!2947 = !{!2948, !2952}
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2946, file: !50, line: 1012, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{null, !2907, !2907}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2946, file: !50, line: 1013, baseType: !2953, size: 64, offset: 64)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{null, !2907}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2908, file: !50, line: 1088, baseType: !2957, size: 64, offset: 1344)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2959)
!2959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !50, line: 1016, size: 512, elements: !2960)
!2960 = !{!2961, !2965, !2969, !2970, !2974, !2978, !2982, !2986}
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2959, file: !50, line: 1017, baseType: !2962, size: 64)
!2962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2963, size: 64)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{!2893, !2893}
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2959, file: !50, line: 1018, baseType: !2966, size: 64, offset: 64)
!2966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2967 = !DISubroutineType(types: !2968)
!2968 = !{null, !2893}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2959, file: !50, line: 1019, baseType: !2953, size: 64, offset: 128)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2959, file: !50, line: 1020, baseType: !2971, size: 64, offset: 192)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!135, !2907, !135}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2959, file: !50, line: 1021, baseType: !2975, size: 64, offset: 256)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{!451, !2907}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2959, file: !50, line: 1022, baseType: !2979, size: 64, offset: 320)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{!135, !2907, !135, !171}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2959, file: !50, line: 1023, baseType: !2983, size: 64, offset: 384)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{null, !2907, !786}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2959, file: !50, line: 1024, baseType: !2975, size: 64, offset: 448)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2908, file: !50, line: 1097, baseType: !2988, size: 256, offset: 1408)
!2988 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2908, file: !50, line: 1089, size: 256, elements: !2989)
!2989 = !{!2990, !2999, !3005}
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2988, file: !50, line: 1090, baseType: !2991, size: 256)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2992, line: 10, size: 256, elements: !2993)
!2992 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2993 = !{!2994, !2995, !2998}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2991, file: !2992, line: 11, baseType: !376, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2991, file: !2992, line: 12, baseType: !2996, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2992, line: 5, flags: DIFlagFwdDecl)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2991, file: !2992, line: 13, baseType: !167, size: 128, offset: 128)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2988, file: !50, line: 1091, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2992, line: 17, size: 64, elements: !3001)
!3001 = !{!3002}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3000, file: !2992, line: 18, baseType: !3003, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2992, line: 16, flags: DIFlagFwdDecl)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2988, file: !50, line: 1096, baseType: !3006, size: 192)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2988, file: !50, line: 1092, size: 192, elements: !3007)
!3007 = !{!3008, !3009, !3010}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3006, file: !50, line: 1093, baseType: !167, size: 128)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3006, file: !50, line: 1094, baseType: !135, size: 32, offset: 128)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3006, file: !50, line: 1095, baseType: !7, size: 32, offset: 160)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2831, file: !50, line: 1843, baseType: !3012, size: 64, offset: 1280)
!3012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3013, size: 64)
!3013 = !DISubroutineType(types: !3014)
!3014 = !{!266, !313, !685, !135, !282, !2842, !135}
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2831, file: !50, line: 1844, baseType: !1066, size: 64, offset: 1344)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2831, file: !50, line: 1845, baseType: !3017, size: 64, offset: 1408)
!3017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3018, size: 64)
!3018 = !DISubroutineType(types: !3019)
!3019 = !{!135, !135}
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2831, file: !50, line: 1846, baseType: !2904, size: 64, offset: 1472)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2831, file: !50, line: 1847, baseType: !3022, size: 64, offset: 1536)
!3022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3023, size: 64)
!3023 = !DISubroutineType(types: !3024)
!3024 = !{!266, !2064, !313, !2842, !282, !7}
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2831, file: !50, line: 1848, baseType: !3026, size: 64, offset: 1600)
!3026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3027, size: 64)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{!266, !313, !2842, !2064, !282, !7}
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2831, file: !50, line: 1849, baseType: !3030, size: 64, offset: 1664)
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3031, size: 64)
!3031 = !DISubroutineType(types: !3032)
!3032 = !{!135, !313, !270, !3033, !786}
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2907, size: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2831, file: !50, line: 1850, baseType: !3035, size: 64, offset: 1728)
!3035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3036, size: 64)
!3036 = !DISubroutineType(types: !3037)
!3037 = !{!270, !313, !135, !492, !492}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2831, file: !50, line: 1852, baseType: !3039, size: 64, offset: 1792)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{null, !675, !313}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2831, file: !50, line: 1856, baseType: !3043, size: 64, offset: 1856)
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3044, size: 64)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{!266, !313, !492, !313, !492, !282, !7}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2831, file: !50, line: 1858, baseType: !3047, size: 64, offset: 1920)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!492, !313, !492, !313, !492, !492, !7}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2831, file: !50, line: 1861, baseType: !2896, size: 64, offset: 1984)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2826, file: !50, line: 692, baseType: !628, size: 64)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !391, file: !50, line: 694, baseType: !3053, size: 64, offset: 2560)
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !50, line: 1100, size: 384, elements: !3055)
!3055 = !{!3056, !3057, !3058, !3059}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3054, file: !50, line: 1101, baseType: !194)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3054, file: !50, line: 1102, baseType: !167, size: 128)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3054, file: !50, line: 1103, baseType: !167, size: 128, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3054, file: !50, line: 1104, baseType: !167, size: 128, offset: 256)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !391, file: !50, line: 695, baseType: !699, size: 1216, align: 64, offset: 2624)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !391, file: !50, line: 696, baseType: !167, size: 128, offset: 3840)
!3062 = !DIDerivedType(tag: DW_TAG_member, scope: !391, file: !50, line: 697, baseType: !3063, size: 64, offset: 3968)
!3063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !391, file: !50, line: 697, size: 64, elements: !3064)
!3064 = !{!3065, !3066, !3067, !3070, !3071}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3063, file: !50, line: 698, baseType: !2064, size: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3063, file: !50, line: 699, baseType: !2581, size: 64)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3063, file: !50, line: 700, baseType: !3068, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3069, size: 64)
!3069 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !50, line: 700, flags: DIFlagFwdDecl)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3063, file: !50, line: 701, baseType: !235, size: 64)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3063, file: !50, line: 702, baseType: !7, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !391, file: !50, line: 705, baseType: !378, size: 32, offset: 4032)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !391, file: !50, line: 708, baseType: !378, size: 32, offset: 4064)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !391, file: !50, line: 709, baseType: !2663, size: 64, offset: 4096)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !391, file: !50, line: 720, baseType: !162, size: 64, offset: 4160)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !344, file: !341, line: 98, baseType: !3077, size: 256, offset: 448)
!3077 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 256, elements: !2196)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !344, file: !341, line: 101, baseType: !3079, size: 32, offset: 704)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3080, line: 25, size: 32, elements: !3081)
!3080 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3081 = !{!3082}
!3082 = !DIDerivedType(tag: DW_TAG_member, scope: !3079, file: !3080, line: 26, baseType: !3083, size: 32)
!3083 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3079, file: !3080, line: 26, size: 32, elements: !3084)
!3084 = !{!3085}
!3085 = !DIDerivedType(tag: DW_TAG_member, scope: !3083, file: !3080, line: 30, baseType: !3086, size: 32)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3083, file: !3080, line: 30, size: 32, elements: !3087)
!3087 = !{!3088, !3089}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3086, file: !3080, line: 31, baseType: !194)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3086, file: !3080, line: 32, baseType: !135, size: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !344, file: !341, line: 102, baseType: !2680, size: 64, offset: 768)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !344, file: !341, line: 103, baseType: !560, size: 64, offset: 832)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !344, file: !341, line: 104, baseType: !285, size: 64, offset: 896)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !344, file: !341, line: 105, baseType: !162, size: 64, offset: 960)
!3094 = !DIDerivedType(tag: DW_TAG_member, scope: !344, file: !341, line: 107, baseType: !3095, size: 128, offset: 1024)
!3095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !341, line: 107, size: 128, elements: !3096)
!3096 = !{!3097, !3098}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3095, file: !341, line: 108, baseType: !167, size: 128)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3095, file: !341, line: 109, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !344, file: !341, line: 111, baseType: !167, size: 128, offset: 1152)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !344, file: !341, line: 112, baseType: !167, size: 128, offset: 1280)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !344, file: !341, line: 120, baseType: !3103, size: 128, offset: 1408)
!3103 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !344, file: !341, line: 116, size: 128, elements: !3104)
!3104 = !{!3105, !3106, !3107}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3103, file: !341, line: 117, baseType: !603, size: 128)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3103, file: !341, line: 118, baseType: !358, size: 128)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3103, file: !341, line: 119, baseType: !326, size: 128, align: 64)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !314, file: !50, line: 922, baseType: !390, size: 64, offset: 256)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !314, file: !50, line: 923, baseType: !2829, size: 64, offset: 320)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !314, file: !50, line: 929, baseType: !194, offset: 384)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !314, file: !50, line: 930, baseType: !49, size: 32, offset: 384)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !314, file: !50, line: 931, baseType: !736, size: 64, offset: 448)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !314, file: !50, line: 932, baseType: !7, size: 32, offset: 512)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !314, file: !50, line: 933, baseType: !2676, size: 32, offset: 544)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !314, file: !50, line: 934, baseType: !1138, size: 192, offset: 576)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !314, file: !50, line: 935, baseType: !492, size: 64, offset: 768)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !314, file: !50, line: 936, baseType: !3118, size: 192, offset: 832)
!3118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !50, line: 885, size: 192, elements: !3119)
!3119 = !{!3120, !3121, !3122, !3123, !3124, !3125}
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3118, file: !50, line: 886, baseType: !2929)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3118, file: !50, line: 887, baseType: !1436, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3118, file: !50, line: 888, baseType: !58, size: 32, offset: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3118, file: !50, line: 889, baseType: !396, size: 32, offset: 96)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3118, file: !50, line: 889, baseType: !396, size: 32, offset: 128)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3118, file: !50, line: 890, baseType: !135, size: 32, offset: 160)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !314, file: !50, line: 937, baseType: !1512, size: 64, offset: 1024)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !314, file: !50, line: 938, baseType: !3128, size: 256, offset: 1088)
!3128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !50, line: 896, size: 256, elements: !3129)
!3129 = !{!3130, !3131, !3132, !3133, !3134, !3135}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3128, file: !50, line: 897, baseType: !285, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3128, file: !50, line: 898, baseType: !7, size: 32, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3128, file: !50, line: 899, baseType: !7, size: 32, offset: 96)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3128, file: !50, line: 902, baseType: !7, size: 32, offset: 128)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3128, file: !50, line: 903, baseType: !7, size: 32, offset: 160)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3128, file: !50, line: 904, baseType: !492, size: 64, offset: 192)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !314, file: !50, line: 940, baseType: !382, size: 64, offset: 1344)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !314, file: !50, line: 945, baseType: !162, size: 64, offset: 1408)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !314, file: !50, line: 949, baseType: !167, size: 128, offset: 1472)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !314, file: !50, line: 950, baseType: !167, size: 128, offset: 1600)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !314, file: !50, line: 952, baseType: !698, size: 64, offset: 1728)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !314, file: !50, line: 953, baseType: !874, size: 32, offset: 1792)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !314, file: !50, line: 954, baseType: !874, size: 32, offset: 1824)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !304, file: !260, line: 174, baseType: !310, size: 64, offset: 320)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !304, file: !260, line: 176, baseType: !3145, size: 64, offset: 384)
!3145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3146, size: 64)
!3146 = !DISubroutineType(types: !3147)
!3147 = !{!135, !313, !187, !303, !946}
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !292, file: !260, line: 90, baseType: !287, size: 64, offset: 192)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !292, file: !260, line: 91, baseType: !3150, size: 64, offset: 256)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !250, file: !179, line: 143, baseType: !3152, size: 64, offset: 256)
!3152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3153, size: 64)
!3153 = !DISubroutineType(types: !3154)
!3154 = !{!3155, !187}
!3155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3156, size: 64)
!3156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3157)
!3157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !67, line: 39, size: 384, elements: !3158)
!3158 = !{!3159, !3160, !3164, !3168, !3174, !3178}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3157, file: !67, line: 40, baseType: !66, size: 32)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3157, file: !67, line: 41, baseType: !3161, size: 64, offset: 64)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3162, size: 64)
!3162 = !DISubroutineType(types: !3163)
!3163 = !{!451}
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3157, file: !67, line: 42, baseType: !3165, size: 64, offset: 128)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DISubroutineType(types: !3167)
!3167 = !{!162}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3157, file: !67, line: 43, baseType: !3169, size: 64, offset: 192)
!3169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!2093, !3172}
!3172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3173, size: 64)
!3173 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !67, line: 19, flags: DIFlagFwdDecl)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3157, file: !67, line: 44, baseType: !3175, size: 64, offset: 256)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DISubroutineType(types: !3177)
!3177 = !{!2093}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3157, file: !67, line: 45, baseType: !429, size: 64, offset: 320)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !250, file: !179, line: 144, baseType: !3180, size: 64, offset: 320)
!3180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3181, size: 64)
!3181 = !DISubroutineType(types: !3182)
!3182 = !{!2093, !187}
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !250, file: !179, line: 145, baseType: !3184, size: 64, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DISubroutineType(types: !3186)
!3186 = !{null, !187, !3187, !3188}
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !178, file: !179, line: 70, baseType: !3190, size: 64, offset: 384)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !580, line: 123, size: 1024, elements: !3192)
!3192 = !{!3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200, !3321, !3322, !3323, !3324, !3325}
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3191, file: !580, line: 124, baseType: !712, size: 32)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3191, file: !580, line: 125, baseType: !712, size: 32, offset: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3191, file: !580, line: 135, baseType: !3190, size: 64, offset: 64)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3191, file: !580, line: 136, baseType: !182, size: 64, offset: 128)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3191, file: !580, line: 138, baseType: !725, size: 192, align: 64, offset: 192)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3191, file: !580, line: 140, baseType: !2093, size: 64, offset: 384)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3191, file: !580, line: 141, baseType: !7, size: 32, offset: 448)
!3200 = !DIDerivedType(tag: DW_TAG_member, scope: !3191, file: !580, line: 142, baseType: !3201, size: 256, offset: 512)
!3201 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3191, file: !580, line: 142, size: 256, elements: !3202)
!3202 = !{!3203, !3249, !3253}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3201, file: !580, line: 143, baseType: !3204, size: 192)
!3204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !580, line: 91, size: 192, elements: !3205)
!3205 = !{!3206, !3207, !3208}
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3204, file: !580, line: 92, baseType: !285, size: 64)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3204, file: !580, line: 94, baseType: !721, size: 64, offset: 64)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3204, file: !580, line: 100, baseType: !3209, size: 64, offset: 128)
!3209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3210, size: 64)
!3210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !580, line: 180, size: 704, elements: !3211)
!3211 = !{!3212, !3213, !3214, !3221, !3222, !3223, !3247, !3248}
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3210, file: !580, line: 182, baseType: !3190, size: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3210, file: !580, line: 183, baseType: !7, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3210, file: !580, line: 186, baseType: !3215, size: 192, offset: 128)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3216, line: 19, size: 192, elements: !3217)
!3216 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3217 = !{!3218, !3219, !3220}
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3215, file: !3216, line: 20, baseType: !703, size: 128)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3215, file: !3216, line: 21, baseType: !7, size: 32, offset: 128)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3215, file: !3216, line: 22, baseType: !7, size: 32, offset: 160)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3210, file: !580, line: 187, baseType: !376, size: 32, offset: 320)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3210, file: !580, line: 188, baseType: !376, size: 32, offset: 352)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3210, file: !580, line: 189, baseType: !3224, size: 64, offset: 384)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !580, line: 168, size: 320, elements: !3226)
!3226 = !{!3227, !3231, !3235, !3239, !3243}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3225, file: !580, line: 169, baseType: !3228, size: 64)
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DISubroutineType(types: !3230)
!3230 = !{!135, !675, !3209}
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3225, file: !580, line: 171, baseType: !3232, size: 64, offset: 64)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DISubroutineType(types: !3234)
!3234 = !{!135, !3190, !182, !276}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3225, file: !580, line: 173, baseType: !3236, size: 64, offset: 128)
!3236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!3237 = !DISubroutineType(types: !3238)
!3238 = !{!135, !3190}
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3225, file: !580, line: 174, baseType: !3240, size: 64, offset: 192)
!3240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3241, size: 64)
!3241 = !DISubroutineType(types: !3242)
!3242 = !{!135, !3190, !3190, !182}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3225, file: !580, line: 176, baseType: !3244, size: 64, offset: 256)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DISubroutineType(types: !3246)
!3246 = !{!135, !675, !3190, !3209}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3210, file: !580, line: 192, baseType: !167, size: 128, offset: 448)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3210, file: !580, line: 194, baseType: !1446, size: 128, offset: 576)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3201, file: !580, line: 144, baseType: !3250, size: 64)
!3250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !580, line: 103, size: 64, elements: !3251)
!3251 = !{!3252}
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3250, file: !580, line: 104, baseType: !3190, size: 64)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3201, file: !580, line: 145, baseType: !3254, size: 256)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !580, line: 107, size: 256, elements: !3255)
!3255 = !{!3256, !3316, !3319, !3320}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3254, file: !580, line: 108, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3259)
!3259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !580, line: 217, size: 768, elements: !3260)
!3260 = !{!3261, !3281, !3285, !3289, !3293, !3297, !3301, !3305, !3306, !3307, !3308, !3312}
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3259, file: !580, line: 222, baseType: !3262, size: 64)
!3262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3263, size: 64)
!3263 = !DISubroutineType(types: !3264)
!3264 = !{!135, !3265}
!3265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3266, size: 64)
!3266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !580, line: 197, size: 1088, elements: !3267)
!3267 = !{!3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280}
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3266, file: !580, line: 199, baseType: !3190, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3266, file: !580, line: 200, baseType: !313, size: 64, offset: 64)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3266, file: !580, line: 201, baseType: !675, size: 64, offset: 128)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3266, file: !580, line: 202, baseType: !162, size: 64, offset: 192)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3266, file: !580, line: 205, baseType: !1138, size: 192, offset: 256)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3266, file: !580, line: 206, baseType: !1138, size: 192, offset: 448)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3266, file: !580, line: 207, baseType: !135, size: 32, offset: 640)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3266, file: !580, line: 208, baseType: !167, size: 128, offset: 704)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3266, file: !580, line: 209, baseType: !235, size: 64, offset: 832)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3266, file: !580, line: 211, baseType: !282, size: 64, offset: 896)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3266, file: !580, line: 212, baseType: !451, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3266, file: !580, line: 213, baseType: !451, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3266, file: !580, line: 214, baseType: !974, size: 64, offset: 1024)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3259, file: !580, line: 223, baseType: !3282, size: 64, offset: 64)
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = !DISubroutineType(types: !3284)
!3284 = !{null, !3265}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3259, file: !580, line: 236, baseType: !3286, size: 64, offset: 128)
!3286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 64)
!3287 = !DISubroutineType(types: !3288)
!3288 = !{!135, !675, !162}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3259, file: !580, line: 238, baseType: !3290, size: 64, offset: 192)
!3290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3291, size: 64)
!3291 = !DISubroutineType(types: !3292)
!3292 = !{!162, !675, !2842}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3259, file: !580, line: 239, baseType: !3294, size: 64, offset: 256)
!3294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3295, size: 64)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!162, !675, !162, !2842}
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3259, file: !580, line: 240, baseType: !3298, size: 64, offset: 320)
!3298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3299, size: 64)
!3299 = !DISubroutineType(types: !3300)
!3300 = !{null, !675, !162}
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3259, file: !580, line: 242, baseType: !3302, size: 64, offset: 384)
!3302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3303, size: 64)
!3303 = !DISubroutineType(types: !3304)
!3304 = !{!266, !3265, !235, !282, !492}
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3259, file: !580, line: 252, baseType: !282, size: 64, offset: 448)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3259, file: !580, line: 259, baseType: !451, size: 8, offset: 512)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3259, file: !580, line: 260, baseType: !3302, size: 64, offset: 576)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3259, file: !580, line: 263, baseType: !3309, size: 64, offset: 640)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DISubroutineType(types: !3311)
!3311 = !{!2871, !3265, !2873}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3259, file: !580, line: 266, baseType: !3313, size: 64, offset: 704)
!3313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3314, size: 64)
!3314 = !DISubroutineType(types: !3315)
!3315 = !{!135, !3265, !946}
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3254, file: !580, line: 109, baseType: !3317, size: 64, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3318, size: 64)
!3318 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !580, line: 31, flags: DIFlagFwdDecl)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3254, file: !580, line: 110, baseType: !492, size: 64, offset: 128)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3254, file: !580, line: 111, baseType: !3190, size: 64, offset: 192)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3191, file: !580, line: 148, baseType: !162, size: 64, offset: 768)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3191, file: !580, line: 154, baseType: !382, size: 64, offset: 832)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3191, file: !580, line: 156, baseType: !277, size: 16, offset: 896)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3191, file: !580, line: 157, baseType: !276, size: 16, offset: 912)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3191, file: !580, line: 158, baseType: !3326, size: 64, offset: 960)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !580, line: 32, flags: DIFlagFwdDecl)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !178, file: !179, line: 71, baseType: !3329, size: 32, offset: 448)
!3329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3330, line: 19, size: 32, elements: !3331)
!3330 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3331 = !{!3332}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3329, file: !3330, line: 20, baseType: !1195, size: 32)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !178, file: !179, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !178, file: !179, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !178, file: !179, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !178, file: !179, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !178, file: !179, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !175, file: !79, line: 463, baseType: !174, size: 64, offset: 512)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !175, file: !79, line: 465, baseType: !3340, size: 64, offset: 576)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !79, line: 36, flags: DIFlagFwdDecl)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !175, file: !79, line: 467, baseType: !182, size: 64, offset: 640)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !175, file: !79, line: 468, baseType: !3344, size: 64, offset: 704)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3346)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !79, line: 87, size: 384, elements: !3347)
!3347 = !{!3348, !3349, !3350, !3354, !3359, !3363}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3346, file: !79, line: 88, baseType: !182, size: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3346, file: !79, line: 89, baseType: !289, size: 64, offset: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3346, file: !79, line: 90, baseType: !3351, size: 64, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DISubroutineType(types: !3353)
!3353 = !{!135, !174, !230}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3346, file: !79, line: 91, baseType: !3355, size: 64, offset: 192)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{!235, !174, !3358, !3187, !3188}
!3358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3346, file: !79, line: 93, baseType: !3360, size: 64, offset: 256)
!3360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3361, size: 64)
!3361 = !DISubroutineType(types: !3362)
!3362 = !{null, !174}
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3346, file: !79, line: 95, baseType: !3364, size: 64, offset: 320)
!3364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3365, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3366)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !86, line: 278, size: 1472, elements: !3367)
!3367 = !{!3368, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389, !3390, !3391, !3392, !3393}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3366, file: !86, line: 279, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = !DISubroutineType(types: !3371)
!3371 = !{!135, !174}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3366, file: !86, line: 280, baseType: !3360, size: 64, offset: 64)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3366, file: !86, line: 281, baseType: !3369, size: 64, offset: 128)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3366, file: !86, line: 282, baseType: !3369, size: 64, offset: 192)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3366, file: !86, line: 283, baseType: !3369, size: 64, offset: 256)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3366, file: !86, line: 284, baseType: !3369, size: 64, offset: 320)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3366, file: !86, line: 285, baseType: !3369, size: 64, offset: 384)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3366, file: !86, line: 286, baseType: !3369, size: 64, offset: 448)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3366, file: !86, line: 287, baseType: !3369, size: 64, offset: 512)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3366, file: !86, line: 288, baseType: !3369, size: 64, offset: 576)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3366, file: !86, line: 289, baseType: !3369, size: 64, offset: 640)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3366, file: !86, line: 290, baseType: !3369, size: 64, offset: 704)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3366, file: !86, line: 291, baseType: !3369, size: 64, offset: 768)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3366, file: !86, line: 292, baseType: !3369, size: 64, offset: 832)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3366, file: !86, line: 293, baseType: !3369, size: 64, offset: 896)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3366, file: !86, line: 294, baseType: !3369, size: 64, offset: 960)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3366, file: !86, line: 295, baseType: !3369, size: 64, offset: 1024)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3366, file: !86, line: 296, baseType: !3369, size: 64, offset: 1088)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3366, file: !86, line: 297, baseType: !3369, size: 64, offset: 1152)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3366, file: !86, line: 298, baseType: !3369, size: 64, offset: 1216)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3366, file: !86, line: 299, baseType: !3369, size: 64, offset: 1280)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3366, file: !86, line: 300, baseType: !3369, size: 64, offset: 1344)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3366, file: !86, line: 301, baseType: !3369, size: 64, offset: 1408)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !175, file: !79, line: 470, baseType: !3395, size: 64, offset: 768)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3397, line: 82, size: 1408, elements: !3398)
!3397 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3398 = !{!3399, !3400, !3401, !3402, !3403, !3404, !3405, !3464, !3465, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3891, !3894, !3895}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3396, file: !3397, line: 83, baseType: !182, size: 64)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3396, file: !3397, line: 84, baseType: !182, size: 64, offset: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3396, file: !3397, line: 85, baseType: !174, size: 64, offset: 128)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3396, file: !3397, line: 86, baseType: !289, size: 64, offset: 192)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3396, file: !3397, line: 87, baseType: !289, size: 64, offset: 256)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3396, file: !3397, line: 88, baseType: !289, size: 64, offset: 320)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3396, file: !3397, line: 90, baseType: !3406, size: 64, offset: 384)
!3406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3407, size: 64)
!3407 = !DISubroutineType(types: !3408)
!3408 = !{!135, !174, !3409}
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !73, line: 95, size: 1152, elements: !3411)
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3417, !3418, !3431, !3444, !3445, !3446, !3447, !3448, !3456, !3457, !3458, !3459, !3460, !3461}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3410, file: !73, line: 96, baseType: !182, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3410, file: !73, line: 97, baseType: !3395, size: 64, offset: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3410, file: !73, line: 99, baseType: !594, size: 64, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3410, file: !73, line: 100, baseType: !182, size: 64, offset: 192)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3410, file: !73, line: 102, baseType: !451, size: 8, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3410, file: !73, line: 103, baseType: !72, size: 32, offset: 288)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3410, file: !73, line: 105, baseType: !3419, size: 64, offset: 320)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3421)
!3421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3422, line: 262, size: 1600, elements: !3423)
!3422 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3423 = !{!3424, !3425, !3426, !3430}
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3421, file: !3422, line: 263, baseType: !2666, size: 256)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3421, file: !3422, line: 264, baseType: !2666, size: 256, offset: 256)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3421, file: !3422, line: 265, baseType: !3427, size: 1024, offset: 512)
!3427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 1024, elements: !3428)
!3428 = !{!3429}
!3429 = !DISubrange(count: 128)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3421, file: !3422, line: 266, baseType: !2093, size: 64, offset: 1536)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3410, file: !73, line: 106, baseType: !3432, size: 64, offset: 384)
!3432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3433, size: 64)
!3433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3434)
!3434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3422, line: 210, size: 256, elements: !3435)
!3435 = !{!3436, !3440, !3442, !3443}
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3434, file: !3422, line: 211, baseType: !3437, size: 72)
!3437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 72, elements: !3438)
!3438 = !{!3439}
!3439 = !DISubrange(count: 9)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3434, file: !3422, line: 212, baseType: !3441, size: 64, offset: 128)
!3441 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3422, line: 14, baseType: !285)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3434, file: !3422, line: 213, baseType: !378, size: 32, offset: 192)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3434, file: !3422, line: 214, baseType: !378, size: 32, offset: 224)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3410, file: !73, line: 108, baseType: !3369, size: 64, offset: 448)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3410, file: !73, line: 109, baseType: !3360, size: 64, offset: 512)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3410, file: !73, line: 110, baseType: !3369, size: 64, offset: 576)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3410, file: !73, line: 111, baseType: !3360, size: 64, offset: 640)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3410, file: !73, line: 112, baseType: !3449, size: 64, offset: 704)
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = !DISubroutineType(types: !3451)
!3451 = !{!135, !174, !3452}
!3452 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !86, line: 52, baseType: !3453)
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !86, line: 50, size: 32, elements: !3454)
!3454 = !{!3455}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3453, file: !86, line: 51, baseType: !135, size: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3410, file: !73, line: 113, baseType: !3369, size: 64, offset: 768)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3410, file: !73, line: 114, baseType: !289, size: 64, offset: 832)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3410, file: !73, line: 115, baseType: !289, size: 64, offset: 896)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3410, file: !73, line: 117, baseType: !3364, size: 64, offset: 960)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3410, file: !73, line: 118, baseType: !3360, size: 64, offset: 1024)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3410, file: !73, line: 120, baseType: !3462, size: 64, offset: 1088)
!3462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3463, size: 64)
!3463 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !73, line: 120, flags: DIFlagFwdDecl)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3396, file: !3397, line: 91, baseType: !3351, size: 64, offset: 448)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3396, file: !3397, line: 92, baseType: !3369, size: 64, offset: 512)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3396, file: !3397, line: 93, baseType: !3360, size: 64, offset: 576)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3396, file: !3397, line: 94, baseType: !3369, size: 64, offset: 640)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3396, file: !3397, line: 95, baseType: !3360, size: 64, offset: 704)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3396, file: !3397, line: 97, baseType: !3369, size: 64, offset: 768)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3396, file: !3397, line: 98, baseType: !3369, size: 64, offset: 832)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3396, file: !3397, line: 100, baseType: !3449, size: 64, offset: 896)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3396, file: !3397, line: 101, baseType: !3369, size: 64, offset: 960)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3396, file: !3397, line: 103, baseType: !3369, size: 64, offset: 1024)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3396, file: !3397, line: 105, baseType: !3369, size: 64, offset: 1088)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3396, file: !3397, line: 107, baseType: !3364, size: 64, offset: 1152)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3396, file: !3397, line: 109, baseType: !3477, size: 64, offset: 1216)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3479)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !6, line: 233, size: 2624, elements: !3480)
!3480 = !{!3481, !3485, !3508, !3512, !3516, !3520, !3524, !3534, !3535, !3536, !3540, !3544, !3644, !3645, !3646, !3680, !3684, !3685, !3689, !3690, !3702, !3706, !3710, !3746, !3750, !3754, !3755, !3759, !3760, !3761, !3762, !3763, !3771, !3775, !3779, !3827, !3858, !3884, !3888, !3889, !3890}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "capable", scope: !3479, file: !6, line: 234, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{!451, !5}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "domain_alloc", scope: !3479, file: !6, line: 237, baseType: !3486, size: 64, offset: 64)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!3489, !7}
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_domain", file: !6, line: 82, size: 576, elements: !3491)
!3491 = !{!3492, !3493, !3494, !3495, !3500, !3501, !3507}
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3490, file: !6, line: 83, baseType: !7, size: 32)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3490, file: !6, line: 84, baseType: !3477, size: 64, offset: 64)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "pgsize_bitmap", scope: !3490, file: !6, line: 85, baseType: !285, size: 64, offset: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3490, file: !6, line: 86, baseType: !3496, size: 64, offset: 192)
!3496 = !DIDerivedType(tag: DW_TAG_typedef, name: "iommu_fault_handler_t", file: !6, line: 48, baseType: !3497)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!135, !3489, !174, !285, !135, !162}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "handler_token", scope: !3490, file: !6, line: 87, baseType: !162, size: 64, offset: 256)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !3490, file: !6, line: 88, baseType: !3502, size: 192, offset: 320)
!3502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_domain_geometry", file: !6, line: 52, size: 192, elements: !3503)
!3503 = !{!3504, !3505, !3506}
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "aperture_start", scope: !3502, file: !6, line: 53, baseType: !885, size: 64)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "aperture_end", scope: !3502, file: !6, line: 54, baseType: !885, size: 64, offset: 64)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "force_aperture", scope: !3502, file: !6, line: 55, baseType: !451, size: 8, offset: 128)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "iova_cookie", scope: !3490, file: !6, line: 89, baseType: !162, size: 64, offset: 512)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "domain_free", scope: !3479, file: !6, line: 238, baseType: !3509, size: 64, offset: 128)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{null, !3489}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "attach_dev", scope: !3479, file: !6, line: 240, baseType: !3513, size: 64, offset: 192)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!135, !3489, !174}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "detach_dev", scope: !3479, file: !6, line: 241, baseType: !3517, size: 64, offset: 256)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{null, !3489, !174}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3479, file: !6, line: 242, baseType: !3521, size: 64, offset: 320)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!135, !3489, !285, !2091, !282, !135, !708}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3479, file: !6, line: 244, baseType: !3525, size: 64, offset: 384)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{!282, !3489, !285, !282, !3528}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_iotlb_gather", file: !6, line: 179, size: 192, elements: !3530)
!3530 = !{!3531, !3532, !3533}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3529, file: !6, line: 180, baseType: !285, size: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3529, file: !6, line: 181, baseType: !285, size: 64, offset: 64)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "pgsize", scope: !3529, file: !6, line: 182, baseType: !282, size: 64, offset: 128)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "flush_iotlb_all", scope: !3479, file: !6, line: 246, baseType: !3509, size: 64, offset: 448)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "iotlb_sync_map", scope: !3479, file: !6, line: 247, baseType: !3509, size: 64, offset: 512)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "iotlb_sync", scope: !3479, file: !6, line: 248, baseType: !3537, size: 64, offset: 576)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{null, !3489, !3528}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "iova_to_phys", scope: !3479, file: !6, line: 250, baseType: !3541, size: 64, offset: 640)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!2091, !3489, !885}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "probe_device", scope: !3479, file: !6, line: 251, baseType: !3545, size: 64, offset: 704)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DISubroutineType(types: !3547)
!3547 = !{!3548, !174}
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_device", file: !6, line: 314, size: 320, elements: !3550)
!3550 = !{!3551, !3552, !3553, !3643}
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3549, file: !6, line: 315, baseType: !167, size: 128)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3549, file: !6, line: 316, baseType: !3477, size: 64, offset: 128)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3549, file: !6, line: 317, baseType: !3554, size: 64, offset: 192)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3556, line: 17, size: 192, elements: !3557)
!3556 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3557 = !{!3558, !3559, !3642}
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3555, file: !3556, line: 18, baseType: !3554, size: 64)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3555, file: !3556, line: 19, baseType: !3560, size: 64, offset: 64)
!3560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3561, size: 64)
!3561 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3562)
!3562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3556, line: 110, size: 1152, elements: !3563)
!3563 = !{!3564, !3568, !3572, !3578, !3584, !3588, !3592, !3597, !3601, !3602, !3606, !3610, !3614, !3625, !3626, !3627, !3628, !3638}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3562, file: !3556, line: 111, baseType: !3565, size: 64)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{!3554, !3554}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3562, file: !3556, line: 112, baseType: !3569, size: 64, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{null, !3554}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3562, file: !3556, line: 113, baseType: !3573, size: 64, offset: 128)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = !DISubroutineType(types: !3575)
!3575 = !{!451, !3576}
!3576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3577, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3555)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3562, file: !3556, line: 114, baseType: !3579, size: 64, offset: 192)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!2093, !3576, !3582}
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !175)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3562, file: !3556, line: 116, baseType: !3585, size: 64, offset: 256)
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = !DISubroutineType(types: !3587)
!3587 = !{!451, !3576, !182}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3562, file: !3556, line: 118, baseType: !3589, size: 64, offset: 320)
!3589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3590, size: 64)
!3590 = !DISubroutineType(types: !3591)
!3591 = !{!135, !3576, !182, !7, !162, !282}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3562, file: !3556, line: 123, baseType: !3593, size: 64, offset: 384)
!3593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3594, size: 64)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!135, !3576, !182, !3596, !282}
!3596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3562, file: !3556, line: 126, baseType: !3598, size: 64, offset: 448)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!182, !3576}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3562, file: !3556, line: 127, baseType: !3598, size: 64, offset: 512)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3562, file: !3556, line: 128, baseType: !3603, size: 64, offset: 576)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{!3554, !3576}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3562, file: !3556, line: 130, baseType: !3607, size: 64, offset: 640)
!3607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3608, size: 64)
!3608 = !DISubroutineType(types: !3609)
!3609 = !{!3554, !3576, !3554}
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3562, file: !3556, line: 133, baseType: !3611, size: 64, offset: 704)
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DISubroutineType(types: !3613)
!3613 = !{!3554, !3576, !182}
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3562, file: !3556, line: 135, baseType: !3615, size: 64, offset: 768)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!135, !3576, !182, !182, !7, !7, !3618}
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3556, line: 43, size: 640, elements: !3620)
!3620 = !{!3621, !3622, !3623}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3619, file: !3556, line: 44, baseType: !3554, size: 64)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3619, file: !3556, line: 45, baseType: !7, size: 32, offset: 64)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3619, file: !3556, line: 46, baseType: !3624, size: 512, offset: 128)
!3624 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 512, elements: !1295)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3562, file: !3556, line: 140, baseType: !3607, size: 64, offset: 832)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3562, file: !3556, line: 143, baseType: !3603, size: 64, offset: 896)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3562, file: !3556, line: 145, baseType: !3565, size: 64, offset: 960)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3562, file: !3556, line: 146, baseType: !3629, size: 64, offset: 1024)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!135, !3576, !3632}
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3556, line: 29, size: 128, elements: !3634)
!3634 = !{!3635, !3636, !3637}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3633, file: !3556, line: 30, baseType: !7, size: 32)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3633, file: !3556, line: 31, baseType: !7, size: 32, offset: 32)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3633, file: !3556, line: 32, baseType: !3576, size: 64, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3562, file: !3556, line: 148, baseType: !3639, size: 64, offset: 1088)
!3639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3640, size: 64)
!3640 = !DISubroutineType(types: !3641)
!3641 = !{!135, !3576, !174}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3555, file: !3556, line: 20, baseType: !174, size: 64, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3549, file: !6, line: 318, baseType: !174, size: 64, offset: 256)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "release_device", scope: !3479, file: !6, line: 252, baseType: !3360, size: 64, offset: 768)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "probe_finalize", scope: !3479, file: !6, line: 253, baseType: !3360, size: 64, offset: 832)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "device_group", scope: !3479, file: !6, line: 254, baseType: !3647, size: 64, offset: 896)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = !DISubroutineType(types: !3649)
!3649 = !{!3650, !174}
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3, line: 35, size: 1728, elements: !3652)
!3652 = !{!3653, !3654, !3655, !3656, !3657, !3673, !3674, !3675, !3676, !3677, !3678, !3679}
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3651, file: !3, line: 36, baseType: !178, size: 512)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "devices_kobj", scope: !3651, file: !3, line: 37, baseType: !187, size: 64, offset: 512)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !3651, file: !3, line: 38, baseType: !167, size: 128, offset: 576)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3651, file: !3, line: 39, baseType: !1138, size: 192, offset: 704)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "notifier", scope: !3651, file: !3, line: 40, baseType: !3658, size: 320, offset: 896)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !3659, line: 65, size: 320, elements: !3660)
!3659 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!3660 = !{!3661, !3662}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !3658, file: !3659, line: 66, baseType: !732, size: 256)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3658, file: !3659, line: 67, baseType: !3663, size: 64, offset: 256)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !3659, line: 54, size: 192, elements: !3665)
!3665 = !{!3666, !3671, !3672}
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !3664, file: !3659, line: 55, baseType: !3667, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !3659, line: 51, baseType: !3668)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DISubroutineType(types: !3670)
!3670 = !{!135, !3663, !285, !162}
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3664, file: !3659, line: 56, baseType: !3663, size: 64, offset: 64)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !3664, file: !3659, line: 57, baseType: !135, size: 32, offset: 128)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_data", scope: !3651, file: !3, line: 41, baseType: !162, size: 64, offset: 1216)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_data_release", scope: !3651, file: !3, line: 42, baseType: !429, size: 64, offset: 1280)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3651, file: !3, line: 43, baseType: !235, size: 64, offset: 1344)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3651, file: !3, line: 44, baseType: !135, size: 32, offset: 1408)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "default_domain", scope: !3651, file: !3, line: 45, baseType: !3489, size: 64, offset: 1472)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3651, file: !3, line: 46, baseType: !3489, size: 64, offset: 1536)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3651, file: !3, line: 47, baseType: !167, size: 128, offset: 1600)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "domain_get_attr", scope: !3479, file: !6, line: 255, baseType: !3681, size: 64, offset: 960)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!135, !3489, !99, !162}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "domain_set_attr", scope: !3479, file: !6, line: 257, baseType: !3681, size: 64, offset: 1024)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "get_resv_regions", scope: !3479, file: !6, line: 261, baseType: !3686, size: 64, offset: 1088)
!3686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3687, size: 64)
!3687 = !DISubroutineType(types: !3688)
!3688 = !{null, !174, !171}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "put_resv_regions", scope: !3479, file: !6, line: 262, baseType: !3686, size: 64, offset: 1152)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "apply_resv_region", scope: !3479, file: !6, line: 263, baseType: !3691, size: 64, offset: 1216)
!3691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3692, size: 64)
!3692 = !DISubroutineType(types: !3693)
!3693 = !{null, !174, !3489, !3694}
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_resv_region", file: !6, line: 150, size: 320, elements: !3696)
!3696 = !{!3697, !3698, !3699, !3700, !3701}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3695, file: !6, line: 151, baseType: !167, size: 128)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3695, file: !6, line: 152, baseType: !2091, size: 64, offset: 128)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3695, file: !6, line: 153, baseType: !282, size: 64, offset: 192)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "prot", scope: !3695, file: !6, line: 154, baseType: !135, size: 32, offset: 256)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3695, file: !6, line: 155, baseType: !110, size: 32, offset: 288)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "domain_window_enable", scope: !3479, file: !6, line: 268, baseType: !3703, size: 64, offset: 1280)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{!135, !3489, !376, !2091, !382, !135}
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "domain_window_disable", scope: !3479, file: !6, line: 270, baseType: !3707, size: 64, offset: 1344)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{null, !3489, !376}
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "of_xlate", scope: !3479, file: !6, line: 272, baseType: !3711, size: 64, offset: 1408)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!135, !174, !3714}
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_phandle_args", file: !3716, line: 74, size: 640, elements: !3717)
!3716 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3717 = !{!3718, !3743, !3744}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "np", scope: !3715, file: !3716, line: 75, baseType: !3719, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3716, line: 51, size: 1344, elements: !3721)
!3721 = !{!3722, !3723, !3725, !3726, !3727, !3736, !3737, !3738, !3739, !3740, !3741, !3742}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3720, file: !3716, line: 52, baseType: !182, size: 64)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3720, file: !3716, line: 53, baseType: !3724, size: 32, offset: 64)
!3724 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3716, line: 28, baseType: !376)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3720, file: !3716, line: 54, baseType: !182, size: 64, offset: 128)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3720, file: !3716, line: 55, baseType: !3555, size: 192, offset: 192)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3720, file: !3716, line: 57, baseType: !3728, size: 64, offset: 384)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3716, line: 31, size: 704, elements: !3730)
!3730 = !{!3731, !3732, !3733, !3734, !3735}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3729, file: !3716, line: 32, baseType: !235, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3729, file: !3716, line: 33, baseType: !135, size: 32, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3729, file: !3716, line: 34, baseType: !162, size: 64, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3729, file: !3716, line: 35, baseType: !3728, size: 64, offset: 192)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3729, file: !3716, line: 43, baseType: !304, size: 448, offset: 256)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3720, file: !3716, line: 58, baseType: !3728, size: 64, offset: 448)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3720, file: !3716, line: 59, baseType: !3719, size: 64, offset: 512)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3720, file: !3716, line: 60, baseType: !3719, size: 64, offset: 576)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3720, file: !3716, line: 61, baseType: !3719, size: 64, offset: 640)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3720, file: !3716, line: 63, baseType: !178, size: 512, offset: 704)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3720, file: !3716, line: 65, baseType: !285, size: 64, offset: 1216)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3720, file: !3716, line: 66, baseType: !162, size: 64, offset: 1280)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "args_count", scope: !3715, file: !3716, line: 76, baseType: !135, size: 32, offset: 64)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3715, file: !3716, line: 77, baseType: !3745, size: 512, offset: 96)
!3745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !520, size: 512, elements: !1700)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "is_attach_deferred", scope: !3479, file: !6, line: 273, baseType: !3747, size: 64, offset: 1472)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!451, !3489, !174}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "dev_has_feat", scope: !3479, file: !6, line: 276, baseType: !3751, size: 64, offset: 1536)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!451, !174, !117}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "dev_feat_enabled", scope: !3479, file: !6, line: 277, baseType: !3751, size: 64, offset: 1600)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "dev_enable_feat", scope: !3479, file: !6, line: 278, baseType: !3756, size: 64, offset: 1664)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DISubroutineType(types: !3758)
!3758 = !{!135, !174, !117}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "dev_disable_feat", scope: !3479, file: !6, line: 279, baseType: !3756, size: 64, offset: 1728)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "aux_attach_dev", scope: !3479, file: !6, line: 282, baseType: !3513, size: 64, offset: 1792)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "aux_detach_dev", scope: !3479, file: !6, line: 283, baseType: !3517, size: 64, offset: 1856)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "aux_get_pasid", scope: !3479, file: !6, line: 284, baseType: !3513, size: 64, offset: 1920)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "sva_bind", scope: !3479, file: !6, line: 286, baseType: !3764, size: 64, offset: 1984)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!3767, !174, !939, !162}
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_sva", file: !6, line: 591, size: 64, elements: !3769)
!3769 = !{!3770}
!3770 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3768, file: !6, line: 592, baseType: !174, size: 64)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "sva_unbind", scope: !3479, file: !6, line: 288, baseType: !3772, size: 64, offset: 2048)
!3772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3773, size: 64)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{null, !3767}
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "sva_get_pasid", scope: !3479, file: !6, line: 289, baseType: !3776, size: 64, offset: 2112)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = !DISubroutineType(types: !3778)
!3778 = !{!376, !3767}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "page_response", scope: !3479, file: !6, line: 291, baseType: !3780, size: 64, offset: 2176)
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DISubroutineType(types: !3782)
!3782 = !{!135, !174, !3783, !3818}
!3783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_fault_event", file: !6, line: 330, size: 640, elements: !3785)
!3785 = !{!3786, !3817}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !3784, file: !6, line: 331, baseType: !3787, size: 512)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_fault", file: !122, line: 115, size: 512, elements: !3788)
!3788 = !{!3789, !3790, !3791}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3787, file: !122, line: 116, baseType: !378, size: 32)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3787, file: !122, line: 117, baseType: !378, size: 32, offset: 32)
!3791 = !DIDerivedType(tag: DW_TAG_member, scope: !3787, file: !122, line: 118, baseType: !3792, size: 448, offset: 64)
!3792 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3787, file: !122, line: 118, size: 448, elements: !3793)
!3793 = !{!3794, !3803, !3813}
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3792, file: !122, line: 119, baseType: !3795, size: 256)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_fault_unrecoverable", file: !122, line: 69, size: 256, elements: !3796)
!3796 = !{!3797, !3798, !3799, !3800, !3801, !3802}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3795, file: !122, line: 70, baseType: !378, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3795, file: !122, line: 74, baseType: !378, size: 32, offset: 32)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !3795, file: !122, line: 75, baseType: !378, size: 32, offset: 64)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !3795, file: !122, line: 76, baseType: !378, size: 32, offset: 96)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3795, file: !122, line: 77, baseType: !383, size: 64, offset: 128)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "fetch_addr", scope: !3795, file: !122, line: 78, baseType: !383, size: 64, offset: 192)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "prm", scope: !3792, file: !122, line: 120, baseType: !3804, size: 320)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_fault_page_request", file: !122, line: 94, size: 320, elements: !3805)
!3805 = !{!3806, !3807, !3808, !3809, !3810, !3811}
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3804, file: !122, line: 99, baseType: !378, size: 32)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !3804, file: !122, line: 100, baseType: !378, size: 32, offset: 32)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "grpid", scope: !3804, file: !122, line: 101, baseType: !378, size: 32, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !3804, file: !122, line: 102, baseType: !378, size: 32, offset: 96)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3804, file: !122, line: 103, baseType: !383, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3804, file: !122, line: 104, baseType: !3812, size: 128, offset: 192)
!3812 = !DICompositeType(tag: DW_TAG_array_type, baseType: !383, size: 128, elements: !1534)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "padding2", scope: !3792, file: !122, line: 121, baseType: !3814, size: 448)
!3814 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 448, elements: !3815)
!3815 = !{!3816}
!3816 = !DISubrange(count: 56)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3784, file: !6, line: 332, baseType: !167, size: 128, offset: 512)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_page_response", file: !122, line: 150, size: 192, elements: !3820)
!3820 = !{!3821, !3822, !3823, !3824, !3825, !3826}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "argsz", scope: !3819, file: !122, line: 151, baseType: !378, size: 32)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3819, file: !122, line: 153, baseType: !378, size: 32, offset: 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3819, file: !122, line: 155, baseType: !378, size: 32, offset: 64)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !3819, file: !122, line: 156, baseType: !378, size: 32, offset: 96)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "grpid", scope: !3819, file: !122, line: 157, baseType: !378, size: 32, offset: 128)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3819, file: !122, line: 158, baseType: !378, size: 32, offset: 160)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "cache_invalidate", scope: !3479, file: !6, line: 294, baseType: !3828, size: 64, offset: 2240)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!135, !3489, !174, !3831}
!3831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3832, size: 64)
!3832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_cache_invalidate_info", file: !122, line: 255, size: 448, elements: !3833)
!3833 = !{!3834, !3835, !3836, !3837, !3838, !3840}
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "argsz", scope: !3832, file: !122, line: 256, baseType: !378, size: 32)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3832, file: !122, line: 258, baseType: !378, size: 32, offset: 32)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !3832, file: !122, line: 264, baseType: !1318, size: 8, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !3832, file: !122, line: 265, baseType: !1318, size: 8, offset: 72)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3832, file: !122, line: 266, baseType: !3839, size: 48, offset: 80)
!3839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 48, elements: !1590)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "granu", scope: !3832, file: !122, line: 270, baseType: !3841, size: 320, offset: 128)
!3841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3832, file: !122, line: 267, size: 320, elements: !3842)
!3842 = !{!3843, !3849}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_info", scope: !3841, file: !122, line: 268, baseType: !3844, size: 128)
!3844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_inv_pasid_info", file: !122, line: 216, size: 128, elements: !3845)
!3845 = !{!3846, !3847, !3848}
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3844, file: !122, line: 219, baseType: !378, size: 32)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "archid", scope: !3844, file: !122, line: 220, baseType: !378, size: 32, offset: 32)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !3844, file: !122, line: 221, baseType: !383, size: 64, offset: 64)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "addr_info", scope: !3841, file: !122, line: 269, baseType: !3850, size: 320)
!3850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_inv_addr_info", file: !122, line: 189, size: 320, elements: !3851)
!3851 = !{!3852, !3853, !3854, !3855, !3856, !3857}
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3850, file: !122, line: 193, baseType: !378, size: 32)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "archid", scope: !3850, file: !122, line: 194, baseType: !378, size: 32, offset: 32)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !3850, file: !122, line: 195, baseType: !383, size: 64, offset: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3850, file: !122, line: 196, baseType: !383, size: 64, offset: 128)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "granule_size", scope: !3850, file: !122, line: 197, baseType: !383, size: 64, offset: 192)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "nb_granules", scope: !3850, file: !122, line: 198, baseType: !383, size: 64, offset: 256)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "sva_bind_gpasid", scope: !3479, file: !6, line: 296, baseType: !3859, size: 64, offset: 2304)
!3859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3860, size: 64)
!3860 = !DISubroutineType(types: !3861)
!3861 = !{!135, !3489, !174, !3862}
!3862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 64)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_gpasid_bind_data", file: !122, line: 321, size: 576, elements: !3864)
!3864 = !{!3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872, !3873, !3875}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "argsz", scope: !3863, file: !122, line: 322, baseType: !378, size: 32)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !3863, file: !122, line: 324, baseType: !378, size: 32, offset: 32)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !3863, file: !122, line: 327, baseType: !378, size: 32, offset: 64)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "addr_width", scope: !3863, file: !122, line: 328, baseType: !378, size: 32, offset: 96)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3863, file: !122, line: 330, baseType: !383, size: 64, offset: 128)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "gpgd", scope: !3863, file: !122, line: 331, baseType: !383, size: 64, offset: 192)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "hpasid", scope: !3863, file: !122, line: 332, baseType: !383, size: 64, offset: 256)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "gpasid", scope: !3863, file: !122, line: 333, baseType: !383, size: 64, offset: 320)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3863, file: !122, line: 334, baseType: !3874, size: 64, offset: 384)
!3874 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1318, size: 64, elements: !1295)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !3863, file: !122, line: 338, baseType: !3876, size: 128, offset: 448)
!3876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3863, file: !122, line: 336, size: 128, elements: !3877)
!3877 = !{!3878}
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "vtd", scope: !3876, file: !122, line: 337, baseType: !3879, size: 128)
!3879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_gpasid_bind_data_vtd", file: !122, line: 284, size: 128, elements: !3880)
!3880 = !{!3881, !3882, !3883}
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3879, file: !122, line: 292, baseType: !383, size: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "pat", scope: !3879, file: !122, line: 293, baseType: !378, size: 32, offset: 64)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "emt", scope: !3879, file: !122, line: 294, baseType: !378, size: 32, offset: 96)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "sva_unbind_gpasid", scope: !3479, file: !6, line: 299, baseType: !3885, size: 64, offset: 2368)
!3885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3886, size: 64)
!3886 = !DISubroutineType(types: !3887)
!3887 = !{!135, !174, !376}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "def_domain_type", scope: !3479, file: !6, line: 301, baseType: !3369, size: 64, offset: 2432)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "pgsize_bitmap", scope: !3479, file: !6, line: 303, baseType: !285, size: 64, offset: 2496)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3479, file: !6, line: 304, baseType: !594, size: 64, offset: 2560)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3396, file: !3397, line: 111, baseType: !3892, size: 64, offset: 1280)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3397, line: 111, flags: DIFlagFwdDecl)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3396, file: !3397, line: 112, baseType: !609, offset: 1344)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3396, file: !3397, line: 114, baseType: !451, size: 8, offset: 1344)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !175, file: !79, line: 471, baseType: !3409, size: 64, offset: 832)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !175, file: !79, line: 473, baseType: !162, size: 64, offset: 896)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !175, file: !79, line: 475, baseType: !162, size: 64, offset: 960)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !175, file: !79, line: 480, baseType: !1138, size: 192, offset: 1024)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !175, file: !79, line: 484, baseType: !3901, size: 576, offset: 1216)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !79, line: 361, size: 576, elements: !3902)
!3902 = !{!3903, !3904, !3905, !3906, !3907, !3908}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3901, file: !79, line: 362, baseType: !167, size: 128)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3901, file: !79, line: 363, baseType: !167, size: 128, offset: 128)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3901, file: !79, line: 364, baseType: !167, size: 128, offset: 256)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3901, file: !79, line: 365, baseType: !167, size: 128, offset: 384)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3901, file: !79, line: 366, baseType: !451, size: 8, offset: 512)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3901, file: !79, line: 367, baseType: !78, size: 32, offset: 544)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !175, file: !79, line: 485, baseType: !3910, size: 2304, offset: 1792)
!3910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !86, line: 565, size: 2304, elements: !3911)
!3911 = !{!3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996, !3997, !4007, !4011}
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3910, file: !86, line: 566, baseType: !3452, size: 32)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3910, file: !86, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3910, file: !86, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3910, file: !86, line: 569, baseType: !451, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3910, file: !86, line: 570, baseType: !451, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3910, file: !86, line: 571, baseType: !451, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3910, file: !86, line: 572, baseType: !451, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3910, file: !86, line: 573, baseType: !451, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3910, file: !86, line: 574, baseType: !451, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3910, file: !86, line: 575, baseType: !451, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3910, file: !86, line: 576, baseType: !451, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3910, file: !86, line: 577, baseType: !376, size: 32, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3910, file: !86, line: 578, baseType: !194, offset: 96)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3910, file: !86, line: 580, baseType: !167, size: 128, offset: 128)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3910, file: !86, line: 581, baseType: !1467, size: 192, offset: 256)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3910, file: !86, line: 582, baseType: !3928, size: 64, offset: 448)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3930, line: 43, size: 1472, elements: !3931)
!3930 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3931 = !{!3932, !3933, !3934, !3935, !3936, !3939, !3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3929, file: !3930, line: 44, baseType: !182, size: 64)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3929, file: !3930, line: 45, baseType: !135, size: 32, offset: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3929, file: !3930, line: 46, baseType: !167, size: 128, offset: 128)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3929, file: !3930, line: 47, baseType: !194, offset: 256)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3929, file: !3930, line: 48, baseType: !3937, size: 64, offset: 256)
!3937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3938, size: 64)
!3938 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !86, line: 533, flags: DIFlagFwdDecl)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3929, file: !3930, line: 49, baseType: !3940, size: 320, offset: 320)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3941, line: 11, size: 320, elements: !3942)
!3941 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3942 = !{!3943, !3944, !3945, !3950}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3940, file: !3941, line: 16, baseType: !603, size: 128)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3940, file: !3941, line: 17, baseType: !285, size: 64, offset: 128)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3940, file: !3941, line: 18, baseType: !3946, size: 64, offset: 192)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{null, !3949}
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3940, file: !3941, line: 19, baseType: !376, size: 32, offset: 256)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3929, file: !3930, line: 50, baseType: !285, size: 64, offset: 640)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3929, file: !3930, line: 51, baseType: !1265, size: 64, offset: 704)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3929, file: !3930, line: 52, baseType: !1265, size: 64, offset: 768)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3929, file: !3930, line: 53, baseType: !1265, size: 64, offset: 832)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3929, file: !3930, line: 54, baseType: !1265, size: 64, offset: 896)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3929, file: !3930, line: 55, baseType: !1265, size: 64, offset: 960)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3929, file: !3930, line: 56, baseType: !285, size: 64, offset: 1024)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3929, file: !3930, line: 57, baseType: !285, size: 64, offset: 1088)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3929, file: !3930, line: 58, baseType: !285, size: 64, offset: 1152)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3929, file: !3930, line: 59, baseType: !285, size: 64, offset: 1216)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3929, file: !3930, line: 60, baseType: !285, size: 64, offset: 1280)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3929, file: !3930, line: 61, baseType: !174, size: 64, offset: 1344)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3929, file: !3930, line: 62, baseType: !451, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3929, file: !3930, line: 63, baseType: !451, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3910, file: !86, line: 583, baseType: !451, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3910, file: !86, line: 584, baseType: !451, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3910, file: !86, line: 585, baseType: !451, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3910, file: !86, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3910, file: !86, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3910, file: !86, line: 592, baseType: !1257, size: 512, offset: 576)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3910, file: !86, line: 593, baseType: !382, size: 64, offset: 1088)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3910, file: !86, line: 594, baseType: !1923, size: 256, offset: 1152)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3910, file: !86, line: 595, baseType: !1446, size: 128, offset: 1408)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3910, file: !86, line: 596, baseType: !3937, size: 64, offset: 1536)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3910, file: !86, line: 597, baseType: !712, size: 32, offset: 1600)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3910, file: !86, line: 598, baseType: !712, size: 32, offset: 1632)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3910, file: !86, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3910, file: !86, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3910, file: !86, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3910, file: !86, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3910, file: !86, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3910, file: !86, line: 604, baseType: !451, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3910, file: !86, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3910, file: !86, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3910, file: !86, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3910, file: !86, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3910, file: !86, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3910, file: !86, line: 610, baseType: !7, size: 32, offset: 1696)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3910, file: !86, line: 611, baseType: !85, size: 32, offset: 1728)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3910, file: !86, line: 612, baseType: !93, size: 32, offset: 1760)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3910, file: !86, line: 613, baseType: !135, size: 32, offset: 1792)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3910, file: !86, line: 614, baseType: !135, size: 32, offset: 1824)
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3910, file: !86, line: 615, baseType: !382, size: 64, offset: 1856)
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3910, file: !86, line: 616, baseType: !382, size: 64, offset: 1920)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3910, file: !86, line: 617, baseType: !382, size: 64, offset: 1984)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3910, file: !86, line: 618, baseType: !382, size: 64, offset: 2048)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3910, file: !86, line: 620, baseType: !3998, size: 64, offset: 2112)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !86, line: 536, size: 256, elements: !4000)
!4000 = !{!4001, !4002, !4003, !4004}
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3999, file: !86, line: 537, baseType: !194)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3999, file: !86, line: 538, baseType: !7, size: 32)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3999, file: !86, line: 540, baseType: !167, size: 128, offset: 64)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3999, file: !86, line: 543, baseType: !4005, size: 64, offset: 192)
!4005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4006, size: 64)
!4006 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !86, line: 534, flags: DIFlagFwdDecl)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3910, file: !86, line: 621, baseType: !4008, size: 64, offset: 2176)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !174, !1409}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3910, file: !86, line: 622, baseType: !4012, size: 64, offset: 2240)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !86, line: 622, flags: DIFlagFwdDecl)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !175, file: !79, line: 486, baseType: !4015, size: 64, offset: 4096)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !86, line: 642, size: 1792, elements: !4017)
!4017 = !{!4018, !4019, !4020, !4024, !4025, !4026}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4016, file: !86, line: 643, baseType: !3366, size: 1472)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4016, file: !86, line: 644, baseType: !3369, size: 64, offset: 1472)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4016, file: !86, line: 645, baseType: !4021, size: 64, offset: 1536)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{null, !174, !451}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4016, file: !86, line: 646, baseType: !3369, size: 64, offset: 1600)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4016, file: !86, line: 647, baseType: !3360, size: 64, offset: 1664)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4016, file: !86, line: 648, baseType: !3360, size: 64, offset: 1728)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !175, file: !79, line: 493, baseType: !4028, size: 64, offset: 4160)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !79, line: 493, flags: DIFlagFwdDecl)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !175, file: !79, line: 499, baseType: !167, size: 128, offset: 4224)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !175, file: !79, line: 502, baseType: !4032, size: 64, offset: 4352)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4034)
!4034 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !79, line: 502, flags: DIFlagFwdDecl)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !175, file: !79, line: 504, baseType: !4036, size: 64, offset: 4416)
!4036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !175, file: !79, line: 505, baseType: !382, size: 64, offset: 4480)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !175, file: !79, line: 510, baseType: !382, size: 64, offset: 4544)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !175, file: !79, line: 511, baseType: !4040, size: 64, offset: 4608)
!4040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4041, size: 64)
!4041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4042)
!4042 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !79, line: 511, flags: DIFlagFwdDecl)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !175, file: !79, line: 513, baseType: !4044, size: 64, offset: 4672)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !79, line: 288, size: 128, elements: !4046)
!4046 = !{!4047, !4048}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4045, file: !79, line: 293, baseType: !7, size: 32)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4045, file: !79, line: 294, baseType: !285, size: 64, offset: 64)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !175, file: !79, line: 515, baseType: !167, size: 128, offset: 4736)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !175, file: !79, line: 526, baseType: !4051, offset: 4864)
!4051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4052, line: 5, elements: !208)
!4052 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !175, file: !79, line: 528, baseType: !3719, size: 64, offset: 4864)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !175, file: !79, line: 529, baseType: !3554, size: 64, offset: 4928)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !175, file: !79, line: 534, baseType: !474, size: 32, offset: 4992)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !175, file: !79, line: 535, baseType: !376, size: 32, offset: 5024)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !175, file: !79, line: 537, baseType: !194, offset: 5056)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !175, file: !79, line: 538, baseType: !167, size: 128, offset: 5056)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !175, file: !79, line: 540, baseType: !4060, size: 64, offset: 5184)
!4060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4061, size: 64)
!4061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4062, line: 54, size: 960, elements: !4063)
!4062 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4063 = !{!4064, !4065, !4066, !4067, !4068, !4069, !4070, !4074, !4078, !4079, !4080, !4081, !4085, !4089, !4090}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4061, file: !4062, line: 55, baseType: !182, size: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4061, file: !4062, line: 56, baseType: !594, size: 64, offset: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4061, file: !4062, line: 58, baseType: !289, size: 64, offset: 128)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4061, file: !4062, line: 59, baseType: !289, size: 64, offset: 192)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4061, file: !4062, line: 60, baseType: !187, size: 64, offset: 256)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4061, file: !4062, line: 62, baseType: !3351, size: 64, offset: 320)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4061, file: !4062, line: 63, baseType: !4071, size: 64, offset: 384)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 64)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!235, !174, !3358}
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4061, file: !4062, line: 65, baseType: !4075, size: 64, offset: 448)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = !DISubroutineType(types: !4077)
!4077 = !{null, !4060}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4061, file: !4062, line: 66, baseType: !3360, size: 64, offset: 512)
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4061, file: !4062, line: 68, baseType: !3369, size: 64, offset: 576)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4061, file: !4062, line: 70, baseType: !3155, size: 64, offset: 640)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4061, file: !4062, line: 71, baseType: !4082, size: 64, offset: 704)
!4082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4083, size: 64)
!4083 = !DISubroutineType(types: !4084)
!4084 = !{!2093, !174}
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4061, file: !4062, line: 73, baseType: !4086, size: 64, offset: 768)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{null, !174, !3187, !3188}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4061, file: !4062, line: 75, baseType: !3364, size: 64, offset: 832)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4061, file: !4062, line: 77, baseType: !3892, size: 64, offset: 896)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !175, file: !79, line: 541, baseType: !289, size: 64, offset: 5248)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !175, file: !79, line: 543, baseType: !3360, size: 64, offset: 5312)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !175, file: !79, line: 544, baseType: !3650, size: 64, offset: 5376)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !175, file: !79, line: 545, baseType: !4095, size: 64, offset: 5440)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !6, line: 360, size: 448, elements: !4097)
!4097 = !{!4098, !4099, !4112, !4123, !4124}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4096, file: !6, line: 361, baseType: !1138, size: 192)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "fault_param", scope: !4096, file: !6, line: 362, baseType: !4100, size: 64, offset: 192)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_fault_param", file: !6, line: 342, size: 448, elements: !4102)
!4102 = !{!4103, !4109, !4110, !4111}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4101, file: !6, line: 343, baseType: !4104, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_typedef, name: "iommu_dev_fault_handler_t", file: !6, line: 50, baseType: !4105)
!4105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4106, size: 64)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!135, !4108, !162}
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4101, file: !6, line: 344, baseType: !162, size: 64, offset: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "faults", scope: !4101, file: !6, line: 345, baseType: !167, size: 128, offset: 128)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4101, file: !6, line: 346, baseType: !1138, size: 192, offset: 256)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "fwspec", scope: !4096, file: !6, line: 363, baseType: !4113, size: 64, offset: 256)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_fwspec", file: !6, line: 576, size: 256, elements: !4115)
!4115 = !{!4116, !4117, !4118, !4119, !4120, !4121}
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4114, file: !6, line: 577, baseType: !3477, size: 64)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_fwnode", scope: !4114, file: !6, line: 578, baseType: !3554, size: 64, offset: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4114, file: !6, line: 579, baseType: !376, size: 32, offset: 128)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "num_pasid_bits", scope: !4114, file: !6, line: 580, baseType: !376, size: 32, offset: 160)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "num_ids", scope: !4114, file: !6, line: 581, baseType: !7, size: 32, offset: 192)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4114, file: !6, line: 582, baseType: !4122, offset: 224)
!4122 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, elements: !2297)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_dev", scope: !4096, file: !6, line: 364, baseType: !3548, size: 64, offset: 320)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4096, file: !6, line: 365, baseType: !162, size: 64, offset: 384)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !175, file: !79, line: 547, baseType: !451, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !175, file: !79, line: 548, baseType: !451, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !175, file: !79, line: 549, baseType: !451, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !175, file: !79, line: 550, baseType: !451, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !164, file: !3, line: 53, baseType: !235, size: 64, offset: 192)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4131, size: 64)
!4131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4132, line: 309, size: 19264, elements: !4133)
!4132 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!4133 = !{!4134, !4135, !4210, !4211, !4212, !4213, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4241, !4306, !4307, !4308, !4310, !4311, !4312, !4313, !4314, !4315, !4316, !4317, !4318, !4319, !4320, !4321, !4322, !4323, !4324, !4325, !4326, !4327, !4328, !4329, !4332, !4333, !4334, !4335, !4336, !4337, !4338, !4339, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362, !4363, !4364, !4365, !4366, !4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4379, !4380, !4382, !4383, !4385, !4386, !4387, !4388, !4390, !4391, !4392, !4395, !4402, !4403, !4404, !4405, !4406, !4407, !4408}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !4131, file: !4132, line: 310, baseType: !167, size: 128)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4131, file: !4132, line: 311, baseType: !4136, size: 64, offset: 128)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !4132, line: 605, size: 8064, elements: !4138)
!4138 = !{!4139, !4140, !4141, !4142, !4143, !4144, !4145, !4160, !4161, !4162, !4186, !4189, !4190, !4194, !4195, !4196, !4197, !4198, !4202, !4203, !4205, !4206, !4207, !4208, !4209}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4137, file: !4132, line: 606, baseType: !167, size: 128)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4137, file: !4132, line: 607, baseType: !4136, size: 64, offset: 128)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4137, file: !4132, line: 608, baseType: !167, size: 128, offset: 192)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !4137, file: !4132, line: 609, baseType: !167, size: 128, offset: 320)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4137, file: !4132, line: 610, baseType: !4130, size: 64, offset: 448)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !4137, file: !4132, line: 611, baseType: !167, size: 128, offset: 512)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4137, file: !4132, line: 613, baseType: !4146, size: 256, offset: 640)
!4146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4147, size: 256, elements: !1120)
!4147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4148, size: 64)
!4148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !4149, line: 20, size: 512, elements: !4150)
!4149 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!4150 = !{!4151, !4153, !4154, !4155, !4156, !4157, !4158, !4159}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4148, file: !4149, line: 21, baseType: !4152, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !168, line: 158, baseType: !2091)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !4148, file: !4149, line: 22, baseType: !4152, size: 64, offset: 64)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4148, file: !4149, line: 23, baseType: !182, size: 64, offset: 128)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4148, file: !4149, line: 24, baseType: !285, size: 64, offset: 192)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4148, file: !4149, line: 25, baseType: !285, size: 64, offset: 256)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4148, file: !4149, line: 26, baseType: !4147, size: 64, offset: 320)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4148, file: !4149, line: 26, baseType: !4147, size: 64, offset: 384)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4148, file: !4149, line: 26, baseType: !4147, size: 64, offset: 448)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4137, file: !4132, line: 614, baseType: !167, size: 128, offset: 896)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !4137, file: !4132, line: 615, baseType: !4148, size: 512, offset: 1024)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4137, file: !4132, line: 617, baseType: !4163, size: 64, offset: 1536)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !4132, line: 731, size: 320, elements: !4165)
!4165 = !{!4166, !4170, !4174, !4178, !4182}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !4164, file: !4132, line: 732, baseType: !4167, size: 64)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{!135, !4136}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !4164, file: !4132, line: 733, baseType: !4171, size: 64, offset: 64)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{null, !4136}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !4164, file: !4132, line: 734, baseType: !4175, size: 64, offset: 128)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!162, !4136, !7, !135}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4164, file: !4132, line: 735, baseType: !4179, size: 64, offset: 192)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!135, !4136, !7, !135, !135, !1380}
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4164, file: !4132, line: 736, baseType: !4183, size: 64, offset: 256)
!4183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4184, size: 64)
!4184 = !DISubroutineType(types: !4185)
!4185 = !{!135, !4136, !7, !135, !135, !376}
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !4137, file: !4132, line: 618, baseType: !4187, size: 64, offset: 1600)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !4132, line: 537, flags: DIFlagFwdDecl)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4137, file: !4132, line: 619, baseType: !162, size: 64, offset: 1664)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !4137, file: !4132, line: 620, baseType: !4191, size: 64, offset: 1728)
!4191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4192, size: 64)
!4192 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4193, line: 123, flags: DIFlagFwdDecl)
!4193 = !DIFile(filename: "./include/linux/interrupt.h", directory: "/home/lizy2001/genbc/linux")
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4137, file: !4132, line: 622, baseType: !388, size: 8, offset: 1792)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4137, file: !4132, line: 623, baseType: !388, size: 8, offset: 1800)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !4137, file: !4132, line: 624, baseType: !388, size: 8, offset: 1808)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !4137, file: !4132, line: 625, baseType: !388, size: 8, offset: 1816)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4137, file: !4132, line: 630, baseType: !4199, size: 384, offset: 1824)
!4199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !184, size: 384, elements: !4200)
!4200 = !{!4201}
!4201 = !DISubrange(count: 48)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !4137, file: !4132, line: 632, baseType: !277, size: 16, offset: 2208)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4137, file: !4132, line: 633, baseType: !4204, size: 16, offset: 2224)
!4204 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !4132, line: 237, baseType: !277)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !4137, file: !4132, line: 634, baseType: !174, size: 64, offset: 2240)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4137, file: !4132, line: 635, baseType: !175, size: 5568, offset: 2304)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !4137, file: !4132, line: 636, baseType: !303, size: 64, offset: 7872)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !4137, file: !4132, line: 637, baseType: !303, size: 64, offset: 7936)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !4137, file: !4132, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !4131, file: !4132, line: 312, baseType: !4136, size: 64, offset: 192)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !4131, file: !4132, line: 314, baseType: !162, size: 64, offset: 256)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !4131, file: !4132, line: 315, baseType: !4191, size: 64, offset: 320)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !4131, file: !4132, line: 316, baseType: !4214, size: 64, offset: 384)
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !4132, line: 69, size: 832, elements: !4216)
!4216 = !{!4217, !4218, !4219, !4222, !4223}
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4215, file: !4132, line: 70, baseType: !4136, size: 64)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4215, file: !4132, line: 71, baseType: !167, size: 128, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4215, file: !4132, line: 72, baseType: !4220, size: 64, offset: 192)
!4220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4221, size: 64)
!4221 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !4132, line: 72, flags: DIFlagFwdDecl)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !4215, file: !4132, line: 73, baseType: !388, size: 8, offset: 256)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4215, file: !4132, line: 74, baseType: !178, size: 512, offset: 320)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !4131, file: !4132, line: 318, baseType: !7, size: 32, offset: 448)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4131, file: !4132, line: 319, baseType: !277, size: 16, offset: 480)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4131, file: !4132, line: 320, baseType: !277, size: 16, offset: 496)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !4131, file: !4132, line: 321, baseType: !277, size: 16, offset: 512)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !4131, file: !4132, line: 322, baseType: !277, size: 16, offset: 528)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4131, file: !4132, line: 323, baseType: !7, size: 32, offset: 544)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !4131, file: !4132, line: 324, baseType: !1317, size: 8, offset: 576)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !4131, file: !4132, line: 325, baseType: !1317, size: 8, offset: 584)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !4131, file: !4132, line: 330, baseType: !1317, size: 8, offset: 592)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !4131, file: !4132, line: 331, baseType: !1317, size: 8, offset: 600)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !4131, file: !4132, line: 332, baseType: !1317, size: 8, offset: 608)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !4131, file: !4132, line: 333, baseType: !1317, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !4131, file: !4132, line: 334, baseType: !1317, size: 8, offset: 624)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !4131, file: !4132, line: 335, baseType: !1317, size: 8, offset: 632)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !4131, file: !4132, line: 336, baseType: !824, size: 16, offset: 640)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !4131, file: !4132, line: 337, baseType: !4240, size: 64, offset: 704)
!4240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4131, file: !4132, line: 339, baseType: !4242, size: 64, offset: 768)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !4132, line: 858, size: 2048, elements: !4244)
!4244 = !{!4245, !4246, !4247, !4259, !4263, !4267, !4271, !4275, !4276, !4280, !4299, !4300, !4301}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4243, file: !4132, line: 859, baseType: !167, size: 128)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4243, file: !4132, line: 860, baseType: !182, size: 64, offset: 128)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !4243, file: !4132, line: 861, baseType: !4248, size: 64, offset: 192)
!4248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4249, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4250)
!4250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !3422, line: 38, size: 256, elements: !4251)
!4251 = !{!4252, !4253, !4254, !4255, !4256, !4257, !4258}
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4250, file: !3422, line: 39, baseType: !378, size: 32)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4250, file: !3422, line: 39, baseType: !378, size: 32, offset: 32)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !4250, file: !3422, line: 40, baseType: !378, size: 32, offset: 64)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !4250, file: !3422, line: 40, baseType: !378, size: 32, offset: 96)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4250, file: !3422, line: 41, baseType: !378, size: 32, offset: 128)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !4250, file: !3422, line: 41, baseType: !378, size: 32, offset: 160)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4250, file: !3422, line: 42, baseType: !3441, size: 64, offset: 192)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4243, file: !4132, line: 862, baseType: !4260, size: 64, offset: 256)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = !DISubroutineType(types: !4262)
!4262 = !{!135, !4130, !4248}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4243, file: !4132, line: 863, baseType: !4264, size: 64, offset: 320)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{null, !4130}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4243, file: !4132, line: 864, baseType: !4268, size: 64, offset: 384)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!135, !4130, !3452}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4243, file: !4132, line: 865, baseType: !4272, size: 64, offset: 448)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!135, !4130}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4243, file: !4132, line: 866, baseType: !4264, size: 64, offset: 512)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !4243, file: !4132, line: 867, baseType: !4277, size: 64, offset: 576)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!135, !4130, !135}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !4243, file: !4132, line: 868, baseType: !4281, size: 64, offset: 640)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4283)
!4283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !4132, line: 795, size: 384, elements: !4284)
!4284 = !{!4285, !4291, !4295, !4296, !4297, !4298}
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !4283, file: !4132, line: 797, baseType: !4286, size: 64)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!4289, !4130, !4290}
!4289 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !4132, line: 772, baseType: !7)
!4290 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !4132, line: 180, baseType: !7)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !4283, file: !4132, line: 801, baseType: !4292, size: 64, offset: 64)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!4289, !4130}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !4283, file: !4132, line: 804, baseType: !4292, size: 64, offset: 128)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !4283, file: !4132, line: 807, baseType: !4264, size: 64, offset: 192)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !4283, file: !4132, line: 808, baseType: !4264, size: 64, offset: 256)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4283, file: !4132, line: 811, baseType: !4264, size: 64, offset: 320)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4243, file: !4132, line: 869, baseType: !289, size: 64, offset: 704)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4243, file: !4132, line: 870, baseType: !3410, size: 1152, offset: 768)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !4243, file: !4132, line: 871, baseType: !4302, size: 128, offset: 1920)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !4132, line: 759, size: 128, elements: !4303)
!4303 = !{!4304, !4305}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4302, file: !4132, line: 760, baseType: !194)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4302, file: !4132, line: 761, baseType: !167, size: 128)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4131, file: !4132, line: 340, baseType: !382, size: 64, offset: 832)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !4131, file: !4132, line: 346, baseType: !4045, size: 128, offset: 896)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !4131, file: !4132, line: 348, baseType: !4309, size: 32, offset: 1024)
!4309 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !4132, line: 155, baseType: !135)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !4131, file: !4132, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !4131, file: !4132, line: 352, baseType: !1317, size: 8, offset: 1064)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !4131, file: !4132, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !4131, file: !4132, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !4131, file: !4132, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !4131, file: !4132, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !4131, file: !4132, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !4131, file: !4132, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !4131, file: !4132, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !4131, file: !4132, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !4131, file: !4132, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !4131, file: !4132, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !4131, file: !4132, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !4131, file: !4132, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !4131, file: !4132, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !4131, file: !4132, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !4131, file: !4132, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !4131, file: !4132, line: 376, baseType: !7, size: 32, offset: 1120)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !4131, file: !4132, line: 377, baseType: !7, size: 32, offset: 1152)
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !4131, file: !4132, line: 380, baseType: !4330, size: 64, offset: 1216)
!4330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4331, size: 64)
!4331 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !4132, line: 303, flags: DIFlagFwdDecl)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !4131, file: !4132, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !4131, file: !4132, line: 383, baseType: !135, size: 32, offset: 1312)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !4131, file: !4132, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !4131, file: !4132, line: 387, baseType: !4290, size: 32, offset: 1376)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4131, file: !4132, line: 388, baseType: !175, size: 5568, offset: 1408)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !4131, file: !4132, line: 390, baseType: !135, size: 32, offset: 6976)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4131, file: !4132, line: 396, baseType: !7, size: 32, offset: 7008)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4131, file: !4132, line: 397, baseType: !4340, size: 8704, offset: 7040)
!4340 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4148, size: 8704, elements: !4341)
!4341 = !{!4342}
!4342 = !DISubrange(count: 17)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4131, file: !4132, line: 399, baseType: !451, size: 8, offset: 15744)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !4131, file: !4132, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !4131, file: !4132, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !4131, file: !4132, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !4131, file: !4132, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !4131, file: !4132, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !4131, file: !4132, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !4131, file: !4132, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !4131, file: !4132, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !4131, file: !4132, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !4131, file: !4132, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !4131, file: !4132, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !4131, file: !4132, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !4131, file: !4132, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !4131, file: !4132, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !4131, file: !4132, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !4131, file: !4132, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !4131, file: !4132, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !4131, file: !4132, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !4131, file: !4132, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !4131, file: !4132, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !4131, file: !4132, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !4131, file: !4132, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !4131, file: !4132, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !4131, file: !4132, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !4131, file: !4132, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !4131, file: !4132, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !4131, file: !4132, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !4131, file: !4132, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !4131, file: !4132, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !4131, file: !4132, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !4131, file: !4132, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !4131, file: !4132, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !4131, file: !4132, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !4131, file: !4132, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !4131, file: !4132, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !4131, file: !4132, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !4131, file: !4132, line: 450, baseType: !4381, size: 16, offset: 15792)
!4381 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !4132, line: 206, baseType: !277)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !4131, file: !4132, line: 451, baseType: !712, size: 32, offset: 15808)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !4131, file: !4132, line: 453, baseType: !4384, size: 512, offset: 15840)
!4384 = !DICompositeType(tag: DW_TAG_array_type, baseType: !376, size: 512, elements: !1700)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !4131, file: !4132, line: 454, baseType: !599, size: 64, offset: 16384)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !4131, file: !4132, line: 455, baseType: !303, size: 64, offset: 16448)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !4131, file: !4132, line: 456, baseType: !135, size: 32, offset: 16512)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !4131, file: !4132, line: 457, baseType: !4389, size: 1088, offset: 16576)
!4389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !303, size: 1088, elements: !4341)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !4131, file: !4132, line: 458, baseType: !4389, size: 1088, offset: 17664)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !4131, file: !4132, line: 469, baseType: !289, size: 64, offset: 18752)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !4131, file: !4132, line: 471, baseType: !4393, size: 64, offset: 18816)
!4393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4394, size: 64)
!4394 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !4132, line: 304, flags: DIFlagFwdDecl)
!4395 = !DIDerivedType(tag: DW_TAG_member, scope: !4131, file: !4132, line: 478, baseType: !4396, size: 64, offset: 18880)
!4396 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4131, file: !4132, line: 478, size: 64, elements: !4397)
!4397 = !{!4398, !4401}
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !4396, file: !4132, line: 479, baseType: !4399, size: 64)
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !4132, line: 305, flags: DIFlagFwdDecl)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !4396, file: !4132, line: 480, baseType: !4130, size: 64)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !4131, file: !4132, line: 482, baseType: !824, size: 16, offset: 18944)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !4131, file: !4132, line: 483, baseType: !1317, size: 8, offset: 18960)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !4131, file: !4132, line: 497, baseType: !824, size: 16, offset: 18976)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !4131, file: !4132, line: 498, baseType: !2091, size: 64, offset: 19008)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !4131, file: !4132, line: 499, baseType: !282, size: 64, offset: 19072)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4131, file: !4132, line: 500, baseType: !235, size: 64, offset: 19136)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !4131, file: !4132, line: 502, baseType: !285, size: 64, offset: 19200)
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_device", file: !127, line: 194, size: 6592, elements: !4411)
!4411 = !{!4412, !4413, !4414, !4415, !4416, !4417, !4432, !4445, !4446, !4466, !4468, !4483}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4410, file: !127, line: 195, baseType: !175, size: 5568)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !4410, file: !127, line: 196, baseType: !382, size: 64, offset: 5568)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4410, file: !127, line: 197, baseType: !824, size: 16, offset: 5632)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "icid", scope: !4410, file: !127, line: 198, baseType: !376, size: 32, offset: 5664)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "mc_handle", scope: !4410, file: !127, line: 199, baseType: !824, size: 16, offset: 5696)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "mc_io", scope: !4410, file: !127, line: 200, baseType: !4418, size: 64, offset: 5760)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_io", file: !127, line: 334, size: 512, elements: !4420)
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426, !4427}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4419, file: !127, line: 335, baseType: !174, size: 64)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4419, file: !127, line: 336, baseType: !824, size: 16, offset: 64)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "portal_size", scope: !4419, file: !127, line: 337, baseType: !376, size: 32, offset: 96)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "portal_phys_addr", scope: !4419, file: !127, line: 338, baseType: !2091, size: 64, offset: 128)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "portal_virt_addr", scope: !4419, file: !127, line: 339, baseType: !162, size: 64, offset: 192)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "dpmcp_dev", scope: !4419, file: !127, line: 340, baseType: !4409, size: 64, offset: 256)
!4427 = !DIDerivedType(tag: DW_TAG_member, scope: !4419, file: !127, line: 341, baseType: !4428, size: 192, offset: 320)
!4428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4419, file: !127, line: 341, size: 192, elements: !4429)
!4429 = !{!4430, !4431}
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4428, file: !127, line: 346, baseType: !1138, size: 192)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "spinlock", scope: !4428, file: !127, line: 352, baseType: !745)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "obj_desc", scope: !4410, file: !127, line: 201, baseType: !4433, size: 416, offset: 5824)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_obj_desc", file: !127, line: 134, size: 416, elements: !4434)
!4434 = !{!4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4433, file: !127, line: 135, baseType: !1699, size: 128)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4433, file: !127, line: 136, baseType: !135, size: 32, offset: 128)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !4433, file: !127, line: 137, baseType: !824, size: 16, offset: 160)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "ver_major", scope: !4433, file: !127, line: 138, baseType: !824, size: 16, offset: 176)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "ver_minor", scope: !4433, file: !127, line: 139, baseType: !824, size: 16, offset: 192)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4433, file: !127, line: 140, baseType: !1317, size: 8, offset: 208)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "region_count", scope: !4433, file: !127, line: 141, baseType: !1317, size: 8, offset: 216)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4433, file: !127, line: 142, baseType: !376, size: 32, offset: 224)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !4433, file: !127, line: 143, baseType: !1699, size: 128, offset: 256)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4433, file: !127, line: 144, baseType: !824, size: 16, offset: 384)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "regions", scope: !4410, file: !127, line: 202, baseType: !4147, size: 64, offset: 6272)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "irqs", scope: !4410, file: !127, line: 203, baseType: !4447, size: 64, offset: 6336)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4449, size: 64)
!4449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_device_irq", file: !127, line: 98, size: 512, elements: !4450)
!4450 = !{!4451, !4454, !4455, !4456}
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !4449, file: !127, line: 99, baseType: !4452, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !127, line: 99, flags: DIFlagFwdDecl)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dev", scope: !4449, file: !127, line: 100, baseType: !4409, size: 64, offset: 64)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "dev_irq_index", scope: !4449, file: !127, line: 101, baseType: !1317, size: 8, offset: 128)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4449, file: !127, line: 102, baseType: !4457, size: 320, offset: 192)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_resource", file: !127, line: 83, size: 320, elements: !4458)
!4458 = !{!4459, !4460, !4461, !4462, !4465}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4457, file: !127, line: 84, baseType: !126, size: 32)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4457, file: !127, line: 85, baseType: !1409, size: 32, offset: 32)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4457, file: !127, line: 86, baseType: !162, size: 64, offset: 64)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "parent_pool", scope: !4457, file: !127, line: 87, baseType: !4463, size: 64, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsl_mc_resource_pool", file: !127, line: 87, flags: DIFlagFwdDecl)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4457, file: !127, line: 88, baseType: !167, size: 128, offset: 192)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !4410, file: !127, line: 204, baseType: !4467, size: 64, offset: 6400)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "consumer_link", scope: !4410, file: !127, line: 205, baseType: !4469, size: 64, offset: 6464)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_link", file: !79, line: 575, size: 6272, elements: !4471)
!4471 = !{!4472, !4473, !4474, !4475, !4476, !4477, !4478, !4479, !4480, !4481, !4482}
!4472 = !DIDerivedType(tag: DW_TAG_member, name: "supplier", scope: !4470, file: !79, line: 576, baseType: !174, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_member, name: "s_node", scope: !4470, file: !79, line: 577, baseType: !167, size: 128, offset: 64)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "consumer", scope: !4470, file: !79, line: 578, baseType: !174, size: 64, offset: 192)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "c_node", scope: !4470, file: !79, line: 579, baseType: !167, size: 128, offset: 256)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "link_dev", scope: !4470, file: !79, line: 580, baseType: !175, size: 5568, offset: 384)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4470, file: !79, line: 581, baseType: !134, size: 32, offset: 5952)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4470, file: !79, line: 582, baseType: !376, size: 32, offset: 5984)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_active", scope: !4470, file: !79, line: 583, baseType: !1195, size: 32, offset: 6016)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4470, file: !79, line: 584, baseType: !3329, size: 32, offset: 6048)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4470, file: !79, line: 586, baseType: !326, size: 128, align: 64, offset: 6080)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "supplier_preactivated", scope: !4470, file: !79, line: 588, baseType: !451, size: 8, offset: 6208)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4410, file: !127, line: 206, baseType: !235, size: 64, offset: 6528)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !171)
!4486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4487, size: 64)
!4487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group_attribute", file: !3, line: 56, size: 256, elements: !4488)
!4488 = !{!4489, !4490, !4494}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4487, file: !3, line: 57, baseType: !272, size: 128)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4487, file: !3, line: 58, baseType: !4491, size: 64, offset: 128)
!4491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4492, size: 64)
!4492 = !DISubroutineType(types: !4493)
!4493 = !{!266, !3650, !235}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4487, file: !3, line: 59, baseType: !4495, size: 64, offset: 192)
!4495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4496, size: 64)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{!266, !3650, !182, !282}
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4485)
!4500 = !{!0, !4501, !4512, !4514, !4519, !4521, !4526, !4531, !4533, !4535, !4537, !4539, !4541, !4543, !4548, !4553, !4555, !4560, !4562, !4564, !4566, !4572, !4574, !4576}
!4501 = !DIGlobalVariableExpression(var: !4502, expr: !DIExpression())
!4502 = distinct !DIGlobalVariable(name: "__setup_iommu_set_def_domain_type", scope: !2, file: !3, line: 324, type: !4503, isLocal: true, isDefinition: true, align: 64)
!4503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obs_kernel_param", file: !4504, line: 241, size: 192, elements: !4505)
!4504 = !DIFile(filename: "./include/linux/init.h", directory: "/home/lizy2001/genbc/linux")
!4505 = !{!4506, !4507, !4511}
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4503, file: !4504, line: 242, baseType: !182, size: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "setup_func", scope: !4503, file: !4504, line: 243, baseType: !4508, size: 64, offset: 64)
!4508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4509, size: 64)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!135, !235}
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "early", scope: !4503, file: !4504, line: 244, baseType: !135, size: 32, offset: 128)
!4512 = !DIGlobalVariableExpression(var: !4513, expr: !DIExpression())
!4513 = distinct !DIGlobalVariable(name: "__setup_iommu_dma_setup", scope: !2, file: !3, line: 330, type: !4503, isLocal: true, isDefinition: true, align: 64)
!4514 = !DIGlobalVariableExpression(var: !4515, expr: !DIExpression())
!4515 = distinct !DIGlobalVariable(name: "__key", scope: !4516, file: !3, line: 576, type: !609, isLocal: true, isDefinition: true)
!4516 = distinct !DISubprogram(name: "iommu_group_alloc", scope: !3, file: !3, line: 566, type: !4517, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!3650}
!4519 = !DIGlobalVariableExpression(var: !4520, expr: !DIExpression())
!4520 = distinct !DIGlobalVariable(name: "__key", scope: !4516, file: !3, line: 579, type: !609, isLocal: true, isDefinition: true)
!4521 = !DIGlobalVariableExpression(var: !4522, expr: !DIExpression())
!4522 = distinct !DIGlobalVariable(name: "__key", scope: !4523, file: !3, line: 1084, type: !609, isLocal: true, isDefinition: true)
!4523 = distinct !DISubprogram(name: "iommu_register_device_fault_handler", scope: !3, file: !3, line: 1058, type: !4524, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4524 = !DISubroutineType(types: !4525)
!4525 = !{!135, !174, !4104, !162}
!4526 = !DIGlobalVariableExpression(var: !4527, expr: !DIExpression())
!4527 = distinct !DIGlobalVariable(name: "_rs", scope: !4528, file: !3, line: 1211, type: !1667, isLocal: true, isDefinition: true)
!4528 = distinct !DISubprogram(name: "iommu_page_response", scope: !3, file: !3, line: 1187, type: !4529, scopeLine: 1189, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4529 = !DISubroutineType(types: !4530)
!4530 = !{!135, !174, !3818}
!4531 = !DIGlobalVariableExpression(var: !4532, expr: !DIExpression())
!4532 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_iommu_init288", scope: !2, file: !3, line: 2646, type: !162, isLocal: true, isDefinition: true)
!4533 = !DIGlobalVariableExpression(var: !4534, expr: !DIExpression())
!4534 = distinct !DIGlobalVariable(name: "iommu_group_kset", scope: !2, file: !3, line: 28, type: !189, isLocal: true, isDefinition: true)
!4535 = !DIGlobalVariableExpression(var: !4536, expr: !DIExpression())
!4536 = distinct !DIGlobalVariable(name: "iommu_def_domain_type", scope: !2, file: !3, line: 31, type: !7, isLocal: true, isDefinition: true)
!4537 = !DIGlobalVariableExpression(var: !4538, expr: !DIExpression())
!4538 = distinct !DIGlobalVariable(name: "iommu_cmd_line", scope: !2, file: !3, line: 33, type: !376, isLocal: true, isDefinition: true)
!4539 = !DIGlobalVariableExpression(var: !4540, expr: !DIExpression())
!4540 = distinct !DIGlobalVariable(name: "iommu_device_lock", scope: !2, file: !3, line: 107, type: !194, isLocal: true, isDefinition: true)
!4541 = !DIGlobalVariableExpression(var: !4542, expr: !DIExpression())
!4542 = distinct !DIGlobalVariable(name: "iommu_device_list", scope: !2, file: !3, line: 106, type: !167, isLocal: true, isDefinition: true)
!4543 = !DIGlobalVariableExpression(var: !4544, expr: !DIExpression())
!4544 = distinct !DIGlobalVariable(name: "__setup_str_iommu_set_def_domain_type", scope: !2, file: !3, line: 324, type: !4545, isLocal: true, isDefinition: true, align: 8)
!4545 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 144, elements: !4546)
!4546 = !{!4547}
!4547 = !DISubrange(count: 18)
!4548 = !DIGlobalVariableExpression(var: !4549, expr: !DIExpression())
!4549 = distinct !DIGlobalVariable(name: "__setup_str_iommu_dma_setup", scope: !2, file: !3, line: 330, type: !4550, isLocal: true, isDefinition: true, align: 8)
!4550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !183, size: 104, elements: !4551)
!4551 = !{!4552}
!4552 = !DISubrange(count: 13)
!4553 = !DIGlobalVariableExpression(var: !4554, expr: !DIExpression())
!4554 = distinct !DIGlobalVariable(name: "iommu_dma_strict", scope: !2, file: !3, line: 32, type: !451, isLocal: true, isDefinition: true)
!4555 = !DIGlobalVariableExpression(var: !4556, expr: !DIExpression())
!4556 = distinct !DIGlobalVariable(name: "iommu_group_ida", scope: !2, file: !3, line: 29, type: !4557, isLocal: true, isDefinition: true)
!4557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3216, line: 244, size: 128, elements: !4558)
!4558 = !{!4559}
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4557, file: !3216, line: 245, baseType: !703, size: 128)
!4560 = !DIGlobalVariableExpression(var: !4561, expr: !DIExpression())
!4561 = distinct !DIGlobalVariable(name: "iommu_group_ktype", scope: !2, file: !3, line: 550, type: !250, isLocal: true, isDefinition: true)
!4562 = !DIGlobalVariableExpression(var: !4563, expr: !DIExpression())
!4563 = distinct !DIGlobalVariable(name: "iommu_group_sysfs_ops", scope: !2, file: !3, line: 357, type: !258, isLocal: true, isDefinition: true)
!4564 = !DIGlobalVariableExpression(var: !4565, expr: !DIExpression())
!4565 = distinct !DIGlobalVariable(name: "iommu_group_attr_reserved_regions", scope: !2, file: !3, line: 527, type: !4487, isLocal: true, isDefinition: true)
!4566 = !DIGlobalVariableExpression(var: !4567, expr: !DIExpression())
!4567 = distinct !DIGlobalVariable(name: "iommu_group_resv_type_string", scope: !2, file: !3, line: 63, type: !4568, isLocal: true, isDefinition: true)
!4568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4569, size: 320, elements: !4570)
!4569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !182)
!4570 = !{!4571}
!4571 = !DISubrange(count: 5)
!4572 = !DIGlobalVariableExpression(var: !4573, expr: !DIExpression())
!4573 = distinct !DIGlobalVariable(name: "iommu_group_attr_type", scope: !2, file: !3, line: 530, type: !4487, isLocal: true, isDefinition: true)
!4574 = !DIGlobalVariableExpression(var: !4575, expr: !DIExpression())
!4575 = distinct !DIGlobalVariable(name: "iommu_group_attr_name", scope: !2, file: !3, line: 525, type: !4487, isLocal: true, isDefinition: true)
!4576 = !DIGlobalVariableExpression(var: !4577, expr: !DIExpression())
!4577 = distinct !DIGlobalVariable(name: "__key", scope: !4578, file: !3, line: 181, type: !609, isLocal: true, isDefinition: true)
!4578 = distinct !DISubprogram(name: "dev_iommu_get", scope: !3, file: !3, line: 170, type: !4579, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!4095, !174}
!4581 = !{i32 7, !"Dwarf Version", i32 4}
!4582 = !{i32 2, !"Debug Info Version", i32 3}
!4583 = !{i32 1, !"wchar_size", i32 2}
!4584 = !{i32 1, !"Code Model", i32 2}
!4585 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!4586 = distinct !DISubprogram(name: "iommu_subsys_init", scope: !3, file: !3, line: 129, type: !4587, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!135}
!4589 = !DILocalVariable(name: "cmd_line", scope: !4586, file: !3, line: 131, type: !451)
!4590 = !DILocation(line: 131, column: 7, scope: !4586)
!4591 = !DILocation(line: 131, column: 18, scope: !4586)
!4592 = !DILocation(line: 133, column: 7, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 133, column: 6)
!4594 = !DILocation(line: 133, column: 6, scope: !4586)
!4595 = !DILocation(line: 137, column: 4, scope: !4596)
!4596 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 134, column: 7)
!4597 = distinct !DILexicalBlock(scope: !4593, file: !3, line: 133, column: 17)
!4598 = !DILocation(line: 139, column: 7, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4597, file: !3, line: 139, column: 7)
!4600 = !DILocation(line: 139, column: 35, scope: !4599)
!4601 = !DILocation(line: 139, column: 38, scope: !4599)
!4602 = !DILocation(line: 139, column: 7, scope: !4597)
!4603 = !DILocation(line: 140, column: 4, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 139, column: 60)
!4605 = !DILocation(line: 141, column: 4, scope: !4604)
!4606 = !DILocation(line: 142, column: 3, scope: !4604)
!4607 = !DILocation(line: 143, column: 2, scope: !4597)
!4608 = !DILocation(line: 145, column: 2, scope: !4586)
!4609 = !DILocation(line: 149, column: 2, scope: !4586)
!4610 = distinct !DISubprogram(name: "iommu_device_register", scope: !3, file: !3, line: 153, type: !4611, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!135, !3548}
!4613 = !DILocalVariable(name: "lock", arg: 1, scope: !4614, file: !4615, line: 392, type: !1029)
!4614 = distinct !DISubprogram(name: "spin_unlock", scope: !4615, file: !4615, line: 392, type: !4616, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4615 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!4616 = !DISubroutineType(types: !4617)
!4617 = !{null, !1029}
!4618 = !DILocation(line: 392, column: 53, scope: !4614, inlinedAt: !4619)
!4619 = distinct !DILocation(line: 157, column: 2, scope: !4610)
!4620 = !DILocalVariable(name: "lock", arg: 1, scope: !4621, file: !4615, line: 352, type: !1029)
!4621 = distinct !DISubprogram(name: "spin_lock", scope: !4615, file: !4615, line: 352, type: !4616, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4622 = !DILocation(line: 352, column: 51, scope: !4621, inlinedAt: !4623)
!4623 = distinct !DILocation(line: 155, column: 2, scope: !4610)
!4624 = !DILocalVariable(name: "iommu", arg: 1, scope: !4610, file: !3, line: 153, type: !3548)
!4625 = !DILocation(line: 153, column: 48, scope: !4610)
!4626 = !DILocation(line: 354, column: 2, scope: !4627, inlinedAt: !4623)
!4627 = distinct !DILexicalBlock(scope: !4621, file: !4615, line: 354, column: 2)
!4628 = !{i32 -2145226834}
!4629 = !DILocation(line: 354, column: 2, scope: !4630, inlinedAt: !4623)
!4630 = distinct !DILexicalBlock(scope: !4627, file: !4615, line: 354, column: 2)
!4631 = !DILocation(line: 156, column: 17, scope: !4610)
!4632 = !DILocation(line: 156, column: 24, scope: !4610)
!4633 = !DILocation(line: 156, column: 2, scope: !4610)
!4634 = !DILocation(line: 394, column: 2, scope: !4635, inlinedAt: !4619)
!4635 = distinct !DILexicalBlock(scope: !4614, file: !4615, line: 394, column: 2)
!4636 = !{i32 -2145224473}
!4637 = !DILocation(line: 394, column: 2, scope: !4638, inlinedAt: !4619)
!4638 = distinct !DILexicalBlock(scope: !4635, file: !4615, line: 394, column: 2)
!4639 = !DILocation(line: 158, column: 2, scope: !4610)
!4640 = distinct !DISubprogram(name: "list_add_tail", scope: !4641, file: !4641, line: 98, type: !4642, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4641 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!4642 = !DISubroutineType(types: !4643)
!4643 = !{null, !171, !171}
!4644 = !DILocalVariable(name: "new", arg: 1, scope: !4640, file: !4641, line: 98, type: !171)
!4645 = !DILocation(line: 98, column: 52, scope: !4640)
!4646 = !DILocalVariable(name: "head", arg: 2, scope: !4640, file: !4641, line: 98, type: !171)
!4647 = !DILocation(line: 98, column: 75, scope: !4640)
!4648 = !DILocation(line: 100, column: 13, scope: !4640)
!4649 = !DILocation(line: 100, column: 18, scope: !4640)
!4650 = !DILocation(line: 100, column: 24, scope: !4640)
!4651 = !DILocation(line: 100, column: 30, scope: !4640)
!4652 = !DILocation(line: 100, column: 2, scope: !4640)
!4653 = !DILocation(line: 101, column: 1, scope: !4640)
!4654 = distinct !DISubprogram(name: "iommu_device_unregister", scope: !3, file: !3, line: 162, type: !4655, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4655 = !DISubroutineType(types: !4656)
!4656 = !{null, !3548}
!4657 = !DILocation(line: 392, column: 53, scope: !4614, inlinedAt: !4658)
!4658 = distinct !DILocation(line: 166, column: 2, scope: !4654)
!4659 = !DILocation(line: 352, column: 51, scope: !4621, inlinedAt: !4660)
!4660 = distinct !DILocation(line: 164, column: 2, scope: !4654)
!4661 = !DILocalVariable(name: "iommu", arg: 1, scope: !4654, file: !3, line: 162, type: !3548)
!4662 = !DILocation(line: 162, column: 51, scope: !4654)
!4663 = !DILocation(line: 354, column: 2, scope: !4627, inlinedAt: !4660)
!4664 = !DILocation(line: 354, column: 2, scope: !4630, inlinedAt: !4660)
!4665 = !DILocation(line: 165, column: 12, scope: !4654)
!4666 = !DILocation(line: 165, column: 19, scope: !4654)
!4667 = !DILocation(line: 165, column: 2, scope: !4654)
!4668 = !DILocation(line: 394, column: 2, scope: !4635, inlinedAt: !4658)
!4669 = !DILocation(line: 394, column: 2, scope: !4638, inlinedAt: !4658)
!4670 = !DILocation(line: 167, column: 1, scope: !4654)
!4671 = distinct !DISubprogram(name: "list_del", scope: !4641, file: !4641, line: 144, type: !4672, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{null, !171}
!4674 = !DILocalVariable(name: "entry", arg: 1, scope: !4671, file: !4641, line: 144, type: !171)
!4675 = !DILocation(line: 144, column: 47, scope: !4671)
!4676 = !DILocation(line: 146, column: 19, scope: !4671)
!4677 = !DILocation(line: 146, column: 2, scope: !4671)
!4678 = !DILocation(line: 147, column: 2, scope: !4671)
!4679 = !DILocation(line: 147, column: 9, scope: !4671)
!4680 = !DILocation(line: 147, column: 14, scope: !4671)
!4681 = !DILocation(line: 148, column: 2, scope: !4671)
!4682 = !DILocation(line: 148, column: 9, scope: !4671)
!4683 = !DILocation(line: 148, column: 14, scope: !4671)
!4684 = !DILocation(line: 149, column: 1, scope: !4671)
!4685 = distinct !DISubprogram(name: "iommu_probe_device", scope: !3, file: !3, line: 245, type: !3370, scopeLine: 246, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4686 = !DILocalVariable(name: "dev", arg: 1, scope: !4685, file: !3, line: 245, type: !174)
!4687 = !DILocation(line: 245, column: 39, scope: !4685)
!4688 = !DILocalVariable(name: "ops", scope: !4685, file: !3, line: 247, type: !3477)
!4689 = !DILocation(line: 247, column: 26, scope: !4685)
!4690 = !DILocation(line: 247, column: 32, scope: !4685)
!4691 = !DILocation(line: 247, column: 37, scope: !4685)
!4692 = !DILocation(line: 247, column: 42, scope: !4685)
!4693 = !DILocalVariable(name: "group", scope: !4685, file: !3, line: 248, type: !3650)
!4694 = !DILocation(line: 248, column: 22, scope: !4685)
!4695 = !DILocalVariable(name: "ret", scope: !4685, file: !3, line: 249, type: !135)
!4696 = !DILocation(line: 249, column: 6, scope: !4685)
!4697 = !DILocation(line: 251, column: 29, scope: !4685)
!4698 = !DILocation(line: 251, column: 8, scope: !4685)
!4699 = !DILocation(line: 251, column: 6, scope: !4685)
!4700 = !DILocation(line: 252, column: 6, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 252, column: 6)
!4702 = !DILocation(line: 252, column: 6, scope: !4685)
!4703 = !DILocation(line: 253, column: 3, scope: !4701)
!4704 = !DILocation(line: 255, column: 26, scope: !4685)
!4705 = !DILocation(line: 255, column: 10, scope: !4685)
!4706 = !DILocation(line: 255, column: 8, scope: !4685)
!4707 = !DILocation(line: 256, column: 7, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 256, column: 6)
!4709 = !DILocation(line: 256, column: 6, scope: !4685)
!4710 = !DILocation(line: 257, column: 3, scope: !4708)
!4711 = !DILocation(line: 265, column: 29, scope: !4685)
!4712 = !DILocation(line: 265, column: 36, scope: !4685)
!4713 = !DILocation(line: 265, column: 2, scope: !4685)
!4714 = !DILocation(line: 267, column: 6, scope: !4715)
!4715 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 267, column: 6)
!4716 = !DILocation(line: 267, column: 13, scope: !4715)
!4717 = !DILocation(line: 267, column: 6, scope: !4685)
!4718 = !DILocation(line: 268, column: 31, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 267, column: 29)
!4720 = !DILocation(line: 268, column: 38, scope: !4719)
!4721 = !DILocation(line: 268, column: 54, scope: !4719)
!4722 = !DILocation(line: 268, column: 9, scope: !4719)
!4723 = !DILocation(line: 268, column: 7, scope: !4719)
!4724 = !DILocation(line: 269, column: 7, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 269, column: 7)
!4726 = !DILocation(line: 269, column: 7, scope: !4719)
!4727 = !DILocation(line: 270, column: 20, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 269, column: 12)
!4729 = !DILocation(line: 270, column: 4, scope: !4728)
!4730 = !DILocation(line: 271, column: 4, scope: !4728)
!4731 = !DILocation(line: 273, column: 2, scope: !4719)
!4732 = !DILocation(line: 275, column: 38, scope: !4685)
!4733 = !DILocation(line: 275, column: 45, scope: !4685)
!4734 = !DILocation(line: 275, column: 2, scope: !4685)
!4735 = !DILocation(line: 277, column: 18, scope: !4685)
!4736 = !DILocation(line: 277, column: 2, scope: !4685)
!4737 = !DILocation(line: 279, column: 6, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 279, column: 6)
!4739 = !DILocation(line: 279, column: 11, scope: !4738)
!4740 = !DILocation(line: 279, column: 6, scope: !4685)
!4741 = !DILocation(line: 280, column: 3, scope: !4738)
!4742 = !DILocation(line: 280, column: 8, scope: !4738)
!4743 = !DILocation(line: 280, column: 23, scope: !4738)
!4744 = !DILocation(line: 282, column: 2, scope: !4685)
!4745 = !DILabel(scope: !4685, name: "err_release", file: !3, line: 284)
!4746 = !DILocation(line: 284, column: 1, scope: !4685)
!4747 = !DILocation(line: 285, column: 23, scope: !4685)
!4748 = !DILocation(line: 285, column: 2, scope: !4685)
!4749 = !DILabel(scope: !4685, name: "err_out", file: !3, line: 287)
!4750 = !DILocation(line: 287, column: 1, scope: !4685)
!4751 = !DILocation(line: 288, column: 9, scope: !4685)
!4752 = !DILocation(line: 288, column: 2, scope: !4685)
!4753 = !DILocation(line: 290, column: 1, scope: !4685)
!4754 = distinct !DISubprogram(name: "__iommu_probe_device", scope: !3, file: !3, line: 193, type: !4755, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!135, !174, !171}
!4757 = !DILocalVariable(name: "dev", arg: 1, scope: !4754, file: !3, line: 193, type: !174)
!4758 = !DILocation(line: 193, column: 48, scope: !4754)
!4759 = !DILocalVariable(name: "group_list", arg: 2, scope: !4754, file: !3, line: 193, type: !171)
!4760 = !DILocation(line: 193, column: 71, scope: !4754)
!4761 = !DILocalVariable(name: "ops", scope: !4754, file: !3, line: 195, type: !3477)
!4762 = !DILocation(line: 195, column: 26, scope: !4754)
!4763 = !DILocation(line: 195, column: 32, scope: !4754)
!4764 = !DILocation(line: 195, column: 37, scope: !4754)
!4765 = !DILocation(line: 195, column: 42, scope: !4754)
!4766 = !DILocalVariable(name: "iommu_dev", scope: !4754, file: !3, line: 196, type: !3548)
!4767 = !DILocation(line: 196, column: 23, scope: !4754)
!4768 = !DILocalVariable(name: "group", scope: !4754, file: !3, line: 197, type: !3650)
!4769 = !DILocation(line: 197, column: 22, scope: !4754)
!4770 = !DILocalVariable(name: "ret", scope: !4754, file: !3, line: 198, type: !135)
!4771 = !DILocation(line: 198, column: 6, scope: !4754)
!4772 = !DILocation(line: 200, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 200, column: 6)
!4774 = !DILocation(line: 200, column: 6, scope: !4754)
!4775 = !DILocation(line: 201, column: 3, scope: !4773)
!4776 = !DILocation(line: 203, column: 21, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 203, column: 6)
!4778 = !DILocation(line: 203, column: 7, scope: !4777)
!4779 = !DILocation(line: 203, column: 6, scope: !4754)
!4780 = !DILocation(line: 204, column: 3, scope: !4777)
!4781 = !DILocation(line: 206, column: 22, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 206, column: 6)
!4783 = !DILocation(line: 206, column: 27, scope: !4782)
!4784 = !DILocation(line: 206, column: 7, scope: !4782)
!4785 = !DILocation(line: 206, column: 6, scope: !4754)
!4786 = !DILocation(line: 207, column: 7, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 206, column: 35)
!4788 = !DILocation(line: 208, column: 3, scope: !4787)
!4789 = !DILocation(line: 211, column: 14, scope: !4754)
!4790 = !DILocation(line: 211, column: 19, scope: !4754)
!4791 = !DILocation(line: 211, column: 32, scope: !4754)
!4792 = !DILocation(line: 211, column: 12, scope: !4754)
!4793 = !DILocation(line: 212, column: 13, scope: !4794)
!4794 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 212, column: 6)
!4795 = !DILocation(line: 212, column: 6, scope: !4794)
!4796 = !DILocation(line: 212, column: 6, scope: !4754)
!4797 = !DILocation(line: 213, column: 17, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4794, file: !3, line: 212, column: 25)
!4799 = !DILocation(line: 213, column: 9, scope: !4798)
!4800 = !DILocation(line: 213, column: 7, scope: !4798)
!4801 = !DILocation(line: 214, column: 3, scope: !4798)
!4802 = !DILocation(line: 217, column: 26, scope: !4754)
!4803 = !DILocation(line: 217, column: 2, scope: !4754)
!4804 = !DILocation(line: 217, column: 7, scope: !4754)
!4805 = !DILocation(line: 217, column: 14, scope: !4754)
!4806 = !DILocation(line: 217, column: 24, scope: !4754)
!4807 = !DILocation(line: 219, column: 34, scope: !4754)
!4808 = !DILocation(line: 219, column: 10, scope: !4754)
!4809 = !DILocation(line: 219, column: 8, scope: !4754)
!4810 = !DILocation(line: 220, column: 13, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 220, column: 6)
!4812 = !DILocation(line: 220, column: 6, scope: !4811)
!4813 = !DILocation(line: 220, column: 6, scope: !4754)
!4814 = !DILocation(line: 221, column: 17, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4811, file: !3, line: 220, column: 21)
!4816 = !DILocation(line: 221, column: 9, scope: !4815)
!4817 = !DILocation(line: 221, column: 7, scope: !4815)
!4818 = !DILocation(line: 222, column: 3, scope: !4815)
!4819 = !DILocation(line: 224, column: 18, scope: !4754)
!4820 = !DILocation(line: 224, column: 2, scope: !4754)
!4821 = !DILocation(line: 226, column: 6, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 226, column: 6)
!4823 = !DILocation(line: 226, column: 17, scope: !4822)
!4824 = !DILocation(line: 226, column: 21, scope: !4822)
!4825 = !DILocation(line: 226, column: 28, scope: !4822)
!4826 = !DILocation(line: 226, column: 43, scope: !4822)
!4827 = !DILocation(line: 226, column: 58, scope: !4822)
!4828 = !DILocation(line: 226, column: 65, scope: !4822)
!4829 = !DILocation(line: 226, column: 46, scope: !4822)
!4830 = !DILocation(line: 226, column: 6, scope: !4754)
!4831 = !DILocation(line: 227, column: 18, scope: !4822)
!4832 = !DILocation(line: 227, column: 25, scope: !4822)
!4833 = !DILocation(line: 227, column: 32, scope: !4822)
!4834 = !DILocation(line: 227, column: 3, scope: !4822)
!4835 = !DILocation(line: 229, column: 20, scope: !4754)
!4836 = !DILocation(line: 229, column: 31, scope: !4754)
!4837 = !DILocation(line: 229, column: 2, scope: !4754)
!4838 = !DILocation(line: 231, column: 2, scope: !4754)
!4839 = !DILabel(scope: !4754, name: "out_release", file: !3, line: 233)
!4840 = !DILocation(line: 233, column: 1, scope: !4754)
!4841 = !DILocation(line: 234, column: 2, scope: !4754)
!4842 = !DILocation(line: 234, column: 7, scope: !4754)
!4843 = !DILocation(line: 234, column: 22, scope: !4754)
!4844 = !DILabel(scope: !4754, name: "out_module_put", file: !3, line: 236)
!4845 = !DILocation(line: 236, column: 1, scope: !4754)
!4846 = !DILocation(line: 237, column: 13, scope: !4754)
!4847 = !DILocation(line: 237, column: 18, scope: !4754)
!4848 = !DILocation(line: 237, column: 2, scope: !4754)
!4849 = !DILabel(scope: !4754, name: "err_free", file: !3, line: 239)
!4850 = !DILocation(line: 239, column: 1, scope: !4754)
!4851 = !DILocation(line: 240, column: 17, scope: !4754)
!4852 = !DILocation(line: 240, column: 2, scope: !4754)
!4853 = !DILocation(line: 242, column: 9, scope: !4754)
!4854 = !DILocation(line: 242, column: 2, scope: !4754)
!4855 = !DILocation(line: 243, column: 1, scope: !4754)
!4856 = distinct !DISubprogram(name: "iommu_group_get", scope: !3, file: !3, line: 971, type: !3648, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4857 = !DILocalVariable(name: "dev", arg: 1, scope: !4856, file: !3, line: 971, type: !174)
!4858 = !DILocation(line: 971, column: 52, scope: !4856)
!4859 = !DILocalVariable(name: "group", scope: !4856, file: !3, line: 973, type: !3650)
!4860 = !DILocation(line: 973, column: 22, scope: !4856)
!4861 = !DILocation(line: 973, column: 30, scope: !4856)
!4862 = !DILocation(line: 973, column: 35, scope: !4856)
!4863 = !DILocation(line: 975, column: 6, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 975, column: 6)
!4865 = !DILocation(line: 975, column: 6, scope: !4856)
!4866 = !DILocation(line: 976, column: 15, scope: !4864)
!4867 = !DILocation(line: 976, column: 22, scope: !4864)
!4868 = !DILocation(line: 976, column: 3, scope: !4864)
!4869 = !DILocation(line: 978, column: 9, scope: !4856)
!4870 = !DILocation(line: 978, column: 2, scope: !4856)
!4871 = distinct !DISubprogram(name: "iommu_alloc_default_domain", scope: !3, file: !3, line: 1504, type: !4872, scopeLine: 1506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!135, !3650, !174}
!4874 = !DILocalVariable(name: "group", arg: 1, scope: !4871, file: !3, line: 1504, type: !3650)
!4875 = !DILocation(line: 1504, column: 59, scope: !4871)
!4876 = !DILocalVariable(name: "dev", arg: 2, scope: !4871, file: !3, line: 1505, type: !174)
!4877 = !DILocation(line: 1505, column: 26, scope: !4871)
!4878 = !DILocalVariable(name: "type", scope: !4871, file: !3, line: 1507, type: !7)
!4879 = !DILocation(line: 1507, column: 15, scope: !4871)
!4880 = !DILocation(line: 1509, column: 6, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 1509, column: 6)
!4882 = !DILocation(line: 1509, column: 13, scope: !4881)
!4883 = !DILocation(line: 1509, column: 6, scope: !4871)
!4884 = !DILocation(line: 1510, column: 3, scope: !4881)
!4885 = !DILocation(line: 1512, column: 35, scope: !4871)
!4886 = !DILocation(line: 1512, column: 9, scope: !4871)
!4887 = !DILocation(line: 1512, column: 7, scope: !4871)
!4888 = !DILocation(line: 1514, column: 42, scope: !4871)
!4889 = !DILocation(line: 1514, column: 47, scope: !4871)
!4890 = !DILocation(line: 1514, column: 52, scope: !4871)
!4891 = !DILocation(line: 1514, column: 59, scope: !4871)
!4892 = !DILocation(line: 1514, column: 9, scope: !4871)
!4893 = !DILocation(line: 1514, column: 2, scope: !4871)
!4894 = !DILocation(line: 1515, column: 1, scope: !4871)
!4895 = distinct !DISubprogram(name: "__iommu_attach_device", scope: !3, file: !3, line: 1924, type: !3514, scopeLine: 1926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4896 = !DILocalVariable(name: "domain", arg: 1, scope: !4895, file: !3, line: 1924, type: !3489)
!4897 = !DILocation(line: 1924, column: 55, scope: !4895)
!4898 = !DILocalVariable(name: "dev", arg: 2, scope: !4895, file: !3, line: 1925, type: !174)
!4899 = !DILocation(line: 1925, column: 21, scope: !4895)
!4900 = !DILocalVariable(name: "ret", scope: !4895, file: !3, line: 1927, type: !135)
!4901 = !DILocation(line: 1927, column: 6, scope: !4895)
!4902 = !DILocation(line: 1929, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1929, column: 6)
!4904 = !DILocation(line: 1929, column: 6, scope: !4895)
!4905 = !DILocation(line: 1930, column: 3, scope: !4903)
!4906 = !DILocation(line: 1932, column: 8, scope: !4895)
!4907 = !DILocation(line: 1932, column: 16, scope: !4895)
!4908 = !DILocation(line: 1932, column: 21, scope: !4895)
!4909 = !DILocation(line: 1932, column: 32, scope: !4895)
!4910 = !DILocation(line: 1932, column: 40, scope: !4895)
!4911 = !DILocation(line: 1932, column: 6, scope: !4895)
!4912 = !DILocation(line: 1933, column: 7, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 1933, column: 6)
!4914 = !DILocation(line: 1933, column: 6, scope: !4895)
!4915 = !DILocation(line: 1934, column: 33, scope: !4913)
!4916 = !DILocation(line: 1934, column: 3, scope: !4913)
!4917 = !DILocation(line: 1935, column: 9, scope: !4895)
!4918 = !DILocation(line: 1935, column: 2, scope: !4895)
!4919 = !DILocation(line: 1936, column: 1, scope: !4895)
!4920 = distinct !DISubprogram(name: "iommu_group_put", scope: !3, file: !3, line: 1003, type: !4921, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{null, !3650}
!4923 = !DILocalVariable(name: "group", arg: 1, scope: !4920, file: !3, line: 1003, type: !3650)
!4924 = !DILocation(line: 1003, column: 42, scope: !4920)
!4925 = !DILocation(line: 1005, column: 6, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 1005, column: 6)
!4927 = !DILocation(line: 1005, column: 6, scope: !4920)
!4928 = !DILocation(line: 1006, column: 15, scope: !4926)
!4929 = !DILocation(line: 1006, column: 22, scope: !4926)
!4930 = !DILocation(line: 1006, column: 3, scope: !4926)
!4931 = !DILocation(line: 1007, column: 1, scope: !4920)
!4932 = distinct !DISubprogram(name: "iommu_create_device_direct_mappings", scope: !3, file: !3, line: 720, type: !4872, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4933 = !DILocalVariable(name: "word", arg: 1, scope: !4934, file: !4935, line: 233, type: !285)
!4934 = distinct !DISubprogram(name: "__ffs", scope: !4935, file: !4935, line: 233, type: !4936, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!4935 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!4936 = !DISubroutineType(types: !4937)
!4937 = !{!285, !285}
!4938 = !DILocation(line: 233, column: 58, scope: !4934, inlinedAt: !4939)
!4939 = distinct !DILocation(line: 734, column: 19, scope: !4932)
!4940 = !DILocalVariable(name: "group", arg: 1, scope: !4932, file: !3, line: 720, type: !3650)
!4941 = !DILocation(line: 720, column: 68, scope: !4932)
!4942 = !DILocalVariable(name: "dev", arg: 2, scope: !4932, file: !3, line: 721, type: !174)
!4943 = !DILocation(line: 721, column: 28, scope: !4932)
!4944 = !DILocalVariable(name: "domain", scope: !4932, file: !3, line: 723, type: !3489)
!4945 = !DILocation(line: 723, column: 23, scope: !4932)
!4946 = !DILocation(line: 723, column: 32, scope: !4932)
!4947 = !DILocation(line: 723, column: 39, scope: !4932)
!4948 = !DILocalVariable(name: "entry", scope: !4932, file: !3, line: 724, type: !3694)
!4949 = !DILocation(line: 724, column: 28, scope: !4932)
!4950 = !DILocalVariable(name: "mappings", scope: !4932, file: !3, line: 725, type: !167)
!4951 = !DILocation(line: 725, column: 19, scope: !4932)
!4952 = !DILocalVariable(name: "pg_size", scope: !4932, file: !3, line: 726, type: !285)
!4953 = !DILocation(line: 726, column: 16, scope: !4932)
!4954 = !DILocalVariable(name: "ret", scope: !4932, file: !3, line: 727, type: !135)
!4955 = !DILocation(line: 727, column: 6, scope: !4932)
!4956 = !DILocation(line: 729, column: 7, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 729, column: 6)
!4958 = !DILocation(line: 729, column: 14, scope: !4957)
!4959 = !DILocation(line: 729, column: 17, scope: !4957)
!4960 = !DILocation(line: 729, column: 25, scope: !4957)
!4961 = !DILocation(line: 729, column: 30, scope: !4957)
!4962 = !DILocation(line: 729, column: 6, scope: !4932)
!4963 = !DILocation(line: 730, column: 3, scope: !4957)
!4964 = !DILocation(line: 732, column: 2, scope: !4932)
!4965 = !DILocation(line: 732, column: 2, scope: !4966)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 732, column: 2)
!4967 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 732, column: 2)
!4968 = !DILocation(line: 732, column: 2, scope: !4967)
!4969 = !DILocation(line: 732, column: 2, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4966, file: !3, line: 732, column: 2)
!4971 = !DILocation(line: 732, column: 2, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 732, column: 2)
!4973 = !DILocation(line: 732, column: 2, scope: !4974)
!4974 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 732, column: 2)
!4975 = !{i32 -2141376381, i32 -2141376352, i32 -2141376306, i32 -2141376248, i32 -2141376194, i32 -2141376140, i32 -2141376085, i32 -2141376054}
!4976 = !DILocation(line: 732, column: 2, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 732, column: 2)
!4978 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 732, column: 2)
!4979 = !{i32 -2141375610, i32 -2141375603, i32 -2141375549, i32 -2141375518, i32 -2141375488}
!4980 = !DILocation(line: 732, column: 2, scope: !4978)
!4981 = !DILocation(line: 734, column: 25, scope: !4932)
!4982 = !DILocation(line: 734, column: 33, scope: !4932)
!4983 = !DILocation(line: 237, column: 11, scope: !4934, inlinedAt: !4939)
!4984 = !DILocation(line: 235, column: 2, scope: !4934, inlinedAt: !4939)
!4985 = !{i32 447922}
!4986 = !DILocation(line: 238, column: 9, scope: !4934, inlinedAt: !4939)
!4987 = !DILocation(line: 734, column: 16, scope: !4932)
!4988 = !DILocation(line: 734, column: 10, scope: !4932)
!4989 = !DILocation(line: 735, column: 2, scope: !4932)
!4990 = !DILocation(line: 737, column: 25, scope: !4932)
!4991 = !DILocation(line: 737, column: 2, scope: !4932)
!4992 = !DILocalVariable(name: "__mptr", scope: !4993, file: !3, line: 740, type: !162)
!4993 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 740, column: 2)
!4994 = distinct !DILexicalBlock(scope: !4932, file: !3, line: 740, column: 2)
!4995 = !DILocation(line: 740, column: 2, scope: !4993)
!4996 = !DILocation(line: 740, column: 2, scope: !4997)
!4997 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 740, column: 2)
!4998 = !DILocation(line: 740, column: 2, scope: !4994)
!4999 = !DILocation(line: 740, column: 2, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4994, file: !3, line: 740, column: 2)
!5001 = !DILocalVariable(name: "start", scope: !5002, file: !3, line: 741, type: !885)
!5002 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 740, column: 46)
!5003 = !DILocation(line: 741, column: 14, scope: !5002)
!5004 = !DILocalVariable(name: "end", scope: !5002, file: !3, line: 741, type: !885)
!5005 = !DILocation(line: 741, column: 21, scope: !5002)
!5006 = !DILocalVariable(name: "addr", scope: !5002, file: !3, line: 741, type: !885)
!5007 = !DILocation(line: 741, column: 26, scope: !5002)
!5008 = !DILocation(line: 743, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 743, column: 7)
!5010 = !DILocation(line: 743, column: 15, scope: !5009)
!5011 = !DILocation(line: 743, column: 20, scope: !5009)
!5012 = !DILocation(line: 743, column: 7, scope: !5002)
!5013 = !DILocation(line: 744, column: 4, scope: !5009)
!5014 = !DILocation(line: 744, column: 12, scope: !5009)
!5015 = !DILocation(line: 744, column: 17, scope: !5009)
!5016 = !DILocation(line: 744, column: 35, scope: !5009)
!5017 = !DILocation(line: 744, column: 40, scope: !5009)
!5018 = !DILocation(line: 744, column: 48, scope: !5009)
!5019 = !DILocation(line: 746, column: 11, scope: !5002)
!5020 = !DILocation(line: 746, column: 9, scope: !5002)
!5021 = !DILocation(line: 747, column: 11, scope: !5002)
!5022 = !DILocation(line: 747, column: 9, scope: !5002)
!5023 = !DILocation(line: 749, column: 7, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 749, column: 7)
!5025 = !DILocation(line: 749, column: 14, scope: !5024)
!5026 = !DILocation(line: 749, column: 19, scope: !5024)
!5027 = !DILocation(line: 749, column: 40, scope: !5024)
!5028 = !DILocation(line: 750, column: 7, scope: !5024)
!5029 = !DILocation(line: 750, column: 14, scope: !5024)
!5030 = !DILocation(line: 750, column: 19, scope: !5024)
!5031 = !DILocation(line: 749, column: 7, scope: !5002)
!5032 = !DILocation(line: 751, column: 4, scope: !5024)
!5033 = !DILocation(line: 753, column: 15, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 753, column: 3)
!5035 = !DILocation(line: 753, column: 13, scope: !5034)
!5036 = !DILocation(line: 753, column: 8, scope: !5034)
!5037 = !DILocation(line: 753, column: 22, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5034, file: !3, line: 753, column: 3)
!5039 = !DILocation(line: 753, column: 29, scope: !5038)
!5040 = !DILocation(line: 753, column: 27, scope: !5038)
!5041 = !DILocation(line: 753, column: 3, scope: !5034)
!5042 = !DILocalVariable(name: "phys_addr", scope: !5043, file: !3, line: 754, type: !2091)
!5043 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 753, column: 51)
!5044 = !DILocation(line: 754, column: 16, scope: !5043)
!5045 = !DILocation(line: 756, column: 35, scope: !5043)
!5046 = !DILocation(line: 756, column: 43, scope: !5043)
!5047 = !DILocation(line: 756, column: 16, scope: !5043)
!5048 = !DILocation(line: 756, column: 14, scope: !5043)
!5049 = !DILocation(line: 757, column: 8, scope: !5050)
!5050 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 757, column: 8)
!5051 = !DILocation(line: 757, column: 8, scope: !5043)
!5052 = !DILocation(line: 758, column: 5, scope: !5050)
!5053 = !DILocation(line: 760, column: 20, scope: !5043)
!5054 = !DILocation(line: 760, column: 28, scope: !5043)
!5055 = !DILocation(line: 760, column: 34, scope: !5043)
!5056 = !DILocation(line: 760, column: 40, scope: !5043)
!5057 = !DILocation(line: 760, column: 49, scope: !5043)
!5058 = !DILocation(line: 760, column: 56, scope: !5043)
!5059 = !DILocation(line: 760, column: 10, scope: !5043)
!5060 = !DILocation(line: 760, column: 8, scope: !5043)
!5061 = !DILocation(line: 761, column: 8, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5043, file: !3, line: 761, column: 8)
!5063 = !DILocation(line: 761, column: 8, scope: !5043)
!5064 = !DILocation(line: 762, column: 5, scope: !5062)
!5065 = !DILocation(line: 763, column: 3, scope: !5043)
!5066 = !DILocation(line: 753, column: 42, scope: !5038)
!5067 = !DILocation(line: 753, column: 39, scope: !5038)
!5068 = !DILocation(line: 753, column: 3, scope: !5038)
!5069 = distinct !{!5069, !5041, !5070}
!5070 = !DILocation(line: 763, column: 3, scope: !5034)
!5071 = !DILocation(line: 765, column: 2, scope: !5002)
!5072 = !DILocalVariable(name: "__mptr", scope: !5073, file: !3, line: 740, type: !162)
!5073 = distinct !DILexicalBlock(scope: !5000, file: !3, line: 740, column: 2)
!5074 = !DILocation(line: 740, column: 2, scope: !5073)
!5075 = !DILocation(line: 740, column: 2, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 740, column: 2)
!5077 = distinct !{!5077, !4998, !5078}
!5078 = !DILocation(line: 765, column: 2, scope: !4994)
!5079 = !DILocation(line: 767, column: 24, scope: !4932)
!5080 = !DILocation(line: 767, column: 2, scope: !4932)
!5081 = !DILabel(scope: !4932, name: "out", file: !3, line: 769)
!5082 = !DILocation(line: 769, column: 1, scope: !4932)
!5083 = !DILocation(line: 770, column: 25, scope: !4932)
!5084 = !DILocation(line: 770, column: 2, scope: !4932)
!5085 = !DILocation(line: 772, column: 9, scope: !4932)
!5086 = !DILocation(line: 772, column: 2, scope: !4932)
!5087 = !DILocation(line: 773, column: 1, scope: !4932)
!5088 = distinct !DISubprogram(name: "iommu_release_device", scope: !3, file: !3, line: 292, type: !3361, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5089 = !DILocalVariable(name: "dev", arg: 1, scope: !5088, file: !3, line: 292, type: !174)
!5090 = !DILocation(line: 292, column: 42, scope: !5088)
!5091 = !DILocalVariable(name: "ops", scope: !5088, file: !3, line: 294, type: !3477)
!5092 = !DILocation(line: 294, column: 26, scope: !5088)
!5093 = !DILocation(line: 294, column: 32, scope: !5088)
!5094 = !DILocation(line: 294, column: 37, scope: !5088)
!5095 = !DILocation(line: 294, column: 42, scope: !5088)
!5096 = !DILocation(line: 296, column: 7, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 296, column: 6)
!5098 = !DILocation(line: 296, column: 12, scope: !5097)
!5099 = !DILocation(line: 296, column: 6, scope: !5088)
!5100 = !DILocation(line: 297, column: 3, scope: !5097)
!5101 = !DILocation(line: 299, column: 22, scope: !5088)
!5102 = !DILocation(line: 299, column: 27, scope: !5088)
!5103 = !DILocation(line: 299, column: 34, scope: !5088)
!5104 = !DILocation(line: 299, column: 45, scope: !5088)
!5105 = !DILocation(line: 299, column: 2, scope: !5088)
!5106 = !DILocation(line: 301, column: 2, scope: !5088)
!5107 = !DILocation(line: 301, column: 7, scope: !5088)
!5108 = !DILocation(line: 301, column: 22, scope: !5088)
!5109 = !DILocation(line: 303, column: 28, scope: !5088)
!5110 = !DILocation(line: 303, column: 2, scope: !5088)
!5111 = !DILocation(line: 304, column: 13, scope: !5088)
!5112 = !DILocation(line: 304, column: 18, scope: !5088)
!5113 = !DILocation(line: 304, column: 2, scope: !5088)
!5114 = !DILocation(line: 305, column: 17, scope: !5088)
!5115 = !DILocation(line: 305, column: 2, scope: !5088)
!5116 = !DILocation(line: 306, column: 1, scope: !5088)
!5117 = distinct !DISubprogram(name: "iommu_group_remove_device", scope: !3, file: !3, line: 877, type: !3361, scopeLine: 878, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5118 = !DILocalVariable(name: "dev", arg: 1, scope: !5117, file: !3, line: 877, type: !174)
!5119 = !DILocation(line: 877, column: 47, scope: !5117)
!5120 = !DILocalVariable(name: "group", scope: !5117, file: !3, line: 879, type: !3650)
!5121 = !DILocation(line: 879, column: 22, scope: !5117)
!5122 = !DILocation(line: 879, column: 30, scope: !5117)
!5123 = !DILocation(line: 879, column: 35, scope: !5117)
!5124 = !DILocalVariable(name: "tmp_device", scope: !5117, file: !3, line: 880, type: !163)
!5125 = !DILocation(line: 880, column: 23, scope: !5117)
!5126 = !DILocalVariable(name: "device", scope: !5117, file: !3, line: 880, type: !163)
!5127 = !DILocation(line: 880, column: 36, scope: !5117)
!5128 = !DILocation(line: 882, column: 2, scope: !5117)
!5129 = !DILocation(line: 885, column: 32, scope: !5117)
!5130 = !DILocation(line: 885, column: 39, scope: !5117)
!5131 = !DILocation(line: 886, column: 41, scope: !5117)
!5132 = !DILocation(line: 885, column: 2, scope: !5117)
!5133 = !DILocation(line: 888, column: 14, scope: !5117)
!5134 = !DILocation(line: 888, column: 21, scope: !5117)
!5135 = !DILocation(line: 888, column: 2, scope: !5117)
!5136 = !DILocalVariable(name: "__mptr", scope: !5137, file: !3, line: 889, type: !162)
!5137 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 889, column: 2)
!5138 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 889, column: 2)
!5139 = !DILocation(line: 889, column: 2, scope: !5137)
!5140 = !DILocation(line: 889, column: 2, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 889, column: 2)
!5142 = !DILocation(line: 889, column: 2, scope: !5138)
!5143 = !DILocation(line: 889, column: 2, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 889, column: 2)
!5145 = !DILocation(line: 890, column: 7, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 890, column: 7)
!5147 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 889, column: 57)
!5148 = !DILocation(line: 890, column: 19, scope: !5146)
!5149 = !DILocation(line: 890, column: 26, scope: !5146)
!5150 = !DILocation(line: 890, column: 23, scope: !5146)
!5151 = !DILocation(line: 890, column: 7, scope: !5147)
!5152 = !DILocation(line: 891, column: 13, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 890, column: 31)
!5154 = !DILocation(line: 891, column: 11, scope: !5153)
!5155 = !DILocation(line: 892, column: 14, scope: !5153)
!5156 = !DILocation(line: 892, column: 22, scope: !5153)
!5157 = !DILocation(line: 892, column: 4, scope: !5153)
!5158 = !DILocation(line: 893, column: 4, scope: !5153)
!5159 = !DILocation(line: 895, column: 2, scope: !5147)
!5160 = !DILocalVariable(name: "__mptr", scope: !5161, file: !3, line: 889, type: !162)
!5161 = distinct !DILexicalBlock(scope: !5144, file: !3, line: 889, column: 2)
!5162 = !DILocation(line: 889, column: 2, scope: !5161)
!5163 = !DILocation(line: 889, column: 2, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 889, column: 2)
!5165 = distinct !{!5165, !5142, !5166}
!5166 = !DILocation(line: 895, column: 2, scope: !5138)
!5167 = !DILocation(line: 896, column: 16, scope: !5117)
!5168 = !DILocation(line: 896, column: 23, scope: !5117)
!5169 = !DILocation(line: 896, column: 2, scope: !5117)
!5170 = !DILocation(line: 898, column: 7, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 898, column: 6)
!5172 = !DILocation(line: 898, column: 6, scope: !5117)
!5173 = !DILocation(line: 899, column: 3, scope: !5171)
!5174 = !DILocation(line: 901, column: 20, scope: !5117)
!5175 = !DILocation(line: 901, column: 27, scope: !5117)
!5176 = !DILocation(line: 901, column: 41, scope: !5117)
!5177 = !DILocation(line: 901, column: 49, scope: !5117)
!5178 = !DILocation(line: 901, column: 2, scope: !5117)
!5179 = !DILocation(line: 902, column: 21, scope: !5117)
!5180 = !DILocation(line: 902, column: 26, scope: !5117)
!5181 = !DILocation(line: 902, column: 2, scope: !5117)
!5182 = !DILocation(line: 904, column: 33, scope: !5117)
!5183 = !DILocation(line: 904, column: 40, scope: !5117)
!5184 = !DILocation(line: 904, column: 44, scope: !5117)
!5185 = !DILocation(line: 904, column: 2, scope: !5117)
!5186 = !DILocation(line: 906, column: 8, scope: !5117)
!5187 = !DILocation(line: 906, column: 16, scope: !5117)
!5188 = !DILocation(line: 906, column: 2, scope: !5117)
!5189 = !DILocation(line: 907, column: 8, scope: !5117)
!5190 = !DILocation(line: 907, column: 2, scope: !5117)
!5191 = !DILocation(line: 908, column: 2, scope: !5117)
!5192 = !DILocation(line: 908, column: 7, scope: !5117)
!5193 = !DILocation(line: 908, column: 19, scope: !5117)
!5194 = !DILocation(line: 909, column: 14, scope: !5117)
!5195 = !DILocation(line: 909, column: 21, scope: !5117)
!5196 = !DILocation(line: 909, column: 2, scope: !5117)
!5197 = !DILocation(line: 910, column: 1, scope: !5117)
!5198 = distinct !DISubprogram(name: "module_put", scope: !5199, file: !5199, line: 756, type: !5200, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5199 = !DIFile(filename: "./include/linux/module.h", directory: "/home/lizy2001/genbc/linux")
!5200 = !DISubroutineType(types: !5201)
!5201 = !{null, !594}
!5202 = !DILocalVariable(name: "module", arg: 1, scope: !5198, file: !5199, line: 756, type: !594)
!5203 = !DILocation(line: 756, column: 46, scope: !5198)
!5204 = !DILocation(line: 758, column: 1, scope: !5198)
!5205 = distinct !DISubprogram(name: "dev_iommu_free", scope: !3, file: !3, line: 186, type: !3361, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5206 = !DILocalVariable(name: "dev", arg: 1, scope: !5205, file: !3, line: 186, type: !174)
!5207 = !DILocation(line: 186, column: 43, scope: !5205)
!5208 = !DILocation(line: 188, column: 20, scope: !5205)
!5209 = !DILocation(line: 188, column: 2, scope: !5205)
!5210 = !DILocation(line: 189, column: 8, scope: !5205)
!5211 = !DILocation(line: 189, column: 13, scope: !5205)
!5212 = !DILocation(line: 189, column: 2, scope: !5205)
!5213 = !DILocation(line: 190, column: 2, scope: !5205)
!5214 = !DILocation(line: 190, column: 7, scope: !5205)
!5215 = !DILocation(line: 190, column: 13, scope: !5205)
!5216 = !DILocation(line: 191, column: 1, scope: !5205)
!5217 = distinct !DISubprogram(name: "iommu_set_def_domain_type", scope: !3, file: !3, line: 308, type: !4509, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5218 = !DILocalVariable(name: "str", arg: 1, scope: !5217, file: !3, line: 308, type: !235)
!5219 = !DILocation(line: 308, column: 51, scope: !5217)
!5220 = !DILocalVariable(name: "pt", scope: !5217, file: !3, line: 310, type: !451)
!5221 = !DILocation(line: 310, column: 7, scope: !5217)
!5222 = !DILocalVariable(name: "ret", scope: !5217, file: !3, line: 311, type: !135)
!5223 = !DILocation(line: 311, column: 6, scope: !5217)
!5224 = !DILocation(line: 313, column: 19, scope: !5217)
!5225 = !DILocation(line: 313, column: 8, scope: !5217)
!5226 = !DILocation(line: 313, column: 6, scope: !5217)
!5227 = !DILocation(line: 314, column: 6, scope: !5228)
!5228 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 314, column: 6)
!5229 = !DILocation(line: 314, column: 6, scope: !5217)
!5230 = !DILocation(line: 315, column: 10, scope: !5228)
!5231 = !DILocation(line: 315, column: 3, scope: !5228)
!5232 = !DILocation(line: 317, column: 6, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 317, column: 6)
!5234 = !DILocation(line: 317, column: 6, scope: !5217)
!5235 = !DILocation(line: 318, column: 3, scope: !5233)
!5236 = !DILocation(line: 320, column: 3, scope: !5233)
!5237 = !DILocation(line: 322, column: 2, scope: !5217)
!5238 = !DILocation(line: 323, column: 1, scope: !5217)
!5239 = distinct !DISubprogram(name: "iommu_dma_setup", scope: !3, file: !3, line: 326, type: !4509, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5240 = !DILocalVariable(name: "str", arg: 1, scope: !5239, file: !3, line: 326, type: !235)
!5241 = !DILocation(line: 326, column: 41, scope: !5239)
!5242 = !DILocation(line: 328, column: 20, scope: !5239)
!5243 = !DILocation(line: 328, column: 9, scope: !5239)
!5244 = !DILocation(line: 328, column: 2, scope: !5239)
!5245 = distinct !DISubprogram(name: "iommu_get_group_resv_regions", scope: !3, file: !3, line: 455, type: !5246, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5246 = !DISubroutineType(types: !5247)
!5247 = !{!135, !3650, !171}
!5248 = !DILocalVariable(name: "group", arg: 1, scope: !5245, file: !3, line: 455, type: !3650)
!5249 = !DILocation(line: 455, column: 54, scope: !5245)
!5250 = !DILocalVariable(name: "head", arg: 2, scope: !5245, file: !3, line: 456, type: !171)
!5251 = !DILocation(line: 456, column: 24, scope: !5245)
!5252 = !DILocalVariable(name: "device", scope: !5245, file: !3, line: 458, type: !163)
!5253 = !DILocation(line: 458, column: 23, scope: !5245)
!5254 = !DILocalVariable(name: "ret", scope: !5245, file: !3, line: 459, type: !135)
!5255 = !DILocation(line: 459, column: 6, scope: !5245)
!5256 = !DILocation(line: 461, column: 14, scope: !5245)
!5257 = !DILocation(line: 461, column: 21, scope: !5245)
!5258 = !DILocation(line: 461, column: 2, scope: !5245)
!5259 = !DILocalVariable(name: "__mptr", scope: !5260, file: !3, line: 462, type: !162)
!5260 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 462, column: 2)
!5261 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 462, column: 2)
!5262 = !DILocation(line: 462, column: 2, scope: !5260)
!5263 = !DILocation(line: 462, column: 2, scope: !5264)
!5264 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 462, column: 2)
!5265 = !DILocation(line: 462, column: 2, scope: !5261)
!5266 = !DILocation(line: 462, column: 2, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 462, column: 2)
!5268 = !DILocalVariable(name: "dev_resv_regions", scope: !5269, file: !3, line: 463, type: !167)
!5269 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 462, column: 53)
!5270 = !DILocation(line: 463, column: 20, scope: !5269)
!5271 = !DILocation(line: 465, column: 3, scope: !5269)
!5272 = !DILocation(line: 466, column: 26, scope: !5269)
!5273 = !DILocation(line: 466, column: 34, scope: !5269)
!5274 = !DILocation(line: 466, column: 3, scope: !5269)
!5275 = !DILocation(line: 467, column: 61, scope: !5269)
!5276 = !DILocation(line: 467, column: 9, scope: !5269)
!5277 = !DILocation(line: 467, column: 7, scope: !5269)
!5278 = !DILocation(line: 468, column: 26, scope: !5269)
!5279 = !DILocation(line: 468, column: 34, scope: !5269)
!5280 = !DILocation(line: 468, column: 3, scope: !5269)
!5281 = !DILocation(line: 469, column: 7, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5269, file: !3, line: 469, column: 7)
!5283 = !DILocation(line: 469, column: 7, scope: !5269)
!5284 = !DILocation(line: 470, column: 4, scope: !5282)
!5285 = !DILocation(line: 471, column: 2, scope: !5269)
!5286 = !DILocalVariable(name: "__mptr", scope: !5287, file: !3, line: 462, type: !162)
!5287 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 462, column: 2)
!5288 = !DILocation(line: 462, column: 2, scope: !5287)
!5289 = !DILocation(line: 462, column: 2, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 462, column: 2)
!5291 = distinct !{!5291, !5265, !5292}
!5292 = !DILocation(line: 471, column: 2, scope: !5261)
!5293 = !DILocation(line: 472, column: 16, scope: !5245)
!5294 = !DILocation(line: 472, column: 23, scope: !5245)
!5295 = !DILocation(line: 472, column: 2, scope: !5245)
!5296 = !DILocation(line: 473, column: 9, scope: !5245)
!5297 = !DILocation(line: 473, column: 2, scope: !5245)
!5298 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !4641, file: !4641, line: 33, type: !4672, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5299 = !DILocalVariable(name: "list", arg: 1, scope: !5298, file: !4641, line: 33, type: !171)
!5300 = !DILocation(line: 33, column: 53, scope: !5298)
!5301 = !DILocation(line: 35, column: 2, scope: !5298)
!5302 = !DILocation(line: 35, column: 2, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5298, file: !4641, line: 35, column: 2)
!5304 = !DILocation(line: 35, column: 2, scope: !5305)
!5305 = distinct !DILexicalBlock(scope: !5303, file: !4641, line: 35, column: 2)
!5306 = !DILocation(line: 35, column: 2, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5303, file: !4641, line: 35, column: 2)
!5308 = !DILocation(line: 36, column: 15, scope: !5298)
!5309 = !DILocation(line: 36, column: 2, scope: !5298)
!5310 = !DILocation(line: 36, column: 8, scope: !5298)
!5311 = !DILocation(line: 36, column: 13, scope: !5298)
!5312 = !DILocation(line: 37, column: 1, scope: !5298)
!5313 = distinct !DISubprogram(name: "iommu_get_resv_regions", scope: !3, file: !3, line: 2693, type: !3687, scopeLine: 2694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5314 = !DILocalVariable(name: "dev", arg: 1, scope: !5313, file: !3, line: 2693, type: !174)
!5315 = !DILocation(line: 2693, column: 44, scope: !5313)
!5316 = !DILocalVariable(name: "list", arg: 2, scope: !5313, file: !3, line: 2693, type: !171)
!5317 = !DILocation(line: 2693, column: 67, scope: !5313)
!5318 = !DILocalVariable(name: "ops", scope: !5313, file: !3, line: 2695, type: !3477)
!5319 = !DILocation(line: 2695, column: 26, scope: !5313)
!5320 = !DILocation(line: 2695, column: 32, scope: !5313)
!5321 = !DILocation(line: 2695, column: 37, scope: !5313)
!5322 = !DILocation(line: 2695, column: 42, scope: !5313)
!5323 = !DILocation(line: 2697, column: 6, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 2697, column: 6)
!5325 = !DILocation(line: 2697, column: 10, scope: !5324)
!5326 = !DILocation(line: 2697, column: 13, scope: !5324)
!5327 = !DILocation(line: 2697, column: 18, scope: !5324)
!5328 = !DILocation(line: 2697, column: 6, scope: !5313)
!5329 = !DILocation(line: 2698, column: 3, scope: !5324)
!5330 = !DILocation(line: 2698, column: 8, scope: !5324)
!5331 = !DILocation(line: 2698, column: 25, scope: !5324)
!5332 = !DILocation(line: 2698, column: 30, scope: !5324)
!5333 = !DILocation(line: 2699, column: 1, scope: !5313)
!5334 = distinct !DISubprogram(name: "iommu_insert_device_resv_regions", scope: !3, file: !3, line: 441, type: !5335, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5335 = !DISubroutineType(types: !5336)
!5336 = !{!135, !171, !171}
!5337 = !DILocalVariable(name: "dev_resv_regions", arg: 1, scope: !5334, file: !3, line: 441, type: !171)
!5338 = !DILocation(line: 441, column: 52, scope: !5334)
!5339 = !DILocalVariable(name: "group_resv_regions", arg: 2, scope: !5334, file: !3, line: 442, type: !171)
!5340 = !DILocation(line: 442, column: 24, scope: !5334)
!5341 = !DILocalVariable(name: "entry", scope: !5334, file: !3, line: 444, type: !3694)
!5342 = !DILocation(line: 444, column: 28, scope: !5334)
!5343 = !DILocalVariable(name: "ret", scope: !5334, file: !3, line: 445, type: !135)
!5344 = !DILocation(line: 445, column: 6, scope: !5334)
!5345 = !DILocalVariable(name: "__mptr", scope: !5346, file: !3, line: 447, type: !162)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 447, column: 2)
!5347 = distinct !DILexicalBlock(scope: !5334, file: !3, line: 447, column: 2)
!5348 = !DILocation(line: 447, column: 2, scope: !5346)
!5349 = !DILocation(line: 447, column: 2, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 447, column: 2)
!5351 = !DILocation(line: 447, column: 2, scope: !5347)
!5352 = !DILocation(line: 447, column: 2, scope: !5353)
!5353 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 447, column: 2)
!5354 = !DILocation(line: 448, column: 34, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 447, column: 53)
!5356 = !DILocation(line: 448, column: 41, scope: !5355)
!5357 = !DILocation(line: 448, column: 9, scope: !5355)
!5358 = !DILocation(line: 448, column: 7, scope: !5355)
!5359 = !DILocation(line: 449, column: 7, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5355, file: !3, line: 449, column: 7)
!5361 = !DILocation(line: 449, column: 7, scope: !5355)
!5362 = !DILocation(line: 450, column: 4, scope: !5360)
!5363 = !DILocation(line: 451, column: 2, scope: !5355)
!5364 = !DILocalVariable(name: "__mptr", scope: !5365, file: !3, line: 447, type: !162)
!5365 = distinct !DILexicalBlock(scope: !5353, file: !3, line: 447, column: 2)
!5366 = !DILocation(line: 447, column: 2, scope: !5365)
!5367 = !DILocation(line: 447, column: 2, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5365, file: !3, line: 447, column: 2)
!5369 = distinct !{!5369, !5351, !5370}
!5370 = !DILocation(line: 451, column: 2, scope: !5347)
!5371 = !DILocation(line: 452, column: 9, scope: !5334)
!5372 = !DILocation(line: 452, column: 2, scope: !5334)
!5373 = distinct !DISubprogram(name: "iommu_put_resv_regions", scope: !3, file: !3, line: 2701, type: !3687, scopeLine: 2702, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5374 = !DILocalVariable(name: "dev", arg: 1, scope: !5373, file: !3, line: 2701, type: !174)
!5375 = !DILocation(line: 2701, column: 44, scope: !5373)
!5376 = !DILocalVariable(name: "list", arg: 2, scope: !5373, file: !3, line: 2701, type: !171)
!5377 = !DILocation(line: 2701, column: 67, scope: !5373)
!5378 = !DILocalVariable(name: "ops", scope: !5373, file: !3, line: 2703, type: !3477)
!5379 = !DILocation(line: 2703, column: 26, scope: !5373)
!5380 = !DILocation(line: 2703, column: 32, scope: !5373)
!5381 = !DILocation(line: 2703, column: 37, scope: !5373)
!5382 = !DILocation(line: 2703, column: 42, scope: !5373)
!5383 = !DILocation(line: 2705, column: 6, scope: !5384)
!5384 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2705, column: 6)
!5385 = !DILocation(line: 2705, column: 10, scope: !5384)
!5386 = !DILocation(line: 2705, column: 13, scope: !5384)
!5387 = !DILocation(line: 2705, column: 18, scope: !5384)
!5388 = !DILocation(line: 2705, column: 6, scope: !5373)
!5389 = !DILocation(line: 2706, column: 3, scope: !5384)
!5390 = !DILocation(line: 2706, column: 8, scope: !5384)
!5391 = !DILocation(line: 2706, column: 25, scope: !5384)
!5392 = !DILocation(line: 2706, column: 30, scope: !5384)
!5393 = !DILocation(line: 2707, column: 1, scope: !5373)
!5394 = !DILocalVariable(name: "group", scope: !4516, file: !3, line: 568, type: !3650)
!5395 = !DILocation(line: 568, column: 22, scope: !4516)
!5396 = !DILocalVariable(name: "ret", scope: !4516, file: !3, line: 569, type: !135)
!5397 = !DILocation(line: 569, column: 6, scope: !4516)
!5398 = !DILocation(line: 571, column: 10, scope: !4516)
!5399 = !DILocation(line: 571, column: 8, scope: !4516)
!5400 = !DILocation(line: 572, column: 7, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 572, column: 6)
!5402 = !DILocation(line: 572, column: 6, scope: !4516)
!5403 = !DILocation(line: 573, column: 10, scope: !5401)
!5404 = !DILocation(line: 573, column: 3, scope: !5401)
!5405 = !DILocation(line: 575, column: 21, scope: !4516)
!5406 = !DILocation(line: 575, column: 2, scope: !4516)
!5407 = !DILocation(line: 575, column: 9, scope: !4516)
!5408 = !DILocation(line: 575, column: 14, scope: !4516)
!5409 = !DILocation(line: 575, column: 19, scope: !4516)
!5410 = !DILocation(line: 576, column: 2, scope: !4516)
!5411 = !DILocation(line: 576, column: 2, scope: !5412)
!5412 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 576, column: 2)
!5413 = !DILocation(line: 577, column: 18, scope: !4516)
!5414 = !DILocation(line: 577, column: 25, scope: !4516)
!5415 = !DILocation(line: 577, column: 2, scope: !4516)
!5416 = !DILocation(line: 578, column: 18, scope: !4516)
!5417 = !DILocation(line: 578, column: 25, scope: !4516)
!5418 = !DILocation(line: 578, column: 2, scope: !4516)
!5419 = !DILocation(line: 579, column: 2, scope: !4516)
!5420 = !DILocation(line: 579, column: 2, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 579, column: 2)
!5422 = !DILocation(line: 579, column: 2, scope: !5423)
!5423 = distinct !DILexicalBlock(scope: !5421, file: !3, line: 579, column: 2)
!5424 = !DILocation(line: 581, column: 8, scope: !4516)
!5425 = !DILocation(line: 581, column: 6, scope: !4516)
!5426 = !DILocation(line: 582, column: 6, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 582, column: 6)
!5428 = !DILocation(line: 582, column: 10, scope: !5427)
!5429 = !DILocation(line: 582, column: 6, scope: !4516)
!5430 = !DILocation(line: 583, column: 9, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 582, column: 15)
!5432 = !DILocation(line: 583, column: 3, scope: !5431)
!5433 = !DILocation(line: 584, column: 18, scope: !5431)
!5434 = !DILocation(line: 584, column: 10, scope: !5431)
!5435 = !DILocation(line: 584, column: 3, scope: !5431)
!5436 = !DILocation(line: 586, column: 14, scope: !4516)
!5437 = !DILocation(line: 586, column: 2, scope: !4516)
!5438 = !DILocation(line: 586, column: 9, scope: !4516)
!5439 = !DILocation(line: 586, column: 12, scope: !4516)
!5440 = !DILocation(line: 588, column: 30, scope: !4516)
!5441 = !DILocation(line: 588, column: 37, scope: !4516)
!5442 = !DILocation(line: 589, column: 20, scope: !4516)
!5443 = !DILocation(line: 589, column: 27, scope: !4516)
!5444 = !DILocation(line: 588, column: 8, scope: !4516)
!5445 = !DILocation(line: 588, column: 6, scope: !4516)
!5446 = !DILocation(line: 590, column: 6, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 590, column: 6)
!5448 = !DILocation(line: 590, column: 6, scope: !4516)
!5449 = !DILocation(line: 591, column: 3, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 590, column: 11)
!5451 = !DILocation(line: 592, column: 16, scope: !5450)
!5452 = !DILocation(line: 592, column: 23, scope: !5450)
!5453 = !DILocation(line: 592, column: 3, scope: !5450)
!5454 = !DILocation(line: 593, column: 18, scope: !5450)
!5455 = !DILocation(line: 593, column: 10, scope: !5450)
!5456 = !DILocation(line: 593, column: 3, scope: !5450)
!5457 = !DILocation(line: 596, column: 59, scope: !4516)
!5458 = !DILocation(line: 596, column: 66, scope: !4516)
!5459 = !DILocation(line: 596, column: 24, scope: !4516)
!5460 = !DILocation(line: 596, column: 2, scope: !4516)
!5461 = !DILocation(line: 596, column: 9, scope: !4516)
!5462 = !DILocation(line: 596, column: 22, scope: !4516)
!5463 = !DILocation(line: 597, column: 7, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 597, column: 6)
!5465 = !DILocation(line: 597, column: 14, scope: !5464)
!5466 = !DILocation(line: 597, column: 6, scope: !4516)
!5467 = !DILocation(line: 598, column: 16, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 597, column: 28)
!5469 = !DILocation(line: 598, column: 23, scope: !5468)
!5470 = !DILocation(line: 598, column: 3, scope: !5468)
!5471 = !DILocation(line: 599, column: 10, scope: !5468)
!5472 = !DILocation(line: 599, column: 3, scope: !5468)
!5473 = !DILocation(line: 607, column: 15, scope: !4516)
!5474 = !DILocation(line: 607, column: 22, scope: !4516)
!5475 = !DILocation(line: 607, column: 2, scope: !4516)
!5476 = !DILocation(line: 609, column: 32, scope: !4516)
!5477 = !DILocation(line: 609, column: 8, scope: !4516)
!5478 = !DILocation(line: 609, column: 6, scope: !4516)
!5479 = !DILocation(line: 611, column: 6, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 611, column: 6)
!5481 = !DILocation(line: 611, column: 6, scope: !4516)
!5482 = !DILocation(line: 612, column: 18, scope: !5480)
!5483 = !DILocation(line: 612, column: 10, scope: !5480)
!5484 = !DILocation(line: 612, column: 3, scope: !5480)
!5485 = !DILocation(line: 614, column: 32, scope: !4516)
!5486 = !DILocation(line: 614, column: 8, scope: !4516)
!5487 = !DILocation(line: 614, column: 6, scope: !4516)
!5488 = !DILocation(line: 615, column: 6, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 615, column: 6)
!5490 = !DILocation(line: 615, column: 6, scope: !4516)
!5491 = !DILocation(line: 616, column: 18, scope: !5489)
!5492 = !DILocation(line: 616, column: 10, scope: !5489)
!5493 = !DILocation(line: 616, column: 3, scope: !5489)
!5494 = !DILocation(line: 618, column: 2, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5496, file: !3, line: 618, column: 2)
!5496 = distinct !DILexicalBlock(scope: !4516, file: !3, line: 618, column: 2)
!5497 = !DILocation(line: 618, column: 2, scope: !5496)
!5498 = !DILocation(line: 620, column: 9, scope: !4516)
!5499 = !DILocation(line: 620, column: 2, scope: !4516)
!5500 = !DILocation(line: 621, column: 1, scope: !4516)
!5501 = distinct !DISubprogram(name: "kzalloc", scope: !155, file: !155, line: 662, type: !5502, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{!162, !282, !708}
!5504 = !DILocalVariable(name: "s", arg: 1, scope: !5505, file: !155, line: 445, type: !900)
!5505 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !155, file: !155, line: 445, type: !5506, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{!162, !900, !708, !282}
!5508 = !DILocation(line: 445, column: 72, scope: !5505, inlinedAt: !5509)
!5509 = distinct !DILocation(line: 552, column: 10, scope: !5510, inlinedAt: !5513)
!5510 = distinct !DILexicalBlock(scope: !5511, file: !155, line: 540, column: 34)
!5511 = distinct !DILexicalBlock(scope: !5512, file: !155, line: 540, column: 6)
!5512 = distinct !DISubprogram(name: "kmalloc", scope: !155, file: !155, line: 538, type: !5502, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5513 = distinct !DILocation(line: 664, column: 9, scope: !5501)
!5514 = !DILocalVariable(name: "flags", arg: 2, scope: !5505, file: !155, line: 446, type: !708)
!5515 = !DILocation(line: 446, column: 9, scope: !5505, inlinedAt: !5509)
!5516 = !DILocalVariable(name: "size", arg: 3, scope: !5505, file: !155, line: 446, type: !282)
!5517 = !DILocation(line: 446, column: 23, scope: !5505, inlinedAt: !5509)
!5518 = !DILocalVariable(name: "ret", scope: !5505, file: !155, line: 448, type: !162)
!5519 = !DILocation(line: 448, column: 8, scope: !5505, inlinedAt: !5509)
!5520 = !DILocalVariable(name: "flags", arg: 1, scope: !5521, file: !155, line: 318, type: !708)
!5521 = distinct !DISubprogram(name: "kmalloc_type", scope: !155, file: !155, line: 318, type: !5522, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5522 = !DISubroutineType(types: !5523)
!5523 = !{!154, !708}
!5524 = !DILocation(line: 318, column: 67, scope: !5521, inlinedAt: !5525)
!5525 = distinct !DILocation(line: 553, column: 20, scope: !5510, inlinedAt: !5513)
!5526 = !DILocalVariable(name: "size", arg: 1, scope: !5527, file: !155, line: 346, type: !282)
!5527 = distinct !DISubprogram(name: "kmalloc_index", scope: !155, file: !155, line: 346, type: !5528, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5528 = !DISubroutineType(types: !5529)
!5529 = !{!7, !282}
!5530 = !DILocation(line: 346, column: 58, scope: !5527, inlinedAt: !5531)
!5531 = distinct !DILocation(line: 547, column: 11, scope: !5510, inlinedAt: !5513)
!5532 = !DILocalVariable(name: "size", arg: 1, scope: !5533, file: !155, line: 472, type: !282)
!5533 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !155, file: !155, line: 472, type: !5534, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5534 = !DISubroutineType(types: !5535)
!5535 = !{!162, !282, !708, !7}
!5536 = !DILocation(line: 472, column: 28, scope: !5533, inlinedAt: !5537)
!5537 = distinct !DILocation(line: 481, column: 9, scope: !5538, inlinedAt: !5539)
!5538 = distinct !DISubprogram(name: "kmalloc_large", scope: !155, file: !155, line: 478, type: !5502, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5539 = distinct !DILocation(line: 545, column: 11, scope: !5540, inlinedAt: !5513)
!5540 = distinct !DILexicalBlock(scope: !5510, file: !155, line: 544, column: 7)
!5541 = !DILocalVariable(name: "flags", arg: 2, scope: !5533, file: !155, line: 472, type: !708)
!5542 = !DILocation(line: 472, column: 40, scope: !5533, inlinedAt: !5537)
!5543 = !DILocalVariable(name: "order", arg: 3, scope: !5533, file: !155, line: 472, type: !7)
!5544 = !DILocation(line: 472, column: 60, scope: !5533, inlinedAt: !5537)
!5545 = !DILocalVariable(name: "size", arg: 1, scope: !5538, file: !155, line: 478, type: !282)
!5546 = !DILocation(line: 478, column: 51, scope: !5538, inlinedAt: !5539)
!5547 = !DILocalVariable(name: "flags", arg: 2, scope: !5538, file: !155, line: 478, type: !708)
!5548 = !DILocation(line: 478, column: 63, scope: !5538, inlinedAt: !5539)
!5549 = !DILocalVariable(name: "order", scope: !5538, file: !155, line: 480, type: !7)
!5550 = !DILocation(line: 480, column: 15, scope: !5538, inlinedAt: !5539)
!5551 = !DILocalVariable(name: "size", arg: 1, scope: !5512, file: !155, line: 538, type: !282)
!5552 = !DILocation(line: 538, column: 45, scope: !5512, inlinedAt: !5513)
!5553 = !DILocalVariable(name: "flags", arg: 2, scope: !5512, file: !155, line: 538, type: !708)
!5554 = !DILocation(line: 538, column: 57, scope: !5512, inlinedAt: !5513)
!5555 = !DILocalVariable(name: "index", scope: !5510, file: !155, line: 542, type: !7)
!5556 = !DILocation(line: 542, column: 16, scope: !5510, inlinedAt: !5513)
!5557 = !DILocalVariable(name: "size", arg: 1, scope: !5501, file: !155, line: 662, type: !282)
!5558 = !DILocation(line: 662, column: 36, scope: !5501)
!5559 = !DILocalVariable(name: "flags", arg: 2, scope: !5501, file: !155, line: 662, type: !708)
!5560 = !DILocation(line: 662, column: 48, scope: !5501)
!5561 = !DILocation(line: 664, column: 17, scope: !5501)
!5562 = !DILocation(line: 664, column: 23, scope: !5501)
!5563 = !DILocation(line: 664, column: 29, scope: !5501)
!5564 = !DILocation(line: 540, column: 27, scope: !5511, inlinedAt: !5513)
!5565 = !DILocation(line: 540, column: 6, scope: !5511, inlinedAt: !5513)
!5566 = !DILocation(line: 540, column: 6, scope: !5512, inlinedAt: !5513)
!5567 = !DILocation(line: 544, column: 7, scope: !5540, inlinedAt: !5513)
!5568 = !DILocation(line: 544, column: 12, scope: !5540, inlinedAt: !5513)
!5569 = !DILocation(line: 544, column: 7, scope: !5510, inlinedAt: !5513)
!5570 = !DILocation(line: 545, column: 25, scope: !5540, inlinedAt: !5513)
!5571 = !DILocation(line: 545, column: 31, scope: !5540, inlinedAt: !5513)
!5572 = !DILocation(line: 480, column: 33, scope: !5538, inlinedAt: !5539)
!5573 = !DILocation(line: 480, column: 23, scope: !5538, inlinedAt: !5539)
!5574 = !DILocation(line: 481, column: 29, scope: !5538, inlinedAt: !5539)
!5575 = !DILocation(line: 481, column: 35, scope: !5538, inlinedAt: !5539)
!5576 = !DILocation(line: 481, column: 42, scope: !5538, inlinedAt: !5539)
!5577 = !DILocation(line: 474, column: 23, scope: !5533, inlinedAt: !5537)
!5578 = !DILocation(line: 474, column: 29, scope: !5533, inlinedAt: !5537)
!5579 = !DILocation(line: 474, column: 36, scope: !5533, inlinedAt: !5537)
!5580 = !DILocation(line: 474, column: 9, scope: !5533, inlinedAt: !5537)
!5581 = !DILocation(line: 545, column: 4, scope: !5540, inlinedAt: !5513)
!5582 = !DILocation(line: 547, column: 25, scope: !5510, inlinedAt: !5513)
!5583 = !DILocation(line: 348, column: 7, scope: !5584, inlinedAt: !5531)
!5584 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 348, column: 6)
!5585 = !DILocation(line: 348, column: 6, scope: !5527, inlinedAt: !5531)
!5586 = !DILocation(line: 349, column: 3, scope: !5584, inlinedAt: !5531)
!5587 = !DILocation(line: 351, column: 6, scope: !5588, inlinedAt: !5531)
!5588 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 351, column: 6)
!5589 = !DILocation(line: 351, column: 11, scope: !5588, inlinedAt: !5531)
!5590 = !DILocation(line: 351, column: 6, scope: !5527, inlinedAt: !5531)
!5591 = !DILocation(line: 352, column: 3, scope: !5588, inlinedAt: !5531)
!5592 = !DILocation(line: 354, column: 32, scope: !5593, inlinedAt: !5531)
!5593 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 354, column: 6)
!5594 = !DILocation(line: 354, column: 37, scope: !5593, inlinedAt: !5531)
!5595 = !DILocation(line: 354, column: 42, scope: !5593, inlinedAt: !5531)
!5596 = !DILocation(line: 354, column: 45, scope: !5593, inlinedAt: !5531)
!5597 = !DILocation(line: 354, column: 50, scope: !5593, inlinedAt: !5531)
!5598 = !DILocation(line: 354, column: 6, scope: !5527, inlinedAt: !5531)
!5599 = !DILocation(line: 355, column: 3, scope: !5593, inlinedAt: !5531)
!5600 = !DILocation(line: 356, column: 32, scope: !5601, inlinedAt: !5531)
!5601 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 356, column: 6)
!5602 = !DILocation(line: 356, column: 37, scope: !5601, inlinedAt: !5531)
!5603 = !DILocation(line: 356, column: 43, scope: !5601, inlinedAt: !5531)
!5604 = !DILocation(line: 356, column: 46, scope: !5601, inlinedAt: !5531)
!5605 = !DILocation(line: 356, column: 51, scope: !5601, inlinedAt: !5531)
!5606 = !DILocation(line: 356, column: 6, scope: !5527, inlinedAt: !5531)
!5607 = !DILocation(line: 357, column: 3, scope: !5601, inlinedAt: !5531)
!5608 = !DILocation(line: 358, column: 6, scope: !5609, inlinedAt: !5531)
!5609 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 358, column: 6)
!5610 = !DILocation(line: 358, column: 11, scope: !5609, inlinedAt: !5531)
!5611 = !DILocation(line: 358, column: 6, scope: !5527, inlinedAt: !5531)
!5612 = !DILocation(line: 358, column: 26, scope: !5609, inlinedAt: !5531)
!5613 = !DILocation(line: 359, column: 6, scope: !5614, inlinedAt: !5531)
!5614 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 359, column: 6)
!5615 = !DILocation(line: 359, column: 11, scope: !5614, inlinedAt: !5531)
!5616 = !DILocation(line: 359, column: 6, scope: !5527, inlinedAt: !5531)
!5617 = !DILocation(line: 359, column: 26, scope: !5614, inlinedAt: !5531)
!5618 = !DILocation(line: 360, column: 6, scope: !5619, inlinedAt: !5531)
!5619 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 360, column: 6)
!5620 = !DILocation(line: 360, column: 11, scope: !5619, inlinedAt: !5531)
!5621 = !DILocation(line: 360, column: 6, scope: !5527, inlinedAt: !5531)
!5622 = !DILocation(line: 360, column: 26, scope: !5619, inlinedAt: !5531)
!5623 = !DILocation(line: 361, column: 6, scope: !5624, inlinedAt: !5531)
!5624 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 361, column: 6)
!5625 = !DILocation(line: 361, column: 11, scope: !5624, inlinedAt: !5531)
!5626 = !DILocation(line: 361, column: 6, scope: !5527, inlinedAt: !5531)
!5627 = !DILocation(line: 361, column: 26, scope: !5624, inlinedAt: !5531)
!5628 = !DILocation(line: 362, column: 6, scope: !5629, inlinedAt: !5531)
!5629 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 362, column: 6)
!5630 = !DILocation(line: 362, column: 11, scope: !5629, inlinedAt: !5531)
!5631 = !DILocation(line: 362, column: 6, scope: !5527, inlinedAt: !5531)
!5632 = !DILocation(line: 362, column: 26, scope: !5629, inlinedAt: !5531)
!5633 = !DILocation(line: 363, column: 6, scope: !5634, inlinedAt: !5531)
!5634 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 363, column: 6)
!5635 = !DILocation(line: 363, column: 11, scope: !5634, inlinedAt: !5531)
!5636 = !DILocation(line: 363, column: 6, scope: !5527, inlinedAt: !5531)
!5637 = !DILocation(line: 363, column: 26, scope: !5634, inlinedAt: !5531)
!5638 = !DILocation(line: 364, column: 6, scope: !5639, inlinedAt: !5531)
!5639 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 364, column: 6)
!5640 = !DILocation(line: 364, column: 11, scope: !5639, inlinedAt: !5531)
!5641 = !DILocation(line: 364, column: 6, scope: !5527, inlinedAt: !5531)
!5642 = !DILocation(line: 364, column: 26, scope: !5639, inlinedAt: !5531)
!5643 = !DILocation(line: 365, column: 6, scope: !5644, inlinedAt: !5531)
!5644 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 365, column: 6)
!5645 = !DILocation(line: 365, column: 11, scope: !5644, inlinedAt: !5531)
!5646 = !DILocation(line: 365, column: 6, scope: !5527, inlinedAt: !5531)
!5647 = !DILocation(line: 365, column: 26, scope: !5644, inlinedAt: !5531)
!5648 = !DILocation(line: 366, column: 6, scope: !5649, inlinedAt: !5531)
!5649 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 366, column: 6)
!5650 = !DILocation(line: 366, column: 11, scope: !5649, inlinedAt: !5531)
!5651 = !DILocation(line: 366, column: 6, scope: !5527, inlinedAt: !5531)
!5652 = !DILocation(line: 366, column: 26, scope: !5649, inlinedAt: !5531)
!5653 = !DILocation(line: 367, column: 6, scope: !5654, inlinedAt: !5531)
!5654 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 367, column: 6)
!5655 = !DILocation(line: 367, column: 11, scope: !5654, inlinedAt: !5531)
!5656 = !DILocation(line: 367, column: 6, scope: !5527, inlinedAt: !5531)
!5657 = !DILocation(line: 367, column: 26, scope: !5654, inlinedAt: !5531)
!5658 = !DILocation(line: 368, column: 6, scope: !5659, inlinedAt: !5531)
!5659 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 368, column: 6)
!5660 = !DILocation(line: 368, column: 11, scope: !5659, inlinedAt: !5531)
!5661 = !DILocation(line: 368, column: 6, scope: !5527, inlinedAt: !5531)
!5662 = !DILocation(line: 368, column: 26, scope: !5659, inlinedAt: !5531)
!5663 = !DILocation(line: 369, column: 6, scope: !5664, inlinedAt: !5531)
!5664 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 369, column: 6)
!5665 = !DILocation(line: 369, column: 11, scope: !5664, inlinedAt: !5531)
!5666 = !DILocation(line: 369, column: 6, scope: !5527, inlinedAt: !5531)
!5667 = !DILocation(line: 369, column: 26, scope: !5664, inlinedAt: !5531)
!5668 = !DILocation(line: 370, column: 6, scope: !5669, inlinedAt: !5531)
!5669 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 370, column: 6)
!5670 = !DILocation(line: 370, column: 11, scope: !5669, inlinedAt: !5531)
!5671 = !DILocation(line: 370, column: 6, scope: !5527, inlinedAt: !5531)
!5672 = !DILocation(line: 370, column: 26, scope: !5669, inlinedAt: !5531)
!5673 = !DILocation(line: 371, column: 6, scope: !5674, inlinedAt: !5531)
!5674 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 371, column: 6)
!5675 = !DILocation(line: 371, column: 11, scope: !5674, inlinedAt: !5531)
!5676 = !DILocation(line: 371, column: 6, scope: !5527, inlinedAt: !5531)
!5677 = !DILocation(line: 371, column: 26, scope: !5674, inlinedAt: !5531)
!5678 = !DILocation(line: 372, column: 6, scope: !5679, inlinedAt: !5531)
!5679 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 372, column: 6)
!5680 = !DILocation(line: 372, column: 11, scope: !5679, inlinedAt: !5531)
!5681 = !DILocation(line: 372, column: 6, scope: !5527, inlinedAt: !5531)
!5682 = !DILocation(line: 372, column: 26, scope: !5679, inlinedAt: !5531)
!5683 = !DILocation(line: 373, column: 6, scope: !5684, inlinedAt: !5531)
!5684 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 373, column: 6)
!5685 = !DILocation(line: 373, column: 11, scope: !5684, inlinedAt: !5531)
!5686 = !DILocation(line: 373, column: 6, scope: !5527, inlinedAt: !5531)
!5687 = !DILocation(line: 373, column: 26, scope: !5684, inlinedAt: !5531)
!5688 = !DILocation(line: 374, column: 6, scope: !5689, inlinedAt: !5531)
!5689 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 374, column: 6)
!5690 = !DILocation(line: 374, column: 11, scope: !5689, inlinedAt: !5531)
!5691 = !DILocation(line: 374, column: 6, scope: !5527, inlinedAt: !5531)
!5692 = !DILocation(line: 374, column: 26, scope: !5689, inlinedAt: !5531)
!5693 = !DILocation(line: 375, column: 6, scope: !5694, inlinedAt: !5531)
!5694 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 375, column: 6)
!5695 = !DILocation(line: 375, column: 11, scope: !5694, inlinedAt: !5531)
!5696 = !DILocation(line: 375, column: 6, scope: !5527, inlinedAt: !5531)
!5697 = !DILocation(line: 375, column: 27, scope: !5694, inlinedAt: !5531)
!5698 = !DILocation(line: 376, column: 6, scope: !5699, inlinedAt: !5531)
!5699 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 376, column: 6)
!5700 = !DILocation(line: 376, column: 11, scope: !5699, inlinedAt: !5531)
!5701 = !DILocation(line: 376, column: 6, scope: !5527, inlinedAt: !5531)
!5702 = !DILocation(line: 376, column: 32, scope: !5699, inlinedAt: !5531)
!5703 = !DILocation(line: 377, column: 6, scope: !5704, inlinedAt: !5531)
!5704 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 377, column: 6)
!5705 = !DILocation(line: 377, column: 11, scope: !5704, inlinedAt: !5531)
!5706 = !DILocation(line: 377, column: 6, scope: !5527, inlinedAt: !5531)
!5707 = !DILocation(line: 377, column: 32, scope: !5704, inlinedAt: !5531)
!5708 = !DILocation(line: 378, column: 6, scope: !5709, inlinedAt: !5531)
!5709 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 378, column: 6)
!5710 = !DILocation(line: 378, column: 11, scope: !5709, inlinedAt: !5531)
!5711 = !DILocation(line: 378, column: 6, scope: !5527, inlinedAt: !5531)
!5712 = !DILocation(line: 378, column: 32, scope: !5709, inlinedAt: !5531)
!5713 = !DILocation(line: 379, column: 6, scope: !5714, inlinedAt: !5531)
!5714 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 379, column: 6)
!5715 = !DILocation(line: 379, column: 11, scope: !5714, inlinedAt: !5531)
!5716 = !DILocation(line: 379, column: 6, scope: !5527, inlinedAt: !5531)
!5717 = !DILocation(line: 379, column: 33, scope: !5714, inlinedAt: !5531)
!5718 = !DILocation(line: 380, column: 6, scope: !5719, inlinedAt: !5531)
!5719 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 380, column: 6)
!5720 = !DILocation(line: 380, column: 11, scope: !5719, inlinedAt: !5531)
!5721 = !DILocation(line: 380, column: 6, scope: !5527, inlinedAt: !5531)
!5722 = !DILocation(line: 380, column: 33, scope: !5719, inlinedAt: !5531)
!5723 = !DILocation(line: 381, column: 6, scope: !5724, inlinedAt: !5531)
!5724 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 381, column: 6)
!5725 = !DILocation(line: 381, column: 11, scope: !5724, inlinedAt: !5531)
!5726 = !DILocation(line: 381, column: 6, scope: !5527, inlinedAt: !5531)
!5727 = !DILocation(line: 381, column: 33, scope: !5724, inlinedAt: !5531)
!5728 = !DILocation(line: 382, column: 2, scope: !5729, inlinedAt: !5531)
!5729 = distinct !DILexicalBlock(scope: !5730, file: !155, line: 382, column: 2)
!5730 = distinct !DILexicalBlock(scope: !5527, file: !155, line: 382, column: 2)
!5731 = !{i32 -2143662421, i32 -2143662392, i32 -2143662346, i32 -2143662288, i32 -2143662234, i32 -2143662180, i32 -2143662125, i32 -2143662094}
!5732 = !DILocation(line: 382, column: 2, scope: !5733, inlinedAt: !5531)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !155, line: 382, column: 2)
!5734 = distinct !DILexicalBlock(scope: !5730, file: !155, line: 382, column: 2)
!5735 = !{i32 -2143661651, i32 -2143661644, i32 -2143661590, i32 -2143661559, i32 -2143661529}
!5736 = !DILocation(line: 382, column: 2, scope: !5734, inlinedAt: !5531)
!5737 = !DILocation(line: 386, column: 1, scope: !5527, inlinedAt: !5531)
!5738 = !DILocation(line: 547, column: 9, scope: !5510, inlinedAt: !5513)
!5739 = !DILocation(line: 549, column: 8, scope: !5740, inlinedAt: !5513)
!5740 = distinct !DILexicalBlock(scope: !5510, file: !155, line: 549, column: 7)
!5741 = !DILocation(line: 549, column: 7, scope: !5510, inlinedAt: !5513)
!5742 = !DILocation(line: 550, column: 4, scope: !5740, inlinedAt: !5513)
!5743 = !DILocation(line: 553, column: 33, scope: !5510, inlinedAt: !5513)
!5744 = !DILocation(line: 325, column: 6, scope: !5745, inlinedAt: !5525)
!5745 = distinct !DILexicalBlock(scope: !5521, file: !155, line: 325, column: 6)
!5746 = !DILocation(line: 325, column: 6, scope: !5521, inlinedAt: !5525)
!5747 = !DILocation(line: 326, column: 3, scope: !5745, inlinedAt: !5525)
!5748 = !DILocation(line: 332, column: 9, scope: !5521, inlinedAt: !5525)
!5749 = !DILocation(line: 332, column: 15, scope: !5521, inlinedAt: !5525)
!5750 = !DILocation(line: 332, column: 2, scope: !5521, inlinedAt: !5525)
!5751 = !DILocation(line: 336, column: 1, scope: !5521, inlinedAt: !5525)
!5752 = !DILocation(line: 553, column: 5, scope: !5510, inlinedAt: !5513)
!5753 = !DILocation(line: 553, column: 41, scope: !5510, inlinedAt: !5513)
!5754 = !DILocation(line: 554, column: 5, scope: !5510, inlinedAt: !5513)
!5755 = !DILocation(line: 554, column: 12, scope: !5510, inlinedAt: !5513)
!5756 = !DILocation(line: 448, column: 31, scope: !5505, inlinedAt: !5509)
!5757 = !DILocation(line: 448, column: 34, scope: !5505, inlinedAt: !5509)
!5758 = !DILocation(line: 448, column: 14, scope: !5505, inlinedAt: !5509)
!5759 = !DILocation(line: 450, column: 22, scope: !5505, inlinedAt: !5509)
!5760 = !DILocation(line: 450, column: 25, scope: !5505, inlinedAt: !5509)
!5761 = !DILocation(line: 450, column: 30, scope: !5505, inlinedAt: !5509)
!5762 = !DILocation(line: 450, column: 36, scope: !5505, inlinedAt: !5509)
!5763 = !DILocation(line: 450, column: 8, scope: !5505, inlinedAt: !5509)
!5764 = !DILocation(line: 450, column: 6, scope: !5505, inlinedAt: !5509)
!5765 = !DILocation(line: 451, column: 9, scope: !5505, inlinedAt: !5509)
!5766 = !DILocation(line: 552, column: 3, scope: !5510, inlinedAt: !5513)
!5767 = !DILocation(line: 557, column: 19, scope: !5512, inlinedAt: !5513)
!5768 = !DILocation(line: 557, column: 25, scope: !5512, inlinedAt: !5513)
!5769 = !DILocation(line: 557, column: 9, scope: !5512, inlinedAt: !5513)
!5770 = !DILocation(line: 557, column: 2, scope: !5512, inlinedAt: !5513)
!5771 = !DILocation(line: 558, column: 1, scope: !5512, inlinedAt: !5513)
!5772 = !DILocation(line: 664, column: 2, scope: !5501)
!5773 = distinct !DISubprogram(name: "ERR_PTR", scope: !5774, file: !5774, line: 24, type: !5775, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5774 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!5775 = !DISubroutineType(types: !5776)
!5776 = !{!162, !270}
!5777 = !DILocalVariable(name: "error", arg: 1, scope: !5773, file: !5774, line: 24, type: !270)
!5778 = !DILocation(line: 24, column: 48, scope: !5773)
!5779 = !DILocation(line: 26, column: 18, scope: !5773)
!5780 = !DILocation(line: 26, column: 9, scope: !5773)
!5781 = !DILocation(line: 26, column: 2, scope: !5773)
!5782 = distinct !DISubprogram(name: "iommu_group_create_file", scope: !3, file: !3, line: 362, type: !5783, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5783 = !DISubroutineType(types: !5784)
!5784 = !{!135, !3650, !4486}
!5785 = !DILocalVariable(name: "group", arg: 1, scope: !5782, file: !3, line: 362, type: !3650)
!5786 = !DILocation(line: 362, column: 56, scope: !5782)
!5787 = !DILocalVariable(name: "attr", arg: 2, scope: !5782, file: !3, line: 363, type: !4486)
!5788 = !DILocation(line: 363, column: 38, scope: !5782)
!5789 = !DILocation(line: 365, column: 28, scope: !5782)
!5790 = !DILocation(line: 365, column: 35, scope: !5782)
!5791 = !DILocation(line: 365, column: 42, scope: !5782)
!5792 = !DILocation(line: 365, column: 48, scope: !5782)
!5793 = !DILocation(line: 365, column: 9, scope: !5782)
!5794 = !DILocation(line: 365, column: 2, scope: !5782)
!5795 = distinct !DISubprogram(name: "iommu_group_get_by_id", scope: !3, file: !3, line: 624, type: !5796, scopeLine: 625, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!3650, !135}
!5798 = !DILocalVariable(name: "id", arg: 1, scope: !5795, file: !3, line: 624, type: !135)
!5799 = !DILocation(line: 624, column: 47, scope: !5795)
!5800 = !DILocalVariable(name: "group_kobj", scope: !5795, file: !3, line: 626, type: !187)
!5801 = !DILocation(line: 626, column: 18, scope: !5795)
!5802 = !DILocalVariable(name: "group", scope: !5795, file: !3, line: 627, type: !3650)
!5803 = !DILocation(line: 627, column: 22, scope: !5795)
!5804 = !DILocalVariable(name: "name", scope: !5795, file: !3, line: 628, type: !182)
!5805 = !DILocation(line: 628, column: 14, scope: !5795)
!5806 = !DILocation(line: 630, column: 7, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 630, column: 6)
!5808 = !DILocation(line: 630, column: 6, scope: !5795)
!5809 = !DILocation(line: 631, column: 3, scope: !5807)
!5810 = !DILocation(line: 633, column: 37, scope: !5795)
!5811 = !DILocation(line: 633, column: 9, scope: !5795)
!5812 = !DILocation(line: 633, column: 7, scope: !5795)
!5813 = !DILocation(line: 634, column: 7, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 634, column: 6)
!5815 = !DILocation(line: 634, column: 6, scope: !5795)
!5816 = !DILocation(line: 635, column: 3, scope: !5814)
!5817 = !DILocation(line: 637, column: 29, scope: !5795)
!5818 = !DILocation(line: 637, column: 47, scope: !5795)
!5819 = !DILocation(line: 637, column: 15, scope: !5795)
!5820 = !DILocation(line: 637, column: 13, scope: !5795)
!5821 = !DILocation(line: 638, column: 8, scope: !5795)
!5822 = !DILocation(line: 638, column: 2, scope: !5795)
!5823 = !DILocation(line: 640, column: 7, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 640, column: 6)
!5825 = !DILocation(line: 640, column: 6, scope: !5795)
!5826 = !DILocation(line: 641, column: 3, scope: !5824)
!5827 = !DILocalVariable(name: "__mptr", scope: !5828, file: !3, line: 643, type: !162)
!5828 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 643, column: 10)
!5829 = !DILocation(line: 643, column: 10, scope: !5828)
!5830 = !DILocation(line: 643, column: 10, scope: !5831)
!5831 = distinct !DILexicalBlock(scope: !5828, file: !3, line: 643, column: 10)
!5832 = !DILocation(line: 643, column: 8, scope: !5795)
!5833 = !DILocation(line: 644, column: 2, scope: !5795)
!5834 = !DILocation(line: 644, column: 2, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5836, file: !3, line: 644, column: 2)
!5836 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 644, column: 2)
!5837 = !DILocation(line: 644, column: 2, scope: !5836)
!5838 = !DILocation(line: 644, column: 2, scope: !5839)
!5839 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 644, column: 2)
!5840 = !DILocation(line: 644, column: 2, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 644, column: 2)
!5842 = !DILocation(line: 644, column: 2, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 644, column: 2)
!5844 = !{i32 -2141378335, i32 -2141378306, i32 -2141378260, i32 -2141378202, i32 -2141378148, i32 -2141378094, i32 -2141378039, i32 -2141378008}
!5845 = !DILocation(line: 644, column: 2, scope: !5846)
!5846 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 644, column: 2)
!5847 = distinct !DILexicalBlock(scope: !5839, file: !3, line: 644, column: 2)
!5848 = !{i32 -2141377564, i32 -2141377557, i32 -2141377503, i32 -2141377472, i32 -2141377442}
!5849 = !DILocation(line: 644, column: 2, scope: !5847)
!5850 = !DILocation(line: 646, column: 14, scope: !5795)
!5851 = !DILocation(line: 646, column: 21, scope: !5795)
!5852 = !DILocation(line: 646, column: 2, scope: !5795)
!5853 = !DILocation(line: 647, column: 15, scope: !5795)
!5854 = !DILocation(line: 647, column: 22, scope: !5795)
!5855 = !DILocation(line: 647, column: 2, scope: !5795)
!5856 = !DILocation(line: 649, column: 9, scope: !5795)
!5857 = !DILocation(line: 649, column: 2, scope: !5795)
!5858 = !DILocation(line: 650, column: 1, scope: !5795)
!5859 = distinct !DISubprogram(name: "iommu_group_get_iommudata", scope: !3, file: !3, line: 661, type: !5860, scopeLine: 662, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5860 = !DISubroutineType(types: !5861)
!5861 = !{!162, !3650}
!5862 = !DILocalVariable(name: "group", arg: 1, scope: !5859, file: !3, line: 661, type: !3650)
!5863 = !DILocation(line: 661, column: 53, scope: !5859)
!5864 = !DILocation(line: 663, column: 9, scope: !5859)
!5865 = !DILocation(line: 663, column: 16, scope: !5859)
!5866 = !DILocation(line: 663, column: 2, scope: !5859)
!5867 = distinct !DISubprogram(name: "iommu_group_set_iommudata", scope: !3, file: !3, line: 677, type: !5868, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{null, !3650, !162, !429}
!5870 = !DILocalVariable(name: "group", arg: 1, scope: !5867, file: !3, line: 677, type: !3650)
!5871 = !DILocation(line: 677, column: 52, scope: !5867)
!5872 = !DILocalVariable(name: "iommu_data", arg: 2, scope: !5867, file: !3, line: 677, type: !162)
!5873 = !DILocation(line: 677, column: 65, scope: !5867)
!5874 = !DILocalVariable(name: "release", arg: 3, scope: !5867, file: !3, line: 678, type: !429)
!5875 = !DILocation(line: 678, column: 18, scope: !5867)
!5876 = !DILocation(line: 680, column: 22, scope: !5867)
!5877 = !DILocation(line: 680, column: 2, scope: !5867)
!5878 = !DILocation(line: 680, column: 9, scope: !5867)
!5879 = !DILocation(line: 680, column: 20, scope: !5867)
!5880 = !DILocation(line: 681, column: 30, scope: !5867)
!5881 = !DILocation(line: 681, column: 2, scope: !5867)
!5882 = !DILocation(line: 681, column: 9, scope: !5867)
!5883 = !DILocation(line: 681, column: 28, scope: !5867)
!5884 = !DILocation(line: 682, column: 1, scope: !5867)
!5885 = distinct !DISubprogram(name: "iommu_group_set_name", scope: !3, file: !3, line: 693, type: !5886, scopeLine: 694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5886 = !DISubroutineType(types: !5887)
!5887 = !{!135, !3650, !182}
!5888 = !DILocalVariable(name: "group", arg: 1, scope: !5885, file: !3, line: 693, type: !3650)
!5889 = !DILocation(line: 693, column: 46, scope: !5885)
!5890 = !DILocalVariable(name: "name", arg: 2, scope: !5885, file: !3, line: 693, type: !182)
!5891 = !DILocation(line: 693, column: 65, scope: !5885)
!5892 = !DILocalVariable(name: "ret", scope: !5885, file: !3, line: 695, type: !135)
!5893 = !DILocation(line: 695, column: 6, scope: !5885)
!5894 = !DILocation(line: 697, column: 6, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 697, column: 6)
!5896 = !DILocation(line: 697, column: 13, scope: !5895)
!5897 = !DILocation(line: 697, column: 6, scope: !5885)
!5898 = !DILocation(line: 698, column: 27, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 697, column: 19)
!5900 = !DILocation(line: 698, column: 3, scope: !5899)
!5901 = !DILocation(line: 699, column: 9, scope: !5899)
!5902 = !DILocation(line: 699, column: 16, scope: !5899)
!5903 = !DILocation(line: 699, column: 3, scope: !5899)
!5904 = !DILocation(line: 700, column: 3, scope: !5899)
!5905 = !DILocation(line: 700, column: 10, scope: !5899)
!5906 = !DILocation(line: 700, column: 15, scope: !5899)
!5907 = !DILocation(line: 701, column: 8, scope: !5908)
!5908 = distinct !DILexicalBlock(scope: !5899, file: !3, line: 701, column: 7)
!5909 = !DILocation(line: 701, column: 7, scope: !5899)
!5910 = !DILocation(line: 702, column: 4, scope: !5908)
!5911 = !DILocation(line: 703, column: 2, scope: !5899)
!5912 = !DILocation(line: 705, column: 24, scope: !5885)
!5913 = !DILocation(line: 705, column: 16, scope: !5885)
!5914 = !DILocation(line: 705, column: 2, scope: !5885)
!5915 = !DILocation(line: 705, column: 9, scope: !5885)
!5916 = !DILocation(line: 705, column: 14, scope: !5885)
!5917 = !DILocation(line: 706, column: 7, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 706, column: 6)
!5919 = !DILocation(line: 706, column: 14, scope: !5918)
!5920 = !DILocation(line: 706, column: 6, scope: !5885)
!5921 = !DILocation(line: 707, column: 3, scope: !5918)
!5922 = !DILocation(line: 709, column: 32, scope: !5885)
!5923 = !DILocation(line: 709, column: 8, scope: !5885)
!5924 = !DILocation(line: 709, column: 6, scope: !5885)
!5925 = !DILocation(line: 710, column: 6, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 710, column: 6)
!5927 = !DILocation(line: 710, column: 6, scope: !5885)
!5928 = !DILocation(line: 711, column: 9, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5926, file: !3, line: 710, column: 11)
!5930 = !DILocation(line: 711, column: 16, scope: !5929)
!5931 = !DILocation(line: 711, column: 3, scope: !5929)
!5932 = !DILocation(line: 712, column: 3, scope: !5929)
!5933 = !DILocation(line: 712, column: 10, scope: !5929)
!5934 = !DILocation(line: 712, column: 15, scope: !5929)
!5935 = !DILocation(line: 713, column: 10, scope: !5929)
!5936 = !DILocation(line: 713, column: 3, scope: !5929)
!5937 = !DILocation(line: 716, column: 2, scope: !5885)
!5938 = !DILocation(line: 717, column: 1, scope: !5885)
!5939 = distinct !DISubprogram(name: "iommu_group_remove_file", scope: !3, file: !3, line: 368, type: !5940, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5940 = !DISubroutineType(types: !5941)
!5941 = !{null, !3650, !4486}
!5942 = !DILocalVariable(name: "group", arg: 1, scope: !5939, file: !3, line: 368, type: !3650)
!5943 = !DILocation(line: 368, column: 57, scope: !5939)
!5944 = !DILocalVariable(name: "attr", arg: 2, scope: !5939, file: !3, line: 369, type: !4486)
!5945 = !DILocation(line: 369, column: 39, scope: !5939)
!5946 = !DILocation(line: 371, column: 21, scope: !5939)
!5947 = !DILocation(line: 371, column: 28, scope: !5939)
!5948 = !DILocation(line: 371, column: 35, scope: !5939)
!5949 = !DILocation(line: 371, column: 41, scope: !5939)
!5950 = !DILocation(line: 371, column: 2, scope: !5939)
!5951 = !DILocation(line: 372, column: 1, scope: !5939)
!5952 = distinct !DISubprogram(name: "iommu_group_add_device", scope: !3, file: !3, line: 792, type: !4872, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!5953 = !DILocalVariable(name: "group", arg: 1, scope: !5952, file: !3, line: 792, type: !3650)
!5954 = !DILocation(line: 792, column: 48, scope: !5952)
!5955 = !DILocalVariable(name: "dev", arg: 2, scope: !5952, file: !3, line: 792, type: !174)
!5956 = !DILocation(line: 792, column: 70, scope: !5952)
!5957 = !DILocalVariable(name: "ret", scope: !5952, file: !3, line: 794, type: !135)
!5958 = !DILocation(line: 794, column: 6, scope: !5952)
!5959 = !DILocalVariable(name: "i", scope: !5952, file: !3, line: 794, type: !135)
!5960 = !DILocation(line: 794, column: 11, scope: !5952)
!5961 = !DILocalVariable(name: "device", scope: !5952, file: !3, line: 795, type: !163)
!5962 = !DILocation(line: 795, column: 23, scope: !5952)
!5963 = !DILocation(line: 797, column: 11, scope: !5952)
!5964 = !DILocation(line: 797, column: 9, scope: !5952)
!5965 = !DILocation(line: 798, column: 7, scope: !5966)
!5966 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 798, column: 6)
!5967 = !DILocation(line: 798, column: 6, scope: !5952)
!5968 = !DILocation(line: 799, column: 3, scope: !5966)
!5969 = !DILocation(line: 801, column: 16, scope: !5952)
!5970 = !DILocation(line: 801, column: 2, scope: !5952)
!5971 = !DILocation(line: 801, column: 10, scope: !5952)
!5972 = !DILocation(line: 801, column: 14, scope: !5952)
!5973 = !DILocation(line: 803, column: 27, scope: !5952)
!5974 = !DILocation(line: 803, column: 32, scope: !5952)
!5975 = !DILocation(line: 803, column: 39, scope: !5952)
!5976 = !DILocation(line: 803, column: 46, scope: !5952)
!5977 = !DILocation(line: 803, column: 8, scope: !5952)
!5978 = !DILocation(line: 803, column: 6, scope: !5952)
!5979 = !DILocation(line: 804, column: 6, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 804, column: 6)
!5981 = !DILocation(line: 804, column: 6, scope: !5952)
!5982 = !DILocation(line: 805, column: 3, scope: !5980)
!5983 = !DILocation(line: 807, column: 59, scope: !5952)
!5984 = !DILocation(line: 807, column: 64, scope: !5952)
!5985 = !DILocation(line: 807, column: 45, scope: !5952)
!5986 = !DILocation(line: 807, column: 17, scope: !5952)
!5987 = !DILocation(line: 807, column: 2, scope: !5952)
!5988 = !DILocation(line: 807, column: 10, scope: !5952)
!5989 = !DILocation(line: 807, column: 15, scope: !5952)
!5990 = !DILabel(scope: !5952, name: "rename", file: !3, line: 808)
!5991 = !DILocation(line: 808, column: 1, scope: !5952)
!5992 = !DILocation(line: 809, column: 7, scope: !5993)
!5993 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 809, column: 6)
!5994 = !DILocation(line: 809, column: 15, scope: !5993)
!5995 = !DILocation(line: 809, column: 6, scope: !5952)
!5996 = !DILocation(line: 810, column: 7, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5993, file: !3, line: 809, column: 21)
!5998 = !DILocation(line: 811, column: 3, scope: !5997)
!5999 = !DILocation(line: 814, column: 33, scope: !5952)
!6000 = !DILocation(line: 814, column: 40, scope: !5952)
!6001 = !DILocation(line: 815, column: 13, scope: !5952)
!6002 = !DILocation(line: 815, column: 18, scope: !5952)
!6003 = !DILocation(line: 815, column: 24, scope: !5952)
!6004 = !DILocation(line: 815, column: 32, scope: !5952)
!6005 = !DILocation(line: 814, column: 8, scope: !5952)
!6006 = !DILocation(line: 814, column: 6, scope: !5952)
!6007 = !DILocation(line: 816, column: 6, scope: !6008)
!6008 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 816, column: 6)
!6009 = !DILocation(line: 816, column: 6, scope: !5952)
!6010 = !DILocation(line: 817, column: 7, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !6012, file: !3, line: 817, column: 7)
!6012 = distinct !DILexicalBlock(scope: !6008, file: !3, line: 816, column: 11)
!6013 = !DILocation(line: 817, column: 11, scope: !6011)
!6014 = !DILocation(line: 817, column: 22, scope: !6011)
!6015 = !DILocation(line: 817, column: 25, scope: !6011)
!6016 = !DILocation(line: 817, column: 27, scope: !6011)
!6017 = !DILocation(line: 817, column: 7, scope: !6012)
!6018 = !DILocation(line: 822, column: 10, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 817, column: 33)
!6020 = !DILocation(line: 822, column: 18, scope: !6019)
!6021 = !DILocation(line: 822, column: 4, scope: !6019)
!6022 = !DILocation(line: 824, column: 22, scope: !6019)
!6023 = !DILocation(line: 824, column: 27, scope: !6019)
!6024 = !DILocation(line: 824, column: 8, scope: !6019)
!6025 = !DILocation(line: 824, column: 35, scope: !6019)
!6026 = !DILocation(line: 823, column: 19, scope: !6019)
!6027 = !DILocation(line: 823, column: 4, scope: !6019)
!6028 = !DILocation(line: 823, column: 12, scope: !6019)
!6029 = !DILocation(line: 823, column: 17, scope: !6019)
!6030 = !DILocation(line: 825, column: 4, scope: !6019)
!6031 = !DILocation(line: 827, column: 3, scope: !6012)
!6032 = !DILocation(line: 830, column: 14, scope: !5952)
!6033 = !DILocation(line: 830, column: 21, scope: !5952)
!6034 = !DILocation(line: 830, column: 2, scope: !5952)
!6035 = !DILocation(line: 832, column: 21, scope: !5952)
!6036 = !DILocation(line: 832, column: 2, scope: !5952)
!6037 = !DILocation(line: 832, column: 7, scope: !5952)
!6038 = !DILocation(line: 832, column: 19, scope: !5952)
!6039 = !DILocation(line: 834, column: 14, scope: !5952)
!6040 = !DILocation(line: 834, column: 21, scope: !5952)
!6041 = !DILocation(line: 834, column: 2, scope: !5952)
!6042 = !DILocation(line: 835, column: 17, scope: !5952)
!6043 = !DILocation(line: 835, column: 25, scope: !5952)
!6044 = !DILocation(line: 835, column: 32, scope: !5952)
!6045 = !DILocation(line: 835, column: 39, scope: !5952)
!6046 = !DILocation(line: 835, column: 2, scope: !5952)
!6047 = !DILocation(line: 836, column: 6, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 836, column: 6)
!6049 = !DILocation(line: 836, column: 13, scope: !6048)
!6050 = !DILocation(line: 836, column: 21, scope: !6048)
!6051 = !DILocation(line: 836, column: 50, scope: !6048)
!6052 = !DILocation(line: 836, column: 57, scope: !6048)
!6053 = !DILocation(line: 836, column: 65, scope: !6048)
!6054 = !DILocation(line: 836, column: 25, scope: !6048)
!6055 = !DILocation(line: 836, column: 6, scope: !5952)
!6056 = !DILocation(line: 837, column: 31, scope: !6048)
!6057 = !DILocation(line: 837, column: 38, scope: !6048)
!6058 = !DILocation(line: 837, column: 46, scope: !6048)
!6059 = !DILocation(line: 837, column: 9, scope: !6048)
!6060 = !DILocation(line: 837, column: 7, scope: !6048)
!6061 = !DILocation(line: 837, column: 3, scope: !6048)
!6062 = !DILocation(line: 838, column: 16, scope: !5952)
!6063 = !DILocation(line: 838, column: 23, scope: !5952)
!6064 = !DILocation(line: 838, column: 2, scope: !5952)
!6065 = !DILocation(line: 839, column: 6, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !5952, file: !3, line: 839, column: 6)
!6067 = !DILocation(line: 839, column: 6, scope: !5952)
!6068 = !DILocation(line: 840, column: 3, scope: !6066)
!6069 = !DILocation(line: 843, column: 32, scope: !5952)
!6070 = !DILocation(line: 843, column: 39, scope: !5952)
!6071 = !DILocation(line: 844, column: 41, scope: !5952)
!6072 = !DILocation(line: 843, column: 2, scope: !5952)
!6073 = !DILocation(line: 846, column: 28, scope: !5952)
!6074 = !DILocation(line: 846, column: 35, scope: !5952)
!6075 = !DILocation(line: 846, column: 39, scope: !5952)
!6076 = !DILocation(line: 846, column: 2, scope: !5952)
!6077 = !DILocation(line: 848, column: 2, scope: !5952)
!6078 = !DILocation(line: 850, column: 2, scope: !5952)
!6079 = !DILabel(scope: !5952, name: "err_put_group", file: !3, line: 852)
!6080 = !DILocation(line: 852, column: 1, scope: !5952)
!6081 = !DILocation(line: 853, column: 14, scope: !5952)
!6082 = !DILocation(line: 853, column: 21, scope: !5952)
!6083 = !DILocation(line: 853, column: 2, scope: !5952)
!6084 = !DILocation(line: 854, column: 12, scope: !5952)
!6085 = !DILocation(line: 854, column: 20, scope: !5952)
!6086 = !DILocation(line: 854, column: 2, scope: !5952)
!6087 = !DILocation(line: 855, column: 16, scope: !5952)
!6088 = !DILocation(line: 855, column: 23, scope: !5952)
!6089 = !DILocation(line: 855, column: 2, scope: !5952)
!6090 = !DILocation(line: 856, column: 2, scope: !5952)
!6091 = !DILocation(line: 856, column: 7, scope: !5952)
!6092 = !DILocation(line: 856, column: 19, scope: !5952)
!6093 = !DILocation(line: 857, column: 14, scope: !5952)
!6094 = !DILocation(line: 857, column: 21, scope: !5952)
!6095 = !DILocation(line: 857, column: 2, scope: !5952)
!6096 = !DILocation(line: 858, column: 20, scope: !5952)
!6097 = !DILocation(line: 858, column: 27, scope: !5952)
!6098 = !DILocation(line: 858, column: 41, scope: !5952)
!6099 = !DILocation(line: 858, column: 49, scope: !5952)
!6100 = !DILocation(line: 858, column: 2, scope: !5952)
!6101 = !DILabel(scope: !5952, name: "err_free_name", file: !3, line: 859)
!6102 = !DILocation(line: 859, column: 1, scope: !5952)
!6103 = !DILocation(line: 860, column: 8, scope: !5952)
!6104 = !DILocation(line: 860, column: 16, scope: !5952)
!6105 = !DILocation(line: 860, column: 2, scope: !5952)
!6106 = !DILabel(scope: !5952, name: "err_remove_link", file: !3, line: 861)
!6107 = !DILocation(line: 861, column: 1, scope: !5952)
!6108 = !DILocation(line: 862, column: 21, scope: !5952)
!6109 = !DILocation(line: 862, column: 26, scope: !5952)
!6110 = !DILocation(line: 862, column: 2, scope: !5952)
!6111 = !DILabel(scope: !5952, name: "err_free_device", file: !3, line: 863)
!6112 = !DILocation(line: 863, column: 1, scope: !5952)
!6113 = !DILocation(line: 864, column: 8, scope: !5952)
!6114 = !DILocation(line: 864, column: 2, scope: !5952)
!6115 = !DILocation(line: 865, column: 2, scope: !5952)
!6116 = !DILocation(line: 866, column: 9, scope: !5952)
!6117 = !DILocation(line: 866, column: 2, scope: !5952)
!6118 = !DILocation(line: 867, column: 1, scope: !5952)
!6119 = distinct !DISubprogram(name: "kobject_name", scope: !179, file: !179, line: 88, type: !6120, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6120 = !DISubroutineType(types: !6121)
!6121 = !{!182, !6122}
!6122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6123, size: 64)
!6123 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!6124 = !DILocalVariable(name: "kobj", arg: 1, scope: !6119, file: !179, line: 88, type: !6122)
!6125 = !DILocation(line: 88, column: 62, scope: !6119)
!6126 = !DILocation(line: 90, column: 9, scope: !6119)
!6127 = !DILocation(line: 90, column: 15, scope: !6119)
!6128 = !DILocation(line: 90, column: 2, scope: !6119)
!6129 = distinct !DISubprogram(name: "iommu_is_attach_deferred", scope: !3, file: !3, line: 775, type: !3748, scopeLine: 777, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6130 = !DILocalVariable(name: "domain", arg: 1, scope: !6129, file: !3, line: 775, type: !3489)
!6131 = !DILocation(line: 775, column: 59, scope: !6129)
!6132 = !DILocalVariable(name: "dev", arg: 2, scope: !6129, file: !3, line: 776, type: !174)
!6133 = !DILocation(line: 776, column: 25, scope: !6129)
!6134 = !DILocation(line: 778, column: 6, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 778, column: 6)
!6136 = !DILocation(line: 778, column: 14, scope: !6135)
!6137 = !DILocation(line: 778, column: 19, scope: !6135)
!6138 = !DILocation(line: 778, column: 6, scope: !6129)
!6139 = !DILocation(line: 779, column: 10, scope: !6135)
!6140 = !DILocation(line: 779, column: 18, scope: !6135)
!6141 = !DILocation(line: 779, column: 23, scope: !6135)
!6142 = !DILocation(line: 779, column: 42, scope: !6135)
!6143 = !DILocation(line: 779, column: 50, scope: !6135)
!6144 = !DILocation(line: 779, column: 3, scope: !6135)
!6145 = !DILocation(line: 781, column: 2, scope: !6129)
!6146 = !DILocation(line: 782, column: 1, scope: !6129)
!6147 = distinct !DISubprogram(name: "trace_add_device_to_group", scope: !6148, file: !6148, line: 39, type: !6149, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6148 = !DIFile(filename: "./include/trace/events/iommu.h", directory: "/home/lizy2001/genbc/linux")
!6149 = !DISubroutineType(types: !6150)
!6150 = !{null, !135, !174}
!6151 = !DILocalVariable(name: "group_id", arg: 1, scope: !6147, file: !6148, line: 39, type: !135)
!6152 = !DILocation(line: 39, column: 1, scope: !6147)
!6153 = !DILocalVariable(name: "dev", arg: 2, scope: !6147, file: !6148, line: 39, type: !174)
!6154 = distinct !DISubprogram(name: "trace_remove_device_from_group", scope: !6148, file: !6148, line: 47, type: !6149, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6155 = !DILocalVariable(name: "group_id", arg: 1, scope: !6154, file: !6148, line: 47, type: !135)
!6156 = !DILocation(line: 47, column: 1, scope: !6154)
!6157 = !DILocalVariable(name: "dev", arg: 2, scope: !6154, file: !6148, line: 47, type: !174)
!6158 = distinct !DISubprogram(name: "iommu_group_for_each_dev", scope: !3, file: !3, line: 950, type: !6159, scopeLine: 952, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6159 = !DISubroutineType(types: !6160)
!6160 = !{!135, !3650, !162, !6161}
!6161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6162, size: 64)
!6162 = !DISubroutineType(types: !6163)
!6163 = !{!135, !174, !162}
!6164 = !DILocalVariable(name: "group", arg: 1, scope: !6158, file: !3, line: 950, type: !3650)
!6165 = !DILocation(line: 950, column: 50, scope: !6158)
!6166 = !DILocalVariable(name: "data", arg: 2, scope: !6158, file: !3, line: 950, type: !162)
!6167 = !DILocation(line: 950, column: 63, scope: !6158)
!6168 = !DILocalVariable(name: "fn", arg: 3, scope: !6158, file: !3, line: 951, type: !6161)
!6169 = !DILocation(line: 951, column: 15, scope: !6158)
!6170 = !DILocalVariable(name: "ret", scope: !6158, file: !3, line: 953, type: !135)
!6171 = !DILocation(line: 953, column: 6, scope: !6158)
!6172 = !DILocation(line: 955, column: 14, scope: !6158)
!6173 = !DILocation(line: 955, column: 21, scope: !6158)
!6174 = !DILocation(line: 955, column: 2, scope: !6158)
!6175 = !DILocation(line: 956, column: 35, scope: !6158)
!6176 = !DILocation(line: 956, column: 42, scope: !6158)
!6177 = !DILocation(line: 956, column: 48, scope: !6158)
!6178 = !DILocation(line: 956, column: 8, scope: !6158)
!6179 = !DILocation(line: 956, column: 6, scope: !6158)
!6180 = !DILocation(line: 957, column: 16, scope: !6158)
!6181 = !DILocation(line: 957, column: 23, scope: !6158)
!6182 = !DILocation(line: 957, column: 2, scope: !6158)
!6183 = !DILocation(line: 959, column: 9, scope: !6158)
!6184 = !DILocation(line: 959, column: 2, scope: !6158)
!6185 = distinct !DISubprogram(name: "__iommu_group_for_each_dev", scope: !3, file: !3, line: 935, type: !6159, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6186 = !DILocalVariable(name: "group", arg: 1, scope: !6185, file: !3, line: 935, type: !3650)
!6187 = !DILocation(line: 935, column: 59, scope: !6185)
!6188 = !DILocalVariable(name: "data", arg: 2, scope: !6185, file: !3, line: 935, type: !162)
!6189 = !DILocation(line: 935, column: 72, scope: !6185)
!6190 = !DILocalVariable(name: "fn", arg: 3, scope: !6185, file: !3, line: 936, type: !6161)
!6191 = !DILocation(line: 936, column: 17, scope: !6185)
!6192 = !DILocalVariable(name: "device", scope: !6185, file: !3, line: 938, type: !163)
!6193 = !DILocation(line: 938, column: 23, scope: !6185)
!6194 = !DILocalVariable(name: "ret", scope: !6185, file: !3, line: 939, type: !135)
!6195 = !DILocation(line: 939, column: 6, scope: !6185)
!6196 = !DILocalVariable(name: "__mptr", scope: !6197, file: !3, line: 941, type: !162)
!6197 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 941, column: 2)
!6198 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 941, column: 2)
!6199 = !DILocation(line: 941, column: 2, scope: !6197)
!6200 = !DILocation(line: 941, column: 2, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 941, column: 2)
!6202 = !DILocation(line: 941, column: 2, scope: !6198)
!6203 = !DILocation(line: 941, column: 2, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 941, column: 2)
!6205 = !DILocation(line: 942, column: 9, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 941, column: 53)
!6207 = !DILocation(line: 942, column: 12, scope: !6206)
!6208 = !DILocation(line: 942, column: 20, scope: !6206)
!6209 = !DILocation(line: 942, column: 25, scope: !6206)
!6210 = !DILocation(line: 942, column: 7, scope: !6206)
!6211 = !DILocation(line: 943, column: 7, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 943, column: 7)
!6213 = !DILocation(line: 943, column: 7, scope: !6206)
!6214 = !DILocation(line: 944, column: 4, scope: !6212)
!6215 = !DILocation(line: 945, column: 2, scope: !6206)
!6216 = !DILocalVariable(name: "__mptr", scope: !6217, file: !3, line: 941, type: !162)
!6217 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 941, column: 2)
!6218 = !DILocation(line: 941, column: 2, scope: !6217)
!6219 = !DILocation(line: 941, column: 2, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6217, file: !3, line: 941, column: 2)
!6221 = distinct !{!6221, !6202, !6222}
!6222 = !DILocation(line: 945, column: 2, scope: !6198)
!6223 = !DILocation(line: 946, column: 9, scope: !6185)
!6224 = !DILocation(line: 946, column: 2, scope: !6185)
!6225 = distinct !DISubprogram(name: "iommu_group_ref_get", scope: !3, file: !3, line: 989, type: !6226, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{!3650, !3650}
!6228 = !DILocalVariable(name: "group", arg: 1, scope: !6225, file: !3, line: 989, type: !3650)
!6229 = !DILocation(line: 989, column: 61, scope: !6225)
!6230 = !DILocation(line: 991, column: 14, scope: !6225)
!6231 = !DILocation(line: 991, column: 21, scope: !6225)
!6232 = !DILocation(line: 991, column: 2, scope: !6225)
!6233 = !DILocation(line: 992, column: 9, scope: !6225)
!6234 = !DILocation(line: 992, column: 2, scope: !6225)
!6235 = distinct !DISubprogram(name: "iommu_group_register_notifier", scope: !3, file: !3, line: 1019, type: !6236, scopeLine: 1021, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6236 = !DISubroutineType(types: !6237)
!6237 = !{!135, !3650, !3663}
!6238 = !DILocalVariable(name: "group", arg: 1, scope: !6235, file: !3, line: 1019, type: !3650)
!6239 = !DILocation(line: 1019, column: 55, scope: !6235)
!6240 = !DILocalVariable(name: "nb", arg: 2, scope: !6235, file: !3, line: 1020, type: !3663)
!6241 = !DILocation(line: 1020, column: 30, scope: !6235)
!6242 = !DILocation(line: 1022, column: 43, scope: !6235)
!6243 = !DILocation(line: 1022, column: 50, scope: !6235)
!6244 = !DILocation(line: 1022, column: 60, scope: !6235)
!6245 = !DILocation(line: 1022, column: 9, scope: !6235)
!6246 = !DILocation(line: 1022, column: 2, scope: !6235)
!6247 = distinct !DISubprogram(name: "iommu_group_unregister_notifier", scope: !3, file: !3, line: 1033, type: !6236, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6248 = !DILocalVariable(name: "group", arg: 1, scope: !6247, file: !3, line: 1033, type: !3650)
!6249 = !DILocation(line: 1033, column: 57, scope: !6247)
!6250 = !DILocalVariable(name: "nb", arg: 2, scope: !6247, file: !3, line: 1034, type: !3663)
!6251 = !DILocation(line: 1034, column: 32, scope: !6247)
!6252 = !DILocation(line: 1036, column: 45, scope: !6247)
!6253 = !DILocation(line: 1036, column: 52, scope: !6247)
!6254 = !DILocation(line: 1036, column: 62, scope: !6247)
!6255 = !DILocation(line: 1036, column: 9, scope: !6247)
!6256 = !DILocation(line: 1036, column: 2, scope: !6247)
!6257 = !DILocalVariable(name: "dev", arg: 1, scope: !4523, file: !3, line: 1058, type: !174)
!6258 = !DILocation(line: 1058, column: 56, scope: !4523)
!6259 = !DILocalVariable(name: "handler", arg: 2, scope: !4523, file: !3, line: 1059, type: !4104)
!6260 = !DILocation(line: 1059, column: 32, scope: !4523)
!6261 = !DILocalVariable(name: "data", arg: 3, scope: !4523, file: !3, line: 1060, type: !162)
!6262 = !DILocation(line: 1060, column: 12, scope: !4523)
!6263 = !DILocalVariable(name: "param", scope: !4523, file: !3, line: 1062, type: !4095)
!6264 = !DILocation(line: 1062, column: 20, scope: !4523)
!6265 = !DILocation(line: 1062, column: 28, scope: !4523)
!6266 = !DILocation(line: 1062, column: 33, scope: !4523)
!6267 = !DILocalVariable(name: "ret", scope: !4523, file: !3, line: 1063, type: !135)
!6268 = !DILocation(line: 1063, column: 6, scope: !4523)
!6269 = !DILocation(line: 1065, column: 7, scope: !6270)
!6270 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1065, column: 6)
!6271 = !DILocation(line: 1065, column: 6, scope: !4523)
!6272 = !DILocation(line: 1066, column: 3, scope: !6270)
!6273 = !DILocation(line: 1068, column: 14, scope: !4523)
!6274 = !DILocation(line: 1068, column: 21, scope: !4523)
!6275 = !DILocation(line: 1068, column: 2, scope: !4523)
!6276 = !DILocation(line: 1070, column: 6, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1070, column: 6)
!6278 = !DILocation(line: 1070, column: 13, scope: !6277)
!6279 = !DILocation(line: 1070, column: 6, scope: !4523)
!6280 = !DILocation(line: 1071, column: 7, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 1070, column: 26)
!6282 = !DILocation(line: 1072, column: 3, scope: !6281)
!6283 = !DILocation(line: 1075, column: 13, scope: !4523)
!6284 = !DILocation(line: 1075, column: 2, scope: !4523)
!6285 = !DILocation(line: 1076, column: 23, scope: !4523)
!6286 = !DILocation(line: 1076, column: 2, scope: !4523)
!6287 = !DILocation(line: 1076, column: 9, scope: !4523)
!6288 = !DILocation(line: 1076, column: 21, scope: !4523)
!6289 = !DILocation(line: 1077, column: 7, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1077, column: 6)
!6291 = !DILocation(line: 1077, column: 14, scope: !6290)
!6292 = !DILocation(line: 1077, column: 6, scope: !4523)
!6293 = !DILocation(line: 1078, column: 14, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 1077, column: 27)
!6295 = !DILocation(line: 1078, column: 3, scope: !6294)
!6296 = !DILocation(line: 1079, column: 7, scope: !6294)
!6297 = !DILocation(line: 1080, column: 3, scope: !6294)
!6298 = !DILocation(line: 1082, column: 32, scope: !4523)
!6299 = !DILocation(line: 1082, column: 2, scope: !4523)
!6300 = !DILocation(line: 1082, column: 9, scope: !4523)
!6301 = !DILocation(line: 1082, column: 22, scope: !4523)
!6302 = !DILocation(line: 1082, column: 30, scope: !4523)
!6303 = !DILocation(line: 1083, column: 29, scope: !4523)
!6304 = !DILocation(line: 1083, column: 2, scope: !4523)
!6305 = !DILocation(line: 1083, column: 9, scope: !4523)
!6306 = !DILocation(line: 1083, column: 22, scope: !4523)
!6307 = !DILocation(line: 1083, column: 27, scope: !4523)
!6308 = !DILocation(line: 1084, column: 2, scope: !4523)
!6309 = !DILocation(line: 1084, column: 2, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 1084, column: 2)
!6311 = !DILocation(line: 1085, column: 18, scope: !4523)
!6312 = !DILocation(line: 1085, column: 25, scope: !4523)
!6313 = !DILocation(line: 1085, column: 38, scope: !4523)
!6314 = !DILocation(line: 1085, column: 2, scope: !4523)
!6315 = !DILabel(scope: !4523, name: "done_unlock", file: !3, line: 1087)
!6316 = !DILocation(line: 1087, column: 1, scope: !4523)
!6317 = !DILocation(line: 1088, column: 16, scope: !4523)
!6318 = !DILocation(line: 1088, column: 23, scope: !4523)
!6319 = !DILocation(line: 1088, column: 2, scope: !4523)
!6320 = !DILocation(line: 1090, column: 9, scope: !4523)
!6321 = !DILocation(line: 1090, column: 2, scope: !4523)
!6322 = !DILocation(line: 1091, column: 1, scope: !4523)
!6323 = distinct !DISubprogram(name: "iommu_unregister_device_fault_handler", scope: !3, file: !3, line: 1103, type: !3370, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6324 = !DILocalVariable(name: "dev", arg: 1, scope: !6323, file: !3, line: 1103, type: !174)
!6325 = !DILocation(line: 1103, column: 58, scope: !6323)
!6326 = !DILocalVariable(name: "param", scope: !6323, file: !3, line: 1105, type: !4095)
!6327 = !DILocation(line: 1105, column: 20, scope: !6323)
!6328 = !DILocation(line: 1105, column: 28, scope: !6323)
!6329 = !DILocation(line: 1105, column: 33, scope: !6323)
!6330 = !DILocalVariable(name: "ret", scope: !6323, file: !3, line: 1106, type: !135)
!6331 = !DILocation(line: 1106, column: 6, scope: !6323)
!6332 = !DILocation(line: 1108, column: 7, scope: !6333)
!6333 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 1108, column: 6)
!6334 = !DILocation(line: 1108, column: 6, scope: !6323)
!6335 = !DILocation(line: 1109, column: 3, scope: !6333)
!6336 = !DILocation(line: 1111, column: 14, scope: !6323)
!6337 = !DILocation(line: 1111, column: 21, scope: !6323)
!6338 = !DILocation(line: 1111, column: 2, scope: !6323)
!6339 = !DILocation(line: 1113, column: 7, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 1113, column: 6)
!6341 = !DILocation(line: 1113, column: 14, scope: !6340)
!6342 = !DILocation(line: 1113, column: 6, scope: !6323)
!6343 = !DILocation(line: 1114, column: 3, scope: !6340)
!6344 = !DILocation(line: 1117, column: 19, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6323, file: !3, line: 1117, column: 6)
!6346 = !DILocation(line: 1117, column: 26, scope: !6345)
!6347 = !DILocation(line: 1117, column: 39, scope: !6345)
!6348 = !DILocation(line: 1117, column: 7, scope: !6345)
!6349 = !DILocation(line: 1117, column: 6, scope: !6323)
!6350 = !DILocation(line: 1118, column: 7, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 1117, column: 48)
!6352 = !DILocation(line: 1119, column: 3, scope: !6351)
!6353 = !DILocation(line: 1122, column: 8, scope: !6323)
!6354 = !DILocation(line: 1122, column: 15, scope: !6323)
!6355 = !DILocation(line: 1122, column: 2, scope: !6323)
!6356 = !DILocation(line: 1123, column: 2, scope: !6323)
!6357 = !DILocation(line: 1123, column: 9, scope: !6323)
!6358 = !DILocation(line: 1123, column: 21, scope: !6323)
!6359 = !DILocation(line: 1124, column: 13, scope: !6323)
!6360 = !DILocation(line: 1124, column: 2, scope: !6323)
!6361 = !DILabel(scope: !6323, name: "unlock", file: !3, line: 1125)
!6362 = !DILocation(line: 1125, column: 1, scope: !6323)
!6363 = !DILocation(line: 1126, column: 16, scope: !6323)
!6364 = !DILocation(line: 1126, column: 23, scope: !6323)
!6365 = !DILocation(line: 1126, column: 2, scope: !6323)
!6366 = !DILocation(line: 1128, column: 9, scope: !6323)
!6367 = !DILocation(line: 1128, column: 2, scope: !6323)
!6368 = !DILocation(line: 1129, column: 1, scope: !6323)
!6369 = distinct !DISubprogram(name: "list_empty", scope: !4641, file: !4641, line: 280, type: !6370, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6370 = !DISubroutineType(types: !6371)
!6371 = !{!135, !6372}
!6372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6373, size: 64)
!6373 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !167)
!6374 = !DILocalVariable(name: "head", arg: 1, scope: !6369, file: !4641, line: 280, type: !6372)
!6375 = !DILocation(line: 280, column: 54, scope: !6369)
!6376 = !DILocation(line: 282, column: 9, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6369, file: !4641, line: 282, column: 9)
!6378 = !DILocation(line: 282, column: 9, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6377, file: !4641, line: 282, column: 9)
!6380 = !DILocation(line: 282, column: 34, scope: !6369)
!6381 = !DILocation(line: 282, column: 31, scope: !6369)
!6382 = !DILocation(line: 282, column: 2, scope: !6369)
!6383 = distinct !DISubprogram(name: "iommu_report_device_fault", scope: !3, file: !3, line: 1143, type: !6384, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6384 = !DISubroutineType(types: !6385)
!6385 = !{!135, !174, !3783}
!6386 = !DILocalVariable(name: "dev", arg: 1, scope: !6383, file: !3, line: 1143, type: !174)
!6387 = !DILocation(line: 1143, column: 46, scope: !6383)
!6388 = !DILocalVariable(name: "evt", arg: 2, scope: !6383, file: !3, line: 1143, type: !3783)
!6389 = !DILocation(line: 1143, column: 77, scope: !6383)
!6390 = !DILocalVariable(name: "param", scope: !6383, file: !3, line: 1145, type: !4095)
!6391 = !DILocation(line: 1145, column: 20, scope: !6383)
!6392 = !DILocation(line: 1145, column: 28, scope: !6383)
!6393 = !DILocation(line: 1145, column: 33, scope: !6383)
!6394 = !DILocalVariable(name: "evt_pending", scope: !6383, file: !3, line: 1146, type: !3783)
!6395 = !DILocation(line: 1146, column: 28, scope: !6383)
!6396 = !DILocalVariable(name: "fparam", scope: !6383, file: !3, line: 1147, type: !4100)
!6397 = !DILocation(line: 1147, column: 28, scope: !6383)
!6398 = !DILocalVariable(name: "ret", scope: !6383, file: !3, line: 1148, type: !135)
!6399 = !DILocation(line: 1148, column: 6, scope: !6383)
!6400 = !DILocation(line: 1150, column: 7, scope: !6401)
!6401 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1150, column: 6)
!6402 = !DILocation(line: 1150, column: 13, scope: !6401)
!6403 = !DILocation(line: 1150, column: 17, scope: !6401)
!6404 = !DILocation(line: 1150, column: 6, scope: !6383)
!6405 = !DILocation(line: 1151, column: 3, scope: !6401)
!6406 = !DILocation(line: 1154, column: 14, scope: !6383)
!6407 = !DILocation(line: 1154, column: 21, scope: !6383)
!6408 = !DILocation(line: 1154, column: 2, scope: !6383)
!6409 = !DILocation(line: 1155, column: 11, scope: !6383)
!6410 = !DILocation(line: 1155, column: 18, scope: !6383)
!6411 = !DILocation(line: 1155, column: 9, scope: !6383)
!6412 = !DILocation(line: 1156, column: 7, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1156, column: 6)
!6414 = !DILocation(line: 1156, column: 14, scope: !6413)
!6415 = !DILocation(line: 1156, column: 18, scope: !6413)
!6416 = !DILocation(line: 1156, column: 26, scope: !6413)
!6417 = !DILocation(line: 1156, column: 6, scope: !6383)
!6418 = !DILocation(line: 1157, column: 7, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 1156, column: 35)
!6420 = !DILocation(line: 1158, column: 3, scope: !6419)
!6421 = !DILocation(line: 1161, column: 6, scope: !6422)
!6422 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1161, column: 6)
!6423 = !DILocation(line: 1161, column: 11, scope: !6422)
!6424 = !DILocation(line: 1161, column: 17, scope: !6422)
!6425 = !DILocation(line: 1161, column: 22, scope: !6422)
!6426 = !DILocation(line: 1161, column: 46, scope: !6422)
!6427 = !DILocation(line: 1162, column: 7, scope: !6422)
!6428 = !DILocation(line: 1162, column: 12, scope: !6422)
!6429 = !DILocation(line: 1162, column: 18, scope: !6422)
!6430 = !DILocation(line: 1162, column: 22, scope: !6422)
!6431 = !DILocation(line: 1162, column: 28, scope: !6422)
!6432 = !DILocation(line: 1161, column: 6, scope: !6383)
!6433 = !DILocation(line: 1163, column: 25, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6422, file: !3, line: 1162, column: 67)
!6435 = !DILocation(line: 1163, column: 17, scope: !6434)
!6436 = !DILocation(line: 1163, column: 15, scope: !6434)
!6437 = !DILocation(line: 1165, column: 8, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 1165, column: 7)
!6439 = !DILocation(line: 1165, column: 7, scope: !6434)
!6440 = !DILocation(line: 1166, column: 8, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6438, file: !3, line: 1165, column: 21)
!6442 = !DILocation(line: 1167, column: 4, scope: !6441)
!6443 = !DILocation(line: 1169, column: 15, scope: !6434)
!6444 = !DILocation(line: 1169, column: 23, scope: !6434)
!6445 = !DILocation(line: 1169, column: 3, scope: !6434)
!6446 = !DILocation(line: 1170, column: 18, scope: !6434)
!6447 = !DILocation(line: 1170, column: 31, scope: !6434)
!6448 = !DILocation(line: 1170, column: 38, scope: !6434)
!6449 = !DILocation(line: 1170, column: 46, scope: !6434)
!6450 = !DILocation(line: 1170, column: 3, scope: !6434)
!6451 = !DILocation(line: 1171, column: 17, scope: !6434)
!6452 = !DILocation(line: 1171, column: 25, scope: !6434)
!6453 = !DILocation(line: 1171, column: 3, scope: !6434)
!6454 = !DILocation(line: 1172, column: 2, scope: !6434)
!6455 = !DILocation(line: 1174, column: 8, scope: !6383)
!6456 = !DILocation(line: 1174, column: 16, scope: !6383)
!6457 = !DILocation(line: 1174, column: 25, scope: !6383)
!6458 = !DILocation(line: 1174, column: 30, scope: !6383)
!6459 = !DILocation(line: 1174, column: 37, scope: !6383)
!6460 = !DILocation(line: 1174, column: 45, scope: !6383)
!6461 = !DILocation(line: 1174, column: 6, scope: !6383)
!6462 = !DILocation(line: 1175, column: 6, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 1175, column: 6)
!6464 = !DILocation(line: 1175, column: 10, scope: !6463)
!6465 = !DILocation(line: 1175, column: 13, scope: !6463)
!6466 = !DILocation(line: 1175, column: 6, scope: !6383)
!6467 = !DILocation(line: 1176, column: 15, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6463, file: !3, line: 1175, column: 26)
!6469 = !DILocation(line: 1176, column: 23, scope: !6468)
!6470 = !DILocation(line: 1176, column: 3, scope: !6468)
!6471 = !DILocation(line: 1177, column: 13, scope: !6468)
!6472 = !DILocation(line: 1177, column: 26, scope: !6468)
!6473 = !DILocation(line: 1177, column: 3, scope: !6468)
!6474 = !DILocation(line: 1178, column: 17, scope: !6468)
!6475 = !DILocation(line: 1178, column: 25, scope: !6468)
!6476 = !DILocation(line: 1178, column: 3, scope: !6468)
!6477 = !DILocation(line: 1179, column: 9, scope: !6468)
!6478 = !DILocation(line: 1179, column: 3, scope: !6468)
!6479 = !DILocation(line: 1180, column: 2, scope: !6468)
!6480 = !DILabel(scope: !6383, name: "done_unlock", file: !3, line: 1181)
!6481 = !DILocation(line: 1181, column: 1, scope: !6383)
!6482 = !DILocation(line: 1182, column: 16, scope: !6383)
!6483 = !DILocation(line: 1182, column: 23, scope: !6383)
!6484 = !DILocation(line: 1182, column: 2, scope: !6383)
!6485 = !DILocation(line: 1183, column: 9, scope: !6383)
!6486 = !DILocation(line: 1183, column: 2, scope: !6383)
!6487 = !DILocation(line: 1184, column: 1, scope: !6383)
!6488 = !DILocalVariable(name: "dev", arg: 1, scope: !4528, file: !3, line: 1187, type: !174)
!6489 = !DILocation(line: 1187, column: 40, scope: !4528)
!6490 = !DILocalVariable(name: "msg", arg: 2, scope: !4528, file: !3, line: 1188, type: !3818)
!6491 = !DILocation(line: 1188, column: 32, scope: !4528)
!6492 = !DILocalVariable(name: "needs_pasid", scope: !4528, file: !3, line: 1190, type: !451)
!6493 = !DILocation(line: 1190, column: 7, scope: !4528)
!6494 = !DILocalVariable(name: "ret", scope: !4528, file: !3, line: 1191, type: !135)
!6495 = !DILocation(line: 1191, column: 6, scope: !4528)
!6496 = !DILocalVariable(name: "evt", scope: !4528, file: !3, line: 1192, type: !3783)
!6497 = !DILocation(line: 1192, column: 28, scope: !4528)
!6498 = !DILocalVariable(name: "prm", scope: !4528, file: !3, line: 1193, type: !6499)
!6499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!6500 = !DILocation(line: 1193, column: 35, scope: !4528)
!6501 = !DILocalVariable(name: "param", scope: !4528, file: !3, line: 1194, type: !4095)
!6502 = !DILocation(line: 1194, column: 20, scope: !4528)
!6503 = !DILocation(line: 1194, column: 28, scope: !4528)
!6504 = !DILocation(line: 1194, column: 33, scope: !4528)
!6505 = !DILocalVariable(name: "has_pasid", scope: !4528, file: !3, line: 1195, type: !451)
!6506 = !DILocation(line: 1195, column: 7, scope: !4528)
!6507 = !DILocation(line: 1195, column: 19, scope: !4528)
!6508 = !DILocation(line: 1195, column: 24, scope: !4528)
!6509 = !DILocation(line: 1195, column: 30, scope: !4528)
!6510 = !DILocalVariable(name: "domain", scope: !4528, file: !3, line: 1196, type: !3489)
!6511 = !DILocation(line: 1196, column: 23, scope: !4528)
!6512 = !DILocation(line: 1196, column: 57, scope: !4528)
!6513 = !DILocation(line: 1196, column: 32, scope: !4528)
!6514 = !DILocation(line: 1198, column: 7, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1198, column: 6)
!6516 = !DILocation(line: 1198, column: 14, scope: !6515)
!6517 = !DILocation(line: 1198, column: 18, scope: !6515)
!6518 = !DILocation(line: 1198, column: 26, scope: !6515)
!6519 = !DILocation(line: 1198, column: 31, scope: !6515)
!6520 = !DILocation(line: 1198, column: 6, scope: !4528)
!6521 = !DILocation(line: 1199, column: 3, scope: !6515)
!6522 = !DILocation(line: 1201, column: 7, scope: !6523)
!6523 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1201, column: 6)
!6524 = !DILocation(line: 1201, column: 13, scope: !6523)
!6525 = !DILocation(line: 1201, column: 17, scope: !6523)
!6526 = !DILocation(line: 1201, column: 24, scope: !6523)
!6527 = !DILocation(line: 1201, column: 6, scope: !4528)
!6528 = !DILocation(line: 1202, column: 3, scope: !6523)
!6529 = !DILocation(line: 1204, column: 6, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1204, column: 6)
!6531 = !DILocation(line: 1204, column: 11, scope: !6530)
!6532 = !DILocation(line: 1204, column: 19, scope: !6530)
!6533 = !DILocation(line: 1204, column: 48, scope: !6530)
!6534 = !DILocation(line: 1205, column: 6, scope: !6530)
!6535 = !DILocation(line: 1205, column: 11, scope: !6530)
!6536 = !DILocation(line: 1205, column: 17, scope: !6530)
!6537 = !DILocation(line: 1204, column: 6, scope: !4528)
!6538 = !DILocation(line: 1206, column: 3, scope: !6530)
!6539 = !DILocation(line: 1209, column: 14, scope: !4528)
!6540 = !DILocation(line: 1209, column: 21, scope: !4528)
!6541 = !DILocation(line: 1209, column: 34, scope: !4528)
!6542 = !DILocation(line: 1209, column: 2, scope: !4528)
!6543 = !DILocation(line: 1210, column: 18, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1210, column: 6)
!6545 = !DILocation(line: 1210, column: 25, scope: !6544)
!6546 = !DILocation(line: 1210, column: 38, scope: !6544)
!6547 = !DILocation(line: 1210, column: 6, scope: !6544)
!6548 = !DILocation(line: 1210, column: 6, scope: !4528)
!6549 = !DILocation(line: 1211, column: 3, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 1210, column: 47)
!6551 = !DILocation(line: 1211, column: 3, scope: !6552)
!6552 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 1211, column: 3)
!6553 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 1211, column: 3)
!6554 = !DILocation(line: 1211, column: 3, scope: !6553)
!6555 = !DILocation(line: 1212, column: 3, scope: !6550)
!6556 = !DILocalVariable(name: "__mptr", scope: !6557, file: !3, line: 1218, type: !162)
!6557 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 1218, column: 2)
!6558 = distinct !DILexicalBlock(scope: !4528, file: !3, line: 1218, column: 2)
!6559 = !DILocation(line: 1218, column: 2, scope: !6557)
!6560 = !DILocation(line: 1218, column: 2, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 1218, column: 2)
!6562 = !DILocation(line: 1218, column: 2, scope: !6558)
!6563 = !DILocation(line: 1218, column: 2, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6558, file: !3, line: 1218, column: 2)
!6565 = !DILocation(line: 1219, column: 10, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1218, column: 62)
!6567 = !DILocation(line: 1219, column: 15, scope: !6566)
!6568 = !DILocation(line: 1219, column: 21, scope: !6566)
!6569 = !DILocation(line: 1219, column: 7, scope: !6566)
!6570 = !DILocation(line: 1220, column: 7, scope: !6571)
!6571 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1220, column: 7)
!6572 = !DILocation(line: 1220, column: 12, scope: !6571)
!6573 = !DILocation(line: 1220, column: 21, scope: !6571)
!6574 = !DILocation(line: 1220, column: 26, scope: !6571)
!6575 = !DILocation(line: 1220, column: 18, scope: !6571)
!6576 = !DILocation(line: 1220, column: 7, scope: !6566)
!6577 = !DILocation(line: 1221, column: 4, scope: !6571)
!6578 = !DILocation(line: 1229, column: 17, scope: !6566)
!6579 = !DILocation(line: 1229, column: 22, scope: !6566)
!6580 = !DILocation(line: 1229, column: 28, scope: !6566)
!6581 = !DILocation(line: 1229, column: 15, scope: !6566)
!6582 = !DILocation(line: 1230, column: 7, scope: !6583)
!6583 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1230, column: 7)
!6584 = !DILocation(line: 1230, column: 19, scope: !6583)
!6585 = !DILocation(line: 1230, column: 24, scope: !6583)
!6586 = !DILocation(line: 1230, column: 34, scope: !6583)
!6587 = !DILocation(line: 1230, column: 37, scope: !6583)
!6588 = !DILocation(line: 1230, column: 42, scope: !6583)
!6589 = !DILocation(line: 1230, column: 51, scope: !6583)
!6590 = !DILocation(line: 1230, column: 56, scope: !6583)
!6591 = !DILocation(line: 1230, column: 48, scope: !6583)
!6592 = !DILocation(line: 1230, column: 7, scope: !6566)
!6593 = !DILocation(line: 1231, column: 4, scope: !6583)
!6594 = !DILocation(line: 1233, column: 8, scope: !6595)
!6595 = distinct !DILexicalBlock(scope: !6566, file: !3, line: 1233, column: 7)
!6596 = !DILocation(line: 1233, column: 20, scope: !6595)
!6597 = !DILocation(line: 1233, column: 23, scope: !6595)
!6598 = !DILocation(line: 1233, column: 7, scope: !6566)
!6599 = !DILocation(line: 1235, column: 4, scope: !6600)
!6600 = distinct !DILexicalBlock(scope: !6595, file: !3, line: 1233, column: 34)
!6601 = !DILocation(line: 1235, column: 9, scope: !6600)
!6602 = !DILocation(line: 1235, column: 15, scope: !6600)
!6603 = !DILocation(line: 1236, column: 4, scope: !6600)
!6604 = !DILocation(line: 1236, column: 9, scope: !6600)
!6605 = !DILocation(line: 1236, column: 15, scope: !6600)
!6606 = !DILocation(line: 1237, column: 3, scope: !6600)
!6607 = !DILocation(line: 1239, column: 9, scope: !6566)
!6608 = !DILocation(line: 1239, column: 17, scope: !6566)
!6609 = !DILocation(line: 1239, column: 22, scope: !6566)
!6610 = !DILocation(line: 1239, column: 36, scope: !6566)
!6611 = !DILocation(line: 1239, column: 41, scope: !6566)
!6612 = !DILocation(line: 1239, column: 46, scope: !6566)
!6613 = !DILocation(line: 1239, column: 7, scope: !6566)
!6614 = !DILocation(line: 1240, column: 13, scope: !6566)
!6615 = !DILocation(line: 1240, column: 18, scope: !6566)
!6616 = !DILocation(line: 1240, column: 3, scope: !6566)
!6617 = !DILocation(line: 1241, column: 9, scope: !6566)
!6618 = !DILocation(line: 1241, column: 3, scope: !6566)
!6619 = !DILocation(line: 1242, column: 3, scope: !6566)
!6620 = !DILocalVariable(name: "__mptr", scope: !6621, file: !3, line: 1218, type: !162)
!6621 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1218, column: 2)
!6622 = !DILocation(line: 1218, column: 2, scope: !6621)
!6623 = !DILocation(line: 1218, column: 2, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 1218, column: 2)
!6625 = distinct !{!6625, !6562, !6626}
!6626 = !DILocation(line: 1243, column: 2, scope: !6558)
!6627 = !DILabel(scope: !4528, name: "done_unlock", file: !3, line: 1245)
!6628 = !DILocation(line: 1245, column: 1, scope: !4528)
!6629 = !DILocation(line: 1246, column: 16, scope: !4528)
!6630 = !DILocation(line: 1246, column: 23, scope: !4528)
!6631 = !DILocation(line: 1246, column: 36, scope: !4528)
!6632 = !DILocation(line: 1246, column: 2, scope: !4528)
!6633 = !DILocation(line: 1247, column: 9, scope: !4528)
!6634 = !DILocation(line: 1247, column: 2, scope: !4528)
!6635 = !DILocation(line: 1248, column: 1, scope: !4528)
!6636 = distinct !DISubprogram(name: "iommu_get_domain_for_dev", scope: !3, file: !3, line: 2211, type: !6637, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!3489, !174}
!6639 = !DILocalVariable(name: "dev", arg: 1, scope: !6636, file: !3, line: 2211, type: !174)
!6640 = !DILocation(line: 2211, column: 62, scope: !6636)
!6641 = !DILocalVariable(name: "domain", scope: !6636, file: !3, line: 2213, type: !3489)
!6642 = !DILocation(line: 2213, column: 23, scope: !6636)
!6643 = !DILocalVariable(name: "group", scope: !6636, file: !3, line: 2214, type: !3650)
!6644 = !DILocation(line: 2214, column: 22, scope: !6636)
!6645 = !DILocation(line: 2216, column: 26, scope: !6636)
!6646 = !DILocation(line: 2216, column: 10, scope: !6636)
!6647 = !DILocation(line: 2216, column: 8, scope: !6636)
!6648 = !DILocation(line: 2217, column: 7, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 2217, column: 6)
!6650 = !DILocation(line: 2217, column: 6, scope: !6636)
!6651 = !DILocation(line: 2218, column: 3, scope: !6649)
!6652 = !DILocation(line: 2220, column: 11, scope: !6636)
!6653 = !DILocation(line: 2220, column: 18, scope: !6636)
!6654 = !DILocation(line: 2220, column: 9, scope: !6636)
!6655 = !DILocation(line: 2222, column: 18, scope: !6636)
!6656 = !DILocation(line: 2222, column: 2, scope: !6636)
!6657 = !DILocation(line: 2224, column: 9, scope: !6636)
!6658 = !DILocation(line: 2224, column: 2, scope: !6636)
!6659 = !DILocation(line: 2225, column: 1, scope: !6636)
!6660 = distinct !DISubprogram(name: "iommu_group_id", scope: !3, file: !3, line: 1257, type: !6661, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{!135, !3650}
!6663 = !DILocalVariable(name: "group", arg: 1, scope: !6660, file: !3, line: 1257, type: !3650)
!6664 = !DILocation(line: 1257, column: 40, scope: !6660)
!6665 = !DILocation(line: 1259, column: 9, scope: !6660)
!6666 = !DILocation(line: 1259, column: 16, scope: !6660)
!6667 = !DILocation(line: 1259, column: 2, scope: !6660)
!6668 = distinct !DISubprogram(name: "generic_device_group", scope: !3, file: !3, line: 1375, type: !3648, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6669 = !DILocalVariable(name: "dev", arg: 1, scope: !6668, file: !3, line: 1375, type: !174)
!6670 = !DILocation(line: 1375, column: 57, scope: !6668)
!6671 = !DILocation(line: 1377, column: 9, scope: !6668)
!6672 = !DILocation(line: 1377, column: 2, scope: !6668)
!6673 = distinct !DISubprogram(name: "pci_device_group", scope: !3, file: !3, line: 1385, type: !3648, scopeLine: 1386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6674 = !DILocalVariable(name: "dev", arg: 1, scope: !6673, file: !3, line: 1385, type: !174)
!6675 = !DILocation(line: 1385, column: 53, scope: !6673)
!6676 = !DILocalVariable(name: "pdev", scope: !6673, file: !3, line: 1387, type: !4130)
!6677 = !DILocation(line: 1387, column: 18, scope: !6673)
!6678 = !DILocalVariable(name: "__mptr", scope: !6679, file: !3, line: 1387, type: !162)
!6679 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1387, column: 25)
!6680 = !DILocation(line: 1387, column: 25, scope: !6679)
!6681 = !DILocation(line: 1387, column: 25, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6679, file: !3, line: 1387, column: 25)
!6683 = !DILocalVariable(name: "data", scope: !6673, file: !3, line: 1388, type: !6684)
!6684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_for_pci_data", file: !3, line: 1352, size: 128, elements: !6685)
!6685 = !{!6686, !6687}
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !6684, file: !3, line: 1353, baseType: !4130, size: 64)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !6684, file: !3, line: 1354, baseType: !3650, size: 64, offset: 64)
!6688 = !DILocation(line: 1388, column: 28, scope: !6673)
!6689 = !DILocalVariable(name: "bus", scope: !6673, file: !3, line: 1389, type: !4136)
!6690 = !DILocation(line: 1389, column: 18, scope: !6673)
!6691 = !DILocalVariable(name: "group", scope: !6673, file: !3, line: 1390, type: !3650)
!6692 = !DILocation(line: 1390, column: 22, scope: !6673)
!6693 = !DILocalVariable(name: "devfns", scope: !6673, file: !3, line: 1391, type: !6694)
!6694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !382, size: 256, elements: !1120)
!6695 = !DILocation(line: 1391, column: 6, scope: !6673)
!6696 = !DILocalVariable(name: "__ret_warn_on", scope: !6697, file: !3, line: 1393, type: !135)
!6697 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 1393, column: 6)
!6698 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1393, column: 6)
!6699 = !DILocation(line: 1393, column: 6, scope: !6697)
!6700 = !DILocation(line: 1393, column: 6, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 1393, column: 6)
!6702 = !DILocation(line: 1393, column: 6, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6701, file: !3, line: 1393, column: 6)
!6704 = !DILocation(line: 1393, column: 6, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1393, column: 6)
!6706 = !DILocation(line: 1393, column: 6, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1393, column: 6)
!6708 = !{i32 -2141348213, i32 -2141348184, i32 -2141348138, i32 -2141348080, i32 -2141348026, i32 -2141347972, i32 -2141347917, i32 -2141347886}
!6709 = !DILocation(line: 1393, column: 6, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1393, column: 6)
!6711 = !{i32 -2141347482, i32 -2141347475, i32 -2141347423, i32 -2141347392, i32 -2141347362}
!6712 = !DILocation(line: 1393, column: 6, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1393, column: 6)
!6714 = !DILocation(line: 1393, column: 6, scope: !6698)
!6715 = !DILocation(line: 1393, column: 6, scope: !6673)
!6716 = !DILocation(line: 1394, column: 10, scope: !6698)
!6717 = !DILocation(line: 1394, column: 3, scope: !6698)
!6718 = !DILocation(line: 1402, column: 29, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1402, column: 6)
!6720 = !DILocation(line: 1402, column: 59, scope: !6719)
!6721 = !DILocation(line: 1402, column: 6, scope: !6719)
!6722 = !DILocation(line: 1402, column: 6, scope: !6673)
!6723 = !DILocation(line: 1403, column: 15, scope: !6719)
!6724 = !DILocation(line: 1403, column: 3, scope: !6719)
!6725 = !DILocation(line: 1405, column: 14, scope: !6673)
!6726 = !DILocation(line: 1405, column: 7, scope: !6673)
!6727 = !DILocation(line: 1413, column: 13, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1413, column: 2)
!6729 = !DILocation(line: 1413, column: 19, scope: !6728)
!6730 = !DILocation(line: 1413, column: 11, scope: !6728)
!6731 = !DILocation(line: 1413, column: 7, scope: !6728)
!6732 = !DILocation(line: 1413, column: 41, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 1413, column: 2)
!6734 = !DILocation(line: 1413, column: 25, scope: !6733)
!6735 = !DILocation(line: 1413, column: 24, scope: !6733)
!6736 = !DILocation(line: 1413, column: 2, scope: !6728)
!6737 = !DILocation(line: 1414, column: 8, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1414, column: 7)
!6739 = distinct !DILexicalBlock(scope: !6733, file: !3, line: 1413, column: 66)
!6740 = !DILocation(line: 1414, column: 13, scope: !6738)
!6741 = !DILocation(line: 1414, column: 7, scope: !6739)
!6742 = !DILocation(line: 1415, column: 4, scope: !6738)
!6743 = !DILocation(line: 1417, column: 28, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1417, column: 7)
!6745 = !DILocation(line: 1417, column: 33, scope: !6744)
!6746 = !DILocation(line: 1417, column: 7, scope: !6744)
!6747 = !DILocation(line: 1417, column: 7, scope: !6739)
!6748 = !DILocation(line: 1418, column: 4, scope: !6744)
!6749 = !DILocation(line: 1420, column: 10, scope: !6739)
!6750 = !DILocation(line: 1420, column: 15, scope: !6739)
!6751 = !DILocation(line: 1420, column: 8, scope: !6739)
!6752 = !DILocation(line: 1422, column: 28, scope: !6739)
!6753 = !DILocation(line: 1422, column: 34, scope: !6739)
!6754 = !DILocation(line: 1422, column: 11, scope: !6739)
!6755 = !DILocation(line: 1422, column: 9, scope: !6739)
!6756 = !DILocation(line: 1423, column: 7, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 1423, column: 7)
!6758 = !DILocation(line: 1423, column: 7, scope: !6739)
!6759 = !DILocation(line: 1424, column: 11, scope: !6757)
!6760 = !DILocation(line: 1424, column: 4, scope: !6757)
!6761 = !DILocation(line: 1425, column: 2, scope: !6739)
!6762 = !DILocation(line: 1413, column: 53, scope: !6733)
!6763 = !DILocation(line: 1413, column: 58, scope: !6733)
!6764 = !DILocation(line: 1413, column: 51, scope: !6733)
!6765 = !DILocation(line: 1413, column: 2, scope: !6733)
!6766 = distinct !{!6766, !6736, !6767}
!6767 = !DILocation(line: 1425, column: 2, scope: !6728)
!6768 = !DILocation(line: 1431, column: 30, scope: !6673)
!6769 = !DILocation(line: 1431, column: 53, scope: !6673)
!6770 = !DILocation(line: 1431, column: 10, scope: !6673)
!6771 = !DILocation(line: 1431, column: 8, scope: !6673)
!6772 = !DILocation(line: 1432, column: 6, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1432, column: 6)
!6774 = !DILocation(line: 1432, column: 6, scope: !6673)
!6775 = !DILocation(line: 1433, column: 10, scope: !6773)
!6776 = !DILocation(line: 1433, column: 3, scope: !6773)
!6777 = !DILocation(line: 1440, column: 39, scope: !6673)
!6778 = !DILocation(line: 1440, column: 62, scope: !6673)
!6779 = !DILocation(line: 1440, column: 10, scope: !6673)
!6780 = !DILocation(line: 1440, column: 8, scope: !6673)
!6781 = !DILocation(line: 1441, column: 6, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 1441, column: 6)
!6783 = !DILocation(line: 1441, column: 6, scope: !6673)
!6784 = !DILocation(line: 1442, column: 10, scope: !6782)
!6785 = !DILocation(line: 1442, column: 3, scope: !6782)
!6786 = !DILocation(line: 1445, column: 9, scope: !6673)
!6787 = !DILocation(line: 1445, column: 2, scope: !6673)
!6788 = !DILocation(line: 1446, column: 1, scope: !6673)
!6789 = distinct !DISubprogram(name: "get_pci_alias_or_group", scope: !3, file: !3, line: 1361, type: !6790, scopeLine: 1362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6790 = !DISubroutineType(types: !6791)
!6791 = !{!135, !4130, !824, !162}
!6792 = !DILocalVariable(name: "pdev", arg: 1, scope: !6789, file: !3, line: 1361, type: !4130)
!6793 = !DILocation(line: 1361, column: 51, scope: !6789)
!6794 = !DILocalVariable(name: "alias", arg: 2, scope: !6789, file: !3, line: 1361, type: !824)
!6795 = !DILocation(line: 1361, column: 61, scope: !6789)
!6796 = !DILocalVariable(name: "opaque", arg: 3, scope: !6789, file: !3, line: 1361, type: !162)
!6797 = !DILocation(line: 1361, column: 74, scope: !6789)
!6798 = !DILocalVariable(name: "data", scope: !6789, file: !3, line: 1363, type: !6799)
!6799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6684, size: 64)
!6800 = !DILocation(line: 1363, column: 29, scope: !6789)
!6801 = !DILocation(line: 1363, column: 36, scope: !6789)
!6802 = !DILocation(line: 1365, column: 15, scope: !6789)
!6803 = !DILocation(line: 1365, column: 2, scope: !6789)
!6804 = !DILocation(line: 1365, column: 8, scope: !6789)
!6805 = !DILocation(line: 1365, column: 13, scope: !6789)
!6806 = !DILocation(line: 1366, column: 33, scope: !6789)
!6807 = !DILocation(line: 1366, column: 39, scope: !6789)
!6808 = !DILocation(line: 1366, column: 16, scope: !6789)
!6809 = !DILocation(line: 1366, column: 2, scope: !6789)
!6810 = !DILocation(line: 1366, column: 8, scope: !6789)
!6811 = !DILocation(line: 1366, column: 14, scope: !6789)
!6812 = !DILocation(line: 1368, column: 9, scope: !6789)
!6813 = !DILocation(line: 1368, column: 15, scope: !6789)
!6814 = !DILocation(line: 1368, column: 21, scope: !6789)
!6815 = !DILocation(line: 1368, column: 2, scope: !6789)
!6816 = distinct !DISubprogram(name: "pci_is_root_bus", scope: !4132, file: !4132, line: 656, type: !6817, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!451, !4136}
!6819 = !DILocalVariable(name: "pbus", arg: 1, scope: !6816, file: !4132, line: 656, type: !4136)
!6820 = !DILocation(line: 656, column: 52, scope: !6816)
!6821 = !DILocation(line: 658, column: 11, scope: !6816)
!6822 = !DILocation(line: 658, column: 17, scope: !6816)
!6823 = !DILocation(line: 658, column: 9, scope: !6816)
!6824 = !DILocation(line: 658, column: 2, scope: !6816)
!6825 = distinct !DISubprogram(name: "get_pci_alias_group", scope: !3, file: !3, line: 1316, type: !6826, scopeLine: 1318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!3650, !4130, !4240}
!6828 = !DILocalVariable(name: "pdev", arg: 1, scope: !6825, file: !3, line: 1316, type: !4130)
!6829 = !DILocation(line: 1316, column: 64, scope: !6825)
!6830 = !DILocalVariable(name: "devfns", arg: 2, scope: !6825, file: !3, line: 1317, type: !4240)
!6831 = !DILocation(line: 1317, column: 28, scope: !6825)
!6832 = !DILocalVariable(name: "tmp", scope: !6825, file: !3, line: 1319, type: !4130)
!6833 = !DILocation(line: 1319, column: 18, scope: !6825)
!6834 = !DILocalVariable(name: "group", scope: !6825, file: !3, line: 1320, type: !3650)
!6835 = !DILocation(line: 1320, column: 22, scope: !6825)
!6836 = !DILocation(line: 1322, column: 23, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1322, column: 6)
!6838 = !DILocation(line: 1322, column: 29, scope: !6837)
!6839 = !DILocation(line: 1322, column: 35, scope: !6837)
!6840 = !DILocation(line: 1322, column: 43, scope: !6837)
!6841 = !DILocation(line: 1322, column: 6, scope: !6837)
!6842 = !DILocation(line: 1322, column: 6, scope: !6825)
!6843 = !DILocation(line: 1323, column: 3, scope: !6837)
!6844 = !DILocation(line: 1325, column: 27, scope: !6825)
!6845 = !DILocation(line: 1325, column: 33, scope: !6825)
!6846 = !DILocation(line: 1325, column: 10, scope: !6825)
!6847 = !DILocation(line: 1325, column: 8, scope: !6825)
!6848 = !DILocation(line: 1326, column: 6, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1326, column: 6)
!6850 = !DILocation(line: 1326, column: 6, scope: !6825)
!6851 = !DILocation(line: 1327, column: 10, scope: !6849)
!6852 = !DILocation(line: 1327, column: 3, scope: !6849)
!6853 = !DILocation(line: 1329, column: 2, scope: !6825)
!6854 = !DILocation(line: 1330, column: 7, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 1330, column: 7)
!6856 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1329, column: 24)
!6857 = !DILocation(line: 1330, column: 14, scope: !6855)
!6858 = !DILocation(line: 1330, column: 11, scope: !6855)
!6859 = !DILocation(line: 1330, column: 19, scope: !6855)
!6860 = !DILocation(line: 1330, column: 22, scope: !6855)
!6861 = !DILocation(line: 1330, column: 27, scope: !6855)
!6862 = !DILocation(line: 1330, column: 34, scope: !6855)
!6863 = !DILocation(line: 1330, column: 40, scope: !6855)
!6864 = !DILocation(line: 1330, column: 31, scope: !6855)
!6865 = !DILocation(line: 1330, column: 7, scope: !6856)
!6866 = !DILocation(line: 1331, column: 4, scope: !6855)
!6867 = distinct !{!6867, !6853, !6868}
!6868 = !DILocation(line: 1347, column: 2, scope: !6825)
!6869 = !DILocation(line: 1334, column: 32, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 1334, column: 7)
!6871 = !DILocation(line: 1334, column: 38, scope: !6870)
!6872 = !DILocation(line: 1334, column: 7, scope: !6870)
!6873 = !DILocation(line: 1334, column: 7, scope: !6856)
!6874 = !DILocation(line: 1335, column: 32, scope: !6875)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1334, column: 44)
!6876 = !DILocation(line: 1335, column: 37, scope: !6875)
!6877 = !DILocation(line: 1335, column: 12, scope: !6875)
!6878 = !DILocation(line: 1335, column: 10, scope: !6875)
!6879 = !DILocation(line: 1336, column: 8, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1336, column: 8)
!6881 = !DILocation(line: 1336, column: 8, scope: !6875)
!6882 = !DILocation(line: 1337, column: 17, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1336, column: 15)
!6884 = !DILocation(line: 1337, column: 5, scope: !6883)
!6885 = !DILocation(line: 1338, column: 12, scope: !6883)
!6886 = !DILocation(line: 1338, column: 5, scope: !6883)
!6887 = !DILocation(line: 1341, column: 41, scope: !6875)
!6888 = !DILocation(line: 1341, column: 46, scope: !6875)
!6889 = !DILocation(line: 1341, column: 12, scope: !6875)
!6890 = !DILocation(line: 1341, column: 10, scope: !6875)
!6891 = !DILocation(line: 1342, column: 8, scope: !6892)
!6892 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1342, column: 8)
!6893 = !DILocation(line: 1342, column: 8, scope: !6875)
!6894 = !DILocation(line: 1343, column: 17, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 1342, column: 15)
!6896 = !DILocation(line: 1343, column: 5, scope: !6895)
!6897 = !DILocation(line: 1344, column: 12, scope: !6895)
!6898 = !DILocation(line: 1344, column: 5, scope: !6895)
!6899 = !DILocation(line: 1346, column: 3, scope: !6875)
!6900 = !DILocation(line: 1349, column: 2, scope: !6825)
!6901 = !DILocation(line: 1350, column: 1, scope: !6825)
!6902 = distinct !DISubprogram(name: "get_pci_function_alias_group", scope: !3, file: !3, line: 1282, type: !6826, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6903 = !DILocalVariable(name: "pdev", arg: 1, scope: !6902, file: !3, line: 1282, type: !4130)
!6904 = !DILocation(line: 1282, column: 73, scope: !6902)
!6905 = !DILocalVariable(name: "devfns", arg: 2, scope: !6902, file: !3, line: 1283, type: !4240)
!6906 = !DILocation(line: 1283, column: 23, scope: !6902)
!6907 = !DILocalVariable(name: "tmp", scope: !6902, file: !3, line: 1285, type: !4130)
!6908 = !DILocation(line: 1285, column: 18, scope: !6902)
!6909 = !DILocalVariable(name: "group", scope: !6902, file: !3, line: 1286, type: !3650)
!6910 = !DILocation(line: 1286, column: 22, scope: !6902)
!6911 = !DILocation(line: 1288, column: 7, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 1288, column: 6)
!6913 = !DILocation(line: 1288, column: 13, scope: !6912)
!6914 = !DILocation(line: 1288, column: 27, scope: !6912)
!6915 = !DILocation(line: 1288, column: 46, scope: !6912)
!6916 = !DILocation(line: 1288, column: 30, scope: !6912)
!6917 = !DILocation(line: 1288, column: 6, scope: !6902)
!6918 = !DILocation(line: 1289, column: 3, scope: !6912)
!6919 = !DILocation(line: 1291, column: 2, scope: !6902)
!6920 = !DILocation(line: 1292, column: 7, scope: !6921)
!6921 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 1292, column: 7)
!6922 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 1291, column: 24)
!6923 = !DILocation(line: 1292, column: 14, scope: !6921)
!6924 = !DILocation(line: 1292, column: 11, scope: !6921)
!6925 = !DILocation(line: 1292, column: 19, scope: !6921)
!6926 = !DILocation(line: 1292, column: 22, scope: !6921)
!6927 = !DILocation(line: 1292, column: 27, scope: !6921)
!6928 = !DILocation(line: 1292, column: 34, scope: !6921)
!6929 = !DILocation(line: 1292, column: 40, scope: !6921)
!6930 = !DILocation(line: 1292, column: 31, scope: !6921)
!6931 = !DILocation(line: 1292, column: 44, scope: !6921)
!6932 = !DILocation(line: 1293, column: 7, scope: !6921)
!6933 = !DILocation(line: 1293, column: 31, scope: !6921)
!6934 = !DILocation(line: 1293, column: 28, scope: !6921)
!6935 = !DILocation(line: 1293, column: 53, scope: !6921)
!6936 = !DILocation(line: 1294, column: 23, scope: !6921)
!6937 = !DILocation(line: 1294, column: 7, scope: !6921)
!6938 = !DILocation(line: 1292, column: 7, scope: !6922)
!6939 = !DILocation(line: 1295, column: 4, scope: !6921)
!6940 = distinct !{!6940, !6919, !6941}
!6941 = !DILocation(line: 1302, column: 2, scope: !6902)
!6942 = !DILocation(line: 1297, column: 31, scope: !6922)
!6943 = !DILocation(line: 1297, column: 36, scope: !6922)
!6944 = !DILocation(line: 1297, column: 11, scope: !6922)
!6945 = !DILocation(line: 1297, column: 9, scope: !6922)
!6946 = !DILocation(line: 1298, column: 7, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 1298, column: 7)
!6948 = !DILocation(line: 1298, column: 7, scope: !6922)
!6949 = !DILocation(line: 1299, column: 16, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6947, file: !3, line: 1298, column: 14)
!6951 = !DILocation(line: 1299, column: 4, scope: !6950)
!6952 = !DILocation(line: 1300, column: 11, scope: !6950)
!6953 = !DILocation(line: 1300, column: 4, scope: !6950)
!6954 = !DILocation(line: 1304, column: 2, scope: !6902)
!6955 = !DILocation(line: 1305, column: 1, scope: !6902)
!6956 = distinct !DISubprogram(name: "fsl_mc_device_group", scope: !3, file: !3, line: 1450, type: !3648, scopeLine: 1451, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6957 = !DILocalVariable(name: "dev", arg: 1, scope: !6956, file: !3, line: 1450, type: !174)
!6958 = !DILocation(line: 1450, column: 56, scope: !6956)
!6959 = !DILocalVariable(name: "cont_dev", scope: !6956, file: !3, line: 1452, type: !174)
!6960 = !DILocation(line: 1452, column: 17, scope: !6956)
!6961 = !DILocalVariable(name: "__mptr", scope: !6962, file: !3, line: 1452, type: !162)
!6962 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1452, column: 28)
!6963 = !DILocation(line: 1452, column: 28, scope: !6962)
!6964 = !DILocation(line: 1452, column: 28, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 1452, column: 28)
!6966 = !DILocation(line: 1452, column: 28, scope: !6956)
!6967 = !DILocalVariable(name: "group", scope: !6956, file: !3, line: 1453, type: !3650)
!6968 = !DILocation(line: 1453, column: 22, scope: !6956)
!6969 = !DILocation(line: 1455, column: 26, scope: !6956)
!6970 = !DILocation(line: 1455, column: 10, scope: !6956)
!6971 = !DILocation(line: 1455, column: 8, scope: !6956)
!6972 = !DILocation(line: 1456, column: 7, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6956, file: !3, line: 1456, column: 6)
!6974 = !DILocation(line: 1456, column: 6, scope: !6956)
!6975 = !DILocation(line: 1457, column: 11, scope: !6973)
!6976 = !DILocation(line: 1457, column: 9, scope: !6973)
!6977 = !DILocation(line: 1457, column: 3, scope: !6973)
!6978 = !DILocation(line: 1458, column: 9, scope: !6956)
!6979 = !DILocation(line: 1458, column: 2, scope: !6956)
!6980 = distinct !DISubprogram(name: "iommu_group_default_domain", scope: !3, file: !3, line: 1559, type: !6981, scopeLine: 1560, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6981 = !DISubroutineType(types: !6982)
!6982 = !{!3489, !3650}
!6983 = !DILocalVariable(name: "group", arg: 1, scope: !6980, file: !3, line: 1559, type: !3650)
!6984 = !DILocation(line: 1559, column: 69, scope: !6980)
!6985 = !DILocation(line: 1561, column: 9, scope: !6980)
!6986 = !DILocation(line: 1561, column: 16, scope: !6980)
!6987 = !DILocation(line: 1561, column: 2, scope: !6980)
!6988 = distinct !DISubprogram(name: "bus_iommu_probe", scope: !3, file: !3, line: 1741, type: !6989, scopeLine: 1742, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!6989 = !DISubroutineType(types: !6990)
!6990 = !{!135, !3395}
!6991 = !DILocalVariable(name: "bus", arg: 1, scope: !6988, file: !3, line: 1741, type: !3395)
!6992 = !DILocation(line: 1741, column: 38, scope: !6988)
!6993 = !DILocalVariable(name: "group", scope: !6988, file: !3, line: 1743, type: !3650)
!6994 = !DILocation(line: 1743, column: 22, scope: !6988)
!6995 = !DILocalVariable(name: "next", scope: !6988, file: !3, line: 1743, type: !3650)
!6996 = !DILocation(line: 1743, column: 30, scope: !6988)
!6997 = !DILocalVariable(name: "group_list", scope: !6988, file: !3, line: 1744, type: !167)
!6998 = !DILocation(line: 1744, column: 2, scope: !6988)
!6999 = !DILocalVariable(name: "ret", scope: !6988, file: !3, line: 1745, type: !135)
!7000 = !DILocation(line: 1745, column: 6, scope: !6988)
!7001 = !DILocation(line: 1752, column: 25, scope: !6988)
!7002 = !DILocation(line: 1752, column: 36, scope: !6988)
!7003 = !DILocation(line: 1752, column: 8, scope: !6988)
!7004 = !DILocation(line: 1752, column: 6, scope: !6988)
!7005 = !DILocation(line: 1753, column: 6, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1753, column: 6)
!7007 = !DILocation(line: 1753, column: 6, scope: !6988)
!7008 = !DILocation(line: 1754, column: 10, scope: !7006)
!7009 = !DILocation(line: 1754, column: 3, scope: !7006)
!7010 = !DILocalVariable(name: "__mptr", scope: !7011, file: !3, line: 1756, type: !162)
!7011 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1756, column: 2)
!7012 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 1756, column: 2)
!7013 = !DILocation(line: 1756, column: 2, scope: !7011)
!7014 = !DILocation(line: 1756, column: 2, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 1756, column: 2)
!7016 = !DILocation(line: 1756, column: 2, scope: !7012)
!7017 = !DILocalVariable(name: "__mptr", scope: !7018, file: !3, line: 1756, type: !162)
!7018 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1756, column: 2)
!7019 = !DILocation(line: 1756, column: 2, scope: !7018)
!7020 = !DILocation(line: 1756, column: 2, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 1756, column: 2)
!7022 = !DILocation(line: 1756, column: 2, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 1756, column: 2)
!7024 = !DILocation(line: 1758, column: 18, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 1756, column: 60)
!7026 = !DILocation(line: 1758, column: 25, scope: !7025)
!7027 = !DILocation(line: 1758, column: 3, scope: !7025)
!7028 = !DILocation(line: 1760, column: 15, scope: !7025)
!7029 = !DILocation(line: 1760, column: 22, scope: !7025)
!7030 = !DILocation(line: 1760, column: 3, scope: !7025)
!7031 = !DILocation(line: 1763, column: 30, scope: !7025)
!7032 = !DILocation(line: 1763, column: 35, scope: !7025)
!7033 = !DILocation(line: 1763, column: 3, scope: !7025)
!7034 = !DILocation(line: 1765, column: 8, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 1765, column: 7)
!7036 = !DILocation(line: 1765, column: 15, scope: !7035)
!7037 = !DILocation(line: 1765, column: 7, scope: !7025)
!7038 = !DILocation(line: 1766, column: 18, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 1765, column: 31)
!7040 = !DILocation(line: 1766, column: 25, scope: !7039)
!7041 = !DILocation(line: 1766, column: 4, scope: !7039)
!7042 = !DILocation(line: 1767, column: 4, scope: !7039)
!7043 = !DILocation(line: 1770, column: 38, scope: !7025)
!7044 = !DILocation(line: 1770, column: 3, scope: !7025)
!7045 = !DILocation(line: 1772, column: 34, scope: !7025)
!7046 = !DILocation(line: 1772, column: 9, scope: !7025)
!7047 = !DILocation(line: 1772, column: 7, scope: !7025)
!7048 = !DILocation(line: 1774, column: 17, scope: !7025)
!7049 = !DILocation(line: 1774, column: 24, scope: !7025)
!7050 = !DILocation(line: 1774, column: 3, scope: !7025)
!7051 = !DILocation(line: 1776, column: 7, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 1776, column: 7)
!7053 = !DILocation(line: 1776, column: 7, scope: !7025)
!7054 = !DILocation(line: 1777, column: 4, scope: !7052)
!7055 = !DILocation(line: 1779, column: 30, scope: !7025)
!7056 = !DILocation(line: 1779, column: 3, scope: !7025)
!7057 = !DILocation(line: 1780, column: 2, scope: !7025)
!7058 = !DILocalVariable(name: "__mptr", scope: !7059, file: !3, line: 1756, type: !162)
!7059 = distinct !DILexicalBlock(scope: !7023, file: !3, line: 1756, column: 2)
!7060 = !DILocation(line: 1756, column: 2, scope: !7059)
!7061 = !DILocation(line: 1756, column: 2, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 1756, column: 2)
!7063 = distinct !{!7063, !7016, !7064}
!7064 = !DILocation(line: 1780, column: 2, scope: !7012)
!7065 = !DILocation(line: 1782, column: 9, scope: !6988)
!7066 = !DILocation(line: 1782, column: 2, scope: !6988)
!7067 = !DILocation(line: 1783, column: 1, scope: !6988)
!7068 = distinct !DISubprogram(name: "probe_iommu_group", scope: !3, file: !3, line: 1564, type: !6162, scopeLine: 1565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7069 = !DILocalVariable(name: "dev", arg: 1, scope: !7068, file: !3, line: 1564, type: !174)
!7070 = !DILocation(line: 1564, column: 45, scope: !7068)
!7071 = !DILocalVariable(name: "data", arg: 2, scope: !7068, file: !3, line: 1564, type: !162)
!7072 = !DILocation(line: 1564, column: 56, scope: !7068)
!7073 = !DILocalVariable(name: "group_list", scope: !7068, file: !3, line: 1566, type: !171)
!7074 = !DILocation(line: 1566, column: 20, scope: !7068)
!7075 = !DILocation(line: 1566, column: 33, scope: !7068)
!7076 = !DILocalVariable(name: "group", scope: !7068, file: !3, line: 1567, type: !3650)
!7077 = !DILocation(line: 1567, column: 22, scope: !7068)
!7078 = !DILocalVariable(name: "ret", scope: !7068, file: !3, line: 1568, type: !135)
!7079 = !DILocation(line: 1568, column: 6, scope: !7068)
!7080 = !DILocation(line: 1571, column: 26, scope: !7068)
!7081 = !DILocation(line: 1571, column: 10, scope: !7068)
!7082 = !DILocation(line: 1571, column: 8, scope: !7068)
!7083 = !DILocation(line: 1572, column: 6, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 1572, column: 6)
!7085 = !DILocation(line: 1572, column: 6, scope: !7068)
!7086 = !DILocation(line: 1573, column: 19, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 1572, column: 13)
!7088 = !DILocation(line: 1573, column: 3, scope: !7087)
!7089 = !DILocation(line: 1574, column: 3, scope: !7087)
!7090 = !DILocation(line: 1577, column: 29, scope: !7068)
!7091 = !DILocation(line: 1577, column: 34, scope: !7068)
!7092 = !DILocation(line: 1577, column: 8, scope: !7068)
!7093 = !DILocation(line: 1577, column: 6, scope: !7068)
!7094 = !DILocation(line: 1578, column: 6, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 1578, column: 6)
!7096 = !DILocation(line: 1578, column: 10, scope: !7095)
!7097 = !DILocation(line: 1578, column: 6, scope: !7068)
!7098 = !DILocation(line: 1579, column: 7, scope: !7095)
!7099 = !DILocation(line: 1579, column: 3, scope: !7095)
!7100 = !DILocation(line: 1581, column: 9, scope: !7068)
!7101 = !DILocation(line: 1581, column: 2, scope: !7068)
!7102 = !DILocation(line: 1582, column: 1, scope: !7068)
!7103 = distinct !DISubprogram(name: "list_del_init", scope: !4641, file: !4641, line: 202, type: !4672, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7104 = !DILocalVariable(name: "entry", arg: 1, scope: !7103, file: !4641, line: 202, type: !171)
!7105 = !DILocation(line: 202, column: 52, scope: !7103)
!7106 = !DILocation(line: 204, column: 19, scope: !7103)
!7107 = !DILocation(line: 204, column: 2, scope: !7103)
!7108 = !DILocation(line: 205, column: 17, scope: !7103)
!7109 = !DILocation(line: 205, column: 2, scope: !7103)
!7110 = !DILocation(line: 206, column: 1, scope: !7103)
!7111 = distinct !DISubprogram(name: "probe_alloc_default_domain", scope: !3, file: !3, line: 1675, type: !7112, scopeLine: 1677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7112 = !DISubroutineType(types: !7113)
!7113 = !{null, !3395, !3650}
!7114 = !DILocalVariable(name: "bus", arg: 1, scope: !7111, file: !3, line: 1675, type: !3395)
!7115 = !DILocation(line: 1675, column: 57, scope: !7111)
!7116 = !DILocalVariable(name: "group", arg: 2, scope: !7111, file: !3, line: 1676, type: !3650)
!7117 = !DILocation(line: 1676, column: 32, scope: !7111)
!7118 = !DILocalVariable(name: "gtype", scope: !7111, file: !3, line: 1678, type: !7119)
!7119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__group_domain_type", file: !3, line: 1643, size: 128, elements: !7120)
!7120 = !{!7121, !7122}
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7119, file: !3, line: 1644, baseType: !174, size: 64)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7119, file: !3, line: 1645, baseType: !7, size: 32, offset: 64)
!7123 = !DILocation(line: 1678, column: 29, scope: !7111)
!7124 = !DILocation(line: 1680, column: 2, scope: !7111)
!7125 = !DILocation(line: 1683, column: 29, scope: !7111)
!7126 = !DILocation(line: 1683, column: 36, scope: !7111)
!7127 = !DILocation(line: 1683, column: 2, scope: !7111)
!7128 = !DILocation(line: 1686, column: 13, scope: !7129)
!7129 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 1686, column: 6)
!7130 = !DILocation(line: 1686, column: 7, scope: !7129)
!7131 = !DILocation(line: 1686, column: 6, scope: !7111)
!7132 = !DILocation(line: 1687, column: 16, scope: !7129)
!7133 = !DILocation(line: 1687, column: 9, scope: !7129)
!7134 = !DILocation(line: 1687, column: 14, scope: !7129)
!7135 = !DILocation(line: 1687, column: 3, scope: !7129)
!7136 = !DILocation(line: 1689, column: 35, scope: !7111)
!7137 = !DILocation(line: 1689, column: 40, scope: !7111)
!7138 = !DILocation(line: 1689, column: 53, scope: !7111)
!7139 = !DILocation(line: 1689, column: 2, scope: !7111)
!7140 = !DILocation(line: 1691, column: 1, scope: !7111)
!7141 = distinct !DISubprogram(name: "iommu_group_create_direct_mappings", scope: !3, file: !3, line: 1735, type: !6661, scopeLine: 1736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7142 = !DILocalVariable(name: "group", arg: 1, scope: !7141, file: !3, line: 1735, type: !3650)
!7143 = !DILocation(line: 1735, column: 67, scope: !7141)
!7144 = !DILocation(line: 1737, column: 36, scope: !7141)
!7145 = !DILocation(line: 1737, column: 43, scope: !7141)
!7146 = !DILocation(line: 1737, column: 9, scope: !7141)
!7147 = !DILocation(line: 1737, column: 2, scope: !7141)
!7148 = distinct !DISubprogram(name: "__iommu_group_dma_attach", scope: !3, file: !3, line: 1704, type: !6661, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7149 = !DILocalVariable(name: "group", arg: 1, scope: !7148, file: !3, line: 1704, type: !3650)
!7150 = !DILocation(line: 1704, column: 57, scope: !7148)
!7151 = !DILocation(line: 1706, column: 36, scope: !7148)
!7152 = !DILocation(line: 1706, column: 43, scope: !7148)
!7153 = !DILocation(line: 1706, column: 50, scope: !7148)
!7154 = !DILocation(line: 1706, column: 9, scope: !7148)
!7155 = !DILocation(line: 1706, column: 2, scope: !7148)
!7156 = distinct !DISubprogram(name: "__iommu_group_dma_finalize", scope: !3, file: !3, line: 1720, type: !4921, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7157 = !DILocalVariable(name: "group", arg: 1, scope: !7156, file: !3, line: 1720, type: !3650)
!7158 = !DILocation(line: 1720, column: 60, scope: !7156)
!7159 = !DILocation(line: 1722, column: 29, scope: !7156)
!7160 = !DILocation(line: 1722, column: 36, scope: !7156)
!7161 = !DILocation(line: 1722, column: 43, scope: !7156)
!7162 = !DILocation(line: 1722, column: 2, scope: !7156)
!7163 = !DILocation(line: 1724, column: 1, scope: !7156)
!7164 = distinct !DISubprogram(name: "bus_set_iommu", scope: !3, file: !3, line: 1831, type: !7165, scopeLine: 1832, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7165 = !DISubroutineType(types: !7166)
!7166 = !{!135, !3395, !3477}
!7167 = !DILocalVariable(name: "bus", arg: 1, scope: !7164, file: !3, line: 1831, type: !3395)
!7168 = !DILocation(line: 1831, column: 36, scope: !7164)
!7169 = !DILocalVariable(name: "ops", arg: 2, scope: !7164, file: !3, line: 1831, type: !3477)
!7170 = !DILocation(line: 1831, column: 65, scope: !7164)
!7171 = !DILocalVariable(name: "err", scope: !7164, file: !3, line: 1833, type: !135)
!7172 = !DILocation(line: 1833, column: 6, scope: !7164)
!7173 = !DILocation(line: 1835, column: 6, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 1835, column: 6)
!7175 = !DILocation(line: 1835, column: 10, scope: !7174)
!7176 = !DILocation(line: 1835, column: 6, scope: !7164)
!7177 = !DILocation(line: 1836, column: 3, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 1835, column: 19)
!7179 = !DILocation(line: 1836, column: 8, scope: !7178)
!7180 = !DILocation(line: 1836, column: 18, scope: !7178)
!7181 = !DILocation(line: 1837, column: 3, scope: !7178)
!7182 = !DILocation(line: 1840, column: 6, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 1840, column: 6)
!7184 = !DILocation(line: 1840, column: 11, scope: !7183)
!7185 = !DILocation(line: 1840, column: 21, scope: !7183)
!7186 = !DILocation(line: 1840, column: 6, scope: !7164)
!7187 = !DILocation(line: 1841, column: 3, scope: !7183)
!7188 = !DILocation(line: 1843, column: 19, scope: !7164)
!7189 = !DILocation(line: 1843, column: 2, scope: !7164)
!7190 = !DILocation(line: 1843, column: 7, scope: !7164)
!7191 = !DILocation(line: 1843, column: 17, scope: !7164)
!7192 = !DILocation(line: 1846, column: 23, scope: !7164)
!7193 = !DILocation(line: 1846, column: 28, scope: !7164)
!7194 = !DILocation(line: 1846, column: 8, scope: !7164)
!7195 = !DILocation(line: 1846, column: 6, scope: !7164)
!7196 = !DILocation(line: 1847, column: 6, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7164, file: !3, line: 1847, column: 6)
!7198 = !DILocation(line: 1847, column: 6, scope: !7164)
!7199 = !DILocation(line: 1848, column: 3, scope: !7197)
!7200 = !DILocation(line: 1848, column: 8, scope: !7197)
!7201 = !DILocation(line: 1848, column: 18, scope: !7197)
!7202 = !DILocation(line: 1850, column: 9, scope: !7164)
!7203 = !DILocation(line: 1850, column: 2, scope: !7164)
!7204 = !DILocation(line: 1851, column: 1, scope: !7164)
!7205 = distinct !DISubprogram(name: "iommu_bus_init", scope: !3, file: !3, line: 1785, type: !7165, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7206 = !DILocalVariable(name: "bus", arg: 1, scope: !7205, file: !3, line: 1785, type: !3395)
!7207 = !DILocation(line: 1785, column: 44, scope: !7205)
!7208 = !DILocalVariable(name: "ops", arg: 2, scope: !7205, file: !3, line: 1785, type: !3477)
!7209 = !DILocation(line: 1785, column: 73, scope: !7205)
!7210 = !DILocalVariable(name: "nb", scope: !7205, file: !3, line: 1787, type: !3663)
!7211 = !DILocation(line: 1787, column: 25, scope: !7205)
!7212 = !DILocalVariable(name: "err", scope: !7205, file: !3, line: 1788, type: !135)
!7213 = !DILocation(line: 1788, column: 6, scope: !7205)
!7214 = !DILocation(line: 1790, column: 7, scope: !7205)
!7215 = !DILocation(line: 1790, column: 5, scope: !7205)
!7216 = !DILocation(line: 1791, column: 7, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 1791, column: 6)
!7218 = !DILocation(line: 1791, column: 6, scope: !7205)
!7219 = !DILocation(line: 1792, column: 3, scope: !7217)
!7220 = !DILocation(line: 1794, column: 2, scope: !7205)
!7221 = !DILocation(line: 1794, column: 6, scope: !7205)
!7222 = !DILocation(line: 1794, column: 20, scope: !7205)
!7223 = !DILocation(line: 1796, column: 30, scope: !7205)
!7224 = !DILocation(line: 1796, column: 35, scope: !7205)
!7225 = !DILocation(line: 1796, column: 8, scope: !7205)
!7226 = !DILocation(line: 1796, column: 6, scope: !7205)
!7227 = !DILocation(line: 1797, column: 6, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 1797, column: 6)
!7229 = !DILocation(line: 1797, column: 6, scope: !7205)
!7230 = !DILocation(line: 1798, column: 3, scope: !7228)
!7231 = !DILocation(line: 1800, column: 24, scope: !7205)
!7232 = !DILocation(line: 1800, column: 8, scope: !7205)
!7233 = !DILocation(line: 1800, column: 6, scope: !7205)
!7234 = !DILocation(line: 1801, column: 6, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 1801, column: 6)
!7236 = !DILocation(line: 1801, column: 6, scope: !7205)
!7237 = !DILocation(line: 1802, column: 3, scope: !7235)
!7238 = !DILocation(line: 1805, column: 2, scope: !7205)
!7239 = !DILabel(scope: !7205, name: "out_err", file: !3, line: 1807)
!7240 = !DILocation(line: 1807, column: 1, scope: !7205)
!7241 = !DILocation(line: 1809, column: 19, scope: !7205)
!7242 = !DILocation(line: 1809, column: 2, scope: !7205)
!7243 = !DILocation(line: 1810, column: 26, scope: !7205)
!7244 = !DILocation(line: 1810, column: 31, scope: !7205)
!7245 = !DILocation(line: 1810, column: 2, scope: !7205)
!7246 = !DILabel(scope: !7205, name: "out_free", file: !3, line: 1812)
!7247 = !DILocation(line: 1812, column: 1, scope: !7205)
!7248 = !DILocation(line: 1813, column: 8, scope: !7205)
!7249 = !DILocation(line: 1813, column: 2, scope: !7205)
!7250 = !DILocation(line: 1815, column: 9, scope: !7205)
!7251 = !DILocation(line: 1815, column: 2, scope: !7205)
!7252 = !DILocation(line: 1816, column: 1, scope: !7205)
!7253 = distinct !DISubprogram(name: "iommu_present", scope: !3, file: !3, line: 1854, type: !7254, scopeLine: 1855, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{!451, !3395}
!7256 = !DILocalVariable(name: "bus", arg: 1, scope: !7253, file: !3, line: 1854, type: !3395)
!7257 = !DILocation(line: 1854, column: 37, scope: !7253)
!7258 = !DILocation(line: 1856, column: 9, scope: !7253)
!7259 = !DILocation(line: 1856, column: 14, scope: !7253)
!7260 = !DILocation(line: 1856, column: 24, scope: !7253)
!7261 = !DILocation(line: 1856, column: 2, scope: !7253)
!7262 = distinct !DISubprogram(name: "iommu_capable", scope: !3, file: !3, line: 1860, type: !7263, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!451, !3395, !5}
!7265 = !DILocalVariable(name: "bus", arg: 1, scope: !7262, file: !3, line: 1860, type: !3395)
!7266 = !DILocation(line: 1860, column: 37, scope: !7262)
!7267 = !DILocalVariable(name: "cap", arg: 2, scope: !7262, file: !3, line: 1860, type: !5)
!7268 = !DILocation(line: 1860, column: 57, scope: !7262)
!7269 = !DILocation(line: 1862, column: 7, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 1862, column: 6)
!7271 = !DILocation(line: 1862, column: 12, scope: !7270)
!7272 = !DILocation(line: 1862, column: 22, scope: !7270)
!7273 = !DILocation(line: 1862, column: 26, scope: !7270)
!7274 = !DILocation(line: 1862, column: 31, scope: !7270)
!7275 = !DILocation(line: 1862, column: 42, scope: !7270)
!7276 = !DILocation(line: 1862, column: 6, scope: !7262)
!7277 = !DILocation(line: 1863, column: 3, scope: !7270)
!7278 = !DILocation(line: 1865, column: 9, scope: !7262)
!7279 = !DILocation(line: 1865, column: 14, scope: !7262)
!7280 = !DILocation(line: 1865, column: 25, scope: !7262)
!7281 = !DILocation(line: 1865, column: 33, scope: !7262)
!7282 = !DILocation(line: 1865, column: 2, scope: !7262)
!7283 = !DILocation(line: 1866, column: 1, scope: !7262)
!7284 = distinct !DISubprogram(name: "iommu_set_fault_handler", scope: !3, file: !3, line: 1881, type: !7285, scopeLine: 1884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7285 = !DISubroutineType(types: !7286)
!7286 = !{null, !3489, !3496, !162}
!7287 = !DILocalVariable(name: "domain", arg: 1, scope: !7284, file: !3, line: 1881, type: !3489)
!7288 = !DILocation(line: 1881, column: 51, scope: !7284)
!7289 = !DILocalVariable(name: "handler", arg: 2, scope: !7284, file: !3, line: 1882, type: !3496)
!7290 = !DILocation(line: 1882, column: 28, scope: !7284)
!7291 = !DILocalVariable(name: "token", arg: 3, scope: !7284, file: !3, line: 1883, type: !162)
!7292 = !DILocation(line: 1883, column: 12, scope: !7284)
!7293 = !DILocation(line: 1885, column: 2, scope: !7284)
!7294 = !DILocation(line: 1885, column: 2, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7296, file: !3, line: 1885, column: 2)
!7296 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 1885, column: 2)
!7297 = !DILocation(line: 1885, column: 2, scope: !7296)
!7298 = !DILocation(line: 1885, column: 2, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 1885, column: 2)
!7300 = !DILocation(line: 1885, column: 2, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 1885, column: 2)
!7302 = !DILocation(line: 1885, column: 2, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 1885, column: 2)
!7304 = !{i32 -2141336213, i32 -2141336184, i32 -2141336138, i32 -2141336080, i32 -2141336026, i32 -2141335972, i32 -2141335917, i32 -2141335886}
!7305 = !DILocation(line: 1885, column: 2, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 1885, column: 2)
!7307 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 1885, column: 2)
!7308 = !{i32 -2141335441, i32 -2141335434, i32 -2141335380, i32 -2141335349, i32 -2141335319}
!7309 = !DILocation(line: 1885, column: 2, scope: !7307)
!7310 = !DILocation(line: 1887, column: 20, scope: !7284)
!7311 = !DILocation(line: 1887, column: 2, scope: !7284)
!7312 = !DILocation(line: 1887, column: 10, scope: !7284)
!7313 = !DILocation(line: 1887, column: 18, scope: !7284)
!7314 = !DILocation(line: 1888, column: 26, scope: !7284)
!7315 = !DILocation(line: 1888, column: 2, scope: !7284)
!7316 = !DILocation(line: 1888, column: 10, scope: !7284)
!7317 = !DILocation(line: 1888, column: 24, scope: !7284)
!7318 = !DILocation(line: 1889, column: 1, scope: !7284)
!7319 = distinct !DISubprogram(name: "iommu_domain_alloc", scope: !3, file: !3, line: 1912, type: !7320, scopeLine: 1913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7320 = !DISubroutineType(types: !7321)
!7321 = !{!3489, !3395}
!7322 = !DILocalVariable(name: "bus", arg: 1, scope: !7319, file: !3, line: 1912, type: !3395)
!7323 = !DILocation(line: 1912, column: 58, scope: !7319)
!7324 = !DILocation(line: 1914, column: 30, scope: !7319)
!7325 = !DILocation(line: 1914, column: 9, scope: !7319)
!7326 = !DILocation(line: 1914, column: 2, scope: !7319)
!7327 = distinct !DISubprogram(name: "__iommu_domain_alloc", scope: !3, file: !3, line: 1892, type: !7328, scopeLine: 1894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{!3489, !3395, !7}
!7330 = !DILocalVariable(name: "bus", arg: 1, scope: !7327, file: !3, line: 1892, type: !3395)
!7331 = !DILocation(line: 1892, column: 67, scope: !7327)
!7332 = !DILocalVariable(name: "type", arg: 2, scope: !7327, file: !3, line: 1893, type: !7)
!7333 = !DILocation(line: 1893, column: 17, scope: !7327)
!7334 = !DILocalVariable(name: "domain", scope: !7327, file: !3, line: 1895, type: !3489)
!7335 = !DILocation(line: 1895, column: 23, scope: !7327)
!7336 = !DILocation(line: 1897, column: 6, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1897, column: 6)
!7338 = !DILocation(line: 1897, column: 10, scope: !7337)
!7339 = !DILocation(line: 1897, column: 18, scope: !7337)
!7340 = !DILocation(line: 1897, column: 21, scope: !7337)
!7341 = !DILocation(line: 1897, column: 26, scope: !7337)
!7342 = !DILocation(line: 1897, column: 36, scope: !7337)
!7343 = !DILocation(line: 1897, column: 6, scope: !7327)
!7344 = !DILocation(line: 1898, column: 3, scope: !7337)
!7345 = !DILocation(line: 1900, column: 11, scope: !7327)
!7346 = !DILocation(line: 1900, column: 16, scope: !7327)
!7347 = !DILocation(line: 1900, column: 27, scope: !7327)
!7348 = !DILocation(line: 1900, column: 40, scope: !7327)
!7349 = !DILocation(line: 1900, column: 9, scope: !7327)
!7350 = !DILocation(line: 1901, column: 7, scope: !7351)
!7351 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1901, column: 6)
!7352 = !DILocation(line: 1901, column: 6, scope: !7327)
!7353 = !DILocation(line: 1902, column: 3, scope: !7351)
!7354 = !DILocation(line: 1904, column: 17, scope: !7327)
!7355 = !DILocation(line: 1904, column: 22, scope: !7327)
!7356 = !DILocation(line: 1904, column: 2, scope: !7327)
!7357 = !DILocation(line: 1904, column: 10, scope: !7327)
!7358 = !DILocation(line: 1904, column: 15, scope: !7327)
!7359 = !DILocation(line: 1905, column: 17, scope: !7327)
!7360 = !DILocation(line: 1905, column: 2, scope: !7327)
!7361 = !DILocation(line: 1905, column: 10, scope: !7327)
!7362 = !DILocation(line: 1905, column: 15, scope: !7327)
!7363 = !DILocation(line: 1907, column: 27, scope: !7327)
!7364 = !DILocation(line: 1907, column: 32, scope: !7327)
!7365 = !DILocation(line: 1907, column: 43, scope: !7327)
!7366 = !DILocation(line: 1907, column: 2, scope: !7327)
!7367 = !DILocation(line: 1907, column: 10, scope: !7327)
!7368 = !DILocation(line: 1907, column: 25, scope: !7327)
!7369 = !DILocation(line: 1909, column: 9, scope: !7327)
!7370 = !DILocation(line: 1909, column: 2, scope: !7327)
!7371 = !DILocation(line: 1910, column: 1, scope: !7327)
!7372 = distinct !DISubprogram(name: "iommu_domain_free", scope: !3, file: !3, line: 1918, type: !3510, scopeLine: 1919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7373 = !DILocalVariable(name: "domain", arg: 1, scope: !7372, file: !3, line: 1918, type: !3489)
!7374 = !DILocation(line: 1918, column: 45, scope: !7372)
!7375 = !DILocation(line: 1920, column: 2, scope: !7372)
!7376 = !DILocation(line: 1920, column: 10, scope: !7372)
!7377 = !DILocation(line: 1920, column: 15, scope: !7372)
!7378 = !DILocation(line: 1920, column: 27, scope: !7372)
!7379 = !DILocation(line: 1921, column: 1, scope: !7372)
!7380 = distinct !DISubprogram(name: "iommu_attach_device", scope: !3, file: !3, line: 1938, type: !3514, scopeLine: 1939, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7381 = !DILocalVariable(name: "domain", arg: 1, scope: !7380, file: !3, line: 1938, type: !3489)
!7382 = !DILocation(line: 1938, column: 46, scope: !7380)
!7383 = !DILocalVariable(name: "dev", arg: 2, scope: !7380, file: !3, line: 1938, type: !174)
!7384 = !DILocation(line: 1938, column: 69, scope: !7380)
!7385 = !DILocalVariable(name: "group", scope: !7380, file: !3, line: 1940, type: !3650)
!7386 = !DILocation(line: 1940, column: 22, scope: !7380)
!7387 = !DILocalVariable(name: "ret", scope: !7380, file: !3, line: 1941, type: !135)
!7388 = !DILocation(line: 1941, column: 6, scope: !7380)
!7389 = !DILocation(line: 1943, column: 26, scope: !7380)
!7390 = !DILocation(line: 1943, column: 10, scope: !7380)
!7391 = !DILocation(line: 1943, column: 8, scope: !7380)
!7392 = !DILocation(line: 1944, column: 7, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1944, column: 6)
!7394 = !DILocation(line: 1944, column: 6, scope: !7380)
!7395 = !DILocation(line: 1945, column: 3, scope: !7393)
!7396 = !DILocation(line: 1951, column: 14, scope: !7380)
!7397 = !DILocation(line: 1951, column: 21, scope: !7380)
!7398 = !DILocation(line: 1951, column: 2, scope: !7380)
!7399 = !DILocation(line: 1952, column: 6, scope: !7380)
!7400 = !DILocation(line: 1953, column: 31, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7380, file: !3, line: 1953, column: 6)
!7402 = !DILocation(line: 1953, column: 6, scope: !7401)
!7403 = !DILocation(line: 1953, column: 38, scope: !7401)
!7404 = !DILocation(line: 1953, column: 6, scope: !7380)
!7405 = !DILocation(line: 1954, column: 3, scope: !7401)
!7406 = !DILocation(line: 1956, column: 29, scope: !7380)
!7407 = !DILocation(line: 1956, column: 37, scope: !7380)
!7408 = !DILocation(line: 1956, column: 8, scope: !7380)
!7409 = !DILocation(line: 1956, column: 6, scope: !7380)
!7410 = !DILocation(line: 1956, column: 2, scope: !7380)
!7411 = !DILabel(scope: !7380, name: "out_unlock", file: !3, line: 1958)
!7412 = !DILocation(line: 1958, column: 1, scope: !7380)
!7413 = !DILocation(line: 1959, column: 16, scope: !7380)
!7414 = !DILocation(line: 1959, column: 23, scope: !7380)
!7415 = !DILocation(line: 1959, column: 2, scope: !7380)
!7416 = !DILocation(line: 1960, column: 18, scope: !7380)
!7417 = !DILocation(line: 1960, column: 2, scope: !7380)
!7418 = !DILocation(line: 1962, column: 9, scope: !7380)
!7419 = !DILocation(line: 1962, column: 2, scope: !7380)
!7420 = !DILocation(line: 1963, column: 1, scope: !7380)
!7421 = distinct !DISubprogram(name: "iommu_group_device_count", scope: !3, file: !3, line: 913, type: !6661, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7422 = !DILocalVariable(name: "group", arg: 1, scope: !7421, file: !3, line: 913, type: !3650)
!7423 = !DILocation(line: 913, column: 57, scope: !7421)
!7424 = !DILocalVariable(name: "entry", scope: !7421, file: !3, line: 915, type: !163)
!7425 = !DILocation(line: 915, column: 23, scope: !7421)
!7426 = !DILocalVariable(name: "ret", scope: !7421, file: !3, line: 916, type: !135)
!7427 = !DILocation(line: 916, column: 6, scope: !7421)
!7428 = !DILocalVariable(name: "__mptr", scope: !7429, file: !3, line: 918, type: !162)
!7429 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 918, column: 2)
!7430 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 918, column: 2)
!7431 = !DILocation(line: 918, column: 2, scope: !7429)
!7432 = !DILocation(line: 918, column: 2, scope: !7433)
!7433 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 918, column: 2)
!7434 = !DILocation(line: 918, column: 2, scope: !7430)
!7435 = !DILocation(line: 918, column: 2, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7430, file: !3, line: 918, column: 2)
!7437 = !DILocation(line: 919, column: 6, scope: !7436)
!7438 = !DILocation(line: 919, column: 3, scope: !7436)
!7439 = !DILocalVariable(name: "__mptr", scope: !7440, file: !3, line: 918, type: !162)
!7440 = distinct !DILexicalBlock(scope: !7436, file: !3, line: 918, column: 2)
!7441 = !DILocation(line: 918, column: 2, scope: !7440)
!7442 = !DILocation(line: 918, column: 2, scope: !7443)
!7443 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 918, column: 2)
!7444 = distinct !{!7444, !7434, !7445}
!7445 = !DILocation(line: 919, column: 6, scope: !7430)
!7446 = !DILocation(line: 921, column: 9, scope: !7421)
!7447 = !DILocation(line: 921, column: 2, scope: !7421)
!7448 = distinct !DISubprogram(name: "__iommu_attach_group", scope: !3, file: !3, line: 2254, type: !7449, scopeLine: 2256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7449 = !DISubroutineType(types: !7450)
!7450 = !{!135, !3489, !3650}
!7451 = !DILocalVariable(name: "domain", arg: 1, scope: !7448, file: !3, line: 2254, type: !3489)
!7452 = !DILocation(line: 2254, column: 54, scope: !7448)
!7453 = !DILocalVariable(name: "group", arg: 2, scope: !7448, file: !3, line: 2255, type: !3650)
!7454 = !DILocation(line: 2255, column: 25, scope: !7448)
!7455 = !DILocalVariable(name: "ret", scope: !7448, file: !3, line: 2257, type: !135)
!7456 = !DILocation(line: 2257, column: 6, scope: !7448)
!7457 = !DILocation(line: 2259, column: 6, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 2259, column: 6)
!7459 = !DILocation(line: 2259, column: 13, scope: !7458)
!7460 = !DILocation(line: 2259, column: 28, scope: !7458)
!7461 = !DILocation(line: 2259, column: 31, scope: !7458)
!7462 = !DILocation(line: 2259, column: 38, scope: !7458)
!7463 = !DILocation(line: 2259, column: 48, scope: !7458)
!7464 = !DILocation(line: 2259, column: 55, scope: !7458)
!7465 = !DILocation(line: 2259, column: 45, scope: !7458)
!7466 = !DILocation(line: 2259, column: 6, scope: !7448)
!7467 = !DILocation(line: 2260, column: 3, scope: !7458)
!7468 = !DILocation(line: 2262, column: 35, scope: !7448)
!7469 = !DILocation(line: 2262, column: 42, scope: !7448)
!7470 = !DILocation(line: 2262, column: 8, scope: !7448)
!7471 = !DILocation(line: 2262, column: 6, scope: !7448)
!7472 = !DILocation(line: 2264, column: 6, scope: !7473)
!7473 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 2264, column: 6)
!7474 = !DILocation(line: 2264, column: 10, scope: !7473)
!7475 = !DILocation(line: 2264, column: 6, scope: !7448)
!7476 = !DILocation(line: 2265, column: 19, scope: !7473)
!7477 = !DILocation(line: 2265, column: 3, scope: !7473)
!7478 = !DILocation(line: 2265, column: 10, scope: !7473)
!7479 = !DILocation(line: 2265, column: 17, scope: !7473)
!7480 = !DILocation(line: 2267, column: 9, scope: !7448)
!7481 = !DILocation(line: 2267, column: 2, scope: !7448)
!7482 = !DILocation(line: 2268, column: 1, scope: !7448)
!7483 = distinct !DISubprogram(name: "iommu_uapi_cache_invalidate", scope: !3, file: !3, line: 2022, type: !7484, scopeLine: 2024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7484 = !DISubroutineType(types: !7485)
!7485 = !{!135, !3489, !174, !162}
!7486 = !DILocalVariable(name: "addr", arg: 1, scope: !7487, file: !7488, line: 138, type: !2093)
!7487 = distinct !DISubprogram(name: "check_copy_size", scope: !7488, file: !7488, line: 138, type: !7489, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7488 = !DIFile(filename: "./include/linux/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!7489 = !DISubroutineType(types: !7490)
!7490 = !{!451, !2093, !282, !451}
!7491 = !DILocation(line: 138, column: 29, scope: !7487, inlinedAt: !7492)
!7492 = distinct !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7498)
!7493 = distinct !DILexicalBlock(scope: !7495, file: !7494, line: 191, column: 6)
!7494 = !DIFile(filename: "./include/linux/uaccess.h", directory: "/home/lizy2001/genbc/linux")
!7495 = distinct !DISubprogram(name: "copy_from_user", scope: !7494, file: !7494, line: 189, type: !7496, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7496 = !DISubroutineType(types: !7497)
!7497 = !{!285, !162, !2093, !285}
!7498 = distinct !DILocation(line: 2061, column: 6, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2061, column: 6)
!7500 = !DILocalVariable(name: "bytes", arg: 2, scope: !7487, file: !7488, line: 138, type: !282)
!7501 = !DILocation(line: 138, column: 42, scope: !7487, inlinedAt: !7492)
!7502 = !DILocalVariable(name: "is_source", arg: 3, scope: !7487, file: !7488, line: 138, type: !451)
!7503 = !DILocation(line: 138, column: 54, scope: !7487, inlinedAt: !7492)
!7504 = !DILocalVariable(name: "sz", scope: !7487, file: !7488, line: 140, type: !135)
!7505 = !DILocation(line: 140, column: 6, scope: !7487, inlinedAt: !7492)
!7506 = !DILocalVariable(name: "__ret_warn_on", scope: !7507, file: !7488, line: 150, type: !135)
!7507 = distinct !DILexicalBlock(scope: !7508, file: !7488, line: 150, column: 6)
!7508 = distinct !DILexicalBlock(scope: !7487, file: !7488, line: 150, column: 6)
!7509 = !DILocation(line: 150, column: 6, scope: !7507, inlinedAt: !7492)
!7510 = !DILocalVariable(name: "to", arg: 1, scope: !7495, file: !7494, line: 189, type: !162)
!7511 = !DILocation(line: 189, column: 22, scope: !7495, inlinedAt: !7498)
!7512 = !DILocalVariable(name: "from", arg: 2, scope: !7495, file: !7494, line: 189, type: !2093)
!7513 = !DILocation(line: 189, column: 45, scope: !7495, inlinedAt: !7498)
!7514 = !DILocalVariable(name: "n", arg: 3, scope: !7495, file: !7494, line: 189, type: !285)
!7515 = !DILocation(line: 189, column: 65, scope: !7495, inlinedAt: !7498)
!7516 = !DILocation(line: 138, column: 29, scope: !7487, inlinedAt: !7517)
!7517 = distinct !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7518)
!7518 = distinct !DILocation(line: 2039, column: 6, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2039, column: 6)
!7520 = !DILocation(line: 138, column: 42, scope: !7487, inlinedAt: !7517)
!7521 = !DILocation(line: 138, column: 54, scope: !7487, inlinedAt: !7517)
!7522 = !DILocation(line: 140, column: 6, scope: !7487, inlinedAt: !7517)
!7523 = !DILocation(line: 150, column: 6, scope: !7507, inlinedAt: !7517)
!7524 = !DILocation(line: 189, column: 22, scope: !7495, inlinedAt: !7518)
!7525 = !DILocation(line: 189, column: 45, scope: !7495, inlinedAt: !7518)
!7526 = !DILocation(line: 189, column: 65, scope: !7495, inlinedAt: !7518)
!7527 = !DILocalVariable(name: "domain", arg: 1, scope: !7483, file: !3, line: 2022, type: !3489)
!7528 = !DILocation(line: 2022, column: 54, scope: !7483)
!7529 = !DILocalVariable(name: "dev", arg: 2, scope: !7483, file: !3, line: 2022, type: !174)
!7530 = !DILocation(line: 2022, column: 77, scope: !7483)
!7531 = !DILocalVariable(name: "uinfo", arg: 3, scope: !7483, file: !3, line: 2023, type: !162)
!7532 = !DILocation(line: 2023, column: 18, scope: !7483)
!7533 = !DILocalVariable(name: "inv_info", scope: !7483, file: !3, line: 2025, type: !3832)
!7534 = !DILocation(line: 2025, column: 37, scope: !7483)
!7535 = !DILocalVariable(name: "minsz", scope: !7483, file: !3, line: 2026, type: !376)
!7536 = !DILocation(line: 2026, column: 6, scope: !7483)
!7537 = !DILocalVariable(name: "ret", scope: !7483, file: !3, line: 2027, type: !135)
!7538 = !DILocation(line: 2027, column: 6, scope: !7483)
!7539 = !DILocation(line: 2029, column: 6, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2029, column: 6)
!7541 = !DILocation(line: 2029, column: 6, scope: !7483)
!7542 = !DILocation(line: 2030, column: 3, scope: !7540)
!7543 = !DILocation(line: 2036, column: 8, scope: !7483)
!7544 = !DILocation(line: 2039, column: 21, scope: !7519)
!7545 = !DILocation(line: 2039, column: 32, scope: !7519)
!7546 = !DILocation(line: 2039, column: 39, scope: !7519)
!7547 = !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7518)
!7548 = !DILocation(line: 141, column: 6, scope: !7549, inlinedAt: !7517)
!7549 = distinct !DILexicalBlock(scope: !7487, file: !7488, line: 141, column: 6)
!7550 = !DILocation(line: 0, scope: !7549, inlinedAt: !7517)
!7551 = !DILocation(line: 141, column: 6, scope: !7487, inlinedAt: !7517)
!7552 = !DILocation(line: 142, column: 29, scope: !7553, inlinedAt: !7517)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !7488, line: 142, column: 7)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !7488, line: 141, column: 39)
!7555 = !DILocation(line: 142, column: 8, scope: !7553, inlinedAt: !7517)
!7556 = !DILocation(line: 142, column: 7, scope: !7554, inlinedAt: !7517)
!7557 = !DILocation(line: 143, column: 18, scope: !7553, inlinedAt: !7517)
!7558 = !DILocation(line: 143, column: 22, scope: !7553, inlinedAt: !7517)
!7559 = !DILocation(line: 143, column: 4, scope: !7553, inlinedAt: !7517)
!7560 = !DILocation(line: 144, column: 12, scope: !7561, inlinedAt: !7517)
!7561 = distinct !DILexicalBlock(scope: !7553, file: !7488, line: 144, column: 12)
!7562 = !DILocation(line: 144, column: 12, scope: !7553, inlinedAt: !7517)
!7563 = !DILocation(line: 145, column: 4, scope: !7561, inlinedAt: !7517)
!7564 = !DILocation(line: 147, column: 4, scope: !7561, inlinedAt: !7517)
!7565 = !DILocation(line: 148, column: 3, scope: !7554, inlinedAt: !7517)
!7566 = !DILocation(line: 150, column: 6, scope: !7567, inlinedAt: !7517)
!7567 = distinct !DILexicalBlock(scope: !7507, file: !7488, line: 150, column: 6)
!7568 = !DILocation(line: 150, column: 6, scope: !7569, inlinedAt: !7517)
!7569 = distinct !DILexicalBlock(scope: !7570, file: !7488, line: 150, column: 6)
!7570 = distinct !DILexicalBlock(scope: !7567, file: !7488, line: 150, column: 6)
!7571 = !{i32 -2145469316, i32 -2145469287, i32 -2145469241, i32 -2145469183, i32 -2145469129, i32 -2145469075, i32 -2145469020, i32 -2145468989}
!7572 = !DILocation(line: 150, column: 6, scope: !7573, inlinedAt: !7517)
!7573 = distinct !DILexicalBlock(scope: !7570, file: !7488, line: 150, column: 6)
!7574 = !{i32 -2145468569, i32 -2145468562, i32 -2145468510, i32 -2145468479, i32 -2145468449}
!7575 = !DILocation(line: 150, column: 6, scope: !7570, inlinedAt: !7517)
!7576 = !DILocation(line: 150, column: 6, scope: !7508, inlinedAt: !7517)
!7577 = !DILocation(line: 150, column: 6, scope: !7487, inlinedAt: !7517)
!7578 = !DILocation(line: 151, column: 3, scope: !7508, inlinedAt: !7517)
!7579 = !DILocation(line: 152, column: 20, scope: !7487, inlinedAt: !7517)
!7580 = !DILocation(line: 152, column: 26, scope: !7487, inlinedAt: !7517)
!7581 = !DILocation(line: 152, column: 33, scope: !7487, inlinedAt: !7517)
!7582 = !DILocation(line: 152, column: 2, scope: !7487, inlinedAt: !7517)
!7583 = !DILocation(line: 153, column: 2, scope: !7487, inlinedAt: !7517)
!7584 = !DILocation(line: 154, column: 1, scope: !7487, inlinedAt: !7517)
!7585 = !DILocation(line: 191, column: 6, scope: !7495, inlinedAt: !7518)
!7586 = !DILocation(line: 192, column: 23, scope: !7493, inlinedAt: !7518)
!7587 = !DILocation(line: 192, column: 27, scope: !7493, inlinedAt: !7518)
!7588 = !DILocation(line: 192, column: 33, scope: !7493, inlinedAt: !7518)
!7589 = !DILocation(line: 192, column: 7, scope: !7493, inlinedAt: !7518)
!7590 = !DILocation(line: 192, column: 5, scope: !7493, inlinedAt: !7518)
!7591 = !DILocation(line: 192, column: 3, scope: !7493, inlinedAt: !7518)
!7592 = !DILocation(line: 193, column: 9, scope: !7495, inlinedAt: !7518)
!7593 = !DILocation(line: 2039, column: 6, scope: !7519)
!7594 = !DILocation(line: 2039, column: 6, scope: !7483)
!7595 = !DILocation(line: 2040, column: 3, scope: !7519)
!7596 = !DILocation(line: 2043, column: 15, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2043, column: 6)
!7598 = !DILocation(line: 2043, column: 23, scope: !7597)
!7599 = !DILocation(line: 2043, column: 21, scope: !7597)
!7600 = !DILocation(line: 2043, column: 6, scope: !7483)
!7601 = !DILocation(line: 2044, column: 3, scope: !7597)
!7602 = !DILocation(line: 2047, column: 15, scope: !7603)
!7603 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2047, column: 6)
!7604 = !DILocation(line: 2047, column: 6, scope: !7603)
!7605 = !DILocation(line: 2047, column: 27, scope: !7603)
!7606 = !DILocation(line: 2047, column: 52, scope: !7603)
!7607 = !DILocation(line: 2048, column: 15, scope: !7603)
!7608 = !DILocation(line: 2048, column: 6, scope: !7603)
!7609 = !DILocation(line: 2048, column: 21, scope: !7603)
!7610 = !DILocation(line: 2047, column: 6, scope: !7483)
!7611 = !DILocation(line: 2049, column: 3, scope: !7603)
!7612 = !DILocation(line: 2051, column: 15, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2051, column: 6)
!7614 = !DILocation(line: 2051, column: 6, scope: !7613)
!7615 = !DILocation(line: 2051, column: 27, scope: !7613)
!7616 = !DILocation(line: 2051, column: 51, scope: !7613)
!7617 = !DILocation(line: 2052, column: 15, scope: !7613)
!7618 = !DILocation(line: 2052, column: 6, scope: !7613)
!7619 = !DILocation(line: 2052, column: 21, scope: !7613)
!7620 = !DILocation(line: 2051, column: 6, scope: !7483)
!7621 = !DILocation(line: 2053, column: 3, scope: !7613)
!7622 = !DILocation(line: 2061, column: 21, scope: !7499)
!7623 = !DILocation(line: 2061, column: 41, scope: !7499)
!7624 = !DILocation(line: 2061, column: 39, scope: !7499)
!7625 = !DILocation(line: 2061, column: 48, scope: !7499)
!7626 = !DILocation(line: 2061, column: 56, scope: !7499)
!7627 = !DILocation(line: 2061, column: 54, scope: !7499)
!7628 = !DILocalVariable(name: "__UNIQUE_ID___x278", scope: !7629, file: !3, line: 2062, type: !376)
!7629 = distinct !DILexicalBlock(scope: !7499, file: !3, line: 2062, column: 7)
!7630 = !DILocation(line: 2062, column: 7, scope: !7629)
!7631 = !DILocalVariable(name: "__UNIQUE_ID___y279", scope: !7629, file: !3, line: 2062, type: !376)
!7632 = !DILocation(line: 2062, column: 54, scope: !7499)
!7633 = !DILocation(line: 2062, column: 52, scope: !7499)
!7634 = !DILocation(line: 2062, column: 7, scope: !7499)
!7635 = !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7498)
!7636 = !DILocation(line: 141, column: 6, scope: !7549, inlinedAt: !7492)
!7637 = !DILocation(line: 0, scope: !7549, inlinedAt: !7492)
!7638 = !DILocation(line: 141, column: 6, scope: !7487, inlinedAt: !7492)
!7639 = !DILocation(line: 142, column: 29, scope: !7553, inlinedAt: !7492)
!7640 = !DILocation(line: 142, column: 8, scope: !7553, inlinedAt: !7492)
!7641 = !DILocation(line: 142, column: 7, scope: !7554, inlinedAt: !7492)
!7642 = !DILocation(line: 143, column: 18, scope: !7553, inlinedAt: !7492)
!7643 = !DILocation(line: 143, column: 22, scope: !7553, inlinedAt: !7492)
!7644 = !DILocation(line: 143, column: 4, scope: !7553, inlinedAt: !7492)
!7645 = !DILocation(line: 144, column: 12, scope: !7561, inlinedAt: !7492)
!7646 = !DILocation(line: 144, column: 12, scope: !7553, inlinedAt: !7492)
!7647 = !DILocation(line: 145, column: 4, scope: !7561, inlinedAt: !7492)
!7648 = !DILocation(line: 147, column: 4, scope: !7561, inlinedAt: !7492)
!7649 = !DILocation(line: 148, column: 3, scope: !7554, inlinedAt: !7492)
!7650 = !DILocation(line: 150, column: 6, scope: !7567, inlinedAt: !7492)
!7651 = !DILocation(line: 150, column: 6, scope: !7569, inlinedAt: !7492)
!7652 = !DILocation(line: 150, column: 6, scope: !7573, inlinedAt: !7492)
!7653 = !DILocation(line: 150, column: 6, scope: !7570, inlinedAt: !7492)
!7654 = !DILocation(line: 150, column: 6, scope: !7508, inlinedAt: !7492)
!7655 = !DILocation(line: 150, column: 6, scope: !7487, inlinedAt: !7492)
!7656 = !DILocation(line: 151, column: 3, scope: !7508, inlinedAt: !7492)
!7657 = !DILocation(line: 152, column: 20, scope: !7487, inlinedAt: !7492)
!7658 = !DILocation(line: 152, column: 26, scope: !7487, inlinedAt: !7492)
!7659 = !DILocation(line: 152, column: 33, scope: !7487, inlinedAt: !7492)
!7660 = !DILocation(line: 152, column: 2, scope: !7487, inlinedAt: !7492)
!7661 = !DILocation(line: 153, column: 2, scope: !7487, inlinedAt: !7492)
!7662 = !DILocation(line: 154, column: 1, scope: !7487, inlinedAt: !7492)
!7663 = !DILocation(line: 191, column: 6, scope: !7495, inlinedAt: !7498)
!7664 = !DILocation(line: 192, column: 23, scope: !7493, inlinedAt: !7498)
!7665 = !DILocation(line: 192, column: 27, scope: !7493, inlinedAt: !7498)
!7666 = !DILocation(line: 192, column: 33, scope: !7493, inlinedAt: !7498)
!7667 = !DILocation(line: 192, column: 7, scope: !7493, inlinedAt: !7498)
!7668 = !DILocation(line: 192, column: 5, scope: !7493, inlinedAt: !7498)
!7669 = !DILocation(line: 192, column: 3, scope: !7493, inlinedAt: !7498)
!7670 = !DILocation(line: 193, column: 9, scope: !7495, inlinedAt: !7498)
!7671 = !DILocation(line: 2061, column: 6, scope: !7499)
!7672 = !DILocation(line: 2061, column: 6, scope: !7483)
!7673 = !DILocation(line: 2063, column: 3, scope: !7499)
!7674 = !DILocation(line: 2066, column: 8, scope: !7483)
!7675 = !DILocation(line: 2066, column: 6, scope: !7483)
!7676 = !DILocation(line: 2067, column: 6, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 2067, column: 6)
!7678 = !DILocation(line: 2067, column: 6, scope: !7483)
!7679 = !DILocation(line: 2068, column: 10, scope: !7677)
!7680 = !DILocation(line: 2068, column: 3, scope: !7677)
!7681 = !DILocation(line: 2070, column: 9, scope: !7483)
!7682 = !DILocation(line: 2070, column: 17, scope: !7483)
!7683 = !DILocation(line: 2070, column: 22, scope: !7483)
!7684 = !DILocation(line: 2070, column: 39, scope: !7483)
!7685 = !DILocation(line: 2070, column: 47, scope: !7483)
!7686 = !DILocation(line: 2070, column: 2, scope: !7483)
!7687 = !DILocation(line: 2071, column: 1, scope: !7483)
!7688 = distinct !DISubprogram(name: "iommu_check_cache_invl_data", scope: !3, file: !3, line: 1971, type: !7689, scopeLine: 1972, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{!135, !3831}
!7691 = !DILocalVariable(name: "info", arg: 1, scope: !7688, file: !3, line: 1971, type: !3831)
!7692 = !DILocation(line: 1971, column: 76, scope: !7688)
!7693 = !DILocalVariable(name: "mask", scope: !7688, file: !3, line: 1973, type: !376)
!7694 = !DILocation(line: 1973, column: 6, scope: !7688)
!7695 = !DILocalVariable(name: "i", scope: !7688, file: !3, line: 1974, type: !135)
!7696 = !DILocation(line: 1974, column: 6, scope: !7688)
!7697 = !DILocation(line: 1976, column: 6, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1976, column: 6)
!7699 = !DILocation(line: 1976, column: 12, scope: !7698)
!7700 = !DILocation(line: 1976, column: 20, scope: !7698)
!7701 = !DILocation(line: 1976, column: 6, scope: !7688)
!7702 = !DILocation(line: 1977, column: 3, scope: !7698)
!7703 = !DILocation(line: 1979, column: 7, scope: !7688)
!7704 = !DILocation(line: 1980, column: 6, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1980, column: 6)
!7706 = !DILocation(line: 1980, column: 12, scope: !7705)
!7707 = !DILocation(line: 1980, column: 21, scope: !7705)
!7708 = !DILocation(line: 1980, column: 20, scope: !7705)
!7709 = !DILocation(line: 1980, column: 18, scope: !7705)
!7710 = !DILocation(line: 1980, column: 6, scope: !7688)
!7711 = !DILocation(line: 1981, column: 3, scope: !7705)
!7712 = !DILocation(line: 1983, column: 6, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1983, column: 6)
!7714 = !DILocation(line: 1983, column: 12, scope: !7713)
!7715 = !DILocation(line: 1983, column: 24, scope: !7713)
!7716 = !DILocation(line: 1983, column: 6, scope: !7688)
!7717 = !DILocation(line: 1984, column: 3, scope: !7713)
!7718 = !DILocation(line: 1986, column: 10, scope: !7688)
!7719 = !DILocation(line: 1986, column: 16, scope: !7688)
!7720 = !DILocation(line: 1986, column: 2, scope: !7688)
!7721 = !DILocation(line: 1988, column: 7, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 1988, column: 7)
!7723 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1986, column: 29)
!7724 = !DILocation(line: 1988, column: 13, scope: !7722)
!7725 = !DILocation(line: 1988, column: 19, scope: !7722)
!7726 = !DILocation(line: 1988, column: 7, scope: !7723)
!7727 = !DILocation(line: 1989, column: 4, scope: !7722)
!7728 = !DILocation(line: 1991, column: 8, scope: !7723)
!7729 = !DILocation(line: 1995, column: 7, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 1995, column: 7)
!7731 = !DILocation(line: 1995, column: 13, scope: !7730)
!7732 = !DILocation(line: 1995, column: 19, scope: !7730)
!7733 = !DILocation(line: 1995, column: 29, scope: !7730)
!7734 = !DILocation(line: 1995, column: 38, scope: !7730)
!7735 = !DILocation(line: 1995, column: 37, scope: !7730)
!7736 = !DILocation(line: 1995, column: 35, scope: !7730)
!7737 = !DILocation(line: 1995, column: 7, scope: !7723)
!7738 = !DILocation(line: 1996, column: 4, scope: !7730)
!7739 = !DILocation(line: 1997, column: 3, scope: !7723)
!7740 = !DILocation(line: 1999, column: 8, scope: !7723)
!7741 = !DILocation(line: 2001, column: 7, scope: !7742)
!7742 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 2001, column: 7)
!7743 = !DILocation(line: 2001, column: 13, scope: !7742)
!7744 = !DILocation(line: 2001, column: 19, scope: !7742)
!7745 = !DILocation(line: 2001, column: 30, scope: !7742)
!7746 = !DILocation(line: 2001, column: 39, scope: !7742)
!7747 = !DILocation(line: 2001, column: 38, scope: !7742)
!7748 = !DILocation(line: 2001, column: 36, scope: !7742)
!7749 = !DILocation(line: 2001, column: 7, scope: !7723)
!7750 = !DILocation(line: 2002, column: 4, scope: !7742)
!7751 = !DILocation(line: 2004, column: 3, scope: !7723)
!7752 = !DILocation(line: 2006, column: 7, scope: !7753)
!7753 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 2006, column: 7)
!7754 = !DILocation(line: 2006, column: 13, scope: !7753)
!7755 = !DILocation(line: 2006, column: 19, scope: !7753)
!7756 = !DILocation(line: 2006, column: 7, scope: !7723)
!7757 = !DILocation(line: 2007, column: 4, scope: !7753)
!7758 = !DILocation(line: 2008, column: 3, scope: !7723)
!7759 = !DILocation(line: 2010, column: 3, scope: !7723)
!7760 = !DILocation(line: 2014, column: 9, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 2014, column: 2)
!7762 = !DILocation(line: 2014, column: 7, scope: !7761)
!7763 = !DILocation(line: 2014, column: 14, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 2014, column: 2)
!7765 = !DILocation(line: 2014, column: 16, scope: !7764)
!7766 = !DILocation(line: 2014, column: 2, scope: !7761)
!7767 = !DILocation(line: 2015, column: 7, scope: !7768)
!7768 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 2015, column: 7)
!7769 = distinct !DILexicalBlock(scope: !7764, file: !3, line: 2014, column: 46)
!7770 = !DILocation(line: 2015, column: 13, scope: !7768)
!7771 = !DILocation(line: 2015, column: 21, scope: !7768)
!7772 = !DILocation(line: 2015, column: 7, scope: !7769)
!7773 = !DILocation(line: 2016, column: 4, scope: !7768)
!7774 = !DILocation(line: 2017, column: 2, scope: !7769)
!7775 = !DILocation(line: 2014, column: 42, scope: !7764)
!7776 = !DILocation(line: 2014, column: 2, scope: !7764)
!7777 = distinct !{!7777, !7766, !7778}
!7778 = !DILocation(line: 2017, column: 2, scope: !7761)
!7779 = !DILocation(line: 2019, column: 2, scope: !7688)
!7780 = !DILocation(line: 2020, column: 1, scope: !7688)
!7781 = distinct !DISubprogram(name: "iommu_uapi_sva_bind_gpasid", scope: !3, file: !3, line: 2132, type: !7484, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7782 = !DILocalVariable(name: "domain", arg: 1, scope: !7781, file: !3, line: 2132, type: !3489)
!7783 = !DILocation(line: 2132, column: 53, scope: !7781)
!7784 = !DILocalVariable(name: "dev", arg: 2, scope: !7781, file: !3, line: 2132, type: !174)
!7785 = !DILocation(line: 2132, column: 76, scope: !7781)
!7786 = !DILocalVariable(name: "udata", arg: 3, scope: !7781, file: !3, line: 2133, type: !162)
!7787 = !DILocation(line: 2133, column: 24, scope: !7781)
!7788 = !DILocalVariable(name: "data", scope: !7781, file: !3, line: 2135, type: !3863)
!7789 = !DILocation(line: 2135, column: 32, scope: !7781)
!7790 = !DILocalVariable(name: "ret", scope: !7781, file: !3, line: 2136, type: !135)
!7791 = !DILocation(line: 2136, column: 6, scope: !7781)
!7792 = !DILocation(line: 2138, column: 6, scope: !7793)
!7793 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 2138, column: 6)
!7794 = !DILocation(line: 2138, column: 6, scope: !7781)
!7795 = !DILocation(line: 2139, column: 3, scope: !7793)
!7796 = !DILocation(line: 2141, column: 36, scope: !7781)
!7797 = !DILocation(line: 2141, column: 8, scope: !7781)
!7798 = !DILocation(line: 2141, column: 6, scope: !7781)
!7799 = !DILocation(line: 2142, column: 6, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 2142, column: 6)
!7801 = !DILocation(line: 2142, column: 6, scope: !7781)
!7802 = !DILocation(line: 2143, column: 10, scope: !7800)
!7803 = !DILocation(line: 2143, column: 3, scope: !7800)
!7804 = !DILocation(line: 2145, column: 9, scope: !7781)
!7805 = !DILocation(line: 2145, column: 17, scope: !7781)
!7806 = !DILocation(line: 2145, column: 22, scope: !7781)
!7807 = !DILocation(line: 2145, column: 38, scope: !7781)
!7808 = !DILocation(line: 2145, column: 46, scope: !7781)
!7809 = !DILocation(line: 2145, column: 2, scope: !7781)
!7810 = !DILocation(line: 2146, column: 1, scope: !7781)
!7811 = distinct !DISubprogram(name: "iommu_sva_prepare_bind_data", scope: !3, file: !3, line: 2100, type: !7812, scopeLine: 2102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7812 = !DISubroutineType(types: !7813)
!7813 = !{!135, !162, !3862}
!7814 = !DILocation(line: 138, column: 29, scope: !7487, inlinedAt: !7815)
!7815 = distinct !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7816)
!7816 = distinct !DILocation(line: 2125, column: 6, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 2125, column: 6)
!7818 = !DILocation(line: 138, column: 42, scope: !7487, inlinedAt: !7815)
!7819 = !DILocation(line: 138, column: 54, scope: !7487, inlinedAt: !7815)
!7820 = !DILocation(line: 140, column: 6, scope: !7487, inlinedAt: !7815)
!7821 = !DILocation(line: 150, column: 6, scope: !7507, inlinedAt: !7815)
!7822 = !DILocation(line: 189, column: 22, scope: !7495, inlinedAt: !7816)
!7823 = !DILocation(line: 189, column: 45, scope: !7495, inlinedAt: !7816)
!7824 = !DILocation(line: 189, column: 65, scope: !7495, inlinedAt: !7816)
!7825 = !DILocation(line: 138, column: 29, scope: !7487, inlinedAt: !7826)
!7826 = distinct !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7827)
!7827 = distinct !DILocation(line: 2112, column: 6, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 2112, column: 6)
!7829 = !DILocation(line: 138, column: 42, scope: !7487, inlinedAt: !7826)
!7830 = !DILocation(line: 138, column: 54, scope: !7487, inlinedAt: !7826)
!7831 = !DILocation(line: 140, column: 6, scope: !7487, inlinedAt: !7826)
!7832 = !DILocation(line: 150, column: 6, scope: !7507, inlinedAt: !7826)
!7833 = !DILocation(line: 189, column: 22, scope: !7495, inlinedAt: !7827)
!7834 = !DILocation(line: 189, column: 45, scope: !7495, inlinedAt: !7827)
!7835 = !DILocation(line: 189, column: 65, scope: !7495, inlinedAt: !7827)
!7836 = !DILocalVariable(name: "udata", arg: 1, scope: !7811, file: !3, line: 2100, type: !162)
!7837 = !DILocation(line: 2100, column: 53, scope: !7811)
!7838 = !DILocalVariable(name: "data", arg: 2, scope: !7811, file: !3, line: 2101, type: !3862)
!7839 = !DILocation(line: 2101, column: 43, scope: !7811)
!7840 = !DILocalVariable(name: "minsz", scope: !7811, file: !3, line: 2103, type: !376)
!7841 = !DILocation(line: 2103, column: 6, scope: !7811)
!7842 = !DILocation(line: 2109, column: 8, scope: !7811)
!7843 = !DILocation(line: 2112, column: 21, scope: !7828)
!7844 = !DILocation(line: 2112, column: 27, scope: !7828)
!7845 = !DILocation(line: 2112, column: 34, scope: !7828)
!7846 = !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7827)
!7847 = !DILocation(line: 141, column: 6, scope: !7549, inlinedAt: !7826)
!7848 = !DILocation(line: 0, scope: !7549, inlinedAt: !7826)
!7849 = !DILocation(line: 141, column: 6, scope: !7487, inlinedAt: !7826)
!7850 = !DILocation(line: 142, column: 29, scope: !7553, inlinedAt: !7826)
!7851 = !DILocation(line: 142, column: 8, scope: !7553, inlinedAt: !7826)
!7852 = !DILocation(line: 142, column: 7, scope: !7554, inlinedAt: !7826)
!7853 = !DILocation(line: 143, column: 18, scope: !7553, inlinedAt: !7826)
!7854 = !DILocation(line: 143, column: 22, scope: !7553, inlinedAt: !7826)
!7855 = !DILocation(line: 143, column: 4, scope: !7553, inlinedAt: !7826)
!7856 = !DILocation(line: 144, column: 12, scope: !7561, inlinedAt: !7826)
!7857 = !DILocation(line: 144, column: 12, scope: !7553, inlinedAt: !7826)
!7858 = !DILocation(line: 145, column: 4, scope: !7561, inlinedAt: !7826)
!7859 = !DILocation(line: 147, column: 4, scope: !7561, inlinedAt: !7826)
!7860 = !DILocation(line: 148, column: 3, scope: !7554, inlinedAt: !7826)
!7861 = !DILocation(line: 150, column: 6, scope: !7567, inlinedAt: !7826)
!7862 = !DILocation(line: 150, column: 6, scope: !7569, inlinedAt: !7826)
!7863 = !DILocation(line: 150, column: 6, scope: !7573, inlinedAt: !7826)
!7864 = !DILocation(line: 150, column: 6, scope: !7570, inlinedAt: !7826)
!7865 = !DILocation(line: 150, column: 6, scope: !7508, inlinedAt: !7826)
!7866 = !DILocation(line: 150, column: 6, scope: !7487, inlinedAt: !7826)
!7867 = !DILocation(line: 151, column: 3, scope: !7508, inlinedAt: !7826)
!7868 = !DILocation(line: 152, column: 20, scope: !7487, inlinedAt: !7826)
!7869 = !DILocation(line: 152, column: 26, scope: !7487, inlinedAt: !7826)
!7870 = !DILocation(line: 152, column: 33, scope: !7487, inlinedAt: !7826)
!7871 = !DILocation(line: 152, column: 2, scope: !7487, inlinedAt: !7826)
!7872 = !DILocation(line: 153, column: 2, scope: !7487, inlinedAt: !7826)
!7873 = !DILocation(line: 154, column: 1, scope: !7487, inlinedAt: !7826)
!7874 = !DILocation(line: 191, column: 6, scope: !7495, inlinedAt: !7827)
!7875 = !DILocation(line: 192, column: 23, scope: !7493, inlinedAt: !7827)
!7876 = !DILocation(line: 192, column: 27, scope: !7493, inlinedAt: !7827)
!7877 = !DILocation(line: 192, column: 33, scope: !7493, inlinedAt: !7827)
!7878 = !DILocation(line: 192, column: 7, scope: !7493, inlinedAt: !7827)
!7879 = !DILocation(line: 192, column: 5, scope: !7493, inlinedAt: !7827)
!7880 = !DILocation(line: 192, column: 3, scope: !7493, inlinedAt: !7827)
!7881 = !DILocation(line: 193, column: 9, scope: !7495, inlinedAt: !7827)
!7882 = !DILocation(line: 2112, column: 6, scope: !7828)
!7883 = !DILocation(line: 2112, column: 6, scope: !7811)
!7884 = !DILocation(line: 2113, column: 3, scope: !7828)
!7885 = !DILocation(line: 2116, column: 6, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 2116, column: 6)
!7887 = !DILocation(line: 2116, column: 12, scope: !7886)
!7888 = !DILocation(line: 2116, column: 20, scope: !7886)
!7889 = !DILocation(line: 2116, column: 18, scope: !7886)
!7890 = !DILocation(line: 2116, column: 6, scope: !7811)
!7891 = !DILocation(line: 2117, column: 3, scope: !7886)
!7892 = !DILocation(line: 2125, column: 29, scope: !7817)
!7893 = !DILocation(line: 2125, column: 21, scope: !7817)
!7894 = !DILocation(line: 2125, column: 36, scope: !7817)
!7895 = !DILocation(line: 2125, column: 34, scope: !7817)
!7896 = !DILocation(line: 2125, column: 43, scope: !7817)
!7897 = !DILocation(line: 2125, column: 51, scope: !7817)
!7898 = !DILocation(line: 2125, column: 49, scope: !7817)
!7899 = !DILocalVariable(name: "__UNIQUE_ID___x280", scope: !7900, file: !3, line: 2126, type: !376)
!7900 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 2126, column: 7)
!7901 = !DILocation(line: 2126, column: 7, scope: !7900)
!7902 = !DILocalVariable(name: "__UNIQUE_ID___y281", scope: !7900, file: !3, line: 2126, type: !376)
!7903 = !DILocation(line: 2126, column: 48, scope: !7817)
!7904 = !DILocation(line: 2126, column: 46, scope: !7817)
!7905 = !DILocation(line: 2126, column: 7, scope: !7817)
!7906 = !DILocation(line: 191, column: 6, scope: !7493, inlinedAt: !7816)
!7907 = !DILocation(line: 141, column: 6, scope: !7549, inlinedAt: !7815)
!7908 = !DILocation(line: 0, scope: !7549, inlinedAt: !7815)
!7909 = !DILocation(line: 141, column: 6, scope: !7487, inlinedAt: !7815)
!7910 = !DILocation(line: 142, column: 29, scope: !7553, inlinedAt: !7815)
!7911 = !DILocation(line: 142, column: 8, scope: !7553, inlinedAt: !7815)
!7912 = !DILocation(line: 142, column: 7, scope: !7554, inlinedAt: !7815)
!7913 = !DILocation(line: 143, column: 18, scope: !7553, inlinedAt: !7815)
!7914 = !DILocation(line: 143, column: 22, scope: !7553, inlinedAt: !7815)
!7915 = !DILocation(line: 143, column: 4, scope: !7553, inlinedAt: !7815)
!7916 = !DILocation(line: 144, column: 12, scope: !7561, inlinedAt: !7815)
!7917 = !DILocation(line: 144, column: 12, scope: !7553, inlinedAt: !7815)
!7918 = !DILocation(line: 145, column: 4, scope: !7561, inlinedAt: !7815)
!7919 = !DILocation(line: 147, column: 4, scope: !7561, inlinedAt: !7815)
!7920 = !DILocation(line: 148, column: 3, scope: !7554, inlinedAt: !7815)
!7921 = !DILocation(line: 150, column: 6, scope: !7567, inlinedAt: !7815)
!7922 = !DILocation(line: 150, column: 6, scope: !7569, inlinedAt: !7815)
!7923 = !DILocation(line: 150, column: 6, scope: !7573, inlinedAt: !7815)
!7924 = !DILocation(line: 150, column: 6, scope: !7570, inlinedAt: !7815)
!7925 = !DILocation(line: 150, column: 6, scope: !7508, inlinedAt: !7815)
!7926 = !DILocation(line: 150, column: 6, scope: !7487, inlinedAt: !7815)
!7927 = !DILocation(line: 151, column: 3, scope: !7508, inlinedAt: !7815)
!7928 = !DILocation(line: 152, column: 20, scope: !7487, inlinedAt: !7815)
!7929 = !DILocation(line: 152, column: 26, scope: !7487, inlinedAt: !7815)
!7930 = !DILocation(line: 152, column: 33, scope: !7487, inlinedAt: !7815)
!7931 = !DILocation(line: 152, column: 2, scope: !7487, inlinedAt: !7815)
!7932 = !DILocation(line: 153, column: 2, scope: !7487, inlinedAt: !7815)
!7933 = !DILocation(line: 154, column: 1, scope: !7487, inlinedAt: !7815)
!7934 = !DILocation(line: 191, column: 6, scope: !7495, inlinedAt: !7816)
!7935 = !DILocation(line: 192, column: 23, scope: !7493, inlinedAt: !7816)
!7936 = !DILocation(line: 192, column: 27, scope: !7493, inlinedAt: !7816)
!7937 = !DILocation(line: 192, column: 33, scope: !7493, inlinedAt: !7816)
!7938 = !DILocation(line: 192, column: 7, scope: !7493, inlinedAt: !7816)
!7939 = !DILocation(line: 192, column: 5, scope: !7493, inlinedAt: !7816)
!7940 = !DILocation(line: 192, column: 3, scope: !7493, inlinedAt: !7816)
!7941 = !DILocation(line: 193, column: 9, scope: !7495, inlinedAt: !7816)
!7942 = !DILocation(line: 2125, column: 6, scope: !7817)
!7943 = !DILocation(line: 2125, column: 6, scope: !7811)
!7944 = !DILocation(line: 2127, column: 3, scope: !7817)
!7945 = !DILocation(line: 2129, column: 31, scope: !7811)
!7946 = !DILocation(line: 2129, column: 9, scope: !7811)
!7947 = !DILocation(line: 2129, column: 2, scope: !7811)
!7948 = !DILocation(line: 2130, column: 1, scope: !7811)
!7949 = distinct !DISubprogram(name: "iommu_sva_unbind_gpasid", scope: !3, file: !3, line: 2149, type: !7950, scopeLine: 2151, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!135, !3489, !174, !7952}
!7952 = !DIDerivedType(tag: DW_TAG_typedef, name: "ioasid_t", file: !7953, line: 9, baseType: !7)
!7953 = !DIFile(filename: "./include/linux/ioasid.h", directory: "/home/lizy2001/genbc/linux")
!7954 = !DILocalVariable(name: "domain", arg: 1, scope: !7949, file: !3, line: 2149, type: !3489)
!7955 = !DILocation(line: 2149, column: 50, scope: !7949)
!7956 = !DILocalVariable(name: "dev", arg: 2, scope: !7949, file: !3, line: 2149, type: !174)
!7957 = !DILocation(line: 2149, column: 73, scope: !7949)
!7958 = !DILocalVariable(name: "pasid", arg: 3, scope: !7949, file: !3, line: 2150, type: !7952)
!7959 = !DILocation(line: 2150, column: 18, scope: !7949)
!7960 = !DILocation(line: 2152, column: 6, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7949, file: !3, line: 2152, column: 6)
!7962 = !DILocation(line: 2152, column: 6, scope: !7949)
!7963 = !DILocation(line: 2153, column: 3, scope: !7961)
!7964 = !DILocation(line: 2155, column: 9, scope: !7949)
!7965 = !DILocation(line: 2155, column: 17, scope: !7949)
!7966 = !DILocation(line: 2155, column: 22, scope: !7949)
!7967 = !DILocation(line: 2155, column: 40, scope: !7949)
!7968 = !DILocation(line: 2155, column: 45, scope: !7949)
!7969 = !DILocation(line: 2155, column: 2, scope: !7949)
!7970 = !DILocation(line: 2156, column: 1, scope: !7949)
!7971 = distinct !DISubprogram(name: "iommu_uapi_sva_unbind_gpasid", scope: !3, file: !3, line: 2159, type: !7484, scopeLine: 2161, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!7972 = !DILocalVariable(name: "domain", arg: 1, scope: !7971, file: !3, line: 2159, type: !3489)
!7973 = !DILocation(line: 2159, column: 55, scope: !7971)
!7974 = !DILocalVariable(name: "dev", arg: 2, scope: !7971, file: !3, line: 2159, type: !174)
!7975 = !DILocation(line: 2159, column: 78, scope: !7971)
!7976 = !DILocalVariable(name: "udata", arg: 3, scope: !7971, file: !3, line: 2160, type: !162)
!7977 = !DILocation(line: 2160, column: 19, scope: !7971)
!7978 = !DILocalVariable(name: "data", scope: !7971, file: !3, line: 2162, type: !3863)
!7979 = !DILocation(line: 2162, column: 32, scope: !7971)
!7980 = !DILocalVariable(name: "ret", scope: !7971, file: !3, line: 2163, type: !135)
!7981 = !DILocation(line: 2163, column: 6, scope: !7971)
!7982 = !DILocation(line: 2165, column: 6, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 2165, column: 6)
!7984 = !DILocation(line: 2165, column: 6, scope: !7971)
!7985 = !DILocation(line: 2166, column: 3, scope: !7983)
!7986 = !DILocation(line: 2168, column: 36, scope: !7971)
!7987 = !DILocation(line: 2168, column: 8, scope: !7971)
!7988 = !DILocation(line: 2168, column: 6, scope: !7971)
!7989 = !DILocation(line: 2169, column: 6, scope: !7990)
!7990 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 2169, column: 6)
!7991 = !DILocation(line: 2169, column: 6, scope: !7971)
!7992 = !DILocation(line: 2170, column: 10, scope: !7990)
!7993 = !DILocation(line: 2170, column: 3, scope: !7990)
!7994 = !DILocation(line: 2172, column: 33, scope: !7971)
!7995 = !DILocation(line: 2172, column: 41, scope: !7971)
!7996 = !DILocation(line: 2172, column: 51, scope: !7971)
!7997 = !DILocation(line: 2172, column: 46, scope: !7971)
!7998 = !DILocation(line: 2172, column: 9, scope: !7971)
!7999 = !DILocation(line: 2172, column: 2, scope: !7971)
!8000 = !DILocation(line: 2173, column: 1, scope: !7971)
!8001 = distinct !DISubprogram(name: "iommu_detach_device", scope: !3, file: !3, line: 2189, type: !3518, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8002 = !DILocalVariable(name: "domain", arg: 1, scope: !8001, file: !3, line: 2189, type: !3489)
!8003 = !DILocation(line: 2189, column: 47, scope: !8001)
!8004 = !DILocalVariable(name: "dev", arg: 2, scope: !8001, file: !3, line: 2189, type: !174)
!8005 = !DILocation(line: 2189, column: 70, scope: !8001)
!8006 = !DILocalVariable(name: "group", scope: !8001, file: !3, line: 2191, type: !3650)
!8007 = !DILocation(line: 2191, column: 22, scope: !8001)
!8008 = !DILocation(line: 2193, column: 26, scope: !8001)
!8009 = !DILocation(line: 2193, column: 10, scope: !8001)
!8010 = !DILocation(line: 2193, column: 8, scope: !8001)
!8011 = !DILocation(line: 2194, column: 7, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 2194, column: 6)
!8013 = !DILocation(line: 2194, column: 6, scope: !8001)
!8014 = !DILocation(line: 2195, column: 3, scope: !8012)
!8015 = !DILocation(line: 2197, column: 14, scope: !8001)
!8016 = !DILocation(line: 2197, column: 21, scope: !8001)
!8017 = !DILocation(line: 2197, column: 2, scope: !8001)
!8018 = !DILocation(line: 2198, column: 31, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 2198, column: 6)
!8020 = !DILocation(line: 2198, column: 6, scope: !8019)
!8021 = !DILocation(line: 2198, column: 38, scope: !8019)
!8022 = !DILocation(line: 2198, column: 6, scope: !8001)
!8023 = !DILocalVariable(name: "__ret_warn_on", scope: !8024, file: !3, line: 2199, type: !135)
!8024 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 2199, column: 3)
!8025 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 2198, column: 44)
!8026 = !DILocation(line: 2199, column: 3, scope: !8024)
!8027 = !DILocation(line: 2199, column: 3, scope: !8028)
!8028 = distinct !DILexicalBlock(scope: !8024, file: !3, line: 2199, column: 3)
!8029 = !DILocation(line: 2199, column: 3, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8028, file: !3, line: 2199, column: 3)
!8031 = !DILocation(line: 2199, column: 3, scope: !8032)
!8032 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2199, column: 3)
!8033 = !DILocation(line: 2199, column: 3, scope: !8034)
!8034 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2199, column: 3)
!8035 = !{i32 -2141328565, i32 -2141328536, i32 -2141328490, i32 -2141328432, i32 -2141328378, i32 -2141328324, i32 -2141328269, i32 -2141328238}
!8036 = !DILocation(line: 2199, column: 3, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2199, column: 3)
!8038 = !{i32 -2141327834, i32 -2141327827, i32 -2141327775, i32 -2141327744, i32 -2141327714}
!8039 = !DILocation(line: 2199, column: 3, scope: !8040)
!8040 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2199, column: 3)
!8041 = !DILocation(line: 2200, column: 3, scope: !8025)
!8042 = !DILocation(line: 2203, column: 23, scope: !8001)
!8043 = !DILocation(line: 2203, column: 31, scope: !8001)
!8044 = !DILocation(line: 2203, column: 2, scope: !8001)
!8045 = !DILabel(scope: !8001, name: "out_unlock", file: !3, line: 2205)
!8046 = !DILocation(line: 2205, column: 1, scope: !8001)
!8047 = !DILocation(line: 2206, column: 16, scope: !8001)
!8048 = !DILocation(line: 2206, column: 23, scope: !8001)
!8049 = !DILocation(line: 2206, column: 2, scope: !8001)
!8050 = !DILocation(line: 2207, column: 18, scope: !8001)
!8051 = !DILocation(line: 2207, column: 2, scope: !8001)
!8052 = !DILocation(line: 2208, column: 1, scope: !8001)
!8053 = distinct !DISubprogram(name: "__iommu_detach_group", scope: !3, file: !3, line: 2291, type: !8054, scopeLine: 2293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8054 = !DISubroutineType(types: !8055)
!8055 = !{null, !3489, !3650}
!8056 = !DILocalVariable(name: "domain", arg: 1, scope: !8053, file: !3, line: 2291, type: !3489)
!8057 = !DILocation(line: 2291, column: 55, scope: !8053)
!8058 = !DILocalVariable(name: "group", arg: 2, scope: !8053, file: !3, line: 2292, type: !3650)
!8059 = !DILocation(line: 2292, column: 26, scope: !8053)
!8060 = !DILocalVariable(name: "ret", scope: !8053, file: !3, line: 2294, type: !135)
!8061 = !DILocation(line: 2294, column: 6, scope: !8053)
!8062 = !DILocation(line: 2296, column: 7, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 2296, column: 6)
!8064 = !DILocation(line: 2296, column: 14, scope: !8063)
!8065 = !DILocation(line: 2296, column: 6, scope: !8053)
!8066 = !DILocation(line: 2297, column: 30, scope: !8067)
!8067 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 2296, column: 30)
!8068 = !DILocation(line: 2297, column: 37, scope: !8067)
!8069 = !DILocation(line: 2297, column: 3, scope: !8067)
!8070 = !DILocation(line: 2299, column: 3, scope: !8067)
!8071 = !DILocation(line: 2299, column: 10, scope: !8067)
!8072 = !DILocation(line: 2299, column: 17, scope: !8067)
!8073 = !DILocation(line: 2300, column: 3, scope: !8067)
!8074 = !DILocation(line: 2303, column: 6, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 2303, column: 6)
!8076 = !DILocation(line: 2303, column: 13, scope: !8075)
!8077 = !DILocation(line: 2303, column: 23, scope: !8075)
!8078 = !DILocation(line: 2303, column: 30, scope: !8075)
!8079 = !DILocation(line: 2303, column: 20, scope: !8075)
!8080 = !DILocation(line: 2303, column: 6, scope: !8053)
!8081 = !DILocation(line: 2304, column: 3, scope: !8075)
!8082 = !DILocation(line: 2307, column: 35, scope: !8053)
!8083 = !DILocation(line: 2307, column: 42, scope: !8053)
!8084 = !DILocation(line: 2307, column: 49, scope: !8053)
!8085 = !DILocation(line: 2307, column: 8, scope: !8053)
!8086 = !DILocation(line: 2307, column: 6, scope: !8053)
!8087 = !DILocation(line: 2309, column: 6, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8053, file: !3, line: 2309, column: 6)
!8089 = !DILocation(line: 2309, column: 10, scope: !8088)
!8090 = !DILocation(line: 2309, column: 6, scope: !8053)
!8091 = !DILocalVariable(name: "__ret_warn_on", scope: !8092, file: !3, line: 2310, type: !135)
!8092 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 2310, column: 3)
!8093 = !DILocation(line: 2310, column: 3, scope: !8092)
!8094 = !DILocation(line: 2310, column: 3, scope: !8095)
!8095 = distinct !DILexicalBlock(scope: !8092, file: !3, line: 2310, column: 3)
!8096 = !DILocation(line: 2310, column: 3, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 2310, column: 3)
!8098 = !DILocation(line: 2310, column: 3, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2310, column: 3)
!8100 = !DILocation(line: 2310, column: 3, scope: !8101)
!8101 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2310, column: 3)
!8102 = !{i32 -2141326791, i32 -2141326762, i32 -2141326716, i32 -2141326658, i32 -2141326604, i32 -2141326550, i32 -2141326495, i32 -2141326464}
!8103 = !DILocation(line: 2310, column: 3, scope: !8104)
!8104 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2310, column: 3)
!8105 = !{i32 -2141326060, i32 -2141326053, i32 -2141326001, i32 -2141325970, i32 -2141325940}
!8106 = !DILocation(line: 2310, column: 3, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 2310, column: 3)
!8108 = !DILocation(line: 2310, column: 3, scope: !8088)
!8109 = !DILocation(line: 2312, column: 19, scope: !8088)
!8110 = !DILocation(line: 2312, column: 26, scope: !8088)
!8111 = !DILocation(line: 2312, column: 3, scope: !8088)
!8112 = !DILocation(line: 2312, column: 10, scope: !8088)
!8113 = !DILocation(line: 2312, column: 17, scope: !8088)
!8114 = !DILocation(line: 2313, column: 1, scope: !8053)
!8115 = distinct !DISubprogram(name: "iommu_get_dma_domain", scope: !3, file: !3, line: 2232, type: !6637, scopeLine: 2233, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8116 = !DILocalVariable(name: "dev", arg: 1, scope: !8115, file: !3, line: 2232, type: !174)
!8117 = !DILocation(line: 2232, column: 58, scope: !8115)
!8118 = !DILocation(line: 2234, column: 9, scope: !8115)
!8119 = !DILocation(line: 2234, column: 14, scope: !8115)
!8120 = !DILocation(line: 2234, column: 27, scope: !8115)
!8121 = !DILocation(line: 2234, column: 2, scope: !8115)
!8122 = distinct !DISubprogram(name: "iommu_attach_group", scope: !3, file: !3, line: 2270, type: !7449, scopeLine: 2271, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8123 = !DILocalVariable(name: "domain", arg: 1, scope: !8122, file: !3, line: 2270, type: !3489)
!8124 = !DILocation(line: 2270, column: 45, scope: !8122)
!8125 = !DILocalVariable(name: "group", arg: 2, scope: !8122, file: !3, line: 2270, type: !3650)
!8126 = !DILocation(line: 2270, column: 73, scope: !8122)
!8127 = !DILocalVariable(name: "ret", scope: !8122, file: !3, line: 2272, type: !135)
!8128 = !DILocation(line: 2272, column: 6, scope: !8122)
!8129 = !DILocation(line: 2274, column: 14, scope: !8122)
!8130 = !DILocation(line: 2274, column: 21, scope: !8122)
!8131 = !DILocation(line: 2274, column: 2, scope: !8122)
!8132 = !DILocation(line: 2275, column: 29, scope: !8122)
!8133 = !DILocation(line: 2275, column: 37, scope: !8122)
!8134 = !DILocation(line: 2275, column: 8, scope: !8122)
!8135 = !DILocation(line: 2275, column: 6, scope: !8122)
!8136 = !DILocation(line: 2276, column: 16, scope: !8122)
!8137 = !DILocation(line: 2276, column: 23, scope: !8122)
!8138 = !DILocation(line: 2276, column: 2, scope: !8122)
!8139 = !DILocation(line: 2278, column: 9, scope: !8122)
!8140 = !DILocation(line: 2278, column: 2, scope: !8122)
!8141 = distinct !DISubprogram(name: "iommu_detach_group", scope: !3, file: !3, line: 2315, type: !8054, scopeLine: 2316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8142 = !DILocalVariable(name: "domain", arg: 1, scope: !8141, file: !3, line: 2315, type: !3489)
!8143 = !DILocation(line: 2315, column: 46, scope: !8141)
!8144 = !DILocalVariable(name: "group", arg: 2, scope: !8141, file: !3, line: 2315, type: !3650)
!8145 = !DILocation(line: 2315, column: 74, scope: !8141)
!8146 = !DILocation(line: 2317, column: 14, scope: !8141)
!8147 = !DILocation(line: 2317, column: 21, scope: !8141)
!8148 = !DILocation(line: 2317, column: 2, scope: !8141)
!8149 = !DILocation(line: 2318, column: 23, scope: !8141)
!8150 = !DILocation(line: 2318, column: 31, scope: !8141)
!8151 = !DILocation(line: 2318, column: 2, scope: !8141)
!8152 = !DILocation(line: 2319, column: 16, scope: !8141)
!8153 = !DILocation(line: 2319, column: 23, scope: !8141)
!8154 = !DILocation(line: 2319, column: 2, scope: !8141)
!8155 = !DILocation(line: 2320, column: 1, scope: !8141)
!8156 = distinct !DISubprogram(name: "iommu_iova_to_phys", scope: !3, file: !3, line: 2323, type: !3542, scopeLine: 2324, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8157 = !DILocalVariable(name: "domain", arg: 1, scope: !8156, file: !3, line: 2323, type: !3489)
!8158 = !DILocation(line: 2323, column: 53, scope: !8156)
!8159 = !DILocalVariable(name: "iova", arg: 2, scope: !8156, file: !3, line: 2323, type: !885)
!8160 = !DILocation(line: 2323, column: 72, scope: !8156)
!8161 = !DILocation(line: 2325, column: 6, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 2325, column: 6)
!8163 = !DILocation(line: 2325, column: 6, scope: !8156)
!8164 = !DILocation(line: 2326, column: 3, scope: !8162)
!8165 = !DILocation(line: 2328, column: 9, scope: !8156)
!8166 = !DILocation(line: 2328, column: 17, scope: !8156)
!8167 = !DILocation(line: 2328, column: 22, scope: !8156)
!8168 = !DILocation(line: 2328, column: 35, scope: !8156)
!8169 = !DILocation(line: 2328, column: 43, scope: !8156)
!8170 = !DILocation(line: 2328, column: 2, scope: !8156)
!8171 = !DILocation(line: 2329, column: 1, scope: !8156)
!8172 = distinct !DISubprogram(name: "iommu_map", scope: !3, file: !3, line: 2424, type: !8173, scopeLine: 2426, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8173 = !DISubroutineType(types: !8174)
!8174 = !{!135, !3489, !285, !2091, !282, !135}
!8175 = !DILocalVariable(name: "domain", arg: 1, scope: !8172, file: !3, line: 2424, type: !3489)
!8176 = !DILocation(line: 2424, column: 36, scope: !8172)
!8177 = !DILocalVariable(name: "iova", arg: 2, scope: !8172, file: !3, line: 2424, type: !285)
!8178 = !DILocation(line: 2424, column: 58, scope: !8172)
!8179 = !DILocalVariable(name: "paddr", arg: 3, scope: !8172, file: !3, line: 2425, type: !2091)
!8180 = !DILocation(line: 2425, column: 20, scope: !8172)
!8181 = !DILocalVariable(name: "size", arg: 4, scope: !8172, file: !3, line: 2425, type: !282)
!8182 = !DILocation(line: 2425, column: 34, scope: !8172)
!8183 = !DILocalVariable(name: "prot", arg: 5, scope: !8172, file: !3, line: 2425, type: !135)
!8184 = !DILocation(line: 2425, column: 44, scope: !8172)
!8185 = !DILocation(line: 2427, column: 2, scope: !8172)
!8186 = !DILocation(line: 2427, column: 2, scope: !8187)
!8187 = distinct !DILexicalBlock(scope: !8172, file: !3, line: 2427, column: 2)
!8188 = !DILocation(line: 2427, column: 2, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8187, file: !3, line: 2427, column: 2)
!8190 = !DILocation(line: 2428, column: 21, scope: !8172)
!8191 = !DILocation(line: 2428, column: 29, scope: !8172)
!8192 = !DILocation(line: 2428, column: 35, scope: !8172)
!8193 = !DILocation(line: 2428, column: 42, scope: !8172)
!8194 = !DILocation(line: 2428, column: 48, scope: !8172)
!8195 = !DILocation(line: 2428, column: 9, scope: !8172)
!8196 = !DILocation(line: 2428, column: 2, scope: !8172)
!8197 = distinct !DISubprogram(name: "__iommu_map", scope: !3, file: !3, line: 2364, type: !3522, scopeLine: 2366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8198 = !DILocation(line: 233, column: 58, scope: !4934, inlinedAt: !8199)
!8199 = distinct !DILocation(line: 2382, column: 20, scope: !8197)
!8200 = !DILocalVariable(name: "domain", arg: 1, scope: !8197, file: !3, line: 2364, type: !3489)
!8201 = !DILocation(line: 2364, column: 45, scope: !8197)
!8202 = !DILocalVariable(name: "iova", arg: 2, scope: !8197, file: !3, line: 2364, type: !285)
!8203 = !DILocation(line: 2364, column: 67, scope: !8197)
!8204 = !DILocalVariable(name: "paddr", arg: 3, scope: !8197, file: !3, line: 2365, type: !2091)
!8205 = !DILocation(line: 2365, column: 22, scope: !8197)
!8206 = !DILocalVariable(name: "size", arg: 4, scope: !8197, file: !3, line: 2365, type: !282)
!8207 = !DILocation(line: 2365, column: 36, scope: !8197)
!8208 = !DILocalVariable(name: "prot", arg: 5, scope: !8197, file: !3, line: 2365, type: !135)
!8209 = !DILocation(line: 2365, column: 46, scope: !8197)
!8210 = !DILocalVariable(name: "gfp", arg: 6, scope: !8197, file: !3, line: 2365, type: !708)
!8211 = !DILocation(line: 2365, column: 58, scope: !8197)
!8212 = !DILocalVariable(name: "ops", scope: !8197, file: !3, line: 2367, type: !3477)
!8213 = !DILocation(line: 2367, column: 26, scope: !8197)
!8214 = !DILocation(line: 2367, column: 32, scope: !8197)
!8215 = !DILocation(line: 2367, column: 40, scope: !8197)
!8216 = !DILocalVariable(name: "orig_iova", scope: !8197, file: !3, line: 2368, type: !285)
!8217 = !DILocation(line: 2368, column: 16, scope: !8197)
!8218 = !DILocation(line: 2368, column: 28, scope: !8197)
!8219 = !DILocalVariable(name: "min_pagesz", scope: !8197, file: !3, line: 2369, type: !7)
!8220 = !DILocation(line: 2369, column: 15, scope: !8197)
!8221 = !DILocalVariable(name: "orig_size", scope: !8197, file: !3, line: 2370, type: !282)
!8222 = !DILocation(line: 2370, column: 9, scope: !8197)
!8223 = !DILocation(line: 2370, column: 21, scope: !8197)
!8224 = !DILocalVariable(name: "orig_paddr", scope: !8197, file: !3, line: 2371, type: !2091)
!8225 = !DILocation(line: 2371, column: 14, scope: !8197)
!8226 = !DILocation(line: 2371, column: 27, scope: !8197)
!8227 = !DILocalVariable(name: "ret", scope: !8197, file: !3, line: 2372, type: !135)
!8228 = !DILocation(line: 2372, column: 6, scope: !8197)
!8229 = !DILocation(line: 2374, column: 6, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2374, column: 6)
!8231 = !DILocation(line: 2374, column: 6, scope: !8197)
!8232 = !DILocation(line: 2376, column: 3, scope: !8230)
!8233 = !DILocation(line: 2378, column: 6, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2378, column: 6)
!8235 = !DILocation(line: 2378, column: 6, scope: !8197)
!8236 = !DILocation(line: 2379, column: 3, scope: !8234)
!8237 = !DILocation(line: 2382, column: 26, scope: !8197)
!8238 = !DILocation(line: 2382, column: 34, scope: !8197)
!8239 = !DILocation(line: 237, column: 11, scope: !4934, inlinedAt: !8199)
!8240 = !DILocation(line: 235, column: 2, scope: !4934, inlinedAt: !8199)
!8241 = !DILocation(line: 238, column: 9, scope: !4934, inlinedAt: !8199)
!8242 = !DILocation(line: 2382, column: 17, scope: !8197)
!8243 = !DILocation(line: 2382, column: 13, scope: !8197)
!8244 = !DILocation(line: 2389, column: 7, scope: !8245)
!8245 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2389, column: 6)
!8246 = !DILocation(line: 2389, column: 6, scope: !8197)
!8247 = !DILocation(line: 2390, column: 3, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 2389, column: 52)
!8249 = !DILocation(line: 2392, column: 3, scope: !8248)
!8250 = !DILocation(line: 2395, column: 2, scope: !8251)
!8251 = distinct !DILexicalBlock(scope: !8252, file: !3, line: 2395, column: 2)
!8252 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2395, column: 2)
!8253 = !DILocation(line: 2395, column: 2, scope: !8252)
!8254 = !DILocation(line: 2397, column: 2, scope: !8197)
!8255 = !DILocation(line: 2397, column: 9, scope: !8197)
!8256 = !DILocalVariable(name: "pgsize", scope: !8257, file: !3, line: 2398, type: !282)
!8257 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2397, column: 15)
!8258 = !DILocation(line: 2398, column: 10, scope: !8257)
!8259 = !DILocation(line: 2398, column: 32, scope: !8257)
!8260 = !DILocation(line: 2398, column: 40, scope: !8257)
!8261 = !DILocation(line: 2398, column: 47, scope: !8257)
!8262 = !DILocation(line: 2398, column: 45, scope: !8257)
!8263 = !DILocation(line: 2398, column: 54, scope: !8257)
!8264 = !DILocation(line: 2398, column: 19, scope: !8257)
!8265 = !DILocation(line: 2400, column: 3, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !8267, file: !3, line: 2400, column: 3)
!8267 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 2400, column: 3)
!8268 = !DILocation(line: 2400, column: 3, scope: !8267)
!8269 = !DILocation(line: 2402, column: 9, scope: !8257)
!8270 = !DILocation(line: 2402, column: 14, scope: !8257)
!8271 = !DILocation(line: 2402, column: 18, scope: !8257)
!8272 = !DILocation(line: 2402, column: 26, scope: !8257)
!8273 = !DILocation(line: 2402, column: 32, scope: !8257)
!8274 = !DILocation(line: 2402, column: 39, scope: !8257)
!8275 = !DILocation(line: 2402, column: 47, scope: !8257)
!8276 = !DILocation(line: 2402, column: 53, scope: !8257)
!8277 = !DILocation(line: 2402, column: 7, scope: !8257)
!8278 = !DILocation(line: 2404, column: 7, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 2404, column: 7)
!8280 = !DILocation(line: 2404, column: 7, scope: !8257)
!8281 = !DILocation(line: 2405, column: 4, scope: !8279)
!8282 = !DILocation(line: 2407, column: 11, scope: !8257)
!8283 = !DILocation(line: 2407, column: 8, scope: !8257)
!8284 = !DILocation(line: 2408, column: 12, scope: !8257)
!8285 = !DILocation(line: 2408, column: 9, scope: !8257)
!8286 = !DILocation(line: 2409, column: 11, scope: !8257)
!8287 = !DILocation(line: 2409, column: 8, scope: !8257)
!8288 = distinct !{!8288, !8254, !8289}
!8289 = !DILocation(line: 2410, column: 2, scope: !8197)
!8290 = !DILocation(line: 2412, column: 6, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2412, column: 6)
!8292 = !DILocation(line: 2412, column: 11, scope: !8291)
!8293 = !DILocation(line: 2412, column: 6, scope: !8197)
!8294 = !DILocation(line: 2413, column: 3, scope: !8291)
!8295 = !DILocation(line: 2413, column: 8, scope: !8291)
!8296 = !DILocation(line: 2413, column: 23, scope: !8291)
!8297 = !DILocation(line: 2416, column: 6, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8197, file: !3, line: 2416, column: 6)
!8299 = !DILocation(line: 2416, column: 6, scope: !8197)
!8300 = !DILocation(line: 2417, column: 15, scope: !8298)
!8301 = !DILocation(line: 2417, column: 23, scope: !8298)
!8302 = !DILocation(line: 2417, column: 34, scope: !8298)
!8303 = !DILocation(line: 2417, column: 46, scope: !8298)
!8304 = !DILocation(line: 2417, column: 44, scope: !8298)
!8305 = !DILocation(line: 2417, column: 3, scope: !8298)
!8306 = !DILocation(line: 2419, column: 13, scope: !8298)
!8307 = !DILocation(line: 2419, column: 24, scope: !8298)
!8308 = !DILocation(line: 2419, column: 36, scope: !8298)
!8309 = !DILocation(line: 2419, column: 3, scope: !8298)
!8310 = !DILocation(line: 2421, column: 9, scope: !8197)
!8311 = !DILocation(line: 2421, column: 2, scope: !8197)
!8312 = !DILocation(line: 2422, column: 1, scope: !8197)
!8313 = distinct !DISubprogram(name: "iommu_map_atomic", scope: !3, file: !3, line: 2432, type: !8173, scopeLine: 2434, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8314 = !DILocalVariable(name: "domain", arg: 1, scope: !8313, file: !3, line: 2432, type: !3489)
!8315 = !DILocation(line: 2432, column: 43, scope: !8313)
!8316 = !DILocalVariable(name: "iova", arg: 2, scope: !8313, file: !3, line: 2432, type: !285)
!8317 = !DILocation(line: 2432, column: 65, scope: !8313)
!8318 = !DILocalVariable(name: "paddr", arg: 3, scope: !8313, file: !3, line: 2433, type: !2091)
!8319 = !DILocation(line: 2433, column: 20, scope: !8313)
!8320 = !DILocalVariable(name: "size", arg: 4, scope: !8313, file: !3, line: 2433, type: !282)
!8321 = !DILocation(line: 2433, column: 34, scope: !8313)
!8322 = !DILocalVariable(name: "prot", arg: 5, scope: !8313, file: !3, line: 2433, type: !135)
!8323 = !DILocation(line: 2433, column: 44, scope: !8313)
!8324 = !DILocation(line: 2435, column: 21, scope: !8313)
!8325 = !DILocation(line: 2435, column: 29, scope: !8313)
!8326 = !DILocation(line: 2435, column: 35, scope: !8313)
!8327 = !DILocation(line: 2435, column: 42, scope: !8313)
!8328 = !DILocation(line: 2435, column: 48, scope: !8313)
!8329 = !DILocation(line: 2435, column: 9, scope: !8313)
!8330 = !DILocation(line: 2435, column: 2, scope: !8313)
!8331 = distinct !DISubprogram(name: "iommu_unmap", scope: !3, file: !3, line: 2493, type: !8332, scopeLine: 2495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8332 = !DISubroutineType(types: !8333)
!8333 = !{!282, !3489, !285, !282}
!8334 = !DILocalVariable(name: "domain", arg: 1, scope: !8331, file: !3, line: 2493, type: !3489)
!8335 = !DILocation(line: 2493, column: 41, scope: !8331)
!8336 = !DILocalVariable(name: "iova", arg: 2, scope: !8331, file: !3, line: 2494, type: !285)
!8337 = !DILocation(line: 2494, column: 20, scope: !8331)
!8338 = !DILocalVariable(name: "size", arg: 3, scope: !8331, file: !3, line: 2494, type: !282)
!8339 = !DILocation(line: 2494, column: 33, scope: !8331)
!8340 = !DILocalVariable(name: "iotlb_gather", scope: !8331, file: !3, line: 2496, type: !3529)
!8341 = !DILocation(line: 2496, column: 28, scope: !8331)
!8342 = !DILocalVariable(name: "ret", scope: !8331, file: !3, line: 2497, type: !282)
!8343 = !DILocation(line: 2497, column: 9, scope: !8331)
!8344 = !DILocation(line: 2499, column: 2, scope: !8331)
!8345 = !DILocation(line: 2500, column: 22, scope: !8331)
!8346 = !DILocation(line: 2500, column: 30, scope: !8331)
!8347 = !DILocation(line: 2500, column: 36, scope: !8331)
!8348 = !DILocation(line: 2500, column: 8, scope: !8331)
!8349 = !DILocation(line: 2500, column: 6, scope: !8331)
!8350 = !DILocation(line: 2501, column: 19, scope: !8331)
!8351 = !DILocation(line: 2501, column: 2, scope: !8331)
!8352 = !DILocation(line: 2503, column: 9, scope: !8331)
!8353 = !DILocation(line: 2503, column: 2, scope: !8331)
!8354 = distinct !DISubprogram(name: "iommu_iotlb_gather_init", scope: !6, file: !6, line: 402, type: !8355, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8355 = !DISubroutineType(types: !8356)
!8356 = !{null, !3528}
!8357 = !DILocalVariable(name: "gather", arg: 1, scope: !8354, file: !6, line: 402, type: !3528)
!8358 = !DILocation(line: 402, column: 71, scope: !8354)
!8359 = !DILocation(line: 404, column: 3, scope: !8354)
!8360 = !DILocation(line: 404, column: 40, scope: !8354)
!8361 = !DILocation(line: 404, column: 12, scope: !8354)
!8362 = !DILocation(line: 407, column: 1, scope: !8354)
!8363 = distinct !DISubprogram(name: "__iommu_unmap", scope: !3, file: !3, line: 2439, type: !3526, scopeLine: 2442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8364 = !DILocation(line: 233, column: 58, scope: !4934, inlinedAt: !8365)
!8365 = distinct !DILocation(line: 2456, column: 20, scope: !8363)
!8366 = !DILocalVariable(name: "domain", arg: 1, scope: !8363, file: !3, line: 2439, type: !3489)
!8367 = !DILocation(line: 2439, column: 50, scope: !8363)
!8368 = !DILocalVariable(name: "iova", arg: 2, scope: !8363, file: !3, line: 2440, type: !285)
!8369 = !DILocation(line: 2440, column: 22, scope: !8363)
!8370 = !DILocalVariable(name: "size", arg: 3, scope: !8363, file: !3, line: 2440, type: !282)
!8371 = !DILocation(line: 2440, column: 35, scope: !8363)
!8372 = !DILocalVariable(name: "iotlb_gather", arg: 4, scope: !8363, file: !3, line: 2441, type: !3528)
!8373 = !DILocation(line: 2441, column: 35, scope: !8363)
!8374 = !DILocalVariable(name: "ops", scope: !8363, file: !3, line: 2443, type: !3477)
!8375 = !DILocation(line: 2443, column: 26, scope: !8363)
!8376 = !DILocation(line: 2443, column: 32, scope: !8363)
!8377 = !DILocation(line: 2443, column: 40, scope: !8363)
!8378 = !DILocalVariable(name: "unmapped_page", scope: !8363, file: !3, line: 2444, type: !282)
!8379 = !DILocation(line: 2444, column: 9, scope: !8363)
!8380 = !DILocalVariable(name: "unmapped", scope: !8363, file: !3, line: 2444, type: !282)
!8381 = !DILocation(line: 2444, column: 24, scope: !8363)
!8382 = !DILocalVariable(name: "orig_iova", scope: !8363, file: !3, line: 2445, type: !285)
!8383 = !DILocation(line: 2445, column: 16, scope: !8363)
!8384 = !DILocation(line: 2445, column: 28, scope: !8363)
!8385 = !DILocalVariable(name: "min_pagesz", scope: !8363, file: !3, line: 2446, type: !7)
!8386 = !DILocation(line: 2446, column: 15, scope: !8363)
!8387 = !DILocation(line: 2448, column: 6, scope: !8388)
!8388 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 2448, column: 6)
!8389 = !DILocation(line: 2448, column: 6, scope: !8363)
!8390 = !DILocation(line: 2450, column: 3, scope: !8388)
!8391 = !DILocation(line: 2452, column: 6, scope: !8392)
!8392 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 2452, column: 6)
!8393 = !DILocation(line: 2452, column: 6, scope: !8363)
!8394 = !DILocation(line: 2453, column: 3, scope: !8392)
!8395 = !DILocation(line: 2456, column: 26, scope: !8363)
!8396 = !DILocation(line: 2456, column: 34, scope: !8363)
!8397 = !DILocation(line: 237, column: 11, scope: !4934, inlinedAt: !8365)
!8398 = !DILocation(line: 235, column: 2, scope: !4934, inlinedAt: !8365)
!8399 = !DILocation(line: 238, column: 9, scope: !4934, inlinedAt: !8365)
!8400 = !DILocation(line: 2456, column: 17, scope: !8363)
!8401 = !DILocation(line: 2456, column: 13, scope: !8363)
!8402 = !DILocation(line: 2463, column: 7, scope: !8403)
!8403 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 2463, column: 6)
!8404 = !DILocation(line: 2463, column: 6, scope: !8363)
!8405 = !DILocation(line: 2464, column: 3, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8403, file: !3, line: 2463, column: 44)
!8407 = !DILocation(line: 2466, column: 3, scope: !8406)
!8408 = !DILocation(line: 2469, column: 2, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8410, file: !3, line: 2469, column: 2)
!8410 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 2469, column: 2)
!8411 = !DILocation(line: 2469, column: 2, scope: !8410)
!8412 = !DILocation(line: 2475, column: 2, scope: !8363)
!8413 = !DILocation(line: 2475, column: 9, scope: !8363)
!8414 = !DILocation(line: 2475, column: 20, scope: !8363)
!8415 = !DILocation(line: 2475, column: 18, scope: !8363)
!8416 = !DILocalVariable(name: "pgsize", scope: !8417, file: !3, line: 2476, type: !282)
!8417 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 2475, column: 26)
!8418 = !DILocation(line: 2476, column: 10, scope: !8417)
!8419 = !DILocation(line: 2476, column: 32, scope: !8417)
!8420 = !DILocation(line: 2476, column: 40, scope: !8417)
!8421 = !DILocation(line: 2476, column: 46, scope: !8417)
!8422 = !DILocation(line: 2476, column: 53, scope: !8417)
!8423 = !DILocation(line: 2476, column: 51, scope: !8417)
!8424 = !DILocation(line: 2476, column: 19, scope: !8417)
!8425 = !DILocation(line: 2478, column: 19, scope: !8417)
!8426 = !DILocation(line: 2478, column: 24, scope: !8417)
!8427 = !DILocation(line: 2478, column: 30, scope: !8417)
!8428 = !DILocation(line: 2478, column: 38, scope: !8417)
!8429 = !DILocation(line: 2478, column: 44, scope: !8417)
!8430 = !DILocation(line: 2478, column: 52, scope: !8417)
!8431 = !DILocation(line: 2478, column: 17, scope: !8417)
!8432 = !DILocation(line: 2479, column: 8, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2479, column: 7)
!8434 = !DILocation(line: 2479, column: 7, scope: !8417)
!8435 = !DILocation(line: 2480, column: 4, scope: !8433)
!8436 = !DILocation(line: 2482, column: 3, scope: !8437)
!8437 = distinct !DILexicalBlock(scope: !8438, file: !3, line: 2482, column: 3)
!8438 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 2482, column: 3)
!8439 = !DILocation(line: 2482, column: 3, scope: !8438)
!8440 = !DILocation(line: 2485, column: 11, scope: !8417)
!8441 = !DILocation(line: 2485, column: 8, scope: !8417)
!8442 = !DILocation(line: 2486, column: 15, scope: !8417)
!8443 = !DILocation(line: 2486, column: 12, scope: !8417)
!8444 = distinct !{!8444, !8412, !8445}
!8445 = !DILocation(line: 2487, column: 2, scope: !8363)
!8446 = !DILocation(line: 2489, column: 14, scope: !8363)
!8447 = !DILocation(line: 2489, column: 25, scope: !8363)
!8448 = !DILocation(line: 2489, column: 31, scope: !8363)
!8449 = !DILocation(line: 2489, column: 2, scope: !8363)
!8450 = !DILocation(line: 2490, column: 9, scope: !8363)
!8451 = !DILocation(line: 2490, column: 2, scope: !8363)
!8452 = !DILocation(line: 2491, column: 1, scope: !8363)
!8453 = distinct !DISubprogram(name: "iommu_iotlb_sync", scope: !6, file: !6, line: 526, type: !3538, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8454 = !DILocalVariable(name: "domain", arg: 1, scope: !8453, file: !6, line: 526, type: !3489)
!8455 = !DILocation(line: 526, column: 58, scope: !8453)
!8456 = !DILocalVariable(name: "iotlb_gather", arg: 2, scope: !8453, file: !6, line: 527, type: !3528)
!8457 = !DILocation(line: 527, column: 34, scope: !8453)
!8458 = !DILocation(line: 529, column: 6, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8453, file: !6, line: 529, column: 6)
!8460 = !DILocation(line: 529, column: 14, scope: !8459)
!8461 = !DILocation(line: 529, column: 19, scope: !8459)
!8462 = !DILocation(line: 529, column: 6, scope: !8453)
!8463 = !DILocation(line: 530, column: 3, scope: !8459)
!8464 = !DILocation(line: 530, column: 11, scope: !8459)
!8465 = !DILocation(line: 530, column: 16, scope: !8459)
!8466 = !DILocation(line: 530, column: 27, scope: !8459)
!8467 = !DILocation(line: 530, column: 35, scope: !8459)
!8468 = !DILocation(line: 532, column: 26, scope: !8453)
!8469 = !DILocation(line: 532, column: 2, scope: !8453)
!8470 = !DILocation(line: 533, column: 1, scope: !8453)
!8471 = distinct !DISubprogram(name: "iommu_unmap_fast", scope: !3, file: !3, line: 2507, type: !3526, scopeLine: 2510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8472 = !DILocalVariable(name: "domain", arg: 1, scope: !8471, file: !3, line: 2507, type: !3489)
!8473 = !DILocation(line: 2507, column: 46, scope: !8471)
!8474 = !DILocalVariable(name: "iova", arg: 2, scope: !8471, file: !3, line: 2508, type: !285)
!8475 = !DILocation(line: 2508, column: 18, scope: !8471)
!8476 = !DILocalVariable(name: "size", arg: 3, scope: !8471, file: !3, line: 2508, type: !282)
!8477 = !DILocation(line: 2508, column: 31, scope: !8471)
!8478 = !DILocalVariable(name: "iotlb_gather", arg: 4, scope: !8471, file: !3, line: 2509, type: !3528)
!8479 = !DILocation(line: 2509, column: 31, scope: !8471)
!8480 = !DILocation(line: 2511, column: 23, scope: !8471)
!8481 = !DILocation(line: 2511, column: 31, scope: !8471)
!8482 = !DILocation(line: 2511, column: 37, scope: !8471)
!8483 = !DILocation(line: 2511, column: 43, scope: !8471)
!8484 = !DILocation(line: 2511, column: 9, scope: !8471)
!8485 = !DILocation(line: 2511, column: 2, scope: !8471)
!8486 = distinct !DISubprogram(name: "iommu_map_sg", scope: !3, file: !3, line: 2559, type: !8487, scopeLine: 2561, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8487 = !DISubroutineType(types: !8488)
!8488 = !{!282, !3489, !285, !8489, !7, !135}
!8489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8490, size: 64)
!8490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !8491, line: 11, size: 256, elements: !8492)
!8491 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!8492 = !{!8493, !8494, !8495, !8496, !8497}
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !8490, file: !8491, line: 12, baseType: !285, size: 64)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8490, file: !8491, line: 13, baseType: !7, size: 32, offset: 64)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !8490, file: !8491, line: 14, baseType: !7, size: 32, offset: 96)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !8490, file: !8491, line: 15, baseType: !885, size: 64, offset: 128)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !8490, file: !8491, line: 17, baseType: !7, size: 32, offset: 192)
!8498 = !DILocalVariable(name: "domain", arg: 1, scope: !8486, file: !3, line: 2559, type: !3489)
!8499 = !DILocation(line: 2559, column: 42, scope: !8486)
!8500 = !DILocalVariable(name: "iova", arg: 2, scope: !8486, file: !3, line: 2559, type: !285)
!8501 = !DILocation(line: 2559, column: 64, scope: !8486)
!8502 = !DILocalVariable(name: "sg", arg: 3, scope: !8486, file: !3, line: 2560, type: !8489)
!8503 = !DILocation(line: 2560, column: 27, scope: !8486)
!8504 = !DILocalVariable(name: "nents", arg: 4, scope: !8486, file: !3, line: 2560, type: !7)
!8505 = !DILocation(line: 2560, column: 44, scope: !8486)
!8506 = !DILocalVariable(name: "prot", arg: 5, scope: !8486, file: !3, line: 2560, type: !135)
!8507 = !DILocation(line: 2560, column: 55, scope: !8486)
!8508 = !DILocation(line: 2562, column: 2, scope: !8486)
!8509 = !DILocation(line: 2562, column: 2, scope: !8510)
!8510 = distinct !DILexicalBlock(scope: !8486, file: !3, line: 2562, column: 2)
!8511 = !DILocation(line: 2562, column: 2, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8510, file: !3, line: 2562, column: 2)
!8513 = !DILocation(line: 2563, column: 24, scope: !8486)
!8514 = !DILocation(line: 2563, column: 32, scope: !8486)
!8515 = !DILocation(line: 2563, column: 38, scope: !8486)
!8516 = !DILocation(line: 2563, column: 42, scope: !8486)
!8517 = !DILocation(line: 2563, column: 49, scope: !8486)
!8518 = !DILocation(line: 2563, column: 9, scope: !8486)
!8519 = !DILocation(line: 2563, column: 2, scope: !8486)
!8520 = distinct !DISubprogram(name: "__iommu_map_sg", scope: !3, file: !3, line: 2515, type: !8521, scopeLine: 2518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!282, !3489, !285, !8489, !7, !135, !708}
!8523 = !DILocalVariable(name: "domain", arg: 1, scope: !8520, file: !3, line: 2515, type: !3489)
!8524 = !DILocation(line: 2515, column: 51, scope: !8520)
!8525 = !DILocalVariable(name: "iova", arg: 2, scope: !8520, file: !3, line: 2515, type: !285)
!8526 = !DILocation(line: 2515, column: 73, scope: !8520)
!8527 = !DILocalVariable(name: "sg", arg: 3, scope: !8520, file: !3, line: 2516, type: !8489)
!8528 = !DILocation(line: 2516, column: 29, scope: !8520)
!8529 = !DILocalVariable(name: "nents", arg: 4, scope: !8520, file: !3, line: 2516, type: !7)
!8530 = !DILocation(line: 2516, column: 46, scope: !8520)
!8531 = !DILocalVariable(name: "prot", arg: 5, scope: !8520, file: !3, line: 2516, type: !135)
!8532 = !DILocation(line: 2516, column: 57, scope: !8520)
!8533 = !DILocalVariable(name: "gfp", arg: 6, scope: !8520, file: !3, line: 2517, type: !708)
!8534 = !DILocation(line: 2517, column: 15, scope: !8520)
!8535 = !DILocalVariable(name: "len", scope: !8520, file: !3, line: 2519, type: !282)
!8536 = !DILocation(line: 2519, column: 9, scope: !8520)
!8537 = !DILocalVariable(name: "mapped", scope: !8520, file: !3, line: 2519, type: !282)
!8538 = !DILocation(line: 2519, column: 18, scope: !8520)
!8539 = !DILocalVariable(name: "start", scope: !8520, file: !3, line: 2520, type: !2091)
!8540 = !DILocation(line: 2520, column: 14, scope: !8520)
!8541 = !DILocalVariable(name: "i", scope: !8520, file: !3, line: 2521, type: !7)
!8542 = !DILocation(line: 2521, column: 15, scope: !8520)
!8543 = !DILocalVariable(name: "ret", scope: !8520, file: !3, line: 2522, type: !135)
!8544 = !DILocation(line: 2522, column: 6, scope: !8520)
!8545 = !DILocation(line: 2524, column: 2, scope: !8520)
!8546 = !DILocation(line: 2524, column: 9, scope: !8520)
!8547 = !DILocation(line: 2524, column: 14, scope: !8520)
!8548 = !DILocation(line: 2524, column: 11, scope: !8520)
!8549 = !DILocalVariable(name: "s_phys", scope: !8550, file: !3, line: 2525, type: !2091)
!8550 = distinct !DILexicalBlock(scope: !8520, file: !3, line: 2524, column: 21)
!8551 = !DILocation(line: 2525, column: 15, scope: !8550)
!8552 = !DILocation(line: 2525, column: 32, scope: !8550)
!8553 = !DILocation(line: 2525, column: 24, scope: !8550)
!8554 = !DILocation(line: 2527, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2527, column: 7)
!8556 = !DILocation(line: 2527, column: 11, scope: !8555)
!8557 = !DILocation(line: 2527, column: 14, scope: !8555)
!8558 = !DILocation(line: 2527, column: 24, scope: !8555)
!8559 = !DILocation(line: 2527, column: 32, scope: !8555)
!8560 = !DILocation(line: 2527, column: 30, scope: !8555)
!8561 = !DILocation(line: 2527, column: 21, scope: !8555)
!8562 = !DILocation(line: 2527, column: 7, scope: !8550)
!8563 = !DILocation(line: 2528, column: 22, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 2527, column: 37)
!8565 = !DILocation(line: 2528, column: 30, scope: !8564)
!8566 = !DILocation(line: 2528, column: 37, scope: !8564)
!8567 = !DILocation(line: 2528, column: 35, scope: !8564)
!8568 = !DILocation(line: 2528, column: 45, scope: !8564)
!8569 = !DILocation(line: 2529, column: 6, scope: !8564)
!8570 = !DILocation(line: 2529, column: 11, scope: !8564)
!8571 = !DILocation(line: 2529, column: 17, scope: !8564)
!8572 = !DILocation(line: 2528, column: 10, scope: !8564)
!8573 = !DILocation(line: 2528, column: 8, scope: !8564)
!8574 = !DILocation(line: 2531, column: 8, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8564, file: !3, line: 2531, column: 8)
!8576 = !DILocation(line: 2531, column: 8, scope: !8564)
!8577 = !DILocation(line: 2532, column: 5, scope: !8575)
!8578 = !DILocation(line: 2534, column: 14, scope: !8564)
!8579 = !DILocation(line: 2534, column: 11, scope: !8564)
!8580 = !DILocation(line: 2535, column: 8, scope: !8564)
!8581 = !DILocation(line: 2536, column: 3, scope: !8564)
!8582 = !DILocation(line: 2538, column: 7, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2538, column: 7)
!8584 = !DILocation(line: 2538, column: 7, scope: !8550)
!8585 = !DILocation(line: 2539, column: 11, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 2538, column: 12)
!8587 = !DILocation(line: 2539, column: 15, scope: !8586)
!8588 = !DILocation(line: 2539, column: 8, scope: !8586)
!8589 = !DILocation(line: 2540, column: 3, scope: !8586)
!8590 = !DILocation(line: 2541, column: 10, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 2540, column: 10)
!8592 = !DILocation(line: 2541, column: 14, scope: !8591)
!8593 = !DILocation(line: 2541, column: 8, scope: !8591)
!8594 = !DILocation(line: 2542, column: 12, scope: !8591)
!8595 = !DILocation(line: 2542, column: 10, scope: !8591)
!8596 = !DILocation(line: 2545, column: 7, scope: !8597)
!8597 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 2545, column: 7)
!8598 = !DILocation(line: 2545, column: 13, scope: !8597)
!8599 = !DILocation(line: 2545, column: 11, scope: !8597)
!8600 = !DILocation(line: 2545, column: 7, scope: !8550)
!8601 = !DILocation(line: 2546, column: 17, scope: !8597)
!8602 = !DILocation(line: 2546, column: 9, scope: !8597)
!8603 = !DILocation(line: 2546, column: 7, scope: !8597)
!8604 = !DILocation(line: 2546, column: 4, scope: !8597)
!8605 = distinct !{!8605, !8545, !8606}
!8606 = !DILocation(line: 2547, column: 2, scope: !8520)
!8607 = !DILocation(line: 2549, column: 9, scope: !8520)
!8608 = !DILocation(line: 2549, column: 2, scope: !8520)
!8609 = !DILabel(scope: !8520, name: "out_err", file: !3, line: 2551)
!8610 = !DILocation(line: 2551, column: 1, scope: !8520)
!8611 = !DILocation(line: 2553, column: 14, scope: !8520)
!8612 = !DILocation(line: 2553, column: 22, scope: !8520)
!8613 = !DILocation(line: 2553, column: 28, scope: !8520)
!8614 = !DILocation(line: 2553, column: 2, scope: !8520)
!8615 = !DILocation(line: 2555, column: 2, scope: !8520)
!8616 = !DILocation(line: 2557, column: 1, scope: !8520)
!8617 = distinct !DISubprogram(name: "iommu_map_sg_atomic", scope: !3, file: !3, line: 2567, type: !8487, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8618 = !DILocalVariable(name: "domain", arg: 1, scope: !8617, file: !3, line: 2567, type: !3489)
!8619 = !DILocation(line: 2567, column: 49, scope: !8617)
!8620 = !DILocalVariable(name: "iova", arg: 2, scope: !8617, file: !3, line: 2567, type: !285)
!8621 = !DILocation(line: 2567, column: 71, scope: !8617)
!8622 = !DILocalVariable(name: "sg", arg: 3, scope: !8617, file: !3, line: 2568, type: !8489)
!8623 = !DILocation(line: 2568, column: 27, scope: !8617)
!8624 = !DILocalVariable(name: "nents", arg: 4, scope: !8617, file: !3, line: 2568, type: !7)
!8625 = !DILocation(line: 2568, column: 44, scope: !8617)
!8626 = !DILocalVariable(name: "prot", arg: 5, scope: !8617, file: !3, line: 2568, type: !135)
!8627 = !DILocation(line: 2568, column: 55, scope: !8617)
!8628 = !DILocation(line: 2570, column: 24, scope: !8617)
!8629 = !DILocation(line: 2570, column: 32, scope: !8617)
!8630 = !DILocation(line: 2570, column: 38, scope: !8617)
!8631 = !DILocation(line: 2570, column: 42, scope: !8617)
!8632 = !DILocation(line: 2570, column: 49, scope: !8617)
!8633 = !DILocation(line: 2570, column: 9, scope: !8617)
!8634 = !DILocation(line: 2570, column: 2, scope: !8617)
!8635 = distinct !DISubprogram(name: "iommu_domain_window_enable", scope: !3, file: !3, line: 2574, type: !3704, scopeLine: 2576, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8636 = !DILocalVariable(name: "domain", arg: 1, scope: !8635, file: !3, line: 2574, type: !3489)
!8637 = !DILocation(line: 2574, column: 53, scope: !8635)
!8638 = !DILocalVariable(name: "wnd_nr", arg: 2, scope: !8635, file: !3, line: 2574, type: !376)
!8639 = !DILocation(line: 2574, column: 65, scope: !8635)
!8640 = !DILocalVariable(name: "paddr", arg: 3, scope: !8635, file: !3, line: 2575, type: !2091)
!8641 = !DILocation(line: 2575, column: 23, scope: !8635)
!8642 = !DILocalVariable(name: "size", arg: 4, scope: !8635, file: !3, line: 2575, type: !382)
!8643 = !DILocation(line: 2575, column: 34, scope: !8635)
!8644 = !DILocalVariable(name: "prot", arg: 5, scope: !8635, file: !3, line: 2575, type: !135)
!8645 = !DILocation(line: 2575, column: 44, scope: !8635)
!8646 = !DILocation(line: 2577, column: 6, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 2577, column: 6)
!8648 = !DILocation(line: 2577, column: 6, scope: !8635)
!8649 = !DILocation(line: 2578, column: 3, scope: !8647)
!8650 = !DILocation(line: 2580, column: 9, scope: !8635)
!8651 = !DILocation(line: 2580, column: 17, scope: !8635)
!8652 = !DILocation(line: 2580, column: 22, scope: !8635)
!8653 = !DILocation(line: 2580, column: 43, scope: !8635)
!8654 = !DILocation(line: 2580, column: 51, scope: !8635)
!8655 = !DILocation(line: 2580, column: 59, scope: !8635)
!8656 = !DILocation(line: 2580, column: 66, scope: !8635)
!8657 = !DILocation(line: 2581, column: 8, scope: !8635)
!8658 = !DILocation(line: 2580, column: 2, scope: !8635)
!8659 = !DILocation(line: 2582, column: 1, scope: !8635)
!8660 = distinct !DISubprogram(name: "iommu_domain_window_disable", scope: !3, file: !3, line: 2585, type: !3708, scopeLine: 2586, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8661 = !DILocalVariable(name: "domain", arg: 1, scope: !8660, file: !3, line: 2585, type: !3489)
!8662 = !DILocation(line: 2585, column: 55, scope: !8660)
!8663 = !DILocalVariable(name: "wnd_nr", arg: 2, scope: !8660, file: !3, line: 2585, type: !376)
!8664 = !DILocation(line: 2585, column: 67, scope: !8660)
!8665 = !DILocation(line: 2587, column: 6, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 2587, column: 6)
!8667 = !DILocation(line: 2587, column: 6, scope: !8660)
!8668 = !DILocation(line: 2588, column: 3, scope: !8666)
!8669 = !DILocation(line: 2590, column: 9, scope: !8660)
!8670 = !DILocation(line: 2590, column: 17, scope: !8660)
!8671 = !DILocation(line: 2590, column: 22, scope: !8660)
!8672 = !DILocation(line: 2590, column: 44, scope: !8660)
!8673 = !DILocation(line: 2590, column: 52, scope: !8660)
!8674 = !DILocation(line: 2590, column: 2, scope: !8660)
!8675 = !DILocation(line: 2591, column: 1, scope: !8660)
!8676 = distinct !DISubprogram(name: "report_iommu_fault", scope: !3, file: !3, line: 2618, type: !8677, scopeLine: 2620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8677 = !DISubroutineType(types: !8678)
!8678 = !{!135, !3489, !174, !285, !135}
!8679 = !DILocalVariable(name: "domain", arg: 1, scope: !8676, file: !3, line: 2618, type: !3489)
!8680 = !DILocation(line: 2618, column: 45, scope: !8676)
!8681 = !DILocalVariable(name: "dev", arg: 2, scope: !8676, file: !3, line: 2618, type: !174)
!8682 = !DILocation(line: 2618, column: 68, scope: !8676)
!8683 = !DILocalVariable(name: "iova", arg: 3, scope: !8676, file: !3, line: 2619, type: !285)
!8684 = !DILocation(line: 2619, column: 24, scope: !8676)
!8685 = !DILocalVariable(name: "flags", arg: 4, scope: !8676, file: !3, line: 2619, type: !135)
!8686 = !DILocation(line: 2619, column: 34, scope: !8676)
!8687 = !DILocalVariable(name: "ret", scope: !8676, file: !3, line: 2621, type: !135)
!8688 = !DILocation(line: 2621, column: 6, scope: !8676)
!8689 = !DILocation(line: 2627, column: 6, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 2627, column: 6)
!8691 = !DILocation(line: 2627, column: 14, scope: !8690)
!8692 = !DILocation(line: 2627, column: 6, scope: !8676)
!8693 = !DILocation(line: 2628, column: 9, scope: !8690)
!8694 = !DILocation(line: 2628, column: 17, scope: !8690)
!8695 = !DILocation(line: 2628, column: 25, scope: !8690)
!8696 = !DILocation(line: 2628, column: 33, scope: !8690)
!8697 = !DILocation(line: 2628, column: 38, scope: !8690)
!8698 = !DILocation(line: 2628, column: 44, scope: !8690)
!8699 = !DILocation(line: 2629, column: 7, scope: !8690)
!8700 = !DILocation(line: 2629, column: 15, scope: !8690)
!8701 = !DILocation(line: 2628, column: 7, scope: !8690)
!8702 = !DILocation(line: 2628, column: 3, scope: !8690)
!8703 = !DILocation(line: 2631, column: 22, scope: !8676)
!8704 = !DILocation(line: 2631, column: 27, scope: !8676)
!8705 = !DILocation(line: 2631, column: 33, scope: !8676)
!8706 = !DILocation(line: 2631, column: 2, scope: !8676)
!8707 = !DILocation(line: 2632, column: 9, scope: !8676)
!8708 = !DILocation(line: 2632, column: 2, scope: !8676)
!8709 = distinct !DISubprogram(name: "trace_io_page_fault", scope: !6148, file: !6148, line: 158, type: !8710, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8710 = !DISubroutineType(types: !8711)
!8711 = !{null, !174, !285, !135}
!8712 = !DILocalVariable(name: "dev", arg: 1, scope: !8709, file: !6148, line: 158, type: !174)
!8713 = !DILocation(line: 158, column: 1, scope: !8709)
!8714 = !DILocalVariable(name: "iova", arg: 2, scope: !8709, file: !6148, line: 158, type: !285)
!8715 = !DILocalVariable(name: "flags", arg: 3, scope: !8709, file: !6148, line: 158, type: !135)
!8716 = distinct !DISubprogram(name: "iommu_init", scope: !3, file: !3, line: 2636, type: !4587, scopeLine: 2637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8717 = !DILocation(line: 2639, column: 19, scope: !8716)
!8718 = !DILocation(line: 2638, column: 21, scope: !8716)
!8719 = !DILocation(line: 2638, column: 19, scope: !8716)
!8720 = !DILocation(line: 2640, column: 2, scope: !8716)
!8721 = !DILocation(line: 2640, column: 2, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8723, file: !3, line: 2640, column: 2)
!8723 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 2640, column: 2)
!8724 = !DILocation(line: 2640, column: 2, scope: !8723)
!8725 = !DILocation(line: 2640, column: 2, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 2640, column: 2)
!8727 = !DILocation(line: 2640, column: 2, scope: !8728)
!8728 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 2640, column: 2)
!8729 = !DILocation(line: 2640, column: 2, scope: !8730)
!8730 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 2640, column: 2)
!8731 = !{i32 -2141318224, i32 -2141318195, i32 -2141318149, i32 -2141318091, i32 -2141318037, i32 -2141317983, i32 -2141317928, i32 -2141317897}
!8732 = !DILocation(line: 2640, column: 2, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2640, column: 2)
!8734 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 2640, column: 2)
!8735 = !{i32 -2141317452, i32 -2141317445, i32 -2141317391, i32 -2141317360, i32 -2141317330}
!8736 = !DILocation(line: 2640, column: 2, scope: !8734)
!8737 = !DILocation(line: 2642, column: 2, scope: !8716)
!8738 = !DILocation(line: 2644, column: 2, scope: !8716)
!8739 = distinct !DISubprogram(name: "iommu_domain_get_attr", scope: !3, file: !3, line: 2648, type: !3682, scopeLine: 2650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8740 = !DILocalVariable(name: "domain", arg: 1, scope: !8739, file: !3, line: 2648, type: !3489)
!8741 = !DILocation(line: 2648, column: 48, scope: !8739)
!8742 = !DILocalVariable(name: "attr", arg: 2, scope: !8739, file: !3, line: 2649, type: !99)
!8743 = !DILocation(line: 2649, column: 22, scope: !8739)
!8744 = !DILocalVariable(name: "data", arg: 3, scope: !8739, file: !3, line: 2649, type: !162)
!8745 = !DILocation(line: 2649, column: 34, scope: !8739)
!8746 = !DILocalVariable(name: "geometry", scope: !8739, file: !3, line: 2651, type: !8747)
!8747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3502, size: 64)
!8748 = !DILocation(line: 2651, column: 32, scope: !8739)
!8749 = !DILocalVariable(name: "paging", scope: !8739, file: !3, line: 2652, type: !856)
!8750 = !DILocation(line: 2652, column: 8, scope: !8739)
!8751 = !DILocalVariable(name: "ret", scope: !8739, file: !3, line: 2653, type: !135)
!8752 = !DILocation(line: 2653, column: 6, scope: !8739)
!8753 = !DILocation(line: 2655, column: 10, scope: !8739)
!8754 = !DILocation(line: 2655, column: 2, scope: !8739)
!8755 = !DILocation(line: 2657, column: 15, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 2655, column: 16)
!8757 = !DILocation(line: 2657, column: 13, scope: !8756)
!8758 = !DILocation(line: 2658, column: 4, scope: !8756)
!8759 = !DILocation(line: 2658, column: 15, scope: !8756)
!8760 = !DILocation(line: 2658, column: 23, scope: !8756)
!8761 = !DILocation(line: 2660, column: 3, scope: !8756)
!8762 = !DILocation(line: 2662, column: 13, scope: !8756)
!8763 = !DILocation(line: 2662, column: 11, scope: !8756)
!8764 = !DILocation(line: 2663, column: 14, scope: !8756)
!8765 = !DILocation(line: 2663, column: 22, scope: !8756)
!8766 = !DILocation(line: 2663, column: 36, scope: !8756)
!8767 = !DILocation(line: 2663, column: 4, scope: !8756)
!8768 = !DILocation(line: 2663, column: 11, scope: !8756)
!8769 = !DILocation(line: 2664, column: 3, scope: !8756)
!8770 = !DILocation(line: 2666, column: 8, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8756, file: !3, line: 2666, column: 7)
!8772 = !DILocation(line: 2666, column: 16, scope: !8771)
!8773 = !DILocation(line: 2666, column: 21, scope: !8771)
!8774 = !DILocation(line: 2666, column: 7, scope: !8756)
!8775 = !DILocation(line: 2667, column: 4, scope: !8771)
!8776 = !DILocation(line: 2669, column: 9, scope: !8756)
!8777 = !DILocation(line: 2669, column: 17, scope: !8756)
!8778 = !DILocation(line: 2669, column: 22, scope: !8756)
!8779 = !DILocation(line: 2669, column: 38, scope: !8756)
!8780 = !DILocation(line: 2669, column: 46, scope: !8756)
!8781 = !DILocation(line: 2669, column: 52, scope: !8756)
!8782 = !DILocation(line: 2669, column: 7, scope: !8756)
!8783 = !DILocation(line: 2670, column: 2, scope: !8756)
!8784 = !DILocation(line: 2672, column: 9, scope: !8739)
!8785 = !DILocation(line: 2672, column: 2, scope: !8739)
!8786 = !DILocation(line: 2673, column: 1, scope: !8739)
!8787 = distinct !DISubprogram(name: "iommu_domain_set_attr", scope: !3, file: !3, line: 2676, type: !3682, scopeLine: 2678, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8788 = !DILocalVariable(name: "domain", arg: 1, scope: !8787, file: !3, line: 2676, type: !3489)
!8789 = !DILocation(line: 2676, column: 48, scope: !8787)
!8790 = !DILocalVariable(name: "attr", arg: 2, scope: !8787, file: !3, line: 2677, type: !99)
!8791 = !DILocation(line: 2677, column: 22, scope: !8787)
!8792 = !DILocalVariable(name: "data", arg: 3, scope: !8787, file: !3, line: 2677, type: !162)
!8793 = !DILocation(line: 2677, column: 34, scope: !8787)
!8794 = !DILocalVariable(name: "ret", scope: !8787, file: !3, line: 2679, type: !135)
!8795 = !DILocation(line: 2679, column: 6, scope: !8787)
!8796 = !DILocation(line: 2681, column: 10, scope: !8787)
!8797 = !DILocation(line: 2681, column: 2, scope: !8787)
!8798 = !DILocation(line: 2683, column: 7, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 2683, column: 7)
!8800 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 2681, column: 16)
!8801 = !DILocation(line: 2683, column: 15, scope: !8799)
!8802 = !DILocation(line: 2683, column: 20, scope: !8799)
!8803 = !DILocation(line: 2683, column: 36, scope: !8799)
!8804 = !DILocation(line: 2683, column: 7, scope: !8800)
!8805 = !DILocation(line: 2684, column: 4, scope: !8799)
!8806 = !DILocation(line: 2686, column: 9, scope: !8800)
!8807 = !DILocation(line: 2686, column: 17, scope: !8800)
!8808 = !DILocation(line: 2686, column: 22, scope: !8800)
!8809 = !DILocation(line: 2686, column: 38, scope: !8800)
!8810 = !DILocation(line: 2686, column: 46, scope: !8800)
!8811 = !DILocation(line: 2686, column: 52, scope: !8800)
!8812 = !DILocation(line: 2686, column: 7, scope: !8800)
!8813 = !DILocation(line: 2687, column: 2, scope: !8800)
!8814 = !DILocation(line: 2689, column: 9, scope: !8787)
!8815 = !DILocation(line: 2689, column: 2, scope: !8787)
!8816 = !DILocation(line: 2690, column: 1, scope: !8787)
!8817 = distinct !DISubprogram(name: "generic_iommu_put_resv_regions", scope: !3, file: !3, line: 2719, type: !3687, scopeLine: 2720, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8818 = !DILocalVariable(name: "dev", arg: 1, scope: !8817, file: !3, line: 2719, type: !174)
!8819 = !DILocation(line: 2719, column: 52, scope: !8817)
!8820 = !DILocalVariable(name: "list", arg: 2, scope: !8817, file: !3, line: 2719, type: !171)
!8821 = !DILocation(line: 2719, column: 75, scope: !8817)
!8822 = !DILocalVariable(name: "entry", scope: !8817, file: !3, line: 2721, type: !3694)
!8823 = !DILocation(line: 2721, column: 28, scope: !8817)
!8824 = !DILocalVariable(name: "next", scope: !8817, file: !3, line: 2721, type: !3694)
!8825 = !DILocation(line: 2721, column: 36, scope: !8817)
!8826 = !DILocalVariable(name: "__mptr", scope: !8827, file: !3, line: 2723, type: !162)
!8827 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2723, column: 2)
!8828 = distinct !DILexicalBlock(scope: !8817, file: !3, line: 2723, column: 2)
!8829 = !DILocation(line: 2723, column: 2, scope: !8827)
!8830 = !DILocation(line: 2723, column: 2, scope: !8831)
!8831 = distinct !DILexicalBlock(scope: !8827, file: !3, line: 2723, column: 2)
!8832 = !DILocation(line: 2723, column: 2, scope: !8828)
!8833 = !DILocalVariable(name: "__mptr", scope: !8834, file: !3, line: 2723, type: !162)
!8834 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2723, column: 2)
!8835 = !DILocation(line: 2723, column: 2, scope: !8834)
!8836 = !DILocation(line: 2723, column: 2, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2723, column: 2)
!8838 = !DILocation(line: 2723, column: 2, scope: !8839)
!8839 = distinct !DILexicalBlock(scope: !8828, file: !3, line: 2723, column: 2)
!8840 = !DILocation(line: 2724, column: 9, scope: !8839)
!8841 = !DILocation(line: 2724, column: 3, scope: !8839)
!8842 = !DILocalVariable(name: "__mptr", scope: !8843, file: !3, line: 2723, type: !162)
!8843 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2723, column: 2)
!8844 = !DILocation(line: 2723, column: 2, scope: !8843)
!8845 = !DILocation(line: 2723, column: 2, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 2723, column: 2)
!8847 = distinct !{!8847, !8832, !8848}
!8848 = !DILocation(line: 2724, column: 14, scope: !8828)
!8849 = !DILocation(line: 2725, column: 1, scope: !8817)
!8850 = distinct !DISubprogram(name: "iommu_alloc_resv_region", scope: !3, file: !3, line: 2728, type: !8851, scopeLine: 2731, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8851 = !DISubroutineType(types: !8852)
!8852 = !{!3694, !2091, !282, !135, !110}
!8853 = !DILocalVariable(name: "start", arg: 1, scope: !8850, file: !3, line: 2728, type: !2091)
!8854 = !DILocation(line: 2728, column: 63, scope: !8850)
!8855 = !DILocalVariable(name: "length", arg: 2, scope: !8850, file: !3, line: 2729, type: !282)
!8856 = !DILocation(line: 2729, column: 16, scope: !8850)
!8857 = !DILocalVariable(name: "prot", arg: 3, scope: !8850, file: !3, line: 2729, type: !135)
!8858 = !DILocation(line: 2729, column: 28, scope: !8850)
!8859 = !DILocalVariable(name: "type", arg: 4, scope: !8850, file: !3, line: 2730, type: !110)
!8860 = !DILocation(line: 2730, column: 30, scope: !8850)
!8861 = !DILocalVariable(name: "region", scope: !8850, file: !3, line: 2732, type: !3694)
!8862 = !DILocation(line: 2732, column: 28, scope: !8850)
!8863 = !DILocation(line: 2734, column: 11, scope: !8850)
!8864 = !DILocation(line: 2734, column: 9, scope: !8850)
!8865 = !DILocation(line: 2735, column: 7, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8850, file: !3, line: 2735, column: 6)
!8867 = !DILocation(line: 2735, column: 6, scope: !8850)
!8868 = !DILocation(line: 2736, column: 3, scope: !8866)
!8869 = !DILocation(line: 2738, column: 18, scope: !8850)
!8870 = !DILocation(line: 2738, column: 26, scope: !8850)
!8871 = !DILocation(line: 2738, column: 2, scope: !8850)
!8872 = !DILocation(line: 2739, column: 18, scope: !8850)
!8873 = !DILocation(line: 2739, column: 2, scope: !8850)
!8874 = !DILocation(line: 2739, column: 10, scope: !8850)
!8875 = !DILocation(line: 2739, column: 16, scope: !8850)
!8876 = !DILocation(line: 2740, column: 19, scope: !8850)
!8877 = !DILocation(line: 2740, column: 2, scope: !8850)
!8878 = !DILocation(line: 2740, column: 10, scope: !8850)
!8879 = !DILocation(line: 2740, column: 17, scope: !8850)
!8880 = !DILocation(line: 2741, column: 17, scope: !8850)
!8881 = !DILocation(line: 2741, column: 2, scope: !8850)
!8882 = !DILocation(line: 2741, column: 10, scope: !8850)
!8883 = !DILocation(line: 2741, column: 15, scope: !8850)
!8884 = !DILocation(line: 2742, column: 17, scope: !8850)
!8885 = !DILocation(line: 2742, column: 2, scope: !8850)
!8886 = !DILocation(line: 2742, column: 10, scope: !8850)
!8887 = !DILocation(line: 2742, column: 15, scope: !8850)
!8888 = !DILocation(line: 2743, column: 9, scope: !8850)
!8889 = !DILocation(line: 2743, column: 2, scope: !8850)
!8890 = !DILocation(line: 2744, column: 1, scope: !8850)
!8891 = distinct !DISubprogram(name: "iommu_set_default_passthrough", scope: !3, file: !3, line: 2747, type: !8892, scopeLine: 2748, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{null, !451}
!8894 = !DILocalVariable(name: "cmd_line", arg: 1, scope: !8891, file: !3, line: 2747, type: !451)
!8895 = !DILocation(line: 2747, column: 41, scope: !8891)
!8896 = !DILocation(line: 2749, column: 6, scope: !8897)
!8897 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 2749, column: 6)
!8898 = !DILocation(line: 2749, column: 6, scope: !8891)
!8899 = !DILocation(line: 2750, column: 3, scope: !8897)
!8900 = !DILocation(line: 2752, column: 24, scope: !8891)
!8901 = !DILocation(line: 2753, column: 1, scope: !8891)
!8902 = distinct !DISubprogram(name: "iommu_set_cmd_line_dma_api", scope: !3, file: !3, line: 73, type: !1844, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8903 = !DILocation(line: 75, column: 17, scope: !8902)
!8904 = !DILocation(line: 76, column: 1, scope: !8902)
!8905 = distinct !DISubprogram(name: "iommu_set_default_translated", scope: !3, file: !3, line: 2755, type: !8892, scopeLine: 2756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8906 = !DILocalVariable(name: "cmd_line", arg: 1, scope: !8905, file: !3, line: 2755, type: !451)
!8907 = !DILocation(line: 2755, column: 40, scope: !8905)
!8908 = !DILocation(line: 2757, column: 6, scope: !8909)
!8909 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 2757, column: 6)
!8910 = !DILocation(line: 2757, column: 6, scope: !8905)
!8911 = !DILocation(line: 2758, column: 3, scope: !8909)
!8912 = !DILocation(line: 2760, column: 24, scope: !8905)
!8913 = !DILocation(line: 2761, column: 1, scope: !8905)
!8914 = distinct !DISubprogram(name: "iommu_default_passthrough", scope: !3, file: !3, line: 2763, type: !3162, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8915 = !DILocation(line: 2765, column: 9, scope: !8914)
!8916 = !DILocation(line: 2765, column: 31, scope: !8914)
!8917 = !DILocation(line: 2765, column: 2, scope: !8914)
!8918 = distinct !DISubprogram(name: "iommu_ops_from_fwnode", scope: !3, file: !3, line: 2769, type: !8919, scopeLine: 2770, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8919 = !DISubroutineType(types: !8920)
!8920 = !{!3477, !3554}
!8921 = !DILocation(line: 392, column: 53, scope: !4614, inlinedAt: !8922)
!8922 = distinct !DILocation(line: 2780, column: 2, scope: !8918)
!8923 = !DILocation(line: 352, column: 51, scope: !4621, inlinedAt: !8924)
!8924 = distinct !DILocation(line: 2774, column: 2, scope: !8918)
!8925 = !DILocalVariable(name: "fwnode", arg: 1, scope: !8918, file: !3, line: 2769, type: !3554)
!8926 = !DILocation(line: 2769, column: 69, scope: !8918)
!8927 = !DILocalVariable(name: "ops", scope: !8918, file: !3, line: 2771, type: !3477)
!8928 = !DILocation(line: 2771, column: 26, scope: !8918)
!8929 = !DILocalVariable(name: "iommu", scope: !8918, file: !3, line: 2772, type: !3548)
!8930 = !DILocation(line: 2772, column: 23, scope: !8918)
!8931 = !DILocation(line: 354, column: 2, scope: !4627, inlinedAt: !8924)
!8932 = !DILocation(line: 354, column: 2, scope: !4630, inlinedAt: !8924)
!8933 = !DILocalVariable(name: "__mptr", scope: !8934, file: !3, line: 2775, type: !162)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 2775, column: 2)
!8935 = distinct !DILexicalBlock(scope: !8918, file: !3, line: 2775, column: 2)
!8936 = !DILocation(line: 2775, column: 2, scope: !8934)
!8937 = !DILocation(line: 2775, column: 2, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8934, file: !3, line: 2775, column: 2)
!8939 = !DILocation(line: 2775, column: 2, scope: !8935)
!8940 = !DILocation(line: 2775, column: 2, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 2775, column: 2)
!8942 = !DILocation(line: 2776, column: 7, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 2776, column: 7)
!8944 = !DILocation(line: 2776, column: 14, scope: !8943)
!8945 = !DILocation(line: 2776, column: 24, scope: !8943)
!8946 = !DILocation(line: 2776, column: 21, scope: !8943)
!8947 = !DILocation(line: 2776, column: 7, scope: !8941)
!8948 = !DILocation(line: 2777, column: 10, scope: !8949)
!8949 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 2776, column: 32)
!8950 = !DILocation(line: 2777, column: 17, scope: !8949)
!8951 = !DILocation(line: 2777, column: 8, scope: !8949)
!8952 = !DILocation(line: 2778, column: 4, scope: !8949)
!8953 = !DILocalVariable(name: "__mptr", scope: !8954, file: !3, line: 2775, type: !162)
!8954 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 2775, column: 2)
!8955 = !DILocation(line: 2775, column: 2, scope: !8954)
!8956 = !DILocation(line: 2775, column: 2, scope: !8957)
!8957 = distinct !DILexicalBlock(scope: !8954, file: !3, line: 2775, column: 2)
!8958 = distinct !{!8958, !8939, !8959}
!8959 = !DILocation(line: 2779, column: 3, scope: !8935)
!8960 = !DILocation(line: 394, column: 2, scope: !4635, inlinedAt: !8922)
!8961 = !DILocation(line: 394, column: 2, scope: !4638, inlinedAt: !8922)
!8962 = !DILocation(line: 2781, column: 9, scope: !8918)
!8963 = !DILocation(line: 2781, column: 2, scope: !8918)
!8964 = distinct !DISubprogram(name: "iommu_fwspec_init", scope: !3, file: !3, line: 2784, type: !8965, scopeLine: 2786, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!8965 = !DISubroutineType(types: !8966)
!8966 = !{!135, !174, !3554, !3477}
!8967 = !DILocalVariable(name: "dev", arg: 1, scope: !8964, file: !3, line: 2784, type: !174)
!8968 = !DILocation(line: 2784, column: 38, scope: !8964)
!8969 = !DILocalVariable(name: "iommu_fwnode", arg: 2, scope: !8964, file: !3, line: 2784, type: !3554)
!8970 = !DILocation(line: 2784, column: 65, scope: !8964)
!8971 = !DILocalVariable(name: "ops", arg: 3, scope: !8964, file: !3, line: 2785, type: !3477)
!8972 = !DILocation(line: 2785, column: 33, scope: !8964)
!8973 = !DILocalVariable(name: "fwspec", scope: !8964, file: !3, line: 2787, type: !4113)
!8974 = !DILocation(line: 2787, column: 23, scope: !8964)
!8975 = !DILocation(line: 2787, column: 53, scope: !8964)
!8976 = !DILocation(line: 2787, column: 32, scope: !8964)
!8977 = !DILocation(line: 2789, column: 6, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2789, column: 6)
!8979 = !DILocation(line: 2789, column: 6, scope: !8964)
!8980 = !DILocation(line: 2790, column: 10, scope: !8978)
!8981 = !DILocation(line: 2790, column: 17, scope: !8978)
!8982 = !DILocation(line: 2790, column: 25, scope: !8978)
!8983 = !DILocation(line: 2790, column: 14, scope: !8978)
!8984 = !DILocation(line: 2790, column: 3, scope: !8978)
!8985 = !DILocation(line: 2792, column: 21, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2792, column: 6)
!8987 = !DILocation(line: 2792, column: 7, scope: !8986)
!8988 = !DILocation(line: 2792, column: 6, scope: !8964)
!8989 = !DILocation(line: 2793, column: 3, scope: !8986)
!8990 = !DILocation(line: 2796, column: 19, scope: !8964)
!8991 = !DILocation(line: 2796, column: 11, scope: !8964)
!8992 = !DILocation(line: 2796, column: 9, scope: !8964)
!8993 = !DILocation(line: 2797, column: 7, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2797, column: 6)
!8995 = !DILocation(line: 2797, column: 6, scope: !8964)
!8996 = !DILocation(line: 2798, column: 3, scope: !8994)
!8997 = !DILocalVariable(name: "__to_of_node_fwnode", scope: !8998, file: !3, line: 2800, type: !3554)
!8998 = distinct !DILexicalBlock(scope: !8964, file: !3, line: 2800, column: 14)
!8999 = !DILocation(line: 2800, column: 14, scope: !8998)
!9000 = !DILocalVariable(name: "__mptr", scope: !9001, file: !3, line: 2800, type: !162)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2800, column: 14)
!9002 = !DILocation(line: 2800, column: 14, scope: !9001)
!9003 = !DILocation(line: 2800, column: 14, scope: !9004)
!9004 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 2800, column: 14)
!9005 = !DILocation(line: 2800, column: 2, scope: !8964)
!9006 = !DILocation(line: 2801, column: 25, scope: !8964)
!9007 = !DILocation(line: 2801, column: 2, scope: !8964)
!9008 = !DILocation(line: 2801, column: 10, scope: !8964)
!9009 = !DILocation(line: 2801, column: 23, scope: !8964)
!9010 = !DILocation(line: 2802, column: 16, scope: !8964)
!9011 = !DILocation(line: 2802, column: 2, scope: !8964)
!9012 = !DILocation(line: 2802, column: 10, scope: !8964)
!9013 = !DILocation(line: 2802, column: 14, scope: !8964)
!9014 = !DILocation(line: 2803, column: 23, scope: !8964)
!9015 = !DILocation(line: 2803, column: 28, scope: !8964)
!9016 = !DILocation(line: 2803, column: 2, scope: !8964)
!9017 = !DILocation(line: 2804, column: 2, scope: !8964)
!9018 = !DILocation(line: 2805, column: 1, scope: !8964)
!9019 = distinct !DISubprogram(name: "dev_iommu_fwspec_get", scope: !6, file: !6, line: 601, type: !9020, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!4113, !174}
!9022 = !DILocalVariable(name: "dev", arg: 1, scope: !9019, file: !6, line: 601, type: !174)
!9023 = !DILocation(line: 601, column: 72, scope: !9019)
!9024 = !DILocation(line: 603, column: 6, scope: !9025)
!9025 = distinct !DILexicalBlock(scope: !9019, file: !6, line: 603, column: 6)
!9026 = !DILocation(line: 603, column: 11, scope: !9025)
!9027 = !DILocation(line: 603, column: 6, scope: !9019)
!9028 = !DILocation(line: 604, column: 10, scope: !9025)
!9029 = !DILocation(line: 604, column: 15, scope: !9025)
!9030 = !DILocation(line: 604, column: 22, scope: !9025)
!9031 = !DILocation(line: 604, column: 3, scope: !9025)
!9032 = !DILocation(line: 606, column: 3, scope: !9025)
!9033 = !DILocation(line: 607, column: 1, scope: !9019)
!9034 = !DILocalVariable(name: "dev", arg: 1, scope: !4578, file: !3, line: 170, type: !174)
!9035 = !DILocation(line: 170, column: 55, scope: !4578)
!9036 = !DILocalVariable(name: "param", scope: !4578, file: !3, line: 172, type: !4095)
!9037 = !DILocation(line: 172, column: 20, scope: !4578)
!9038 = !DILocation(line: 172, column: 28, scope: !4578)
!9039 = !DILocation(line: 172, column: 33, scope: !4578)
!9040 = !DILocation(line: 174, column: 6, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 174, column: 6)
!9042 = !DILocation(line: 174, column: 6, scope: !4578)
!9043 = !DILocation(line: 175, column: 10, scope: !9041)
!9044 = !DILocation(line: 175, column: 3, scope: !9041)
!9045 = !DILocation(line: 177, column: 10, scope: !4578)
!9046 = !DILocation(line: 177, column: 8, scope: !4578)
!9047 = !DILocation(line: 178, column: 7, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 178, column: 6)
!9049 = !DILocation(line: 178, column: 6, scope: !4578)
!9050 = !DILocation(line: 179, column: 3, scope: !9048)
!9051 = !DILocation(line: 181, column: 2, scope: !4578)
!9052 = !DILocation(line: 181, column: 2, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !4578, file: !3, line: 181, column: 2)
!9054 = !DILocation(line: 182, column: 15, scope: !4578)
!9055 = !DILocation(line: 182, column: 2, scope: !4578)
!9056 = !DILocation(line: 182, column: 7, scope: !4578)
!9057 = !DILocation(line: 182, column: 13, scope: !4578)
!9058 = !DILocation(line: 183, column: 9, scope: !4578)
!9059 = !DILocation(line: 183, column: 2, scope: !4578)
!9060 = !DILocation(line: 184, column: 1, scope: !4578)
!9061 = distinct !DISubprogram(name: "__ab_c_size", scope: !9062, file: !9062, line: 301, type: !9063, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9062 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!9063 = !DISubroutineType(types: !9064)
!9064 = !{!282, !282, !282, !282}
!9065 = !DILocalVariable(name: "a", arg: 1, scope: !9061, file: !9062, line: 301, type: !282)
!9066 = !DILocation(line: 301, column: 54, scope: !9061)
!9067 = !DILocalVariable(name: "b", arg: 2, scope: !9061, file: !9062, line: 301, type: !282)
!9068 = !DILocation(line: 301, column: 64, scope: !9061)
!9069 = !DILocalVariable(name: "c", arg: 3, scope: !9061, file: !9062, line: 301, type: !282)
!9070 = !DILocation(line: 301, column: 74, scope: !9061)
!9071 = !DILocalVariable(name: "bytes", scope: !9061, file: !9062, line: 303, type: !282)
!9072 = !DILocation(line: 303, column: 9, scope: !9061)
!9073 = !DILocalVariable(name: "__a", scope: !9074, file: !9062, line: 305, type: !282)
!9074 = distinct !DILexicalBlock(scope: !9075, file: !9062, line: 305, column: 6)
!9075 = distinct !DILexicalBlock(scope: !9061, file: !9062, line: 305, column: 6)
!9076 = !DILocation(line: 305, column: 6, scope: !9074)
!9077 = !DILocalVariable(name: "__b", scope: !9074, file: !9062, line: 305, type: !282)
!9078 = !DILocalVariable(name: "__d", scope: !9074, file: !9062, line: 305, type: !9079)
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!9080 = !DILocation(line: 305, column: 6, scope: !9075)
!9081 = !DILocation(line: 305, column: 6, scope: !9061)
!9082 = !DILocation(line: 306, column: 3, scope: !9075)
!9083 = !DILocalVariable(name: "__a", scope: !9084, file: !9062, line: 307, type: !282)
!9084 = distinct !DILexicalBlock(scope: !9085, file: !9062, line: 307, column: 6)
!9085 = distinct !DILexicalBlock(scope: !9061, file: !9062, line: 307, column: 6)
!9086 = !DILocation(line: 307, column: 6, scope: !9084)
!9087 = !DILocalVariable(name: "__b", scope: !9084, file: !9062, line: 307, type: !282)
!9088 = !DILocalVariable(name: "__d", scope: !9084, file: !9062, line: 307, type: !9079)
!9089 = !DILocation(line: 307, column: 6, scope: !9085)
!9090 = !DILocation(line: 307, column: 6, scope: !9061)
!9091 = !DILocation(line: 308, column: 3, scope: !9085)
!9092 = !DILocation(line: 310, column: 9, scope: !9061)
!9093 = !DILocation(line: 310, column: 2, scope: !9061)
!9094 = !DILocation(line: 311, column: 1, scope: !9061)
!9095 = distinct !DISubprogram(name: "of_node_get", scope: !3716, file: !3716, line: 125, type: !9096, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9096 = !DISubroutineType(types: !9097)
!9097 = !{!3719, !3719}
!9098 = !DILocalVariable(name: "node", arg: 1, scope: !9095, file: !3716, line: 125, type: !3719)
!9099 = !DILocation(line: 125, column: 67, scope: !9095)
!9100 = !DILocation(line: 127, column: 9, scope: !9095)
!9101 = !DILocation(line: 127, column: 2, scope: !9095)
!9102 = distinct !DISubprogram(name: "is_of_node", scope: !3716, file: !3716, line: 155, type: !3574, scopeLine: 156, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9103 = !DILocalVariable(name: "fwnode", arg: 1, scope: !9102, file: !3716, line: 155, type: !3576)
!9104 = !DILocation(line: 155, column: 59, scope: !9102)
!9105 = !DILocation(line: 157, column: 25, scope: !9102)
!9106 = !DILocation(line: 157, column: 10, scope: !9102)
!9107 = !DILocation(line: 157, column: 33, scope: !9102)
!9108 = !DILocation(line: 157, column: 36, scope: !9102)
!9109 = !DILocation(line: 157, column: 44, scope: !9102)
!9110 = !DILocation(line: 157, column: 48, scope: !9102)
!9111 = !DILocation(line: 0, scope: !9102)
!9112 = !DILocation(line: 157, column: 2, scope: !9102)
!9113 = distinct !DISubprogram(name: "dev_iommu_fwspec_set", scope: !6, file: !6, line: 609, type: !9114, scopeLine: 611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9114 = !DISubroutineType(types: !9115)
!9115 = !{null, !174, !4113}
!9116 = !DILocalVariable(name: "dev", arg: 1, scope: !9113, file: !6, line: 609, type: !174)
!9117 = !DILocation(line: 609, column: 56, scope: !9113)
!9118 = !DILocalVariable(name: "fwspec", arg: 2, scope: !9113, file: !6, line: 610, type: !4113)
!9119 = !DILocation(line: 610, column: 27, scope: !9113)
!9120 = !DILocation(line: 612, column: 23, scope: !9113)
!9121 = !DILocation(line: 612, column: 2, scope: !9113)
!9122 = !DILocation(line: 612, column: 7, scope: !9113)
!9123 = !DILocation(line: 612, column: 14, scope: !9113)
!9124 = !DILocation(line: 612, column: 21, scope: !9113)
!9125 = !DILocation(line: 613, column: 1, scope: !9113)
!9126 = distinct !DISubprogram(name: "iommu_fwspec_free", scope: !3, file: !3, line: 2808, type: !3361, scopeLine: 2809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9127 = !DILocalVariable(name: "dev", arg: 1, scope: !9126, file: !3, line: 2808, type: !174)
!9128 = !DILocation(line: 2808, column: 39, scope: !9126)
!9129 = !DILocalVariable(name: "fwspec", scope: !9126, file: !3, line: 2810, type: !4113)
!9130 = !DILocation(line: 2810, column: 23, scope: !9126)
!9131 = !DILocation(line: 2810, column: 53, scope: !9126)
!9132 = !DILocation(line: 2810, column: 32, scope: !9126)
!9133 = !DILocation(line: 2812, column: 6, scope: !9134)
!9134 = distinct !DILexicalBlock(scope: !9126, file: !3, line: 2812, column: 6)
!9135 = !DILocation(line: 2812, column: 6, scope: !9126)
!9136 = !DILocation(line: 2813, column: 21, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9134, file: !3, line: 2812, column: 14)
!9138 = !DILocation(line: 2813, column: 29, scope: !9137)
!9139 = !DILocation(line: 2813, column: 3, scope: !9137)
!9140 = !DILocation(line: 2814, column: 9, scope: !9137)
!9141 = !DILocation(line: 2814, column: 3, scope: !9137)
!9142 = !DILocation(line: 2815, column: 24, scope: !9137)
!9143 = !DILocation(line: 2815, column: 3, scope: !9137)
!9144 = !DILocation(line: 2816, column: 2, scope: !9137)
!9145 = !DILocation(line: 2817, column: 1, scope: !9126)
!9146 = distinct !DISubprogram(name: "iommu_fwspec_add_ids", scope: !3, file: !3, line: 2820, type: !9147, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9147 = !DISubroutineType(types: !9148)
!9148 = !{!135, !174, !1380, !135}
!9149 = !DILocalVariable(name: "dev", arg: 1, scope: !9146, file: !3, line: 2820, type: !174)
!9150 = !DILocation(line: 2820, column: 41, scope: !9146)
!9151 = !DILocalVariable(name: "ids", arg: 2, scope: !9146, file: !3, line: 2820, type: !1380)
!9152 = !DILocation(line: 2820, column: 51, scope: !9146)
!9153 = !DILocalVariable(name: "num_ids", arg: 3, scope: !9146, file: !3, line: 2820, type: !135)
!9154 = !DILocation(line: 2820, column: 60, scope: !9146)
!9155 = !DILocalVariable(name: "fwspec", scope: !9146, file: !3, line: 2822, type: !4113)
!9156 = !DILocation(line: 2822, column: 23, scope: !9146)
!9157 = !DILocation(line: 2822, column: 53, scope: !9146)
!9158 = !DILocation(line: 2822, column: 32, scope: !9146)
!9159 = !DILocalVariable(name: "i", scope: !9146, file: !3, line: 2823, type: !135)
!9160 = !DILocation(line: 2823, column: 6, scope: !9146)
!9161 = !DILocalVariable(name: "new_num", scope: !9146, file: !3, line: 2823, type: !135)
!9162 = !DILocation(line: 2823, column: 9, scope: !9146)
!9163 = !DILocation(line: 2825, column: 7, scope: !9164)
!9164 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 2825, column: 6)
!9165 = !DILocation(line: 2825, column: 6, scope: !9146)
!9166 = !DILocation(line: 2826, column: 3, scope: !9164)
!9167 = !DILocation(line: 2828, column: 12, scope: !9146)
!9168 = !DILocation(line: 2828, column: 20, scope: !9146)
!9169 = !DILocation(line: 2828, column: 30, scope: !9146)
!9170 = !DILocation(line: 2828, column: 28, scope: !9146)
!9171 = !DILocation(line: 2828, column: 10, scope: !9146)
!9172 = !DILocation(line: 2829, column: 6, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 2829, column: 6)
!9174 = !DILocation(line: 2829, column: 14, scope: !9173)
!9175 = !DILocation(line: 2829, column: 6, scope: !9146)
!9176 = !DILocation(line: 2830, column: 21, scope: !9177)
!9177 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2829, column: 19)
!9178 = !DILocation(line: 2830, column: 29, scope: !9177)
!9179 = !DILocation(line: 2830, column: 12, scope: !9177)
!9180 = !DILocation(line: 2830, column: 10, scope: !9177)
!9181 = !DILocation(line: 2832, column: 8, scope: !9182)
!9182 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 2832, column: 7)
!9183 = !DILocation(line: 2832, column: 7, scope: !9177)
!9184 = !DILocation(line: 2833, column: 4, scope: !9182)
!9185 = !DILocation(line: 2835, column: 24, scope: !9177)
!9186 = !DILocation(line: 2835, column: 29, scope: !9177)
!9187 = !DILocation(line: 2835, column: 3, scope: !9177)
!9188 = !DILocation(line: 2836, column: 2, scope: !9177)
!9189 = !DILocation(line: 2838, column: 9, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9146, file: !3, line: 2838, column: 2)
!9191 = !DILocation(line: 2838, column: 7, scope: !9190)
!9192 = !DILocation(line: 2838, column: 14, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 2838, column: 2)
!9194 = !DILocation(line: 2838, column: 18, scope: !9193)
!9195 = !DILocation(line: 2838, column: 16, scope: !9193)
!9196 = !DILocation(line: 2838, column: 2, scope: !9190)
!9197 = !DILocation(line: 2839, column: 38, scope: !9193)
!9198 = !DILocation(line: 2839, column: 42, scope: !9193)
!9199 = !DILocation(line: 2839, column: 3, scope: !9193)
!9200 = !DILocation(line: 2839, column: 11, scope: !9193)
!9201 = !DILocation(line: 2839, column: 15, scope: !9193)
!9202 = !DILocation(line: 2839, column: 23, scope: !9193)
!9203 = !DILocation(line: 2839, column: 33, scope: !9193)
!9204 = !DILocation(line: 2839, column: 31, scope: !9193)
!9205 = !DILocation(line: 2839, column: 36, scope: !9193)
!9206 = !DILocation(line: 2838, column: 28, scope: !9193)
!9207 = !DILocation(line: 2838, column: 2, scope: !9193)
!9208 = distinct !{!9208, !9196, !9209}
!9209 = !DILocation(line: 2839, column: 43, scope: !9190)
!9210 = !DILocation(line: 2841, column: 20, scope: !9146)
!9211 = !DILocation(line: 2841, column: 2, scope: !9146)
!9212 = !DILocation(line: 2841, column: 10, scope: !9146)
!9213 = !DILocation(line: 2841, column: 18, scope: !9146)
!9214 = !DILocation(line: 2842, column: 2, scope: !9146)
!9215 = !DILocation(line: 2843, column: 1, scope: !9146)
!9216 = distinct !DISubprogram(name: "iommu_dev_has_feature", scope: !3, file: !3, line: 2849, type: !3752, scopeLine: 2850, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9217 = !DILocalVariable(name: "dev", arg: 1, scope: !9216, file: !3, line: 2849, type: !174)
!9218 = !DILocation(line: 2849, column: 43, scope: !9216)
!9219 = !DILocalVariable(name: "feat", arg: 2, scope: !9216, file: !3, line: 2849, type: !117)
!9220 = !DILocation(line: 2849, column: 72, scope: !9216)
!9221 = !DILocalVariable(name: "ops", scope: !9216, file: !3, line: 2851, type: !3477)
!9222 = !DILocation(line: 2851, column: 26, scope: !9216)
!9223 = !DILocation(line: 2851, column: 32, scope: !9216)
!9224 = !DILocation(line: 2851, column: 37, scope: !9216)
!9225 = !DILocation(line: 2851, column: 42, scope: !9216)
!9226 = !DILocation(line: 2853, column: 6, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9216, file: !3, line: 2853, column: 6)
!9228 = !DILocation(line: 2853, column: 10, scope: !9227)
!9229 = !DILocation(line: 2853, column: 13, scope: !9227)
!9230 = !DILocation(line: 2853, column: 18, scope: !9227)
!9231 = !DILocation(line: 2853, column: 6, scope: !9216)
!9232 = !DILocation(line: 2854, column: 10, scope: !9227)
!9233 = !DILocation(line: 2854, column: 15, scope: !9227)
!9234 = !DILocation(line: 2854, column: 28, scope: !9227)
!9235 = !DILocation(line: 2854, column: 33, scope: !9227)
!9236 = !DILocation(line: 2854, column: 3, scope: !9227)
!9237 = !DILocation(line: 2856, column: 2, scope: !9216)
!9238 = !DILocation(line: 2857, column: 1, scope: !9216)
!9239 = distinct !DISubprogram(name: "iommu_dev_enable_feature", scope: !3, file: !3, line: 2860, type: !3757, scopeLine: 2861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9240 = !DILocalVariable(name: "dev", arg: 1, scope: !9239, file: !3, line: 2860, type: !174)
!9241 = !DILocation(line: 2860, column: 45, scope: !9239)
!9242 = !DILocalVariable(name: "feat", arg: 2, scope: !9239, file: !3, line: 2860, type: !117)
!9243 = !DILocation(line: 2860, column: 74, scope: !9239)
!9244 = !DILocalVariable(name: "ops", scope: !9239, file: !3, line: 2862, type: !3477)
!9245 = !DILocation(line: 2862, column: 26, scope: !9239)
!9246 = !DILocation(line: 2862, column: 32, scope: !9239)
!9247 = !DILocation(line: 2862, column: 37, scope: !9239)
!9248 = !DILocation(line: 2862, column: 42, scope: !9239)
!9249 = !DILocation(line: 2864, column: 6, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9239, file: !3, line: 2864, column: 6)
!9251 = !DILocation(line: 2864, column: 10, scope: !9250)
!9252 = !DILocation(line: 2864, column: 13, scope: !9250)
!9253 = !DILocation(line: 2864, column: 18, scope: !9250)
!9254 = !DILocation(line: 2864, column: 6, scope: !9239)
!9255 = !DILocation(line: 2865, column: 10, scope: !9250)
!9256 = !DILocation(line: 2865, column: 15, scope: !9250)
!9257 = !DILocation(line: 2865, column: 31, scope: !9250)
!9258 = !DILocation(line: 2865, column: 36, scope: !9250)
!9259 = !DILocation(line: 2865, column: 3, scope: !9250)
!9260 = !DILocation(line: 2867, column: 2, scope: !9239)
!9261 = !DILocation(line: 2868, column: 1, scope: !9239)
!9262 = distinct !DISubprogram(name: "iommu_dev_disable_feature", scope: !3, file: !3, line: 2876, type: !3757, scopeLine: 2877, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9263 = !DILocalVariable(name: "dev", arg: 1, scope: !9262, file: !3, line: 2876, type: !174)
!9264 = !DILocation(line: 2876, column: 46, scope: !9262)
!9265 = !DILocalVariable(name: "feat", arg: 2, scope: !9262, file: !3, line: 2876, type: !117)
!9266 = !DILocation(line: 2876, column: 75, scope: !9262)
!9267 = !DILocalVariable(name: "ops", scope: !9262, file: !3, line: 2878, type: !3477)
!9268 = !DILocation(line: 2878, column: 26, scope: !9262)
!9269 = !DILocation(line: 2878, column: 32, scope: !9262)
!9270 = !DILocation(line: 2878, column: 37, scope: !9262)
!9271 = !DILocation(line: 2878, column: 42, scope: !9262)
!9272 = !DILocation(line: 2880, column: 6, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9262, file: !3, line: 2880, column: 6)
!9274 = !DILocation(line: 2880, column: 10, scope: !9273)
!9275 = !DILocation(line: 2880, column: 13, scope: !9273)
!9276 = !DILocation(line: 2880, column: 18, scope: !9273)
!9277 = !DILocation(line: 2880, column: 6, scope: !9262)
!9278 = !DILocation(line: 2881, column: 10, scope: !9273)
!9279 = !DILocation(line: 2881, column: 15, scope: !9273)
!9280 = !DILocation(line: 2881, column: 32, scope: !9273)
!9281 = !DILocation(line: 2881, column: 37, scope: !9273)
!9282 = !DILocation(line: 2881, column: 3, scope: !9273)
!9283 = !DILocation(line: 2883, column: 2, scope: !9262)
!9284 = !DILocation(line: 2884, column: 1, scope: !9262)
!9285 = distinct !DISubprogram(name: "iommu_dev_feature_enabled", scope: !3, file: !3, line: 2887, type: !3752, scopeLine: 2888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9286 = !DILocalVariable(name: "dev", arg: 1, scope: !9285, file: !3, line: 2887, type: !174)
!9287 = !DILocation(line: 2887, column: 47, scope: !9285)
!9288 = !DILocalVariable(name: "feat", arg: 2, scope: !9285, file: !3, line: 2887, type: !117)
!9289 = !DILocation(line: 2887, column: 76, scope: !9285)
!9290 = !DILocalVariable(name: "ops", scope: !9285, file: !3, line: 2889, type: !3477)
!9291 = !DILocation(line: 2889, column: 26, scope: !9285)
!9292 = !DILocation(line: 2889, column: 32, scope: !9285)
!9293 = !DILocation(line: 2889, column: 37, scope: !9285)
!9294 = !DILocation(line: 2889, column: 42, scope: !9285)
!9295 = !DILocation(line: 2891, column: 6, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9285, file: !3, line: 2891, column: 6)
!9297 = !DILocation(line: 2891, column: 10, scope: !9296)
!9298 = !DILocation(line: 2891, column: 13, scope: !9296)
!9299 = !DILocation(line: 2891, column: 18, scope: !9296)
!9300 = !DILocation(line: 2891, column: 6, scope: !9285)
!9301 = !DILocation(line: 2892, column: 10, scope: !9296)
!9302 = !DILocation(line: 2892, column: 15, scope: !9296)
!9303 = !DILocation(line: 2892, column: 32, scope: !9296)
!9304 = !DILocation(line: 2892, column: 37, scope: !9296)
!9305 = !DILocation(line: 2892, column: 3, scope: !9296)
!9306 = !DILocation(line: 2894, column: 2, scope: !9285)
!9307 = !DILocation(line: 2895, column: 1, scope: !9285)
!9308 = distinct !DISubprogram(name: "iommu_aux_attach_device", scope: !3, file: !3, line: 2908, type: !3514, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9309 = !DILocalVariable(name: "domain", arg: 1, scope: !9308, file: !3, line: 2908, type: !3489)
!9310 = !DILocation(line: 2908, column: 50, scope: !9308)
!9311 = !DILocalVariable(name: "dev", arg: 2, scope: !9308, file: !3, line: 2908, type: !174)
!9312 = !DILocation(line: 2908, column: 73, scope: !9308)
!9313 = !DILocalVariable(name: "ret", scope: !9308, file: !3, line: 2910, type: !135)
!9314 = !DILocation(line: 2910, column: 6, scope: !9308)
!9315 = !DILocation(line: 2912, column: 6, scope: !9316)
!9316 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 2912, column: 6)
!9317 = !DILocation(line: 2912, column: 14, scope: !9316)
!9318 = !DILocation(line: 2912, column: 19, scope: !9316)
!9319 = !DILocation(line: 2912, column: 6, scope: !9308)
!9320 = !DILocation(line: 2913, column: 9, scope: !9316)
!9321 = !DILocation(line: 2913, column: 17, scope: !9316)
!9322 = !DILocation(line: 2913, column: 22, scope: !9316)
!9323 = !DILocation(line: 2913, column: 37, scope: !9316)
!9324 = !DILocation(line: 2913, column: 45, scope: !9316)
!9325 = !DILocation(line: 2913, column: 7, scope: !9316)
!9326 = !DILocation(line: 2913, column: 3, scope: !9316)
!9327 = !DILocation(line: 2915, column: 7, scope: !9328)
!9328 = distinct !DILexicalBlock(scope: !9308, file: !3, line: 2915, column: 6)
!9329 = !DILocation(line: 2915, column: 6, scope: !9308)
!9330 = !DILocation(line: 2916, column: 33, scope: !9328)
!9331 = !DILocation(line: 2916, column: 3, scope: !9328)
!9332 = !DILocation(line: 2918, column: 9, scope: !9308)
!9333 = !DILocation(line: 2918, column: 2, scope: !9308)
!9334 = distinct !DISubprogram(name: "trace_attach_device_to_domain", scope: !6148, file: !6148, line: 72, type: !3361, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9335 = !DILocalVariable(name: "dev", arg: 1, scope: !9334, file: !6148, line: 72, type: !174)
!9336 = !DILocation(line: 72, column: 1, scope: !9334)
!9337 = distinct !DISubprogram(name: "iommu_aux_detach_device", scope: !3, file: !3, line: 2922, type: !3518, scopeLine: 2923, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9338 = !DILocalVariable(name: "domain", arg: 1, scope: !9337, file: !3, line: 2922, type: !3489)
!9339 = !DILocation(line: 2922, column: 51, scope: !9337)
!9340 = !DILocalVariable(name: "dev", arg: 2, scope: !9337, file: !3, line: 2922, type: !174)
!9341 = !DILocation(line: 2922, column: 74, scope: !9337)
!9342 = !DILocation(line: 2924, column: 6, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9337, file: !3, line: 2924, column: 6)
!9344 = !DILocation(line: 2924, column: 14, scope: !9343)
!9345 = !DILocation(line: 2924, column: 19, scope: !9343)
!9346 = !DILocation(line: 2924, column: 6, scope: !9337)
!9347 = !DILocation(line: 2925, column: 3, scope: !9348)
!9348 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 2924, column: 35)
!9349 = !DILocation(line: 2925, column: 11, scope: !9348)
!9350 = !DILocation(line: 2925, column: 16, scope: !9348)
!9351 = !DILocation(line: 2925, column: 31, scope: !9348)
!9352 = !DILocation(line: 2925, column: 39, scope: !9348)
!9353 = !DILocation(line: 2926, column: 35, scope: !9348)
!9354 = !DILocation(line: 2926, column: 3, scope: !9348)
!9355 = !DILocation(line: 2927, column: 2, scope: !9348)
!9356 = !DILocation(line: 2928, column: 1, scope: !9337)
!9357 = distinct !DISubprogram(name: "trace_detach_device_from_domain", scope: !6148, file: !6148, line: 79, type: !3361, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9358 = !DILocalVariable(name: "dev", arg: 1, scope: !9357, file: !6148, line: 79, type: !174)
!9359 = !DILocation(line: 79, column: 1, scope: !9357)
!9360 = distinct !DISubprogram(name: "iommu_aux_get_pasid", scope: !3, file: !3, line: 2931, type: !3514, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9361 = !DILocalVariable(name: "domain", arg: 1, scope: !9360, file: !3, line: 2931, type: !3489)
!9362 = !DILocation(line: 2931, column: 46, scope: !9360)
!9363 = !DILocalVariable(name: "dev", arg: 2, scope: !9360, file: !3, line: 2931, type: !174)
!9364 = !DILocation(line: 2931, column: 69, scope: !9360)
!9365 = !DILocalVariable(name: "ret", scope: !9360, file: !3, line: 2933, type: !135)
!9366 = !DILocation(line: 2933, column: 6, scope: !9360)
!9367 = !DILocation(line: 2935, column: 6, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 2935, column: 6)
!9369 = !DILocation(line: 2935, column: 14, scope: !9368)
!9370 = !DILocation(line: 2935, column: 19, scope: !9368)
!9371 = !DILocation(line: 2935, column: 6, scope: !9360)
!9372 = !DILocation(line: 2936, column: 9, scope: !9368)
!9373 = !DILocation(line: 2936, column: 17, scope: !9368)
!9374 = !DILocation(line: 2936, column: 22, scope: !9368)
!9375 = !DILocation(line: 2936, column: 36, scope: !9368)
!9376 = !DILocation(line: 2936, column: 44, scope: !9368)
!9377 = !DILocation(line: 2936, column: 7, scope: !9368)
!9378 = !DILocation(line: 2936, column: 3, scope: !9368)
!9379 = !DILocation(line: 2938, column: 9, scope: !9360)
!9380 = !DILocation(line: 2938, column: 2, scope: !9360)
!9381 = distinct !DISubprogram(name: "iommu_sva_bind_device", scope: !3, file: !3, line: 2958, type: !3765, scopeLine: 2959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9382 = !DILocalVariable(name: "dev", arg: 1, scope: !9381, file: !3, line: 2958, type: !174)
!9383 = !DILocation(line: 2958, column: 38, scope: !9381)
!9384 = !DILocalVariable(name: "mm", arg: 2, scope: !9381, file: !3, line: 2958, type: !939)
!9385 = !DILocation(line: 2958, column: 61, scope: !9381)
!9386 = !DILocalVariable(name: "drvdata", arg: 3, scope: !9381, file: !3, line: 2958, type: !162)
!9387 = !DILocation(line: 2958, column: 71, scope: !9381)
!9388 = !DILocalVariable(name: "group", scope: !9381, file: !3, line: 2960, type: !3650)
!9389 = !DILocation(line: 2960, column: 22, scope: !9381)
!9390 = !DILocalVariable(name: "handle", scope: !9381, file: !3, line: 2961, type: !3767)
!9391 = !DILocation(line: 2961, column: 20, scope: !9381)
!9392 = !DILocation(line: 2961, column: 29, scope: !9381)
!9393 = !DILocalVariable(name: "ops", scope: !9381, file: !3, line: 2962, type: !3477)
!9394 = !DILocation(line: 2962, column: 26, scope: !9381)
!9395 = !DILocation(line: 2962, column: 32, scope: !9381)
!9396 = !DILocation(line: 2962, column: 37, scope: !9381)
!9397 = !DILocation(line: 2962, column: 42, scope: !9381)
!9398 = !DILocation(line: 2964, column: 7, scope: !9399)
!9399 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 2964, column: 6)
!9400 = !DILocation(line: 2964, column: 11, scope: !9399)
!9401 = !DILocation(line: 2964, column: 15, scope: !9399)
!9402 = !DILocation(line: 2964, column: 20, scope: !9399)
!9403 = !DILocation(line: 2964, column: 6, scope: !9381)
!9404 = !DILocation(line: 2965, column: 10, scope: !9399)
!9405 = !DILocation(line: 2965, column: 3, scope: !9399)
!9406 = !DILocation(line: 2967, column: 26, scope: !9381)
!9407 = !DILocation(line: 2967, column: 10, scope: !9381)
!9408 = !DILocation(line: 2967, column: 8, scope: !9381)
!9409 = !DILocation(line: 2968, column: 7, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 2968, column: 6)
!9411 = !DILocation(line: 2968, column: 6, scope: !9381)
!9412 = !DILocation(line: 2969, column: 10, scope: !9410)
!9413 = !DILocation(line: 2969, column: 3, scope: !9410)
!9414 = !DILocation(line: 2972, column: 14, scope: !9381)
!9415 = !DILocation(line: 2972, column: 21, scope: !9381)
!9416 = !DILocation(line: 2972, column: 2, scope: !9381)
!9417 = !DILocation(line: 2980, column: 31, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9381, file: !3, line: 2980, column: 6)
!9419 = !DILocation(line: 2980, column: 6, scope: !9418)
!9420 = !DILocation(line: 2980, column: 38, scope: !9418)
!9421 = !DILocation(line: 2980, column: 6, scope: !9381)
!9422 = !DILocation(line: 2981, column: 3, scope: !9418)
!9423 = !DILocation(line: 2983, column: 11, scope: !9381)
!9424 = !DILocation(line: 2983, column: 16, scope: !9381)
!9425 = !DILocation(line: 2983, column: 25, scope: !9381)
!9426 = !DILocation(line: 2983, column: 30, scope: !9381)
!9427 = !DILocation(line: 2983, column: 34, scope: !9381)
!9428 = !DILocation(line: 2983, column: 9, scope: !9381)
!9429 = !DILocation(line: 2983, column: 2, scope: !9381)
!9430 = !DILabel(scope: !9381, name: "out_unlock", file: !3, line: 2985)
!9431 = !DILocation(line: 2985, column: 1, scope: !9381)
!9432 = !DILocation(line: 2986, column: 16, scope: !9381)
!9433 = !DILocation(line: 2986, column: 23, scope: !9381)
!9434 = !DILocation(line: 2986, column: 2, scope: !9381)
!9435 = !DILocation(line: 2987, column: 18, scope: !9381)
!9436 = !DILocation(line: 2987, column: 2, scope: !9381)
!9437 = !DILocation(line: 2989, column: 9, scope: !9381)
!9438 = !DILocation(line: 2989, column: 2, scope: !9381)
!9439 = !DILocation(line: 2990, column: 1, scope: !9381)
!9440 = distinct !DISubprogram(name: "iommu_sva_unbind_device", scope: !3, file: !3, line: 3003, type: !3773, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9441 = !DILocalVariable(name: "handle", arg: 1, scope: !9440, file: !3, line: 3003, type: !3767)
!9442 = !DILocation(line: 3003, column: 48, scope: !9440)
!9443 = !DILocalVariable(name: "group", scope: !9440, file: !3, line: 3005, type: !3650)
!9444 = !DILocation(line: 3005, column: 22, scope: !9440)
!9445 = !DILocalVariable(name: "dev", scope: !9440, file: !3, line: 3006, type: !174)
!9446 = !DILocation(line: 3006, column: 17, scope: !9440)
!9447 = !DILocation(line: 3006, column: 23, scope: !9440)
!9448 = !DILocation(line: 3006, column: 31, scope: !9440)
!9449 = !DILocalVariable(name: "ops", scope: !9440, file: !3, line: 3007, type: !3477)
!9450 = !DILocation(line: 3007, column: 26, scope: !9440)
!9451 = !DILocation(line: 3007, column: 32, scope: !9440)
!9452 = !DILocation(line: 3007, column: 37, scope: !9440)
!9453 = !DILocation(line: 3007, column: 42, scope: !9440)
!9454 = !DILocation(line: 3009, column: 7, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 3009, column: 6)
!9456 = !DILocation(line: 3009, column: 11, scope: !9455)
!9457 = !DILocation(line: 3009, column: 15, scope: !9455)
!9458 = !DILocation(line: 3009, column: 20, scope: !9455)
!9459 = !DILocation(line: 3009, column: 6, scope: !9440)
!9460 = !DILocation(line: 3010, column: 3, scope: !9455)
!9461 = !DILocation(line: 3012, column: 26, scope: !9440)
!9462 = !DILocation(line: 3012, column: 10, scope: !9440)
!9463 = !DILocation(line: 3012, column: 8, scope: !9440)
!9464 = !DILocation(line: 3013, column: 7, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 3013, column: 6)
!9466 = !DILocation(line: 3013, column: 6, scope: !9440)
!9467 = !DILocation(line: 3014, column: 3, scope: !9465)
!9468 = !DILocation(line: 3016, column: 14, scope: !9440)
!9469 = !DILocation(line: 3016, column: 21, scope: !9440)
!9470 = !DILocation(line: 3016, column: 2, scope: !9440)
!9471 = !DILocation(line: 3017, column: 2, scope: !9440)
!9472 = !DILocation(line: 3017, column: 7, scope: !9440)
!9473 = !DILocation(line: 3017, column: 18, scope: !9440)
!9474 = !DILocation(line: 3018, column: 16, scope: !9440)
!9475 = !DILocation(line: 3018, column: 23, scope: !9440)
!9476 = !DILocation(line: 3018, column: 2, scope: !9440)
!9477 = !DILocation(line: 3020, column: 18, scope: !9440)
!9478 = !DILocation(line: 3020, column: 2, scope: !9440)
!9479 = !DILocation(line: 3021, column: 1, scope: !9440)
!9480 = distinct !DISubprogram(name: "iommu_sva_get_pasid", scope: !3, file: !3, line: 3024, type: !3777, scopeLine: 3025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9481 = !DILocalVariable(name: "handle", arg: 1, scope: !9480, file: !3, line: 3024, type: !3767)
!9482 = !DILocation(line: 3024, column: 43, scope: !9480)
!9483 = !DILocalVariable(name: "ops", scope: !9480, file: !3, line: 3026, type: !3477)
!9484 = !DILocation(line: 3026, column: 26, scope: !9480)
!9485 = !DILocation(line: 3026, column: 32, scope: !9480)
!9486 = !DILocation(line: 3026, column: 40, scope: !9480)
!9487 = !DILocation(line: 3026, column: 45, scope: !9480)
!9488 = !DILocation(line: 3026, column: 50, scope: !9480)
!9489 = !DILocation(line: 3028, column: 7, scope: !9490)
!9490 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 3028, column: 6)
!9491 = !DILocation(line: 3028, column: 11, scope: !9490)
!9492 = !DILocation(line: 3028, column: 15, scope: !9490)
!9493 = !DILocation(line: 3028, column: 20, scope: !9490)
!9494 = !DILocation(line: 3028, column: 6, scope: !9480)
!9495 = !DILocation(line: 3029, column: 3, scope: !9490)
!9496 = !DILocation(line: 3031, column: 9, scope: !9480)
!9497 = !DILocation(line: 3031, column: 14, scope: !9480)
!9498 = !DILocation(line: 3031, column: 28, scope: !9480)
!9499 = !DILocation(line: 3031, column: 2, scope: !9480)
!9500 = !DILocation(line: 3032, column: 1, scope: !9480)
!9501 = distinct !DISubprogram(name: "iommu_cmd_line_dma_api", scope: !3, file: !3, line: 78, type: !3162, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9502 = !DILocation(line: 80, column: 12, scope: !9501)
!9503 = !DILocation(line: 80, column: 27, scope: !9501)
!9504 = !DILocation(line: 80, column: 10, scope: !9501)
!9505 = !DILocation(line: 80, column: 9, scope: !9501)
!9506 = !DILocation(line: 80, column: 2, scope: !9501)
!9507 = distinct !DISubprogram(name: "mem_encrypt_active", scope: !9508, file: !9508, line: 103, type: !3162, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9508 = !DIFile(filename: "./arch/x86/include/asm/mem_encrypt.h", directory: "/home/lizy2001/genbc/linux")
!9509 = !DILocation(line: 105, column: 2, scope: !9507)
!9510 = distinct !DISubprogram(name: "iommu_domain_type_str", scope: !3, file: !3, line: 113, type: !9511, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!182, !7}
!9513 = !DILocalVariable(name: "t", arg: 1, scope: !9510, file: !3, line: 113, type: !7)
!9514 = !DILocation(line: 113, column: 55, scope: !9510)
!9515 = !DILocation(line: 115, column: 10, scope: !9510)
!9516 = !DILocation(line: 115, column: 2, scope: !9510)
!9517 = !DILocation(line: 117, column: 3, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 115, column: 13)
!9519 = !DILocation(line: 119, column: 3, scope: !9518)
!9520 = !DILocation(line: 121, column: 3, scope: !9518)
!9521 = !DILocation(line: 123, column: 3, scope: !9518)
!9522 = !DILocation(line: 125, column: 3, scope: !9518)
!9523 = !DILocation(line: 127, column: 1, scope: !9510)
!9524 = distinct !DISubprogram(name: "__list_add", scope: !4641, file: !4641, line: 63, type: !9525, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9525 = !DISubroutineType(types: !9526)
!9526 = !{null, !171, !171, !171}
!9527 = !DILocalVariable(name: "new", arg: 1, scope: !9524, file: !4641, line: 63, type: !171)
!9528 = !DILocation(line: 63, column: 49, scope: !9524)
!9529 = !DILocalVariable(name: "prev", arg: 2, scope: !9524, file: !4641, line: 64, type: !171)
!9530 = !DILocation(line: 64, column: 28, scope: !9524)
!9531 = !DILocalVariable(name: "next", arg: 3, scope: !9524, file: !4641, line: 65, type: !171)
!9532 = !DILocation(line: 65, column: 28, scope: !9524)
!9533 = !DILocation(line: 67, column: 24, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9524, file: !4641, line: 67, column: 6)
!9535 = !DILocation(line: 67, column: 29, scope: !9534)
!9536 = !DILocation(line: 67, column: 35, scope: !9534)
!9537 = !DILocation(line: 67, column: 7, scope: !9534)
!9538 = !DILocation(line: 67, column: 6, scope: !9524)
!9539 = !DILocation(line: 68, column: 3, scope: !9534)
!9540 = !DILocation(line: 70, column: 15, scope: !9524)
!9541 = !DILocation(line: 70, column: 2, scope: !9524)
!9542 = !DILocation(line: 70, column: 8, scope: !9524)
!9543 = !DILocation(line: 70, column: 13, scope: !9524)
!9544 = !DILocation(line: 71, column: 14, scope: !9524)
!9545 = !DILocation(line: 71, column: 2, scope: !9524)
!9546 = !DILocation(line: 71, column: 7, scope: !9524)
!9547 = !DILocation(line: 71, column: 12, scope: !9524)
!9548 = !DILocation(line: 72, column: 14, scope: !9524)
!9549 = !DILocation(line: 72, column: 2, scope: !9524)
!9550 = !DILocation(line: 72, column: 7, scope: !9524)
!9551 = !DILocation(line: 72, column: 12, scope: !9524)
!9552 = !DILocation(line: 73, column: 2, scope: !9524)
!9553 = !DILocation(line: 73, column: 2, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9524, file: !4641, line: 73, column: 2)
!9555 = !DILocation(line: 73, column: 2, scope: !9556)
!9556 = distinct !DILexicalBlock(scope: !9554, file: !4641, line: 73, column: 2)
!9557 = !DILocation(line: 73, column: 2, scope: !9558)
!9558 = distinct !DILexicalBlock(scope: !9554, file: !4641, line: 73, column: 2)
!9559 = !DILocation(line: 74, column: 1, scope: !9524)
!9560 = distinct !DISubprogram(name: "__list_add_valid", scope: !4641, file: !4641, line: 45, type: !9561, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!451, !171, !171, !171}
!9563 = !DILocalVariable(name: "new", arg: 1, scope: !9560, file: !4641, line: 45, type: !171)
!9564 = !DILocation(line: 45, column: 55, scope: !9560)
!9565 = !DILocalVariable(name: "prev", arg: 2, scope: !9560, file: !4641, line: 46, type: !171)
!9566 = !DILocation(line: 46, column: 23, scope: !9560)
!9567 = !DILocalVariable(name: "next", arg: 3, scope: !9560, file: !4641, line: 47, type: !171)
!9568 = !DILocation(line: 47, column: 23, scope: !9560)
!9569 = !DILocation(line: 49, column: 2, scope: !9560)
!9570 = distinct !DISubprogram(name: "__list_del_entry", scope: !4641, file: !4641, line: 130, type: !4672, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9571 = !DILocalVariable(name: "entry", arg: 1, scope: !9570, file: !4641, line: 130, type: !171)
!9572 = !DILocation(line: 130, column: 55, scope: !9570)
!9573 = !DILocation(line: 132, column: 30, scope: !9574)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !4641, line: 132, column: 6)
!9575 = !DILocation(line: 132, column: 7, scope: !9574)
!9576 = !DILocation(line: 132, column: 6, scope: !9570)
!9577 = !DILocation(line: 133, column: 3, scope: !9574)
!9578 = !DILocation(line: 135, column: 13, scope: !9570)
!9579 = !DILocation(line: 135, column: 20, scope: !9570)
!9580 = !DILocation(line: 135, column: 26, scope: !9570)
!9581 = !DILocation(line: 135, column: 33, scope: !9570)
!9582 = !DILocation(line: 135, column: 2, scope: !9570)
!9583 = !DILocation(line: 136, column: 1, scope: !9570)
!9584 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !4641, file: !4641, line: 51, type: !9585, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9585 = !DISubroutineType(types: !9586)
!9586 = !{!451, !171}
!9587 = !DILocalVariable(name: "entry", arg: 1, scope: !9584, file: !4641, line: 51, type: !171)
!9588 = !DILocation(line: 51, column: 61, scope: !9584)
!9589 = !DILocation(line: 53, column: 2, scope: !9584)
!9590 = distinct !DISubprogram(name: "__list_del", scope: !4641, file: !4641, line: 110, type: !4642, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9591 = !DILocalVariable(name: "prev", arg: 1, scope: !9590, file: !4641, line: 110, type: !171)
!9592 = !DILocation(line: 110, column: 50, scope: !9590)
!9593 = !DILocalVariable(name: "next", arg: 2, scope: !9590, file: !4641, line: 110, type: !171)
!9594 = !DILocation(line: 110, column: 75, scope: !9590)
!9595 = !DILocation(line: 112, column: 15, scope: !9590)
!9596 = !DILocation(line: 112, column: 2, scope: !9590)
!9597 = !DILocation(line: 112, column: 8, scope: !9590)
!9598 = !DILocation(line: 112, column: 13, scope: !9590)
!9599 = !DILocation(line: 113, column: 2, scope: !9590)
!9600 = !DILocation(line: 113, column: 2, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9590, file: !4641, line: 113, column: 2)
!9602 = !DILocation(line: 113, column: 2, scope: !9603)
!9603 = distinct !DILexicalBlock(scope: !9601, file: !4641, line: 113, column: 2)
!9604 = !DILocation(line: 113, column: 2, scope: !9605)
!9605 = distinct !DILexicalBlock(scope: !9601, file: !4641, line: 113, column: 2)
!9606 = !DILocation(line: 114, column: 1, scope: !9590)
!9607 = distinct !DISubprogram(name: "try_module_get", scope: !5199, file: !5199, line: 751, type: !9608, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9608 = !DISubroutineType(types: !9609)
!9609 = !{!451, !594}
!9610 = !DILocalVariable(name: "module", arg: 1, scope: !9607, file: !5199, line: 751, type: !594)
!9611 = !DILocation(line: 751, column: 50, scope: !9607)
!9612 = !DILocation(line: 753, column: 2, scope: !9607)
!9613 = distinct !DISubprogram(name: "IS_ERR", scope: !5774, file: !5774, line: 34, type: !9614, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9614 = !DISubroutineType(types: !9615)
!9615 = !{!451, !2093}
!9616 = !DILocalVariable(name: "ptr", arg: 1, scope: !9613, file: !5774, line: 34, type: !2093)
!9617 = !DILocation(line: 34, column: 60, scope: !9613)
!9618 = !DILocation(line: 36, column: 9, scope: !9613)
!9619 = !DILocation(line: 36, column: 2, scope: !9613)
!9620 = distinct !DISubprogram(name: "PTR_ERR", scope: !5774, file: !5774, line: 29, type: !9621, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!270, !2093}
!9623 = !DILocalVariable(name: "ptr", arg: 1, scope: !9620, file: !5774, line: 29, type: !2093)
!9624 = !DILocation(line: 29, column: 61, scope: !9620)
!9625 = !DILocation(line: 31, column: 16, scope: !9620)
!9626 = !DILocation(line: 31, column: 9, scope: !9620)
!9627 = !DILocation(line: 31, column: 2, scope: !9620)
!9628 = distinct !DISubprogram(name: "iommu_group_get_for_dev", scope: !3, file: !3, line: 1527, type: !3648, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9629 = !DILocalVariable(name: "dev", arg: 1, scope: !9628, file: !3, line: 1527, type: !174)
!9630 = !DILocation(line: 1527, column: 67, scope: !9628)
!9631 = !DILocalVariable(name: "ops", scope: !9628, file: !3, line: 1529, type: !3477)
!9632 = !DILocation(line: 1529, column: 26, scope: !9628)
!9633 = !DILocation(line: 1529, column: 32, scope: !9628)
!9634 = !DILocation(line: 1529, column: 37, scope: !9628)
!9635 = !DILocation(line: 1529, column: 42, scope: !9628)
!9636 = !DILocalVariable(name: "group", scope: !9628, file: !3, line: 1530, type: !3650)
!9637 = !DILocation(line: 1530, column: 22, scope: !9628)
!9638 = !DILocalVariable(name: "ret", scope: !9628, file: !3, line: 1531, type: !135)
!9639 = !DILocation(line: 1531, column: 6, scope: !9628)
!9640 = !DILocation(line: 1533, column: 26, scope: !9628)
!9641 = !DILocation(line: 1533, column: 10, scope: !9628)
!9642 = !DILocation(line: 1533, column: 8, scope: !9628)
!9643 = !DILocation(line: 1534, column: 6, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1534, column: 6)
!9645 = !DILocation(line: 1534, column: 6, scope: !9628)
!9646 = !DILocation(line: 1535, column: 10, scope: !9644)
!9647 = !DILocation(line: 1535, column: 3, scope: !9644)
!9648 = !DILocation(line: 1537, column: 7, scope: !9649)
!9649 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1537, column: 6)
!9650 = !DILocation(line: 1537, column: 6, scope: !9628)
!9651 = !DILocation(line: 1538, column: 10, scope: !9649)
!9652 = !DILocation(line: 1538, column: 3, scope: !9649)
!9653 = !DILocation(line: 1540, column: 10, scope: !9628)
!9654 = !DILocation(line: 1540, column: 15, scope: !9628)
!9655 = !DILocation(line: 1540, column: 28, scope: !9628)
!9656 = !DILocation(line: 1540, column: 8, scope: !9628)
!9657 = !DILocalVariable(name: "__ret_warn_on", scope: !9658, file: !3, line: 1541, type: !135)
!9658 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 1541, column: 6)
!9659 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1541, column: 6)
!9660 = !DILocation(line: 1541, column: 6, scope: !9658)
!9661 = !DILocation(line: 1541, column: 6, scope: !9662)
!9662 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 1541, column: 6)
!9663 = !DILocation(line: 1541, column: 6, scope: !9664)
!9664 = distinct !DILexicalBlock(scope: !9662, file: !3, line: 1541, column: 6)
!9665 = !DILocation(line: 1541, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1541, column: 6)
!9667 = !DILocation(line: 1541, column: 6, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1541, column: 6)
!9669 = !{i32 -2141344333, i32 -2141344304, i32 -2141344258, i32 -2141344200, i32 -2141344146, i32 -2141344092, i32 -2141344037, i32 -2141344006}
!9670 = !DILocation(line: 1541, column: 6, scope: !9671)
!9671 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1541, column: 6)
!9672 = !{i32 -2141343591, i32 -2141343584, i32 -2141343532, i32 -2141343501, i32 -2141343471}
!9673 = !DILocation(line: 1541, column: 6, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 1541, column: 6)
!9675 = !DILocation(line: 1541, column: 6, scope: !9659)
!9676 = !DILocation(line: 1541, column: 6, scope: !9628)
!9677 = !DILocation(line: 1542, column: 10, scope: !9659)
!9678 = !DILocation(line: 1542, column: 3, scope: !9659)
!9679 = !DILocation(line: 1544, column: 13, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1544, column: 6)
!9681 = !DILocation(line: 1544, column: 6, scope: !9680)
!9682 = !DILocation(line: 1544, column: 6, scope: !9628)
!9683 = !DILocation(line: 1545, column: 10, scope: !9680)
!9684 = !DILocation(line: 1545, column: 3, scope: !9680)
!9685 = !DILocation(line: 1547, column: 31, scope: !9628)
!9686 = !DILocation(line: 1547, column: 38, scope: !9628)
!9687 = !DILocation(line: 1547, column: 8, scope: !9628)
!9688 = !DILocation(line: 1547, column: 6, scope: !9628)
!9689 = !DILocation(line: 1548, column: 6, scope: !9690)
!9690 = distinct !DILexicalBlock(scope: !9628, file: !3, line: 1548, column: 6)
!9691 = !DILocation(line: 1548, column: 6, scope: !9628)
!9692 = !DILocation(line: 1549, column: 3, scope: !9690)
!9693 = !DILocation(line: 1551, column: 9, scope: !9628)
!9694 = !DILocation(line: 1551, column: 2, scope: !9628)
!9695 = !DILabel(scope: !9628, name: "out_put_group", file: !3, line: 1553)
!9696 = !DILocation(line: 1553, column: 1, scope: !9628)
!9697 = !DILocation(line: 1554, column: 18, scope: !9628)
!9698 = !DILocation(line: 1554, column: 2, scope: !9628)
!9699 = !DILocation(line: 1556, column: 17, scope: !9628)
!9700 = !DILocation(line: 1556, column: 9, scope: !9628)
!9701 = !DILocation(line: 1556, column: 2, scope: !9628)
!9702 = !DILocation(line: 1557, column: 1, scope: !9628)
!9703 = distinct !DISubprogram(name: "iommu_insert_resv_region", scope: !3, file: !3, line: 388, type: !9704, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!135, !3694, !171}
!9706 = !DILocalVariable(name: "new", arg: 1, scope: !9703, file: !3, line: 388, type: !3694)
!9707 = !DILocation(line: 388, column: 63, scope: !9703)
!9708 = !DILocalVariable(name: "regions", arg: 2, scope: !9703, file: !3, line: 389, type: !171)
!9709 = !DILocation(line: 389, column: 27, scope: !9703)
!9710 = !DILocalVariable(name: "iter", scope: !9703, file: !3, line: 391, type: !3694)
!9711 = !DILocation(line: 391, column: 28, scope: !9703)
!9712 = !DILocalVariable(name: "tmp", scope: !9703, file: !3, line: 391, type: !3694)
!9713 = !DILocation(line: 391, column: 35, scope: !9703)
!9714 = !DILocalVariable(name: "nr", scope: !9703, file: !3, line: 391, type: !3694)
!9715 = !DILocation(line: 391, column: 41, scope: !9703)
!9716 = !DILocalVariable(name: "top", scope: !9703, file: !3, line: 391, type: !3694)
!9717 = !DILocation(line: 391, column: 46, scope: !9703)
!9718 = !DILocalVariable(name: "stack", scope: !9703, file: !3, line: 392, type: !167)
!9719 = !DILocation(line: 392, column: 2, scope: !9703)
!9720 = !DILocation(line: 394, column: 31, scope: !9703)
!9721 = !DILocation(line: 394, column: 36, scope: !9703)
!9722 = !DILocation(line: 394, column: 43, scope: !9703)
!9723 = !DILocation(line: 394, column: 48, scope: !9703)
!9724 = !DILocation(line: 395, column: 10, scope: !9703)
!9725 = !DILocation(line: 395, column: 15, scope: !9703)
!9726 = !DILocation(line: 395, column: 21, scope: !9703)
!9727 = !DILocation(line: 395, column: 26, scope: !9703)
!9728 = !DILocation(line: 394, column: 7, scope: !9703)
!9729 = !DILocation(line: 394, column: 5, scope: !9703)
!9730 = !DILocation(line: 396, column: 7, scope: !9731)
!9731 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 396, column: 6)
!9732 = !DILocation(line: 396, column: 6, scope: !9703)
!9733 = !DILocation(line: 397, column: 3, scope: !9731)
!9734 = !DILocalVariable(name: "__mptr", scope: !9735, file: !3, line: 400, type: !162)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 400, column: 2)
!9736 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 400, column: 2)
!9737 = !DILocation(line: 400, column: 2, scope: !9735)
!9738 = !DILocation(line: 400, column: 2, scope: !9739)
!9739 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 400, column: 2)
!9740 = !DILocation(line: 400, column: 2, scope: !9736)
!9741 = !DILocation(line: 400, column: 2, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 400, column: 2)
!9743 = !DILocation(line: 401, column: 7, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 401, column: 7)
!9745 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 400, column: 43)
!9746 = !DILocation(line: 401, column: 11, scope: !9744)
!9747 = !DILocation(line: 401, column: 19, scope: !9744)
!9748 = !DILocation(line: 401, column: 25, scope: !9744)
!9749 = !DILocation(line: 401, column: 17, scope: !9744)
!9750 = !DILocation(line: 401, column: 31, scope: !9744)
!9751 = !DILocation(line: 402, column: 8, scope: !9744)
!9752 = !DILocation(line: 402, column: 12, scope: !9744)
!9753 = !DILocation(line: 402, column: 21, scope: !9744)
!9754 = !DILocation(line: 402, column: 27, scope: !9744)
!9755 = !DILocation(line: 402, column: 18, scope: !9744)
!9756 = !DILocation(line: 402, column: 33, scope: !9744)
!9757 = !DILocation(line: 402, column: 36, scope: !9744)
!9758 = !DILocation(line: 402, column: 40, scope: !9744)
!9759 = !DILocation(line: 402, column: 48, scope: !9744)
!9760 = !DILocation(line: 402, column: 54, scope: !9744)
!9761 = !DILocation(line: 402, column: 45, scope: !9744)
!9762 = !DILocation(line: 401, column: 7, scope: !9745)
!9763 = !DILocation(line: 403, column: 4, scope: !9744)
!9764 = !DILocation(line: 404, column: 2, scope: !9745)
!9765 = !DILocalVariable(name: "__mptr", scope: !9766, file: !3, line: 400, type: !162)
!9766 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 400, column: 2)
!9767 = !DILocation(line: 400, column: 2, scope: !9766)
!9768 = !DILocation(line: 400, column: 2, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9766, file: !3, line: 400, column: 2)
!9770 = distinct !{!9770, !9740, !9771}
!9771 = !DILocation(line: 404, column: 2, scope: !9736)
!9772 = !DILocation(line: 405, column: 17, scope: !9703)
!9773 = !DILocation(line: 405, column: 21, scope: !9703)
!9774 = !DILocation(line: 405, column: 28, scope: !9703)
!9775 = !DILocation(line: 405, column: 34, scope: !9703)
!9776 = !DILocation(line: 405, column: 2, scope: !9703)
!9777 = !DILocalVariable(name: "__mptr", scope: !9778, file: !3, line: 408, type: !162)
!9778 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 408, column: 2)
!9779 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 408, column: 2)
!9780 = !DILocation(line: 408, column: 2, scope: !9778)
!9781 = !DILocation(line: 408, column: 2, scope: !9782)
!9782 = distinct !DILexicalBlock(scope: !9778, file: !3, line: 408, column: 2)
!9783 = !DILocation(line: 408, column: 2, scope: !9779)
!9784 = !DILocalVariable(name: "__mptr", scope: !9785, file: !3, line: 408, type: !162)
!9785 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 408, column: 2)
!9786 = !DILocation(line: 408, column: 2, scope: !9785)
!9787 = !DILocation(line: 408, column: 2, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9785, file: !3, line: 408, column: 2)
!9789 = !DILocation(line: 408, column: 2, scope: !9790)
!9790 = distinct !DILexicalBlock(scope: !9779, file: !3, line: 408, column: 2)
!9791 = !DILocalVariable(name: "top_end", scope: !9792, file: !3, line: 409, type: !2091)
!9792 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 408, column: 53)
!9793 = !DILocation(line: 409, column: 15, scope: !9792)
!9794 = !DILocalVariable(name: "iter_end", scope: !9792, file: !3, line: 409, type: !2091)
!9795 = !DILocation(line: 409, column: 24, scope: !9792)
!9796 = !DILocation(line: 409, column: 35, scope: !9792)
!9797 = !DILocation(line: 409, column: 41, scope: !9792)
!9798 = !DILocation(line: 409, column: 49, scope: !9792)
!9799 = !DILocation(line: 409, column: 55, scope: !9792)
!9800 = !DILocation(line: 409, column: 47, scope: !9792)
!9801 = !DILocation(line: 409, column: 62, scope: !9792)
!9802 = !DILocation(line: 412, column: 7, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 412, column: 7)
!9804 = !DILocation(line: 412, column: 13, scope: !9803)
!9805 = !DILocation(line: 412, column: 21, scope: !9803)
!9806 = !DILocation(line: 412, column: 26, scope: !9803)
!9807 = !DILocation(line: 412, column: 18, scope: !9803)
!9808 = !DILocation(line: 412, column: 7, scope: !9792)
!9809 = !DILocation(line: 413, column: 20, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 412, column: 32)
!9811 = !DILocation(line: 413, column: 26, scope: !9810)
!9812 = !DILocation(line: 413, column: 4, scope: !9810)
!9813 = !DILocation(line: 414, column: 4, scope: !9810)
!9814 = !DILocalVariable(name: "__mptr", scope: !9815, file: !3, line: 418, type: !162)
!9815 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 418, column: 3)
!9816 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 418, column: 3)
!9817 = !DILocation(line: 418, column: 3, scope: !9815)
!9818 = !DILocation(line: 418, column: 3, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9815, file: !3, line: 418, column: 3)
!9820 = !DILocation(line: 418, column: 3, scope: !9816)
!9821 = !DILocation(line: 418, column: 3, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9816, file: !3, line: 418, column: 3)
!9823 = !DILocation(line: 419, column: 8, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 419, column: 8)
!9825 = !DILocation(line: 419, column: 13, scope: !9824)
!9826 = !DILocation(line: 419, column: 21, scope: !9824)
!9827 = !DILocation(line: 419, column: 27, scope: !9824)
!9828 = !DILocation(line: 419, column: 18, scope: !9824)
!9829 = !DILocation(line: 419, column: 8, scope: !9822)
!9830 = !DILocation(line: 420, column: 5, scope: !9824)
!9831 = !DILocalVariable(name: "__mptr", scope: !9832, file: !3, line: 418, type: !162)
!9832 = distinct !DILexicalBlock(scope: !9822, file: !3, line: 418, column: 3)
!9833 = !DILocation(line: 418, column: 3, scope: !9832)
!9834 = !DILocation(line: 418, column: 3, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 418, column: 3)
!9836 = distinct !{!9836, !9820, !9837}
!9837 = !DILocation(line: 420, column: 10, scope: !9816)
!9838 = !DILocation(line: 422, column: 19, scope: !9792)
!9839 = !DILocation(line: 422, column: 25, scope: !9792)
!9840 = !DILocation(line: 422, column: 3, scope: !9792)
!9841 = !DILocation(line: 423, column: 3, scope: !9792)
!9842 = !DILabel(scope: !9792, name: "check_overlap", file: !3, line: 425)
!9843 = !DILocation(line: 425, column: 1, scope: !9792)
!9844 = !DILocation(line: 426, column: 13, scope: !9792)
!9845 = !DILocation(line: 426, column: 18, scope: !9792)
!9846 = !DILocation(line: 426, column: 26, scope: !9792)
!9847 = !DILocation(line: 426, column: 31, scope: !9792)
!9848 = !DILocation(line: 426, column: 24, scope: !9792)
!9849 = !DILocation(line: 426, column: 38, scope: !9792)
!9850 = !DILocation(line: 426, column: 11, scope: !9792)
!9851 = !DILocation(line: 428, column: 7, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 428, column: 7)
!9853 = !DILocation(line: 428, column: 13, scope: !9852)
!9854 = !DILocation(line: 428, column: 21, scope: !9852)
!9855 = !DILocation(line: 428, column: 29, scope: !9852)
!9856 = !DILocation(line: 428, column: 19, scope: !9852)
!9857 = !DILocation(line: 428, column: 7, scope: !9792)
!9858 = !DILocation(line: 429, column: 20, scope: !9859)
!9859 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 428, column: 34)
!9860 = !DILocation(line: 429, column: 26, scope: !9859)
!9861 = !DILocation(line: 429, column: 4, scope: !9859)
!9862 = !DILocation(line: 430, column: 3, scope: !9859)
!9863 = !DILocalVariable(name: "__UNIQUE_ID___x247", scope: !9864, file: !3, line: 431, type: !2091)
!9864 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 431, column: 18)
!9865 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 430, column: 10)
!9866 = !DILocation(line: 431, column: 18, scope: !9864)
!9867 = !DILocalVariable(name: "__UNIQUE_ID___y248", scope: !9864, file: !3, line: 431, type: !2091)
!9868 = !DILocation(line: 431, column: 43, scope: !9865)
!9869 = !DILocation(line: 431, column: 48, scope: !9865)
!9870 = !DILocation(line: 431, column: 41, scope: !9865)
!9871 = !DILocation(line: 431, column: 54, scope: !9865)
!9872 = !DILocation(line: 431, column: 4, scope: !9865)
!9873 = !DILocation(line: 431, column: 9, scope: !9865)
!9874 = !DILocation(line: 431, column: 16, scope: !9865)
!9875 = !DILocation(line: 432, column: 14, scope: !9865)
!9876 = !DILocation(line: 432, column: 20, scope: !9865)
!9877 = !DILocation(line: 432, column: 4, scope: !9865)
!9878 = !DILocation(line: 433, column: 10, scope: !9865)
!9879 = !DILocation(line: 433, column: 4, scope: !9865)
!9880 = !DILocation(line: 435, column: 2, scope: !9792)
!9881 = !DILocalVariable(name: "__mptr", scope: !9882, file: !3, line: 408, type: !162)
!9882 = distinct !DILexicalBlock(scope: !9790, file: !3, line: 408, column: 2)
!9883 = !DILocation(line: 408, column: 2, scope: !9882)
!9884 = !DILocation(line: 408, column: 2, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9882, file: !3, line: 408, column: 2)
!9886 = distinct !{!9886, !9783, !9887}
!9887 = !DILocation(line: 435, column: 2, scope: !9779)
!9888 = !DILocation(line: 436, column: 22, scope: !9703)
!9889 = !DILocation(line: 436, column: 2, scope: !9703)
!9890 = !DILocation(line: 437, column: 2, scope: !9703)
!9891 = !DILocation(line: 438, column: 1, scope: !9703)
!9892 = distinct !DISubprogram(name: "list_move_tail", scope: !4641, file: !4641, line: 224, type: !4642, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9893 = !DILocalVariable(name: "list", arg: 1, scope: !9892, file: !4641, line: 224, type: !171)
!9894 = !DILocation(line: 224, column: 53, scope: !9892)
!9895 = !DILocalVariable(name: "head", arg: 2, scope: !9892, file: !4641, line: 225, type: !171)
!9896 = !DILocation(line: 225, column: 25, scope: !9892)
!9897 = !DILocation(line: 227, column: 19, scope: !9892)
!9898 = !DILocation(line: 227, column: 2, scope: !9892)
!9899 = !DILocation(line: 228, column: 16, scope: !9892)
!9900 = !DILocation(line: 228, column: 22, scope: !9892)
!9901 = !DILocation(line: 228, column: 2, scope: !9892)
!9902 = !DILocation(line: 229, column: 1, scope: !9892)
!9903 = distinct !DISubprogram(name: "list_splice", scope: !4641, file: !4641, line: 452, type: !9904, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9904 = !DISubroutineType(types: !9905)
!9905 = !{null, !6372, !171}
!9906 = !DILocalVariable(name: "list", arg: 1, scope: !9903, file: !4641, line: 452, type: !6372)
!9907 = !DILocation(line: 452, column: 56, scope: !9903)
!9908 = !DILocalVariable(name: "head", arg: 2, scope: !9903, file: !4641, line: 453, type: !171)
!9909 = !DILocation(line: 453, column: 23, scope: !9903)
!9910 = !DILocation(line: 455, column: 18, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9903, file: !4641, line: 455, column: 6)
!9912 = !DILocation(line: 455, column: 7, scope: !9911)
!9913 = !DILocation(line: 455, column: 6, scope: !9903)
!9914 = !DILocation(line: 456, column: 17, scope: !9911)
!9915 = !DILocation(line: 456, column: 23, scope: !9911)
!9916 = !DILocation(line: 456, column: 29, scope: !9911)
!9917 = !DILocation(line: 456, column: 35, scope: !9911)
!9918 = !DILocation(line: 456, column: 3, scope: !9911)
!9919 = !DILocation(line: 457, column: 1, scope: !9903)
!9920 = distinct !DISubprogram(name: "__list_splice", scope: !4641, file: !4641, line: 433, type: !9921, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9921 = !DISubroutineType(types: !9922)
!9922 = !{null, !6372, !171, !171}
!9923 = !DILocalVariable(name: "list", arg: 1, scope: !9920, file: !4641, line: 433, type: !6372)
!9924 = !DILocation(line: 433, column: 58, scope: !9920)
!9925 = !DILocalVariable(name: "prev", arg: 2, scope: !9920, file: !4641, line: 434, type: !171)
!9926 = !DILocation(line: 434, column: 24, scope: !9920)
!9927 = !DILocalVariable(name: "next", arg: 3, scope: !9920, file: !4641, line: 435, type: !171)
!9928 = !DILocation(line: 435, column: 24, scope: !9920)
!9929 = !DILocalVariable(name: "first", scope: !9920, file: !4641, line: 437, type: !171)
!9930 = !DILocation(line: 437, column: 20, scope: !9920)
!9931 = !DILocation(line: 437, column: 28, scope: !9920)
!9932 = !DILocation(line: 437, column: 34, scope: !9920)
!9933 = !DILocalVariable(name: "last", scope: !9920, file: !4641, line: 438, type: !171)
!9934 = !DILocation(line: 438, column: 20, scope: !9920)
!9935 = !DILocation(line: 438, column: 27, scope: !9920)
!9936 = !DILocation(line: 438, column: 33, scope: !9920)
!9937 = !DILocation(line: 440, column: 16, scope: !9920)
!9938 = !DILocation(line: 440, column: 2, scope: !9920)
!9939 = !DILocation(line: 440, column: 9, scope: !9920)
!9940 = !DILocation(line: 440, column: 14, scope: !9920)
!9941 = !DILocation(line: 441, column: 15, scope: !9920)
!9942 = !DILocation(line: 441, column: 2, scope: !9920)
!9943 = !DILocation(line: 441, column: 8, scope: !9920)
!9944 = !DILocation(line: 441, column: 13, scope: !9920)
!9945 = !DILocation(line: 443, column: 15, scope: !9920)
!9946 = !DILocation(line: 443, column: 2, scope: !9920)
!9947 = !DILocation(line: 443, column: 8, scope: !9920)
!9948 = !DILocation(line: 443, column: 13, scope: !9920)
!9949 = !DILocation(line: 444, column: 15, scope: !9920)
!9950 = !DILocation(line: 444, column: 2, scope: !9920)
!9951 = !DILocation(line: 444, column: 8, scope: !9920)
!9952 = !DILocation(line: 444, column: 13, scope: !9920)
!9953 = !DILocation(line: 445, column: 1, scope: !9920)
!9954 = distinct !DISubprogram(name: "get_order", scope: !9955, file: !9955, line: 29, type: !9956, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9955 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!9956 = !DISubroutineType(types: !9957)
!9957 = !{!135, !285}
!9958 = !DILocalVariable(name: "x", arg: 1, scope: !9959, file: !4935, line: 366, type: !383)
!9959 = distinct !DISubprogram(name: "fls64", scope: !4935, file: !4935, line: 366, type: !9960, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9960 = !DISubroutineType(types: !9961)
!9961 = !{!135, !383}
!9962 = !DILocation(line: 366, column: 40, scope: !9959, inlinedAt: !9963)
!9963 = distinct !DILocation(line: 46, column: 9, scope: !9954)
!9964 = !DILocalVariable(name: "bitpos", scope: !9959, file: !4935, line: 368, type: !135)
!9965 = !DILocation(line: 368, column: 6, scope: !9959, inlinedAt: !9963)
!9966 = !DILocalVariable(name: "size", arg: 1, scope: !9954, file: !9955, line: 29, type: !285)
!9967 = !DILocation(line: 29, column: 63, scope: !9954)
!9968 = !DILocation(line: 31, column: 27, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9954, file: !9955, line: 31, column: 6)
!9970 = !DILocation(line: 31, column: 6, scope: !9969)
!9971 = !DILocation(line: 31, column: 6, scope: !9954)
!9972 = !DILocation(line: 32, column: 8, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9974, file: !9955, line: 32, column: 7)
!9974 = distinct !DILexicalBlock(scope: !9969, file: !9955, line: 31, column: 34)
!9975 = !DILocation(line: 32, column: 7, scope: !9974)
!9976 = !DILocation(line: 33, column: 4, scope: !9973)
!9977 = !DILocation(line: 35, column: 7, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9974, file: !9955, line: 35, column: 7)
!9979 = !DILocation(line: 35, column: 12, scope: !9978)
!9980 = !DILocation(line: 35, column: 7, scope: !9974)
!9981 = !DILocation(line: 36, column: 4, scope: !9978)
!9982 = !DILocation(line: 38, column: 10, scope: !9974)
!9983 = !DILocation(line: 38, column: 28, scope: !9974)
!9984 = !DILocation(line: 38, column: 41, scope: !9974)
!9985 = !DILocation(line: 38, column: 3, scope: !9974)
!9986 = !DILocation(line: 41, column: 6, scope: !9954)
!9987 = !DILocation(line: 42, column: 7, scope: !9954)
!9988 = !DILocation(line: 46, column: 15, scope: !9954)
!9989 = !DILocation(line: 374, column: 2, scope: !9959, inlinedAt: !9963)
!9990 = !DILocation(line: 376, column: 14, scope: !9959, inlinedAt: !9963)
!9991 = !{i32 451458}
!9992 = !DILocation(line: 377, column: 9, scope: !9959, inlinedAt: !9963)
!9993 = !DILocation(line: 377, column: 16, scope: !9959, inlinedAt: !9963)
!9994 = !DILocation(line: 46, column: 2, scope: !9954)
!9995 = !DILocation(line: 48, column: 1, scope: !9954)
!9996 = distinct !DISubprogram(name: "__ilog2_u64", scope: !9997, file: !9997, line: 30, type: !9998, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!9997 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!9998 = !DISubroutineType(types: !9999)
!9999 = !{!135, !382}
!10000 = !DILocation(line: 366, column: 40, scope: !9959, inlinedAt: !10001)
!10001 = distinct !DILocation(line: 32, column: 9, scope: !9996)
!10002 = !DILocation(line: 368, column: 6, scope: !9959, inlinedAt: !10001)
!10003 = !DILocalVariable(name: "n", arg: 1, scope: !9996, file: !9997, line: 30, type: !382)
!10004 = !DILocation(line: 30, column: 21, scope: !9996)
!10005 = !DILocation(line: 32, column: 15, scope: !9996)
!10006 = !DILocation(line: 374, column: 2, scope: !9959, inlinedAt: !10001)
!10007 = !DILocation(line: 376, column: 14, scope: !9959, inlinedAt: !10001)
!10008 = !DILocation(line: 377, column: 9, scope: !9959, inlinedAt: !10001)
!10009 = !DILocation(line: 377, column: 16, scope: !9959, inlinedAt: !10001)
!10010 = !DILocation(line: 32, column: 18, scope: !9996)
!10011 = !DILocation(line: 32, column: 2, scope: !9996)
!10012 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10013, file: !10013, line: 137, type: !10014, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10013 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!162, !900, !2093, !282, !708}
!10016 = !DILocalVariable(name: "s", arg: 1, scope: !10012, file: !10013, line: 137, type: !900)
!10017 = !DILocation(line: 137, column: 54, scope: !10012)
!10018 = !DILocalVariable(name: "object", arg: 2, scope: !10012, file: !10013, line: 137, type: !2093)
!10019 = !DILocation(line: 137, column: 69, scope: !10012)
!10020 = !DILocalVariable(name: "size", arg: 3, scope: !10012, file: !10013, line: 138, type: !282)
!10021 = !DILocation(line: 138, column: 12, scope: !10012)
!10022 = !DILocalVariable(name: "flags", arg: 4, scope: !10012, file: !10013, line: 138, type: !708)
!10023 = !DILocation(line: 138, column: 24, scope: !10012)
!10024 = !DILocation(line: 140, column: 17, scope: !10012)
!10025 = !DILocation(line: 140, column: 2, scope: !10012)
!10026 = distinct !DISubprogram(name: "iommu_group_release", scope: !3, file: !3, line: 532, type: !254, scopeLine: 533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10027 = !DILocalVariable(name: "kobj", arg: 1, scope: !10026, file: !3, line: 532, type: !187)
!10028 = !DILocation(line: 532, column: 49, scope: !10026)
!10029 = !DILocalVariable(name: "group", scope: !10026, file: !3, line: 534, type: !3650)
!10030 = !DILocation(line: 534, column: 22, scope: !10026)
!10031 = !DILocalVariable(name: "__mptr", scope: !10032, file: !3, line: 534, type: !162)
!10032 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 534, column: 30)
!10033 = !DILocation(line: 534, column: 30, scope: !10032)
!10034 = !DILocation(line: 534, column: 30, scope: !10035)
!10035 = distinct !DILexicalBlock(scope: !10032, file: !3, line: 534, column: 30)
!10036 = !DILocation(line: 536, column: 2, scope: !10037)
!10037 = distinct !DILexicalBlock(scope: !10038, file: !3, line: 536, column: 2)
!10038 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 536, column: 2)
!10039 = !DILocation(line: 536, column: 2, scope: !10038)
!10040 = !DILocation(line: 538, column: 6, scope: !10041)
!10041 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 538, column: 6)
!10042 = !DILocation(line: 538, column: 13, scope: !10041)
!10043 = !DILocation(line: 538, column: 6, scope: !10026)
!10044 = !DILocation(line: 539, column: 3, scope: !10041)
!10045 = !DILocation(line: 539, column: 10, scope: !10041)
!10046 = !DILocation(line: 539, column: 29, scope: !10041)
!10047 = !DILocation(line: 539, column: 36, scope: !10041)
!10048 = !DILocation(line: 541, column: 2, scope: !10026)
!10049 = !DILocation(line: 543, column: 6, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 543, column: 6)
!10051 = !DILocation(line: 543, column: 13, scope: !10050)
!10052 = !DILocation(line: 543, column: 6, scope: !10026)
!10053 = !DILocation(line: 544, column: 21, scope: !10050)
!10054 = !DILocation(line: 544, column: 28, scope: !10050)
!10055 = !DILocation(line: 544, column: 3, scope: !10050)
!10056 = !DILocation(line: 546, column: 8, scope: !10026)
!10057 = !DILocation(line: 546, column: 15, scope: !10026)
!10058 = !DILocation(line: 546, column: 2, scope: !10026)
!10059 = !DILocation(line: 547, column: 8, scope: !10026)
!10060 = !DILocation(line: 547, column: 2, scope: !10026)
!10061 = !DILocation(line: 548, column: 1, scope: !10026)
!10062 = distinct !DISubprogram(name: "iommu_group_attr_show", scope: !3, file: !3, line: 332, type: !264, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10063 = !DILocalVariable(name: "kobj", arg: 1, scope: !10062, file: !3, line: 332, type: !187)
!10064 = !DILocation(line: 332, column: 54, scope: !10062)
!10065 = !DILocalVariable(name: "__attr", arg: 2, scope: !10062, file: !3, line: 333, type: !271)
!10066 = !DILocation(line: 333, column: 28, scope: !10062)
!10067 = !DILocalVariable(name: "buf", arg: 3, scope: !10062, file: !3, line: 333, type: !235)
!10068 = !DILocation(line: 333, column: 42, scope: !10062)
!10069 = !DILocalVariable(name: "attr", scope: !10062, file: !3, line: 335, type: !4486)
!10070 = !DILocation(line: 335, column: 32, scope: !10062)
!10071 = !DILocalVariable(name: "__mptr", scope: !10072, file: !3, line: 335, type: !162)
!10072 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 335, column: 39)
!10073 = !DILocation(line: 335, column: 39, scope: !10072)
!10074 = !DILocation(line: 335, column: 39, scope: !10075)
!10075 = distinct !DILexicalBlock(scope: !10072, file: !3, line: 335, column: 39)
!10076 = !DILocalVariable(name: "group", scope: !10062, file: !3, line: 336, type: !3650)
!10077 = !DILocation(line: 336, column: 22, scope: !10062)
!10078 = !DILocalVariable(name: "__mptr", scope: !10079, file: !3, line: 336, type: !162)
!10079 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 336, column: 30)
!10080 = !DILocation(line: 336, column: 30, scope: !10079)
!10081 = !DILocation(line: 336, column: 30, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 336, column: 30)
!10083 = !DILocalVariable(name: "ret", scope: !10062, file: !3, line: 337, type: !266)
!10084 = !DILocation(line: 337, column: 10, scope: !10062)
!10085 = !DILocation(line: 339, column: 6, scope: !10086)
!10086 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 339, column: 6)
!10087 = !DILocation(line: 339, column: 12, scope: !10086)
!10088 = !DILocation(line: 339, column: 6, scope: !10062)
!10089 = !DILocation(line: 340, column: 9, scope: !10086)
!10090 = !DILocation(line: 340, column: 15, scope: !10086)
!10091 = !DILocation(line: 340, column: 20, scope: !10086)
!10092 = !DILocation(line: 340, column: 27, scope: !10086)
!10093 = !DILocation(line: 340, column: 7, scope: !10086)
!10094 = !DILocation(line: 340, column: 3, scope: !10086)
!10095 = !DILocation(line: 341, column: 9, scope: !10062)
!10096 = !DILocation(line: 341, column: 2, scope: !10062)
!10097 = distinct !DISubprogram(name: "iommu_group_attr_store", scope: !3, file: !3, line: 344, type: !280, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10098 = !DILocalVariable(name: "kobj", arg: 1, scope: !10097, file: !3, line: 344, type: !187)
!10099 = !DILocation(line: 344, column: 55, scope: !10097)
!10100 = !DILocalVariable(name: "__attr", arg: 2, scope: !10097, file: !3, line: 345, type: !271)
!10101 = !DILocation(line: 345, column: 29, scope: !10097)
!10102 = !DILocalVariable(name: "buf", arg: 3, scope: !10097, file: !3, line: 346, type: !182)
!10103 = !DILocation(line: 346, column: 23, scope: !10097)
!10104 = !DILocalVariable(name: "count", arg: 4, scope: !10097, file: !3, line: 346, type: !282)
!10105 = !DILocation(line: 346, column: 35, scope: !10097)
!10106 = !DILocalVariable(name: "attr", scope: !10097, file: !3, line: 348, type: !4486)
!10107 = !DILocation(line: 348, column: 32, scope: !10097)
!10108 = !DILocalVariable(name: "__mptr", scope: !10109, file: !3, line: 348, type: !162)
!10109 = distinct !DILexicalBlock(scope: !10097, file: !3, line: 348, column: 39)
!10110 = !DILocation(line: 348, column: 39, scope: !10109)
!10111 = !DILocation(line: 348, column: 39, scope: !10112)
!10112 = distinct !DILexicalBlock(scope: !10109, file: !3, line: 348, column: 39)
!10113 = !DILocalVariable(name: "group", scope: !10097, file: !3, line: 349, type: !3650)
!10114 = !DILocation(line: 349, column: 22, scope: !10097)
!10115 = !DILocalVariable(name: "__mptr", scope: !10116, file: !3, line: 349, type: !162)
!10116 = distinct !DILexicalBlock(scope: !10097, file: !3, line: 349, column: 30)
!10117 = !DILocation(line: 349, column: 30, scope: !10116)
!10118 = !DILocation(line: 349, column: 30, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10116, file: !3, line: 349, column: 30)
!10120 = !DILocalVariable(name: "ret", scope: !10097, file: !3, line: 350, type: !266)
!10121 = !DILocation(line: 350, column: 10, scope: !10097)
!10122 = !DILocation(line: 352, column: 6, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10097, file: !3, line: 352, column: 6)
!10124 = !DILocation(line: 352, column: 12, scope: !10123)
!10125 = !DILocation(line: 352, column: 6, scope: !10097)
!10126 = !DILocation(line: 353, column: 9, scope: !10123)
!10127 = !DILocation(line: 353, column: 15, scope: !10123)
!10128 = !DILocation(line: 353, column: 21, scope: !10123)
!10129 = !DILocation(line: 353, column: 28, scope: !10123)
!10130 = !DILocation(line: 353, column: 33, scope: !10123)
!10131 = !DILocation(line: 353, column: 7, scope: !10123)
!10132 = !DILocation(line: 353, column: 3, scope: !10123)
!10133 = !DILocation(line: 354, column: 9, scope: !10097)
!10134 = !DILocation(line: 354, column: 2, scope: !10097)
!10135 = distinct !DISubprogram(name: "sysfs_create_file", scope: !260, file: !260, line: 596, type: !10136, scopeLine: 598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10136 = !DISubroutineType(types: !10137)
!10137 = !{!135, !187, !10138}
!10138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10139, size: 64)
!10139 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !272)
!10140 = !DILocalVariable(name: "kobj", arg: 1, scope: !10135, file: !260, line: 596, type: !187)
!10141 = !DILocation(line: 596, column: 66, scope: !10135)
!10142 = !DILocalVariable(name: "attr", arg: 2, scope: !10135, file: !260, line: 597, type: !10138)
!10143 = !DILocation(line: 597, column: 32, scope: !10135)
!10144 = !DILocation(line: 599, column: 30, scope: !10135)
!10145 = !DILocation(line: 599, column: 36, scope: !10135)
!10146 = !DILocation(line: 599, column: 9, scope: !10135)
!10147 = !DILocation(line: 599, column: 2, scope: !10135)
!10148 = distinct !DISubprogram(name: "iommu_group_show_resv_regions", scope: !3, file: !3, line: 477, type: !4492, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10149 = !DILocalVariable(name: "group", arg: 1, scope: !10148, file: !3, line: 477, type: !3650)
!10150 = !DILocation(line: 477, column: 66, scope: !10148)
!10151 = !DILocalVariable(name: "buf", arg: 2, scope: !10148, file: !3, line: 478, type: !235)
!10152 = !DILocation(line: 478, column: 17, scope: !10148)
!10153 = !DILocalVariable(name: "region", scope: !10148, file: !3, line: 480, type: !3694)
!10154 = !DILocation(line: 480, column: 28, scope: !10148)
!10155 = !DILocalVariable(name: "next", scope: !10148, file: !3, line: 480, type: !3694)
!10156 = !DILocation(line: 480, column: 37, scope: !10148)
!10157 = !DILocalVariable(name: "group_resv_regions", scope: !10148, file: !3, line: 481, type: !167)
!10158 = !DILocation(line: 481, column: 19, scope: !10148)
!10159 = !DILocalVariable(name: "str", scope: !10148, file: !3, line: 482, type: !235)
!10160 = !DILocation(line: 482, column: 8, scope: !10148)
!10161 = !DILocation(line: 482, column: 14, scope: !10148)
!10162 = !DILocation(line: 484, column: 2, scope: !10148)
!10163 = !DILocation(line: 485, column: 31, scope: !10148)
!10164 = !DILocation(line: 485, column: 2, scope: !10148)
!10165 = !DILocalVariable(name: "__mptr", scope: !10166, file: !3, line: 487, type: !162)
!10166 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 487, column: 2)
!10167 = distinct !DILexicalBlock(scope: !10148, file: !3, line: 487, column: 2)
!10168 = !DILocation(line: 487, column: 2, scope: !10166)
!10169 = !DILocation(line: 487, column: 2, scope: !10170)
!10170 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 487, column: 2)
!10171 = !DILocation(line: 487, column: 2, scope: !10167)
!10172 = !DILocalVariable(name: "__mptr", scope: !10173, file: !3, line: 487, type: !162)
!10173 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 487, column: 2)
!10174 = !DILocation(line: 487, column: 2, scope: !10173)
!10175 = !DILocation(line: 487, column: 2, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 487, column: 2)
!10177 = !DILocation(line: 487, column: 2, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10167, file: !3, line: 487, column: 2)
!10179 = !DILocation(line: 488, column: 18, scope: !10180)
!10180 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 487, column: 68)
!10181 = !DILocation(line: 489, column: 26, scope: !10180)
!10182 = !DILocation(line: 489, column: 34, scope: !10180)
!10183 = !DILocation(line: 490, column: 27, scope: !10180)
!10184 = !DILocation(line: 490, column: 35, scope: !10180)
!10185 = !DILocation(line: 491, column: 7, scope: !10180)
!10186 = !DILocation(line: 491, column: 15, scope: !10180)
!10187 = !DILocation(line: 490, column: 41, scope: !10180)
!10188 = !DILocation(line: 491, column: 22, scope: !10180)
!10189 = !DILocation(line: 492, column: 40, scope: !10180)
!10190 = !DILocation(line: 492, column: 48, scope: !10180)
!10191 = !DILocation(line: 492, column: 11, scope: !10180)
!10192 = !DILocation(line: 488, column: 10, scope: !10180)
!10193 = !DILocation(line: 488, column: 7, scope: !10180)
!10194 = !DILocation(line: 493, column: 9, scope: !10180)
!10195 = !DILocation(line: 493, column: 3, scope: !10180)
!10196 = !DILocation(line: 494, column: 2, scope: !10180)
!10197 = !DILocalVariable(name: "__mptr", scope: !10198, file: !3, line: 487, type: !162)
!10198 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 487, column: 2)
!10199 = !DILocation(line: 487, column: 2, scope: !10198)
!10200 = !DILocation(line: 487, column: 2, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 487, column: 2)
!10202 = distinct !{!10202, !10171, !10203}
!10203 = !DILocation(line: 494, column: 2, scope: !10167)
!10204 = !DILocation(line: 496, column: 10, scope: !10148)
!10205 = !DILocation(line: 496, column: 16, scope: !10148)
!10206 = !DILocation(line: 496, column: 14, scope: !10148)
!10207 = !DILocation(line: 496, column: 2, scope: !10148)
!10208 = distinct !DISubprogram(name: "iommu_group_show_type", scope: !3, file: !3, line: 499, type: !4492, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10209 = !DILocalVariable(name: "group", arg: 1, scope: !10208, file: !3, line: 499, type: !3650)
!10210 = !DILocation(line: 499, column: 58, scope: !10208)
!10211 = !DILocalVariable(name: "buf", arg: 2, scope: !10208, file: !3, line: 500, type: !235)
!10212 = !DILocation(line: 500, column: 16, scope: !10208)
!10213 = !DILocalVariable(name: "type", scope: !10208, file: !3, line: 502, type: !235)
!10214 = !DILocation(line: 502, column: 8, scope: !10208)
!10215 = !DILocation(line: 504, column: 6, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 504, column: 6)
!10217 = !DILocation(line: 504, column: 13, scope: !10216)
!10218 = !DILocation(line: 504, column: 6, scope: !10208)
!10219 = !DILocation(line: 505, column: 11, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 504, column: 29)
!10221 = !DILocation(line: 505, column: 18, scope: !10220)
!10222 = !DILocation(line: 505, column: 34, scope: !10220)
!10223 = !DILocation(line: 505, column: 3, scope: !10220)
!10224 = !DILocation(line: 507, column: 9, scope: !10225)
!10225 = distinct !DILexicalBlock(scope: !10220, file: !3, line: 505, column: 40)
!10226 = !DILocation(line: 508, column: 4, scope: !10225)
!10227 = !DILocation(line: 510, column: 9, scope: !10225)
!10228 = !DILocation(line: 511, column: 4, scope: !10225)
!10229 = !DILocation(line: 513, column: 9, scope: !10225)
!10230 = !DILocation(line: 514, column: 4, scope: !10225)
!10231 = !DILocation(line: 516, column: 9, scope: !10225)
!10232 = !DILocation(line: 517, column: 4, scope: !10225)
!10233 = !DILocation(line: 519, column: 2, scope: !10220)
!10234 = !DILocation(line: 520, column: 9, scope: !10208)
!10235 = !DILocation(line: 520, column: 14, scope: !10208)
!10236 = !DILocation(line: 520, column: 2, scope: !10208)
!10237 = !DILocation(line: 522, column: 16, scope: !10208)
!10238 = !DILocation(line: 522, column: 9, scope: !10208)
!10239 = !DILocation(line: 522, column: 2, scope: !10208)
!10240 = distinct !DISubprogram(name: "sysfs_remove_file", scope: !260, file: !260, line: 602, type: !10241, scopeLine: 604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10241 = !DISubroutineType(types: !10242)
!10242 = !{null, !187, !10138}
!10243 = !DILocalVariable(name: "kobj", arg: 1, scope: !10240, file: !260, line: 602, type: !187)
!10244 = !DILocation(line: 602, column: 54, scope: !10240)
!10245 = !DILocalVariable(name: "attr", arg: 2, scope: !10240, file: !260, line: 603, type: !10138)
!10246 = !DILocation(line: 603, column: 34, scope: !10240)
!10247 = !DILocation(line: 605, column: 23, scope: !10240)
!10248 = !DILocation(line: 605, column: 29, scope: !10240)
!10249 = !DILocation(line: 605, column: 2, scope: !10240)
!10250 = !DILocation(line: 606, column: 1, scope: !10240)
!10251 = distinct !DISubprogram(name: "iommu_group_show_name", scope: !3, file: !3, line: 374, type: !4492, scopeLine: 375, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10252 = !DILocalVariable(name: "group", arg: 1, scope: !10251, file: !3, line: 374, type: !3650)
!10253 = !DILocation(line: 374, column: 58, scope: !10251)
!10254 = !DILocalVariable(name: "buf", arg: 2, scope: !10251, file: !3, line: 374, type: !235)
!10255 = !DILocation(line: 374, column: 71, scope: !10251)
!10256 = !DILocation(line: 376, column: 17, scope: !10251)
!10257 = !DILocation(line: 376, column: 30, scope: !10251)
!10258 = !DILocation(line: 376, column: 37, scope: !10251)
!10259 = !DILocation(line: 376, column: 9, scope: !10251)
!10260 = !DILocation(line: 376, column: 2, scope: !10251)
!10261 = distinct !DISubprogram(name: "iommu_flush_iotlb_all", scope: !6, file: !6, line: 520, type: !3510, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10262 = !DILocalVariable(name: "domain", arg: 1, scope: !10261, file: !6, line: 520, type: !3489)
!10263 = !DILocation(line: 520, column: 63, scope: !10261)
!10264 = !DILocation(line: 522, column: 6, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10261, file: !6, line: 522, column: 6)
!10266 = !DILocation(line: 522, column: 14, scope: !10265)
!10267 = !DILocation(line: 522, column: 19, scope: !10265)
!10268 = !DILocation(line: 522, column: 6, scope: !10261)
!10269 = !DILocation(line: 523, column: 3, scope: !10265)
!10270 = !DILocation(line: 523, column: 11, scope: !10265)
!10271 = !DILocation(line: 523, column: 16, scope: !10265)
!10272 = !DILocation(line: 523, column: 32, scope: !10265)
!10273 = !DILocation(line: 524, column: 1, scope: !10261)
!10274 = distinct !DISubprogram(name: "test_and_set_bit", scope: !10275, file: !10275, line: 68, type: !10276, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10275 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!10276 = !DISubroutineType(types: !10277)
!10277 = !{!451, !270, !10278}
!10278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10279, size: 64)
!10279 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !285)
!10280 = !DILocalVariable(name: "nr", arg: 1, scope: !10281, file: !4935, line: 136, type: !270)
!10281 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !4935, file: !4935, line: 136, type: !10276, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10282 = !DILocation(line: 136, column: 28, scope: !10281, inlinedAt: !10283)
!10283 = distinct !DILocation(line: 71, column: 9, scope: !10274)
!10284 = !DILocalVariable(name: "addr", arg: 2, scope: !10281, file: !4935, line: 136, type: !10278)
!10285 = !DILocation(line: 136, column: 56, scope: !10281, inlinedAt: !10283)
!10286 = !DILocalVariable(name: "c", scope: !10287, file: !4935, line: 138, type: !451)
!10287 = distinct !DILexicalBlock(scope: !10281, file: !4935, line: 138, column: 9)
!10288 = !DILocation(line: 138, column: 9, scope: !10287, inlinedAt: !10283)
!10289 = !DILocalVariable(name: "v", arg: 1, scope: !10290, file: !10291, line: 99, type: !10294)
!10290 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !10291, file: !10291, line: 99, type: !10292, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10291 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10292 = !DISubroutineType(types: !10293)
!10293 = !{null, !10294, !282}
!10294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10295, size: 64)
!10295 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10296)
!10296 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10297 = !DILocation(line: 99, column: 79, scope: !10290, inlinedAt: !10298)
!10298 = distinct !DILocation(line: 70, column: 2, scope: !10274)
!10299 = !DILocalVariable(name: "size", arg: 2, scope: !10290, file: !10291, line: 99, type: !282)
!10300 = !DILocation(line: 99, column: 89, scope: !10290, inlinedAt: !10298)
!10301 = !DILocalVariable(name: "nr", arg: 1, scope: !10274, file: !10275, line: 68, type: !270)
!10302 = !DILocation(line: 68, column: 42, scope: !10274)
!10303 = !DILocalVariable(name: "addr", arg: 2, scope: !10274, file: !10275, line: 68, type: !10278)
!10304 = !DILocation(line: 68, column: 70, scope: !10274)
!10305 = !DILocation(line: 70, column: 31, scope: !10274)
!10306 = !DILocation(line: 70, column: 38, scope: !10274)
!10307 = !DILocation(line: 70, column: 36, scope: !10274)
!10308 = !DILocation(line: 101, column: 20, scope: !10290, inlinedAt: !10298)
!10309 = !DILocation(line: 101, column: 23, scope: !10290, inlinedAt: !10298)
!10310 = !DILocation(line: 101, column: 2, scope: !10290, inlinedAt: !10298)
!10311 = !DILocation(line: 102, column: 2, scope: !10290, inlinedAt: !10298)
!10312 = !DILocation(line: 71, column: 31, scope: !10274)
!10313 = !DILocation(line: 71, column: 35, scope: !10274)
!10314 = !{i32 -2146996277, i32 -2146996181}
!10315 = !DILocation(line: 71, column: 2, scope: !10274)
!10316 = distinct !DISubprogram(name: "kasan_check_write", scope: !10317, file: !10317, line: 38, type: !10318, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10317 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10318 = !DISubroutineType(types: !10319)
!10319 = !{!451, !10294, !7}
!10320 = !DILocalVariable(name: "p", arg: 1, scope: !10316, file: !10317, line: 38, type: !10294)
!10321 = !DILocation(line: 38, column: 59, scope: !10316)
!10322 = !DILocalVariable(name: "size", arg: 2, scope: !10316, file: !10317, line: 38, type: !7)
!10323 = !DILocation(line: 38, column: 75, scope: !10316)
!10324 = !DILocation(line: 40, column: 2, scope: !10316)
!10325 = distinct !DISubprogram(name: "kcsan_check_access", scope: !10326, file: !10326, line: 178, type: !10327, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10326 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!10327 = !DISubroutineType(types: !10328)
!10328 = !{null, !10294, !282, !135}
!10329 = !DILocalVariable(name: "ptr", arg: 1, scope: !10325, file: !10326, line: 178, type: !10294)
!10330 = !DILocation(line: 178, column: 60, scope: !10325)
!10331 = !DILocalVariable(name: "size", arg: 2, scope: !10325, file: !10326, line: 178, type: !282)
!10332 = !DILocation(line: 178, column: 72, scope: !10325)
!10333 = !DILocalVariable(name: "type", arg: 3, scope: !10325, file: !10326, line: 179, type: !135)
!10334 = !DILocation(line: 179, column: 15, scope: !10325)
!10335 = !DILocation(line: 179, column: 23, scope: !10325)
!10336 = distinct !DISubprogram(name: "iommu_get_def_domain_type", scope: !3, file: !3, line: 1462, type: !3370, scopeLine: 1463, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10337 = !DILocalVariable(name: "dev", arg: 1, scope: !10336, file: !3, line: 1462, type: !174)
!10338 = !DILocation(line: 1462, column: 53, scope: !10336)
!10339 = !DILocalVariable(name: "ops", scope: !10336, file: !3, line: 1464, type: !3477)
!10340 = !DILocation(line: 1464, column: 26, scope: !10336)
!10341 = !DILocation(line: 1464, column: 32, scope: !10336)
!10342 = !DILocation(line: 1464, column: 37, scope: !10336)
!10343 = !DILocation(line: 1464, column: 42, scope: !10336)
!10344 = !DILocalVariable(name: "type", scope: !10336, file: !3, line: 1465, type: !7)
!10345 = !DILocation(line: 1465, column: 15, scope: !10336)
!10346 = !DILocation(line: 1467, column: 6, scope: !10347)
!10347 = distinct !DILexicalBlock(scope: !10336, file: !3, line: 1467, column: 6)
!10348 = !DILocation(line: 1467, column: 11, scope: !10347)
!10349 = !DILocation(line: 1467, column: 6, scope: !10336)
!10350 = !DILocation(line: 1468, column: 10, scope: !10347)
!10351 = !DILocation(line: 1468, column: 15, scope: !10347)
!10352 = !DILocation(line: 1468, column: 31, scope: !10347)
!10353 = !DILocation(line: 1468, column: 8, scope: !10347)
!10354 = !DILocation(line: 1468, column: 3, scope: !10347)
!10355 = !DILocation(line: 1470, column: 10, scope: !10336)
!10356 = !DILocation(line: 1470, column: 15, scope: !10336)
!10357 = !DILocation(line: 1470, column: 9, scope: !10336)
!10358 = !DILocation(line: 1470, column: 23, scope: !10336)
!10359 = !DILocation(line: 1470, column: 47, scope: !10336)
!10360 = !DILocation(line: 1470, column: 2, scope: !10336)
!10361 = distinct !DISubprogram(name: "iommu_group_alloc_default_domain", scope: !3, file: !3, line: 1473, type: !10362, scopeLine: 1476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10362 = !DISubroutineType(types: !10363)
!10363 = !{!135, !3395, !3650, !7}
!10364 = !DILocalVariable(name: "bus", arg: 1, scope: !10361, file: !3, line: 1473, type: !3395)
!10365 = !DILocation(line: 1473, column: 62, scope: !10361)
!10366 = !DILocalVariable(name: "group", arg: 2, scope: !10361, file: !3, line: 1474, type: !3650)
!10367 = !DILocation(line: 1474, column: 30, scope: !10361)
!10368 = !DILocalVariable(name: "type", arg: 3, scope: !10361, file: !3, line: 1475, type: !7)
!10369 = !DILocation(line: 1475, column: 23, scope: !10361)
!10370 = !DILocalVariable(name: "dom", scope: !10361, file: !3, line: 1477, type: !3489)
!10371 = !DILocation(line: 1477, column: 23, scope: !10361)
!10372 = !DILocation(line: 1479, column: 29, scope: !10361)
!10373 = !DILocation(line: 1479, column: 34, scope: !10361)
!10374 = !DILocation(line: 1479, column: 8, scope: !10361)
!10375 = !DILocation(line: 1479, column: 6, scope: !10361)
!10376 = !DILocation(line: 1480, column: 7, scope: !10377)
!10377 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 1480, column: 6)
!10378 = !DILocation(line: 1480, column: 11, scope: !10377)
!10379 = !DILocation(line: 1480, column: 14, scope: !10377)
!10380 = !DILocation(line: 1480, column: 19, scope: !10377)
!10381 = !DILocation(line: 1480, column: 6, scope: !10361)
!10382 = !DILocation(line: 1481, column: 30, scope: !10383)
!10383 = distinct !DILexicalBlock(scope: !10377, file: !3, line: 1480, column: 40)
!10384 = !DILocation(line: 1481, column: 9, scope: !10383)
!10385 = !DILocation(line: 1481, column: 7, scope: !10383)
!10386 = !DILocation(line: 1482, column: 7, scope: !10387)
!10387 = distinct !DILexicalBlock(scope: !10383, file: !3, line: 1482, column: 7)
!10388 = !DILocation(line: 1482, column: 7, scope: !10383)
!10389 = !DILocation(line: 1483, column: 4, scope: !10387)
!10390 = !DILocation(line: 1485, column: 2, scope: !10383)
!10391 = !DILocation(line: 1487, column: 7, scope: !10392)
!10392 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 1487, column: 6)
!10393 = !DILocation(line: 1487, column: 6, scope: !10361)
!10394 = !DILocation(line: 1488, column: 3, scope: !10392)
!10395 = !DILocation(line: 1490, column: 26, scope: !10361)
!10396 = !DILocation(line: 1490, column: 2, scope: !10361)
!10397 = !DILocation(line: 1490, column: 9, scope: !10361)
!10398 = !DILocation(line: 1490, column: 24, scope: !10361)
!10399 = !DILocation(line: 1491, column: 7, scope: !10400)
!10400 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 1491, column: 6)
!10401 = !DILocation(line: 1491, column: 14, scope: !10400)
!10402 = !DILocation(line: 1491, column: 6, scope: !10361)
!10403 = !DILocation(line: 1492, column: 19, scope: !10400)
!10404 = !DILocation(line: 1492, column: 3, scope: !10400)
!10405 = !DILocation(line: 1492, column: 10, scope: !10400)
!10406 = !DILocation(line: 1492, column: 17, scope: !10400)
!10407 = !DILocation(line: 1494, column: 7, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10361, file: !3, line: 1494, column: 6)
!10409 = !DILocation(line: 1494, column: 6, scope: !10361)
!10410 = !DILocalVariable(name: "attr", scope: !10411, file: !3, line: 1495, type: !135)
!10411 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 1494, column: 25)
!10412 = !DILocation(line: 1495, column: 7, scope: !10411)
!10413 = !DILocation(line: 1496, column: 25, scope: !10411)
!10414 = !DILocation(line: 1498, column: 11, scope: !10411)
!10415 = !DILocation(line: 1496, column: 3, scope: !10411)
!10416 = !DILocation(line: 1499, column: 2, scope: !10411)
!10417 = !DILocation(line: 1501, column: 2, scope: !10361)
!10418 = !DILocation(line: 1502, column: 1, scope: !10361)
!10419 = distinct !DISubprogram(name: "probe_get_default_domain_type", scope: !3, file: !3, line: 1648, type: !6162, scopeLine: 1649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10420 = !DILocalVariable(name: "dev", arg: 1, scope: !10419, file: !3, line: 1648, type: !174)
!10421 = !DILocation(line: 1648, column: 57, scope: !10419)
!10422 = !DILocalVariable(name: "data", arg: 2, scope: !10419, file: !3, line: 1648, type: !162)
!10423 = !DILocation(line: 1648, column: 68, scope: !10419)
!10424 = !DILocalVariable(name: "ops", scope: !10419, file: !3, line: 1650, type: !3477)
!10425 = !DILocation(line: 1650, column: 26, scope: !10419)
!10426 = !DILocation(line: 1650, column: 32, scope: !10419)
!10427 = !DILocation(line: 1650, column: 37, scope: !10419)
!10428 = !DILocation(line: 1650, column: 42, scope: !10419)
!10429 = !DILocalVariable(name: "gtype", scope: !10419, file: !3, line: 1651, type: !10430)
!10430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7119, size: 64)
!10431 = !DILocation(line: 1651, column: 30, scope: !10419)
!10432 = !DILocation(line: 1651, column: 38, scope: !10419)
!10433 = !DILocalVariable(name: "type", scope: !10419, file: !3, line: 1652, type: !7)
!10434 = !DILocation(line: 1652, column: 15, scope: !10419)
!10435 = !DILocation(line: 1654, column: 6, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 1654, column: 6)
!10437 = !DILocation(line: 1654, column: 11, scope: !10436)
!10438 = !DILocation(line: 1654, column: 6, scope: !10419)
!10439 = !DILocation(line: 1655, column: 10, scope: !10436)
!10440 = !DILocation(line: 1655, column: 15, scope: !10436)
!10441 = !DILocation(line: 1655, column: 31, scope: !10436)
!10442 = !DILocation(line: 1655, column: 8, scope: !10436)
!10443 = !DILocation(line: 1655, column: 3, scope: !10436)
!10444 = !DILocation(line: 1657, column: 6, scope: !10445)
!10445 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 1657, column: 6)
!10446 = !DILocation(line: 1657, column: 6, scope: !10419)
!10447 = !DILocation(line: 1658, column: 7, scope: !10448)
!10448 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 1658, column: 7)
!10449 = distinct !DILexicalBlock(scope: !10445, file: !3, line: 1657, column: 12)
!10450 = !DILocation(line: 1658, column: 14, scope: !10448)
!10451 = !DILocation(line: 1658, column: 19, scope: !10448)
!10452 = !DILocation(line: 1658, column: 22, scope: !10448)
!10453 = !DILocation(line: 1658, column: 29, scope: !10448)
!10454 = !DILocation(line: 1658, column: 37, scope: !10448)
!10455 = !DILocation(line: 1658, column: 34, scope: !10448)
!10456 = !DILocation(line: 1658, column: 7, scope: !10449)
!10457 = !DILocation(line: 1659, column: 4, scope: !10458)
!10458 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 1658, column: 43)
!10459 = !DILocation(line: 1663, column: 4, scope: !10458)
!10460 = !DILocation(line: 1663, column: 11, scope: !10458)
!10461 = !DILocation(line: 1663, column: 16, scope: !10458)
!10462 = !DILocation(line: 1664, column: 3, scope: !10458)
!10463 = !DILocation(line: 1666, column: 8, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10449, file: !3, line: 1666, column: 7)
!10465 = !DILocation(line: 1666, column: 15, scope: !10464)
!10466 = !DILocation(line: 1666, column: 7, scope: !10449)
!10467 = !DILocation(line: 1667, column: 18, scope: !10468)
!10468 = distinct !DILexicalBlock(scope: !10464, file: !3, line: 1666, column: 20)
!10469 = !DILocation(line: 1667, column: 4, scope: !10468)
!10470 = !DILocation(line: 1667, column: 11, scope: !10468)
!10471 = !DILocation(line: 1667, column: 16, scope: !10468)
!10472 = !DILocation(line: 1668, column: 18, scope: !10468)
!10473 = !DILocation(line: 1668, column: 4, scope: !10468)
!10474 = !DILocation(line: 1668, column: 11, scope: !10468)
!10475 = !DILocation(line: 1668, column: 16, scope: !10468)
!10476 = !DILocation(line: 1669, column: 3, scope: !10468)
!10477 = !DILocation(line: 1670, column: 2, scope: !10449)
!10478 = !DILocation(line: 1672, column: 2, scope: !10419)
!10479 = distinct !DISubprogram(name: "dev_name", scope: !79, file: !79, line: 609, type: !10480, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10480 = !DISubroutineType(types: !10481)
!10481 = !{!182, !3582}
!10482 = !DILocalVariable(name: "dev", arg: 1, scope: !10479, file: !79, line: 609, type: !3582)
!10483 = !DILocation(line: 609, column: 57, scope: !10479)
!10484 = !DILocation(line: 612, column: 6, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10479, file: !79, line: 612, column: 6)
!10486 = !DILocation(line: 612, column: 11, scope: !10485)
!10487 = !DILocation(line: 612, column: 6, scope: !10479)
!10488 = !DILocation(line: 613, column: 10, scope: !10485)
!10489 = !DILocation(line: 613, column: 15, scope: !10485)
!10490 = !DILocation(line: 613, column: 3, scope: !10485)
!10491 = !DILocation(line: 615, column: 23, scope: !10479)
!10492 = !DILocation(line: 615, column: 28, scope: !10479)
!10493 = !DILocation(line: 615, column: 9, scope: !10479)
!10494 = !DILocation(line: 615, column: 2, scope: !10479)
!10495 = !DILocation(line: 616, column: 1, scope: !10479)
!10496 = distinct !DISubprogram(name: "iommu_do_create_direct_mappings", scope: !3, file: !3, line: 1726, type: !6162, scopeLine: 1727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10497 = !DILocalVariable(name: "dev", arg: 1, scope: !10496, file: !3, line: 1726, type: !174)
!10498 = !DILocation(line: 1726, column: 59, scope: !10496)
!10499 = !DILocalVariable(name: "data", arg: 2, scope: !10496, file: !3, line: 1726, type: !162)
!10500 = !DILocation(line: 1726, column: 70, scope: !10496)
!10501 = !DILocalVariable(name: "group", scope: !10496, file: !3, line: 1728, type: !3650)
!10502 = !DILocation(line: 1728, column: 22, scope: !10496)
!10503 = !DILocation(line: 1728, column: 30, scope: !10496)
!10504 = !DILocation(line: 1730, column: 38, scope: !10496)
!10505 = !DILocation(line: 1730, column: 45, scope: !10496)
!10506 = !DILocation(line: 1730, column: 2, scope: !10496)
!10507 = !DILocation(line: 1732, column: 2, scope: !10496)
!10508 = distinct !DISubprogram(name: "iommu_group_do_dma_attach", scope: !3, file: !3, line: 1693, type: !6162, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10509 = !DILocalVariable(name: "dev", arg: 1, scope: !10508, file: !3, line: 1693, type: !174)
!10510 = !DILocation(line: 1693, column: 53, scope: !10508)
!10511 = !DILocalVariable(name: "data", arg: 2, scope: !10508, file: !3, line: 1693, type: !162)
!10512 = !DILocation(line: 1693, column: 64, scope: !10508)
!10513 = !DILocalVariable(name: "domain", scope: !10508, file: !3, line: 1695, type: !3489)
!10514 = !DILocation(line: 1695, column: 23, scope: !10508)
!10515 = !DILocation(line: 1695, column: 32, scope: !10508)
!10516 = !DILocalVariable(name: "ret", scope: !10508, file: !3, line: 1696, type: !135)
!10517 = !DILocation(line: 1696, column: 6, scope: !10508)
!10518 = !DILocation(line: 1698, column: 32, scope: !10519)
!10519 = distinct !DILexicalBlock(scope: !10508, file: !3, line: 1698, column: 6)
!10520 = !DILocation(line: 1698, column: 40, scope: !10519)
!10521 = !DILocation(line: 1698, column: 7, scope: !10519)
!10522 = !DILocation(line: 1698, column: 6, scope: !10508)
!10523 = !DILocation(line: 1699, column: 31, scope: !10519)
!10524 = !DILocation(line: 1699, column: 39, scope: !10519)
!10525 = !DILocation(line: 1699, column: 9, scope: !10519)
!10526 = !DILocation(line: 1699, column: 7, scope: !10519)
!10527 = !DILocation(line: 1699, column: 3, scope: !10519)
!10528 = !DILocation(line: 1701, column: 9, scope: !10508)
!10529 = !DILocation(line: 1701, column: 2, scope: !10508)
!10530 = distinct !DISubprogram(name: "iommu_group_do_probe_finalize", scope: !3, file: !3, line: 1710, type: !6162, scopeLine: 1711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10531 = !DILocalVariable(name: "dev", arg: 1, scope: !10530, file: !3, line: 1710, type: !174)
!10532 = !DILocation(line: 1710, column: 57, scope: !10530)
!10533 = !DILocalVariable(name: "data", arg: 2, scope: !10530, file: !3, line: 1710, type: !162)
!10534 = !DILocation(line: 1710, column: 68, scope: !10530)
!10535 = !DILocalVariable(name: "domain", scope: !10530, file: !3, line: 1712, type: !3489)
!10536 = !DILocation(line: 1712, column: 23, scope: !10530)
!10537 = !DILocation(line: 1712, column: 32, scope: !10530)
!10538 = !DILocation(line: 1714, column: 6, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 1714, column: 6)
!10540 = !DILocation(line: 1714, column: 14, scope: !10539)
!10541 = !DILocation(line: 1714, column: 19, scope: !10539)
!10542 = !DILocation(line: 1714, column: 6, scope: !10530)
!10543 = !DILocation(line: 1715, column: 3, scope: !10539)
!10544 = !DILocation(line: 1715, column: 11, scope: !10539)
!10545 = !DILocation(line: 1715, column: 16, scope: !10539)
!10546 = !DILocation(line: 1715, column: 31, scope: !10539)
!10547 = !DILocation(line: 1717, column: 2, scope: !10530)
!10548 = distinct !DISubprogram(name: "iommu_bus_notifier", scope: !3, file: !3, line: 1591, type: !3669, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10549 = !DILocalVariable(name: "nb", arg: 1, scope: !10548, file: !3, line: 1591, type: !3663)
!10550 = !DILocation(line: 1591, column: 54, scope: !10548)
!10551 = !DILocalVariable(name: "action", arg: 2, scope: !10548, file: !3, line: 1592, type: !285)
!10552 = !DILocation(line: 1592, column: 24, scope: !10548)
!10553 = !DILocalVariable(name: "data", arg: 3, scope: !10548, file: !3, line: 1592, type: !162)
!10554 = !DILocation(line: 1592, column: 38, scope: !10548)
!10555 = !DILocalVariable(name: "group_action", scope: !10548, file: !3, line: 1594, type: !285)
!10556 = !DILocation(line: 1594, column: 16, scope: !10548)
!10557 = !DILocalVariable(name: "dev", scope: !10548, file: !3, line: 1595, type: !174)
!10558 = !DILocation(line: 1595, column: 17, scope: !10548)
!10559 = !DILocation(line: 1595, column: 23, scope: !10548)
!10560 = !DILocalVariable(name: "group", scope: !10548, file: !3, line: 1596, type: !3650)
!10561 = !DILocation(line: 1596, column: 22, scope: !10548)
!10562 = !DILocation(line: 1602, column: 6, scope: !10563)
!10563 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 1602, column: 6)
!10564 = !DILocation(line: 1602, column: 13, scope: !10563)
!10565 = !DILocation(line: 1602, column: 6, scope: !10548)
!10566 = !DILocalVariable(name: "ret", scope: !10567, file: !3, line: 1603, type: !135)
!10567 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1602, column: 39)
!10568 = !DILocation(line: 1603, column: 7, scope: !10567)
!10569 = !DILocation(line: 1605, column: 28, scope: !10567)
!10570 = !DILocation(line: 1605, column: 9, scope: !10567)
!10571 = !DILocation(line: 1605, column: 7, scope: !10567)
!10572 = !DILocation(line: 1606, column: 11, scope: !10567)
!10573 = !DILocation(line: 1606, column: 10, scope: !10567)
!10574 = !DILocation(line: 1606, column: 3, scope: !10567)
!10575 = !DILocation(line: 1607, column: 13, scope: !10576)
!10576 = distinct !DILexicalBlock(scope: !10563, file: !3, line: 1607, column: 13)
!10577 = !DILocation(line: 1607, column: 20, scope: !10576)
!10578 = !DILocation(line: 1607, column: 13, scope: !10563)
!10579 = !DILocation(line: 1608, column: 24, scope: !10580)
!10580 = distinct !DILexicalBlock(scope: !10576, file: !3, line: 1607, column: 50)
!10581 = !DILocation(line: 1608, column: 3, scope: !10580)
!10582 = !DILocation(line: 1609, column: 3, scope: !10580)
!10583 = !DILocation(line: 1616, column: 26, scope: !10548)
!10584 = !DILocation(line: 1616, column: 10, scope: !10548)
!10585 = !DILocation(line: 1616, column: 8, scope: !10548)
!10586 = !DILocation(line: 1617, column: 7, scope: !10587)
!10587 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 1617, column: 6)
!10588 = !DILocation(line: 1617, column: 6, scope: !10548)
!10589 = !DILocation(line: 1618, column: 3, scope: !10587)
!10590 = !DILocation(line: 1620, column: 10, scope: !10548)
!10591 = !DILocation(line: 1620, column: 2, scope: !10548)
!10592 = !DILocation(line: 1622, column: 16, scope: !10593)
!10593 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 1620, column: 18)
!10594 = !DILocation(line: 1623, column: 3, scope: !10593)
!10595 = !DILocation(line: 1625, column: 16, scope: !10593)
!10596 = !DILocation(line: 1626, column: 3, scope: !10593)
!10597 = !DILocation(line: 1628, column: 16, scope: !10593)
!10598 = !DILocation(line: 1629, column: 3, scope: !10593)
!10599 = !DILocation(line: 1631, column: 16, scope: !10593)
!10600 = !DILocation(line: 1632, column: 3, scope: !10593)
!10601 = !DILocation(line: 1635, column: 6, scope: !10602)
!10602 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 1635, column: 6)
!10603 = !DILocation(line: 1635, column: 6, scope: !10548)
!10604 = !DILocation(line: 1636, column: 33, scope: !10602)
!10605 = !DILocation(line: 1636, column: 40, scope: !10602)
!10606 = !DILocation(line: 1637, column: 11, scope: !10602)
!10607 = !DILocation(line: 1637, column: 25, scope: !10602)
!10608 = !DILocation(line: 1636, column: 3, scope: !10602)
!10609 = !DILocation(line: 1639, column: 18, scope: !10548)
!10610 = !DILocation(line: 1639, column: 2, scope: !10548)
!10611 = !DILocation(line: 1640, column: 2, scope: !10548)
!10612 = !DILocation(line: 1641, column: 1, scope: !10548)
!10613 = distinct !DISubprogram(name: "remove_iommu_group", scope: !3, file: !3, line: 1584, type: !6162, scopeLine: 1585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10614 = !DILocalVariable(name: "dev", arg: 1, scope: !10613, file: !3, line: 1584, type: !174)
!10615 = !DILocation(line: 1584, column: 46, scope: !10613)
!10616 = !DILocalVariable(name: "data", arg: 2, scope: !10613, file: !3, line: 1584, type: !162)
!10617 = !DILocation(line: 1584, column: 57, scope: !10613)
!10618 = !DILocation(line: 1586, column: 23, scope: !10613)
!10619 = !DILocation(line: 1586, column: 2, scope: !10613)
!10620 = !DILocation(line: 1588, column: 2, scope: !10613)
!10621 = distinct !DISubprogram(name: "copy_overflow", scope: !7488, file: !7488, line: 132, type: !10622, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10622 = !DISubroutineType(types: !10623)
!10623 = !{null, !135, !285}
!10624 = !DILocalVariable(name: "size", arg: 1, scope: !10621, file: !7488, line: 132, type: !135)
!10625 = !DILocation(line: 132, column: 38, scope: !10621)
!10626 = !DILocalVariable(name: "count", arg: 2, scope: !10621, file: !7488, line: 132, type: !285)
!10627 = !DILocation(line: 132, column: 58, scope: !10621)
!10628 = !DILocalVariable(name: "__ret_warn_on", scope: !10629, file: !7488, line: 134, type: !135)
!10629 = distinct !DILexicalBlock(scope: !10621, file: !7488, line: 134, column: 2)
!10630 = !DILocation(line: 134, column: 2, scope: !10629)
!10631 = !DILocation(line: 134, column: 2, scope: !10632)
!10632 = distinct !DILexicalBlock(scope: !10629, file: !7488, line: 134, column: 2)
!10633 = !DILocation(line: 134, column: 2, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10632, file: !7488, line: 134, column: 2)
!10635 = !DILocation(line: 134, column: 2, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10634, file: !7488, line: 134, column: 2)
!10637 = !DILocation(line: 134, column: 2, scope: !10638)
!10638 = distinct !DILexicalBlock(scope: !10634, file: !7488, line: 134, column: 2)
!10639 = !DILocation(line: 134, column: 2, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10638, file: !7488, line: 134, column: 2)
!10641 = !DILocation(line: 134, column: 2, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10638, file: !7488, line: 134, column: 2)
!10643 = !{i32 -2145471140, i32 -2145471111, i32 -2145471065, i32 -2145471007, i32 -2145470953, i32 -2145470899, i32 -2145470844, i32 -2145470813}
!10644 = !DILocation(line: 134, column: 2, scope: !10645)
!10645 = distinct !DILexicalBlock(scope: !10638, file: !7488, line: 134, column: 2)
!10646 = !{i32 -2145470393, i32 -2145470386, i32 -2145470334, i32 -2145470303, i32 -2145470273}
!10647 = !DILocation(line: 134, column: 2, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10638, file: !7488, line: 134, column: 2)
!10649 = !DILocation(line: 134, column: 2, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10634, file: !7488, line: 134, column: 2)
!10651 = !DILocation(line: 135, column: 1, scope: !10621)
!10652 = distinct !DISubprogram(name: "check_object_size", scope: !7488, file: !7488, line: 122, type: !10653, scopeLine: 124, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10653 = !DISubroutineType(types: !10654)
!10654 = !{null, !2093, !285, !451}
!10655 = !DILocalVariable(name: "ptr", arg: 1, scope: !10652, file: !7488, line: 122, type: !2093)
!10656 = !DILocation(line: 122, column: 50, scope: !10652)
!10657 = !DILocalVariable(name: "n", arg: 2, scope: !10652, file: !7488, line: 122, type: !285)
!10658 = !DILocation(line: 122, column: 69, scope: !10652)
!10659 = !DILocalVariable(name: "to_user", arg: 3, scope: !10652, file: !7488, line: 123, type: !451)
!10660 = !DILocation(line: 123, column: 15, scope: !10652)
!10661 = !DILocation(line: 124, column: 3, scope: !10652)
!10662 = distinct !DISubprogram(name: "iommu_check_bind_data", scope: !3, file: !3, line: 2074, type: !10663, scopeLine: 2075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10663 = !DISubroutineType(types: !10664)
!10664 = !{!135, !3862}
!10665 = !DILocalVariable(name: "data", arg: 1, scope: !10662, file: !3, line: 2074, type: !3862)
!10666 = !DILocation(line: 2074, column: 65, scope: !10662)
!10667 = !DILocalVariable(name: "mask", scope: !10662, file: !3, line: 2076, type: !382)
!10668 = !DILocation(line: 2076, column: 6, scope: !10662)
!10669 = !DILocalVariable(name: "i", scope: !10662, file: !3, line: 2077, type: !135)
!10670 = !DILocation(line: 2077, column: 6, scope: !10662)
!10671 = !DILocation(line: 2079, column: 6, scope: !10672)
!10672 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2079, column: 6)
!10673 = !DILocation(line: 2079, column: 12, scope: !10672)
!10674 = !DILocation(line: 2079, column: 20, scope: !10672)
!10675 = !DILocation(line: 2079, column: 6, scope: !10662)
!10676 = !DILocation(line: 2080, column: 3, scope: !10672)
!10677 = !DILocation(line: 2083, column: 6, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2083, column: 6)
!10679 = !DILocation(line: 2083, column: 12, scope: !10678)
!10680 = !DILocation(line: 2083, column: 19, scope: !10678)
!10681 = !DILocation(line: 2083, column: 6, scope: !10662)
!10682 = !DILocation(line: 2084, column: 3, scope: !10678)
!10683 = !DILocation(line: 2087, column: 7, scope: !10662)
!10684 = !DILocation(line: 2088, column: 6, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2088, column: 6)
!10686 = !DILocation(line: 2088, column: 12, scope: !10685)
!10687 = !DILocation(line: 2088, column: 21, scope: !10685)
!10688 = !DILocation(line: 2088, column: 20, scope: !10685)
!10689 = !DILocation(line: 2088, column: 18, scope: !10685)
!10690 = !DILocation(line: 2088, column: 6, scope: !10662)
!10691 = !DILocation(line: 2089, column: 3, scope: !10685)
!10692 = !DILocation(line: 2092, column: 9, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2092, column: 2)
!10694 = !DILocation(line: 2092, column: 7, scope: !10693)
!10695 = !DILocation(line: 2092, column: 14, scope: !10696)
!10696 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 2092, column: 2)
!10697 = !DILocation(line: 2092, column: 16, scope: !10696)
!10698 = !DILocation(line: 2092, column: 2, scope: !10693)
!10699 = !DILocation(line: 2093, column: 7, scope: !10700)
!10700 = distinct !DILexicalBlock(scope: !10701, file: !3, line: 2093, column: 7)
!10701 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 2092, column: 46)
!10702 = !DILocation(line: 2093, column: 13, scope: !10700)
!10703 = !DILocation(line: 2093, column: 21, scope: !10700)
!10704 = !DILocation(line: 2093, column: 7, scope: !10701)
!10705 = !DILocation(line: 2094, column: 4, scope: !10700)
!10706 = !DILocation(line: 2095, column: 2, scope: !10701)
!10707 = !DILocation(line: 2092, column: 42, scope: !10696)
!10708 = !DILocation(line: 2092, column: 2, scope: !10696)
!10709 = distinct !{!10709, !10698, !10710}
!10710 = !DILocation(line: 2095, column: 2, scope: !10693)
!10711 = !DILocation(line: 2097, column: 2, scope: !10662)
!10712 = !DILocation(line: 2098, column: 1, scope: !10662)
!10713 = distinct !DISubprogram(name: "iommu_group_do_attach_device", scope: !3, file: !3, line: 2247, type: !6162, scopeLine: 2248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10714 = !DILocalVariable(name: "dev", arg: 1, scope: !10713, file: !3, line: 2247, type: !174)
!10715 = !DILocation(line: 2247, column: 56, scope: !10713)
!10716 = !DILocalVariable(name: "data", arg: 2, scope: !10713, file: !3, line: 2247, type: !162)
!10717 = !DILocation(line: 2247, column: 67, scope: !10713)
!10718 = !DILocalVariable(name: "domain", scope: !10713, file: !3, line: 2249, type: !3489)
!10719 = !DILocation(line: 2249, column: 23, scope: !10713)
!10720 = !DILocation(line: 2249, column: 32, scope: !10713)
!10721 = !DILocation(line: 2251, column: 31, scope: !10713)
!10722 = !DILocation(line: 2251, column: 39, scope: !10713)
!10723 = !DILocation(line: 2251, column: 9, scope: !10713)
!10724 = !DILocation(line: 2251, column: 2, scope: !10713)
!10725 = distinct !DISubprogram(name: "iommu_group_do_detach_device", scope: !3, file: !3, line: 2282, type: !6162, scopeLine: 2283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10726 = !DILocalVariable(name: "dev", arg: 1, scope: !10725, file: !3, line: 2282, type: !174)
!10727 = !DILocation(line: 2282, column: 56, scope: !10725)
!10728 = !DILocalVariable(name: "data", arg: 2, scope: !10725, file: !3, line: 2282, type: !162)
!10729 = !DILocation(line: 2282, column: 67, scope: !10725)
!10730 = !DILocalVariable(name: "domain", scope: !10725, file: !3, line: 2284, type: !3489)
!10731 = !DILocation(line: 2284, column: 23, scope: !10725)
!10732 = !DILocation(line: 2284, column: 32, scope: !10725)
!10733 = !DILocation(line: 2286, column: 24, scope: !10725)
!10734 = !DILocation(line: 2286, column: 32, scope: !10725)
!10735 = !DILocation(line: 2286, column: 2, scope: !10725)
!10736 = !DILocation(line: 2288, column: 2, scope: !10725)
!10737 = distinct !DISubprogram(name: "__iommu_detach_device", scope: !3, file: !3, line: 2176, type: !3518, scopeLine: 2178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10738 = !DILocalVariable(name: "domain", arg: 1, scope: !10737, file: !3, line: 2176, type: !3489)
!10739 = !DILocation(line: 2176, column: 56, scope: !10737)
!10740 = !DILocalVariable(name: "dev", arg: 2, scope: !10737, file: !3, line: 2177, type: !174)
!10741 = !DILocation(line: 2177, column: 22, scope: !10737)
!10742 = !DILocation(line: 2179, column: 31, scope: !10743)
!10743 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 2179, column: 6)
!10744 = !DILocation(line: 2179, column: 39, scope: !10743)
!10745 = !DILocation(line: 2179, column: 6, scope: !10743)
!10746 = !DILocation(line: 2179, column: 6, scope: !10737)
!10747 = !DILocation(line: 2180, column: 3, scope: !10743)
!10748 = !DILocation(line: 2182, column: 6, scope: !10749)
!10749 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 2182, column: 6)
!10750 = !DILocation(line: 2182, column: 6, scope: !10737)
!10751 = !DILocation(line: 2183, column: 3, scope: !10749)
!10752 = !DILocation(line: 2185, column: 2, scope: !10737)
!10753 = !DILocation(line: 2185, column: 10, scope: !10737)
!10754 = !DILocation(line: 2185, column: 15, scope: !10737)
!10755 = !DILocation(line: 2185, column: 26, scope: !10737)
!10756 = !DILocation(line: 2185, column: 34, scope: !10737)
!10757 = !DILocation(line: 2186, column: 34, scope: !10737)
!10758 = !DILocation(line: 2186, column: 2, scope: !10737)
!10759 = !DILocation(line: 2187, column: 1, scope: !10737)
!10760 = distinct !DISubprogram(name: "iommu_pgsize", scope: !3, file: !3, line: 2332, type: !8332, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10761 = !DILocalVariable(name: "word", arg: 1, scope: !10762, file: !4935, line: 261, type: !285)
!10762 = distinct !DISubprogram(name: "__fls", scope: !4935, file: !4935, line: 261, type: !4936, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10763 = !DILocation(line: 261, column: 58, scope: !10762, inlinedAt: !10764)
!10764 = distinct !DILocation(line: 2358, column: 15, scope: !10760)
!10765 = !DILocation(line: 233, column: 58, scope: !4934, inlinedAt: !10766)
!10766 = distinct !DILocation(line: 2344, column: 35, scope: !10767)
!10767 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 2342, column: 26)
!10768 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 2342, column: 6)
!10769 = !DILocation(line: 261, column: 58, scope: !10762, inlinedAt: !10770)
!10770 = distinct !DILocation(line: 2339, column: 15, scope: !10760)
!10771 = !DILocalVariable(name: "domain", arg: 1, scope: !10760, file: !3, line: 2332, type: !3489)
!10772 = !DILocation(line: 2332, column: 49, scope: !10760)
!10773 = !DILocalVariable(name: "addr_merge", arg: 2, scope: !10760, file: !3, line: 2333, type: !285)
!10774 = !DILocation(line: 2333, column: 21, scope: !10760)
!10775 = !DILocalVariable(name: "size", arg: 3, scope: !10760, file: !3, line: 2333, type: !282)
!10776 = !DILocation(line: 2333, column: 40, scope: !10760)
!10777 = !DILocalVariable(name: "pgsize_idx", scope: !10760, file: !3, line: 2335, type: !7)
!10778 = !DILocation(line: 2335, column: 15, scope: !10760)
!10779 = !DILocalVariable(name: "pgsize", scope: !10760, file: !3, line: 2336, type: !282)
!10780 = !DILocation(line: 2336, column: 9, scope: !10760)
!10781 = !DILocation(line: 2339, column: 21, scope: !10760)
!10782 = !DILocation(line: 265, column: 14, scope: !10762, inlinedAt: !10770)
!10783 = !DILocation(line: 263, column: 2, scope: !10762, inlinedAt: !10770)
!10784 = !{i32 448494}
!10785 = !DILocation(line: 266, column: 9, scope: !10762, inlinedAt: !10770)
!10786 = !DILocation(line: 2339, column: 15, scope: !10760)
!10787 = !DILocation(line: 2339, column: 13, scope: !10760)
!10788 = !DILocation(line: 2342, column: 6, scope: !10768)
!10789 = !DILocation(line: 2342, column: 6, scope: !10760)
!10790 = !DILocalVariable(name: "align_pgsize_idx", scope: !10767, file: !3, line: 2344, type: !7)
!10791 = !DILocation(line: 2344, column: 16, scope: !10767)
!10792 = !DILocation(line: 2344, column: 41, scope: !10767)
!10793 = !DILocation(line: 237, column: 11, scope: !4934, inlinedAt: !10766)
!10794 = !DILocation(line: 235, column: 2, scope: !4934, inlinedAt: !10766)
!10795 = !DILocation(line: 238, column: 9, scope: !4934, inlinedAt: !10766)
!10796 = !DILocation(line: 2344, column: 35, scope: !10767)
!10797 = !DILocalVariable(name: "__UNIQUE_ID___x284", scope: !10798, file: !3, line: 2345, type: !7)
!10798 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 2345, column: 16)
!10799 = !DILocation(line: 2345, column: 16, scope: !10798)
!10800 = !DILocalVariable(name: "__UNIQUE_ID___y285", scope: !10798, file: !3, line: 2345, type: !7)
!10801 = !DILocation(line: 2345, column: 14, scope: !10767)
!10802 = !DILocation(line: 2346, column: 2, scope: !10767)
!10803 = !DILocation(line: 2349, column: 20, scope: !10760)
!10804 = !DILocation(line: 2349, column: 31, scope: !10760)
!10805 = !DILocation(line: 2349, column: 16, scope: !10760)
!10806 = !DILocation(line: 2349, column: 37, scope: !10760)
!10807 = !DILocation(line: 2349, column: 9, scope: !10760)
!10808 = !DILocation(line: 2352, column: 12, scope: !10760)
!10809 = !DILocation(line: 2352, column: 20, scope: !10760)
!10810 = !DILocation(line: 2352, column: 9, scope: !10760)
!10811 = !DILocation(line: 2355, column: 2, scope: !10760)
!10812 = !DILocation(line: 2355, column: 2, scope: !10813)
!10813 = distinct !DILexicalBlock(scope: !10814, file: !3, line: 2355, column: 2)
!10814 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 2355, column: 2)
!10815 = !DILocation(line: 2355, column: 2, scope: !10814)
!10816 = !DILocation(line: 2355, column: 2, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2355, column: 2)
!10818 = !DILocation(line: 2355, column: 2, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 2355, column: 2)
!10820 = !DILocation(line: 2355, column: 2, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 2355, column: 2)
!10822 = !{i32 -2141323748, i32 -2141323719, i32 -2141323673, i32 -2141323615, i32 -2141323561, i32 -2141323507, i32 -2141323452, i32 -2141323421}
!10823 = !DILocation(line: 2355, column: 2, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 2355, column: 2)
!10825 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 2355, column: 2)
!10826 = !{i32 -2141322976, i32 -2141322969, i32 -2141322915, i32 -2141322884, i32 -2141322854}
!10827 = !DILocation(line: 2355, column: 2, scope: !10825)
!10828 = !DILocation(line: 2358, column: 21, scope: !10760)
!10829 = !DILocation(line: 265, column: 14, scope: !10762, inlinedAt: !10764)
!10830 = !DILocation(line: 263, column: 2, scope: !10762, inlinedAt: !10764)
!10831 = !DILocation(line: 266, column: 9, scope: !10762, inlinedAt: !10764)
!10832 = !DILocation(line: 2358, column: 15, scope: !10760)
!10833 = !DILocation(line: 2358, column: 13, scope: !10760)
!10834 = !DILocation(line: 2359, column: 18, scope: !10760)
!10835 = !DILocation(line: 2359, column: 15, scope: !10760)
!10836 = !DILocation(line: 2359, column: 9, scope: !10760)
!10837 = !DILocation(line: 2361, column: 9, scope: !10760)
!10838 = !DILocation(line: 2361, column: 2, scope: !10760)
!10839 = distinct !DISubprogram(name: "trace_map", scope: !6148, file: !6148, line: 86, type: !10840, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10840 = !DISubroutineType(types: !10841)
!10841 = !{null, !285, !2091, !282}
!10842 = !DILocalVariable(name: "iova", arg: 1, scope: !10839, file: !6148, line: 86, type: !285)
!10843 = !DILocation(line: 86, column: 1, scope: !10839)
!10844 = !DILocalVariable(name: "paddr", arg: 2, scope: !10839, file: !6148, line: 86, type: !2091)
!10845 = !DILocalVariable(name: "size", arg: 3, scope: !10839, file: !6148, line: 86, type: !282)
!10846 = distinct !DISubprogram(name: "trace_unmap", scope: !6148, file: !6148, line: 109, type: !10847, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10847 = !DISubroutineType(types: !10848)
!10848 = !{null, !285, !282, !282}
!10849 = !DILocalVariable(name: "iova", arg: 1, scope: !10846, file: !6148, line: 109, type: !285)
!10850 = !DILocation(line: 109, column: 1, scope: !10846)
!10851 = !DILocalVariable(name: "size", arg: 2, scope: !10846, file: !6148, line: 109, type: !282)
!10852 = !DILocalVariable(name: "unmapped_size", arg: 3, scope: !10846, file: !6148, line: 109, type: !282)
!10853 = distinct !DISubprogram(name: "sg_phys", scope: !8491, file: !8491, line: 241, type: !10854, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10854 = !DISubroutineType(types: !10855)
!10855 = !{!885, !8489}
!10856 = !DILocalVariable(name: "sg", arg: 1, scope: !10853, file: !8491, line: 241, type: !8489)
!10857 = !DILocation(line: 241, column: 54, scope: !10853)
!10858 = !DILocation(line: 243, column: 9, scope: !10853)
!10859 = !DILocation(line: 243, column: 37, scope: !10853)
!10860 = !DILocation(line: 243, column: 41, scope: !10853)
!10861 = !DILocation(line: 243, column: 35, scope: !10853)
!10862 = !DILocation(line: 243, column: 2, scope: !10853)
!10863 = distinct !DISubprogram(name: "sg_page", scope: !8491, file: !8491, line: 124, type: !10864, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10864 = !DISubroutineType(types: !10865)
!10865 = !{!685, !8489}
!10866 = !DILocalVariable(name: "sg", arg: 1, scope: !10863, file: !8491, line: 124, type: !8489)
!10867 = !DILocation(line: 124, column: 56, scope: !10863)
!10868 = !DILocation(line: 129, column: 26, scope: !10863)
!10869 = !DILocation(line: 129, column: 31, scope: !10863)
!10870 = !DILocation(line: 129, column: 41, scope: !10863)
!10871 = !DILocation(line: 129, column: 9, scope: !10863)
!10872 = !DILocation(line: 129, column: 2, scope: !10863)
!10873 = distinct !DISubprogram(name: "iommu_debugfs_setup", scope: !6, file: !6, line: 1091, type: !1844, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10874 = !DILocation(line: 1091, column: 47, scope: !10873)
!10875 = distinct !DISubprogram(name: "__must_check_overflow", scope: !9062, file: !9062, line: 52, type: !10876, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!451, !451}
!10878 = !DILocalVariable(name: "overflow", arg: 1, scope: !10875, file: !9062, line: 52, type: !451)
!10879 = !DILocation(line: 52, column: 60, scope: !10875)
!10880 = !DILocation(line: 54, column: 9, scope: !10875)
!10881 = !DILocation(line: 54, column: 2, scope: !10875)
!10882 = distinct !DISubprogram(name: "IS_ERR_OR_NULL", scope: !5774, file: !5774, line: 39, type: !9614, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !208)
!10883 = !DILocalVariable(name: "ptr", arg: 1, scope: !10882, file: !5774, line: 39, type: !2093)
!10884 = !DILocation(line: 39, column: 68, scope: !10882)
!10885 = !DILocation(line: 41, column: 9, scope: !10882)
!10886 = !DILocation(line: 41, column: 24, scope: !10882)
!10887 = !DILocation(line: 41, column: 27, scope: !10882)
!10888 = !DILocation(line: 41, column: 2, scope: !10882)
