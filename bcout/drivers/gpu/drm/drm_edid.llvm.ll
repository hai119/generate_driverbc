; ModuleID = '../bcout/drivers/gpu/drm/drm_edid.llvm.bc'
source_filename = "drivers/gpu/drm/drm_edid.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon }
%struct.module = type opaque
%union.anon = type { i8* }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kmem_cache = type opaque
%struct.edid_quirk = type { [4 x i8], i32, i32 }
%struct.anon.78 = type { i32, i32 }
%struct.minimode = type { i16, i16, i16, i16 }
%struct.stereo_mandatory_mode = type { i32, i32, i32, i32 }
%struct.edid = type { [8 x i8], [2 x i8], [2 x i8], i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.est_timings, [8 x %struct.std_timing], [4 x %struct.detailed_timing], i8, i8 }
%struct.est_timings = type { i8, i8, i8 }
%struct.std_timing = type { i8, i8 }
%struct.detailed_timing = type { i16, %union.anon.0 }
%union.anon.0 = type { %struct.detailed_pixel_timing }
%struct.detailed_pixel_timing = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.drm_connector = type { %struct.drm_device*, %struct.device*, %struct.device_attribute*, %struct.list_head, %struct.drm_mode_object, i8*, %struct.mutex, i32, i32, i32, i8, i8, i8, i8, i32, %struct.list_head, i32, %struct.list_head, %struct.drm_display_info, %struct.drm_connector_funcs*, %struct.drm_property_blob*, %struct.drm_object_properties, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property_blob*, %struct.drm_property*, i8, i32, %struct.drm_connector_helper_funcs*, %struct.drm_cmdline_mode, i32, i8, i64, i32, %struct.drm_encoder*, [128 x i8], [2 x i8], [2 x i32], [2 x i32], %struct.i2c_adapter*, i32, i32, i8, i8, %struct.dentry*, %struct.drm_connector_state*, %struct.drm_property_blob*, i8, %struct.drm_tile_group*, i8, i8, i8, i8, i8, i16, i16, %struct.llist_node, %struct.hdr_sink_metadata }
%struct.drm_device = type { %struct.list_head, i32, %struct.kref, %struct.device*, %struct.anon.71, %struct.drm_driver*, i8*, %struct.drm_minor*, %struct.drm_minor*, i8, %struct.drm_master*, i32, i8, %struct.inode*, i8*, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, i32, i8, %struct.drm_vblank_crtc*, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, %struct.drm_agp_head*, %struct.pci_dev*, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, %struct.drm_vma_offset_manager*, %struct.drm_vram_mm*, i32, %struct.drm_fb_helper* }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.anon.71 = type { %struct.list_head, i8*, %struct.spinlock }
%struct.drm_driver = type { i32 (%struct.drm_device*, i64)*, i32 (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_device*)*, void (%struct.drm_device*)*, void (%struct.drm_device*)*, i32 (i32, i8*)*, void (%struct.drm_device*)*, i32 (%struct.drm_device*)*, void (%struct.drm_device*)*, void (%struct.drm_device*, %struct.drm_file*, i1)*, void (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_minor*)*, void (%struct.drm_gem_object*)*, i32 (%struct.drm_gem_object*, %struct.drm_file*)*, void (%struct.drm_gem_object*, %struct.drm_file*)*, %struct.drm_gem_object* (%struct.drm_device*, i64)*, i32 (%struct.drm_device*, %struct.drm_file*, i32, i32, i32*)*, i32 (%struct.drm_device*, %struct.drm_file*, i32, i32*)*, %struct.dma_buf* (%struct.drm_gem_object*, i32)*, %struct.drm_gem_object* (%struct.drm_device*, %struct.dma_buf*)*, i32 (%struct.drm_gem_object*)*, void (%struct.drm_gem_object*)*, %struct.sg_table* (%struct.drm_gem_object*)*, %struct.drm_gem_object* (%struct.drm_device*, %struct.dma_buf_attachment*, %struct.sg_table*)*, i8* (%struct.drm_gem_object*)*, void (%struct.drm_gem_object*, i8*)*, i32 (%struct.drm_gem_object*, %struct.vm_area_struct*)*, i32 (%struct.drm_file*, %struct.drm_device*, %struct.drm_mode_create_dumb*)*, i32 (%struct.drm_file*, %struct.drm_device*, i32, i64*)*, i32 (%struct.drm_file*, %struct.drm_device*, i32)*, %struct.vm_operations_struct*, i32, i32, i32, i8*, i8*, i8*, i32, %struct.drm_ioctl_desc*, i32, %struct.file_operations*, %struct.list_head, i32 (%struct.drm_device*)*, void (%struct.drm_device*, %struct.drm_file*)*, i32 (%struct.drm_device*, i8*, %struct.drm_file*)*, i32 (%struct.drm_device*)*, i32 (%struct.drm_device*, i32)*, i32 (%struct.drm_device*, i32)*, i32 (%struct.drm_device*, i32)*, void (%struct.drm_device*, i32)*, i32 }
%struct.drm_file = type opaque
%struct.drm_gem_object = type opaque
%struct.dma_buf = type opaque
%struct.sg_table = type opaque
%struct.dma_buf_attachment = type opaque
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.22, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.mm_struct = type { %struct.anon.21, [0 x i64] }
%struct.anon.21 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.51, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.23 }
%union.anon.23 = type { %struct.anon.24 }
%struct.anon.24 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.36 }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.36 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.28, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.29, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.30, %union.anon.34, %struct.key_restriction* }
%union.anon.28 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.29 = type { i64 }
%union.anon.30 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.31, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.31 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.34 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.37, %union.anon.38, i32 }
%struct.request_queue = type opaque
%union.anon.37 = type { %struct.list_head }
%union.anon.38 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.39 }
%struct.anon.39 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.50, i32, [12 x i8] }
%union.anon.50 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.51 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.page = type { i64, %union.anon.8, %union.anon.58, %struct.atomic_t, [8 x i8] }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.writeback_control = type opaque
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.10 }
%union.anon.10 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.swap_info_struct = type opaque
%union.anon.58 = type { %struct.atomic_t }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.52, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.55 }
%union.anon.52 = type { %struct.anon.53 }
%struct.anon.53 = type { i64, i64 }
%union.anon.55 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.pgprot = type { i64 }
%struct.anon.22 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.file = type { %union.anon.4, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.4 = type { %struct.callback_head }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.atomic64_t = type { i64 }
%struct.vm_userfaultfd_ctx = type {}
%struct.drm_mode_create_dumb = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.drm_ioctl_desc = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.63 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.63 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.drm_minor = type opaque
%struct.drm_master = type opaque
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.60, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.61, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.62, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.kstatfs = type opaque
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.59, i32 }
%union.anon.59 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.qstr = type { %union.anon.5, i8* }
%union.anon.5 = type { i64 }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.60 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.61 = type { %struct.callback_head }
%union.anon.62 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.atomic_t = type { i32 }
%struct.drm_vblank_crtc = type opaque
%struct.spinlock = type { %union.anon.7 }
%union.anon.7 = type { %struct.raw_spinlock }
%struct.drm_agp_head = type opaque
%struct.pci_dev = type opaque
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, %struct.drm_modeset_acquire_ctx*, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, %struct.drm_mode_config_funcs*, i64, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, i32, i32, i8, i8, i8, i8, i8, i8, i8, %struct.drm_property*, i32, i32, %struct.drm_atomic_state*, %struct.drm_mode_config_helper_funcs* }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, %struct.ww_acquire_ctx* }
%struct.ww_acquire_ctx = type { %struct.task_struct*, i64, i32, i16, i16 }
%struct.drm_modeset_acquire_ctx = type { %struct.ww_acquire_ctx, %struct.drm_modeset_lock*, %struct.list_head, i8, i8 }
%struct.ida = type { %struct.xarray }
%struct.llist_head = type { %struct.llist_node* }
%struct.drm_mode_config_funcs = type { %struct.drm_framebuffer* (%struct.drm_device*, %struct.drm_file*, %struct.drm_mode_fb_cmd2*)*, %struct.drm_format_info* (%struct.drm_mode_fb_cmd2*)*, void (%struct.drm_device*)*, i32 (%struct.drm_device*, %struct.drm_display_mode*)*, i32 (%struct.drm_device*, %struct.drm_atomic_state*)*, i32 (%struct.drm_device*, %struct.drm_atomic_state*, i1)*, %struct.drm_atomic_state* (%struct.drm_device*)*, void (%struct.drm_atomic_state*)*, void (%struct.drm_atomic_state*)* }
%struct.drm_framebuffer = type { %struct.drm_device*, %struct.list_head, %struct.drm_mode_object, [16 x i8], %struct.drm_format_info*, %struct.drm_framebuffer_funcs*, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, %struct.list_head, [4 x %struct.drm_gem_object*] }
%struct.drm_format_info = type opaque
%struct.drm_framebuffer_funcs = type { void (%struct.drm_framebuffer*)*, i32 (%struct.drm_framebuffer*, %struct.drm_file*, i32*)*, i32 (%struct.drm_framebuffer*, %struct.drm_file*, i32, i32, %struct.drm_clip_rect*, i32)* }
%struct.drm_clip_rect = type { i16, i16, i16, i16 }
%struct.drm_mode_fb_cmd2 = type { i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [4 x i32], [4 x i64] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.drm_atomic_state = type opaque
%struct.drm_mode_config_helper_funcs = type opaque
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.drm_vma_offset_manager = type opaque
%struct.drm_vram_mm = type opaque
%struct.drm_fb_helper = type opaque
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.70, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.70 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.drm_mode_object = type { i32, i32, %struct.drm_object_properties*, %struct.kref, void (%struct.kref*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.drm_display_info = type { i32, i32, i32, i32, i32, i32, i32*, i32, i32, i32, i8, i8, i8, i8, i8, i8, %struct.drm_hdmi_info, i8, %struct.drm_monitor_range_info }
%struct.drm_hdmi_info = type { %struct.drm_scdc, [4 x i64], [4 x i64], i64, i8 }
%struct.drm_scdc = type { i8, i8, %struct.drm_scrambling }
%struct.drm_scrambling = type { i8, i8 }
%struct.drm_monitor_range_info = type { i8, i8 }
%struct.drm_connector_funcs = type { i32 (%struct.drm_connector*, i32)*, void (%struct.drm_connector*)*, i32 (%struct.drm_connector*, i1)*, void (%struct.drm_connector*)*, i32 (%struct.drm_connector*, i32, i32)*, i32 (%struct.drm_connector*, %struct.drm_property*, i64)*, {}*, void (%struct.drm_connector*)*, void (%struct.drm_connector*)*, %struct.drm_connector_state* (%struct.drm_connector*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_property*, i64*)*, void (%struct.drm_printer*, %struct.drm_connector_state*)* }
%struct.drm_printer = type { void (%struct.drm_printer*, %struct.va_format*)*, void (%struct.drm_printer*, i8*)*, i8*, i8* }
%struct.va_format = type { i8*, [1 x %struct.__va_list_tag]* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.drm_object_properties = type { i32, [24 x %struct.drm_property*], [24 x i64] }
%struct.drm_property = type { %struct.list_head, %struct.drm_mode_object, i32, [32 x i8], i32, i64*, %struct.drm_device*, %struct.list_head }
%struct.drm_connector_helper_funcs = type opaque
%struct.drm_cmdline_mode = type { [32 x i8], i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, %struct.drm_connector_tv_margins }
%struct.drm_connector_tv_margins = type { i32, i32, i32, i32 }
%struct.drm_encoder = type { %struct.drm_device*, %struct.list_head, %struct.drm_mode_object, i8*, i32, i32, i32, i32, %struct.drm_crtc*, %struct.list_head, %struct.drm_encoder_funcs*, %struct.drm_encoder_helper_funcs* }
%struct.drm_crtc = type { %struct.drm_device*, %struct.device_node*, %struct.list_head, i8*, %struct.drm_modeset_lock, %struct.drm_mode_object, %struct.drm_plane*, %struct.drm_plane*, i32, i32, i32, i8, %struct.drm_display_mode, %struct.drm_display_mode, i32, i32, %struct.drm_crtc_funcs*, i32, i16*, %struct.drm_crtc_helper_funcs*, %struct.drm_object_properties, %struct.drm_crtc_state*, %struct.list_head, %struct.spinlock, %struct.drm_crtc_crc, i32, %struct.spinlock, i64, [32 x i8], %struct.drm_self_refresh_data* }
%struct.drm_plane = type { %struct.drm_device*, %struct.list_head, i8*, %struct.drm_modeset_lock, %struct.drm_mode_object, i32, i32*, i32, i8, i64*, i32, %struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_framebuffer*, %struct.drm_plane_funcs*, %struct.drm_object_properties, i32, i32, %struct.drm_plane_helper_funcs*, %struct.drm_plane_state*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property* }
%struct.drm_plane_funcs = type { i32 (%struct.drm_plane*, %struct.drm_crtc*, %struct.drm_framebuffer*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_plane*, %struct.drm_modeset_acquire_ctx*)*, void (%struct.drm_plane*)*, void (%struct.drm_plane*)*, i32 (%struct.drm_plane*, %struct.drm_property*, i64)*, %struct.drm_plane_state* (%struct.drm_plane*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_property*, i64*)*, i32 (%struct.drm_plane*)*, void (%struct.drm_plane*)*, void (%struct.drm_printer*, %struct.drm_plane_state*)*, i1 (%struct.drm_plane*, i32, i64)* }
%struct.drm_plane_helper_funcs = type opaque
%struct.drm_plane_state = type { %struct.drm_plane*, %struct.drm_crtc*, %struct.drm_framebuffer*, %struct.dma_fence*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, %struct.drm_property_blob*, %struct.drm_rect, %struct.drm_rect, i8, %struct.drm_crtc_commit*, %struct.drm_atomic_state* }
%struct.dma_fence = type opaque
%struct.drm_rect = type { i32, i32, i32, i32 }
%struct.drm_crtc_commit = type opaque
%struct.drm_crtc_funcs = type { void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_file*, i32, i32, i32)*, i32 (%struct.drm_crtc*, %struct.drm_file*, i32, i32, i32, i32, i32)*, i32 (%struct.drm_crtc*, i32, i32)*, i32 (%struct.drm_crtc*, i16*, i16*, i16*, i32, %struct.drm_modeset_acquire_ctx*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_mode_set*, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_pending_vblank_event*, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_pending_vblank_event*, i32, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_property*, i64)*, %struct.drm_crtc_state* (%struct.drm_crtc*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_property*, i64*)*, i32 (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, i8*)*, i32 (%struct.drm_crtc*, i8*, i64*)*, i8** (%struct.drm_crtc*, i64*)*, void (%struct.drm_printer*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i1 (%struct.drm_crtc*, i32*, i64*, i1)* }
%struct.drm_mode_set = type { %struct.drm_framebuffer*, %struct.drm_crtc*, %struct.drm_display_mode*, i32, i32, %struct.drm_connector**, i64 }
%struct.drm_pending_vblank_event = type opaque
%struct.drm_crtc_helper_funcs = type opaque
%struct.drm_crtc_state = type { %struct.drm_crtc*, i8, i8, i8, i32, i32, i32, %struct.drm_display_mode, %struct.drm_display_mode, %struct.drm_property_blob*, %struct.drm_property_blob*, %struct.drm_property_blob*, %struct.drm_property_blob*, i32, i8, i8, i8, %struct.drm_pending_vblank_event*, %struct.drm_crtc_commit*, %struct.drm_atomic_state* }
%struct.drm_crtc_crc = type { %struct.spinlock, i8*, i8, i8, %struct.drm_crtc_crc_entry*, i32, i32, i64, %struct.wait_queue_head }
%struct.drm_crtc_crc_entry = type { i8, i32, [10 x i32] }
%struct.drm_self_refresh_data = type opaque
%struct.drm_encoder_funcs = type { void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, i32 (%struct.drm_encoder*)*, void (%struct.drm_encoder*)* }
%struct.drm_encoder_helper_funcs = type opaque
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.68, %struct.list_head, %struct.list_head, %union.anon.69 }
%struct.lockref = type { %union.anon.66 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.spinlock, i32 }
%union.anon.68 = type { %struct.list_head }
%union.anon.69 = type { %struct.hlist_node }
%struct.drm_connector_state = type { %struct.drm_connector*, %struct.drm_crtc*, %struct.drm_encoder*, i32, %struct.drm_atomic_state*, %struct.drm_crtc_commit*, %struct.drm_tv_connector_state, i8, i32, i32, i32, i32, i32, i32, %struct.drm_writeback_job*, i8, i8, %struct.drm_property_blob* }
%struct.drm_tv_connector_state = type { i32, %struct.drm_connector_tv_margins, i32, i32, i32, i32, i32, i32, i32 }
%struct.drm_writeback_job = type opaque
%struct.drm_property_blob = type { %struct.drm_mode_object, %struct.drm_device*, %struct.list_head, %struct.list_head, i64, i8* }
%struct.drm_tile_group = type { %struct.kref, %struct.drm_device*, i32, [8 x i8] }
%struct.llist_node = type { %struct.llist_node* }
%struct.hdr_sink_metadata = type { i32, %union.anon.72 }
%union.anon.72 = type { %struct.hdr_static_metadata }
%struct.hdr_static_metadata = type { i8, i8, i16, i16, i16 }
%struct.cea_sad = type { i8, i8, i8, i8 }
%struct.displayid_block = type { i8, i8, i8 }
%struct.detailed_mode_closure = type { %struct.drm_connector*, %struct.edid*, i8, i32, i32 }
%struct.hdmi_drm_infoframe = type { i32, i8, i8, i32, i32, [3 x %struct.anon.73], %struct.anon.74, i16, i16, i16, i16 }
%struct.anon.73 = type { i16, i16 }
%struct.anon.74 = type { i16, i16 }
%struct.hdr_output_metadata = type { i32, %union.anon.75 }
%union.anon.75 = type { %struct.hdr_metadata_infoframe }
%struct.hdr_metadata_infoframe = type { i8, i8, [3 x %struct.anon.76], %struct.anon.77, i16, i16, i16, i16 }
%struct.anon.76 = type { i16, i16 }
%struct.anon.77 = type { i16, i16 }
%struct.hdmi_avi_infoframe = type { i32, i8, i8, i32, i32, i32, i32, i32, i8, i32, i32, i32, i8, i32, i32, i8, i16, i16, i16, i16 }
%struct.hdmi_vendor_infoframe = type { i32, i8, i8, i32, i8, i32, i32 }
%struct.displayid_hdr = type { i8, i8, i8, i8 }
%struct.detailed_non_pixel = type { i8, i8, i8, %union.anon.1 }
%union.anon.1 = type { %struct.detailed_data_string }
%struct.detailed_data_string = type { [13 x i8] }
%struct.detailed_data_monitor_range = type { i8, i8, i8, i8, i8, i8, %union.anon.2 }
%union.anon.2 = type { %struct.anon }
%struct.anon = type <{ i8, i8, i8, i16, i8, i8 }>
%struct.cvt_timing = type { [3 x i8] }
%struct.displayid_detailed_timing_block = type { %struct.displayid_block, [0 x %struct.displayid_detailed_timings_1] }
%struct.displayid_detailed_timings_1 = type { [3 x i8], i8, [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8], [2 x i8] }
%struct.displayid_tiled_block = type { %struct.displayid_block, i8, [3 x i8], [4 x i8], [5 x i8], [8 x i8] }

@edid_header = internal constant [8 x i8] c"\00\FF\FF\FF\FF\FF\FF\00", align 1, !dbg !0
@__param_str_edid_fixup = internal constant [15 x i8] c"drm.edid_fixup\00", align 1, !dbg !712
@param_ops_int = external dso_local constant %struct.kernel_param_ops, align 8
@edid_fixup = internal global i32 6, section ".data..read_mostly", align 4, !dbg !717
@__param_edid_fixup = internal constant %struct.kernel_param { i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__param_str_edid_fixup, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_int, i16 256, i8 -1, i8 0, %union.anon { i8* bitcast (i32* @edid_fixup to i8*) } }, section "__param", align 8, !dbg !641
@__UNIQUE_ID_edid_fixuptype252 = internal constant [28 x i8] c"drm.parmtype=edid_fixup:int\00", section ".modinfo", align 1, !dbg !702
@__UNIQUE_ID_edid_fixup253 = internal constant [79 x i8] c"drm.parm=edid_fixup:Minimum number of valid EDID header bytes (0-8, default 6)\00", section ".modinfo", align 1, !dbg !707
@.str = private unnamed_addr constant [27 x i8] c"drivers/gpu/drm/drm_edid.c\00", align 1
@.str.1 = private unnamed_addr constant [50 x i8] c"Fixing EDID header, your hardware may be failing\0A\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"EDID checksum is invalid, remainder is %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [77 x i8] c"Assuming a KVM switch modified the CEA block but left the original checksum\0A\00", align 1
@.str.4 = private unnamed_addr constant [51 x i8] c"\015[drm] EDID checksum is invalid, remainder is %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [49 x i8] c"\015[drm] EDID has major version %d, instead of 1\0A\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"EDID minor > 4, assuming backward compatibility\0A\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"\015EDID block is all zeroes\0A\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"\015Raw EDID:\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"\015\00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c" \09\00", align 1
@.str.11 = private unnamed_addr constant [71 x i8] c"[CONNECTOR:%d:%s] adding %d modes via fallback override/firmware EDID\0A\00", align 1
@drm_dmt_modes = internal constant [88 x %struct.drm_display_mode] [%struct.drm_display_mode { i32 31500, i16 640, i16 672, i16 736, i16 832, i16 0, i16 350, i16 382, i16 385, i16 445, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x350\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 31500, i16 640, i16 672, i16 736, i16 832, i16 0, i16 400, i16 401, i16 404, i16 445, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x400\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 35500, i16 720, i16 756, i16 828, i16 936, i16 0, i16 400, i16 401, i16 404, i16 446, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x400\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 25175, i16 640, i16 656, i16 752, i16 800, i16 0, i16 480, i16 490, i16 492, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 31500, i16 640, i16 664, i16 704, i16 832, i16 0, i16 480, i16 489, i16 492, i16 520, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 31500, i16 640, i16 656, i16 720, i16 840, i16 0, i16 480, i16 481, i16 484, i16 500, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 36000, i16 640, i16 696, i16 752, i16 832, i16 0, i16 480, i16 481, i16 484, i16 509, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 36000, i16 800, i16 824, i16 896, i16 1024, i16 0, i16 600, i16 601, i16 603, i16 625, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 40000, i16 800, i16 840, i16 968, i16 1056, i16 0, i16 600, i16 601, i16 605, i16 628, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 50000, i16 800, i16 856, i16 976, i16 1040, i16 0, i16 600, i16 637, i16 643, i16 666, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 49500, i16 800, i16 816, i16 896, i16 1056, i16 0, i16 600, i16 601, i16 604, i16 625, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 56250, i16 800, i16 832, i16 896, i16 1048, i16 0, i16 600, i16 601, i16 604, i16 631, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 73250, i16 800, i16 848, i16 880, i16 960, i16 0, i16 600, i16 603, i16 607, i16 636, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 33750, i16 848, i16 864, i16 976, i16 1088, i16 0, i16 480, i16 486, i16 494, i16 517, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"848x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 44900, i16 1024, i16 1032, i16 1208, i16 1264, i16 0, i16 768, i16 768, i16 776, i16 817, i16 0, i32 21, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 65000, i16 1024, i16 1048, i16 1184, i16 1344, i16 0, i16 768, i16 771, i16 777, i16 806, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 75000, i16 1024, i16 1048, i16 1184, i16 1328, i16 0, i16 768, i16 771, i16 777, i16 806, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 78750, i16 1024, i16 1040, i16 1136, i16 1312, i16 0, i16 768, i16 769, i16 772, i16 800, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 94500, i16 1024, i16 1072, i16 1168, i16 1376, i16 0, i16 768, i16 769, i16 772, i16 808, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 115500, i16 1024, i16 1072, i16 1104, i16 1184, i16 0, i16 768, i16 771, i16 775, i16 813, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 108000, i16 1152, i16 1216, i16 1344, i16 1600, i16 0, i16 864, i16 865, i16 868, i16 900, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1152x864\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 1390, i16 1430, i16 1650, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 68250, i16 1280, i16 1328, i16 1360, i16 1440, i16 0, i16 768, i16 771, i16 778, i16 790, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 79500, i16 1280, i16 1344, i16 1472, i16 1664, i16 0, i16 768, i16 771, i16 778, i16 798, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 102250, i16 1280, i16 1360, i16 1488, i16 1696, i16 0, i16 768, i16 771, i16 778, i16 805, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 117500, i16 1280, i16 1360, i16 1496, i16 1712, i16 0, i16 768, i16 771, i16 778, i16 809, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 140250, i16 1280, i16 1328, i16 1360, i16 1440, i16 0, i16 768, i16 771, i16 778, i16 813, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 71000, i16 1280, i16 1328, i16 1360, i16 1440, i16 0, i16 800, i16 803, i16 809, i16 823, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x800\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 83500, i16 1280, i16 1352, i16 1480, i16 1680, i16 0, i16 800, i16 803, i16 809, i16 831, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x800\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 106500, i16 1280, i16 1360, i16 1488, i16 1696, i16 0, i16 800, i16 803, i16 809, i16 838, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x800\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 122500, i16 1280, i16 1360, i16 1496, i16 1712, i16 0, i16 800, i16 803, i16 809, i16 843, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x800\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 146250, i16 1280, i16 1328, i16 1360, i16 1440, i16 0, i16 800, i16 803, i16 809, i16 847, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x800\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 108000, i16 1280, i16 1376, i16 1488, i16 1800, i16 0, i16 960, i16 961, i16 964, i16 1000, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x960\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 148500, i16 1280, i16 1344, i16 1504, i16 1728, i16 0, i16 960, i16 961, i16 964, i16 1011, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x960\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 175500, i16 1280, i16 1328, i16 1360, i16 1440, i16 0, i16 960, i16 963, i16 967, i16 1017, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x960\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 108000, i16 1280, i16 1328, i16 1440, i16 1688, i16 0, i16 1024, i16 1025, i16 1028, i16 1066, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x1024\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 135000, i16 1280, i16 1296, i16 1440, i16 1688, i16 0, i16 1024, i16 1025, i16 1028, i16 1066, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x1024\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 157500, i16 1280, i16 1344, i16 1504, i16 1728, i16 0, i16 1024, i16 1025, i16 1028, i16 1072, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x1024\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 187250, i16 1280, i16 1328, i16 1360, i16 1440, i16 0, i16 1024, i16 1027, i16 1034, i16 1084, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x1024\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 85500, i16 1360, i16 1424, i16 1536, i16 1792, i16 0, i16 768, i16 771, i16 777, i16 795, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1360x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 148250, i16 1360, i16 1408, i16 1440, i16 1520, i16 0, i16 768, i16 771, i16 776, i16 813, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1360x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 85500, i16 1366, i16 1436, i16 1579, i16 1792, i16 0, i16 768, i16 771, i16 774, i16 798, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1366x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 72000, i16 1366, i16 1380, i16 1436, i16 1500, i16 0, i16 768, i16 769, i16 772, i16 800, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1366x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 101000, i16 1400, i16 1448, i16 1480, i16 1560, i16 0, i16 1050, i16 1053, i16 1057, i16 1080, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1400x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 121750, i16 1400, i16 1488, i16 1632, i16 1864, i16 0, i16 1050, i16 1053, i16 1057, i16 1089, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1400x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 156000, i16 1400, i16 1504, i16 1648, i16 1896, i16 0, i16 1050, i16 1053, i16 1057, i16 1099, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1400x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 179500, i16 1400, i16 1504, i16 1656, i16 1912, i16 0, i16 1050, i16 1053, i16 1057, i16 1105, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1400x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 208000, i16 1400, i16 1448, i16 1480, i16 1560, i16 0, i16 1050, i16 1053, i16 1057, i16 1112, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1400x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 88750, i16 1440, i16 1488, i16 1520, i16 1600, i16 0, i16 900, i16 903, i16 909, i16 926, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x900\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 106500, i16 1440, i16 1520, i16 1672, i16 1904, i16 0, i16 900, i16 903, i16 909, i16 934, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x900\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 136750, i16 1440, i16 1536, i16 1688, i16 1936, i16 0, i16 900, i16 903, i16 909, i16 942, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x900\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 157000, i16 1440, i16 1544, i16 1696, i16 1952, i16 0, i16 900, i16 903, i16 909, i16 948, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x900\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 182750, i16 1440, i16 1488, i16 1520, i16 1600, i16 0, i16 900, i16 903, i16 909, i16 953, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x900\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 108000, i16 1600, i16 1624, i16 1704, i16 1800, i16 0, i16 900, i16 901, i16 904, i16 1000, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x900\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 162000, i16 1600, i16 1664, i16 1856, i16 2160, i16 0, i16 1200, i16 1201, i16 1204, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 175500, i16 1600, i16 1664, i16 1856, i16 2160, i16 0, i16 1200, i16 1201, i16 1204, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 189000, i16 1600, i16 1664, i16 1856, i16 2160, i16 0, i16 1200, i16 1201, i16 1204, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 202500, i16 1600, i16 1664, i16 1856, i16 2160, i16 0, i16 1200, i16 1201, i16 1204, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 229500, i16 1600, i16 1664, i16 1856, i16 2160, i16 0, i16 1200, i16 1201, i16 1204, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 268250, i16 1600, i16 1648, i16 1680, i16 1760, i16 0, i16 1200, i16 1203, i16 1207, i16 1271, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1600x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 119000, i16 1680, i16 1728, i16 1760, i16 1840, i16 0, i16 1050, i16 1053, i16 1059, i16 1080, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 146250, i16 1680, i16 1784, i16 1960, i16 2240, i16 0, i16 1050, i16 1053, i16 1059, i16 1089, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 187000, i16 1680, i16 1800, i16 1976, i16 2272, i16 0, i16 1050, i16 1053, i16 1059, i16 1099, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 214750, i16 1680, i16 1808, i16 1984, i16 2288, i16 0, i16 1050, i16 1053, i16 1059, i16 1105, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 245500, i16 1680, i16 1728, i16 1760, i16 1840, i16 0, i16 1050, i16 1053, i16 1059, i16 1112, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x1050\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 204750, i16 1792, i16 1920, i16 2120, i16 2448, i16 0, i16 1344, i16 1345, i16 1348, i16 1394, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1792x1344\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 261000, i16 1792, i16 1888, i16 2104, i16 2456, i16 0, i16 1344, i16 1345, i16 1348, i16 1417, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1792x1344\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 333250, i16 1792, i16 1840, i16 1872, i16 1952, i16 0, i16 1344, i16 1347, i16 1351, i16 1423, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1792x1344\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 218250, i16 1856, i16 1952, i16 2176, i16 2528, i16 0, i16 1392, i16 1393, i16 1396, i16 1439, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1856x1392\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 288000, i16 1856, i16 1984, i16 2208, i16 2560, i16 0, i16 1392, i16 1393, i16 1396, i16 1500, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1856x1392\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 356500, i16 1856, i16 1904, i16 1936, i16 2016, i16 0, i16 1392, i16 1395, i16 1399, i16 1474, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1856x1392\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 154000, i16 1920, i16 1968, i16 2000, i16 2080, i16 0, i16 1200, i16 1203, i16 1209, i16 1235, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 193250, i16 1920, i16 2056, i16 2256, i16 2592, i16 0, i16 1200, i16 1203, i16 1209, i16 1245, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 245250, i16 1920, i16 2056, i16 2264, i16 2608, i16 0, i16 1200, i16 1203, i16 1209, i16 1255, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 281250, i16 1920, i16 2064, i16 2272, i16 2624, i16 0, i16 1200, i16 1203, i16 1209, i16 1262, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 317000, i16 1920, i16 1968, i16 2000, i16 2080, i16 0, i16 1200, i16 1203, i16 1209, i16 1271, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1200\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 234000, i16 1920, i16 2048, i16 2256, i16 2600, i16 0, i16 1440, i16 1441, i16 1444, i16 1500, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1440\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 297000, i16 1920, i16 2064, i16 2288, i16 2640, i16 0, i16 1440, i16 1441, i16 1444, i16 1500, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1440\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 380500, i16 1920, i16 1968, i16 2000, i16 2080, i16 0, i16 1440, i16 1443, i16 1447, i16 1525, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1440\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 162000, i16 2048, i16 2074, i16 2154, i16 2250, i16 0, i16 1152, i16 1153, i16 1156, i16 1200, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2048x1152\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 268500, i16 2560, i16 2608, i16 2640, i16 2720, i16 0, i16 1600, i16 1603, i16 1609, i16 1646, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 348500, i16 2560, i16 2752, i16 3032, i16 3504, i16 0, i16 1600, i16 1603, i16 1609, i16 1658, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 443250, i16 2560, i16 2768, i16 3048, i16 3536, i16 0, i16 1600, i16 1603, i16 1609, i16 1672, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 505250, i16 2560, i16 2768, i16 3048, i16 3536, i16 0, i16 1600, i16 1603, i16 1609, i16 1682, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 552750, i16 2560, i16 2608, i16 2640, i16 2720, i16 0, i16 1600, i16 1603, i16 1609, i16 1694, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 556744, i16 4096, i16 4104, i16 4136, i16 4176, i16 0, i16 2160, i16 2208, i16 2216, i16 2222, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 556188, i16 4096, i16 4104, i16 4136, i16 4176, i16 0, i16 2160, i16 2208, i16 2216, i16 2222, i16 0, i32 9, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }], align 16, !dbg !719
@.str.12 = private unnamed_addr constant [29 x i8] c"SAD: no CEA Extension found\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"SAD: wrong CEA revision\0A\00", align 1
@.str.14 = private unnamed_addr constant [33 x i8] c"SAD: invalid data block offsets\0A\00", align 1
@.str.15 = private unnamed_addr constant [33 x i8] c"Monitor has basic audio support\0A\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"CEA audio format %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"non_desktop set to %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [47 x i8] c"%s: Assigning DFP sink color depth as %d bpc.\0A\00", align 1
@.str.19 = private unnamed_addr constant [60 x i8] c"%s: Assigning EDID-1.4 digital sink color depth as %d bpc.\0A\00", align 1
@.str.20 = private unnamed_addr constant [25 x i8] c"[drm] %s: EDID invalid.\0A\00", align 1
@.str.21 = private unnamed_addr constant [20 x i8] c"EOTF Not Supported\0A\00", align 1
@hdmi_colorimetry_val = internal constant [11 x i32] [i32 0, i32 1, i32 2, i32 3, i32 7, i32 11, i32 15, i32 19, i32 23, i32 27, i32 27], align 16, !dbg !795
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.22 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.23 = private unnamed_addr constant [28 x i8] c"[drm] %s: EDID is invalid:\0A\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"\09[%02x] ZERO \00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"\09[%02x] BAD  \00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"\09[%02x] GOOD \00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"\014\00", align 1
@__drm_debug = external dso_local global i32, align 4
@.str.28 = private unnamed_addr constant [39 x i8] c"drm: skipping non-existent adapter %s\0A\00", align 1
@edid_cea_modes_1 = internal constant [127 x %struct.drm_display_mode] [%struct.drm_display_mode { i32 25175, i16 640, i16 656, i16 752, i16 800, i16 0, i16 480, i16 490, i16 492, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 27000, i16 720, i16 736, i16 798, i16 858, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 27000, i16 720, i16 736, i16 798, i16 858, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 1390, i16 1430, i16 1650, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1094, i16 1125, i16 0, i32 21, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 13500, i16 720, i16 739, i16 801, i16 858, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 13500, i16 720, i16 739, i16 801, i16 858, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 13500, i16 720, i16 739, i16 801, i16 858, i16 0, i16 240, i16 244, i16 247, i16 262, i16 0, i32 4106, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x240\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 13500, i16 720, i16 739, i16 801, i16 858, i16 0, i16 240, i16 244, i16 247, i16 262, i16 0, i32 4106, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x240\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2956, i16 3204, i16 3432, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 26, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2956, i16 3204, i16 3432, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 26, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2956, i16 3204, i16 3432, i16 0, i16 240, i16 244, i16 247, i16 262, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x240\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2956, i16 3204, i16 3432, i16 0, i16 240, i16 244, i16 247, i16 262, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x240\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 1440, i16 1472, i16 1596, i16 1716, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 1440, i16 1472, i16 1596, i16 1716, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 27000, i16 720, i16 732, i16 796, i16 864, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 27000, i16 720, i16 732, i16 796, i16 864, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 1720, i16 1760, i16 1980, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1094, i16 1125, i16 0, i32 21, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 13500, i16 720, i16 732, i16 795, i16 864, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 13500, i16 720, i16 732, i16 795, i16 864, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 13500, i16 720, i16 732, i16 795, i16 864, i16 0, i16 288, i16 290, i16 293, i16 312, i16 0, i32 4106, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x288\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 13500, i16 720, i16 732, i16 795, i16 864, i16 0, i16 288, i16 290, i16 293, i16 312, i16 0, i32 4106, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x288\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2928, i16 3180, i16 3456, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 26, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2928, i16 3180, i16 3456, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 26, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2928, i16 3180, i16 3456, i16 0, i16 288, i16 290, i16 293, i16 312, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x288\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 2880, i16 2928, i16 3180, i16 3456, i16 0, i16 288, i16 290, i16 293, i16 312, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x288\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 1440, i16 1464, i16 1592, i16 1728, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 1440, i16 1464, i16 1592, i16 1728, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1440x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2558, i16 2602, i16 2750, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 108000, i16 2880, i16 2944, i16 3192, i16 3432, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 108000, i16 2880, i16 2944, i16 3192, i16 3432, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 108000, i16 2880, i16 2928, i16 3184, i16 3456, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 108000, i16 2880, i16 2928, i16 3184, i16 3456, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2880x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 72000, i16 1920, i16 1952, i16 2120, i16 2304, i16 0, i16 1080, i16 1126, i16 1136, i16 1250, i16 0, i32 25, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1094, i16 1125, i16 0, i32 21, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1280, i16 1720, i16 1760, i16 1980, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 720, i16 732, i16 796, i16 864, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 720, i16 732, i16 796, i16 864, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 27000, i16 720, i16 732, i16 795, i16 864, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 27000, i16 720, i16 732, i16 795, i16 864, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1094, i16 1125, i16 0, i32 21, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1280, i16 1390, i16 1430, i16 1650, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 720, i16 736, i16 798, i16 858, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 720, i16 736, i16 798, i16 858, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 27000, i16 720, i16 739, i16 801, i16 858, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 27000, i16 720, i16 739, i16 801, i16 858, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 108000, i16 720, i16 732, i16 796, i16 864, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 108000, i16 720, i16 732, i16 796, i16 864, i16 0, i16 576, i16 581, i16 586, i16 625, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 720, i16 732, i16 795, i16 864, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 720, i16 732, i16 795, i16 864, i16 0, i16 576, i16 580, i16 586, i16 625, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x576i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 108000, i16 720, i16 736, i16 798, i16 858, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 108000, i16 720, i16 736, i16 798, i16 858, i16 0, i16 480, i16 489, i16 495, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 54000, i16 720, i16 739, i16 801, i16 858, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 1 }, %struct.drm_display_mode { i32 54000, i16 720, i16 739, i16 801, i16 858, i16 0, i16 480, i16 488, i16 494, i16 525, i16 0, i32 4122, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x480i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 59400, i16 1280, i16 3040, i16 3080, i16 3300, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 3700, i16 3740, i16 3960, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 3040, i16 3080, i16 3300, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 59400, i16 1280, i16 3040, i16 3080, i16 3300, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 3700, i16 3740, i16 3960, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 3040, i16 3080, i16 3300, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 1720, i16 1760, i16 1980, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1280, i16 1390, i16 1430, i16 1650, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 148500, i16 1280, i16 1720, i16 1760, i16 1980, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 148500, i16 1280, i16 1390, i16 1430, i16 1650, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2558, i16 2602, i16 2750, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 74250, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 297000, i16 1920, i16 2448, i16 2492, i16 2640, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 297000, i16 1920, i16 2008, i16 2052, i16 2200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 59400, i16 1680, i16 3040, i16 3080, i16 3300, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 59400, i16 1680, i16 2908, i16 2948, i16 3168, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 59400, i16 1680, i16 2380, i16 2420, i16 2640, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 82500, i16 1680, i16 1940, i16 1980, i16 2200, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 99000, i16 1680, i16 1940, i16 1980, i16 2200, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 165000, i16 1680, i16 1740, i16 1780, i16 2000, i16 0, i16 720, i16 725, i16 730, i16 825, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 198000, i16 1680, i16 1740, i16 1780, i16 2000, i16 0, i16 720, i16 725, i16 730, i16 825, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 99000, i16 2560, i16 3558, i16 3602, i16 3750, i16 0, i16 1080, i16 1084, i16 1089, i16 1100, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 90000, i16 2560, i16 3008, i16 3052, i16 3200, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 118800, i16 2560, i16 3328, i16 3372, i16 3520, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 185625, i16 2560, i16 3108, i16 3152, i16 3300, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 198000, i16 2560, i16 2808, i16 2852, i16 3000, i16 0, i16 1080, i16 1084, i16 1089, i16 1100, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 371250, i16 2560, i16 2778, i16 2822, i16 2970, i16 0, i16 1080, i16 1084, i16 1089, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 495000, i16 2560, i16 3108, i16 3152, i16 3300, i16 0, i16 1080, i16 1084, i16 1089, i16 1250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 594000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 594000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 4096, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 297000, i16 4096, i16 5064, i16 5152, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 297000, i16 4096, i16 4184, i16 4272, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 594000, i16 4096, i16 5064, i16 5152, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 594000, i16 4096, i16 4184, i16 4272, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 594000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 594000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 90000, i16 1280, i16 2240, i16 2280, i16 2500, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 90000, i16 1280, i16 2240, i16 2280, i16 2500, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 99000, i16 1680, i16 2490, i16 2530, i16 2750, i16 0, i16 720, i16 725, i16 730, i16 750, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1680x720\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2558, i16 2602, i16 2750, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 148500, i16 1920, i16 2558, i16 2602, i16 2750, i16 0, i16 1080, i16 1084, i16 1089, i16 1125, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1920x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 198000, i16 2560, i16 3558, i16 3602, i16 3750, i16 0, i16 1080, i16 1084, i16 1089, i16 1100, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"2560x1080\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 594000, i16 3840, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 594000, i16 4096, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 594000, i16 3840, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1188000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 1188000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 1188000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1188000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 396000, i16 5120, i16 7116, i16 7204, i16 7500, i16 0, i16 2160, i16 2168, i16 2178, i16 2200, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 396000, i16 5120, i16 6816, i16 6904, i16 7200, i16 0, i16 2160, i16 2168, i16 2178, i16 2200, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 396000, i16 5120, i16 5784, i16 5872, i16 6000, i16 0, i16 2160, i16 2168, i16 2178, i16 2200, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 742500, i16 5120, i16 5866, i16 5954, i16 6250, i16 0, i16 2160, i16 2168, i16 2178, i16 2475, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 742500, i16 5120, i16 6216, i16 6304, i16 6600, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 742500, i16 5120, i16 5284, i16 5372, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1485000, i16 5120, i16 6216, i16 6304, i16 6600, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }], align 16, !dbg !724
@edid_cea_modes_193 = internal constant [27 x %struct.drm_display_mode] [%struct.drm_display_mode { i32 1485000, i16 5120, i16 5284, i16 5372, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"5120x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1188000, i16 7680, i16 10232, i16 10408, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 1188000, i16 7680, i16 10032, i16 10208, i16 10800, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 1188000, i16 7680, i16 8232, i16 8408, i16 9000, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 2376000, i16 7680, i16 10232, i16 10408, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 2376000, i16 7680, i16 10032, i16 10208, i16 10800, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 2376000, i16 7680, i16 8232, i16 8408, i16 9000, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 4752000, i16 7680, i16 9792, i16 9968, i16 10560, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 4752000, i16 7680, i16 8032, i16 8208, i16 8800, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 1188000, i16 7680, i16 10232, i16 10408, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1188000, i16 7680, i16 10032, i16 10208, i16 10800, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1188000, i16 7680, i16 8232, i16 8408, i16 9000, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 2376000, i16 7680, i16 10232, i16 10408, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 2376000, i16 7680, i16 10032, i16 10208, i16 10800, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 2376000, i16 7680, i16 8232, i16 8408, i16 9000, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 4752000, i16 7680, i16 9792, i16 9968, i16 10560, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 4752000, i16 7680, i16 8032, i16 8208, i16 8800, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"7680x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1485000, i16 10240, i16 11732, i16 11908, i16 12500, i16 0, i16 4320, i16 4336, i16 4356, i16 4950, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1485000, i16 10240, i16 12732, i16 12908, i16 13500, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1485000, i16 10240, i16 10528, i16 10704, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 2970000, i16 10240, i16 11732, i16 11908, i16 12500, i16 0, i16 4320, i16 4336, i16 4356, i16 4950, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 2970000, i16 10240, i16 12732, i16 12908, i16 13500, i16 0, i16 4320, i16 4336, i16 4356, i16 4400, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 2970000, i16 10240, i16 10528, i16 10704, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 5940000, i16 10240, i16 12432, i16 12608, i16 13200, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 5940000, i16 10240, i16 10528, i16 10704, i16 11000, i16 0, i16 4320, i16 4336, i16 4356, i16 4500, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"10240x4320\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 3 }, %struct.drm_display_mode { i32 1188000, i16 4096, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }, %struct.drm_display_mode { i32 1188000, i16 4096, i16 4184, i16 4272, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }], align 16, !dbg !729
@edid_quirk_list = internal constant [58 x %struct.edid_quirk] [%struct.edid_quirk { [4 x i8] c"ACR\00", i32 44358, i32 1 }, %struct.edid_quirk { [4 x i8] c"API\00", i32 30210, i32 1 }, %struct.edid_quirk { [4 x i8] c"AEO\00", i32 0, i32 1024 }, %struct.edid_quirk { [4 x i8] c"BOE\00", i32 1931, i32 1024 }, %struct.edid_quirk { [4 x i8] c"CPT\00", i32 6111, i32 1024 }, %struct.edid_quirk { [4 x i8] c"SDC\00", i32 13906, i32 1024 }, %struct.edid_quirk { [4 x i8] c"BOE\00", i32 1905, i32 1024 }, %struct.edid_quirk { [4 x i8] c"MAX\00", i32 1516, i32 1 }, %struct.edid_quirk { [4 x i8] c"MAX\00", i32 1918, i32 1 }, %struct.edid_quirk { [4 x i8] c"EPI\00", i32 59264, i32 2 }, %struct.edid_quirk { [4 x i8] c"EPI\00", i32 8232, i32 1 }, %struct.edid_quirk { [4 x i8] c"FCM\00", i32 13600, i32 12 }, %struct.edid_quirk { [4 x i8] c"LGD\00", i32 764, i32 2048 }, %struct.edid_quirk { [4 x i8] c"LPL\00", i32 0, i32 16 }, %struct.edid_quirk { [4 x i8] c"LPL\00", i32 10752, i32 16 }, %struct.edid_quirk { [4 x i8] c"SAM\00", i32 541, i32 64 }, %struct.edid_quirk { [4 x i8] c"SAM\00", i32 596, i32 1 }, %struct.edid_quirk { [4 x i8] c"SAM\00", i32 638, i32 1 }, %struct.edid_quirk { [4 x i8] c"SNY\00", i32 9537, i32 512 }, %struct.edid_quirk { [4 x i8] c"VSC\00", i32 5020, i32 128 }, %struct.edid_quirk { [4 x i8] c"MED\00", i32 1976, i32 4 }, %struct.edid_quirk { [4 x i8] c"SDC\00", i32 18514, i32 1024 }, %struct.edid_quirk { [4 x i8] c"SEC\00", i32 53299, i32 256 }, %struct.edid_quirk { [4 x i8] c"ETR\00", i32 13896, i32 256 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37288, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37296, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37297, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37298, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37299, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37300, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37301, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37302, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37303, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37304, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37305, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37306, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37307, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37308, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37309, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37310, i32 4096 }, %struct.edid_quirk { [4 x i8] c"VLV\00", i32 37311, i32 4096 }, %struct.edid_quirk { [4 x i8] c"HVR\00", i32 43521, i32 4096 }, %struct.edid_quirk { [4 x i8] c"HVR\00", i32 43522, i32 4096 }, %struct.edid_quirk { [4 x i8] c"OVR\00", i32 1, i32 4096 }, %struct.edid_quirk { [4 x i8] c"OVR\00", i32 3, i32 4096 }, %struct.edid_quirk { [4 x i8] c"OVR\00", i32 4, i32 4096 }, %struct.edid_quirk { [4 x i8] c"OVR\00", i32 18, i32 4096 }, %struct.edid_quirk { [4 x i8] c"ACR\00", i32 32718, i32 4096 }, %struct.edid_quirk { [4 x i8] c"HPN\00", i32 13589, i32 4096 }, %struct.edid_quirk { [4 x i8] c"LEN\00", i32 1032, i32 4096 }, %struct.edid_quirk { [4 x i8] c"LEN\00", i32 47104, i32 4096 }, %struct.edid_quirk { [4 x i8] c"FUJ\00", i32 6512, i32 4096 }, %struct.edid_quirk { [4 x i8] c"DEL\00", i32 32718, i32 4096 }, %struct.edid_quirk { [4 x i8] c"SEC\00", i32 5194, i32 4096 }, %struct.edid_quirk { [4 x i8] c"AUS\00", i32 49410, i32 4096 }, %struct.edid_quirk { [4 x i8] c"SNY\00", i32 1796, i32 4096 }, %struct.edid_quirk { [4 x i8] c"SEN\00", i32 4121, i32 4096 }, %struct.edid_quirk { [4 x i8] c"SVR\00", i32 4121, i32 4096 }], align 16, !dbg !734
@.str.29 = private unnamed_addr constant [55 x i8] c"Supported Monitor Refresh rate range is %d Hz - %d Hz\0A\00", align 1
@.str.30 = private unnamed_addr constant [42 x i8] c"HDMI: DVI dual %d, max TMDS clock %d kHz\0A\00", align 1
@.str.31 = private unnamed_addr constant [35 x i8] c"%s: HDMI sink does deep color 30.\0A\00", align 1
@.str.32 = private unnamed_addr constant [35 x i8] c"%s: HDMI sink does deep color 36.\0A\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"%s: HDMI sink does deep color 48.\0A\00", align 1
@.str.34 = private unnamed_addr constant [46 x i8] c"%s: No deep color support on this HDMI sink.\0A\00", align 1
@.str.35 = private unnamed_addr constant [48 x i8] c"%s: Assigning HDMI sink color depth as %d bpc.\0A\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"%s: HDMI sink does YCRCB444 in deep color.\0A\00", align 1
@.str.37 = private unnamed_addr constant [46 x i8] c"%s: HDMI sink should do DC_36, but does not!\0A\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"HF-VSDB: max TMDS clock %d kHz\0A\00", align 1
@.str.39 = private unnamed_addr constant [17 x i8] c"CEA VCDB 0x%02x\0A\00", align 1
@.str.40 = private unnamed_addr constant [29 x i8] c"ELD: no CEA Extension found\0A\00", align 1
@.str.41 = private unnamed_addr constant [16 x i8] c"ELD monitor %s\0A\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"ELD size %d, SAD count %d\0A\00", align 1
@.str.43 = private unnamed_addr constant [71 x i8] c"HDMI: latency present %d %d, video latency %d %d, audio latency %d %d\0A\00", align 1
@.str.44 = private unnamed_addr constant [27 x i8] c"stereo mode not supported\0A\00", align 1
@.str.45 = private unnamed_addr constant [30 x i8] c"composite sync not supported\0A\00", align 1
@.str.46 = private unnamed_addr constant [58 x i8] c"Incorrect Detailed timing. Wrong Hsync/Vsync pulse width\0A\00", align 1
@drm_mode_do_interlace_quirk.cea_interlaced = internal constant [7 x %struct.anon.78] [%struct.anon.78 { i32 1920, i32 1080 }, %struct.anon.78 { i32 720, i32 480 }, %struct.anon.78 { i32 1440, i32 480 }, %struct.anon.78 { i32 2880, i32 480 }, %struct.anon.78 { i32 720, i32 576 }, %struct.anon.78 { i32 1440, i32 576 }, %struct.anon.78 { i32 2880, i32 576 }], align 16, !dbg !746
@.str.47 = private unnamed_addr constant [4 x i8] c"CEA\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"HDMI\00", align 1
@edid_4k_modes = internal constant [5 x %struct.drm_display_mode] [%struct.drm_display_mode zeroinitializer, %struct.drm_display_mode { i32 297000, i16 3840, i16 4016, i16 4104, i16 4400, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 4896, i16 4984, i16 5280, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 3840, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"3840x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 2 }, %struct.drm_display_mode { i32 297000, i16 4096, i16 5116, i16 5204, i16 5500, i16 0, i16 2160, i16 2168, i16 2178, i16 2250, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"4096x2160\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 4 }], align 16, !dbg !761
@.str.49 = private unnamed_addr constant [59 x i8] c"detailed mode matches %s VIC %d, adjusting clock %d -> %d\0A\00", align 1
@__const.drm_cvt_modes.rates = private unnamed_addr constant [5 x i32] [i32 60, i32 85, i32 75, i32 60, i32 50], align 16
@edid_est_modes = internal constant [17 x %struct.drm_display_mode] [%struct.drm_display_mode { i32 40000, i16 800, i16 840, i16 968, i16 1056, i16 0, i16 600, i16 601, i16 605, i16 628, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 36000, i16 800, i16 824, i16 896, i16 1024, i16 0, i16 600, i16 601, i16 603, i16 625, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 31500, i16 640, i16 656, i16 720, i16 840, i16 0, i16 480, i16 481, i16 484, i16 500, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 31500, i16 640, i16 664, i16 704, i16 832, i16 0, i16 480, i16 489, i16 492, i16 520, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 30240, i16 640, i16 704, i16 768, i16 864, i16 0, i16 480, i16 483, i16 486, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 25175, i16 640, i16 656, i16 752, i16 800, i16 0, i16 480, i16 490, i16 492, i16 525, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"640x480\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 35500, i16 720, i16 738, i16 846, i16 900, i16 0, i16 400, i16 421, i16 423, i16 449, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x400\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 28320, i16 720, i16 738, i16 846, i16 900, i16 0, i16 400, i16 412, i16 414, i16 449, i16 0, i32 6, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"720x400\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 135000, i16 1280, i16 1296, i16 1440, i16 1688, i16 0, i16 1024, i16 1025, i16 1028, i16 1066, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1280x1024\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 78750, i16 1024, i16 1040, i16 1136, i16 1312, i16 0, i16 768, i16 769, i16 772, i16 800, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 75000, i16 1024, i16 1048, i16 1184, i16 1328, i16 0, i16 768, i16 771, i16 777, i16 806, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 65000, i16 1024, i16 1048, i16 1184, i16 1344, i16 0, i16 768, i16 771, i16 777, i16 806, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 44900, i16 1024, i16 1032, i16 1208, i16 1264, i16 0, i16 768, i16 768, i16 776, i16 817, i16 0, i32 21, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1024x768i\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 57284, i16 832, i16 864, i16 928, i16 1152, i16 0, i16 624, i16 625, i16 628, i16 667, i16 0, i32 10, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"832x624\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 49500, i16 800, i16 816, i16 896, i16 1056, i16 0, i16 600, i16 601, i16 604, i16 625, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 50000, i16 800, i16 856, i16 976, i16 1040, i16 0, i16 600, i16 637, i16 643, i16 666, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"800x600\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }, %struct.drm_display_mode { i32 108000, i16 1152, i16 1216, i16 1344, i16 1600, i16 0, i16 864, i16 865, i16 868, i16 900, i16 0, i32 5, i32 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i8 64, i8 0, %struct.list_head zeroinitializer, [32 x i8] c"1152x864\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 0, i32 0 }], align 16, !dbg !764
@est3_modes = internal constant [44 x %struct.minimode] [%struct.minimode { i16 640, i16 350, i16 85, i16 0 }, %struct.minimode { i16 640, i16 400, i16 85, i16 0 }, %struct.minimode { i16 720, i16 400, i16 85, i16 0 }, %struct.minimode { i16 640, i16 480, i16 85, i16 0 }, %struct.minimode { i16 848, i16 480, i16 60, i16 0 }, %struct.minimode { i16 800, i16 600, i16 85, i16 0 }, %struct.minimode { i16 1024, i16 768, i16 85, i16 0 }, %struct.minimode { i16 1152, i16 864, i16 75, i16 0 }, %struct.minimode { i16 1280, i16 768, i16 60, i16 1 }, %struct.minimode { i16 1280, i16 768, i16 60, i16 0 }, %struct.minimode { i16 1280, i16 768, i16 75, i16 0 }, %struct.minimode { i16 1280, i16 768, i16 85, i16 0 }, %struct.minimode { i16 1280, i16 960, i16 60, i16 0 }, %struct.minimode { i16 1280, i16 960, i16 85, i16 0 }, %struct.minimode { i16 1280, i16 1024, i16 60, i16 0 }, %struct.minimode { i16 1280, i16 1024, i16 85, i16 0 }, %struct.minimode { i16 1360, i16 768, i16 60, i16 0 }, %struct.minimode { i16 1440, i16 900, i16 60, i16 1 }, %struct.minimode { i16 1440, i16 900, i16 60, i16 0 }, %struct.minimode { i16 1440, i16 900, i16 75, i16 0 }, %struct.minimode { i16 1440, i16 900, i16 85, i16 0 }, %struct.minimode { i16 1400, i16 1050, i16 60, i16 1 }, %struct.minimode { i16 1400, i16 1050, i16 60, i16 0 }, %struct.minimode { i16 1400, i16 1050, i16 75, i16 0 }, %struct.minimode { i16 1400, i16 1050, i16 85, i16 0 }, %struct.minimode { i16 1680, i16 1050, i16 60, i16 1 }, %struct.minimode { i16 1680, i16 1050, i16 60, i16 0 }, %struct.minimode { i16 1680, i16 1050, i16 75, i16 0 }, %struct.minimode { i16 1680, i16 1050, i16 85, i16 0 }, %struct.minimode { i16 1600, i16 1200, i16 60, i16 0 }, %struct.minimode { i16 1600, i16 1200, i16 65, i16 0 }, %struct.minimode { i16 1600, i16 1200, i16 70, i16 0 }, %struct.minimode { i16 1600, i16 1200, i16 75, i16 0 }, %struct.minimode { i16 1600, i16 1200, i16 85, i16 0 }, %struct.minimode { i16 1792, i16 1344, i16 60, i16 0 }, %struct.minimode { i16 1792, i16 1344, i16 75, i16 0 }, %struct.minimode { i16 1856, i16 1392, i16 60, i16 0 }, %struct.minimode { i16 1856, i16 1392, i16 75, i16 0 }, %struct.minimode { i16 1920, i16 1200, i16 60, i16 1 }, %struct.minimode { i16 1920, i16 1200, i16 60, i16 0 }, %struct.minimode { i16 1920, i16 1200, i16 75, i16 0 }, %struct.minimode { i16 1920, i16 1200, i16 85, i16 0 }, %struct.minimode { i16 1920, i16 1440, i16 60, i16 0 }, %struct.minimode { i16 1920, i16 1440, i16 75, i16 0 }], align 16, !dbg !769
@stereo_mandatory_modes = internal constant [8 x %struct.stereo_mandatory_mode] [%struct.stereo_mandatory_mode { i32 1920, i32 1080, i32 24, i32 114688 }, %struct.stereo_mandatory_mode { i32 1920, i32 1080, i32 24, i32 16384 }, %struct.stereo_mandatory_mode { i32 1920, i32 1080, i32 50, i32 131088 }, %struct.stereo_mandatory_mode { i32 1920, i32 1080, i32 60, i32 131088 }, %struct.stereo_mandatory_mode { i32 1280, i32 720, i32 50, i32 114688 }, %struct.stereo_mandatory_mode { i32 1280, i32 720, i32 50, i32 16384 }, %struct.stereo_mandatory_mode { i32 1280, i32 720, i32 60, i32 114688 }, %struct.stereo_mandatory_mode { i32 1280, i32 720, i32 60, i32 16384 }], align 16, !dbg !782
@.str.50 = private unnamed_addr constant [22 x i8] c"Unknown HDMI VIC: %d\0A\00", align 1
@extra_modes = internal constant [7 x %struct.minimode] [%struct.minimode { i16 1024, i16 576, i16 60, i16 0 }, %struct.minimode { i16 1366, i16 768, i16 60, i16 0 }, %struct.minimode { i16 1600, i16 900, i16 60, i16 0 }, %struct.minimode { i16 1680, i16 945, i16 60, i16 0 }, %struct.minimode { i16 1920, i16 1080, i16 60, i16 0 }, %struct.minimode { i16 2048, i16 1152, i16 60, i16 0 }, %struct.minimode { i16 2048, i16 1536, i16 60, i16 0 }], align 16, !dbg !792
@.str.51 = private unnamed_addr constant [38 x i8] c"base revision 0x%x, length %d, %d %d\0A\00", align 1
@.str.52 = private unnamed_addr constant [53 x i8] c"\015[drm] DisplayID checksum invalid, remainder is %d\0A\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"block id 0x%x, rev %d, len %d\0A\00", align 1
@.str.54 = private unnamed_addr constant [37 x i8] c"found DisplayID tag 0x%x, unhandled\0A\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"tile cap 0x%x\0A\00", align 1
@.str.56 = private unnamed_addr constant [19 x i8] c"tile_size %d x %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [38 x i8] c"topo num tiles %dx%d, location %dx%d\0A\00", align 1
@.str.58 = private unnamed_addr constant [13 x i8] c"vend %c%c%c\0A\00", align 1
@llvm.used = appending global [3 x i8*] [i8* bitcast (%struct.kernel_param* @__param_edid_fixup to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_edid_fixuptype252, i32 0, i32 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__UNIQUE_ID_edid_fixup253, i32 0, i32 0)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_edid_header_is_valid(i8* %raw_edid) #0 !dbg !807 {
entry:
  %raw_edid.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %score = alloca i32, align 4
  store i8* %raw_edid, i8** %raw_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %raw_edid.addr, metadata !810, metadata !DIExpression()), !dbg !811
  call void @llvm.dbg.declare(metadata i32* %i, metadata !812, metadata !DIExpression()), !dbg !813
  call void @llvm.dbg.declare(metadata i32* %score, metadata !814, metadata !DIExpression()), !dbg !815
  store i32 0, i32* %score, align 4, !dbg !815
  store i32 0, i32* %i, align 4, !dbg !816
  br label %for.cond, !dbg !818

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !819
  %conv = sext i32 %0 to i64, !dbg !819
  %cmp = icmp ult i64 %conv, 8, !dbg !821
  br i1 %cmp, label %for.body, label %for.end, !dbg !822

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %raw_edid.addr, align 8, !dbg !823
  %2 = load i32, i32* %i, align 4, !dbg !825
  %idxprom = sext i32 %2 to i64, !dbg !823
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !823
  %3 = load i8, i8* %arrayidx, align 1, !dbg !823
  %conv2 = zext i8 %3 to i32, !dbg !823
  %4 = load i32, i32* %i, align 4, !dbg !826
  %idxprom3 = sext i32 %4 to i64, !dbg !827
  %arrayidx4 = getelementptr [8 x i8], [8 x i8]* @edid_header, i64 0, i64 %idxprom3, !dbg !827
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !827
  %conv5 = zext i8 %5 to i32, !dbg !827
  %cmp6 = icmp eq i32 %conv2, %conv5, !dbg !828
  br i1 %cmp6, label %if.then, label %if.end, !dbg !829

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %score, align 4, !dbg !830
  %inc = add i32 %6, 1, !dbg !830
  store i32 %inc, i32* %score, align 4, !dbg !830
  br label %if.end, !dbg !831

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !832

for.inc:                                          ; preds = %if.end
  %7 = load i32, i32* %i, align 4, !dbg !833
  %inc8 = add i32 %7, 1, !dbg !833
  store i32 %inc8, i32* %i, align 4, !dbg !833
  br label %for.cond, !dbg !834, !llvm.loop !835

for.end:                                          ; preds = %for.cond
  %8 = load i32, i32* %score, align 4, !dbg !837
  ret i32 %8, !dbg !838
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_edid_are_equal(%struct.edid* %edid1, %struct.edid* %edid2) #0 !dbg !839 {
entry:
  %retval = alloca i1, align 1
  %edid1.addr = alloca %struct.edid*, align 8
  %edid2.addr = alloca %struct.edid*, align 8
  %edid1_len = alloca i32, align 4
  %edid2_len = alloca i32, align 4
  %edid1_present = alloca i8, align 1
  %edid2_present = alloca i8, align 1
  store %struct.edid* %edid1, %struct.edid** %edid1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid1.addr, metadata !844, metadata !DIExpression()), !dbg !845
  store %struct.edid* %edid2, %struct.edid** %edid2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid2.addr, metadata !846, metadata !DIExpression()), !dbg !847
  call void @llvm.dbg.declare(metadata i32* %edid1_len, metadata !848, metadata !DIExpression()), !dbg !849
  call void @llvm.dbg.declare(metadata i32* %edid2_len, metadata !850, metadata !DIExpression()), !dbg !851
  call void @llvm.dbg.declare(metadata i8* %edid1_present, metadata !852, metadata !DIExpression()), !dbg !853
  %0 = load %struct.edid*, %struct.edid** %edid1.addr, align 8, !dbg !854
  %cmp = icmp ne %struct.edid* %0, null, !dbg !855
  %frombool = zext i1 %cmp to i8, !dbg !853
  store i8 %frombool, i8* %edid1_present, align 1, !dbg !853
  call void @llvm.dbg.declare(metadata i8* %edid2_present, metadata !856, metadata !DIExpression()), !dbg !857
  %1 = load %struct.edid*, %struct.edid** %edid2.addr, align 8, !dbg !858
  %cmp1 = icmp ne %struct.edid* %1, null, !dbg !859
  %frombool2 = zext i1 %cmp1 to i8, !dbg !857
  store i8 %frombool2, i8* %edid2_present, align 1, !dbg !857
  %2 = load i8, i8* %edid1_present, align 1, !dbg !860
  %tobool = trunc i8 %2 to i1, !dbg !860
  %conv = zext i1 %tobool to i32, !dbg !860
  %3 = load i8, i8* %edid2_present, align 1, !dbg !862
  %tobool3 = trunc i8 %3 to i1, !dbg !862
  %conv4 = zext i1 %tobool3 to i32, !dbg !862
  %cmp5 = icmp ne i32 %conv, %conv4, !dbg !863
  br i1 %cmp5, label %if.then, label %if.end, !dbg !864

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !865
  br label %return, !dbg !865

if.end:                                           ; preds = %entry
  %4 = load %struct.edid*, %struct.edid** %edid1.addr, align 8, !dbg !866
  %tobool7 = icmp ne %struct.edid* %4, null, !dbg !866
  br i1 %tobool7, label %if.then8, label %if.end22, !dbg !868

if.then8:                                         ; preds = %if.end
  %5 = load %struct.edid*, %struct.edid** %edid1.addr, align 8, !dbg !869
  %extensions = getelementptr inbounds %struct.edid, %struct.edid* %5, i32 0, i32 26, !dbg !871
  %6 = load i8, i8* %extensions, align 1, !dbg !871
  %conv9 = zext i8 %6 to i32, !dbg !869
  %add = add i32 1, %conv9, !dbg !872
  %mul = mul i32 128, %add, !dbg !873
  store i32 %mul, i32* %edid1_len, align 4, !dbg !874
  %7 = load %struct.edid*, %struct.edid** %edid2.addr, align 8, !dbg !875
  %extensions10 = getelementptr inbounds %struct.edid, %struct.edid* %7, i32 0, i32 26, !dbg !876
  %8 = load i8, i8* %extensions10, align 1, !dbg !876
  %conv11 = zext i8 %8 to i32, !dbg !875
  %add12 = add i32 1, %conv11, !dbg !877
  %mul13 = mul i32 128, %add12, !dbg !878
  store i32 %mul13, i32* %edid2_len, align 4, !dbg !879
  %9 = load i32, i32* %edid1_len, align 4, !dbg !880
  %10 = load i32, i32* %edid2_len, align 4, !dbg !882
  %cmp14 = icmp ne i32 %9, %10, !dbg !883
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !884

if.then16:                                        ; preds = %if.then8
  store i1 false, i1* %retval, align 1, !dbg !885
  br label %return, !dbg !885

if.end17:                                         ; preds = %if.then8
  %11 = load %struct.edid*, %struct.edid** %edid1.addr, align 8, !dbg !886
  %12 = bitcast %struct.edid* %11 to i8*, !dbg !886
  %13 = load %struct.edid*, %struct.edid** %edid2.addr, align 8, !dbg !888
  %14 = bitcast %struct.edid* %13 to i8*, !dbg !888
  %15 = load i32, i32* %edid1_len, align 4, !dbg !889
  %conv18 = sext i32 %15 to i64, !dbg !889
  %call = call i32 @memcmp(i8* %12, i8* %14, i64 %conv18) #8, !dbg !890
  %tobool19 = icmp ne i32 %call, 0, !dbg !890
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !891

if.then20:                                        ; preds = %if.end17
  store i1 false, i1* %retval, align 1, !dbg !892
  br label %return, !dbg !892

if.end21:                                         ; preds = %if.end17
  br label %if.end22, !dbg !893

if.end22:                                         ; preds = %if.end21, %if.end
  store i1 true, i1* %retval, align 1, !dbg !894
  br label %return, !dbg !894

return:                                           ; preds = %if.end22, %if.then20, %if.then16, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !895
  ret i1 %16, !dbg !895
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_edid_block_valid(i8* %raw_edid, i32 %block, i1 zeroext %print_bad_edid, i8* %edid_corrupt) #0 !dbg !896 {
entry:
  %retval = alloca i1, align 1
  %raw_edid.addr = alloca i8*, align 8
  %block.addr = alloca i32, align 4
  %print_bad_edid.addr = alloca i8, align 1
  %edid_corrupt.addr = alloca i8*, align 8
  %csum = alloca i8, align 1
  %edid = alloca %struct.edid*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %score = alloca i32, align 4
  store i8* %raw_edid, i8** %raw_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %raw_edid.addr, metadata !899, metadata !DIExpression()), !dbg !900
  store i32 %block, i32* %block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block.addr, metadata !901, metadata !DIExpression()), !dbg !902
  %frombool = zext i1 %print_bad_edid to i8
  store i8 %frombool, i8* %print_bad_edid.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %print_bad_edid.addr, metadata !903, metadata !DIExpression()), !dbg !904
  store i8* %edid_corrupt, i8** %edid_corrupt.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %edid_corrupt.addr, metadata !905, metadata !DIExpression()), !dbg !906
  call void @llvm.dbg.declare(metadata i8* %csum, metadata !907, metadata !DIExpression()), !dbg !908
  call void @llvm.dbg.declare(metadata %struct.edid** %edid, metadata !909, metadata !DIExpression()), !dbg !910
  %0 = load i8*, i8** %raw_edid.addr, align 8, !dbg !911
  %1 = bitcast i8* %0 to %struct.edid*, !dbg !912
  store %struct.edid* %1, %struct.edid** %edid, align 8, !dbg !910
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !913, metadata !DIExpression()), !dbg !916
  %2 = load i8*, i8** %raw_edid.addr, align 8, !dbg !916
  %tobool = icmp ne i8* %2, null, !dbg !916
  %lnot = xor i1 %tobool, true, !dbg !916
  %lnot1 = xor i1 %lnot, true, !dbg !916
  %lnot2 = xor i1 %lnot1, true, !dbg !916
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !916
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !916
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !917
  %tobool3 = icmp ne i32 %3, 0, !dbg !917
  %lnot4 = xor i1 %tobool3, true, !dbg !917
  %lnot6 = xor i1 %lnot4, true, !dbg !917
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !917
  %conv = sext i32 %lnot.ext7 to i64, !dbg !917
  %tobool8 = icmp ne i64 %conv, 0, !dbg !917
  br i1 %tobool8, label %if.then, label %if.end, !dbg !916

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !917

do.body:                                          ; preds = %if.then
  br label %do.body9, !dbg !919

do.body9:                                         ; preds = %do.body
  br label %do.end, !dbg !921

do.end:                                           ; preds = %do.body9
  br label %do.body10, !dbg !919

do.body10:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 1667, i32 2305, i64 12) #9, !dbg !923, !srcloc !925
  br label %do.end11, !dbg !923

do.end11:                                         ; preds = %do.body10
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 254) #9, !dbg !926, !srcloc !928
  br label %do.body12, !dbg !919

do.body12:                                        ; preds = %do.end11
  br label %do.end13, !dbg !929

do.end13:                                         ; preds = %do.body12
  br label %do.end14, !dbg !919

do.end14:                                         ; preds = %do.end13
  br label %if.end, !dbg !919

if.end:                                           ; preds = %do.end14, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !916
  %tobool15 = icmp ne i32 %4, 0, !dbg !916
  %lnot16 = xor i1 %tobool15, true, !dbg !916
  %lnot18 = xor i1 %lnot16, true, !dbg !916
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !916
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !916
  store i64 %conv20, i64* %tmp, align 8, !dbg !917
  %5 = load i64, i64* %tmp, align 8, !dbg !916
  %tobool21 = icmp ne i64 %5, 0, !dbg !931
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !932

if.then22:                                        ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !933
  br label %return, !dbg !933

if.end23:                                         ; preds = %if.end
  %6 = load i32, i32* @edid_fixup, align 4, !dbg !934
  %cmp = icmp sgt i32 %6, 8, !dbg !936
  br i1 %cmp, label %if.then27, label %lor.lhs.false, !dbg !937

lor.lhs.false:                                    ; preds = %if.end23
  %7 = load i32, i32* @edid_fixup, align 4, !dbg !938
  %cmp25 = icmp slt i32 %7, 0, !dbg !939
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !940

if.then27:                                        ; preds = %lor.lhs.false, %if.end23
  store i32 6, i32* @edid_fixup, align 4, !dbg !941
  br label %if.end28, !dbg !942

if.end28:                                         ; preds = %if.then27, %lor.lhs.false
  %8 = load i32, i32* %block.addr, align 4, !dbg !943
  %cmp29 = icmp eq i32 %8, 0, !dbg !945
  br i1 %cmp29, label %if.then31, label %if.end50, !dbg !946

if.then31:                                        ; preds = %if.end28
  call void @llvm.dbg.declare(metadata i32* %score, metadata !947, metadata !DIExpression()), !dbg !949
  %9 = load i8*, i8** %raw_edid.addr, align 8, !dbg !950
  %call = call i32 @drm_edid_header_is_valid(i8* %9) #8, !dbg !951
  store i32 %call, i32* %score, align 4, !dbg !949
  %10 = load i32, i32* %score, align 4, !dbg !952
  %cmp32 = icmp eq i32 %10, 8, !dbg !954
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !955

if.then34:                                        ; preds = %if.then31
  %11 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !956
  %tobool35 = icmp ne i8* %11, null, !dbg !956
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !959

if.then36:                                        ; preds = %if.then34
  %12 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !960
  store i8 0, i8* %12, align 1, !dbg !961
  br label %if.end37, !dbg !962

if.end37:                                         ; preds = %if.then36, %if.then34
  br label %if.end49, !dbg !963

if.else:                                          ; preds = %if.then31
  %13 = load i32, i32* %score, align 4, !dbg !964
  %14 = load i32, i32* @edid_fixup, align 4, !dbg !966
  %cmp38 = icmp sge i32 %13, %14, !dbg !967
  br i1 %cmp38, label %if.then40, label %if.else44, !dbg !968

if.then40:                                        ; preds = %if.else
  %15 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !969
  %tobool41 = icmp ne i8* %15, null, !dbg !969
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !972

if.then42:                                        ; preds = %if.then40
  %16 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !973
  store i8 1, i8* %16, align 1, !dbg !974
  br label %if.end43, !dbg !975

if.end43:                                         ; preds = %if.then42, %if.then40
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1, i64 0, i64 0)) #8, !dbg !976
  %17 = load i8*, i8** %raw_edid.addr, align 8, !dbg !977
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @edid_header, i64 0, i64 0), i64 8, i1 false), !dbg !978
  br label %if.end48, !dbg !979

if.else44:                                        ; preds = %if.else
  %18 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !980
  %tobool45 = icmp ne i8* %18, null, !dbg !980
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !983

if.then46:                                        ; preds = %if.else44
  %19 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !984
  store i8 1, i8* %19, align 1, !dbg !985
  br label %if.end47, !dbg !986

if.end47:                                         ; preds = %if.then46, %if.else44
  br label %bad, !dbg !987

if.end48:                                         ; preds = %if.end43
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end37
  br label %if.end50, !dbg !988

if.end50:                                         ; preds = %if.end49, %if.end28
  %20 = load i8*, i8** %raw_edid.addr, align 8, !dbg !989
  %call51 = call i32 @drm_edid_block_checksum(i8* %20) #8, !dbg !990
  %conv52 = trunc i32 %call51 to i8, !dbg !990
  store i8 %conv52, i8* %csum, align 1, !dbg !991
  %21 = load i8*, i8** %raw_edid.addr, align 8, !dbg !992
  %22 = load i8, i8* %csum, align 1, !dbg !994
  %call53 = call zeroext i1 @drm_edid_block_checksum_diff(i8* %21, i8 zeroext %22) #8, !dbg !995
  br i1 %call53, label %if.then54, label %if.end70, !dbg !996

if.then54:                                        ; preds = %if.end50
  %23 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !997
  %tobool55 = icmp ne i8* %23, null, !dbg !997
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !1000

if.then56:                                        ; preds = %if.then54
  %24 = load i8*, i8** %edid_corrupt.addr, align 8, !dbg !1001
  store i8 1, i8* %24, align 1, !dbg !1002
  br label %if.end57, !dbg !1003

if.end57:                                         ; preds = %if.then56, %if.then54
  %25 = load i8*, i8** %raw_edid.addr, align 8, !dbg !1004
  %arrayidx = getelementptr i8, i8* %25, i64 0, !dbg !1004
  %26 = load i8, i8* %arrayidx, align 1, !dbg !1004
  %conv58 = zext i8 %26 to i32, !dbg !1004
  %cmp59 = icmp eq i32 %conv58, 2, !dbg !1006
  br i1 %cmp59, label %if.then61, label %if.else63, !dbg !1007

if.then61:                                        ; preds = %if.end57
  %27 = load i8, i8* %csum, align 1, !dbg !1008
  %conv62 = zext i8 %27 to i32, !dbg !1008
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i32 %conv62) #8, !dbg !1008
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3, i64 0, i64 0)) #8, !dbg !1010
  br label %if.end69, !dbg !1011

if.else63:                                        ; preds = %if.end57
  %28 = load i8, i8* %print_bad_edid.addr, align 1, !dbg !1012
  %tobool64 = trunc i8 %28 to i1, !dbg !1012
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !1015

if.then65:                                        ; preds = %if.else63
  %29 = load i8, i8* %csum, align 1, !dbg !1016
  %conv66 = zext i8 %29 to i32, !dbg !1016
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.4, i64 0, i64 0), i32 %conv66) #10, !dbg !1016
  br label %if.end68, !dbg !1016

if.end68:                                         ; preds = %if.then65, %if.else63
  br label %bad, !dbg !1017

if.end69:                                         ; preds = %if.then61
  br label %if.end70, !dbg !1018

if.end70:                                         ; preds = %if.end69, %if.end50
  %30 = load i8*, i8** %raw_edid.addr, align 8, !dbg !1019
  %arrayidx71 = getelementptr i8, i8* %30, i64 0, !dbg !1019
  %31 = load i8, i8* %arrayidx71, align 1, !dbg !1019
  %conv72 = zext i8 %31 to i32, !dbg !1019
  switch i32 %conv72, label %sw.default [
    i32 0, label %sw.bb
  ], !dbg !1020

sw.bb:                                            ; preds = %if.end70
  %32 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !1021
  %version = getelementptr inbounds %struct.edid, %struct.edid* %32, i32 0, i32 6, !dbg !1024
  %33 = load i8, i8* %version, align 1, !dbg !1024
  %conv73 = zext i8 %33 to i32, !dbg !1021
  %cmp74 = icmp ne i32 %conv73, 1, !dbg !1025
  br i1 %cmp74, label %if.then76, label %if.end80, !dbg !1026

if.then76:                                        ; preds = %sw.bb
  %34 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !1027
  %version77 = getelementptr inbounds %struct.edid, %struct.edid* %34, i32 0, i32 6, !dbg !1027
  %35 = load i8, i8* %version77, align 1, !dbg !1027
  %conv78 = zext i8 %35 to i32, !dbg !1027
  %call79 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.5, i64 0, i64 0), i32 %conv78) #10, !dbg !1027
  br label %bad, !dbg !1029

if.end80:                                         ; preds = %sw.bb
  %36 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !1030
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %36, i32 0, i32 7, !dbg !1032
  %37 = load i8, i8* %revision, align 1, !dbg !1032
  %conv81 = zext i8 %37 to i32, !dbg !1030
  %cmp82 = icmp sgt i32 %conv81, 4, !dbg !1033
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !1034

if.then84:                                        ; preds = %if.end80
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)) #8, !dbg !1035
  br label %if.end85, !dbg !1035

if.end85:                                         ; preds = %if.then84, %if.end80
  br label %sw.epilog, !dbg !1036

sw.default:                                       ; preds = %if.end70
  br label %sw.epilog, !dbg !1037

sw.epilog:                                        ; preds = %sw.default, %if.end85
  store i1 true, i1* %retval, align 1, !dbg !1038
  br label %return, !dbg !1038

bad:                                              ; preds = %if.then76, %if.end68, %if.end47
  call void @llvm.dbg.label(metadata !1039), !dbg !1040
  %38 = load i8, i8* %print_bad_edid.addr, align 1, !dbg !1041
  %tobool86 = trunc i8 %38 to i1, !dbg !1041
  br i1 %tobool86, label %if.then87, label %if.end94, !dbg !1043

if.then87:                                        ; preds = %bad
  %39 = load i8*, i8** %raw_edid.addr, align 8, !dbg !1044
  %call88 = call zeroext i1 @drm_edid_is_zero(i8* %39, i32 128) #8, !dbg !1047
  br i1 %call88, label %if.then89, label %if.else91, !dbg !1048

if.then89:                                        ; preds = %if.then87
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #10, !dbg !1049
  br label %if.end93, !dbg !1051

if.else91:                                        ; preds = %if.then87
  %call92 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0)) #10, !dbg !1052
  %40 = load i8*, i8** %raw_edid.addr, align 8, !dbg !1054
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0), i32 0, i32 16, i32 1, i8* %40, i64 128, i1 zeroext false) #8, !dbg !1055
  br label %if.end93

if.end93:                                         ; preds = %if.else91, %if.then89
  br label %if.end94, !dbg !1056

if.end94:                                         ; preds = %if.end93, %bad
  store i1 false, i1* %retval, align 1, !dbg !1057
  br label %return, !dbg !1057

return:                                           ; preds = %if.end94, %sw.epilog, %if.then22
  %41 = load i1, i1* %retval, align 1, !dbg !1058
  ret i1 %41, !dbg !1058
}

; Function Attrs: noredzone
declare dso_local void @__drm_dbg(i32, i8*, ...) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_edid_block_checksum(i8* %raw_edid) #0 !dbg !1059 {
entry:
  %raw_edid.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %csum = alloca i8, align 1
  %crc = alloca i8, align 1
  store i8* %raw_edid, i8** %raw_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %raw_edid.addr, metadata !1060, metadata !DIExpression()), !dbg !1061
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1062, metadata !DIExpression()), !dbg !1063
  call void @llvm.dbg.declare(metadata i8* %csum, metadata !1064, metadata !DIExpression()), !dbg !1065
  store i8 0, i8* %csum, align 1, !dbg !1065
  call void @llvm.dbg.declare(metadata i8* %crc, metadata !1066, metadata !DIExpression()), !dbg !1067
  store i8 0, i8* %crc, align 1, !dbg !1067
  store i32 0, i32* %i, align 4, !dbg !1068
  br label %for.cond, !dbg !1070

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !1071
  %cmp = icmp slt i32 %0, 127, !dbg !1073
  br i1 %cmp, label %for.body, label %for.end, !dbg !1074

for.body:                                         ; preds = %for.cond
  %1 = load i8*, i8** %raw_edid.addr, align 8, !dbg !1075
  %2 = load i32, i32* %i, align 4, !dbg !1076
  %idxprom = sext i32 %2 to i64, !dbg !1075
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !1075
  %3 = load i8, i8* %arrayidx, align 1, !dbg !1075
  %conv = zext i8 %3 to i32, !dbg !1075
  %4 = load i8, i8* %csum, align 1, !dbg !1077
  %conv1 = zext i8 %4 to i32, !dbg !1077
  %add = add i32 %conv1, %conv, !dbg !1077
  %conv2 = trunc i32 %add to i8, !dbg !1077
  store i8 %conv2, i8* %csum, align 1, !dbg !1077
  br label %for.inc, !dbg !1078

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !1079
  %inc = add i32 %5, 1, !dbg !1079
  store i32 %inc, i32* %i, align 4, !dbg !1079
  br label %for.cond, !dbg !1080, !llvm.loop !1081

for.end:                                          ; preds = %for.cond
  %6 = load i8, i8* %csum, align 1, !dbg !1083
  %conv3 = zext i8 %6 to i32, !dbg !1083
  %sub = sub i32 256, %conv3, !dbg !1084
  %conv4 = trunc i32 %sub to i8, !dbg !1085
  store i8 %conv4, i8* %crc, align 1, !dbg !1086
  %7 = load i8, i8* %crc, align 1, !dbg !1087
  %conv5 = zext i8 %7 to i32, !dbg !1087
  ret i32 %conv5, !dbg !1088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_edid_block_checksum_diff(i8* %raw_edid, i8 zeroext %real_checksum) #0 !dbg !1089 {
entry:
  %retval = alloca i1, align 1
  %raw_edid.addr = alloca i8*, align 8
  %real_checksum.addr = alloca i8, align 1
  store i8* %raw_edid, i8** %raw_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %raw_edid.addr, metadata !1092, metadata !DIExpression()), !dbg !1093
  store i8 %real_checksum, i8* %real_checksum.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %real_checksum.addr, metadata !1094, metadata !DIExpression()), !dbg !1095
  %0 = load i8*, i8** %raw_edid.addr, align 8, !dbg !1096
  %arrayidx = getelementptr i8, i8* %0, i64 127, !dbg !1096
  %1 = load i8, i8* %arrayidx, align 1, !dbg !1096
  %conv = zext i8 %1 to i32, !dbg !1096
  %2 = load i8, i8* %real_checksum.addr, align 1, !dbg !1098
  %conv1 = zext i8 %2 to i32, !dbg !1098
  %cmp = icmp ne i32 %conv, %conv1, !dbg !1099
  br i1 %cmp, label %if.then, label %if.else, !dbg !1100

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !1101
  br label %return, !dbg !1101

if.else:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !1102
  br label %return, !dbg !1102

return:                                           ; preds = %if.else, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !1103
  ret i1 %3, !dbg !1103
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #4

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_edid_is_zero(i8* %in_edid, i32 %length) #0 !dbg !1104 {
entry:
  %retval = alloca i1, align 1
  %in_edid.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  store i8* %in_edid, i8** %in_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %in_edid.addr, metadata !1107, metadata !DIExpression()), !dbg !1108
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !1109, metadata !DIExpression()), !dbg !1110
  %0 = load i8*, i8** %in_edid.addr, align 8, !dbg !1111
  %1 = load i32, i32* %length.addr, align 4, !dbg !1113
  %conv = sext i32 %1 to i64, !dbg !1113
  %call = call i8* @memchr_inv(i8* %0, i32 0, i64 %conv) #8, !dbg !1114
  %tobool = icmp ne i8* %call, null, !dbg !1114
  br i1 %tobool, label %if.then, label %if.end, !dbg !1115

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !1116
  br label %return, !dbg !1116

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !1117
  br label %return, !dbg !1117

return:                                           ; preds = %if.end, %if.then
  %2 = load i1, i1* %retval, align 1, !dbg !1118
  ret i1 %2, !dbg !1118
}

; Function Attrs: noredzone
declare dso_local void @print_hex_dump(i8*, i8*, i32, i32, i32, i8*, i64, i1 zeroext) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_edid_is_valid(%struct.edid* %edid) #0 !dbg !1119 {
entry:
  %retval = alloca i1, align 1
  %edid.addr = alloca %struct.edid*, align 8
  %i = alloca i32, align 4
  %raw = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !1122, metadata !DIExpression()), !dbg !1123
  call void @llvm.dbg.declare(metadata i32* %i, metadata !1124, metadata !DIExpression()), !dbg !1125
  call void @llvm.dbg.declare(metadata i8** %raw, metadata !1126, metadata !DIExpression()), !dbg !1127
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !1128
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !1129
  store i8* %1, i8** %raw, align 8, !dbg !1127
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !1130
  %tobool = icmp ne %struct.edid* %2, null, !dbg !1130
  br i1 %tobool, label %if.end, label %if.then, !dbg !1132

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !1133
  br label %return, !dbg !1133

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !1134
  br label %for.cond, !dbg !1136

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !1137
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !1139
  %extensions = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 26, !dbg !1140
  %5 = load i8, i8* %extensions, align 1, !dbg !1140
  %conv = zext i8 %5 to i32, !dbg !1139
  %cmp = icmp sle i32 %3, %conv, !dbg !1141
  br i1 %cmp, label %for.body, label %for.end, !dbg !1142

for.body:                                         ; preds = %for.cond
  %6 = load i8*, i8** %raw, align 8, !dbg !1143
  %7 = load i32, i32* %i, align 4, !dbg !1145
  %mul = mul i32 %7, 128, !dbg !1146
  %idx.ext = sext i32 %mul to i64, !dbg !1147
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext, !dbg !1147
  %8 = load i32, i32* %i, align 4, !dbg !1148
  %call = call zeroext i1 @drm_edid_block_valid(i8* %add.ptr, i32 %8, i1 zeroext true, i8* null) #8, !dbg !1149
  br i1 %call, label %if.end3, label %if.then2, !dbg !1150

if.then2:                                         ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !1151
  br label %return, !dbg !1151

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !1152

for.inc:                                          ; preds = %if.end3
  %9 = load i32, i32* %i, align 4, !dbg !1153
  %inc = add i32 %9, 1, !dbg !1153
  store i32 %inc, i32* %i, align 4, !dbg !1153
  br label %for.cond, !dbg !1154, !llvm.loop !1155

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !1157
  br label %return, !dbg !1157

return:                                           ; preds = %for.end, %if.then2, %if.then
  %10 = load i1, i1* %retval, align 1, !dbg !1158
  ret i1 %10, !dbg !1158
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_add_override_edid_modes(%struct.drm_connector* %connector) #0 !dbg !1159 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %override = alloca %struct.edid*, align 8
  %num_modes = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  call void @llvm.dbg.declare(metadata %struct.edid** %override, metadata !6188, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.declare(metadata i32* %num_modes, metadata !6190, metadata !DIExpression()), !dbg !6191
  store i32 0, i32* %num_modes, align 4, !dbg !6191
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6192
  %call = call %struct.edid* @drm_get_override_edid(%struct.drm_connector* %0) #8, !dbg !6193
  store %struct.edid* %call, %struct.edid** %override, align 8, !dbg !6194
  %1 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6195
  %tobool = icmp ne %struct.edid* %1, null, !dbg !6195
  br i1 %tobool, label %if.then, label %if.end, !dbg !6197

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6198
  %3 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6200
  %call1 = call i32 @drm_connector_update_edid_property(%struct.drm_connector* %2, %struct.edid* %3) #8, !dbg !6201
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6202
  %5 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6203
  %call2 = call i32 @drm_add_edid_modes(%struct.drm_connector* %4, %struct.edid* %5) #8, !dbg !6204
  store i32 %call2, i32* %num_modes, align 4, !dbg !6205
  %6 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6206
  %7 = bitcast %struct.edid* %6 to i8*, !dbg !6206
  call void @kfree(i8* %7) #8, !dbg !6207
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6208
  %base = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %8, i32 0, i32 4, !dbg !6208
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !6208
  %9 = load i32, i32* %id, align 8, !dbg !6208
  %10 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6208
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %10, i32 0, i32 5, !dbg !6208
  %11 = load i8*, i8** %name, align 8, !dbg !6208
  %12 = load i32, i32* %num_modes, align 4, !dbg !6208
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.11, i64 0, i64 0), i32 %9, i8* %11, i32 %12) #8, !dbg !6208
  br label %if.end, !dbg !6209

if.end:                                           ; preds = %if.then, %entry
  %13 = load i32, i32* %num_modes, align 4, !dbg !6210
  ret i32 %13, !dbg !6211
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.edid* @drm_get_override_edid(%struct.drm_connector* %connector) #0 !dbg !6212 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %override = alloca %struct.edid*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  call void @llvm.dbg.declare(metadata %struct.edid** %override, metadata !6217, metadata !DIExpression()), !dbg !6218
  store %struct.edid* null, %struct.edid** %override, align 8, !dbg !6218
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6219
  %override_edid = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 32, !dbg !6221
  %1 = load i8, i8* %override_edid, align 8, !dbg !6221
  %tobool = trunc i8 %1 to i1, !dbg !6221
  br i1 %tobool, label %if.then, label %if.end, !dbg !6222

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6223
  %edid_blob_ptr = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 20, !dbg !6224
  %3 = load %struct.drm_property_blob*, %struct.drm_property_blob** %edid_blob_ptr, align 8, !dbg !6224
  %data = getelementptr inbounds %struct.drm_property_blob, %struct.drm_property_blob* %3, i32 0, i32 5, !dbg !6225
  %4 = load i8*, i8** %data, align 8, !dbg !6225
  %5 = bitcast i8* %4 to %struct.edid*, !dbg !6223
  %call = call %struct.edid* @drm_edid_duplicate(%struct.edid* %5) #8, !dbg !6226
  store %struct.edid* %call, %struct.edid** %override, align 8, !dbg !6227
  br label %if.end, !dbg !6228

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6229
  %tobool1 = icmp ne %struct.edid* %6, null, !dbg !6229
  br i1 %tobool1, label %if.end4, label %if.then2, !dbg !6231

if.then2:                                         ; preds = %if.end
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6232
  %call3 = call %struct.edid* @drm_load_edid_firmware(%struct.drm_connector* %7) #8, !dbg !6233
  store %struct.edid* %call3, %struct.edid** %override, align 8, !dbg !6234
  br label %if.end4, !dbg !6235

if.end4:                                          ; preds = %if.then2, %if.end
  %8 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6236
  %9 = bitcast %struct.edid* %8 to i8*, !dbg !6236
  %call5 = call zeroext i1 @IS_ERR(i8* %9) #8, !dbg !6237
  br i1 %call5, label %cond.true, label %cond.false, !dbg !6237

cond.true:                                        ; preds = %if.end4
  br label %cond.end, !dbg !6237

cond.false:                                       ; preds = %if.end4
  %10 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6238
  br label %cond.end, !dbg !6237

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.edid* [ null, %cond.true ], [ %10, %cond.false ], !dbg !6237
  ret %struct.edid* %cond, !dbg !6239
}

; Function Attrs: noredzone
declare dso_local i32 @drm_connector_update_edid_property(%struct.drm_connector*, %struct.edid*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_add_edid_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !6240 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %num_modes = alloca i32, align 4
  %quirks = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !6243, metadata !DIExpression()), !dbg !6244
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata i32* %num_modes, metadata !6247, metadata !DIExpression()), !dbg !6248
  store i32 0, i32* %num_modes, align 4, !dbg !6248
  call void @llvm.dbg.declare(metadata i32* %quirks, metadata !6249, metadata !DIExpression()), !dbg !6250
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6251
  %cmp = icmp eq %struct.edid* %0, null, !dbg !6253
  br i1 %cmp, label %if.then, label %if.end, !dbg !6254

if.then:                                          ; preds = %entry
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6255
  call void @clear_eld(%struct.drm_connector* %1) #8, !dbg !6257
  store i32 0, i32* %retval, align 4, !dbg !6258
  br label %return, !dbg !6258

if.end:                                           ; preds = %entry
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6259
  %call = call zeroext i1 @drm_edid_is_valid(%struct.edid* %2) #8, !dbg !6261
  br i1 %call, label %if.end3, label %if.then1, !dbg !6262

if.then1:                                         ; preds = %if.end
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6263
  call void @clear_eld(%struct.drm_connector* %3) #8, !dbg !6265
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6266
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %4, i32 0, i32 0, !dbg !6266
  %5 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !6266
  %dev2 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %5, i32 0, i32 3, !dbg !6266
  %6 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !6266
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6266
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %7, i32 0, i32 5, !dbg !6266
  %8 = load i8*, i8** %name, align 8, !dbg !6266
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %6, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.20, i64 0, i64 0), i8* %8) #10, !dbg !6266
  store i32 0, i32* %retval, align 4, !dbg !6267
  br label %return, !dbg !6267

if.end3:                                          ; preds = %if.end
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6268
  %10 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6269
  call void @drm_edid_to_eld(%struct.drm_connector* %9, %struct.edid* %10) #8, !dbg !6270
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6271
  %12 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6272
  %call4 = call i32 @drm_add_display_info(%struct.drm_connector* %11, %struct.edid* %12) #8, !dbg !6273
  store i32 %call4, i32* %quirks, align 4, !dbg !6274
  %13 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6275
  %14 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6276
  %15 = load i32, i32* %quirks, align 4, !dbg !6277
  %call5 = call i32 @add_detailed_modes(%struct.drm_connector* %13, %struct.edid* %14, i32 %15) #8, !dbg !6278
  %16 = load i32, i32* %num_modes, align 4, !dbg !6279
  %add = add i32 %16, %call5, !dbg !6279
  store i32 %add, i32* %num_modes, align 4, !dbg !6279
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6280
  %18 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6281
  %call6 = call i32 @add_cvt_modes(%struct.drm_connector* %17, %struct.edid* %18) #8, !dbg !6282
  %19 = load i32, i32* %num_modes, align 4, !dbg !6283
  %add7 = add i32 %19, %call6, !dbg !6283
  store i32 %add7, i32* %num_modes, align 4, !dbg !6283
  %20 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6284
  %21 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6285
  %call8 = call i32 @add_standard_modes(%struct.drm_connector* %20, %struct.edid* %21) #8, !dbg !6286
  %22 = load i32, i32* %num_modes, align 4, !dbg !6287
  %add9 = add i32 %22, %call8, !dbg !6287
  store i32 %add9, i32* %num_modes, align 4, !dbg !6287
  %23 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6288
  %24 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6289
  %call10 = call i32 @add_established_modes(%struct.drm_connector* %23, %struct.edid* %24) #8, !dbg !6290
  %25 = load i32, i32* %num_modes, align 4, !dbg !6291
  %add11 = add i32 %25, %call10, !dbg !6291
  store i32 %add11, i32* %num_modes, align 4, !dbg !6291
  %26 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6292
  %27 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6293
  %call12 = call i32 @add_cea_modes(%struct.drm_connector* %26, %struct.edid* %27) #8, !dbg !6294
  %28 = load i32, i32* %num_modes, align 4, !dbg !6295
  %add13 = add i32 %28, %call12, !dbg !6295
  store i32 %add13, i32* %num_modes, align 4, !dbg !6295
  %29 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6296
  %30 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6297
  %call14 = call i32 @add_alternate_cea_modes(%struct.drm_connector* %29, %struct.edid* %30) #8, !dbg !6298
  %31 = load i32, i32* %num_modes, align 4, !dbg !6299
  %add15 = add i32 %31, %call14, !dbg !6299
  store i32 %add15, i32* %num_modes, align 4, !dbg !6299
  %32 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6300
  %33 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6301
  %call16 = call i32 @add_displayid_detailed_modes(%struct.drm_connector* %32, %struct.edid* %33) #8, !dbg !6302
  %34 = load i32, i32* %num_modes, align 4, !dbg !6303
  %add17 = add i32 %34, %call16, !dbg !6303
  store i32 %add17, i32* %num_modes, align 4, !dbg !6303
  %35 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6304
  %features = getelementptr inbounds %struct.edid, %struct.edid* %35, i32 0, i32 12, !dbg !6306
  %36 = load i8, i8* %features, align 1, !dbg !6306
  %conv = zext i8 %36 to i32, !dbg !6304
  %and = and i32 %conv, 1, !dbg !6307
  %tobool = icmp ne i32 %and, 0, !dbg !6307
  br i1 %tobool, label %if.then18, label %if.end21, !dbg !6308

if.then18:                                        ; preds = %if.end3
  %37 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6309
  %38 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !6310
  %call19 = call i32 @add_inferred_modes(%struct.drm_connector* %37, %struct.edid* %38) #8, !dbg !6311
  %39 = load i32, i32* %num_modes, align 4, !dbg !6312
  %add20 = add i32 %39, %call19, !dbg !6312
  store i32 %add20, i32* %num_modes, align 4, !dbg !6312
  br label %if.end21, !dbg !6313

if.end21:                                         ; preds = %if.then18, %if.end3
  %40 = load i32, i32* %quirks, align 4, !dbg !6314
  %and22 = and i32 %40, 5, !dbg !6316
  %tobool23 = icmp ne i32 %and22, 0, !dbg !6316
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6317

if.then24:                                        ; preds = %if.end21
  %41 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6318
  %42 = load i32, i32* %quirks, align 4, !dbg !6319
  call void @edid_fixup_preferred(%struct.drm_connector* %41, i32 %42) #8, !dbg !6320
  br label %if.end25, !dbg !6320

if.end25:                                         ; preds = %if.then24, %if.end21
  %43 = load i32, i32* %quirks, align 4, !dbg !6321
  %and26 = and i32 %43, 1024, !dbg !6323
  %tobool27 = icmp ne i32 %and26, 0, !dbg !6323
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !6324

if.then28:                                        ; preds = %if.end25
  %44 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6325
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %44, i32 0, i32 18, !dbg !6326
  %bpc = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 2, !dbg !6327
  store i32 6, i32* %bpc, align 8, !dbg !6328
  br label %if.end29, !dbg !6325

if.end29:                                         ; preds = %if.then28, %if.end25
  %45 = load i32, i32* %quirks, align 4, !dbg !6329
  %and30 = and i32 %45, 256, !dbg !6331
  %tobool31 = icmp ne i32 %and30, 0, !dbg !6331
  br i1 %tobool31, label %if.then32, label %if.end35, !dbg !6332

if.then32:                                        ; preds = %if.end29
  %46 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6333
  %display_info33 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %46, i32 0, i32 18, !dbg !6334
  %bpc34 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info33, i32 0, i32 2, !dbg !6335
  store i32 8, i32* %bpc34, align 8, !dbg !6336
  br label %if.end35, !dbg !6333

if.end35:                                         ; preds = %if.then32, %if.end29
  %47 = load i32, i32* %quirks, align 4, !dbg !6337
  %and36 = and i32 %47, 2048, !dbg !6339
  %tobool37 = icmp ne i32 %and36, 0, !dbg !6339
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !6340

if.then38:                                        ; preds = %if.end35
  %48 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6341
  %display_info39 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %48, i32 0, i32 18, !dbg !6342
  %bpc40 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info39, i32 0, i32 2, !dbg !6343
  store i32 10, i32* %bpc40, align 8, !dbg !6344
  br label %if.end41, !dbg !6341

if.end41:                                         ; preds = %if.then38, %if.end35
  %49 = load i32, i32* %quirks, align 4, !dbg !6345
  %and42 = and i32 %49, 512, !dbg !6347
  %tobool43 = icmp ne i32 %and42, 0, !dbg !6347
  br i1 %tobool43, label %if.then44, label %if.end47, !dbg !6348

if.then44:                                        ; preds = %if.end41
  %50 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6349
  %display_info45 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %50, i32 0, i32 18, !dbg !6350
  %bpc46 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info45, i32 0, i32 2, !dbg !6351
  store i32 12, i32* %bpc46, align 8, !dbg !6352
  br label %if.end47, !dbg !6349

if.end47:                                         ; preds = %if.then44, %if.end41
  %51 = load i32, i32* %num_modes, align 4, !dbg !6353
  store i32 %51, i32* %retval, align 4, !dbg !6354
  br label %return, !dbg !6354

return:                                           ; preds = %if.end47, %if.then1, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !6355
  ret i32 %52, !dbg !6355
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.edid* @drm_do_get_edid(%struct.drm_connector* %connector, i32 (i8*, i8*, i32, i64)* %get_edid_block, i8* %data) #0 !dbg !6356 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6362, metadata !DIExpression()), !dbg !6366
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6375, metadata !DIExpression()), !dbg !6376
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6377, metadata !DIExpression()), !dbg !6378
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6379, metadata !DIExpression()), !dbg !6380
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6381, metadata !DIExpression()), !dbg !6385
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6387, metadata !DIExpression()), !dbg !6391
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6393, metadata !DIExpression()), !dbg !6397
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6402, metadata !DIExpression()), !dbg !6403
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6404, metadata !DIExpression()), !dbg !6405
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6406, metadata !DIExpression()), !dbg !6407
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6408, metadata !DIExpression()), !dbg !6409
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6410, metadata !DIExpression()), !dbg !6411
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6412, metadata !DIExpression()), !dbg !6413
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6414, metadata !DIExpression()), !dbg !6415
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6416, metadata !DIExpression()), !dbg !6417
  %retval = alloca %struct.edid*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %get_edid_block.addr = alloca i32 (i8*, i8*, i32, i64)*, align 8
  %data.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %valid_extensions = alloca i32, align 4
  %edid = alloca i8*, align 8
  %new = alloca i8*, align 8
  %override = alloca %struct.edid*, align 8
  %block = alloca i8*, align 8
  %base = alloca i8*, align 8
  %block85 = alloca i8*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !6418, metadata !DIExpression()), !dbg !6419
  store i32 (i8*, i8*, i32, i64)* %get_edid_block, i32 (i8*, i8*, i32, i64)** %get_edid_block.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i8*, i32, i64)** %get_edid_block.addr, metadata !6420, metadata !DIExpression()), !dbg !6421
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6422, metadata !DIExpression()), !dbg !6423
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6424, metadata !DIExpression()), !dbg !6425
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6426, metadata !DIExpression()), !dbg !6427
  store i32 0, i32* %j, align 4, !dbg !6427
  call void @llvm.dbg.declare(metadata i32* %valid_extensions, metadata !6428, metadata !DIExpression()), !dbg !6429
  store i32 0, i32* %valid_extensions, align 4, !dbg !6429
  call void @llvm.dbg.declare(metadata i8** %edid, metadata !6430, metadata !DIExpression()), !dbg !6431
  call void @llvm.dbg.declare(metadata i8** %new, metadata !6432, metadata !DIExpression()), !dbg !6433
  call void @llvm.dbg.declare(metadata %struct.edid** %override, metadata !6434, metadata !DIExpression()), !dbg !6435
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6436
  %call = call %struct.edid* @drm_get_override_edid(%struct.drm_connector* %0) #8, !dbg !6437
  store %struct.edid* %call, %struct.edid** %override, align 8, !dbg !6438
  %1 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6439
  %tobool = icmp ne %struct.edid* %1, null, !dbg !6439
  br i1 %tobool, label %if.then, label %if.end, !dbg !6441

if.then:                                          ; preds = %entry
  %2 = load %struct.edid*, %struct.edid** %override, align 8, !dbg !6442
  store %struct.edid* %2, %struct.edid** %retval, align 8, !dbg !6443
  br label %return, !dbg !6443

if.end:                                           ; preds = %entry
  store i64 128, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !6444
  %4 = call i1 @llvm.is.constant.i64(i64 %3) #9, !dbg !6445
  br i1 %4, label %if.then.i, label %if.end9.i, !dbg !6446

if.then.i:                                        ; preds = %if.end
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6447
  %cmp.i = icmp ugt i64 %5, 8192, !dbg !6448
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6449

if.then1.i:                                       ; preds = %if.then.i
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !6450
  %7 = load i32, i32* %flags.addr.i, align 4, !dbg !6451
  store i64 %6, i64* %size.addr.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i, align 4
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6452
  %call.i.i = call i32 @get_order(i64 %8) #11, !dbg !6453
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6411
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !6454
  %10 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6455
  %11 = load i32, i32* %order.i.i, align 4, !dbg !6456
  store i64 %9, i64* %size.addr.i.i.i, align 8
  store i32 %10, i32* %flags.addr.i.i.i, align 4
  store i32 %11, i32* %order.addr.i.i.i, align 4
  %12 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6457
  %13 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6458
  %14 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6459
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %12, i32 %13, i32 %14) #12, !dbg !6460
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6460
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6460
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6460
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !6460
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6461
  br label %kmalloc.exit, !dbg !6461

if.end.i:                                         ; preds = %if.then.i
  %15 = load i64, i64* %size.addr.i, align 8, !dbg !6462
  store i64 %15, i64* %size.addr.i11.i, align 8
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6463
  %tobool.i.i = icmp ne i64 %16, 0, !dbg !6463
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6465

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6466
  br label %kmalloc_index.exit.i, !dbg !6466

if.end.i.i:                                       ; preds = %if.end.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6467
  %cmp.i.i = icmp ule i64 %17, 8, !dbg !6469
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6470

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6471
  br label %kmalloc_index.exit.i, !dbg !6471

if.end2.i.i:                                      ; preds = %if.end.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6472
  %cmp3.i.i = icmp ugt i64 %18, 64, !dbg !6474
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6475

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6476
  %cmp4.i.i = icmp ule i64 %19, 96, !dbg !6477
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6478

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6479
  br label %kmalloc_index.exit.i, !dbg !6479

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6480
  %cmp7.i.i = icmp ugt i64 %20, 128, !dbg !6482
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6483

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6484
  %cmp9.i.i = icmp ule i64 %21, 192, !dbg !6485
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6486

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6487
  br label %kmalloc_index.exit.i, !dbg !6487

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6488
  %cmp12.i.i = icmp ule i64 %22, 8, !dbg !6490
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6491

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6492
  br label %kmalloc_index.exit.i, !dbg !6492

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6493
  %cmp15.i.i = icmp ule i64 %23, 16, !dbg !6495
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6496

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6497
  br label %kmalloc_index.exit.i, !dbg !6497

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6498
  %cmp18.i.i = icmp ule i64 %24, 32, !dbg !6500
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6501

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6502
  br label %kmalloc_index.exit.i, !dbg !6502

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6503
  %cmp21.i.i = icmp ule i64 %25, 64, !dbg !6505
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6506

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6507
  br label %kmalloc_index.exit.i, !dbg !6507

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6508
  %cmp24.i.i = icmp ule i64 %26, 128, !dbg !6510
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6511

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6512
  br label %kmalloc_index.exit.i, !dbg !6512

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6513
  %cmp27.i.i = icmp ule i64 %27, 256, !dbg !6515
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6516

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6517
  br label %kmalloc_index.exit.i, !dbg !6517

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6518
  %cmp30.i.i = icmp ule i64 %28, 512, !dbg !6520
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6521

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6522
  br label %kmalloc_index.exit.i, !dbg !6522

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6523
  %cmp33.i.i = icmp ule i64 %29, 1024, !dbg !6525
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6526

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6527
  br label %kmalloc_index.exit.i, !dbg !6527

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6528
  %cmp36.i.i = icmp ule i64 %30, 2048, !dbg !6530
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6531

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6532
  br label %kmalloc_index.exit.i, !dbg !6532

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6533
  %cmp39.i.i = icmp ule i64 %31, 4096, !dbg !6535
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6536

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6537
  br label %kmalloc_index.exit.i, !dbg !6537

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6538
  %cmp42.i.i = icmp ule i64 %32, 8192, !dbg !6540
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6541

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6542
  br label %kmalloc_index.exit.i, !dbg !6542

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6543
  %cmp45.i.i = icmp ule i64 %33, 16384, !dbg !6545
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6546

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6547
  br label %kmalloc_index.exit.i, !dbg !6547

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6548
  %cmp48.i.i = icmp ule i64 %34, 32768, !dbg !6550
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6551

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6552
  br label %kmalloc_index.exit.i, !dbg !6552

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6553
  %cmp51.i.i = icmp ule i64 %35, 65536, !dbg !6555
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6556

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6557
  br label %kmalloc_index.exit.i, !dbg !6557

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6558
  %cmp54.i.i = icmp ule i64 %36, 131072, !dbg !6560
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6561

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6562
  br label %kmalloc_index.exit.i, !dbg !6562

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6563
  %cmp57.i.i = icmp ule i64 %37, 262144, !dbg !6565
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6566

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6567
  br label %kmalloc_index.exit.i, !dbg !6567

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6568
  %cmp60.i.i = icmp ule i64 %38, 524288, !dbg !6570
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6571

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6572
  br label %kmalloc_index.exit.i, !dbg !6572

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6573
  %cmp63.i.i = icmp ule i64 %39, 1048576, !dbg !6575
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6576

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6577
  br label %kmalloc_index.exit.i, !dbg !6577

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6578
  %cmp66.i.i = icmp ule i64 %40, 2097152, !dbg !6580
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6581

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6582
  br label %kmalloc_index.exit.i, !dbg !6582

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6583
  %cmp69.i.i = icmp ule i64 %41, 4194304, !dbg !6585
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6586

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6587
  br label %kmalloc_index.exit.i, !dbg !6587

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6588
  %cmp72.i.i = icmp ule i64 %42, 8388608, !dbg !6590
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6591

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6592
  br label %kmalloc_index.exit.i, !dbg !6592

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6593
  %cmp75.i.i = icmp ule i64 %43, 16777216, !dbg !6595
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6596

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6597
  br label %kmalloc_index.exit.i, !dbg !6597

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6598
  %cmp78.i.i = icmp ule i64 %44, 33554432, !dbg !6600
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6601

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6602
  br label %kmalloc_index.exit.i, !dbg !6602

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6603
  %cmp81.i.i = icmp ule i64 %45, 67108864, !dbg !6605
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6606

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6607
  br label %kmalloc_index.exit.i, !dbg !6607

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !6608, !srcloc !6611
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 157) #9, !dbg !6612, !srcloc !6615
  unreachable, !dbg !6616

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %46 = load i32, i32* %retval.i.i, align 4, !dbg !6617
  store i32 %46, i32* %index.i, align 4, !dbg !6618
  %47 = load i32, i32* %index.i, align 4, !dbg !6619
  %tobool.i = icmp ne i32 %47, 0, !dbg !6619
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6621

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6622
  br label %kmalloc.exit, !dbg !6622

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %48 = load i32, i32* %flags.addr.i, align 4, !dbg !6623
  store i32 %48, i32* %flags.addr.i13.i, align 4
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6624
  %and.i.i = and i32 %49, 17, !dbg !6624
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6624
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6624
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6624
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6624
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6626

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6627
  br label %kmalloc_type.exit.i, !dbg !6627

if.end.i16.i:                                     ; preds = %if.end4.i
  %50 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6628
  %and2.i.i = and i32 %50, 1, !dbg !6629
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6628
  %51 = zext i1 %tobool3.i.i to i64, !dbg !6628
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6628
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6630
  br label %kmalloc_type.exit.i, !dbg !6630

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %52 = load i32, i32* %retval.i12.i, align 4, !dbg !6631
  %idxprom.i = zext i32 %52 to i64, !dbg !6632
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6632
  %53 = load i32, i32* %index.i, align 4, !dbg !6633
  %idxprom6.i = zext i32 %53 to i64, !dbg !6632
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6632
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6632
  %55 = load i32, i32* %flags.addr.i, align 4, !dbg !6634
  %56 = load i64, i64* %size.addr.i, align 8, !dbg !6635
  store %struct.kmem_cache* %54, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %55, i32* %flags.addr.i17.i, align 4
  store i64 %56, i64* %size.addr.i18.i, align 8
  %57 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6636
  %58 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6637
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %57, i32 %58) #12, !dbg !6638
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6638
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6638
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6638
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !6638
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6380
  %59 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6639
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !6640
  %61 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6641
  %62 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6642
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %59, i8* %60, i64 %61, i32 %62) #12, !dbg !6643
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6644
  %63 = load i8*, i8** %ret.i.i, align 8, !dbg !6645
  store i8* %63, i8** %retval.i, align 8, !dbg !6646
  br label %kmalloc.exit, !dbg !6646

if.end9.i:                                        ; preds = %if.end
  %64 = load i64, i64* %size.addr.i, align 8, !dbg !6647
  %65 = load i32, i32* %flags.addr.i, align 4, !dbg !6648
  %call10.i = call noalias i8* @__kmalloc(i64 %64, i32 %65) #12, !dbg !6649
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6649
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6649
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6649
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !6649
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6650
  br label %kmalloc.exit, !dbg !6650

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %66 = load i8*, i8** %retval.i, align 8, !dbg !6651
  store i8* %66, i8** %edid, align 8, !dbg !6652
  %cmp = icmp eq i8* %66, null, !dbg !6653
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !6654

if.then2:                                         ; preds = %kmalloc.exit
  store %struct.edid* null, %struct.edid** %retval, align 8, !dbg !6655
  br label %return, !dbg !6655

if.end3:                                          ; preds = %kmalloc.exit
  store i32 0, i32* %i, align 4, !dbg !6656
  br label %for.cond, !dbg !6658

for.cond:                                         ; preds = %for.inc, %if.end3
  %67 = load i32, i32* %i, align 4, !dbg !6659
  %cmp4 = icmp slt i32 %67, 4, !dbg !6661
  br i1 %cmp4, label %for.body, label %for.end, !dbg !6662

for.body:                                         ; preds = %for.cond
  %68 = load i32 (i8*, i8*, i32, i64)*, i32 (i8*, i8*, i32, i64)** %get_edid_block.addr, align 8, !dbg !6663
  %69 = load i8*, i8** %data.addr, align 8, !dbg !6666
  %70 = load i8*, i8** %edid, align 8, !dbg !6667
  %call5 = call i32 %68(i8* %69, i8* %70, i32 0, i64 128) #8, !dbg !6663
  %tobool6 = icmp ne i32 %call5, 0, !dbg !6663
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6668

if.then7:                                         ; preds = %for.body
  br label %out, !dbg !6669

if.end8:                                          ; preds = %for.body
  %71 = load i8*, i8** %edid, align 8, !dbg !6670
  %72 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6672
  %edid_corrupt = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %72, i32 0, i32 43, !dbg !6673
  %call9 = call zeroext i1 @drm_edid_block_valid(i8* %71, i32 0, i1 zeroext false, i8* %edid_corrupt) #8, !dbg !6674
  br i1 %call9, label %if.then10, label %if.end11, !dbg !6675

if.then10:                                        ; preds = %if.end8
  br label %for.end, !dbg !6676

if.end11:                                         ; preds = %if.end8
  %73 = load i32, i32* %i, align 4, !dbg !6677
  %cmp12 = icmp eq i32 %73, 0, !dbg !6679
  br i1 %cmp12, label %land.lhs.true, label %if.end15, !dbg !6680

land.lhs.true:                                    ; preds = %if.end11
  %74 = load i8*, i8** %edid, align 8, !dbg !6681
  %call13 = call zeroext i1 @drm_edid_is_zero(i8* %74, i32 128) #8, !dbg !6682
  br i1 %call13, label %if.then14, label %if.end15, !dbg !6683

if.then14:                                        ; preds = %land.lhs.true
  %75 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6684
  %null_edid_counter = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %75, i32 0, i32 41, !dbg !6686
  %76 = load i32, i32* %null_edid_counter, align 8, !dbg !6687
  %inc = add i32 %76, 1, !dbg !6687
  store i32 %inc, i32* %null_edid_counter, align 8, !dbg !6687
  br label %carp, !dbg !6688

if.end15:                                         ; preds = %land.lhs.true, %if.end11
  br label %for.inc, !dbg !6689

for.inc:                                          ; preds = %if.end15
  %77 = load i32, i32* %i, align 4, !dbg !6690
  %inc16 = add i32 %77, 1, !dbg !6690
  store i32 %inc16, i32* %i, align 4, !dbg !6690
  br label %for.cond, !dbg !6691, !llvm.loop !6692

for.end:                                          ; preds = %if.then10, %for.cond
  %78 = load i32, i32* %i, align 4, !dbg !6694
  %cmp17 = icmp eq i32 %78, 4, !dbg !6696
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !6697

if.then18:                                        ; preds = %for.end
  br label %carp, !dbg !6698

if.end19:                                         ; preds = %for.end
  %79 = load i8*, i8** %edid, align 8, !dbg !6699
  %arrayidx = getelementptr i8, i8* %79, i64 126, !dbg !6699
  %80 = load i8, i8* %arrayidx, align 1, !dbg !6699
  %conv = zext i8 %80 to i32, !dbg !6699
  store i32 %conv, i32* %valid_extensions, align 4, !dbg !6700
  %81 = load i32, i32* %valid_extensions, align 4, !dbg !6701
  %cmp20 = icmp eq i32 %81, 0, !dbg !6703
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !6704

if.then22:                                        ; preds = %if.end19
  %82 = load i8*, i8** %edid, align 8, !dbg !6705
  %83 = bitcast i8* %82 to %struct.edid*, !dbg !6706
  store %struct.edid* %83, %struct.edid** %retval, align 8, !dbg !6707
  br label %return, !dbg !6707

if.end23:                                         ; preds = %if.end19
  %84 = load i8*, i8** %edid, align 8, !dbg !6708
  %85 = load i32, i32* %valid_extensions, align 4, !dbg !6709
  %add = add i32 %85, 1, !dbg !6710
  %mul = mul i32 %add, 128, !dbg !6711
  %conv24 = sext i32 %mul to i64, !dbg !6712
  %call25 = call i8* @krealloc(i8* %84, i64 %conv24, i32 3264) #8, !dbg !6713
  store i8* %call25, i8** %new, align 8, !dbg !6714
  %86 = load i8*, i8** %new, align 8, !dbg !6715
  %tobool26 = icmp ne i8* %86, null, !dbg !6715
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !6717

if.then27:                                        ; preds = %if.end23
  br label %out, !dbg !6718

if.end28:                                         ; preds = %if.end23
  %87 = load i8*, i8** %new, align 8, !dbg !6719
  store i8* %87, i8** %edid, align 8, !dbg !6720
  store i32 1, i32* %j, align 4, !dbg !6721
  br label %for.cond29, !dbg !6723

for.cond29:                                       ; preds = %for.inc54, %if.end28
  %88 = load i32, i32* %j, align 4, !dbg !6724
  %89 = load i8*, i8** %edid, align 8, !dbg !6726
  %arrayidx30 = getelementptr i8, i8* %89, i64 126, !dbg !6726
  %90 = load i8, i8* %arrayidx30, align 1, !dbg !6726
  %conv31 = zext i8 %90 to i32, !dbg !6726
  %cmp32 = icmp sle i32 %88, %conv31, !dbg !6727
  br i1 %cmp32, label %for.body34, label %for.end56, !dbg !6728

for.body34:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata i8** %block, metadata !6729, metadata !DIExpression()), !dbg !6731
  %91 = load i8*, i8** %edid, align 8, !dbg !6732
  %92 = load i32, i32* %j, align 4, !dbg !6733
  %mul35 = mul i32 %92, 128, !dbg !6734
  %idx.ext = sext i32 %mul35 to i64, !dbg !6735
  %add.ptr = getelementptr i8, i8* %91, i64 %idx.ext, !dbg !6735
  store i8* %add.ptr, i8** %block, align 8, !dbg !6731
  store i32 0, i32* %i, align 4, !dbg !6736
  br label %for.cond36, !dbg !6738

for.cond36:                                       ; preds = %for.inc47, %for.body34
  %93 = load i32, i32* %i, align 4, !dbg !6739
  %cmp37 = icmp slt i32 %93, 4, !dbg !6741
  br i1 %cmp37, label %for.body39, label %for.end49, !dbg !6742

for.body39:                                       ; preds = %for.cond36
  %94 = load i32 (i8*, i8*, i32, i64)*, i32 (i8*, i8*, i32, i64)** %get_edid_block.addr, align 8, !dbg !6743
  %95 = load i8*, i8** %data.addr, align 8, !dbg !6746
  %96 = load i8*, i8** %block, align 8, !dbg !6747
  %97 = load i32, i32* %j, align 4, !dbg !6748
  %call40 = call i32 %94(i8* %95, i8* %96, i32 %97, i64 128) #8, !dbg !6743
  %tobool41 = icmp ne i32 %call40, 0, !dbg !6743
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !6749

if.then42:                                        ; preds = %for.body39
  br label %out, !dbg !6750

if.end43:                                         ; preds = %for.body39
  %98 = load i8*, i8** %block, align 8, !dbg !6751
  %99 = load i32, i32* %j, align 4, !dbg !6753
  %call44 = call zeroext i1 @drm_edid_block_valid(i8* %98, i32 %99, i1 zeroext false, i8* null) #8, !dbg !6754
  br i1 %call44, label %if.then45, label %if.end46, !dbg !6755

if.then45:                                        ; preds = %if.end43
  br label %for.end49, !dbg !6756

if.end46:                                         ; preds = %if.end43
  br label %for.inc47, !dbg !6757

for.inc47:                                        ; preds = %if.end46
  %100 = load i32, i32* %i, align 4, !dbg !6758
  %inc48 = add i32 %100, 1, !dbg !6758
  store i32 %inc48, i32* %i, align 4, !dbg !6758
  br label %for.cond36, !dbg !6759, !llvm.loop !6760

for.end49:                                        ; preds = %if.then45, %for.cond36
  %101 = load i32, i32* %i, align 4, !dbg !6762
  %cmp50 = icmp eq i32 %101, 4, !dbg !6764
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !6765

if.then52:                                        ; preds = %for.end49
  %102 = load i32, i32* %valid_extensions, align 4, !dbg !6766
  %dec = add i32 %102, -1, !dbg !6766
  store i32 %dec, i32* %valid_extensions, align 4, !dbg !6766
  br label %if.end53, !dbg !6767

if.end53:                                         ; preds = %if.then52, %for.end49
  br label %for.inc54, !dbg !6768

for.inc54:                                        ; preds = %if.end53
  %103 = load i32, i32* %j, align 4, !dbg !6769
  %inc55 = add i32 %103, 1, !dbg !6769
  store i32 %inc55, i32* %j, align 4, !dbg !6769
  br label %for.cond29, !dbg !6770, !llvm.loop !6771

for.end56:                                        ; preds = %for.cond29
  %104 = load i32, i32* %valid_extensions, align 4, !dbg !6773
  %105 = load i8*, i8** %edid, align 8, !dbg !6775
  %arrayidx57 = getelementptr i8, i8* %105, i64 126, !dbg !6775
  %106 = load i8, i8* %arrayidx57, align 1, !dbg !6775
  %conv58 = zext i8 %106 to i32, !dbg !6775
  %cmp59 = icmp ne i32 %104, %conv58, !dbg !6776
  br i1 %cmp59, label %if.then61, label %if.end96, !dbg !6777

if.then61:                                        ; preds = %for.end56
  call void @llvm.dbg.declare(metadata i8** %base, metadata !6778, metadata !DIExpression()), !dbg !6780
  %107 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6781
  %108 = load i8*, i8** %edid, align 8, !dbg !6782
  %109 = load i8*, i8** %edid, align 8, !dbg !6783
  %arrayidx62 = getelementptr i8, i8* %109, i64 126, !dbg !6783
  %110 = load i8, i8* %arrayidx62, align 1, !dbg !6783
  %conv63 = zext i8 %110 to i32, !dbg !6783
  %add64 = add i32 %conv63, 1, !dbg !6784
  call void @connector_bad_edid(%struct.drm_connector* %107, i8* %108, i32 %add64) #8, !dbg !6785
  %111 = load i8*, i8** %edid, align 8, !dbg !6786
  %arrayidx65 = getelementptr i8, i8* %111, i64 126, !dbg !6786
  %112 = load i8, i8* %arrayidx65, align 1, !dbg !6786
  %conv66 = zext i8 %112 to i32, !dbg !6786
  %113 = load i32, i32* %valid_extensions, align 4, !dbg !6787
  %sub = sub i32 %conv66, %113, !dbg !6788
  %114 = load i8*, i8** %edid, align 8, !dbg !6789
  %arrayidx67 = getelementptr i8, i8* %114, i64 127, !dbg !6789
  %115 = load i8, i8* %arrayidx67, align 1, !dbg !6790
  %conv68 = zext i8 %115 to i32, !dbg !6790
  %add69 = add i32 %conv68, %sub, !dbg !6790
  %conv70 = trunc i32 %add69 to i8, !dbg !6790
  store i8 %conv70, i8* %arrayidx67, align 1, !dbg !6790
  %116 = load i32, i32* %valid_extensions, align 4, !dbg !6791
  %conv71 = trunc i32 %116 to i8, !dbg !6791
  %117 = load i8*, i8** %edid, align 8, !dbg !6792
  %arrayidx72 = getelementptr i8, i8* %117, i64 126, !dbg !6792
  store i8 %conv71, i8* %arrayidx72, align 1, !dbg !6793
  %118 = load i32, i32* %valid_extensions, align 4, !dbg !6794
  %add73 = add i32 %118, 1, !dbg !6795
  %conv74 = sext i32 %add73 to i64, !dbg !6794
  %call75 = call i8* @kmalloc_array(i64 %conv74, i64 128, i32 3264) #8, !dbg !6796
  store i8* %call75, i8** %new, align 8, !dbg !6797
  %119 = load i8*, i8** %new, align 8, !dbg !6798
  %tobool76 = icmp ne i8* %119, null, !dbg !6798
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !6800

if.then77:                                        ; preds = %if.then61
  br label %out, !dbg !6801

if.end78:                                         ; preds = %if.then61
  %120 = load i8*, i8** %new, align 8, !dbg !6802
  store i8* %120, i8** %base, align 8, !dbg !6803
  store i32 0, i32* %i, align 4, !dbg !6804
  br label %for.cond79, !dbg !6806

for.cond79:                                       ; preds = %for.inc93, %if.end78
  %121 = load i32, i32* %i, align 4, !dbg !6807
  %122 = load i8*, i8** %edid, align 8, !dbg !6809
  %arrayidx80 = getelementptr i8, i8* %122, i64 126, !dbg !6809
  %123 = load i8, i8* %arrayidx80, align 1, !dbg !6809
  %conv81 = zext i8 %123 to i32, !dbg !6809
  %cmp82 = icmp sle i32 %121, %conv81, !dbg !6810
  br i1 %cmp82, label %for.body84, label %for.end95, !dbg !6811

for.body84:                                       ; preds = %for.cond79
  call void @llvm.dbg.declare(metadata i8** %block85, metadata !6812, metadata !DIExpression()), !dbg !6814
  %124 = load i8*, i8** %edid, align 8, !dbg !6815
  %125 = load i32, i32* %i, align 4, !dbg !6816
  %mul86 = mul i32 %125, 128, !dbg !6817
  %idx.ext87 = sext i32 %mul86 to i64, !dbg !6818
  %add.ptr88 = getelementptr i8, i8* %124, i64 %idx.ext87, !dbg !6818
  store i8* %add.ptr88, i8** %block85, align 8, !dbg !6814
  %126 = load i8*, i8** %block85, align 8, !dbg !6819
  %127 = load i32, i32* %i, align 4, !dbg !6821
  %call89 = call zeroext i1 @drm_edid_block_valid(i8* %126, i32 %127, i1 zeroext false, i8* null) #8, !dbg !6822
  br i1 %call89, label %if.end91, label %if.then90, !dbg !6823

if.then90:                                        ; preds = %for.body84
  br label %for.inc93, !dbg !6824

if.end91:                                         ; preds = %for.body84
  %128 = load i8*, i8** %base, align 8, !dbg !6825
  %129 = load i8*, i8** %block85, align 8, !dbg !6826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %128, i8* align 1 %129, i64 128, i1 false), !dbg !6827
  %130 = load i8*, i8** %base, align 8, !dbg !6828
  %add.ptr92 = getelementptr i8, i8* %130, i64 128, !dbg !6828
  store i8* %add.ptr92, i8** %base, align 8, !dbg !6828
  br label %for.inc93, !dbg !6829

for.inc93:                                        ; preds = %if.end91, %if.then90
  %131 = load i32, i32* %i, align 4, !dbg !6830
  %inc94 = add i32 %131, 1, !dbg !6830
  store i32 %inc94, i32* %i, align 4, !dbg !6830
  br label %for.cond79, !dbg !6831, !llvm.loop !6832

for.end95:                                        ; preds = %for.cond79
  %132 = load i8*, i8** %edid, align 8, !dbg !6834
  call void @kfree(i8* %132) #8, !dbg !6835
  %133 = load i8*, i8** %new, align 8, !dbg !6836
  store i8* %133, i8** %edid, align 8, !dbg !6837
  br label %if.end96, !dbg !6838

if.end96:                                         ; preds = %for.end95, %for.end56
  %134 = load i8*, i8** %edid, align 8, !dbg !6839
  %135 = bitcast i8* %134 to %struct.edid*, !dbg !6840
  store %struct.edid* %135, %struct.edid** %retval, align 8, !dbg !6841
  br label %return, !dbg !6841

carp:                                             ; preds = %if.then18, %if.then14
  call void @llvm.dbg.label(metadata !6842), !dbg !6843
  %136 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6844
  %137 = load i8*, i8** %edid, align 8, !dbg !6845
  call void @connector_bad_edid(%struct.drm_connector* %136, i8* %137, i32 1) #8, !dbg !6846
  br label %out, !dbg !6846

out:                                              ; preds = %carp, %if.then77, %if.then42, %if.then27, %if.then7
  call void @llvm.dbg.label(metadata !6847), !dbg !6848
  %138 = load i8*, i8** %edid, align 8, !dbg !6849
  call void @kfree(i8* %138) #8, !dbg !6850
  store %struct.edid* null, %struct.edid** %retval, align 8, !dbg !6851
  br label %return, !dbg !6851

return:                                           ; preds = %out, %if.end96, %if.then22, %if.then2, %if.then
  %139 = load %struct.edid*, %struct.edid** %retval, align 8, !dbg !6852
  ret %struct.edid* %139, !dbg !6852
}

; Function Attrs: noredzone
declare dso_local i8* @krealloc(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @connector_bad_edid(%struct.drm_connector* %connector, i8* %edid, i32 %num_blocks) #0 !dbg !6853 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca i8*, align 8
  %num_blocks.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %num_of_ext = alloca i8, align 1
  %block = alloca i8*, align 8
  %prefix = alloca [20 x i8], align 16
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !6856, metadata !DIExpression()), !dbg !6857
  store i8* %edid, i8** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %edid.addr, metadata !6858, metadata !DIExpression()), !dbg !6859
  store i32 %num_blocks, i32* %num_blocks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num_blocks.addr, metadata !6860, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6862, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.declare(metadata i8* %num_of_ext, metadata !6864, metadata !DIExpression()), !dbg !6865
  %0 = load i8*, i8** %edid.addr, align 8, !dbg !6866
  %arrayidx = getelementptr i8, i8* %0, i64 126, !dbg !6866
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6866
  store i8 %1, i8* %num_of_ext, align 1, !dbg !6865
  %2 = load i8*, i8** %edid.addr, align 8, !dbg !6867
  %3 = load i8, i8* %num_of_ext, align 1, !dbg !6868
  %conv = zext i8 %3 to i32, !dbg !6868
  %mul = mul i32 %conv, 128, !dbg !6869
  %idx.ext = sext i32 %mul to i64, !dbg !6870
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !6870
  %call = call i32 @drm_edid_block_checksum(i8* %add.ptr) #8, !dbg !6871
  %conv1 = trunc i32 %call to i8, !dbg !6871
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6872
  %real_edid_checksum = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %4, i32 0, i32 44, !dbg !6873
  store i8 %conv1, i8* %real_edid_checksum, align 1, !dbg !6874
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6875
  %bad_edid_counter = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %5, i32 0, i32 42, !dbg !6877
  %6 = load i32, i32* %bad_edid_counter, align 4, !dbg !6878
  %inc = add i32 %6, 1, !dbg !6878
  store i32 %inc, i32* %bad_edid_counter, align 4, !dbg !6878
  %tobool = icmp ne i32 %6, 0, !dbg !6878
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6879

land.lhs.true:                                    ; preds = %entry
  %call2 = call zeroext i1 @drm_debug_enabled(i32 4) #8, !dbg !6880
  br i1 %call2, label %if.end, label %if.then, !dbg !6881

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !6882

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6883
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %7, i32 0, i32 0, !dbg !6883
  %8 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !6883
  %dev3 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %8, i32 0, i32 3, !dbg !6883
  %9 = load %struct.device*, %struct.device** %dev3, align 8, !dbg !6883
  %10 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6883
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %10, i32 0, i32 5, !dbg !6883
  %11 = load i8*, i8** %name, align 8, !dbg !6883
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.23, i64 0, i64 0), i8* %11) #10, !dbg !6883
  store i32 0, i32* %i, align 4, !dbg !6884
  br label %for.cond, !dbg !6886

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !6887
  %13 = load i32, i32* %num_blocks.addr, align 4, !dbg !6889
  %cmp = icmp slt i32 %12, %13, !dbg !6890
  br i1 %cmp, label %for.body, label %for.end, !dbg !6891

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %block, metadata !6892, metadata !DIExpression()), !dbg !6894
  %14 = load i8*, i8** %edid.addr, align 8, !dbg !6895
  %15 = load i32, i32* %i, align 4, !dbg !6896
  %mul5 = mul i32 %15, 128, !dbg !6897
  %idx.ext6 = sext i32 %mul5 to i64, !dbg !6898
  %add.ptr7 = getelementptr i8, i8* %14, i64 %idx.ext6, !dbg !6898
  store i8* %add.ptr7, i8** %block, align 8, !dbg !6894
  call void @llvm.dbg.declare(metadata [20 x i8]* %prefix, metadata !6899, metadata !DIExpression()), !dbg !6901
  %16 = load i8*, i8** %block, align 8, !dbg !6902
  %call8 = call zeroext i1 @drm_edid_is_zero(i8* %16, i32 128) #8, !dbg !6904
  br i1 %call8, label %if.then9, label %if.else, !dbg !6905

if.then9:                                         ; preds = %for.body
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %prefix, i64 0, i64 0, !dbg !6906
  %17 = load i32, i32* %i, align 4, !dbg !6907
  %call10 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0), i32 %17) #8, !dbg !6908
  br label %if.end19, !dbg !6908

if.else:                                          ; preds = %for.body
  %18 = load i8*, i8** %block, align 8, !dbg !6909
  %19 = load i32, i32* %i, align 4, !dbg !6911
  %call11 = call zeroext i1 @drm_edid_block_valid(i8* %18, i32 %19, i1 zeroext false, i8* null) #8, !dbg !6912
  br i1 %call11, label %if.else15, label %if.then12, !dbg !6913

if.then12:                                        ; preds = %if.else
  %arraydecay13 = getelementptr inbounds [20 x i8], [20 x i8]* %prefix, i64 0, i64 0, !dbg !6914
  %20 = load i32, i32* %i, align 4, !dbg !6915
  %call14 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay13, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i64 0, i64 0), i32 %20) #8, !dbg !6916
  br label %if.end18, !dbg !6916

if.else15:                                        ; preds = %if.else
  %arraydecay16 = getelementptr inbounds [20 x i8], [20 x i8]* %prefix, i64 0, i64 0, !dbg !6917
  %21 = load i32, i32* %i, align 4, !dbg !6918
  %call17 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay16, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i64 0, i64 0), i32 %21) #8, !dbg !6919
  br label %if.end18

if.end18:                                         ; preds = %if.else15, %if.then12
  br label %if.end19

if.end19:                                         ; preds = %if.end18, %if.then9
  %arraydecay20 = getelementptr inbounds [20 x i8], [20 x i8]* %prefix, i64 0, i64 0, !dbg !6920
  %22 = load i8*, i8** %block, align 8, !dbg !6921
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay20, i32 0, i32 16, i32 1, i8* %22, i64 128, i1 zeroext false) #8, !dbg !6922
  br label %for.inc, !dbg !6923

for.inc:                                          ; preds = %if.end19
  %23 = load i32, i32* %i, align 4, !dbg !6924
  %inc21 = add i32 %23, 1, !dbg !6924
  store i32 %inc21, i32* %i, align 4, !dbg !6924
  br label %for.cond, !dbg !6925, !llvm.loop !6926

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6928
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !6929 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !6362, metadata !DIExpression()), !dbg !6932
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !6375, metadata !DIExpression()), !dbg !6936
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !6377, metadata !DIExpression()), !dbg !6937
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !6379, metadata !DIExpression()), !dbg !6938
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !6381, metadata !DIExpression()), !dbg !6939
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !6387, metadata !DIExpression()), !dbg !6941
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !6393, metadata !DIExpression()), !dbg !6943
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !6402, metadata !DIExpression()), !dbg !6946
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !6404, metadata !DIExpression()), !dbg !6947
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !6406, metadata !DIExpression()), !dbg !6948
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !6408, metadata !DIExpression()), !dbg !6949
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !6410, metadata !DIExpression()), !dbg !6950
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !6412, metadata !DIExpression()), !dbg !6951
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !6414, metadata !DIExpression()), !dbg !6952
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !6416, metadata !DIExpression()), !dbg !6953
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6958, metadata !DIExpression()), !dbg !6959
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !6960, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !6962, metadata !DIExpression()), !dbg !6965
  %0 = load i64, i64* %n.addr, align 8, !dbg !6965
  store i64 %0, i64* %__a, align 8, !dbg !6965
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !6966, metadata !DIExpression()), !dbg !6965
  %1 = load i64, i64* %size.addr, align 8, !dbg !6965
  store i64 %1, i64* %__b, align 8, !dbg !6965
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !6967, metadata !DIExpression()), !dbg !6965
  store i64* %bytes, i64** %__d, align 8, !dbg !6965
  %cmp = icmp eq i64* %__a, %__b, !dbg !6965
  %conv = zext i1 %cmp to i32, !dbg !6965
  %2 = load i64*, i64** %__d, align 8, !dbg !6965
  %cmp1 = icmp eq i64* %__a, %2, !dbg !6965
  %conv2 = zext i1 %cmp1 to i32, !dbg !6965
  %3 = load i64, i64* %__a, align 8, !dbg !6965
  %4 = load i64, i64* %__b, align 8, !dbg !6965
  %5 = load i64*, i64** %__d, align 8, !dbg !6965
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !6965
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !6965
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !6965
  store i64 %8, i64* %5, align 8, !dbg !6965
  %frombool = zext i1 %7 to i8, !dbg !6965
  store i8 %frombool, i8* %tmp, align 1, !dbg !6965
  %9 = load i8, i8* %tmp, align 1, !dbg !6965
  %tobool = trunc i8 %9 to i1, !dbg !6965
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #8, !dbg !6968
  %lnot = xor i1 %call, true, !dbg !6968
  %lnot3 = xor i1 %lnot, true, !dbg !6968
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !6968
  %conv4 = sext i32 %lnot.ext to i64, !dbg !6968
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !6968
  br i1 %tobool5, label %if.then, label %if.end, !dbg !6969

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !6970
  br label %return, !dbg !6970

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !6971
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !6972
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !6973

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !6974
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !6975
  br i1 %13, label %if.then6, label %if.end8, !dbg !6976

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !6977
  %15 = load i32, i32* %flags.addr, align 4, !dbg !6978
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !6979
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #9, !dbg !6980
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !6981

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !6982
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !6983
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6984

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !6985
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !6986
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !6987
  %call.i.i = call i32 @get_order(i64 %21) #11, !dbg !6988
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !6950
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !6989
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6990
  %24 = load i32, i32* %order.i.i, align 4, !dbg !6991
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6992
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6993
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6994
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !6995
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6995
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6995
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6995
  call void @llvm.assume(i1 %maskcond.i.i.i) #9, !dbg !6995
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6996
  br label %kmalloc.exit, !dbg !6996

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !6997
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6998
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !6998
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6999

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7000
  br label %kmalloc_index.exit.i, !dbg !7000

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7001
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !7002
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7003

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7004
  br label %kmalloc_index.exit.i, !dbg !7004

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7005
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !7006
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7007

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7008
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !7009
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7010

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7011
  br label %kmalloc_index.exit.i, !dbg !7011

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7012
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !7013
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7014

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7015
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !7016
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7017

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7018
  br label %kmalloc_index.exit.i, !dbg !7018

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7019
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !7020
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7021

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7022
  br label %kmalloc_index.exit.i, !dbg !7022

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7023
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !7024
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7025

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7026
  br label %kmalloc_index.exit.i, !dbg !7026

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7027
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !7028
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7029

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7030
  br label %kmalloc_index.exit.i, !dbg !7030

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7031
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !7032
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7033

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !7034
  br label %kmalloc_index.exit.i, !dbg !7034

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7035
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !7036
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !7037

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !7038
  br label %kmalloc_index.exit.i, !dbg !7038

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7039
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !7040
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !7041

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !7042
  br label %kmalloc_index.exit.i, !dbg !7042

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7043
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !7044
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !7045

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !7046
  br label %kmalloc_index.exit.i, !dbg !7046

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7047
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !7048
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !7049

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !7050
  br label %kmalloc_index.exit.i, !dbg !7050

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7051
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !7052
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !7053

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !7054
  br label %kmalloc_index.exit.i, !dbg !7054

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7055
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !7056
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !7057

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !7058
  br label %kmalloc_index.exit.i, !dbg !7058

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7059
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !7060
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !7061

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !7062
  br label %kmalloc_index.exit.i, !dbg !7062

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7063
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !7064
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !7065

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !7066
  br label %kmalloc_index.exit.i, !dbg !7066

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7067
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !7068
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !7069

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !7070
  br label %kmalloc_index.exit.i, !dbg !7070

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7071
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !7072
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !7073

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !7074
  br label %kmalloc_index.exit.i, !dbg !7074

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7075
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !7076
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !7077

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !7078
  br label %kmalloc_index.exit.i, !dbg !7078

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7079
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !7080
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !7081

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !7082
  br label %kmalloc_index.exit.i, !dbg !7082

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7083
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !7084
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !7085

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !7086
  br label %kmalloc_index.exit.i, !dbg !7086

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7087
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !7088
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !7089

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !7090
  br label %kmalloc_index.exit.i, !dbg !7090

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7091
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !7092
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !7093

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !7094
  br label %kmalloc_index.exit.i, !dbg !7094

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7095
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !7096
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !7097

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !7098
  br label %kmalloc_index.exit.i, !dbg !7098

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7099
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !7100
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !7101

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !7102
  br label %kmalloc_index.exit.i, !dbg !7102

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7103
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !7104
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !7105

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !7106
  br label %kmalloc_index.exit.i, !dbg !7106

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7107
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !7108
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !7109

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !7110
  br label %kmalloc_index.exit.i, !dbg !7110

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7111
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !7112
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !7113

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !7114
  br label %kmalloc_index.exit.i, !dbg !7114

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 382, i32 0, i64 12) #9, !dbg !7115, !srcloc !6611
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 157) #9, !dbg !7116, !srcloc !6615
  unreachable, !dbg !7117

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !7118
  store i32 %59, i32* %index.i, align 4, !dbg !7119
  %60 = load i32, i32* %index.i, align 4, !dbg !7120
  %tobool.i = icmp ne i32 %60, 0, !dbg !7120
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !7121

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !7122
  br label %kmalloc.exit, !dbg !7122

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !7123
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7124
  %and.i.i = and i32 %62, 17, !dbg !7124
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !7124
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !7124
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !7124
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !7124
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !7125

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !7126
  br label %kmalloc_type.exit.i, !dbg !7126

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !7127
  %and2.i.i = and i32 %63, 1, !dbg !7128
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !7127
  %64 = zext i1 %tobool3.i.i to i64, !dbg !7127
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !7127
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !7129
  br label %kmalloc_type.exit.i, !dbg !7129

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !7130
  %idxprom.i = zext i32 %65 to i64, !dbg !7131
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !7131
  %66 = load i32, i32* %index.i, align 4, !dbg !7132
  %idxprom6.i = zext i32 %66 to i64, !dbg !7131
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !7131
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !7131
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !7133
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !7134
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7135
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7136
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !7137
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !7137
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !7137
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !7137
  call void @llvm.assume(i1 %maskcond.i.i) #9, !dbg !7137
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !6938
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !7138
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !7139
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !7140
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !7141
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !7142
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !7143
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !7144
  store i8* %76, i8** %retval.i, align 8, !dbg !7145
  br label %kmalloc.exit, !dbg !7145

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !7146
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !7147
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !7148
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !7148
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !7148
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !7148
  call void @llvm.assume(i1 %maskcond.i) #9, !dbg !7148
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !7149
  br label %kmalloc.exit, !dbg !7149

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !7150
  store i8* %79, i8** %retval, align 8, !dbg !7151
  br label %return, !dbg !7151

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !7152
  %81 = load i32, i32* %flags.addr, align 4, !dbg !7153
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #8, !dbg !7154
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !7154
  %maskedptr = and i64 %ptrint, 7, !dbg !7154
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !7154
  call void @llvm.assume(i1 %maskcond), !dbg !7154
  store i8* %call9, i8** %retval, align 8, !dbg !7155
  br label %return, !dbg !7155

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !7156
  ret i8* %82, !dbg !7156
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_probe_ddc(%struct.i2c_adapter* %adapter) #0 !dbg !7157 {
entry:
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  %out = alloca i8, align 1
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !7160, metadata !DIExpression()), !dbg !7161
  call void @llvm.dbg.declare(metadata i8* %out, metadata !7162, metadata !DIExpression()), !dbg !7163
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !7164
  %1 = bitcast %struct.i2c_adapter* %0 to i8*, !dbg !7164
  %call = call i32 @drm_do_probe_ddc_edid(i8* %1, i8* %out, i32 0, i64 1) #8, !dbg !7165
  %cmp = icmp eq i32 %call, 0, !dbg !7166
  ret i1 %cmp, !dbg !7167
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_do_probe_ddc_edid(i8* %data, i8* %buf, i32 %block, i64 %len) #0 !dbg !7168 {
entry:
  %data.addr = alloca i8*, align 8
  %buf.addr = alloca i8*, align 8
  %block.addr = alloca i32, align 4
  %len.addr = alloca i64, align 8
  %adapter = alloca %struct.i2c_adapter*, align 8
  %start = alloca i8, align 1
  %segment = alloca i8, align 1
  %xfers = alloca i8, align 1
  %ret = alloca i32, align 4
  %retries = alloca i32, align 4
  %msgs = alloca [3 x %struct.i2c_msg], align 16
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7169, metadata !DIExpression()), !dbg !7170
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7171, metadata !DIExpression()), !dbg !7172
  store i32 %block, i32* %block.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %block.addr, metadata !7173, metadata !DIExpression()), !dbg !7174
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7175, metadata !DIExpression()), !dbg !7176
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter, metadata !7177, metadata !DIExpression()), !dbg !7178
  %0 = load i8*, i8** %data.addr, align 8, !dbg !7179
  %1 = bitcast i8* %0 to %struct.i2c_adapter*, !dbg !7179
  store %struct.i2c_adapter* %1, %struct.i2c_adapter** %adapter, align 8, !dbg !7178
  call void @llvm.dbg.declare(metadata i8* %start, metadata !7180, metadata !DIExpression()), !dbg !7181
  %2 = load i32, i32* %block.addr, align 4, !dbg !7182
  %mul = mul i32 %2, 128, !dbg !7183
  %conv = trunc i32 %mul to i8, !dbg !7182
  store i8 %conv, i8* %start, align 1, !dbg !7181
  call void @llvm.dbg.declare(metadata i8* %segment, metadata !7184, metadata !DIExpression()), !dbg !7185
  %3 = load i32, i32* %block.addr, align 4, !dbg !7186
  %shr = lshr i32 %3, 1, !dbg !7187
  %conv1 = trunc i32 %shr to i8, !dbg !7186
  store i8 %conv1, i8* %segment, align 1, !dbg !7185
  call void @llvm.dbg.declare(metadata i8* %xfers, metadata !7188, metadata !DIExpression()), !dbg !7189
  %4 = load i8, i8* %segment, align 1, !dbg !7190
  %conv2 = zext i8 %4 to i32, !dbg !7190
  %tobool = icmp ne i32 %conv2, 0, !dbg !7190
  %5 = zext i1 %tobool to i64, !dbg !7190
  %cond = select i1 %tobool, i32 3, i32 2, !dbg !7190
  %conv3 = trunc i32 %cond to i8, !dbg !7190
  store i8 %conv3, i8* %xfers, align 1, !dbg !7189
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !7193, metadata !DIExpression()), !dbg !7194
  store i32 5, i32* %retries, align 4, !dbg !7194
  br label %do.body, !dbg !7195

do.body:                                          ; preds = %land.end, %entry
  call void @llvm.dbg.declare(metadata [3 x %struct.i2c_msg]* %msgs, metadata !7196, metadata !DIExpression()), !dbg !7199
  %arrayinit.begin = getelementptr inbounds [3 x %struct.i2c_msg], [3 x %struct.i2c_msg]* %msgs, i64 0, i64 0, !dbg !7200
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 0, !dbg !7201
  store i16 48, i16* %addr, align 16, !dbg !7201
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 1, !dbg !7201
  store i16 0, i16* %flags, align 2, !dbg !7201
  %len4 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 2, !dbg !7201
  store i16 1, i16* %len4, align 4, !dbg !7201
  %buf5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i32 0, i32 3, !dbg !7201
  store i8* %segment, i8** %buf5, align 8, !dbg !7201
  %arrayinit.element = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.begin, i64 1, !dbg !7200
  %addr6 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 0, !dbg !7202
  store i16 80, i16* %addr6, align 16, !dbg !7202
  %flags7 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 1, !dbg !7202
  store i16 0, i16* %flags7, align 2, !dbg !7202
  %len8 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 2, !dbg !7202
  store i16 1, i16* %len8, align 4, !dbg !7202
  %buf9 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i32 0, i32 3, !dbg !7202
  store i8* %start, i8** %buf9, align 8, !dbg !7202
  %arrayinit.element10 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element, i64 1, !dbg !7200
  %addr11 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element10, i32 0, i32 0, !dbg !7203
  store i16 80, i16* %addr11, align 16, !dbg !7203
  %flags12 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element10, i32 0, i32 1, !dbg !7203
  store i16 1, i16* %flags12, align 2, !dbg !7203
  %len13 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element10, i32 0, i32 2, !dbg !7203
  %6 = load i64, i64* %len.addr, align 8, !dbg !7204
  %conv14 = trunc i64 %6 to i16, !dbg !7204
  store i16 %conv14, i16* %len13, align 4, !dbg !7203
  %buf15 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayinit.element10, i32 0, i32 3, !dbg !7203
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !7205
  store i8* %7, i8** %buf15, align 8, !dbg !7203
  %8 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter, align 8, !dbg !7206
  %9 = load i8, i8* %xfers, align 1, !dbg !7207
  %conv16 = zext i8 %9 to i32, !dbg !7207
  %sub = sub i32 3, %conv16, !dbg !7208
  %idxprom = sext i32 %sub to i64, !dbg !7209
  %arrayidx = getelementptr [3 x %struct.i2c_msg], [3 x %struct.i2c_msg]* %msgs, i64 0, i64 %idxprom, !dbg !7209
  %10 = load i8, i8* %xfers, align 1, !dbg !7210
  %conv17 = zext i8 %10 to i32, !dbg !7210
  %call = call i32 @i2c_transfer(%struct.i2c_adapter* %8, %struct.i2c_msg* %arrayidx, i32 %conv17) #8, !dbg !7211
  store i32 %call, i32* %ret, align 4, !dbg !7212
  %11 = load i32, i32* %ret, align 4, !dbg !7213
  %cmp = icmp eq i32 %11, -6, !dbg !7215
  br i1 %cmp, label %if.then, label %if.end, !dbg !7216

if.then:                                          ; preds = %do.body
  %12 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter, align 8, !dbg !7217
  %name = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %12, i32 0, i32 12, !dbg !7217
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %name, i64 0, i64 0, !dbg !7217
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay) #8, !dbg !7217
  br label %do.end, !dbg !7219

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !7220

do.cond:                                          ; preds = %if.end
  %13 = load i32, i32* %ret, align 4, !dbg !7221
  %14 = load i8, i8* %xfers, align 1, !dbg !7222
  %conv19 = zext i8 %14 to i32, !dbg !7222
  %cmp20 = icmp ne i32 %13, %conv19, !dbg !7223
  br i1 %cmp20, label %land.rhs, label %land.end, !dbg !7224

land.rhs:                                         ; preds = %do.cond
  %15 = load i32, i32* %retries, align 4, !dbg !7225
  %dec = add i32 %15, -1, !dbg !7225
  store i32 %dec, i32* %retries, align 4, !dbg !7225
  %tobool22 = icmp ne i32 %dec, 0, !dbg !7224
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %16 = phi i1 [ false, %do.cond ], [ %tobool22, %land.rhs ], !dbg !7226
  br i1 %16, label %do.body, label %do.end, !dbg !7220, !llvm.loop !7227

do.end:                                           ; preds = %land.end, %if.then
  %17 = load i32, i32* %ret, align 4, !dbg !7229
  %18 = load i8, i8* %xfers, align 1, !dbg !7230
  %conv23 = zext i8 %18 to i32, !dbg !7230
  %cmp24 = icmp eq i32 %17, %conv23, !dbg !7231
  %19 = zext i1 %cmp24 to i64, !dbg !7229
  %cond26 = select i1 %cmp24, i32 0, i32 -1, !dbg !7229
  ret i32 %cond26, !dbg !7232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.edid* @drm_get_edid(%struct.drm_connector* %connector, %struct.i2c_adapter* %adapter) #0 !dbg !7233 {
entry:
  %retval = alloca %struct.edid*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  %edid = alloca %struct.edid*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !7236, metadata !DIExpression()), !dbg !7237
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !7238, metadata !DIExpression()), !dbg !7239
  call void @llvm.dbg.declare(metadata %struct.edid** %edid, metadata !7240, metadata !DIExpression()), !dbg !7241
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7242
  %force = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 31, !dbg !7244
  %1 = load i32, i32* %force, align 4, !dbg !7244
  %cmp = icmp eq i32 %1, 1, !dbg !7245
  br i1 %cmp, label %if.then, label %if.end, !dbg !7246

if.then:                                          ; preds = %entry
  store %struct.edid* null, %struct.edid** %retval, align 8, !dbg !7247
  br label %return, !dbg !7247

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7248
  %force1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 31, !dbg !7250
  %3 = load i32, i32* %force1, align 4, !dbg !7250
  %cmp2 = icmp eq i32 %3, 0, !dbg !7251
  br i1 %cmp2, label %land.lhs.true, label %if.end4, !dbg !7252

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !7253
  %call = call zeroext i1 @drm_probe_ddc(%struct.i2c_adapter* %4) #8, !dbg !7254
  br i1 %call, label %if.end4, label %if.then3, !dbg !7255

if.then3:                                         ; preds = %land.lhs.true
  store %struct.edid* null, %struct.edid** %retval, align 8, !dbg !7256
  br label %return, !dbg !7256

if.end4:                                          ; preds = %land.lhs.true, %if.end
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7257
  %6 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !7258
  %7 = bitcast %struct.i2c_adapter* %6 to i8*, !dbg !7258
  %call5 = call %struct.edid* @drm_do_get_edid(%struct.drm_connector* %5, i32 (i8*, i8*, i32, i64)* @drm_do_probe_ddc_edid, i8* %7) #8, !dbg !7259
  store %struct.edid* %call5, %struct.edid** %edid, align 8, !dbg !7260
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7261
  %9 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !7262
  %call6 = call i32 @drm_connector_update_edid_property(%struct.drm_connector* %8, %struct.edid* %9) #8, !dbg !7263
  %10 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !7264
  store %struct.edid* %10, %struct.edid** %retval, align 8, !dbg !7265
  br label %return, !dbg !7265

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %11 = load %struct.edid*, %struct.edid** %retval, align 8, !dbg !7266
  ret %struct.edid* %11, !dbg !7266
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.edid* @drm_get_edid_switcheroo(%struct.drm_connector* %connector, %struct.i2c_adapter* %adapter) #0 !dbg !7267 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  %pdev = alloca %struct.pci_dev*, align 8
  %edid = alloca %struct.edid*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !7268, metadata !DIExpression()), !dbg !7269
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev, metadata !7272, metadata !DIExpression()), !dbg !7273
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7274
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !7275
  %1 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !7275
  %pdev1 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %1, i32 0, i32 33, !dbg !7276
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev1, align 8, !dbg !7276
  store %struct.pci_dev* %2, %struct.pci_dev** %pdev, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata %struct.edid** %edid, metadata !7277, metadata !DIExpression()), !dbg !7278
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7279
  %call = call i32 @vga_switcheroo_lock_ddc(%struct.pci_dev* %3) #8, !dbg !7280
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7281
  %5 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !7282
  %call2 = call %struct.edid* @drm_get_edid(%struct.drm_connector* %4, %struct.i2c_adapter* %5) #8, !dbg !7283
  store %struct.edid* %call2, %struct.edid** %edid, align 8, !dbg !7284
  %6 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !7285
  %call3 = call i32 @vga_switcheroo_unlock_ddc(%struct.pci_dev* %6) #8, !dbg !7286
  %7 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !7287
  ret %struct.edid* %7, !dbg !7288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vga_switcheroo_lock_ddc(%struct.pci_dev* %pdev) #0 !dbg !7289 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7293, metadata !DIExpression()), !dbg !7294
  ret i32 -19, !dbg !7295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @vga_switcheroo_unlock_ddc(%struct.pci_dev* %pdev) #0 !dbg !7296 {
entry:
  %pdev.addr = alloca %struct.pci_dev*, align 8
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.pci_dev** %pdev.addr, metadata !7297, metadata !DIExpression()), !dbg !7298
  ret i32 -19, !dbg !7299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.edid* @drm_edid_duplicate(%struct.edid* %edid) #0 !dbg !7300 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !7303, metadata !DIExpression()), !dbg !7304
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7305
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !7305
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7306
  %extensions = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 26, !dbg !7307
  %3 = load i8, i8* %extensions, align 1, !dbg !7307
  %conv = zext i8 %3 to i32, !dbg !7306
  %add = add i32 %conv, 1, !dbg !7308
  %mul = mul i32 %add, 128, !dbg !7309
  %conv1 = sext i32 %mul to i64, !dbg !7310
  %call = call i8* @kmemdup(i8* %1, i64 %conv1, i32 3264) #8, !dbg !7311
  %4 = bitcast i8* %call to %struct.edid*, !dbg !7311
  ret %struct.edid* %4, !dbg !7312
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.drm_display_mode* @drm_mode_find_dmt(%struct.drm_device* %dev, i32 %hsize, i32 %vsize, i32 %fresh, i1 zeroext %rb) #0 !dbg !7313 {
entry:
  %retval = alloca %struct.drm_display_mode*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %hsize.addr = alloca i32, align 4
  %vsize.addr = alloca i32, align 4
  %fresh.addr = alloca i32, align 4
  %rb.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %ptr = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7316, metadata !DIExpression()), !dbg !7317
  store i32 %hsize, i32* %hsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hsize.addr, metadata !7318, metadata !DIExpression()), !dbg !7319
  store i32 %vsize, i32* %vsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vsize.addr, metadata !7320, metadata !DIExpression()), !dbg !7321
  store i32 %fresh, i32* %fresh.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fresh.addr, metadata !7322, metadata !DIExpression()), !dbg !7323
  %frombool = zext i1 %rb to i8
  store i8 %frombool, i8* %rb.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rb.addr, metadata !7324, metadata !DIExpression()), !dbg !7325
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7326, metadata !DIExpression()), !dbg !7327
  store i32 0, i32* %i, align 4, !dbg !7328
  br label %for.cond, !dbg !7330

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7331
  %conv = sext i32 %0 to i64, !dbg !7331
  %cmp = icmp ult i64 %conv, 88, !dbg !7333
  br i1 %cmp, label %for.body, label %for.end, !dbg !7334

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %ptr, metadata !7335, metadata !DIExpression()), !dbg !7337
  %1 = load i32, i32* %i, align 4, !dbg !7338
  %idxprom = sext i32 %1 to i64, !dbg !7339
  %arrayidx = getelementptr [88 x %struct.drm_display_mode], [88 x %struct.drm_display_mode]* @drm_dmt_modes, i64 0, i64 %idxprom, !dbg !7339
  store %struct.drm_display_mode* %arrayidx, %struct.drm_display_mode** %ptr, align 8, !dbg !7337
  %2 = load i32, i32* %hsize.addr, align 4, !dbg !7340
  %3 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !7342
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %3, i32 0, i32 1, !dbg !7343
  %4 = load i16, i16* %hdisplay, align 4, !dbg !7343
  %conv2 = zext i16 %4 to i32, !dbg !7342
  %cmp3 = icmp ne i32 %2, %conv2, !dbg !7344
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7345

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !7346

if.end:                                           ; preds = %for.body
  %5 = load i32, i32* %vsize.addr, align 4, !dbg !7347
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !7349
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 6, !dbg !7350
  %7 = load i16, i16* %vdisplay, align 2, !dbg !7350
  %conv5 = zext i16 %7 to i32, !dbg !7349
  %cmp6 = icmp ne i32 %5, %conv5, !dbg !7351
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !7352

if.then8:                                         ; preds = %if.end
  br label %for.inc, !dbg !7353

if.end9:                                          ; preds = %if.end
  %8 = load i32, i32* %fresh.addr, align 4, !dbg !7354
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !7356
  %call = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %9) #8, !dbg !7357
  %cmp10 = icmp ne i32 %8, %call, !dbg !7358
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !7359

if.then12:                                        ; preds = %if.end9
  br label %for.inc, !dbg !7360

if.end13:                                         ; preds = %if.end9
  %10 = load i8, i8* %rb.addr, align 1, !dbg !7361
  %tobool = trunc i8 %10 to i1, !dbg !7361
  %conv14 = zext i1 %tobool to i32, !dbg !7361
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !7363
  %call15 = call zeroext i1 @mode_is_rb(%struct.drm_display_mode* %11) #8, !dbg !7364
  %conv16 = zext i1 %call15 to i32, !dbg !7364
  %cmp17 = icmp ne i32 %conv14, %conv16, !dbg !7365
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !7366

if.then19:                                        ; preds = %if.end13
  br label %for.inc, !dbg !7367

if.end20:                                         ; preds = %if.end13
  %12 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7368
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !7369
  %call21 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %12, %struct.drm_display_mode* %13) #8, !dbg !7370
  store %struct.drm_display_mode* %call21, %struct.drm_display_mode** %retval, align 8, !dbg !7371
  br label %return, !dbg !7371

for.inc:                                          ; preds = %if.then19, %if.then12, %if.then8, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !7372
  %inc = add i32 %14, 1, !dbg !7372
  store i32 %inc, i32* %i, align 4, !dbg !7372
  br label %for.cond, !dbg !7373, !llvm.loop !7374

for.end:                                          ; preds = %for.cond
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !7376
  br label %return, !dbg !7376

return:                                           ; preds = %for.end, %if.end20
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval, align 8, !dbg !7377
  ret %struct.drm_display_mode* %15, !dbg !7377
}

; Function Attrs: noredzone
declare dso_local i32 @drm_mode_vrefresh(%struct.drm_display_mode*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mode_is_rb(%struct.drm_display_mode* %mode) #0 !dbg !7378 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !7381, metadata !DIExpression()), !dbg !7382
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7383
  %htotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 4, !dbg !7384
  %1 = load i16, i16* %htotal, align 2, !dbg !7384
  %conv = zext i16 %1 to i32, !dbg !7383
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7385
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 1, !dbg !7386
  %3 = load i16, i16* %hdisplay, align 4, !dbg !7386
  %conv1 = zext i16 %3 to i32, !dbg !7385
  %sub = sub i32 %conv, %conv1, !dbg !7387
  %cmp = icmp eq i32 %sub, 160, !dbg !7388
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7389

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7390
  %hsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %4, i32 0, i32 3, !dbg !7391
  %5 = load i16, i16* %hsync_end, align 8, !dbg !7391
  %conv3 = zext i16 %5 to i32, !dbg !7390
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7392
  %hdisplay4 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 1, !dbg !7393
  %7 = load i16, i16* %hdisplay4, align 4, !dbg !7393
  %conv5 = zext i16 %7 to i32, !dbg !7392
  %sub6 = sub i32 %conv3, %conv5, !dbg !7394
  %cmp7 = icmp eq i32 %sub6, 80, !dbg !7395
  br i1 %cmp7, label %land.lhs.true9, label %land.end, !dbg !7396

land.lhs.true9:                                   ; preds = %land.lhs.true
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7397
  %hsync_end10 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %8, i32 0, i32 3, !dbg !7398
  %9 = load i16, i16* %hsync_end10, align 8, !dbg !7398
  %conv11 = zext i16 %9 to i32, !dbg !7397
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7399
  %hsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 2, !dbg !7400
  %11 = load i16, i16* %hsync_start, align 2, !dbg !7400
  %conv12 = zext i16 %11 to i32, !dbg !7399
  %sub13 = sub i32 %conv11, %conv12, !dbg !7401
  %cmp14 = icmp eq i32 %sub13, 32, !dbg !7402
  br i1 %cmp14, label %land.rhs, label %land.end, !dbg !7403

land.rhs:                                         ; preds = %land.lhs.true9
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7404
  %vsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %12, i32 0, i32 7, !dbg !7405
  %13 = load i16, i16* %vsync_start, align 8, !dbg !7405
  %conv16 = zext i16 %13 to i32, !dbg !7404
  %14 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7406
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %14, i32 0, i32 6, !dbg !7407
  %15 = load i16, i16* %vdisplay, align 2, !dbg !7407
  %conv17 = zext i16 %15 to i32, !dbg !7406
  %sub18 = sub i32 %conv16, %conv17, !dbg !7408
  %cmp19 = icmp eq i32 %sub18, 3, !dbg !7409
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true9, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true9 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp19, %land.rhs ], !dbg !7410
  ret i1 %16, !dbg !7411
}

; Function Attrs: noredzone
declare dso_local %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device*, %struct.drm_display_mode*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_mode_fixup_1366x768(%struct.drm_display_mode* %mode) #0 !dbg !7412 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !7415, metadata !DIExpression()), !dbg !7416
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7417
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 1, !dbg !7419
  %1 = load i16, i16* %hdisplay, align 4, !dbg !7419
  %conv = zext i16 %1 to i32, !dbg !7417
  %cmp = icmp eq i32 %conv, 1368, !dbg !7420
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7421

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7422
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 6, !dbg !7423
  %3 = load i16, i16* %vdisplay, align 2, !dbg !7423
  %conv2 = zext i16 %3 to i32, !dbg !7422
  %cmp3 = icmp eq i32 %conv2, 768, !dbg !7424
  br i1 %cmp3, label %if.then, label %if.end, !dbg !7425

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7426
  %hdisplay5 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %4, i32 0, i32 1, !dbg !7428
  store i16 1366, i16* %hdisplay5, align 4, !dbg !7429
  %5 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7430
  %hsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %5, i32 0, i32 2, !dbg !7431
  %6 = load i16, i16* %hsync_start, align 2, !dbg !7432
  %dec = add i16 %6, -1, !dbg !7432
  store i16 %dec, i16* %hsync_start, align 2, !dbg !7432
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7433
  %hsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %7, i32 0, i32 3, !dbg !7434
  %8 = load i16, i16* %hsync_end, align 8, !dbg !7435
  %dec6 = add i16 %8, -1, !dbg !7435
  store i16 %dec6, i16* %hsync_end, align 8, !dbg !7435
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7436
  call void @drm_mode_set_name(%struct.drm_display_mode* %9) #8, !dbg !7437
  br label %if.end, !dbg !7438

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !7439
}

; Function Attrs: noredzone
declare dso_local void @drm_mode_set_name(%struct.drm_display_mode*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @drm_match_cea_mode(%struct.drm_display_mode* %to_match) #0 !dbg !7440 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !7447
  %retval = alloca i8, align 1
  %to_match.addr = alloca %struct.drm_display_mode*, align 8
  %match_flags = alloca i32, align 4
  %vic = alloca i8, align 1
  %cea_mode = alloca %struct.drm_display_mode, align 8
  %clock1 = alloca i32, align 4
  %clock2 = alloca i32, align 4
  store %struct.drm_display_mode* %to_match, %struct.drm_display_mode** %to_match.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %to_match.addr, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.declare(metadata i32* %match_flags, metadata !7454, metadata !DIExpression()), !dbg !7455
  store i32 5, i32* %match_flags, align 4, !dbg !7455
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !7456, metadata !DIExpression()), !dbg !7457
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !7458
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 0, !dbg !7460
  %1 = load i32, i32* %clock, align 8, !dbg !7460
  %tobool = icmp ne i32 %1, 0, !dbg !7458
  br i1 %tobool, label %if.end, label %if.then, !dbg !7461

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !7462
  br label %return, !dbg !7462

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !7463
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 33, !dbg !7465
  %3 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !7465
  %tobool1 = icmp ne i32 %3, 0, !dbg !7463
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7466

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %match_flags, align 4, !dbg !7467
  %or = or i32 %4, 16, !dbg !7467
  store i32 %or, i32* %match_flags, align 4, !dbg !7467
  br label %if.end3, !dbg !7468

if.end3:                                          ; preds = %if.then2, %if.end
  store i8 1, i8* %vic, align 1, !dbg !7469
  br label %for.cond, !dbg !7470

for.cond:                                         ; preds = %for.inc, %if.end3
  %5 = load i8, i8* %vic, align 1, !dbg !7471
  %conv = zext i8 %5 to i32, !dbg !7471
  %call = call zeroext i8 @cea_num_vics() #8, !dbg !7472
  %conv4 = zext i8 %call to i32, !dbg !7472
  %cmp = icmp slt i32 %conv, %conv4, !dbg !7473
  br i1 %cmp, label %for.body, label %for.end, !dbg !7474

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode* %cea_mode, metadata !7475, metadata !DIExpression()), !dbg !7476
  %6 = load i8, i8* %vic, align 1, !dbg !7477
  store i8 %6, i8* %vic.addr.i, align 1
  %7 = load i8, i8* %vic.addr.i, align 1, !dbg !7478
  %conv.i = zext i8 %7 to i32, !dbg !7478
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !7480
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !7481

land.lhs.true.i:                                  ; preds = %for.body
  %8 = load i8, i8* %vic.addr.i, align 1, !dbg !7482
  %conv4.i = zext i8 %8 to i64, !dbg !7482
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !7483
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !7484

if.then.i:                                        ; preds = %land.lhs.true.i
  %9 = load i8, i8* %vic.addr.i, align 1, !dbg !7485
  %conv7.i = zext i8 %9 to i32, !dbg !7485
  %sub.i = sub i32 %conv7.i, 1, !dbg !7486
  %idxprom.i = sext i32 %sub.i to i64, !dbg !7487
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !7487
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !7488
  br label %cea_mode_for_vic.exit, !dbg !7488

if.end.i:                                         ; preds = %land.lhs.true.i, %for.body
  %10 = load i8, i8* %vic.addr.i, align 1, !dbg !7489
  %conv8.i = zext i8 %10 to i32, !dbg !7489
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !7491
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !7492

land.lhs.true11.i:                                ; preds = %if.end.i
  %11 = load i8, i8* %vic.addr.i, align 1, !dbg !7493
  %conv12.i = zext i8 %11 to i64, !dbg !7493
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !7494
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !7495

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %12 = load i8, i8* %vic.addr.i, align 1, !dbg !7496
  %conv16.i = zext i8 %12 to i32, !dbg !7496
  %sub17.i = sub i32 %conv16.i, 193, !dbg !7497
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !7498
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !7498
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !7499
  br label %cea_mode_for_vic.exit, !dbg !7499

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !7500
  br label %cea_mode_for_vic.exit, !dbg !7500

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !7501
  %14 = bitcast %struct.drm_display_mode* %cea_mode to i8*, !dbg !7502
  %15 = bitcast %struct.drm_display_mode* %13 to i8*, !dbg !7502
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 120, i1 false), !dbg !7502
  call void @llvm.dbg.declare(metadata i32* %clock1, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.declare(metadata i32* %clock2, metadata !7505, metadata !DIExpression()), !dbg !7506
  %clock7 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %cea_mode, i32 0, i32 0, !dbg !7507
  %16 = load i32, i32* %clock7, align 8, !dbg !7507
  store i32 %16, i32* %clock1, align 4, !dbg !7508
  %call8 = call i32 @cea_mode_alternate_clock(%struct.drm_display_mode* %cea_mode) #8, !dbg !7509
  store i32 %call8, i32* %clock2, align 4, !dbg !7510
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !7511
  %clock9 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %17, i32 0, i32 0, !dbg !7511
  %18 = load i32, i32* %clock9, align 8, !dbg !7511
  %conv10 = sext i32 %18 to i64, !dbg !7511
  %div = udiv i64 1000000000, %conv10, !dbg !7511
  %19 = load i32, i32* %clock1, align 4, !dbg !7513
  %conv11 = zext i32 %19 to i64, !dbg !7513
  %div12 = udiv i64 1000000000, %conv11, !dbg !7513
  %cmp13 = icmp ne i64 %div, %div12, !dbg !7514
  br i1 %cmp13, label %land.lhs.true, label %if.end23, !dbg !7515

land.lhs.true:                                    ; preds = %cea_mode_for_vic.exit
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !7516
  %clock15 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %20, i32 0, i32 0, !dbg !7516
  %21 = load i32, i32* %clock15, align 8, !dbg !7516
  %conv16 = sext i32 %21 to i64, !dbg !7516
  %div17 = udiv i64 1000000000, %conv16, !dbg !7516
  %22 = load i32, i32* %clock2, align 4, !dbg !7517
  %conv18 = zext i32 %22 to i64, !dbg !7517
  %div19 = udiv i64 1000000000, %conv18, !dbg !7517
  %cmp20 = icmp ne i64 %div17, %div19, !dbg !7518
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !7519

if.then22:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !7520

if.end23:                                         ; preds = %land.lhs.true, %cea_mode_for_vic.exit
  br label %do.body, !dbg !7521

do.body:                                          ; preds = %do.cond, %if.end23
  %23 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !7522
  %24 = load i32, i32* %match_flags, align 4, !dbg !7525
  %call24 = call zeroext i1 @drm_mode_match(%struct.drm_display_mode* %23, %struct.drm_display_mode* %cea_mode, i32 %24) #8, !dbg !7526
  br i1 %call24, label %if.then25, label %if.end26, !dbg !7527

if.then25:                                        ; preds = %do.body
  %25 = load i8, i8* %vic, align 1, !dbg !7528
  store i8 %25, i8* %retval, align 1, !dbg !7529
  br label %return, !dbg !7529

if.end26:                                         ; preds = %do.body
  br label %do.cond, !dbg !7530

do.cond:                                          ; preds = %if.end26
  %26 = load i8, i8* %vic, align 1, !dbg !7531
  %call27 = call zeroext i1 @cea_mode_alternate_timings(i8 zeroext %26, %struct.drm_display_mode* %cea_mode) #8, !dbg !7532
  br i1 %call27, label %do.body, label %do.end, !dbg !7530, !llvm.loop !7533

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !7535

for.inc:                                          ; preds = %do.end, %if.then22
  %27 = load i8, i8* %vic, align 1, !dbg !7536
  %call28 = call zeroext i8 @cea_next_vic(i8 zeroext %27) #8, !dbg !7537
  store i8 %call28, i8* %vic, align 1, !dbg !7538
  br label %for.cond, !dbg !7539, !llvm.loop !7540

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !7542
  br label %return, !dbg !7542

return:                                           ; preds = %for.end, %if.then25, %if.then
  %28 = load i8, i8* %retval, align 1, !dbg !7543
  ret i8 %28, !dbg !7543
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @cea_num_vics() #0 !dbg !7544 {
entry:
  ret i8 -36, !dbg !7547
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cea_mode_alternate_clock(%struct.drm_display_mode* %cea_mode) #0 !dbg !7548 {
entry:
  %retval = alloca i32, align 4
  %cea_mode.addr = alloca %struct.drm_display_mode*, align 8
  %clock = alloca i32, align 4
  %__x = alloca i32, align 4
  %__d = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x10 = alloca i32, align 4
  %__d12 = alloca i32, align 4
  %tmp13 = alloca i32, align 4
  store %struct.drm_display_mode* %cea_mode, %struct.drm_display_mode** %cea_mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %cea_mode.addr, metadata !7551, metadata !DIExpression()), !dbg !7552
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !7553, metadata !DIExpression()), !dbg !7554
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode.addr, align 8, !dbg !7555
  %clock1 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 0, !dbg !7556
  %1 = load i32, i32* %clock1, align 8, !dbg !7556
  store i32 %1, i32* %clock, align 4, !dbg !7554
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode.addr, align 8, !dbg !7557
  %call = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %2) #8, !dbg !7559
  %rem = srem i32 %call, 6, !dbg !7560
  %cmp = icmp ne i32 %rem, 0, !dbg !7561
  br i1 %cmp, label %if.then, label %if.end, !dbg !7562

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %clock, align 4, !dbg !7563
  store i32 %3, i32* %retval, align 4, !dbg !7564
  br label %return, !dbg !7564

if.end:                                           ; preds = %entry
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode.addr, align 8, !dbg !7565
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %4, i32 0, i32 6, !dbg !7567
  %5 = load i16, i16* %vdisplay, align 2, !dbg !7567
  %conv = zext i16 %5 to i32, !dbg !7565
  %cmp2 = icmp eq i32 %conv, 240, !dbg !7568
  br i1 %cmp2, label %if.then8, label %lor.lhs.false, !dbg !7569

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode.addr, align 8, !dbg !7570
  %vdisplay4 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 6, !dbg !7571
  %7 = load i16, i16* %vdisplay4, align 2, !dbg !7571
  %conv5 = zext i16 %7 to i32, !dbg !7570
  %cmp6 = icmp eq i32 %conv5, 480, !dbg !7572
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !7573

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !7574, metadata !DIExpression()), !dbg !7576
  %8 = load i32, i32* %clock, align 4, !dbg !7576
  %mul = mul i32 %8, 1001, !dbg !7576
  store i32 %mul, i32* %__x, align 4, !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %__d, metadata !7577, metadata !DIExpression()), !dbg !7576
  store i32 1000, i32* %__d, align 4, !dbg !7576
  %9 = load i32, i32* %__x, align 4, !dbg !7576
  %10 = load i32, i32* %__d, align 4, !dbg !7576
  %div = sdiv i32 %10, 2, !dbg !7576
  %add = add i32 %9, %div, !dbg !7576
  %11 = load i32, i32* %__d, align 4, !dbg !7576
  %div9 = udiv i32 %add, %11, !dbg !7576
  store i32 %div9, i32* %tmp, align 4, !dbg !7576
  %12 = load i32, i32* %tmp, align 4, !dbg !7576
  store i32 %12, i32* %clock, align 4, !dbg !7578
  br label %if.end17, !dbg !7579

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %__x10, metadata !7580, metadata !DIExpression()), !dbg !7582
  %13 = load i32, i32* %clock, align 4, !dbg !7582
  %mul11 = mul i32 %13, 1000, !dbg !7582
  store i32 %mul11, i32* %__x10, align 4, !dbg !7582
  call void @llvm.dbg.declare(metadata i32* %__d12, metadata !7583, metadata !DIExpression()), !dbg !7582
  store i32 1001, i32* %__d12, align 4, !dbg !7582
  %14 = load i32, i32* %__x10, align 4, !dbg !7582
  %15 = load i32, i32* %__d12, align 4, !dbg !7582
  %div14 = sdiv i32 %15, 2, !dbg !7582
  %add15 = add i32 %14, %div14, !dbg !7582
  %16 = load i32, i32* %__d12, align 4, !dbg !7582
  %div16 = udiv i32 %add15, %16, !dbg !7582
  store i32 %div16, i32* %tmp13, align 4, !dbg !7582
  %17 = load i32, i32* %tmp13, align 4, !dbg !7582
  store i32 %17, i32* %clock, align 4, !dbg !7584
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.then8
  %18 = load i32, i32* %clock, align 4, !dbg !7585
  store i32 %18, i32* %retval, align 4, !dbg !7586
  br label %return, !dbg !7586

return:                                           ; preds = %if.end17, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !7587
  ret i32 %19, !dbg !7587
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @drm_mode_match(%struct.drm_display_mode*, %struct.drm_display_mode*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_mode_alternate_timings(i8 zeroext %vic, %struct.drm_display_mode* %mode) #0 !dbg !7588 {
entry:
  %retval = alloca i1, align 1
  %vic.addr = alloca i8, align 1
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  store i8 %vic, i8* %vic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr, metadata !7591, metadata !DIExpression()), !dbg !7592
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !7593, metadata !DIExpression()), !dbg !7594
  br label %do.body, !dbg !7595

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7596

do.end:                                           ; preds = %do.body
  %0 = load i8, i8* %vic.addr, align 1, !dbg !7598
  %conv = zext i8 %0 to i32, !dbg !7598
  %cmp = icmp eq i32 %conv, 8, !dbg !7600
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7601

lor.lhs.false:                                    ; preds = %do.end
  %1 = load i8, i8* %vic.addr, align 1, !dbg !7602
  %conv2 = zext i8 %1 to i32, !dbg !7602
  %cmp3 = icmp eq i32 %conv2, 9, !dbg !7603
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false5, !dbg !7604

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %2 = load i8, i8* %vic.addr, align 1, !dbg !7605
  %conv6 = zext i8 %2 to i32, !dbg !7605
  %cmp7 = icmp eq i32 %conv6, 12, !dbg !7606
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false9, !dbg !7607

lor.lhs.false9:                                   ; preds = %lor.lhs.false5
  %3 = load i8, i8* %vic.addr, align 1, !dbg !7608
  %conv10 = zext i8 %3 to i32, !dbg !7608
  %cmp11 = icmp eq i32 %conv10, 13, !dbg !7609
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false16, !dbg !7610

land.lhs.true:                                    ; preds = %lor.lhs.false9, %lor.lhs.false5, %lor.lhs.false, %do.end
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7611
  %vtotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %4, i32 0, i32 9, !dbg !7612
  %5 = load i16, i16* %vtotal, align 4, !dbg !7612
  %conv13 = zext i16 %5 to i32, !dbg !7611
  %cmp14 = icmp slt i32 %conv13, 263, !dbg !7613
  br i1 %cmp14, label %if.then, label %lor.lhs.false16, !dbg !7614

lor.lhs.false16:                                  ; preds = %land.lhs.true, %lor.lhs.false9
  %6 = load i8, i8* %vic.addr, align 1, !dbg !7615
  %conv17 = zext i8 %6 to i32, !dbg !7615
  %cmp18 = icmp eq i32 %conv17, 23, !dbg !7616
  br i1 %cmp18, label %land.lhs.true32, label %lor.lhs.false20, !dbg !7617

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %7 = load i8, i8* %vic.addr, align 1, !dbg !7618
  %conv21 = zext i8 %7 to i32, !dbg !7618
  %cmp22 = icmp eq i32 %conv21, 24, !dbg !7619
  br i1 %cmp22, label %land.lhs.true32, label %lor.lhs.false24, !dbg !7620

lor.lhs.false24:                                  ; preds = %lor.lhs.false20
  %8 = load i8, i8* %vic.addr, align 1, !dbg !7621
  %conv25 = zext i8 %8 to i32, !dbg !7621
  %cmp26 = icmp eq i32 %conv25, 27, !dbg !7622
  br i1 %cmp26, label %land.lhs.true32, label %lor.lhs.false28, !dbg !7623

lor.lhs.false28:                                  ; preds = %lor.lhs.false24
  %9 = load i8, i8* %vic.addr, align 1, !dbg !7624
  %conv29 = zext i8 %9 to i32, !dbg !7624
  %cmp30 = icmp eq i32 %conv29, 28, !dbg !7625
  br i1 %cmp30, label %land.lhs.true32, label %if.end, !dbg !7626

land.lhs.true32:                                  ; preds = %lor.lhs.false28, %lor.lhs.false24, %lor.lhs.false20, %lor.lhs.false16
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7627
  %vtotal33 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 9, !dbg !7628
  %11 = load i16, i16* %vtotal33, align 4, !dbg !7628
  %conv34 = zext i16 %11 to i32, !dbg !7627
  %cmp35 = icmp slt i32 %conv34, 314, !dbg !7629
  br i1 %cmp35, label %if.then, label %if.end, !dbg !7630

if.then:                                          ; preds = %land.lhs.true32, %land.lhs.true
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7631
  %vsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %12, i32 0, i32 7, !dbg !7633
  %13 = load i16, i16* %vsync_start, align 8, !dbg !7634
  %inc = add i16 %13, 1, !dbg !7634
  store i16 %inc, i16* %vsync_start, align 8, !dbg !7634
  %14 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7635
  %vsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %14, i32 0, i32 8, !dbg !7636
  %15 = load i16, i16* %vsync_end, align 2, !dbg !7637
  %inc37 = add i16 %15, 1, !dbg !7637
  store i16 %inc37, i16* %vsync_end, align 2, !dbg !7637
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !7638
  %vtotal38 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %16, i32 0, i32 9, !dbg !7639
  %17 = load i16, i16* %vtotal38, align 4, !dbg !7640
  %inc39 = add i16 %17, 1, !dbg !7640
  store i16 %inc39, i16* %vtotal38, align 4, !dbg !7640
  store i1 true, i1* %retval, align 1, !dbg !7641
  br label %return, !dbg !7641

if.end:                                           ; preds = %land.lhs.true32, %lor.lhs.false28
  store i1 false, i1* %retval, align 1, !dbg !7642
  br label %return, !dbg !7642

return:                                           ; preds = %if.end, %if.then
  %18 = load i1, i1* %retval, align 1, !dbg !7643
  ret i1 %18, !dbg !7643
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @cea_next_vic(i8 zeroext %vic) #0 !dbg !7644 {
entry:
  %vic.addr = alloca i8, align 1
  store i8 %vic, i8* %vic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr, metadata !7647, metadata !DIExpression()), !dbg !7648
  %0 = load i8, i8* %vic.addr, align 1, !dbg !7649
  %inc = add i8 %0, 1, !dbg !7649
  store i8 %inc, i8* %vic.addr, align 1, !dbg !7649
  %conv = zext i8 %inc to i64, !dbg !7649
  %cmp = icmp eq i64 %conv, 128, !dbg !7651
  br i1 %cmp, label %if.then, label %if.end, !dbg !7652

if.then:                                          ; preds = %entry
  store i8 -63, i8* %vic.addr, align 1, !dbg !7653
  br label %if.end, !dbg !7654

if.end:                                           ; preds = %if.then, %entry
  %1 = load i8, i8* %vic.addr, align 1, !dbg !7655
  ret i8 %1, !dbg !7656
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.drm_display_mode* @drm_display_mode_from_cea_vic(%struct.drm_device* %dev, i8 zeroext %video_code) #0 !dbg !7657 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !7660
  %retval = alloca %struct.drm_display_mode*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %video_code.addr = alloca i8, align 1
  %cea_mode = alloca %struct.drm_display_mode*, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7662, metadata !DIExpression()), !dbg !7663
  store i8 %video_code, i8* %video_code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_code.addr, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %cea_mode, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !7668, metadata !DIExpression()), !dbg !7669
  %0 = load i8, i8* %video_code.addr, align 1, !dbg !7670
  store i8 %0, i8* %vic.addr.i, align 1
  %1 = load i8, i8* %vic.addr.i, align 1, !dbg !7671
  %conv.i = zext i8 %1 to i32, !dbg !7671
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !7672
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !7673

land.lhs.true.i:                                  ; preds = %entry
  %2 = load i8, i8* %vic.addr.i, align 1, !dbg !7674
  %conv4.i = zext i8 %2 to i64, !dbg !7674
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !7675
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !7676

if.then.i:                                        ; preds = %land.lhs.true.i
  %3 = load i8, i8* %vic.addr.i, align 1, !dbg !7677
  %conv7.i = zext i8 %3 to i32, !dbg !7677
  %sub.i = sub i32 %conv7.i, 1, !dbg !7678
  %idxprom.i = sext i32 %sub.i to i64, !dbg !7679
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !7679
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !7680
  br label %cea_mode_for_vic.exit, !dbg !7680

if.end.i:                                         ; preds = %land.lhs.true.i, %entry
  %4 = load i8, i8* %vic.addr.i, align 1, !dbg !7681
  %conv8.i = zext i8 %4 to i32, !dbg !7681
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !7682
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !7683

land.lhs.true11.i:                                ; preds = %if.end.i
  %5 = load i8, i8* %vic.addr.i, align 1, !dbg !7684
  %conv12.i = zext i8 %5 to i64, !dbg !7684
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !7685
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !7686

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %6 = load i8, i8* %vic.addr.i, align 1, !dbg !7687
  %conv16.i = zext i8 %6 to i32, !dbg !7687
  %sub17.i = sub i32 %conv16.i, 193, !dbg !7688
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !7689
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !7689
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !7690
  br label %cea_mode_for_vic.exit, !dbg !7690

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !7691
  br label %cea_mode_for_vic.exit, !dbg !7691

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !7692
  store %struct.drm_display_mode* %7, %struct.drm_display_mode** %cea_mode, align 8, !dbg !7693
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !7694
  %tobool = icmp ne %struct.drm_display_mode* %8, null, !dbg !7694
  br i1 %tobool, label %if.end, label %if.then, !dbg !7696

if.then:                                          ; preds = %cea_mode_for_vic.exit
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !7697
  br label %return, !dbg !7697

if.end:                                           ; preds = %cea_mode_for_vic.exit
  %9 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7698
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !7699
  %call1 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %9, %struct.drm_display_mode* %10) #8, !dbg !7700
  store %struct.drm_display_mode* %call1, %struct.drm_display_mode** %newmode, align 8, !dbg !7701
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !7702
  %tobool2 = icmp ne %struct.drm_display_mode* %11, null, !dbg !7702
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7704

if.then3:                                         ; preds = %if.end
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !7705
  br label %return, !dbg !7705

if.end4:                                          ; preds = %if.end
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !7706
  store %struct.drm_display_mode* %12, %struct.drm_display_mode** %retval, align 8, !dbg !7707
  br label %return, !dbg !7707

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval, align 8, !dbg !7708
  ret %struct.drm_display_mode* %13, !dbg !7708
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_edid_get_monitor_name(%struct.edid* %edid, i8* %name, i32 %bufsize) #0 !dbg !7709 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %name.addr = alloca i8*, align 8
  %bufsize.addr = alloca i32, align 4
  %name_length = alloca i32, align 4
  %buf = alloca [13 x i8], align 1
  %__UNIQUE_ID___x276 = alloca i32, align 4
  %__UNIQUE_ID___y277 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !7712, metadata !DIExpression()), !dbg !7713
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7714, metadata !DIExpression()), !dbg !7715
  store i32 %bufsize, i32* %bufsize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bufsize.addr, metadata !7716, metadata !DIExpression()), !dbg !7717
  call void @llvm.dbg.declare(metadata i32* %name_length, metadata !7718, metadata !DIExpression()), !dbg !7719
  call void @llvm.dbg.declare(metadata [13 x i8]* %buf, metadata !7720, metadata !DIExpression()), !dbg !7722
  %0 = load i32, i32* %bufsize.addr, align 4, !dbg !7723
  %cmp = icmp sle i32 %0, 0, !dbg !7725
  br i1 %cmp, label %if.then, label %if.end, !dbg !7726

if.then:                                          ; preds = %entry
  br label %return, !dbg !7727

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x276, metadata !7728, metadata !DIExpression()), !dbg !7730
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7730
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 0, !dbg !7730
  %call = call i32 @get_monitor_name(%struct.edid* %1, i8* %arraydecay) #8, !dbg !7730
  store i32 %call, i32* %__UNIQUE_ID___x276, align 4, !dbg !7730
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y277, metadata !7731, metadata !DIExpression()), !dbg !7730
  %2 = load i32, i32* %bufsize.addr, align 4, !dbg !7730
  %sub = sub i32 %2, 1, !dbg !7730
  store i32 %sub, i32* %__UNIQUE_ID___y277, align 4, !dbg !7730
  %3 = load i32, i32* %__UNIQUE_ID___x276, align 4, !dbg !7730
  %4 = load i32, i32* %__UNIQUE_ID___y277, align 4, !dbg !7730
  %cmp1 = icmp slt i32 %3, %4, !dbg !7730
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !7730

cond.true:                                        ; preds = %if.end
  %5 = load i32, i32* %__UNIQUE_ID___x276, align 4, !dbg !7730
  br label %cond.end, !dbg !7730

cond.false:                                       ; preds = %if.end
  %6 = load i32, i32* %__UNIQUE_ID___y277, align 4, !dbg !7730
  br label %cond.end, !dbg !7730

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ], !dbg !7730
  store i32 %cond, i32* %tmp, align 4, !dbg !7730
  %7 = load i32, i32* %tmp, align 4, !dbg !7730
  store i32 %7, i32* %name_length, align 4, !dbg !7732
  %8 = load i8*, i8** %name.addr, align 8, !dbg !7733
  %arraydecay2 = getelementptr inbounds [13 x i8], [13 x i8]* %buf, i64 0, i64 0, !dbg !7734
  %9 = load i32, i32* %name_length, align 4, !dbg !7735
  %conv = sext i32 %9 to i64, !dbg !7735
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %arraydecay2, i64 %conv, i1 false), !dbg !7734
  %10 = load i8*, i8** %name.addr, align 8, !dbg !7736
  %11 = load i32, i32* %name_length, align 4, !dbg !7737
  %idxprom = sext i32 %11 to i64, !dbg !7736
  %arrayidx = getelementptr i8, i8* %10, i64 %idxprom, !dbg !7736
  store i8 0, i8* %arrayidx, align 1, !dbg !7738
  br label %return, !dbg !7739

return:                                           ; preds = %cond.end, %if.then
  ret void, !dbg !7739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @get_monitor_name(%struct.edid* %edid, i8* %name) #0 !dbg !7740 {
entry:
  %retval = alloca i32, align 4
  %edid.addr = alloca %struct.edid*, align 8
  %name.addr = alloca i8*, align 8
  %edid_name = alloca i8*, align 8
  %mnl = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.declare(metadata i8** %edid_name, metadata !7747, metadata !DIExpression()), !dbg !7748
  store i8* null, i8** %edid_name, align 8, !dbg !7748
  call void @llvm.dbg.declare(metadata i32* %mnl, metadata !7749, metadata !DIExpression()), !dbg !7750
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7751
  %tobool = icmp ne %struct.edid* %0, null, !dbg !7751
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !7753

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %name.addr, align 8, !dbg !7754
  %tobool1 = icmp ne i8* %1, null, !dbg !7754
  br i1 %tobool1, label %if.end, label %if.then, !dbg !7755

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !7756
  br label %return, !dbg !7756

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7757
  %3 = bitcast %struct.edid* %2 to i8*, !dbg !7758
  %4 = bitcast i8** %edid_name to i8*, !dbg !7759
  call void @drm_for_each_detailed_block(i8* %3, void (%struct.detailed_timing*, i8*)* @monitor_name, i8* %4) #8, !dbg !7760
  store i32 0, i32* %mnl, align 4, !dbg !7761
  br label %for.cond, !dbg !7763

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i8*, i8** %edid_name, align 8, !dbg !7764
  %tobool2 = icmp ne i8* %5, null, !dbg !7764
  br i1 %tobool2, label %land.rhs, label %land.end, !dbg !7766

land.rhs:                                         ; preds = %for.cond
  %6 = load i32, i32* %mnl, align 4, !dbg !7767
  %cmp = icmp slt i32 %6, 13, !dbg !7768
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %7 = phi i1 [ false, %for.cond ], [ %cmp, %land.rhs ], !dbg !7769
  br i1 %7, label %for.body, label %for.end, !dbg !7770

for.body:                                         ; preds = %land.end
  %8 = load i8*, i8** %edid_name, align 8, !dbg !7771
  %9 = load i32, i32* %mnl, align 4, !dbg !7774
  %idxprom = sext i32 %9 to i64, !dbg !7771
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !7771
  %10 = load i8, i8* %arrayidx, align 1, !dbg !7771
  %conv = sext i8 %10 to i32, !dbg !7771
  %cmp3 = icmp eq i32 %conv, 10, !dbg !7775
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !7776

if.then5:                                         ; preds = %for.body
  br label %for.end, !dbg !7777

if.end6:                                          ; preds = %for.body
  %11 = load i8*, i8** %edid_name, align 8, !dbg !7778
  %12 = load i32, i32* %mnl, align 4, !dbg !7779
  %idxprom7 = sext i32 %12 to i64, !dbg !7778
  %arrayidx8 = getelementptr i8, i8* %11, i64 %idxprom7, !dbg !7778
  %13 = load i8, i8* %arrayidx8, align 1, !dbg !7778
  %14 = load i8*, i8** %name.addr, align 8, !dbg !7780
  %15 = load i32, i32* %mnl, align 4, !dbg !7781
  %idxprom9 = sext i32 %15 to i64, !dbg !7780
  %arrayidx10 = getelementptr i8, i8* %14, i64 %idxprom9, !dbg !7780
  store i8 %13, i8* %arrayidx10, align 1, !dbg !7782
  br label %for.inc, !dbg !7783

for.inc:                                          ; preds = %if.end6
  %16 = load i32, i32* %mnl, align 4, !dbg !7784
  %inc = add i32 %16, 1, !dbg !7784
  store i32 %inc, i32* %mnl, align 4, !dbg !7784
  br label %for.cond, !dbg !7785, !llvm.loop !7786

for.end:                                          ; preds = %if.then5, %land.end
  %17 = load i32, i32* %mnl, align 4, !dbg !7788
  store i32 %17, i32* %retval, align 4, !dbg !7789
  br label %return, !dbg !7789

return:                                           ; preds = %for.end, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !7790
  ret i32 %18, !dbg !7790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_edid_to_sad(%struct.edid* %edid, %struct.cea_sad** %sads) #0 !dbg !7791 {
entry:
  %retval = alloca i32, align 4
  %edid.addr = alloca %struct.edid*, align 8
  %sads.addr = alloca %struct.cea_sad**, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %dbl = alloca i32, align 4
  %cea = alloca i8*, align 8
  %db = alloca i8*, align 8
  %j = alloca i32, align 4
  %sad = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !7802, metadata !DIExpression()), !dbg !7803
  store %struct.cea_sad** %sads, %struct.cea_sad*** %sads.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cea_sad*** %sads.addr, metadata !7804, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.declare(metadata i32* %count, metadata !7806, metadata !DIExpression()), !dbg !7807
  store i32 0, i32* %count, align 4, !dbg !7807
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7808, metadata !DIExpression()), !dbg !7809
  call void @llvm.dbg.declare(metadata i32* %start, metadata !7810, metadata !DIExpression()), !dbg !7811
  call void @llvm.dbg.declare(metadata i32* %end, metadata !7812, metadata !DIExpression()), !dbg !7813
  call void @llvm.dbg.declare(metadata i32* %dbl, metadata !7814, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.declare(metadata i8** %cea, metadata !7816, metadata !DIExpression()), !dbg !7817
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7818
  %call = call i8* @drm_find_cea_extension(%struct.edid* %0) #8, !dbg !7819
  store i8* %call, i8** %cea, align 8, !dbg !7820
  %1 = load i8*, i8** %cea, align 8, !dbg !7821
  %tobool = icmp ne i8* %1, null, !dbg !7821
  br i1 %tobool, label %if.end, label %if.then, !dbg !7823

if.then:                                          ; preds = %entry
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !7824
  store i32 0, i32* %retval, align 4, !dbg !7826
  br label %return, !dbg !7826

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %cea, align 8, !dbg !7827
  %call1 = call i32 @cea_revision(i8* %2) #8, !dbg !7829
  %cmp = icmp slt i32 %call1, 3, !dbg !7830
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !7831

if.then2:                                         ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0)) #8, !dbg !7832
  store i32 0, i32* %retval, align 4, !dbg !7834
  br label %return, !dbg !7834

if.end3:                                          ; preds = %if.end
  %3 = load i8*, i8** %cea, align 8, !dbg !7835
  %call4 = call i32 @cea_db_offsets(i8* %3, i32* %start, i32* %end) #8, !dbg !7837
  %tobool5 = icmp ne i32 %call4, 0, !dbg !7837
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7838

if.then6:                                         ; preds = %if.end3
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #8, !dbg !7839
  store i32 -71, i32* %retval, align 4, !dbg !7841
  br label %return, !dbg !7841

if.end7:                                          ; preds = %if.end3
  %4 = load i32, i32* %start, align 4, !dbg !7842
  store i32 %4, i32* %i, align 4, !dbg !7842
  br label %for.cond, !dbg !7842

for.cond:                                         ; preds = %for.inc49, %if.end7
  %5 = load i32, i32* %i, align 4, !dbg !7844
  %6 = load i32, i32* %end, align 4, !dbg !7844
  %cmp8 = icmp slt i32 %5, %6, !dbg !7844
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !7844

land.rhs:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !7844
  %8 = load i8*, i8** %cea, align 8, !dbg !7844
  %9 = load i32, i32* %i, align 4, !dbg !7844
  %idxprom = sext i32 %9 to i64, !dbg !7844
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !7844
  %call9 = call i32 @cea_db_payload_len(i8* %arrayidx) #8, !dbg !7844
  %add = add i32 %7, %call9, !dbg !7844
  %10 = load i32, i32* %end, align 4, !dbg !7844
  %cmp10 = icmp slt i32 %add, %10, !dbg !7844
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ], !dbg !7846
  br i1 %11, label %for.body, label %for.end55, !dbg !7842

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %db, metadata !7847, metadata !DIExpression()), !dbg !7849
  %12 = load i8*, i8** %cea, align 8, !dbg !7850
  %13 = load i32, i32* %i, align 4, !dbg !7851
  %idxprom11 = sext i32 %13 to i64, !dbg !7850
  %arrayidx12 = getelementptr i8, i8* %12, i64 %idxprom11, !dbg !7850
  store i8* %arrayidx12, i8** %db, align 8, !dbg !7849
  %14 = load i8*, i8** %db, align 8, !dbg !7852
  %call13 = call i32 @cea_db_tag(i8* %14) #8, !dbg !7854
  %cmp14 = icmp eq i32 %call13, 1, !dbg !7855
  br i1 %cmp14, label %if.then15, label %if.end48, !dbg !7856

if.then15:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7857, metadata !DIExpression()), !dbg !7859
  %15 = load i8*, i8** %db, align 8, !dbg !7860
  %call16 = call i32 @cea_db_payload_len(i8* %15) #8, !dbg !7861
  store i32 %call16, i32* %dbl, align 4, !dbg !7862
  %16 = load i32, i32* %dbl, align 4, !dbg !7863
  %div = sdiv i32 %16, 3, !dbg !7864
  store i32 %div, i32* %count, align 4, !dbg !7865
  %17 = load i32, i32* %count, align 4, !dbg !7866
  %conv = sext i32 %17 to i64, !dbg !7866
  %call17 = call i8* @kcalloc(i64 %conv, i64 4, i32 3264) #8, !dbg !7867
  %18 = bitcast i8* %call17 to %struct.cea_sad*, !dbg !7867
  %19 = load %struct.cea_sad**, %struct.cea_sad*** %sads.addr, align 8, !dbg !7868
  store %struct.cea_sad* %18, %struct.cea_sad** %19, align 8, !dbg !7869
  %20 = load %struct.cea_sad**, %struct.cea_sad*** %sads.addr, align 8, !dbg !7870
  %21 = load %struct.cea_sad*, %struct.cea_sad** %20, align 8, !dbg !7872
  %tobool18 = icmp ne %struct.cea_sad* %21, null, !dbg !7872
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !7873

if.then19:                                        ; preds = %if.then15
  store i32 -12, i32* %retval, align 4, !dbg !7874
  br label %return, !dbg !7874

if.end20:                                         ; preds = %if.then15
  store i32 0, i32* %j, align 4, !dbg !7875
  br label %for.cond21, !dbg !7877

for.cond21:                                       ; preds = %for.inc, %if.end20
  %22 = load i32, i32* %j, align 4, !dbg !7878
  %23 = load i32, i32* %count, align 4, !dbg !7880
  %cmp22 = icmp slt i32 %22, %23, !dbg !7881
  br i1 %cmp22, label %for.body24, label %for.end, !dbg !7882

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata i8** %sad, metadata !7883, metadata !DIExpression()), !dbg !7885
  %24 = load i8*, i8** %db, align 8, !dbg !7886
  %25 = load i32, i32* %j, align 4, !dbg !7887
  %mul = mul i32 %25, 3, !dbg !7888
  %add25 = add i32 1, %mul, !dbg !7889
  %idxprom26 = sext i32 %add25 to i64, !dbg !7886
  %arrayidx27 = getelementptr i8, i8* %24, i64 %idxprom26, !dbg !7886
  store i8* %arrayidx27, i8** %sad, align 8, !dbg !7885
  %26 = load i8*, i8** %sad, align 8, !dbg !7890
  %arrayidx28 = getelementptr i8, i8* %26, i64 0, !dbg !7890
  %27 = load i8, i8* %arrayidx28, align 1, !dbg !7890
  %conv29 = zext i8 %27 to i32, !dbg !7890
  %and = and i32 %conv29, 120, !dbg !7891
  %shr = ashr i32 %and, 3, !dbg !7892
  %conv30 = trunc i32 %shr to i8, !dbg !7893
  %28 = load %struct.cea_sad**, %struct.cea_sad*** %sads.addr, align 8, !dbg !7894
  %29 = load %struct.cea_sad*, %struct.cea_sad** %28, align 8, !dbg !7895
  %30 = load i32, i32* %j, align 4, !dbg !7896
  %idxprom31 = sext i32 %30 to i64, !dbg !7897
  %arrayidx32 = getelementptr %struct.cea_sad, %struct.cea_sad* %29, i64 %idxprom31, !dbg !7897
  %format = getelementptr inbounds %struct.cea_sad, %struct.cea_sad* %arrayidx32, i32 0, i32 0, !dbg !7898
  store i8 %conv30, i8* %format, align 1, !dbg !7899
  %31 = load i8*, i8** %sad, align 8, !dbg !7900
  %arrayidx33 = getelementptr i8, i8* %31, i64 0, !dbg !7900
  %32 = load i8, i8* %arrayidx33, align 1, !dbg !7900
  %conv34 = zext i8 %32 to i32, !dbg !7900
  %and35 = and i32 %conv34, 7, !dbg !7901
  %conv36 = trunc i32 %and35 to i8, !dbg !7900
  %33 = load %struct.cea_sad**, %struct.cea_sad*** %sads.addr, align 8, !dbg !7902
  %34 = load %struct.cea_sad*, %struct.cea_sad** %33, align 8, !dbg !7903
  %35 = load i32, i32* %j, align 4, !dbg !7904
  %idxprom37 = sext i32 %35 to i64, !dbg !7905
  %arrayidx38 = getelementptr %struct.cea_sad, %struct.cea_sad* %34, i64 %idxprom37, !dbg !7905
  %channels = getelementptr inbounds %struct.cea_sad, %struct.cea_sad* %arrayidx38, i32 0, i32 1, !dbg !7906
  store i8 %conv36, i8* %channels, align 1, !dbg !7907
  %36 = load i8*, i8** %sad, align 8, !dbg !7908
  %arrayidx39 = getelementptr i8, i8* %36, i64 1, !dbg !7908
  %37 = load i8, i8* %arrayidx39, align 1, !dbg !7908
  %conv40 = zext i8 %37 to i32, !dbg !7908
  %and41 = and i32 %conv40, 127, !dbg !7909
  %conv42 = trunc i32 %and41 to i8, !dbg !7908
  %38 = load %struct.cea_sad**, %struct.cea_sad*** %sads.addr, align 8, !dbg !7910
  %39 = load %struct.cea_sad*, %struct.cea_sad** %38, align 8, !dbg !7911
  %40 = load i32, i32* %j, align 4, !dbg !7912
  %idxprom43 = sext i32 %40 to i64, !dbg !7913
  %arrayidx44 = getelementptr %struct.cea_sad, %struct.cea_sad* %39, i64 %idxprom43, !dbg !7913
  %freq = getelementptr inbounds %struct.cea_sad, %struct.cea_sad* %arrayidx44, i32 0, i32 2, !dbg !7914
  store i8 %conv42, i8* %freq, align 1, !dbg !7915
  %41 = load i8*, i8** %sad, align 8, !dbg !7916
  %arrayidx45 = getelementptr i8, i8* %41, i64 2, !dbg !7916
  %42 = load i8, i8* %arrayidx45, align 1, !dbg !7916
  %43 = load %struct.cea_sad**, %struct.cea_sad*** %sads.addr, align 8, !dbg !7917
  %44 = load %struct.cea_sad*, %struct.cea_sad** %43, align 8, !dbg !7918
  %45 = load i32, i32* %j, align 4, !dbg !7919
  %idxprom46 = sext i32 %45 to i64, !dbg !7920
  %arrayidx47 = getelementptr %struct.cea_sad, %struct.cea_sad* %44, i64 %idxprom46, !dbg !7920
  %byte2 = getelementptr inbounds %struct.cea_sad, %struct.cea_sad* %arrayidx47, i32 0, i32 3, !dbg !7921
  store i8 %42, i8* %byte2, align 1, !dbg !7922
  br label %for.inc, !dbg !7923

for.inc:                                          ; preds = %for.body24
  %46 = load i32, i32* %j, align 4, !dbg !7924
  %inc = add i32 %46, 1, !dbg !7924
  store i32 %inc, i32* %j, align 4, !dbg !7924
  br label %for.cond21, !dbg !7925, !llvm.loop !7926

for.end:                                          ; preds = %for.cond21
  br label %for.end55, !dbg !7928

if.end48:                                         ; preds = %for.body
  br label %for.inc49, !dbg !7929

for.inc49:                                        ; preds = %if.end48
  %47 = load i8*, i8** %cea, align 8, !dbg !7844
  %48 = load i32, i32* %i, align 4, !dbg !7844
  %idxprom50 = sext i32 %48 to i64, !dbg !7844
  %arrayidx51 = getelementptr i8, i8* %47, i64 %idxprom50, !dbg !7844
  %call52 = call i32 @cea_db_payload_len(i8* %arrayidx51) #8, !dbg !7844
  %add53 = add i32 %call52, 1, !dbg !7844
  %49 = load i32, i32* %i, align 4, !dbg !7844
  %add54 = add i32 %49, %add53, !dbg !7844
  store i32 %add54, i32* %i, align 4, !dbg !7844
  br label %for.cond, !dbg !7844, !llvm.loop !7930

for.end55:                                        ; preds = %for.end, %land.end
  %50 = load i32, i32* %count, align 4, !dbg !7932
  store i32 %50, i32* %retval, align 4, !dbg !7933
  br label %return, !dbg !7933

return:                                           ; preds = %for.end55, %if.then19, %if.then6, %if.then2, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !7934
  ret i32 %51, !dbg !7934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @drm_find_cea_extension(%struct.edid* %edid) #0 !dbg !7935 {
entry:
  %retval = alloca i8*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %length = alloca i32, align 4
  %idx = alloca i32, align 4
  %block = alloca %struct.displayid_block*, align 8
  %cea = alloca i8*, align 8
  %displayid = alloca i8*, align 8
  %ext_index = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata i32* %length, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata %struct.displayid_block** %block, metadata !7944, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.declare(metadata i8** %cea, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.declare(metadata i8** %displayid, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata i32* %ext_index, metadata !7950, metadata !DIExpression()), !dbg !7951
  store i32 0, i32* %ext_index, align 4, !dbg !7952
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7953
  %call = call i8* @drm_find_edid_extension(%struct.edid* %0, i32 2, i32* %ext_index) #8, !dbg !7954
  store i8* %call, i8** %cea, align 8, !dbg !7955
  %1 = load i8*, i8** %cea, align 8, !dbg !7956
  %tobool = icmp ne i8* %1, null, !dbg !7956
  br i1 %tobool, label %if.then, label %if.end, !dbg !7958

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %cea, align 8, !dbg !7959
  store i8* %2, i8** %retval, align 8, !dbg !7960
  br label %return, !dbg !7960

if.end:                                           ; preds = %entry
  store i32 0, i32* %ext_index, align 4, !dbg !7961
  br label %for.cond, !dbg !7962

for.cond:                                         ; preds = %for.end, %if.end
  %3 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !7963
  %call1 = call i8* @drm_find_displayid_extension(%struct.edid* %3, i32* %length, i32* %idx, i32* %ext_index) #8, !dbg !7967
  store i8* %call1, i8** %displayid, align 8, !dbg !7968
  %4 = load i8*, i8** %displayid, align 8, !dbg !7969
  %tobool2 = icmp ne i8* %4, null, !dbg !7969
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7971

if.then3:                                         ; preds = %for.cond
  store i8* null, i8** %retval, align 8, !dbg !7972
  br label %return, !dbg !7972

if.end4:                                          ; preds = %for.cond
  %5 = load i32, i32* %idx, align 4, !dbg !7973
  %conv = sext i32 %5 to i64, !dbg !7973
  %add = add i64 %conv, 4, !dbg !7973
  %conv5 = trunc i64 %add to i32, !dbg !7973
  store i32 %conv5, i32* %idx, align 4, !dbg !7973
  %6 = load i8*, i8** %displayid, align 8, !dbg !7974
  %7 = load i32, i32* %idx, align 4, !dbg !7974
  %idxprom = sext i32 %7 to i64, !dbg !7974
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !7974
  %8 = bitcast i8* %arrayidx to %struct.displayid_block*, !dbg !7974
  store %struct.displayid_block* %8, %struct.displayid_block** %block, align 8, !dbg !7974
  br label %for.cond6, !dbg !7974

for.cond6:                                        ; preds = %for.inc, %if.end4
  %9 = load i32, i32* %idx, align 4, !dbg !7976
  %conv7 = sext i32 %9 to i64, !dbg !7976
  %add8 = add i64 %conv7, 3, !dbg !7976
  %10 = load i32, i32* %length, align 4, !dbg !7976
  %conv9 = sext i32 %10 to i64, !dbg !7976
  %cmp = icmp ule i64 %add8, %conv9, !dbg !7976
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7976

land.lhs.true:                                    ; preds = %for.cond6
  %11 = load i32, i32* %idx, align 4, !dbg !7976
  %conv11 = sext i32 %11 to i64, !dbg !7976
  %add12 = add i64 %conv11, 3, !dbg !7976
  %12 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !7976
  %num_bytes = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %12, i32 0, i32 2, !dbg !7976
  %13 = load i8, i8* %num_bytes, align 1, !dbg !7976
  %conv13 = zext i8 %13 to i64, !dbg !7976
  %add14 = add i64 %add12, %conv13, !dbg !7976
  %14 = load i32, i32* %length, align 4, !dbg !7976
  %conv15 = sext i32 %14 to i64, !dbg !7976
  %cmp16 = icmp ule i64 %add14, %conv15, !dbg !7976
  br i1 %cmp16, label %land.rhs, label %land.end, !dbg !7976

land.rhs:                                         ; preds = %land.lhs.true
  %15 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !7976
  %num_bytes18 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %15, i32 0, i32 2, !dbg !7976
  %16 = load i8, i8* %num_bytes18, align 1, !dbg !7976
  %conv19 = zext i8 %16 to i32, !dbg !7976
  %cmp20 = icmp sgt i32 %conv19, 0, !dbg !7976
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond6
  %17 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond6 ], [ %cmp20, %land.rhs ], !dbg !7978
  br i1 %17, label %for.body, label %for.end, !dbg !7974

for.body:                                         ; preds = %land.end
  %18 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !7979
  %tag = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %18, i32 0, i32 0, !dbg !7982
  %19 = load i8, i8* %tag, align 1, !dbg !7982
  %conv22 = zext i8 %19 to i32, !dbg !7979
  %cmp23 = icmp eq i32 %conv22, 129, !dbg !7983
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !7984

if.then25:                                        ; preds = %for.body
  %20 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !7985
  %21 = bitcast %struct.displayid_block* %20 to i8*, !dbg !7986
  store i8* %21, i8** %retval, align 8, !dbg !7987
  br label %return, !dbg !7987

if.end26:                                         ; preds = %for.body
  br label %for.inc, !dbg !7988

for.inc:                                          ; preds = %if.end26
  %22 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !7976
  %num_bytes27 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %22, i32 0, i32 2, !dbg !7976
  %23 = load i8, i8* %num_bytes27, align 1, !dbg !7976
  %conv28 = zext i8 %23 to i64, !dbg !7976
  %add29 = add i64 3, %conv28, !dbg !7976
  %24 = load i32, i32* %idx, align 4, !dbg !7976
  %conv30 = sext i32 %24 to i64, !dbg !7976
  %add31 = add i64 %conv30, %add29, !dbg !7976
  %conv32 = trunc i64 %add31 to i32, !dbg !7976
  store i32 %conv32, i32* %idx, align 4, !dbg !7976
  %25 = load i8*, i8** %displayid, align 8, !dbg !7976
  %26 = load i32, i32* %idx, align 4, !dbg !7976
  %idxprom33 = sext i32 %26 to i64, !dbg !7976
  %arrayidx34 = getelementptr i8, i8* %25, i64 %idxprom33, !dbg !7976
  %27 = bitcast i8* %arrayidx34 to %struct.displayid_block*, !dbg !7976
  store %struct.displayid_block* %27, %struct.displayid_block** %block, align 8, !dbg !7976
  br label %for.cond6, !dbg !7976, !llvm.loop !7989

for.end:                                          ; preds = %land.end
  br label %for.cond, !dbg !7991, !llvm.loop !7992

return:                                           ; preds = %if.then25, %if.then3, %if.then
  %28 = load i8*, i8** %retval, align 8, !dbg !7995
  ret i8* %28, !dbg !7995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cea_revision(i8* %cea) #0 !dbg !7996 {
entry:
  %cea.addr = alloca i8*, align 8
  store i8* %cea, i8** %cea.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cea.addr, metadata !7997, metadata !DIExpression()), !dbg !7998
  %0 = load i8*, i8** %cea.addr, align 8, !dbg !7999
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !7999
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7999
  %conv = zext i8 %1 to i32, !dbg !7999
  ret i32 %conv, !dbg !8000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cea_db_offsets(i8* %cea, i32* %start, i32* %end) #0 !dbg !8001 {
entry:
  %retval = alloca i32, align 4
  %cea.addr = alloca i8*, align 8
  %start.addr = alloca i32*, align 8
  %end.addr = alloca i32*, align 8
  store i8* %cea, i8** %cea.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cea.addr, metadata !8004, metadata !DIExpression()), !dbg !8005
  store i32* %start, i32** %start.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %start.addr, metadata !8006, metadata !DIExpression()), !dbg !8007
  store i32* %end, i32** %end.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %end.addr, metadata !8008, metadata !DIExpression()), !dbg !8009
  %0 = load i8*, i8** %cea.addr, align 8, !dbg !8010
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !8010
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8010
  %conv = zext i8 %1 to i32, !dbg !8010
  %cmp = icmp eq i32 %conv, 129, !dbg !8012
  br i1 %cmp, label %if.then, label %if.else, !dbg !8013

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %start.addr, align 8, !dbg !8014
  store i32 3, i32* %2, align 4, !dbg !8016
  %3 = load i32*, i32** %start.addr, align 8, !dbg !8017
  %4 = load i32, i32* %3, align 4, !dbg !8018
  %5 = load i8*, i8** %cea.addr, align 8, !dbg !8019
  %arrayidx2 = getelementptr i8, i8* %5, i64 2, !dbg !8019
  %6 = load i8, i8* %arrayidx2, align 1, !dbg !8019
  %conv3 = zext i8 %6 to i32, !dbg !8019
  %add = add i32 %4, %conv3, !dbg !8020
  %7 = load i32*, i32** %end.addr, align 8, !dbg !8021
  store i32 %add, i32* %7, align 4, !dbg !8022
  br label %if.end22, !dbg !8023

if.else:                                          ; preds = %entry
  %8 = load i8*, i8** %cea.addr, align 8, !dbg !8024
  %arrayidx4 = getelementptr i8, i8* %8, i64 0, !dbg !8024
  %9 = load i8, i8* %arrayidx4, align 1, !dbg !8024
  %conv5 = zext i8 %9 to i32, !dbg !8024
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !8026
  br i1 %cmp6, label %if.then8, label %if.else20, !dbg !8027

if.then8:                                         ; preds = %if.else
  %10 = load i32*, i32** %start.addr, align 8, !dbg !8028
  store i32 4, i32* %10, align 4, !dbg !8030
  %11 = load i8*, i8** %cea.addr, align 8, !dbg !8031
  %arrayidx9 = getelementptr i8, i8* %11, i64 2, !dbg !8031
  %12 = load i8, i8* %arrayidx9, align 1, !dbg !8031
  %conv10 = zext i8 %12 to i32, !dbg !8031
  %13 = load i32*, i32** %end.addr, align 8, !dbg !8032
  store i32 %conv10, i32* %13, align 4, !dbg !8033
  %14 = load i32*, i32** %end.addr, align 8, !dbg !8034
  %15 = load i32, i32* %14, align 4, !dbg !8036
  %cmp11 = icmp eq i32 %15, 0, !dbg !8037
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !8038

if.then13:                                        ; preds = %if.then8
  %16 = load i32*, i32** %end.addr, align 8, !dbg !8039
  store i32 127, i32* %16, align 4, !dbg !8040
  br label %if.end, !dbg !8041

if.end:                                           ; preds = %if.then13, %if.then8
  %17 = load i32*, i32** %end.addr, align 8, !dbg !8042
  %18 = load i32, i32* %17, align 4, !dbg !8044
  %cmp14 = icmp slt i32 %18, 4, !dbg !8045
  br i1 %cmp14, label %if.then18, label %lor.lhs.false, !dbg !8046

lor.lhs.false:                                    ; preds = %if.end
  %19 = load i32*, i32** %end.addr, align 8, !dbg !8047
  %20 = load i32, i32* %19, align 4, !dbg !8048
  %cmp16 = icmp sgt i32 %20, 127, !dbg !8049
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !8050

if.then18:                                        ; preds = %lor.lhs.false, %if.end
  store i32 -34, i32* %retval, align 4, !dbg !8051
  br label %return, !dbg !8051

if.end19:                                         ; preds = %lor.lhs.false
  br label %if.end21, !dbg !8052

if.else20:                                        ; preds = %if.else
  store i32 -95, i32* %retval, align 4, !dbg !8053
  br label %return, !dbg !8053

if.end21:                                         ; preds = %if.end19
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  store i32 0, i32* %retval, align 4, !dbg !8055
  br label %return, !dbg !8055

return:                                           ; preds = %if.end22, %if.else20, %if.then18
  %21 = load i32, i32* %retval, align 4, !dbg !8056
  ret i32 %21, !dbg !8056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cea_db_payload_len(i8* %db) #0 !dbg !8057 {
entry:
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  %0 = load i8*, i8** %db.addr, align 8, !dbg !8060
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !8060
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8060
  %conv = zext i8 %1 to i32, !dbg !8060
  %and = and i32 %conv, 31, !dbg !8061
  ret i32 %and, !dbg !8062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cea_db_tag(i8* %db) #0 !dbg !8063 {
entry:
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !8064, metadata !DIExpression()), !dbg !8065
  %0 = load i8*, i8** %db.addr, align 8, !dbg !8066
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !8066
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8066
  %conv = zext i8 %1 to i32, !dbg !8066
  %shr = ashr i32 %conv, 5, !dbg !8067
  ret i32 %shr, !dbg !8068
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !8069 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !8070, metadata !DIExpression()), !dbg !8071
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8072, metadata !DIExpression()), !dbg !8073
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8074, metadata !DIExpression()), !dbg !8075
  %0 = load i64, i64* %n.addr, align 8, !dbg !8076
  %1 = load i64, i64* %size.addr, align 8, !dbg !8077
  %2 = load i32, i32* %flags.addr, align 4, !dbg !8078
  %or = or i32 %2, 256, !dbg !8079
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #8, !dbg !8080
  ret i8* %call, !dbg !8081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_edid_to_speaker_allocation(%struct.edid* %edid, i8** %sadb) #0 !dbg !8082 {
entry:
  %retval = alloca i32, align 4
  %edid.addr = alloca %struct.edid*, align 8
  %sadb.addr = alloca i8**, align 8
  %count = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %dbl = alloca i32, align 4
  %cea = alloca i8*, align 8
  %db = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8085, metadata !DIExpression()), !dbg !8086
  store i8** %sadb, i8*** %sadb.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sadb.addr, metadata !8087, metadata !DIExpression()), !dbg !8088
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8089, metadata !DIExpression()), !dbg !8090
  store i32 0, i32* %count, align 4, !dbg !8090
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8091, metadata !DIExpression()), !dbg !8092
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8093, metadata !DIExpression()), !dbg !8094
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8095, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata i32* %dbl, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata i8** %cea, metadata !8099, metadata !DIExpression()), !dbg !8100
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8101
  %call = call i8* @drm_find_cea_extension(%struct.edid* %0) #8, !dbg !8102
  store i8* %call, i8** %cea, align 8, !dbg !8103
  %1 = load i8*, i8** %cea, align 8, !dbg !8104
  %tobool = icmp ne i8* %1, null, !dbg !8104
  br i1 %tobool, label %if.end, label %if.then, !dbg !8106

if.then:                                          ; preds = %entry
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #8, !dbg !8107
  store i32 0, i32* %retval, align 4, !dbg !8109
  br label %return, !dbg !8109

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %cea, align 8, !dbg !8110
  %call1 = call i32 @cea_revision(i8* %2) #8, !dbg !8112
  %cmp = icmp slt i32 %call1, 3, !dbg !8113
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !8114

if.then2:                                         ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0)) #8, !dbg !8115
  store i32 0, i32* %retval, align 4, !dbg !8117
  br label %return, !dbg !8117

if.end3:                                          ; preds = %if.end
  %3 = load i8*, i8** %cea, align 8, !dbg !8118
  %call4 = call i32 @cea_db_offsets(i8* %3, i32* %start, i32* %end) #8, !dbg !8120
  %tobool5 = icmp ne i32 %call4, 0, !dbg !8120
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !8121

if.then6:                                         ; preds = %if.end3
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.14, i64 0, i64 0)) #8, !dbg !8122
  store i32 -71, i32* %retval, align 4, !dbg !8124
  br label %return, !dbg !8124

if.end7:                                          ; preds = %if.end3
  %4 = load i32, i32* %start, align 4, !dbg !8125
  store i32 %4, i32* %i, align 4, !dbg !8125
  br label %for.cond, !dbg !8125

for.cond:                                         ; preds = %for.inc, %if.end7
  %5 = load i32, i32* %i, align 4, !dbg !8127
  %6 = load i32, i32* %end, align 4, !dbg !8127
  %cmp8 = icmp slt i32 %5, %6, !dbg !8127
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !8127

land.rhs:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !8127
  %8 = load i8*, i8** %cea, align 8, !dbg !8127
  %9 = load i32, i32* %i, align 4, !dbg !8127
  %idxprom = sext i32 %9 to i64, !dbg !8127
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !8127
  %call9 = call i32 @cea_db_payload_len(i8* %arrayidx) #8, !dbg !8127
  %add = add i32 %7, %call9, !dbg !8127
  %10 = load i32, i32* %end, align 4, !dbg !8127
  %cmp10 = icmp slt i32 %add, %10, !dbg !8127
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %cmp10, %land.rhs ], !dbg !8129
  br i1 %11, label %for.body, label %for.end, !dbg !8125

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %db, metadata !8130, metadata !DIExpression()), !dbg !8132
  %12 = load i8*, i8** %cea, align 8, !dbg !8133
  %13 = load i32, i32* %i, align 4, !dbg !8134
  %idxprom11 = sext i32 %13 to i64, !dbg !8133
  %arrayidx12 = getelementptr i8, i8* %12, i64 %idxprom11, !dbg !8133
  store i8* %arrayidx12, i8** %db, align 8, !dbg !8132
  %14 = load i8*, i8** %db, align 8, !dbg !8135
  %call13 = call i32 @cea_db_tag(i8* %14) #8, !dbg !8137
  %cmp14 = icmp eq i32 %call13, 4, !dbg !8138
  br i1 %cmp14, label %if.then15, label %if.end25, !dbg !8139

if.then15:                                        ; preds = %for.body
  %15 = load i8*, i8** %db, align 8, !dbg !8140
  %call16 = call i32 @cea_db_payload_len(i8* %15) #8, !dbg !8142
  store i32 %call16, i32* %dbl, align 4, !dbg !8143
  %16 = load i32, i32* %dbl, align 4, !dbg !8144
  %cmp17 = icmp eq i32 %16, 3, !dbg !8146
  br i1 %cmp17, label %if.then18, label %if.end24, !dbg !8147

if.then18:                                        ; preds = %if.then15
  %17 = load i8*, i8** %db, align 8, !dbg !8148
  %arrayidx19 = getelementptr i8, i8* %17, i64 1, !dbg !8148
  %18 = load i32, i32* %dbl, align 4, !dbg !8150
  %conv = sext i32 %18 to i64, !dbg !8150
  %call20 = call i8* @kmemdup(i8* %arrayidx19, i64 %conv, i32 3264) #8, !dbg !8151
  %19 = load i8**, i8*** %sadb.addr, align 8, !dbg !8152
  store i8* %call20, i8** %19, align 8, !dbg !8153
  %20 = load i8**, i8*** %sadb.addr, align 8, !dbg !8154
  %21 = load i8*, i8** %20, align 8, !dbg !8156
  %tobool21 = icmp ne i8* %21, null, !dbg !8156
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !8157

if.then22:                                        ; preds = %if.then18
  store i32 -12, i32* %retval, align 4, !dbg !8158
  br label %return, !dbg !8158

if.end23:                                         ; preds = %if.then18
  %22 = load i32, i32* %dbl, align 4, !dbg !8159
  store i32 %22, i32* %count, align 4, !dbg !8160
  br label %for.end, !dbg !8161

if.end24:                                         ; preds = %if.then15
  br label %if.end25, !dbg !8162

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !8163

for.inc:                                          ; preds = %if.end25
  %23 = load i8*, i8** %cea, align 8, !dbg !8127
  %24 = load i32, i32* %i, align 4, !dbg !8127
  %idxprom26 = sext i32 %24 to i64, !dbg !8127
  %arrayidx27 = getelementptr i8, i8* %23, i64 %idxprom26, !dbg !8127
  %call28 = call i32 @cea_db_payload_len(i8* %arrayidx27) #8, !dbg !8127
  %add29 = add i32 %call28, 1, !dbg !8127
  %25 = load i32, i32* %i, align 4, !dbg !8127
  %add30 = add i32 %25, %add29, !dbg !8127
  store i32 %add30, i32* %i, align 4, !dbg !8127
  br label %for.cond, !dbg !8127, !llvm.loop !8164

for.end:                                          ; preds = %if.end23, %land.end
  %26 = load i32, i32* %count, align 4, !dbg !8166
  store i32 %26, i32* %retval, align 4, !dbg !8167
  br label %return, !dbg !8167

return:                                           ; preds = %for.end, %if.then22, %if.then6, %if.then2, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !8168
  ret i32 %27, !dbg !8168
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_av_sync_delay(%struct.drm_connector* %connector, %struct.drm_display_mode* %mode) #0 !dbg !8169 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %i = alloca i32, align 4
  %a = alloca i32, align 4
  %v = alloca i32, align 4
  %__UNIQUE_ID___x280 = alloca i32, align 4
  %__UNIQUE_ID___y281 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x282 = alloca i32, align 4
  %__UNIQUE_ID___y283 = alloca i32, align 4
  %tmp22 = alloca i32, align 4
  %__UNIQUE_ID___x284 = alloca i32, align 4
  %__UNIQUE_ID___y285 = alloca i32, align 4
  %tmp30 = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8172, metadata !DIExpression()), !dbg !8173
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !8174, metadata !DIExpression()), !dbg !8175
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8176, metadata !DIExpression()), !dbg !8177
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !8178
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 11, !dbg !8179
  %1 = load i32, i32* %flags, align 8, !dbg !8179
  %and = and i32 %1, 16, !dbg !8180
  %tobool = icmp ne i32 %and, 0, !dbg !8181
  %lnot = xor i1 %tobool, true, !dbg !8181
  %lnot1 = xor i1 %lnot, true, !dbg !8182
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !8182
  store i32 %lnot.ext, i32* %i, align 4, !dbg !8177
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8183, metadata !DIExpression()), !dbg !8184
  call void @llvm.dbg.declare(metadata i32* %v, metadata !8185, metadata !DIExpression()), !dbg !8186
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8187
  %latency_present = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 37, !dbg !8189
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %latency_present, i64 0, i64 0, !dbg !8187
  %3 = load i8, i8* %arrayidx, align 8, !dbg !8187
  %tobool2 = trunc i8 %3 to i1, !dbg !8187
  br i1 %tobool2, label %if.end, label %if.then, !dbg !8190

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8191
  br label %return, !dbg !8191

if.end:                                           ; preds = %entry
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8192
  %latency_present3 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %4, i32 0, i32 37, !dbg !8194
  %arrayidx4 = getelementptr [2 x i8], [2 x i8]* %latency_present3, i64 0, i64 1, !dbg !8192
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !8192
  %tobool5 = trunc i8 %5 to i1, !dbg !8192
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !8195

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !8196
  br label %if.end7, !dbg !8197

if.end7:                                          ; preds = %if.then6, %if.end
  %6 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8198
  %audio_latency = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %6, i32 0, i32 39, !dbg !8199
  %7 = load i32, i32* %i, align 4, !dbg !8200
  %idxprom = sext i32 %7 to i64, !dbg !8198
  %arrayidx8 = getelementptr [2 x i32], [2 x i32]* %audio_latency, i64 0, i64 %idxprom, !dbg !8198
  %8 = load i32, i32* %arrayidx8, align 4, !dbg !8198
  store i32 %8, i32* %a, align 4, !dbg !8201
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8202
  %video_latency = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %9, i32 0, i32 38, !dbg !8203
  %10 = load i32, i32* %i, align 4, !dbg !8204
  %idxprom9 = sext i32 %10 to i64, !dbg !8202
  %arrayidx10 = getelementptr [2 x i32], [2 x i32]* %video_latency, i64 0, i64 %idxprom9, !dbg !8202
  %11 = load i32, i32* %arrayidx10, align 4, !dbg !8202
  store i32 %11, i32* %v, align 4, !dbg !8205
  %12 = load i32, i32* %a, align 4, !dbg !8206
  %cmp = icmp eq i32 %12, 255, !dbg !8208
  br i1 %cmp, label %if.then12, label %lor.lhs.false, !dbg !8209

lor.lhs.false:                                    ; preds = %if.end7
  %13 = load i32, i32* %v, align 4, !dbg !8210
  %cmp11 = icmp eq i32 %13, 255, !dbg !8211
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !8212

if.then12:                                        ; preds = %lor.lhs.false, %if.end7
  store i32 0, i32* %retval, align 4, !dbg !8213
  br label %return, !dbg !8213

if.end13:                                         ; preds = %lor.lhs.false
  %14 = load i32, i32* %a, align 4, !dbg !8214
  %tobool14 = icmp ne i32 %14, 0, !dbg !8214
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !8216

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x280, metadata !8217, metadata !DIExpression()), !dbg !8219
  %15 = load i32, i32* %a, align 4, !dbg !8219
  %sub = sub i32 %15, 1, !dbg !8219
  %mul = mul i32 2, %sub, !dbg !8219
  store i32 %mul, i32* %__UNIQUE_ID___x280, align 4, !dbg !8219
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y281, metadata !8220, metadata !DIExpression()), !dbg !8219
  store i32 500, i32* %__UNIQUE_ID___y281, align 4, !dbg !8219
  %16 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !8219
  %17 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !8219
  %cmp16 = icmp slt i32 %16, %17, !dbg !8219
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !8219

cond.true:                                        ; preds = %if.then15
  %18 = load i32, i32* %__UNIQUE_ID___x280, align 4, !dbg !8219
  br label %cond.end, !dbg !8219

cond.false:                                       ; preds = %if.then15
  %19 = load i32, i32* %__UNIQUE_ID___y281, align 4, !dbg !8219
  br label %cond.end, !dbg !8219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %18, %cond.true ], [ %19, %cond.false ], !dbg !8219
  store i32 %cond, i32* %tmp, align 4, !dbg !8219
  %20 = load i32, i32* %tmp, align 4, !dbg !8219
  store i32 %20, i32* %a, align 4, !dbg !8221
  br label %if.end17, !dbg !8222

if.end17:                                         ; preds = %cond.end, %if.end13
  %21 = load i32, i32* %v, align 4, !dbg !8223
  %tobool18 = icmp ne i32 %21, 0, !dbg !8223
  br i1 %tobool18, label %if.then19, label %if.end28, !dbg !8225

if.then19:                                        ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x282, metadata !8226, metadata !DIExpression()), !dbg !8228
  %22 = load i32, i32* %v, align 4, !dbg !8228
  %sub20 = sub i32 %22, 1, !dbg !8228
  %mul21 = mul i32 2, %sub20, !dbg !8228
  store i32 %mul21, i32* %__UNIQUE_ID___x282, align 4, !dbg !8228
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y283, metadata !8229, metadata !DIExpression()), !dbg !8228
  store i32 500, i32* %__UNIQUE_ID___y283, align 4, !dbg !8228
  %23 = load i32, i32* %__UNIQUE_ID___x282, align 4, !dbg !8228
  %24 = load i32, i32* %__UNIQUE_ID___y283, align 4, !dbg !8228
  %cmp23 = icmp slt i32 %23, %24, !dbg !8228
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !8228

cond.true24:                                      ; preds = %if.then19
  %25 = load i32, i32* %__UNIQUE_ID___x282, align 4, !dbg !8228
  br label %cond.end26, !dbg !8228

cond.false25:                                     ; preds = %if.then19
  %26 = load i32, i32* %__UNIQUE_ID___y283, align 4, !dbg !8228
  br label %cond.end26, !dbg !8228

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ %25, %cond.true24 ], [ %26, %cond.false25 ], !dbg !8228
  store i32 %cond27, i32* %tmp22, align 4, !dbg !8228
  %27 = load i32, i32* %tmp22, align 4, !dbg !8228
  store i32 %27, i32* %v, align 4, !dbg !8230
  br label %if.end28, !dbg !8231

if.end28:                                         ; preds = %cond.end26, %if.end17
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x284, metadata !8232, metadata !DIExpression()), !dbg !8234
  %28 = load i32, i32* %v, align 4, !dbg !8234
  %29 = load i32, i32* %a, align 4, !dbg !8234
  %sub29 = sub i32 %28, %29, !dbg !8234
  store i32 %sub29, i32* %__UNIQUE_ID___x284, align 4, !dbg !8234
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y285, metadata !8235, metadata !DIExpression()), !dbg !8234
  store i32 0, i32* %__UNIQUE_ID___y285, align 4, !dbg !8234
  %30 = load i32, i32* %__UNIQUE_ID___x284, align 4, !dbg !8234
  %31 = load i32, i32* %__UNIQUE_ID___y285, align 4, !dbg !8234
  %cmp31 = icmp sgt i32 %30, %31, !dbg !8234
  br i1 %cmp31, label %cond.true32, label %cond.false33, !dbg !8234

cond.true32:                                      ; preds = %if.end28
  %32 = load i32, i32* %__UNIQUE_ID___x284, align 4, !dbg !8234
  br label %cond.end34, !dbg !8234

cond.false33:                                     ; preds = %if.end28
  %33 = load i32, i32* %__UNIQUE_ID___y285, align 4, !dbg !8234
  br label %cond.end34, !dbg !8234

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond35 = phi i32 [ %32, %cond.true32 ], [ %33, %cond.false33 ], !dbg !8234
  store i32 %cond35, i32* %tmp30, align 4, !dbg !8234
  %34 = load i32, i32* %tmp30, align 4, !dbg !8234
  store i32 %34, i32* %retval, align 4, !dbg !8236
  br label %return, !dbg !8236

return:                                           ; preds = %cond.end34, %if.then12, %if.then
  %35 = load i32, i32* %retval, align 4, !dbg !8237
  ret i32 %35, !dbg !8237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_detect_hdmi_monitor(%struct.edid* %edid) #0 !dbg !8238 {
entry:
  %retval = alloca i1, align 1
  %edid.addr = alloca %struct.edid*, align 8
  %edid_ext = alloca i8*, align 8
  %i = alloca i32, align 4
  %start_offset = alloca i32, align 4
  %end_offset = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8239, metadata !DIExpression()), !dbg !8240
  call void @llvm.dbg.declare(metadata i8** %edid_ext, metadata !8241, metadata !DIExpression()), !dbg !8242
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8243, metadata !DIExpression()), !dbg !8244
  call void @llvm.dbg.declare(metadata i32* %start_offset, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata i32* %end_offset, metadata !8247, metadata !DIExpression()), !dbg !8248
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8249
  %call = call i8* @drm_find_cea_extension(%struct.edid* %0) #8, !dbg !8250
  store i8* %call, i8** %edid_ext, align 8, !dbg !8251
  %1 = load i8*, i8** %edid_ext, align 8, !dbg !8252
  %tobool = icmp ne i8* %1, null, !dbg !8252
  br i1 %tobool, label %if.end, label %if.then, !dbg !8254

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8255
  br label %return, !dbg !8255

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %edid_ext, align 8, !dbg !8256
  %call1 = call i32 @cea_db_offsets(i8* %2, i32* %start_offset, i32* %end_offset) #8, !dbg !8258
  %tobool2 = icmp ne i32 %call1, 0, !dbg !8258
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8259

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !8260
  br label %return, !dbg !8260

if.end4:                                          ; preds = %if.end
  %3 = load i32, i32* %start_offset, align 4, !dbg !8261
  store i32 %3, i32* %i, align 4, !dbg !8261
  br label %for.cond, !dbg !8261

for.cond:                                         ; preds = %for.inc, %if.end4
  %4 = load i32, i32* %i, align 4, !dbg !8263
  %5 = load i32, i32* %end_offset, align 4, !dbg !8263
  %cmp = icmp slt i32 %4, %5, !dbg !8263
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8263

land.rhs:                                         ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !8263
  %7 = load i8*, i8** %edid_ext, align 8, !dbg !8263
  %8 = load i32, i32* %i, align 4, !dbg !8263
  %idxprom = sext i32 %8 to i64, !dbg !8263
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !8263
  %call5 = call i32 @cea_db_payload_len(i8* %arrayidx) #8, !dbg !8263
  %add = add i32 %6, %call5, !dbg !8263
  %9 = load i32, i32* %end_offset, align 4, !dbg !8263
  %cmp6 = icmp slt i32 %add, %9, !dbg !8263
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %10 = phi i1 [ false, %for.cond ], [ %cmp6, %land.rhs ], !dbg !8265
  br i1 %10, label %for.body, label %for.end, !dbg !8261

for.body:                                         ; preds = %land.end
  %11 = load i8*, i8** %edid_ext, align 8, !dbg !8266
  %12 = load i32, i32* %i, align 4, !dbg !8269
  %idxprom7 = sext i32 %12 to i64, !dbg !8266
  %arrayidx8 = getelementptr i8, i8* %11, i64 %idxprom7, !dbg !8266
  %call9 = call zeroext i1 @cea_db_is_hdmi_vsdb(i8* %arrayidx8) #8, !dbg !8270
  br i1 %call9, label %if.then10, label %if.end11, !dbg !8271

if.then10:                                        ; preds = %for.body
  store i1 true, i1* %retval, align 1, !dbg !8272
  br label %return, !dbg !8272

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !8273

for.inc:                                          ; preds = %if.end11
  %13 = load i8*, i8** %edid_ext, align 8, !dbg !8263
  %14 = load i32, i32* %i, align 4, !dbg !8263
  %idxprom12 = sext i32 %14 to i64, !dbg !8263
  %arrayidx13 = getelementptr i8, i8* %13, i64 %idxprom12, !dbg !8263
  %call14 = call i32 @cea_db_payload_len(i8* %arrayidx13) #8, !dbg !8263
  %add15 = add i32 %call14, 1, !dbg !8263
  %15 = load i32, i32* %i, align 4, !dbg !8263
  %add16 = add i32 %15, %add15, !dbg !8263
  store i32 %add16, i32* %i, align 4, !dbg !8263
  br label %for.cond, !dbg !8263, !llvm.loop !8274

for.end:                                          ; preds = %land.end
  store i1 false, i1* %retval, align 1, !dbg !8276
  br label %return, !dbg !8276

return:                                           ; preds = %for.end, %if.then10, %if.then3, %if.then
  %16 = load i1, i1* %retval, align 1, !dbg !8277
  ret i1 %16, !dbg !8277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_db_is_hdmi_vsdb(i8* %db) #0 !dbg !8278 {
entry:
  %retval = alloca i1, align 1
  %db.addr = alloca i8*, align 8
  %hdmi_id = alloca i32, align 4
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  call void @llvm.dbg.declare(metadata i32* %hdmi_id, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load i8*, i8** %db.addr, align 8, !dbg !8285
  %call = call i32 @cea_db_tag(i8* %0) #8, !dbg !8287
  %cmp = icmp ne i32 %call, 3, !dbg !8288
  br i1 %cmp, label %if.then, label %if.end, !dbg !8289

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !8290
  br label %return, !dbg !8290

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %db.addr, align 8, !dbg !8291
  %call1 = call i32 @cea_db_payload_len(i8* %1) #8, !dbg !8293
  %cmp2 = icmp slt i32 %call1, 5, !dbg !8294
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !8295

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !8296
  br label %return, !dbg !8296

if.end4:                                          ; preds = %if.end
  %2 = load i8*, i8** %db.addr, align 8, !dbg !8297
  %arrayidx = getelementptr i8, i8* %2, i64 1, !dbg !8297
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8297
  %conv = zext i8 %3 to i32, !dbg !8297
  %4 = load i8*, i8** %db.addr, align 8, !dbg !8298
  %arrayidx5 = getelementptr i8, i8* %4, i64 2, !dbg !8298
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !8298
  %conv6 = zext i8 %5 to i32, !dbg !8298
  %shl = shl i32 %conv6, 8, !dbg !8299
  %or = or i32 %conv, %shl, !dbg !8300
  %6 = load i8*, i8** %db.addr, align 8, !dbg !8301
  %arrayidx7 = getelementptr i8, i8* %6, i64 3, !dbg !8301
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !8301
  %conv8 = zext i8 %7 to i32, !dbg !8301
  %shl9 = shl i32 %conv8, 16, !dbg !8302
  %or10 = or i32 %or, %shl9, !dbg !8303
  store i32 %or10, i32* %hdmi_id, align 4, !dbg !8304
  %8 = load i32, i32* %hdmi_id, align 4, !dbg !8305
  %cmp11 = icmp eq i32 %8, 3075, !dbg !8306
  store i1 %cmp11, i1* %retval, align 1, !dbg !8307
  br label %return, !dbg !8307

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !8308
  ret i1 %9, !dbg !8308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_detect_monitor_audio(%struct.edid* %edid) #0 !dbg !8309 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %edid_ext = alloca i8*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %has_audio = alloca i8, align 1
  %start_offset = alloca i32, align 4
  %end_offset = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8310, metadata !DIExpression()), !dbg !8311
  call void @llvm.dbg.declare(metadata i8** %edid_ext, metadata !8312, metadata !DIExpression()), !dbg !8313
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8314, metadata !DIExpression()), !dbg !8315
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8316, metadata !DIExpression()), !dbg !8317
  call void @llvm.dbg.declare(metadata i8* %has_audio, metadata !8318, metadata !DIExpression()), !dbg !8319
  store i8 0, i8* %has_audio, align 1, !dbg !8319
  call void @llvm.dbg.declare(metadata i32* %start_offset, metadata !8320, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.declare(metadata i32* %end_offset, metadata !8322, metadata !DIExpression()), !dbg !8323
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8324
  %call = call i8* @drm_find_cea_extension(%struct.edid* %0) #8, !dbg !8325
  store i8* %call, i8** %edid_ext, align 8, !dbg !8326
  %1 = load i8*, i8** %edid_ext, align 8, !dbg !8327
  %tobool = icmp ne i8* %1, null, !dbg !8327
  br i1 %tobool, label %if.end, label %if.then, !dbg !8329

if.then:                                          ; preds = %entry
  br label %end, !dbg !8330

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %edid_ext, align 8, !dbg !8331
  %arrayidx = getelementptr i8, i8* %2, i64 3, !dbg !8331
  %3 = load i8, i8* %arrayidx, align 1, !dbg !8331
  %conv = zext i8 %3 to i32, !dbg !8331
  %and = and i32 %conv, 64, !dbg !8332
  %cmp = icmp ne i32 %and, 0, !dbg !8333
  %frombool = zext i1 %cmp to i8, !dbg !8334
  store i8 %frombool, i8* %has_audio, align 1, !dbg !8334
  %4 = load i8, i8* %has_audio, align 1, !dbg !8335
  %tobool2 = trunc i8 %4 to i1, !dbg !8335
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8337

if.then3:                                         ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.15, i64 0, i64 0)) #8, !dbg !8338
  br label %end, !dbg !8340

if.end4:                                          ; preds = %if.end
  %5 = load i8*, i8** %edid_ext, align 8, !dbg !8341
  %call5 = call i32 @cea_db_offsets(i8* %5, i32* %start_offset, i32* %end_offset) #8, !dbg !8343
  %tobool6 = icmp ne i32 %call5, 0, !dbg !8343
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8344

if.then7:                                         ; preds = %if.end4
  br label %end, !dbg !8345

if.end8:                                          ; preds = %if.end4
  %6 = load i32, i32* %start_offset, align 4, !dbg !8346
  store i32 %6, i32* %i, align 4, !dbg !8346
  br label %for.cond, !dbg !8346

for.cond:                                         ; preds = %for.inc36, %if.end8
  %7 = load i32, i32* %i, align 4, !dbg !8348
  %8 = load i32, i32* %end_offset, align 4, !dbg !8348
  %cmp9 = icmp slt i32 %7, %8, !dbg !8348
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !8348

land.rhs:                                         ; preds = %for.cond
  %9 = load i32, i32* %i, align 4, !dbg !8348
  %10 = load i8*, i8** %edid_ext, align 8, !dbg !8348
  %11 = load i32, i32* %i, align 4, !dbg !8348
  %idxprom = sext i32 %11 to i64, !dbg !8348
  %arrayidx11 = getelementptr i8, i8* %10, i64 %idxprom, !dbg !8348
  %call12 = call i32 @cea_db_payload_len(i8* %arrayidx11) #8, !dbg !8348
  %add = add i32 %9, %call12, !dbg !8348
  %12 = load i32, i32* %end_offset, align 4, !dbg !8348
  %cmp13 = icmp slt i32 %add, %12, !dbg !8348
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %13 = phi i1 [ false, %for.cond ], [ %cmp13, %land.rhs ], !dbg !8350
  br i1 %13, label %for.body, label %for.end42, !dbg !8346

for.body:                                         ; preds = %land.end
  %14 = load i8*, i8** %edid_ext, align 8, !dbg !8351
  %15 = load i32, i32* %i, align 4, !dbg !8354
  %idxprom15 = sext i32 %15 to i64, !dbg !8351
  %arrayidx16 = getelementptr i8, i8* %14, i64 %idxprom15, !dbg !8351
  %call17 = call i32 @cea_db_tag(i8* %arrayidx16) #8, !dbg !8355
  %cmp18 = icmp eq i32 %call17, 1, !dbg !8356
  br i1 %cmp18, label %if.then20, label %if.end35, !dbg !8357

if.then20:                                        ; preds = %for.body
  store i8 1, i8* %has_audio, align 1, !dbg !8358
  store i32 1, i32* %j, align 4, !dbg !8360
  br label %for.cond21, !dbg !8362

for.cond21:                                       ; preds = %for.inc, %if.then20
  %16 = load i32, i32* %j, align 4, !dbg !8363
  %17 = load i8*, i8** %edid_ext, align 8, !dbg !8365
  %18 = load i32, i32* %i, align 4, !dbg !8366
  %idxprom22 = sext i32 %18 to i64, !dbg !8365
  %arrayidx23 = getelementptr i8, i8* %17, i64 %idxprom22, !dbg !8365
  %call24 = call i32 @cea_db_payload_len(i8* %arrayidx23) #8, !dbg !8367
  %add25 = add i32 %call24, 1, !dbg !8368
  %cmp26 = icmp slt i32 %16, %add25, !dbg !8369
  br i1 %cmp26, label %for.body28, label %for.end, !dbg !8370

for.body28:                                       ; preds = %for.cond21
  %19 = load i8*, i8** %edid_ext, align 8, !dbg !8371
  %20 = load i32, i32* %i, align 4, !dbg !8371
  %21 = load i32, i32* %j, align 4, !dbg !8371
  %add29 = add i32 %20, %21, !dbg !8371
  %idxprom30 = sext i32 %add29 to i64, !dbg !8371
  %arrayidx31 = getelementptr i8, i8* %19, i64 %idxprom30, !dbg !8371
  %22 = load i8, i8* %arrayidx31, align 1, !dbg !8371
  %conv32 = zext i8 %22 to i32, !dbg !8371
  %shr = ashr i32 %conv32, 3, !dbg !8371
  %and33 = and i32 %shr, 15, !dbg !8371
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i32 %and33) #8, !dbg !8371
  br label %for.inc, !dbg !8371

for.inc:                                          ; preds = %for.body28
  %23 = load i32, i32* %j, align 4, !dbg !8372
  %add34 = add i32 %23, 3, !dbg !8372
  store i32 %add34, i32* %j, align 4, !dbg !8372
  br label %for.cond21, !dbg !8373, !llvm.loop !8374

for.end:                                          ; preds = %for.cond21
  br label %end, !dbg !8376

if.end35:                                         ; preds = %for.body
  br label %for.inc36, !dbg !8377

for.inc36:                                        ; preds = %if.end35
  %24 = load i8*, i8** %edid_ext, align 8, !dbg !8348
  %25 = load i32, i32* %i, align 4, !dbg !8348
  %idxprom37 = sext i32 %25 to i64, !dbg !8348
  %arrayidx38 = getelementptr i8, i8* %24, i64 %idxprom37, !dbg !8348
  %call39 = call i32 @cea_db_payload_len(i8* %arrayidx38) #8, !dbg !8348
  %add40 = add i32 %call39, 1, !dbg !8348
  %26 = load i32, i32* %i, align 4, !dbg !8348
  %add41 = add i32 %26, %add40, !dbg !8348
  store i32 %add41, i32* %i, align 4, !dbg !8348
  br label %for.cond, !dbg !8348, !llvm.loop !8378

for.end42:                                        ; preds = %land.end
  br label %end, !dbg !8379

end:                                              ; preds = %for.end42, %for.end, %if.then7, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !8380), !dbg !8381
  %27 = load i8, i8* %has_audio, align 1, !dbg !8382
  %tobool43 = trunc i8 %27 to i1, !dbg !8382
  ret i1 %tobool43, !dbg !8383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_default_rgb_quant_range(%struct.drm_display_mode* %mode) #0 !dbg !8384 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !8389
  %call = call zeroext i8 @drm_match_cea_mode(%struct.drm_display_mode* %0) #8, !dbg !8390
  %conv = zext i8 %call to i32, !dbg !8390
  %cmp = icmp sgt i32 %conv, 1, !dbg !8391
  %1 = zext i1 %cmp to i64, !dbg !8390
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !8390
  ret i32 %cond, !dbg !8392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_reset_display_info(%struct.drm_connector* %connector) #0 !dbg !8393 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !8396, metadata !DIExpression()), !dbg !8398
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8399
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !8400
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !8398
  %1 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8401
  %width_mm = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %1, i32 0, i32 0, !dbg !8402
  store i32 0, i32* %width_mm, align 8, !dbg !8403
  %2 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8404
  %height_mm = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %2, i32 0, i32 1, !dbg !8405
  store i32 0, i32* %height_mm, align 4, !dbg !8406
  %3 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8407
  %bpc = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %3, i32 0, i32 2, !dbg !8408
  store i32 0, i32* %bpc, align 8, !dbg !8409
  %4 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8410
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %4, i32 0, i32 5, !dbg !8411
  store i32 0, i32* %color_formats, align 4, !dbg !8412
  %5 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8413
  %cea_rev = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %5, i32 0, i32 15, !dbg !8414
  store i8 0, i8* %cea_rev, align 1, !dbg !8415
  %6 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8416
  %max_tmds_clock = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %6, i32 0, i32 9, !dbg !8417
  store i32 0, i32* %max_tmds_clock, align 8, !dbg !8418
  %7 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8419
  %dvi_dual = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %7, i32 0, i32 10, !dbg !8420
  store i8 0, i8* %dvi_dual, align 4, !dbg !8421
  %8 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8422
  %is_hdmi = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %8, i32 0, i32 11, !dbg !8423
  store i8 0, i8* %is_hdmi, align 1, !dbg !8424
  %9 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8425
  %has_hdmi_infoframe = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %9, i32 0, i32 12, !dbg !8426
  store i8 0, i8* %has_hdmi_infoframe, align 2, !dbg !8427
  %10 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8428
  %rgb_quant_range_selectable = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %10, i32 0, i32 13, !dbg !8429
  store i8 0, i8* %rgb_quant_range_selectable, align 1, !dbg !8430
  %11 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8431
  %hdmi = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %11, i32 0, i32 16, !dbg !8432
  %12 = bitcast %struct.drm_hdmi_info* %hdmi to i8*, !dbg !8433
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 88, i1 false), !dbg !8433
  %13 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8434
  %non_desktop = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %13, i32 0, i32 17, !dbg !8435
  store i8 0, i8* %non_desktop, align 8, !dbg !8436
  %14 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8437
  %monitor_range = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %14, i32 0, i32 18, !dbg !8438
  %15 = bitcast %struct.drm_monitor_range_info* %monitor_range to i8*, !dbg !8439
  call void @llvm.memset.p0i8.i64(i8* align 1 %15, i8 0, i64 2, i1 false), !dbg !8439
  ret void, !dbg !8440
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_add_display_info(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !8441 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  %quirks = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8444, metadata !DIExpression()), !dbg !8445
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !8448, metadata !DIExpression()), !dbg !8449
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8450
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !8451
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !8449
  call void @llvm.dbg.declare(metadata i32* %quirks, metadata !8452, metadata !DIExpression()), !dbg !8453
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8454
  %call = call i32 @edid_get_quirks(%struct.edid* %1) #8, !dbg !8455
  store i32 %call, i32* %quirks, align 4, !dbg !8453
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8456
  call void @drm_reset_display_info(%struct.drm_connector* %2) #8, !dbg !8457
  %3 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8458
  %width_cm = getelementptr inbounds %struct.edid, %struct.edid* %3, i32 0, i32 9, !dbg !8459
  %4 = load i8, i8* %width_cm, align 1, !dbg !8459
  %conv = zext i8 %4 to i32, !dbg !8458
  %mul = mul i32 %conv, 10, !dbg !8460
  %5 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8461
  %width_mm = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %5, i32 0, i32 0, !dbg !8462
  store i32 %mul, i32* %width_mm, align 8, !dbg !8463
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8464
  %height_cm = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 10, !dbg !8465
  %7 = load i8, i8* %height_cm, align 1, !dbg !8465
  %conv1 = zext i8 %7 to i32, !dbg !8464
  %mul2 = mul i32 %conv1, 10, !dbg !8466
  %8 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8467
  %height_mm = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %8, i32 0, i32 1, !dbg !8468
  store i32 %mul2, i32* %height_mm, align 4, !dbg !8469
  %9 = load i32, i32* %quirks, align 4, !dbg !8470
  %and = and i32 %9, 4096, !dbg !8471
  %tobool = icmp ne i32 %and, 0, !dbg !8472
  %lnot = xor i1 %tobool, true, !dbg !8472
  %lnot3 = xor i1 %lnot, true, !dbg !8473
  %10 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8474
  %non_desktop = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %10, i32 0, i32 17, !dbg !8475
  %frombool = zext i1 %lnot3 to i8, !dbg !8476
  store i8 %frombool, i8* %non_desktop, align 8, !dbg !8476
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8477
  %12 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8478
  call void @drm_get_monitor_range(%struct.drm_connector* %11, %struct.edid* %12) #8, !dbg !8479
  %13 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8480
  %non_desktop4 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %13, i32 0, i32 17, !dbg !8480
  %14 = load i8, i8* %non_desktop4, align 8, !dbg !8480
  %tobool5 = trunc i8 %14 to i1, !dbg !8480
  %conv6 = zext i1 %tobool5 to i32, !dbg !8480
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i32 %conv6) #8, !dbg !8480
  %15 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8481
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %15, i32 0, i32 7, !dbg !8483
  %16 = load i8, i8* %revision, align 1, !dbg !8483
  %conv7 = zext i8 %16 to i32, !dbg !8481
  %cmp = icmp slt i32 %conv7, 3, !dbg !8484
  br i1 %cmp, label %if.then, label %if.end, !dbg !8485

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %quirks, align 4, !dbg !8486
  store i32 %17, i32* %retval, align 4, !dbg !8487
  br label %return, !dbg !8487

if.end:                                           ; preds = %entry
  %18 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8488
  %input = getelementptr inbounds %struct.edid, %struct.edid* %18, i32 0, i32 8, !dbg !8490
  %19 = load i8, i8* %input, align 1, !dbg !8490
  %conv9 = zext i8 %19 to i32, !dbg !8488
  %and10 = and i32 %conv9, 128, !dbg !8491
  %tobool11 = icmp ne i32 %and10, 0, !dbg !8491
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !8492

if.then12:                                        ; preds = %if.end
  %20 = load i32, i32* %quirks, align 4, !dbg !8493
  store i32 %20, i32* %retval, align 4, !dbg !8494
  br label %return, !dbg !8494

if.end13:                                         ; preds = %if.end
  %21 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8495
  %22 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8496
  call void @drm_parse_cea_ext(%struct.drm_connector* %21, %struct.edid* %22) #8, !dbg !8497
  %23 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8498
  %bpc = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %23, i32 0, i32 2, !dbg !8500
  %24 = load i32, i32* %bpc, align 8, !dbg !8500
  %cmp14 = icmp eq i32 %24, 0, !dbg !8501
  br i1 %cmp14, label %land.lhs.true, label %if.end28, !dbg !8502

land.lhs.true:                                    ; preds = %if.end13
  %25 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8503
  %revision16 = getelementptr inbounds %struct.edid, %struct.edid* %25, i32 0, i32 7, !dbg !8504
  %26 = load i8, i8* %revision16, align 1, !dbg !8504
  %conv17 = zext i8 %26 to i32, !dbg !8503
  %cmp18 = icmp eq i32 %conv17, 3, !dbg !8505
  br i1 %cmp18, label %land.lhs.true20, label %if.end28, !dbg !8506

land.lhs.true20:                                  ; preds = %land.lhs.true
  %27 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8507
  %input21 = getelementptr inbounds %struct.edid, %struct.edid* %27, i32 0, i32 8, !dbg !8508
  %28 = load i8, i8* %input21, align 1, !dbg !8508
  %conv22 = zext i8 %28 to i32, !dbg !8507
  %and23 = and i32 %conv22, 1, !dbg !8509
  %tobool24 = icmp ne i32 %and23, 0, !dbg !8509
  br i1 %tobool24, label %if.then25, label %if.end28, !dbg !8510

if.then25:                                        ; preds = %land.lhs.true20
  %29 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8511
  %bpc26 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %29, i32 0, i32 2, !dbg !8513
  store i32 8, i32* %bpc26, align 8, !dbg !8514
  %30 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8515
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %30, i32 0, i32 5, !dbg !8515
  %31 = load i8*, i8** %name, align 8, !dbg !8515
  %32 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8515
  %bpc27 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %32, i32 0, i32 2, !dbg !8515
  %33 = load i32, i32* %bpc27, align 8, !dbg !8515
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.18, i64 0, i64 0), i8* %31, i32 %33) #8, !dbg !8515
  br label %if.end28, !dbg !8516

if.end28:                                         ; preds = %if.then25, %land.lhs.true20, %land.lhs.true, %if.end13
  %34 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8517
  %revision29 = getelementptr inbounds %struct.edid, %struct.edid* %34, i32 0, i32 7, !dbg !8519
  %35 = load i8, i8* %revision29, align 1, !dbg !8519
  %conv30 = zext i8 %35 to i32, !dbg !8517
  %cmp31 = icmp slt i32 %conv30, 4, !dbg !8520
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !8521

if.then33:                                        ; preds = %if.end28
  %36 = load i32, i32* %quirks, align 4, !dbg !8522
  store i32 %36, i32* %retval, align 4, !dbg !8523
  br label %return, !dbg !8523

if.end34:                                         ; preds = %if.end28
  %37 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8524
  %input35 = getelementptr inbounds %struct.edid, %struct.edid* %37, i32 0, i32 8, !dbg !8525
  %38 = load i8, i8* %input35, align 1, !dbg !8525
  %conv36 = zext i8 %38 to i32, !dbg !8524
  %and37 = and i32 %conv36, 112, !dbg !8526
  switch i32 %and37, label %sw.default [
    i32 16, label %sw.bb
    i32 32, label %sw.bb39
    i32 48, label %sw.bb41
    i32 64, label %sw.bb43
    i32 80, label %sw.bb45
    i32 96, label %sw.bb47
    i32 0, label %sw.bb49
  ], !dbg !8527

sw.bb:                                            ; preds = %if.end34
  %39 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8528
  %bpc38 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %39, i32 0, i32 2, !dbg !8530
  store i32 6, i32* %bpc38, align 8, !dbg !8531
  br label %sw.epilog, !dbg !8532

sw.bb39:                                          ; preds = %if.end34
  %40 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8533
  %bpc40 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %40, i32 0, i32 2, !dbg !8534
  store i32 8, i32* %bpc40, align 8, !dbg !8535
  br label %sw.epilog, !dbg !8536

sw.bb41:                                          ; preds = %if.end34
  %41 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8537
  %bpc42 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %41, i32 0, i32 2, !dbg !8538
  store i32 10, i32* %bpc42, align 8, !dbg !8539
  br label %sw.epilog, !dbg !8540

sw.bb43:                                          ; preds = %if.end34
  %42 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8541
  %bpc44 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %42, i32 0, i32 2, !dbg !8542
  store i32 12, i32* %bpc44, align 8, !dbg !8543
  br label %sw.epilog, !dbg !8544

sw.bb45:                                          ; preds = %if.end34
  %43 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8545
  %bpc46 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %43, i32 0, i32 2, !dbg !8546
  store i32 14, i32* %bpc46, align 8, !dbg !8547
  br label %sw.epilog, !dbg !8548

sw.bb47:                                          ; preds = %if.end34
  %44 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8549
  %bpc48 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %44, i32 0, i32 2, !dbg !8550
  store i32 16, i32* %bpc48, align 8, !dbg !8551
  br label %sw.epilog, !dbg !8552

sw.bb49:                                          ; preds = %if.end34
  br label %sw.default, !dbg !8552

sw.default:                                       ; preds = %if.end34, %sw.bb49
  %45 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8553
  %bpc50 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %45, i32 0, i32 2, !dbg !8554
  store i32 0, i32* %bpc50, align 8, !dbg !8555
  br label %sw.epilog, !dbg !8556

sw.epilog:                                        ; preds = %sw.default, %sw.bb47, %sw.bb45, %sw.bb43, %sw.bb41, %sw.bb39, %sw.bb
  %46 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8557
  %name51 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %46, i32 0, i32 5, !dbg !8557
  %47 = load i8*, i8** %name51, align 8, !dbg !8557
  %48 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8557
  %bpc52 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %48, i32 0, i32 2, !dbg !8557
  %49 = load i32, i32* %bpc52, align 8, !dbg !8557
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19, i64 0, i64 0), i8* %47, i32 %49) #8, !dbg !8557
  %50 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8558
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %50, i32 0, i32 5, !dbg !8559
  %51 = load i32, i32* %color_formats, align 4, !dbg !8560
  %or = or i32 %51, 1, !dbg !8560
  store i32 %or, i32* %color_formats, align 4, !dbg !8560
  %52 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8561
  %features = getelementptr inbounds %struct.edid, %struct.edid* %52, i32 0, i32 12, !dbg !8563
  %53 = load i8, i8* %features, align 1, !dbg !8563
  %conv53 = zext i8 %53 to i32, !dbg !8561
  %and54 = and i32 %conv53, 8, !dbg !8564
  %tobool55 = icmp ne i32 %and54, 0, !dbg !8564
  br i1 %tobool55, label %if.then56, label %if.end59, !dbg !8565

if.then56:                                        ; preds = %sw.epilog
  %54 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8566
  %color_formats57 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %54, i32 0, i32 5, !dbg !8567
  %55 = load i32, i32* %color_formats57, align 4, !dbg !8568
  %or58 = or i32 %55, 2, !dbg !8568
  store i32 %or58, i32* %color_formats57, align 4, !dbg !8568
  br label %if.end59, !dbg !8566

if.end59:                                         ; preds = %if.then56, %sw.epilog
  %56 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8569
  %features60 = getelementptr inbounds %struct.edid, %struct.edid* %56, i32 0, i32 12, !dbg !8571
  %57 = load i8, i8* %features60, align 1, !dbg !8571
  %conv61 = zext i8 %57 to i32, !dbg !8569
  %and62 = and i32 %conv61, 16, !dbg !8572
  %tobool63 = icmp ne i32 %and62, 0, !dbg !8572
  br i1 %tobool63, label %if.then64, label %if.end67, !dbg !8573

if.then64:                                        ; preds = %if.end59
  %58 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8574
  %color_formats65 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %58, i32 0, i32 5, !dbg !8575
  %59 = load i32, i32* %color_formats65, align 4, !dbg !8576
  %or66 = or i32 %59, 4, !dbg !8576
  store i32 %or66, i32* %color_formats65, align 4, !dbg !8576
  br label %if.end67, !dbg !8574

if.end67:                                         ; preds = %if.then64, %if.end59
  %60 = load i32, i32* %quirks, align 4, !dbg !8577
  store i32 %60, i32* %retval, align 4, !dbg !8578
  br label %return, !dbg !8578

return:                                           ; preds = %if.end67, %if.then33, %if.then12, %if.then
  %61 = load i32, i32* %retval, align 4, !dbg !8579
  ret i32 %61, !dbg !8579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @edid_get_quirks(%struct.edid* %edid) #0 !dbg !8580 {
entry:
  %retval = alloca i32, align 4
  %edid.addr = alloca %struct.edid*, align 8
  %quirk = alloca %struct.edid_quirk*, align 8
  %i = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8583, metadata !DIExpression()), !dbg !8584
  call void @llvm.dbg.declare(metadata %struct.edid_quirk** %quirk, metadata !8585, metadata !DIExpression()), !dbg !8587
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8588, metadata !DIExpression()), !dbg !8589
  store i32 0, i32* %i, align 4, !dbg !8590
  br label %for.cond, !dbg !8592

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8593
  %conv = sext i32 %0 to i64, !dbg !8593
  %cmp = icmp ult i64 %conv, 58, !dbg !8595
  br i1 %cmp, label %for.body, label %for.end, !dbg !8596

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !8597
  %idxprom = sext i32 %1 to i64, !dbg !8599
  %arrayidx = getelementptr [58 x %struct.edid_quirk], [58 x %struct.edid_quirk]* @edid_quirk_list, i64 0, i64 %idxprom, !dbg !8599
  store %struct.edid_quirk* %arrayidx, %struct.edid_quirk** %quirk, align 8, !dbg !8600
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8601
  %3 = load %struct.edid_quirk*, %struct.edid_quirk** %quirk, align 8, !dbg !8603
  %vendor = getelementptr inbounds %struct.edid_quirk, %struct.edid_quirk* %3, i32 0, i32 0, !dbg !8604
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %vendor, i64 0, i64 0, !dbg !8603
  %call = call zeroext i1 @edid_vendor(%struct.edid* %2, i8* %arraydecay) #8, !dbg !8605
  br i1 %call, label %land.lhs.true, label %if.end, !dbg !8606

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8607
  %prod_code = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 2, !dbg !8607
  %arrayidx3 = getelementptr [2 x i8], [2 x i8]* %prod_code, i64 0, i64 0, !dbg !8607
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !8607
  %conv4 = zext i8 %5 to i32, !dbg !8607
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8607
  %prod_code5 = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 2, !dbg !8607
  %arrayidx6 = getelementptr [2 x i8], [2 x i8]* %prod_code5, i64 0, i64 1, !dbg !8607
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !8607
  %conv7 = zext i8 %7 to i32, !dbg !8607
  %shl = shl i32 %conv7, 8, !dbg !8607
  %or = or i32 %conv4, %shl, !dbg !8607
  %8 = load %struct.edid_quirk*, %struct.edid_quirk** %quirk, align 8, !dbg !8608
  %product_id = getelementptr inbounds %struct.edid_quirk, %struct.edid_quirk* %8, i32 0, i32 1, !dbg !8609
  %9 = load i32, i32* %product_id, align 4, !dbg !8609
  %cmp8 = icmp eq i32 %or, %9, !dbg !8610
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8611

if.then:                                          ; preds = %land.lhs.true
  %10 = load %struct.edid_quirk*, %struct.edid_quirk** %quirk, align 8, !dbg !8612
  %quirks = getelementptr inbounds %struct.edid_quirk, %struct.edid_quirk* %10, i32 0, i32 2, !dbg !8613
  %11 = load i32, i32* %quirks, align 4, !dbg !8613
  store i32 %11, i32* %retval, align 4, !dbg !8614
  br label %return, !dbg !8614

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !8615

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !8616
  %inc = add i32 %12, 1, !dbg !8616
  store i32 %inc, i32* %i, align 4, !dbg !8616
  br label %for.cond, !dbg !8617, !llvm.loop !8618

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8620
  br label %return, !dbg !8620

return:                                           ; preds = %for.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8621
  ret i32 %13, !dbg !8621
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_get_monitor_range(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !8622 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8625, metadata !DIExpression()), !dbg !8626
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8627, metadata !DIExpression()), !dbg !8628
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !8629, metadata !DIExpression()), !dbg !8630
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8631
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !8632
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !8630
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8633
  %version = getelementptr inbounds %struct.edid, %struct.edid* %1, i32 0, i32 6, !dbg !8633
  %2 = load i8, i8* %version, align 1, !dbg !8633
  %conv = zext i8 %2 to i32, !dbg !8633
  %cmp = icmp sgt i32 %conv, 1, !dbg !8633
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !8633

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8633
  %version2 = getelementptr inbounds %struct.edid, %struct.edid* %3, i32 0, i32 6, !dbg !8633
  %4 = load i8, i8* %version2, align 1, !dbg !8633
  %conv3 = zext i8 %4 to i32, !dbg !8633
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !8633
  br i1 %cmp4, label %land.lhs.true, label %if.then, !dbg !8633

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8633
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %5, i32 0, i32 7, !dbg !8633
  %6 = load i8, i8* %revision, align 1, !dbg !8633
  %conv6 = zext i8 %6 to i32, !dbg !8633
  %cmp7 = icmp sgt i32 %conv6, 1, !dbg !8633
  br i1 %cmp7, label %if.end, label %if.then, !dbg !8635

if.then:                                          ; preds = %land.lhs.true, %lor.lhs.false
  br label %return, !dbg !8636

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8637
  %8 = bitcast %struct.edid* %7 to i8*, !dbg !8638
  %9 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8639
  %monitor_range = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %9, i32 0, i32 18, !dbg !8640
  %10 = bitcast %struct.drm_monitor_range_info* %monitor_range to i8*, !dbg !8641
  call void @drm_for_each_detailed_block(i8* %8, void (%struct.detailed_timing*, i8*)* @get_monitor_range, i8* %10) #8, !dbg !8642
  %11 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8643
  %monitor_range9 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %11, i32 0, i32 18, !dbg !8643
  %min_vfreq = getelementptr inbounds %struct.drm_monitor_range_info, %struct.drm_monitor_range_info* %monitor_range9, i32 0, i32 0, !dbg !8643
  %12 = load i8, i8* %min_vfreq, align 1, !dbg !8643
  %conv10 = zext i8 %12 to i32, !dbg !8643
  %13 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8643
  %monitor_range11 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %13, i32 0, i32 18, !dbg !8643
  %max_vfreq = getelementptr inbounds %struct.drm_monitor_range_info, %struct.drm_monitor_range_info* %monitor_range11, i32 0, i32 1, !dbg !8643
  %14 = load i8, i8* %max_vfreq, align 1, !dbg !8643
  %conv12 = zext i8 %14 to i32, !dbg !8643
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.29, i64 0, i64 0), i32 %conv10, i32 %conv12) #8, !dbg !8643
  br label %return, !dbg !8644

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !8644
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_cea_ext(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !8645 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  %edid_ext = alloca i8*, align 8
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %db = alloca i8*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8646, metadata !DIExpression()), !dbg !8647
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8648, metadata !DIExpression()), !dbg !8649
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !8650, metadata !DIExpression()), !dbg !8651
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8652
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !8653
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !8651
  call void @llvm.dbg.declare(metadata i8** %edid_ext, metadata !8654, metadata !DIExpression()), !dbg !8655
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8656, metadata !DIExpression()), !dbg !8657
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8658, metadata !DIExpression()), !dbg !8659
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8660, metadata !DIExpression()), !dbg !8661
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8662
  %call = call i8* @drm_find_cea_extension(%struct.edid* %1) #8, !dbg !8663
  store i8* %call, i8** %edid_ext, align 8, !dbg !8664
  %2 = load i8*, i8** %edid_ext, align 8, !dbg !8665
  %tobool = icmp ne i8* %2, null, !dbg !8665
  br i1 %tobool, label %if.end, label %if.then, !dbg !8667

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !8668

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %edid_ext, align 8, !dbg !8669
  %arrayidx = getelementptr i8, i8* %3, i64 1, !dbg !8669
  %4 = load i8, i8* %arrayidx, align 1, !dbg !8669
  %5 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8670
  %cea_rev = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %5, i32 0, i32 15, !dbg !8671
  store i8 %4, i8* %cea_rev, align 1, !dbg !8672
  %6 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8673
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %6, i32 0, i32 5, !dbg !8674
  store i32 1, i32* %color_formats, align 4, !dbg !8675
  %7 = load i8*, i8** %edid_ext, align 8, !dbg !8676
  %arrayidx1 = getelementptr i8, i8* %7, i64 3, !dbg !8676
  %8 = load i8, i8* %arrayidx1, align 1, !dbg !8676
  %conv = zext i8 %8 to i32, !dbg !8676
  %and = and i32 %conv, 32, !dbg !8678
  %tobool2 = icmp ne i32 %and, 0, !dbg !8678
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !8679

if.then3:                                         ; preds = %if.end
  %9 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8680
  %color_formats4 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %9, i32 0, i32 5, !dbg !8681
  %10 = load i32, i32* %color_formats4, align 4, !dbg !8682
  %or = or i32 %10, 2, !dbg !8682
  store i32 %or, i32* %color_formats4, align 4, !dbg !8682
  br label %if.end5, !dbg !8680

if.end5:                                          ; preds = %if.then3, %if.end
  %11 = load i8*, i8** %edid_ext, align 8, !dbg !8683
  %arrayidx6 = getelementptr i8, i8* %11, i64 3, !dbg !8683
  %12 = load i8, i8* %arrayidx6, align 1, !dbg !8683
  %conv7 = zext i8 %12 to i32, !dbg !8683
  %and8 = and i32 %conv7, 16, !dbg !8685
  %tobool9 = icmp ne i32 %and8, 0, !dbg !8685
  br i1 %tobool9, label %if.then10, label %if.end13, !dbg !8686

if.then10:                                        ; preds = %if.end5
  %13 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !8687
  %color_formats11 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %13, i32 0, i32 5, !dbg !8688
  %14 = load i32, i32* %color_formats11, align 4, !dbg !8689
  %or12 = or i32 %14, 4, !dbg !8689
  store i32 %or12, i32* %color_formats11, align 4, !dbg !8689
  br label %if.end13, !dbg !8687

if.end13:                                         ; preds = %if.then10, %if.end5
  %15 = load i8*, i8** %edid_ext, align 8, !dbg !8690
  %call14 = call i32 @cea_db_offsets(i8* %15, i32* %start, i32* %end) #8, !dbg !8692
  %tobool15 = icmp ne i32 %call14, 0, !dbg !8692
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8693

if.then16:                                        ; preds = %if.end13
  br label %for.end, !dbg !8694

if.end17:                                         ; preds = %if.end13
  %16 = load i32, i32* %start, align 4, !dbg !8695
  store i32 %16, i32* %i, align 4, !dbg !8695
  br label %for.cond, !dbg !8695

for.cond:                                         ; preds = %for.inc, %if.end17
  %17 = load i32, i32* %i, align 4, !dbg !8697
  %18 = load i32, i32* %end, align 4, !dbg !8697
  %cmp = icmp slt i32 %17, %18, !dbg !8697
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8697

land.rhs:                                         ; preds = %for.cond
  %19 = load i32, i32* %i, align 4, !dbg !8697
  %20 = load i8*, i8** %edid_ext, align 8, !dbg !8697
  %21 = load i32, i32* %i, align 4, !dbg !8697
  %idxprom = sext i32 %21 to i64, !dbg !8697
  %arrayidx19 = getelementptr i8, i8* %20, i64 %idxprom, !dbg !8697
  %call20 = call i32 @cea_db_payload_len(i8* %arrayidx19) #8, !dbg !8697
  %add = add i32 %19, %call20, !dbg !8697
  %22 = load i32, i32* %end, align 4, !dbg !8697
  %cmp21 = icmp slt i32 %add, %22, !dbg !8697
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %23 = phi i1 [ false, %for.cond ], [ %cmp21, %land.rhs ], !dbg !8699
  br i1 %23, label %for.body, label %for.end, !dbg !8695

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %db, metadata !8700, metadata !DIExpression()), !dbg !8702
  %24 = load i8*, i8** %edid_ext, align 8, !dbg !8703
  %25 = load i32, i32* %i, align 4, !dbg !8704
  %idxprom23 = sext i32 %25 to i64, !dbg !8703
  %arrayidx24 = getelementptr i8, i8* %24, i64 %idxprom23, !dbg !8703
  store i8* %arrayidx24, i8** %db, align 8, !dbg !8702
  %26 = load i8*, i8** %db, align 8, !dbg !8705
  %call25 = call zeroext i1 @cea_db_is_hdmi_vsdb(i8* %26) #8, !dbg !8707
  br i1 %call25, label %if.then26, label %if.end27, !dbg !8708

if.then26:                                        ; preds = %for.body
  %27 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8709
  %28 = load i8*, i8** %db, align 8, !dbg !8710
  call void @drm_parse_hdmi_vsdb_video(%struct.drm_connector* %27, i8* %28) #8, !dbg !8711
  br label %if.end27, !dbg !8711

if.end27:                                         ; preds = %if.then26, %for.body
  %29 = load i8*, i8** %db, align 8, !dbg !8712
  %call28 = call zeroext i1 @cea_db_is_hdmi_forum_vsdb(i8* %29) #8, !dbg !8714
  br i1 %call28, label %if.then29, label %if.end30, !dbg !8715

if.then29:                                        ; preds = %if.end27
  %30 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8716
  %31 = load i8*, i8** %db, align 8, !dbg !8717
  call void @drm_parse_hdmi_forum_vsdb(%struct.drm_connector* %30, i8* %31) #8, !dbg !8718
  br label %if.end30, !dbg !8718

if.end30:                                         ; preds = %if.then29, %if.end27
  %32 = load i8*, i8** %db, align 8, !dbg !8719
  %call31 = call zeroext i1 @cea_db_is_y420cmdb(i8* %32) #8, !dbg !8721
  br i1 %call31, label %if.then32, label %if.end33, !dbg !8722

if.then32:                                        ; preds = %if.end30
  %33 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8723
  %34 = load i8*, i8** %db, align 8, !dbg !8724
  call void @drm_parse_y420cmdb_bitmap(%struct.drm_connector* %33, i8* %34) #8, !dbg !8725
  br label %if.end33, !dbg !8725

if.end33:                                         ; preds = %if.then32, %if.end30
  %35 = load i8*, i8** %db, align 8, !dbg !8726
  %call34 = call zeroext i1 @cea_db_is_vcdb(i8* %35) #8, !dbg !8728
  br i1 %call34, label %if.then35, label %if.end36, !dbg !8729

if.then35:                                        ; preds = %if.end33
  %36 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8730
  %37 = load i8*, i8** %db, align 8, !dbg !8731
  call void @drm_parse_vcdb(%struct.drm_connector* %36, i8* %37) #8, !dbg !8732
  br label %if.end36, !dbg !8732

if.end36:                                         ; preds = %if.then35, %if.end33
  %38 = load i8*, i8** %db, align 8, !dbg !8733
  %call37 = call zeroext i1 @cea_db_is_hdmi_hdr_metadata_block(i8* %38) #8, !dbg !8735
  br i1 %call37, label %if.then38, label %if.end39, !dbg !8736

if.then38:                                        ; preds = %if.end36
  %39 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8737
  %40 = load i8*, i8** %db, align 8, !dbg !8738
  call void @drm_parse_hdr_metadata_block(%struct.drm_connector* %39, i8* %40) #8, !dbg !8739
  br label %if.end39, !dbg !8739

if.end39:                                         ; preds = %if.then38, %if.end36
  br label %for.inc, !dbg !8740

for.inc:                                          ; preds = %if.end39
  %41 = load i8*, i8** %edid_ext, align 8, !dbg !8697
  %42 = load i32, i32* %i, align 4, !dbg !8697
  %idxprom40 = sext i32 %42 to i64, !dbg !8697
  %arrayidx41 = getelementptr i8, i8* %41, i64 %idxprom40, !dbg !8697
  %call42 = call i32 @cea_db_payload_len(i8* %arrayidx41) #8, !dbg !8697
  %add43 = add i32 %call42, 1, !dbg !8697
  %43 = load i32, i32* %i, align 4, !dbg !8697
  %add44 = add i32 %43, %add43, !dbg !8697
  store i32 %add44, i32* %i, align 4, !dbg !8697
  br label %for.cond, !dbg !8697, !llvm.loop !8741

for.end:                                          ; preds = %if.then, %if.then16, %land.end
  ret void, !dbg !8743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_eld(%struct.drm_connector* %connector) #0 !dbg !8744 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8745, metadata !DIExpression()), !dbg !8746
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8747
  %eld = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 36, !dbg !8748
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %eld, i64 0, i64 0, !dbg !8749
  call void @llvm.memset.p0i8.i64(i8* align 8 %arraydecay, i8 0, i64 128, i1 false), !dbg !8749
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8750
  %latency_present = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %1, i32 0, i32 37, !dbg !8751
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %latency_present, i64 0, i64 0, !dbg !8750
  store i8 0, i8* %arrayidx, align 8, !dbg !8752
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8753
  %latency_present1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 37, !dbg !8754
  %arrayidx2 = getelementptr [2 x i8], [2 x i8]* %latency_present1, i64 0, i64 1, !dbg !8753
  store i8 0, i8* %arrayidx2, align 1, !dbg !8755
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8756
  %video_latency = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %3, i32 0, i32 38, !dbg !8757
  %arrayidx3 = getelementptr [2 x i32], [2 x i32]* %video_latency, i64 0, i64 0, !dbg !8756
  store i32 0, i32* %arrayidx3, align 4, !dbg !8758
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8759
  %audio_latency = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %4, i32 0, i32 39, !dbg !8760
  %arrayidx4 = getelementptr [2 x i32], [2 x i32]* %audio_latency, i64 0, i64 0, !dbg !8759
  store i32 0, i32* %arrayidx4, align 4, !dbg !8761
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8762
  %video_latency5 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %5, i32 0, i32 38, !dbg !8763
  %arrayidx6 = getelementptr [2 x i32], [2 x i32]* %video_latency5, i64 0, i64 1, !dbg !8762
  store i32 0, i32* %arrayidx6, align 4, !dbg !8764
  %6 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8765
  %audio_latency7 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %6, i32 0, i32 39, !dbg !8766
  %arrayidx8 = getelementptr [2 x i32], [2 x i32]* %audio_latency7, i64 0, i64 1, !dbg !8765
  store i32 0, i32* %arrayidx8, align 4, !dbg !8767
  ret void, !dbg !8768
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_edid_to_eld(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !8769 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %eld = alloca i8*, align 8
  %cea = alloca i8*, align 8
  %db = alloca i8*, align 8
  %total_sad_count = alloca i32, align 4
  %mnl = alloca i32, align 4
  %dbl = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %sad_count = alloca i32, align 4
  %__UNIQUE_ID___x278 = alloca i32, align 4
  %__UNIQUE_ID___y279 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8772, metadata !DIExpression()), !dbg !8773
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8774, metadata !DIExpression()), !dbg !8775
  call void @llvm.dbg.declare(metadata i8** %eld, metadata !8776, metadata !DIExpression()), !dbg !8778
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8779
  %eld1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 36, !dbg !8780
  %arraydecay = getelementptr inbounds [128 x i8], [128 x i8]* %eld1, i64 0, i64 0, !dbg !8779
  store i8* %arraydecay, i8** %eld, align 8, !dbg !8778
  call void @llvm.dbg.declare(metadata i8** %cea, metadata !8781, metadata !DIExpression()), !dbg !8782
  call void @llvm.dbg.declare(metadata i8** %db, metadata !8783, metadata !DIExpression()), !dbg !8784
  call void @llvm.dbg.declare(metadata i32* %total_sad_count, metadata !8785, metadata !DIExpression()), !dbg !8786
  store i32 0, i32* %total_sad_count, align 4, !dbg !8786
  call void @llvm.dbg.declare(metadata i32* %mnl, metadata !8787, metadata !DIExpression()), !dbg !8788
  call void @llvm.dbg.declare(metadata i32* %dbl, metadata !8789, metadata !DIExpression()), !dbg !8790
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8791
  call void @clear_eld(%struct.drm_connector* %1) #8, !dbg !8792
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8793
  %tobool = icmp ne %struct.edid* %2, null, !dbg !8793
  br i1 %tobool, label %if.end, label %if.then, !dbg !8795

if.then:                                          ; preds = %entry
  br label %return, !dbg !8796

if.end:                                           ; preds = %entry
  %3 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8797
  %call = call i8* @drm_find_cea_extension(%struct.edid* %3) #8, !dbg !8798
  store i8* %call, i8** %cea, align 8, !dbg !8799
  %4 = load i8*, i8** %cea, align 8, !dbg !8800
  %tobool2 = icmp ne i8* %4, null, !dbg !8800
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8802

if.then3:                                         ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40, i64 0, i64 0)) #8, !dbg !8803
  br label %return, !dbg !8805

if.end4:                                          ; preds = %if.end
  %5 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8806
  %6 = load i8*, i8** %eld, align 8, !dbg !8807
  %arrayidx = getelementptr i8, i8* %6, i64 20, !dbg !8807
  %call5 = call i32 @get_monitor_name(%struct.edid* %5, i8* %arrayidx) #8, !dbg !8808
  store i32 %call5, i32* %mnl, align 4, !dbg !8809
  %7 = load i8*, i8** %eld, align 8, !dbg !8810
  %arrayidx6 = getelementptr i8, i8* %7, i64 20, !dbg !8810
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.41, i64 0, i64 0), i8* %arrayidx6) #8, !dbg !8810
  %8 = load i8*, i8** %cea, align 8, !dbg !8811
  %arrayidx7 = getelementptr i8, i8* %8, i64 1, !dbg !8811
  %9 = load i8, i8* %arrayidx7, align 1, !dbg !8811
  %conv = zext i8 %9 to i32, !dbg !8811
  %shl = shl i32 %conv, 5, !dbg !8812
  %conv8 = trunc i32 %shl to i8, !dbg !8811
  %10 = load i8*, i8** %eld, align 8, !dbg !8813
  %arrayidx9 = getelementptr i8, i8* %10, i64 4, !dbg !8813
  store i8 %conv8, i8* %arrayidx9, align 1, !dbg !8814
  %11 = load i32, i32* %mnl, align 4, !dbg !8815
  %12 = load i8*, i8** %eld, align 8, !dbg !8816
  %arrayidx10 = getelementptr i8, i8* %12, i64 4, !dbg !8816
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !8817
  %conv11 = zext i8 %13 to i32, !dbg !8817
  %or = or i32 %conv11, %11, !dbg !8817
  %conv12 = trunc i32 %or to i8, !dbg !8817
  store i8 %conv12, i8* %arrayidx10, align 1, !dbg !8817
  %14 = load i8*, i8** %eld, align 8, !dbg !8818
  %arrayidx13 = getelementptr i8, i8* %14, i64 0, !dbg !8818
  store i8 16, i8* %arrayidx13, align 1, !dbg !8819
  %15 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8820
  %mfg_id = getelementptr inbounds %struct.edid, %struct.edid* %15, i32 0, i32 1, !dbg !8821
  %arrayidx14 = getelementptr [2 x i8], [2 x i8]* %mfg_id, i64 0, i64 0, !dbg !8820
  %16 = load i8, i8* %arrayidx14, align 1, !dbg !8820
  %17 = load i8*, i8** %eld, align 8, !dbg !8822
  %arrayidx15 = getelementptr i8, i8* %17, i64 16, !dbg !8822
  store i8 %16, i8* %arrayidx15, align 1, !dbg !8823
  %18 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8824
  %mfg_id16 = getelementptr inbounds %struct.edid, %struct.edid* %18, i32 0, i32 1, !dbg !8825
  %arrayidx17 = getelementptr [2 x i8], [2 x i8]* %mfg_id16, i64 0, i64 1, !dbg !8824
  %19 = load i8, i8* %arrayidx17, align 1, !dbg !8824
  %20 = load i8*, i8** %eld, align 8, !dbg !8826
  %arrayidx18 = getelementptr i8, i8* %20, i64 17, !dbg !8826
  store i8 %19, i8* %arrayidx18, align 1, !dbg !8827
  %21 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8828
  %prod_code = getelementptr inbounds %struct.edid, %struct.edid* %21, i32 0, i32 2, !dbg !8829
  %arrayidx19 = getelementptr [2 x i8], [2 x i8]* %prod_code, i64 0, i64 0, !dbg !8828
  %22 = load i8, i8* %arrayidx19, align 1, !dbg !8828
  %23 = load i8*, i8** %eld, align 8, !dbg !8830
  %arrayidx20 = getelementptr i8, i8* %23, i64 18, !dbg !8830
  store i8 %22, i8* %arrayidx20, align 1, !dbg !8831
  %24 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8832
  %prod_code21 = getelementptr inbounds %struct.edid, %struct.edid* %24, i32 0, i32 2, !dbg !8833
  %arrayidx22 = getelementptr [2 x i8], [2 x i8]* %prod_code21, i64 0, i64 1, !dbg !8832
  %25 = load i8, i8* %arrayidx22, align 1, !dbg !8832
  %26 = load i8*, i8** %eld, align 8, !dbg !8834
  %arrayidx23 = getelementptr i8, i8* %26, i64 19, !dbg !8834
  store i8 %25, i8* %arrayidx23, align 1, !dbg !8835
  %27 = load i8*, i8** %cea, align 8, !dbg !8836
  %call24 = call i32 @cea_revision(i8* %27) #8, !dbg !8838
  %cmp = icmp sge i32 %call24, 3, !dbg !8839
  br i1 %cmp, label %if.then26, label %if.end71, !dbg !8840

if.then26:                                        ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8841, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.declare(metadata i32* %start, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.declare(metadata i32* %end, metadata !8846, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.declare(metadata i32* %sad_count, metadata !8848, metadata !DIExpression()), !dbg !8849
  %28 = load i8*, i8** %cea, align 8, !dbg !8850
  %call27 = call i32 @cea_db_offsets(i8* %28, i32* %start, i32* %end) #8, !dbg !8852
  %tobool28 = icmp ne i32 %call27, 0, !dbg !8852
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !8853

if.then29:                                        ; preds = %if.then26
  store i32 0, i32* %start, align 4, !dbg !8854
  store i32 0, i32* %end, align 4, !dbg !8856
  br label %if.end30, !dbg !8857

if.end30:                                         ; preds = %if.then29, %if.then26
  %29 = load i32, i32* %start, align 4, !dbg !8858
  store i32 %29, i32* %i, align 4, !dbg !8858
  br label %for.cond, !dbg !8858

for.cond:                                         ; preds = %for.inc, %if.end30
  %30 = load i32, i32* %i, align 4, !dbg !8860
  %31 = load i32, i32* %end, align 4, !dbg !8860
  %cmp31 = icmp slt i32 %30, %31, !dbg !8860
  br i1 %cmp31, label %land.rhs, label %land.end, !dbg !8860

land.rhs:                                         ; preds = %for.cond
  %32 = load i32, i32* %i, align 4, !dbg !8860
  %33 = load i8*, i8** %cea, align 8, !dbg !8860
  %34 = load i32, i32* %i, align 4, !dbg !8860
  %idxprom = sext i32 %34 to i64, !dbg !8860
  %arrayidx33 = getelementptr i8, i8* %33, i64 %idxprom, !dbg !8860
  %call34 = call i32 @cea_db_payload_len(i8* %arrayidx33) #8, !dbg !8860
  %add = add i32 %32, %call34, !dbg !8860
  %35 = load i32, i32* %end, align 4, !dbg !8860
  %cmp35 = icmp slt i32 %add, %35, !dbg !8860
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %36 = phi i1 [ false, %for.cond ], [ %cmp35, %land.rhs ], !dbg !8862
  br i1 %36, label %for.body, label %for.end, !dbg !8858

for.body:                                         ; preds = %land.end
  %37 = load i8*, i8** %cea, align 8, !dbg !8863
  %38 = load i32, i32* %i, align 4, !dbg !8865
  %idxprom37 = sext i32 %38 to i64, !dbg !8863
  %arrayidx38 = getelementptr i8, i8* %37, i64 %idxprom37, !dbg !8863
  store i8* %arrayidx38, i8** %db, align 8, !dbg !8866
  %39 = load i8*, i8** %db, align 8, !dbg !8867
  %call39 = call i32 @cea_db_payload_len(i8* %39) #8, !dbg !8868
  store i32 %call39, i32* %dbl, align 4, !dbg !8869
  %40 = load i8*, i8** %db, align 8, !dbg !8870
  %call40 = call i32 @cea_db_tag(i8* %40) #8, !dbg !8871
  switch i32 %call40, label %sw.default [
    i32 1, label %sw.bb
    i32 4, label %sw.bb55
    i32 3, label %sw.bb62
  ], !dbg !8872

sw.bb:                                            ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x278, metadata !8873, metadata !DIExpression()), !dbg !8876
  %41 = load i32, i32* %dbl, align 4, !dbg !8876
  %div = sdiv i32 %41, 3, !dbg !8876
  store i32 %div, i32* %__UNIQUE_ID___x278, align 4, !dbg !8876
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y279, metadata !8877, metadata !DIExpression()), !dbg !8876
  %42 = load i32, i32* %total_sad_count, align 4, !dbg !8876
  %sub = sub i32 15, %42, !dbg !8876
  store i32 %sub, i32* %__UNIQUE_ID___y279, align 4, !dbg !8876
  %43 = load i32, i32* %__UNIQUE_ID___x278, align 4, !dbg !8876
  %44 = load i32, i32* %__UNIQUE_ID___y279, align 4, !dbg !8876
  %cmp41 = icmp slt i32 %43, %44, !dbg !8876
  br i1 %cmp41, label %cond.true, label %cond.false, !dbg !8876

cond.true:                                        ; preds = %sw.bb
  %45 = load i32, i32* %__UNIQUE_ID___x278, align 4, !dbg !8876
  br label %cond.end, !dbg !8876

cond.false:                                       ; preds = %sw.bb
  %46 = load i32, i32* %__UNIQUE_ID___y279, align 4, !dbg !8876
  br label %cond.end, !dbg !8876

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %45, %cond.true ], [ %46, %cond.false ], !dbg !8876
  store i32 %cond, i32* %tmp, align 4, !dbg !8876
  %47 = load i32, i32* %tmp, align 4, !dbg !8876
  store i32 %47, i32* %sad_count, align 4, !dbg !8878
  %48 = load i32, i32* %sad_count, align 4, !dbg !8879
  %cmp43 = icmp sge i32 %48, 1, !dbg !8881
  br i1 %cmp43, label %if.then45, label %if.end53, !dbg !8882

if.then45:                                        ; preds = %cond.end
  %49 = load i8*, i8** %eld, align 8, !dbg !8883
  %50 = load i32, i32* %mnl, align 4, !dbg !8884
  %add46 = add i32 20, %50, !dbg !8884
  %51 = load i32, i32* %total_sad_count, align 4, !dbg !8884
  %mul = mul i32 3, %51, !dbg !8884
  %add47 = add i32 %add46, %mul, !dbg !8884
  %idxprom48 = sext i32 %add47 to i64, !dbg !8883
  %arrayidx49 = getelementptr i8, i8* %49, i64 %idxprom48, !dbg !8883
  %52 = load i8*, i8** %db, align 8, !dbg !8885
  %arrayidx50 = getelementptr i8, i8* %52, i64 1, !dbg !8885
  %53 = load i32, i32* %sad_count, align 4, !dbg !8886
  %mul51 = mul i32 %53, 3, !dbg !8887
  %conv52 = sext i32 %mul51 to i64, !dbg !8886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx49, i8* align 1 %arrayidx50, i64 %conv52, i1 false), !dbg !8888
  br label %if.end53, !dbg !8888

if.end53:                                         ; preds = %if.then45, %cond.end
  %54 = load i32, i32* %sad_count, align 4, !dbg !8889
  %55 = load i32, i32* %total_sad_count, align 4, !dbg !8890
  %add54 = add i32 %55, %54, !dbg !8890
  store i32 %add54, i32* %total_sad_count, align 4, !dbg !8890
  br label %sw.epilog, !dbg !8891

sw.bb55:                                          ; preds = %for.body
  %56 = load i32, i32* %dbl, align 4, !dbg !8892
  %cmp56 = icmp sge i32 %56, 1, !dbg !8894
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !8895

if.then58:                                        ; preds = %sw.bb55
  %57 = load i8*, i8** %db, align 8, !dbg !8896
  %arrayidx59 = getelementptr i8, i8* %57, i64 1, !dbg !8896
  %58 = load i8, i8* %arrayidx59, align 1, !dbg !8896
  %59 = load i8*, i8** %eld, align 8, !dbg !8897
  %arrayidx60 = getelementptr i8, i8* %59, i64 7, !dbg !8897
  store i8 %58, i8* %arrayidx60, align 1, !dbg !8898
  br label %if.end61, !dbg !8897

if.end61:                                         ; preds = %if.then58, %sw.bb55
  br label %sw.epilog, !dbg !8899

sw.bb62:                                          ; preds = %for.body
  %60 = load i8*, i8** %db, align 8, !dbg !8900
  %call63 = call zeroext i1 @cea_db_is_hdmi_vsdb(i8* %60) #8, !dbg !8902
  br i1 %call63, label %if.then64, label %if.end65, !dbg !8903

if.then64:                                        ; preds = %sw.bb62
  %61 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8904
  %62 = load i8*, i8** %db, align 8, !dbg !8905
  call void @drm_parse_hdmi_vsdb_audio(%struct.drm_connector* %61, i8* %62) #8, !dbg !8906
  br label %if.end65, !dbg !8906

if.end65:                                         ; preds = %if.then64, %sw.bb62
  br label %sw.epilog, !dbg !8907

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !8908

sw.epilog:                                        ; preds = %sw.default, %if.end65, %if.end61, %if.end53
  br label %for.inc, !dbg !8909

for.inc:                                          ; preds = %sw.epilog
  %63 = load i8*, i8** %cea, align 8, !dbg !8860
  %64 = load i32, i32* %i, align 4, !dbg !8860
  %idxprom66 = sext i32 %64 to i64, !dbg !8860
  %arrayidx67 = getelementptr i8, i8* %63, i64 %idxprom66, !dbg !8860
  %call68 = call i32 @cea_db_payload_len(i8* %arrayidx67) #8, !dbg !8860
  %add69 = add i32 %call68, 1, !dbg !8860
  %65 = load i32, i32* %i, align 4, !dbg !8860
  %add70 = add i32 %65, %add69, !dbg !8860
  store i32 %add70, i32* %i, align 4, !dbg !8860
  br label %for.cond, !dbg !8860, !llvm.loop !8910

for.end:                                          ; preds = %land.end
  br label %if.end71, !dbg !8912

if.end71:                                         ; preds = %for.end, %if.end4
  %66 = load i32, i32* %total_sad_count, align 4, !dbg !8913
  %shl72 = shl i32 %66, 4, !dbg !8914
  %67 = load i8*, i8** %eld, align 8, !dbg !8915
  %arrayidx73 = getelementptr i8, i8* %67, i64 5, !dbg !8915
  %68 = load i8, i8* %arrayidx73, align 1, !dbg !8916
  %conv74 = zext i8 %68 to i32, !dbg !8916
  %or75 = or i32 %conv74, %shl72, !dbg !8916
  %conv76 = trunc i32 %or75 to i8, !dbg !8916
  store i8 %conv76, i8* %arrayidx73, align 1, !dbg !8916
  %69 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8917
  %connector_type = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %69, i32 0, i32 8, !dbg !8919
  %70 = load i32, i32* %connector_type, align 4, !dbg !8919
  %cmp77 = icmp eq i32 %70, 10, !dbg !8920
  br i1 %cmp77, label %if.then82, label %lor.lhs.false, !dbg !8921

lor.lhs.false:                                    ; preds = %if.end71
  %71 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8922
  %connector_type79 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %71, i32 0, i32 8, !dbg !8923
  %72 = load i32, i32* %connector_type79, align 4, !dbg !8923
  %cmp80 = icmp eq i32 %72, 14, !dbg !8924
  br i1 %cmp80, label %if.then82, label %if.else, !dbg !8925

if.then82:                                        ; preds = %lor.lhs.false, %if.end71
  %73 = load i8*, i8** %eld, align 8, !dbg !8926
  %arrayidx83 = getelementptr i8, i8* %73, i64 5, !dbg !8926
  %74 = load i8, i8* %arrayidx83, align 1, !dbg !8927
  %conv84 = zext i8 %74 to i32, !dbg !8927
  %or85 = or i32 %conv84, 4, !dbg !8927
  %conv86 = trunc i32 %or85 to i8, !dbg !8927
  store i8 %conv86, i8* %arrayidx83, align 1, !dbg !8927
  br label %if.end90, !dbg !8926

if.else:                                          ; preds = %lor.lhs.false
  %75 = load i8*, i8** %eld, align 8, !dbg !8928
  %arrayidx87 = getelementptr i8, i8* %75, i64 5, !dbg !8928
  %76 = load i8, i8* %arrayidx87, align 1, !dbg !8929
  %conv88 = zext i8 %76 to i32, !dbg !8929
  %conv89 = trunc i32 %conv88 to i8, !dbg !8929
  store i8 %conv89, i8* %arrayidx87, align 1, !dbg !8929
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.then82
  %77 = load i8*, i8** %eld, align 8, !dbg !8930
  %call91 = call i32 @drm_eld_calc_baseline_block_size(i8* %77) #8, !dbg !8930
  %add92 = add i32 %call91, 4, !dbg !8930
  %sub93 = sub i32 %add92, 1, !dbg !8930
  %div94 = sdiv i32 %sub93, 4, !dbg !8930
  %conv95 = trunc i32 %div94 to i8, !dbg !8930
  %78 = load i8*, i8** %eld, align 8, !dbg !8931
  %arrayidx96 = getelementptr i8, i8* %78, i64 2, !dbg !8931
  store i8 %conv95, i8* %arrayidx96, align 1, !dbg !8932
  %79 = load i8*, i8** %eld, align 8, !dbg !8933
  %call97 = call i32 @drm_eld_size(i8* %79) #8, !dbg !8933
  %80 = load i32, i32* %total_sad_count, align 4, !dbg !8933
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i32 %call97, i32 %80) #8, !dbg !8933
  br label %return, !dbg !8934

return:                                           ; preds = %if.end90, %if.then3, %if.then
  ret void, !dbg !8934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_detailed_modes(%struct.drm_connector* %connector, %struct.edid* %edid, i32 %quirks) #0 !dbg !8935 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %quirks.addr = alloca i32, align 4
  %closure = alloca %struct.detailed_mode_closure, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  store i32 %quirks, i32* %quirks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quirks.addr, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure* %closure, metadata !8944, metadata !DIExpression()), !dbg !8952
  %connector1 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 0, !dbg !8953
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8954
  store %struct.drm_connector* %0, %struct.drm_connector** %connector1, align 8, !dbg !8953
  %edid2 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 1, !dbg !8953
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8955
  store %struct.edid* %1, %struct.edid** %edid2, align 8, !dbg !8953
  %preferred = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !8953
  store i8 1, i8* %preferred, align 8, !dbg !8953
  %quirks3 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 3, !dbg !8953
  %2 = load i32, i32* %quirks.addr, align 4, !dbg !8956
  store i32 %2, i32* %quirks3, align 4, !dbg !8953
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !8953
  store i32 0, i32* %modes, align 8, !dbg !8953
  %preferred4 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !8957
  %3 = load i8, i8* %preferred4, align 8, !dbg !8957
  %tobool = trunc i8 %3 to i1, !dbg !8957
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !8959

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8960
  %version = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 6, !dbg !8960
  %5 = load i8, i8* %version, align 1, !dbg !8960
  %conv = zext i8 %5 to i32, !dbg !8960
  %cmp = icmp sgt i32 %conv, 1, !dbg !8960
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !8960

lor.lhs.false:                                    ; preds = %land.lhs.true
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8960
  %version6 = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 6, !dbg !8960
  %7 = load i8, i8* %version6, align 1, !dbg !8960
  %conv7 = zext i8 %7 to i32, !dbg !8960
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !8960
  br i1 %cmp8, label %land.lhs.true10, label %if.then, !dbg !8960

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %8 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8960
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %8, i32 0, i32 7, !dbg !8960
  %9 = load i8, i8* %revision, align 1, !dbg !8960
  %conv11 = zext i8 %9 to i32, !dbg !8960
  %cmp12 = icmp sgt i32 %conv11, 3, !dbg !8960
  br i1 %cmp12, label %if.end, label %if.then, !dbg !8961

if.then:                                          ; preds = %land.lhs.true10, %lor.lhs.false
  %10 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8962
  %features = getelementptr inbounds %struct.edid, %struct.edid* %10, i32 0, i32 12, !dbg !8963
  %11 = load i8, i8* %features, align 1, !dbg !8963
  %conv14 = zext i8 %11 to i32, !dbg !8962
  %and = and i32 %conv14, 2, !dbg !8964
  %tobool15 = icmp ne i32 %and, 0, !dbg !8965
  %preferred16 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !8966
  %frombool = zext i1 %tobool15 to i8, !dbg !8967
  store i8 %frombool, i8* %preferred16, align 8, !dbg !8967
  br label %if.end, !dbg !8968

if.end:                                           ; preds = %if.then, %land.lhs.true10, %land.lhs.true, %entry
  %12 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8969
  %13 = bitcast %struct.edid* %12 to i8*, !dbg !8970
  %14 = bitcast %struct.detailed_mode_closure* %closure to i8*, !dbg !8971
  call void @drm_for_each_detailed_block(i8* %13, void (%struct.detailed_timing*, i8*)* @do_detailed_mode, i8* %14) #8, !dbg !8972
  %modes17 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !8973
  %15 = load i32, i32* %modes17, align 8, !dbg !8973
  ret i32 %15, !dbg !8974
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_cvt_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !8975 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %closure = alloca %struct.detailed_mode_closure, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8976, metadata !DIExpression()), !dbg !8977
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8978, metadata !DIExpression()), !dbg !8979
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure* %closure, metadata !8980, metadata !DIExpression()), !dbg !8981
  %connector1 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 0, !dbg !8982
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !8983
  store %struct.drm_connector* %0, %struct.drm_connector** %connector1, align 8, !dbg !8982
  %edid2 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 1, !dbg !8982
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8984
  store %struct.edid* %1, %struct.edid** %edid2, align 8, !dbg !8982
  %preferred = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !8982
  store i8 0, i8* %preferred, align 8, !dbg !8982
  %quirks = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 3, !dbg !8982
  store i32 0, i32* %quirks, align 4, !dbg !8982
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !8982
  store i32 0, i32* %modes, align 8, !dbg !8982
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8985
  %version = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 6, !dbg !8985
  %3 = load i8, i8* %version, align 1, !dbg !8985
  %conv = zext i8 %3 to i32, !dbg !8985
  %cmp = icmp sgt i32 %conv, 1, !dbg !8985
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8985

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8985
  %version4 = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 6, !dbg !8985
  %5 = load i8, i8* %version4, align 1, !dbg !8985
  %conv5 = zext i8 %5 to i32, !dbg !8985
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !8985
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !8985

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8985
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 7, !dbg !8985
  %7 = load i8, i8* %revision, align 1, !dbg !8985
  %conv8 = zext i8 %7 to i32, !dbg !8985
  %cmp9 = icmp sgt i32 %conv8, 2, !dbg !8985
  br i1 %cmp9, label %if.then, label %if.end, !dbg !8987

if.then:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !8988
  %9 = bitcast %struct.edid* %8 to i8*, !dbg !8989
  %10 = bitcast %struct.detailed_mode_closure* %closure to i8*, !dbg !8990
  call void @drm_for_each_detailed_block(i8* %9, void (%struct.detailed_timing*, i8*)* @do_cvt_mode, i8* %10) #8, !dbg !8991
  br label %if.end, !dbg !8991

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %modes11 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !8992
  %11 = load i32, i32* %modes11, align 8, !dbg !8992
  ret i32 %11, !dbg !8993
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_standard_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !8994 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %i = alloca i32, align 4
  %modes = alloca i32, align 4
  %closure = alloca %struct.detailed_mode_closure, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !8995, metadata !DIExpression()), !dbg !8996
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !8997, metadata !DIExpression()), !dbg !8998
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8999, metadata !DIExpression()), !dbg !9000
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !9001, metadata !DIExpression()), !dbg !9002
  store i32 0, i32* %modes, align 4, !dbg !9002
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure* %closure, metadata !9003, metadata !DIExpression()), !dbg !9004
  %connector1 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 0, !dbg !9005
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9006
  store %struct.drm_connector* %0, %struct.drm_connector** %connector1, align 8, !dbg !9005
  %edid2 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 1, !dbg !9005
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9007
  store %struct.edid* %1, %struct.edid** %edid2, align 8, !dbg !9005
  %preferred = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !9005
  store i8 0, i8* %preferred, align 8, !dbg !9005
  %quirks = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 3, !dbg !9005
  store i32 0, i32* %quirks, align 4, !dbg !9005
  %modes3 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !9005
  store i32 0, i32* %modes3, align 8, !dbg !9005
  store i32 0, i32* %i, align 4, !dbg !9008
  br label %for.cond, !dbg !9010

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9011
  %cmp = icmp slt i32 %2, 8, !dbg !9013
  br i1 %cmp, label %for.body, label %for.end, !dbg !9014

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !9015, metadata !DIExpression()), !dbg !9017
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9018
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9019
  %5 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9020
  %standard_timings = getelementptr inbounds %struct.edid, %struct.edid* %5, i32 0, i32 24, !dbg !9021
  %6 = load i32, i32* %i, align 4, !dbg !9022
  %idxprom = sext i32 %6 to i64, !dbg !9020
  %arrayidx = getelementptr [8 x %struct.std_timing], [8 x %struct.std_timing]* %standard_timings, i64 0, i64 %idxprom, !dbg !9020
  %call = call %struct.drm_display_mode* @drm_mode_std(%struct.drm_connector* %3, %struct.edid* %4, %struct.std_timing* %arrayidx) #8, !dbg !9023
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %newmode, align 8, !dbg !9024
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9025
  %tobool = icmp ne %struct.drm_display_mode* %7, null, !dbg !9025
  br i1 %tobool, label %if.then, label %if.end, !dbg !9027

if.then:                                          ; preds = %for.body
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9028
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9030
  call void @drm_mode_probed_add(%struct.drm_connector* %8, %struct.drm_display_mode* %9) #8, !dbg !9031
  %10 = load i32, i32* %modes, align 4, !dbg !9032
  %inc = add i32 %10, 1, !dbg !9032
  store i32 %inc, i32* %modes, align 4, !dbg !9032
  br label %if.end, !dbg !9033

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9034

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !9035
  %inc4 = add i32 %11, 1, !dbg !9035
  store i32 %inc4, i32* %i, align 4, !dbg !9035
  br label %for.cond, !dbg !9036, !llvm.loop !9037

for.end:                                          ; preds = %for.cond
  %12 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9039
  %version = getelementptr inbounds %struct.edid, %struct.edid* %12, i32 0, i32 6, !dbg !9039
  %13 = load i8, i8* %version, align 1, !dbg !9039
  %conv = zext i8 %13 to i32, !dbg !9039
  %cmp5 = icmp sgt i32 %conv, 1, !dbg !9039
  br i1 %cmp5, label %if.then14, label %lor.lhs.false, !dbg !9039

lor.lhs.false:                                    ; preds = %for.end
  %14 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9039
  %version7 = getelementptr inbounds %struct.edid, %struct.edid* %14, i32 0, i32 6, !dbg !9039
  %15 = load i8, i8* %version7, align 1, !dbg !9039
  %conv8 = zext i8 %15 to i32, !dbg !9039
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !9039
  br i1 %cmp9, label %land.lhs.true, label %if.end15, !dbg !9039

land.lhs.true:                                    ; preds = %lor.lhs.false
  %16 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9039
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %16, i32 0, i32 7, !dbg !9039
  %17 = load i8, i8* %revision, align 1, !dbg !9039
  %conv11 = zext i8 %17 to i32, !dbg !9039
  %cmp12 = icmp sgt i32 %conv11, 0, !dbg !9039
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9041

if.then14:                                        ; preds = %land.lhs.true, %for.end
  %18 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9042
  %19 = bitcast %struct.edid* %18 to i8*, !dbg !9043
  %20 = bitcast %struct.detailed_mode_closure* %closure to i8*, !dbg !9044
  call void @drm_for_each_detailed_block(i8* %19, void (%struct.detailed_timing*, i8*)* @do_standard_modes, i8* %20) #8, !dbg !9045
  br label %if.end15, !dbg !9045

if.end15:                                         ; preds = %if.then14, %land.lhs.true, %lor.lhs.false
  %21 = load i32, i32* %modes, align 4, !dbg !9046
  %modes16 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !9047
  %22 = load i32, i32* %modes16, align 8, !dbg !9047
  %add = add i32 %21, %22, !dbg !9048
  ret i32 %add, !dbg !9049
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_established_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !9050 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %est_bits = alloca i64, align 8
  %i = alloca i32, align 4
  %modes = alloca i32, align 4
  %closure = alloca %struct.detailed_mode_closure, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9051, metadata !DIExpression()), !dbg !9052
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !9053, metadata !DIExpression()), !dbg !9054
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !9055, metadata !DIExpression()), !dbg !9056
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9057
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !9058
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !9058
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !9056
  call void @llvm.dbg.declare(metadata i64* %est_bits, metadata !9059, metadata !DIExpression()), !dbg !9060
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9061
  %established_timings = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 23, !dbg !9062
  %t1 = getelementptr inbounds %struct.est_timings, %struct.est_timings* %established_timings, i32 0, i32 0, !dbg !9063
  %3 = load i8, i8* %t1, align 1, !dbg !9063
  %conv = zext i8 %3 to i32, !dbg !9061
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9064
  %established_timings2 = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 23, !dbg !9065
  %t2 = getelementptr inbounds %struct.est_timings, %struct.est_timings* %established_timings2, i32 0, i32 1, !dbg !9066
  %5 = load i8, i8* %t2, align 1, !dbg !9066
  %conv3 = zext i8 %5 to i32, !dbg !9064
  %shl = shl i32 %conv3, 8, !dbg !9067
  %or = or i32 %conv, %shl, !dbg !9068
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9069
  %established_timings4 = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 23, !dbg !9070
  %mfg_rsvd = getelementptr inbounds %struct.est_timings, %struct.est_timings* %established_timings4, i32 0, i32 2, !dbg !9071
  %7 = load i8, i8* %mfg_rsvd, align 1, !dbg !9071
  %conv5 = zext i8 %7 to i32, !dbg !9069
  %and = and i32 %conv5, 128, !dbg !9072
  %shl6 = shl i32 %and, 9, !dbg !9073
  %or7 = or i32 %or, %shl6, !dbg !9074
  %conv8 = sext i32 %or7 to i64, !dbg !9061
  store i64 %conv8, i64* %est_bits, align 8, !dbg !9060
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9075, metadata !DIExpression()), !dbg !9076
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !9077, metadata !DIExpression()), !dbg !9078
  store i32 0, i32* %modes, align 4, !dbg !9078
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure* %closure, metadata !9079, metadata !DIExpression()), !dbg !9080
  %connector9 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 0, !dbg !9081
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9082
  store %struct.drm_connector* %8, %struct.drm_connector** %connector9, align 8, !dbg !9081
  %edid10 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 1, !dbg !9081
  %9 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9083
  store %struct.edid* %9, %struct.edid** %edid10, align 8, !dbg !9081
  %preferred = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !9081
  store i8 0, i8* %preferred, align 8, !dbg !9081
  %quirks = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 3, !dbg !9081
  store i32 0, i32* %quirks, align 4, !dbg !9081
  %modes11 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !9081
  store i32 0, i32* %modes11, align 8, !dbg !9081
  store i32 0, i32* %i, align 4, !dbg !9084
  br label %for.cond, !dbg !9086

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load i32, i32* %i, align 4, !dbg !9087
  %cmp = icmp sle i32 %10, 16, !dbg !9089
  br i1 %cmp, label %for.body, label %for.end, !dbg !9090

for.body:                                         ; preds = %for.cond
  %11 = load i64, i64* %est_bits, align 8, !dbg !9091
  %12 = load i32, i32* %i, align 4, !dbg !9094
  %shl13 = shl i32 1, %12, !dbg !9095
  %conv14 = sext i32 %shl13 to i64, !dbg !9096
  %and15 = and i64 %11, %conv14, !dbg !9097
  %tobool = icmp ne i64 %and15, 0, !dbg !9097
  br i1 %tobool, label %if.then, label %if.end18, !dbg !9098

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !9099, metadata !DIExpression()), !dbg !9101
  %13 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9102
  %14 = load i32, i32* %i, align 4, !dbg !9103
  %idxprom = sext i32 %14 to i64, !dbg !9104
  %arrayidx = getelementptr [17 x %struct.drm_display_mode], [17 x %struct.drm_display_mode]* @edid_est_modes, i64 0, i64 %idxprom, !dbg !9104
  %call = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %13, %struct.drm_display_mode* %arrayidx) #8, !dbg !9105
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %newmode, align 8, !dbg !9106
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9107
  %tobool16 = icmp ne %struct.drm_display_mode* %15, null, !dbg !9107
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !9109

if.then17:                                        ; preds = %if.then
  %16 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9110
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9112
  call void @drm_mode_probed_add(%struct.drm_connector* %16, %struct.drm_display_mode* %17) #8, !dbg !9113
  %18 = load i32, i32* %modes, align 4, !dbg !9114
  %inc = add i32 %18, 1, !dbg !9114
  store i32 %inc, i32* %modes, align 4, !dbg !9114
  br label %if.end, !dbg !9115

if.end:                                           ; preds = %if.then17, %if.then
  br label %if.end18, !dbg !9116

if.end18:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !9117

for.inc:                                          ; preds = %if.end18
  %19 = load i32, i32* %i, align 4, !dbg !9118
  %inc19 = add i32 %19, 1, !dbg !9118
  store i32 %inc19, i32* %i, align 4, !dbg !9118
  br label %for.cond, !dbg !9119, !llvm.loop !9120

for.end:                                          ; preds = %for.cond
  %20 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9122
  %version = getelementptr inbounds %struct.edid, %struct.edid* %20, i32 0, i32 6, !dbg !9122
  %21 = load i8, i8* %version, align 1, !dbg !9122
  %conv20 = zext i8 %21 to i32, !dbg !9122
  %cmp21 = icmp sgt i32 %conv20, 1, !dbg !9122
  br i1 %cmp21, label %if.then30, label %lor.lhs.false, !dbg !9122

lor.lhs.false:                                    ; preds = %for.end
  %22 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9122
  %version23 = getelementptr inbounds %struct.edid, %struct.edid* %22, i32 0, i32 6, !dbg !9122
  %23 = load i8, i8* %version23, align 1, !dbg !9122
  %conv24 = zext i8 %23 to i32, !dbg !9122
  %cmp25 = icmp eq i32 %conv24, 1, !dbg !9122
  br i1 %cmp25, label %land.lhs.true, label %if.end31, !dbg !9122

land.lhs.true:                                    ; preds = %lor.lhs.false
  %24 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9122
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %24, i32 0, i32 7, !dbg !9122
  %25 = load i8, i8* %revision, align 1, !dbg !9122
  %conv27 = zext i8 %25 to i32, !dbg !9122
  %cmp28 = icmp sgt i32 %conv27, 0, !dbg !9122
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !9124

if.then30:                                        ; preds = %land.lhs.true, %for.end
  %26 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9125
  %27 = bitcast %struct.edid* %26 to i8*, !dbg !9126
  %28 = bitcast %struct.detailed_mode_closure* %closure to i8*, !dbg !9127
  call void @drm_for_each_detailed_block(i8* %27, void (%struct.detailed_timing*, i8*)* @do_established_modes, i8* %28) #8, !dbg !9128
  br label %if.end31, !dbg !9128

if.end31:                                         ; preds = %if.then30, %land.lhs.true, %lor.lhs.false
  %29 = load i32, i32* %modes, align 4, !dbg !9129
  %modes32 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !9130
  %30 = load i32, i32* %modes32, align 8, !dbg !9130
  %add = add i32 %29, %30, !dbg !9131
  ret i32 %add, !dbg !9132
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_cea_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !9133 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %cea = alloca i8*, align 8
  %db = alloca i8*, align 8
  %hdmi = alloca i8*, align 8
  %video = alloca i8*, align 8
  %dbl = alloca i8, align 1
  %hdmi_len = alloca i8, align 1
  %video_len = alloca i8, align 1
  %modes = alloca i32, align 4
  %i = alloca i32, align 4
  %start = alloca i32, align 4
  %end = alloca i32, align 4
  %vdb420 = alloca i8*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.declare(metadata i8** %cea, metadata !9138, metadata !DIExpression()), !dbg !9139
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9140
  %call = call i8* @drm_find_cea_extension(%struct.edid* %0) #8, !dbg !9141
  store i8* %call, i8** %cea, align 8, !dbg !9139
  call void @llvm.dbg.declare(metadata i8** %db, metadata !9142, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata i8** %hdmi, metadata !9144, metadata !DIExpression()), !dbg !9145
  store i8* null, i8** %hdmi, align 8, !dbg !9145
  call void @llvm.dbg.declare(metadata i8** %video, metadata !9146, metadata !DIExpression()), !dbg !9147
  store i8* null, i8** %video, align 8, !dbg !9147
  call void @llvm.dbg.declare(metadata i8* %dbl, metadata !9148, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.declare(metadata i8* %hdmi_len, metadata !9150, metadata !DIExpression()), !dbg !9151
  call void @llvm.dbg.declare(metadata i8* %video_len, metadata !9152, metadata !DIExpression()), !dbg !9153
  store i8 0, i8* %video_len, align 1, !dbg !9153
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !9154, metadata !DIExpression()), !dbg !9155
  store i32 0, i32* %modes, align 4, !dbg !9155
  %1 = load i8*, i8** %cea, align 8, !dbg !9156
  %tobool = icmp ne i8* %1, null, !dbg !9156
  br i1 %tobool, label %land.lhs.true, label %if.end35, !dbg !9158

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %cea, align 8, !dbg !9159
  %call1 = call i32 @cea_revision(i8* %2) #8, !dbg !9160
  %cmp = icmp sge i32 %call1, 3, !dbg !9161
  br i1 %cmp, label %if.then, label %if.end35, !dbg !9162

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9163, metadata !DIExpression()), !dbg !9165
  call void @llvm.dbg.declare(metadata i32* %start, metadata !9166, metadata !DIExpression()), !dbg !9167
  call void @llvm.dbg.declare(metadata i32* %end, metadata !9168, metadata !DIExpression()), !dbg !9169
  %3 = load i8*, i8** %cea, align 8, !dbg !9170
  %call2 = call i32 @cea_db_offsets(i8* %3, i32* %start, i32* %end) #8, !dbg !9172
  %tobool3 = icmp ne i32 %call2, 0, !dbg !9172
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !9173

if.then4:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !9174
  br label %return, !dbg !9174

if.end:                                           ; preds = %if.then
  %4 = load i32, i32* %start, align 4, !dbg !9175
  store i32 %4, i32* %i, align 4, !dbg !9175
  br label %for.cond, !dbg !9175

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !9177
  %6 = load i32, i32* %end, align 4, !dbg !9177
  %cmp5 = icmp slt i32 %5, %6, !dbg !9177
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !9177

land.rhs:                                         ; preds = %for.cond
  %7 = load i32, i32* %i, align 4, !dbg !9177
  %8 = load i8*, i8** %cea, align 8, !dbg !9177
  %9 = load i32, i32* %i, align 4, !dbg !9177
  %idxprom = sext i32 %9 to i64, !dbg !9177
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !9177
  %call6 = call i32 @cea_db_payload_len(i8* %arrayidx) #8, !dbg !9177
  %add = add i32 %7, %call6, !dbg !9177
  %10 = load i32, i32* %end, align 4, !dbg !9177
  %cmp7 = icmp slt i32 %add, %10, !dbg !9177
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %11 = phi i1 [ false, %for.cond ], [ %cmp7, %land.rhs ], !dbg !9179
  br i1 %11, label %for.body, label %for.end, !dbg !9175

for.body:                                         ; preds = %land.end
  %12 = load i8*, i8** %cea, align 8, !dbg !9180
  %13 = load i32, i32* %i, align 4, !dbg !9182
  %idxprom8 = sext i32 %13 to i64, !dbg !9180
  %arrayidx9 = getelementptr i8, i8* %12, i64 %idxprom8, !dbg !9180
  store i8* %arrayidx9, i8** %db, align 8, !dbg !9183
  %14 = load i8*, i8** %db, align 8, !dbg !9184
  %call10 = call i32 @cea_db_payload_len(i8* %14) #8, !dbg !9185
  %conv = trunc i32 %call10 to i8, !dbg !9185
  store i8 %conv, i8* %dbl, align 1, !dbg !9186
  %15 = load i8*, i8** %db, align 8, !dbg !9187
  %call11 = call i32 @cea_db_tag(i8* %15) #8, !dbg !9189
  %cmp12 = icmp eq i32 %call11, 2, !dbg !9190
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !9191

if.then14:                                        ; preds = %for.body
  %16 = load i8*, i8** %db, align 8, !dbg !9192
  %add.ptr = getelementptr i8, i8* %16, i64 1, !dbg !9194
  store i8* %add.ptr, i8** %video, align 8, !dbg !9195
  %17 = load i8, i8* %dbl, align 1, !dbg !9196
  store i8 %17, i8* %video_len, align 1, !dbg !9197
  %18 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9198
  %19 = load i8*, i8** %video, align 8, !dbg !9199
  %20 = load i8, i8* %dbl, align 1, !dbg !9200
  %call15 = call i32 @do_cea_modes(%struct.drm_connector* %18, i8* %19, i8 zeroext %20) #8, !dbg !9201
  %21 = load i32, i32* %modes, align 4, !dbg !9202
  %add16 = add i32 %21, %call15, !dbg !9202
  store i32 %add16, i32* %modes, align 4, !dbg !9202
  br label %if.end29, !dbg !9203

if.else:                                          ; preds = %for.body
  %22 = load i8*, i8** %db, align 8, !dbg !9204
  %call17 = call zeroext i1 @cea_db_is_hdmi_vsdb(i8* %22) #8, !dbg !9206
  br i1 %call17, label %if.then18, label %if.else19, !dbg !9207

if.then18:                                        ; preds = %if.else
  %23 = load i8*, i8** %db, align 8, !dbg !9208
  store i8* %23, i8** %hdmi, align 8, !dbg !9210
  %24 = load i8, i8* %dbl, align 1, !dbg !9211
  store i8 %24, i8* %hdmi_len, align 1, !dbg !9212
  br label %if.end28, !dbg !9213

if.else19:                                        ; preds = %if.else
  %25 = load i8*, i8** %db, align 8, !dbg !9214
  %call20 = call zeroext i1 @cea_db_is_y420vdb(i8* %25) #8, !dbg !9216
  br i1 %call20, label %if.then21, label %if.end27, !dbg !9217

if.then21:                                        ; preds = %if.else19
  call void @llvm.dbg.declare(metadata i8** %vdb420, metadata !9218, metadata !DIExpression()), !dbg !9220
  %26 = load i8*, i8** %db, align 8, !dbg !9221
  %arrayidx22 = getelementptr i8, i8* %26, i64 2, !dbg !9221
  store i8* %arrayidx22, i8** %vdb420, align 8, !dbg !9220
  %27 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9222
  %28 = load i8*, i8** %vdb420, align 8, !dbg !9223
  %29 = load i8, i8* %dbl, align 1, !dbg !9224
  %conv23 = zext i8 %29 to i32, !dbg !9224
  %sub = sub i32 %conv23, 1, !dbg !9225
  %conv24 = trunc i32 %sub to i8, !dbg !9224
  %call25 = call i32 @do_y420vdb_modes(%struct.drm_connector* %27, i8* %28, i8 zeroext %conv24) #8, !dbg !9226
  %30 = load i32, i32* %modes, align 4, !dbg !9227
  %add26 = add i32 %30, %call25, !dbg !9227
  store i32 %add26, i32* %modes, align 4, !dbg !9227
  br label %if.end27, !dbg !9228

if.end27:                                         ; preds = %if.then21, %if.else19
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then18
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then14
  br label %for.inc, !dbg !9229

for.inc:                                          ; preds = %if.end29
  %31 = load i8*, i8** %cea, align 8, !dbg !9177
  %32 = load i32, i32* %i, align 4, !dbg !9177
  %idxprom30 = sext i32 %32 to i64, !dbg !9177
  %arrayidx31 = getelementptr i8, i8* %31, i64 %idxprom30, !dbg !9177
  %call32 = call i32 @cea_db_payload_len(i8* %arrayidx31) #8, !dbg !9177
  %add33 = add i32 %call32, 1, !dbg !9177
  %33 = load i32, i32* %i, align 4, !dbg !9177
  %add34 = add i32 %33, %add33, !dbg !9177
  store i32 %add34, i32* %i, align 4, !dbg !9177
  br label %for.cond, !dbg !9177, !llvm.loop !9230

for.end:                                          ; preds = %land.end
  br label %if.end35, !dbg !9232

if.end35:                                         ; preds = %for.end, %land.lhs.true, %entry
  %34 = load i8*, i8** %hdmi, align 8, !dbg !9233
  %tobool36 = icmp ne i8* %34, null, !dbg !9233
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !9235

if.then37:                                        ; preds = %if.end35
  %35 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9236
  %36 = load i8*, i8** %hdmi, align 8, !dbg !9237
  %37 = load i8, i8* %hdmi_len, align 1, !dbg !9238
  %38 = load i8*, i8** %video, align 8, !dbg !9239
  %39 = load i8, i8* %video_len, align 1, !dbg !9240
  %call38 = call i32 @do_hdmi_vsdb_modes(%struct.drm_connector* %35, i8* %36, i8 zeroext %37, i8* %38, i8 zeroext %39) #8, !dbg !9241
  %40 = load i32, i32* %modes, align 4, !dbg !9242
  %add39 = add i32 %40, %call38, !dbg !9242
  store i32 %add39, i32* %modes, align 4, !dbg !9242
  br label %if.end40, !dbg !9243

if.end40:                                         ; preds = %if.then37, %if.end35
  %41 = load i32, i32* %modes, align 4, !dbg !9244
  store i32 %41, i32* %retval, align 4, !dbg !9245
  br label %return, !dbg !9245

return:                                           ; preds = %if.end40, %if.then4
  %42 = load i32, i32* %retval, align 4, !dbg !9246
  ret i32 %42, !dbg !9246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_alternate_cea_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !9247 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !9248
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %mode = alloca %struct.drm_display_mode*, align 8
  %tmp = alloca %struct.drm_display_mode*, align 8
  %list = alloca %struct.list_head, align 8
  %modes = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.drm_display_mode*, align 8
  %cea_mode = alloca %struct.drm_display_mode*, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  %vic = alloca i8, align 1
  %clock1 = alloca i32, align 4
  %clock2 = alloca i32, align 4
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.drm_display_mode*, align 8
  %__mptr48 = alloca i8*, align 8
  %tmp52 = alloca %struct.drm_display_mode*, align 8
  %__mptr54 = alloca i8*, align 8
  %tmp59 = alloca %struct.drm_display_mode*, align 8
  %__mptr68 = alloca i8*, align 8
  %tmp73 = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9255, metadata !DIExpression()), !dbg !9256
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !9257, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !9259, metadata !DIExpression()), !dbg !9260
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9261
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !9262
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !9262
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !9260
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !9263, metadata !DIExpression()), !dbg !9264
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %tmp, metadata !9265, metadata !DIExpression()), !dbg !9266
  call void @llvm.dbg.declare(metadata %struct.list_head* %list, metadata !9267, metadata !DIExpression()), !dbg !9268
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9268
  store %struct.list_head* %list, %struct.list_head** %next, align 8, !dbg !9268
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1, !dbg !9268
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !dbg !9268
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !9269, metadata !DIExpression()), !dbg !9270
  store i32 0, i32* %modes, align 4, !dbg !9270
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9271
  %call = call i8* @drm_find_cea_extension(%struct.edid* %2) #8, !dbg !9273
  %tobool = icmp ne i8* %call, null, !dbg !9273
  br i1 %tobool, label %if.end, label %if.then, !dbg !9274

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9275
  br label %return, !dbg !9275

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9276, metadata !DIExpression()), !dbg !9278
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9278
  %probed_modes = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %3, i32 0, i32 17, !dbg !9278
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes, i32 0, i32 0, !dbg !9278
  %4 = load %struct.list_head*, %struct.list_head** %next2, align 8, !dbg !9278
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !9278
  store i8* %5, i8** %__mptr, align 8, !dbg !9278
  br label %do.body, !dbg !9278

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9279

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9278
  %add.ptr = getelementptr i8, i8* %6, i64 -64, !dbg !9278
  %7 = bitcast i8* %add.ptr to %struct.drm_display_mode*, !dbg !9278
  store %struct.drm_display_mode* %7, %struct.drm_display_mode** %tmp3, align 8, !dbg !9279
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp3, align 8, !dbg !9278
  store %struct.drm_display_mode* %8, %struct.drm_display_mode** %mode, align 8, !dbg !9281
  br label %for.cond, !dbg !9281

for.cond:                                         ; preds = %do.end45, %do.end
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9282
  %head = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %9, i32 0, i32 30, !dbg !9282
  %10 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9282
  %probed_modes4 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %10, i32 0, i32 17, !dbg !9282
  %cmp = icmp eq %struct.list_head* %head, %probed_modes4, !dbg !9282
  %lnot = xor i1 %cmp, true, !dbg !9282
  br i1 %lnot, label %for.body, label %for.end, !dbg !9281

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %cea_mode, metadata !9283, metadata !DIExpression()), !dbg !9284
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9284
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !9285, metadata !DIExpression()), !dbg !9286
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !9287, metadata !DIExpression()), !dbg !9288
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9289
  %call5 = call zeroext i8 @drm_match_cea_mode(%struct.drm_display_mode* %11) #8, !dbg !9290
  store i8 %call5, i8* %vic, align 1, !dbg !9288
  call void @llvm.dbg.declare(metadata i32* %clock1, metadata !9291, metadata !DIExpression()), !dbg !9292
  call void @llvm.dbg.declare(metadata i32* %clock2, metadata !9293, metadata !DIExpression()), !dbg !9294
  %12 = load i8, i8* %vic, align 1, !dbg !9295
  %call6 = call zeroext i1 @drm_valid_cea_vic(i8 zeroext %12) #8, !dbg !9296
  br i1 %call6, label %if.then7, label %if.else, !dbg !9297

if.then7:                                         ; preds = %for.body
  %13 = load i8, i8* %vic, align 1, !dbg !9298
  store i8 %13, i8* %vic.addr.i, align 1
  %14 = load i8, i8* %vic.addr.i, align 1, !dbg !9299
  %conv.i = zext i8 %14 to i32, !dbg !9299
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !9300
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !9301

land.lhs.true.i:                                  ; preds = %if.then7
  %15 = load i8, i8* %vic.addr.i, align 1, !dbg !9302
  %conv4.i = zext i8 %15 to i64, !dbg !9302
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !9303
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !9304

if.then.i:                                        ; preds = %land.lhs.true.i
  %16 = load i8, i8* %vic.addr.i, align 1, !dbg !9305
  %conv7.i = zext i8 %16 to i32, !dbg !9305
  %sub.i = sub i32 %conv7.i, 1, !dbg !9306
  %idxprom.i = sext i32 %sub.i to i64, !dbg !9307
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !9307
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !9308
  br label %cea_mode_for_vic.exit, !dbg !9308

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then7
  %17 = load i8, i8* %vic.addr.i, align 1, !dbg !9309
  %conv8.i = zext i8 %17 to i32, !dbg !9309
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !9310
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !9311

land.lhs.true11.i:                                ; preds = %if.end.i
  %18 = load i8, i8* %vic.addr.i, align 1, !dbg !9312
  %conv12.i = zext i8 %18 to i64, !dbg !9312
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !9313
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !9314

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %19 = load i8, i8* %vic.addr.i, align 1, !dbg !9315
  %conv16.i = zext i8 %19 to i32, !dbg !9315
  %sub17.i = sub i32 %conv16.i, 193, !dbg !9316
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !9317
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !9317
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !9318
  br label %cea_mode_for_vic.exit, !dbg !9318

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !9319
  br label %cea_mode_for_vic.exit, !dbg !9319

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !9320
  store %struct.drm_display_mode* %20, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9321
  %21 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9322
  %call9 = call i32 @cea_mode_alternate_clock(%struct.drm_display_mode* %21) #8, !dbg !9323
  store i32 %call9, i32* %clock2, align 4, !dbg !9324
  br label %if.end15, !dbg !9325

if.else:                                          ; preds = %for.body
  %22 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9326
  %call10 = call zeroext i8 @drm_match_hdmi_mode(%struct.drm_display_mode* %22) #8, !dbg !9328
  store i8 %call10, i8* %vic, align 1, !dbg !9329
  %23 = load i8, i8* %vic, align 1, !dbg !9330
  %call11 = call zeroext i1 @drm_valid_hdmi_vic(i8 zeroext %23) #8, !dbg !9332
  br i1 %call11, label %if.then12, label %if.end14, !dbg !9333

if.then12:                                        ; preds = %if.else
  %24 = load i8, i8* %vic, align 1, !dbg !9334
  %idxprom = zext i8 %24 to i64, !dbg !9336
  %arrayidx = getelementptr [5 x %struct.drm_display_mode], [5 x %struct.drm_display_mode]* @edid_4k_modes, i64 0, i64 %idxprom, !dbg !9336
  store %struct.drm_display_mode* %arrayidx, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9337
  %25 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9338
  %call13 = call i32 @hdmi_mode_alternate_clock(%struct.drm_display_mode* %25) #8, !dbg !9339
  store i32 %call13, i32* %clock2, align 4, !dbg !9340
  br label %if.end14, !dbg !9341

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %cea_mode_for_vic.exit
  %26 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9342
  %tobool16 = icmp ne %struct.drm_display_mode* %26, null, !dbg !9342
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !9344

if.then17:                                        ; preds = %if.end15
  br label %for.inc, !dbg !9345

if.end18:                                         ; preds = %if.end15
  %27 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9346
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %27, i32 0, i32 0, !dbg !9347
  %28 = load i32, i32* %clock, align 8, !dbg !9347
  store i32 %28, i32* %clock1, align 4, !dbg !9348
  %29 = load i32, i32* %clock1, align 4, !dbg !9349
  %30 = load i32, i32* %clock2, align 4, !dbg !9351
  %cmp19 = icmp eq i32 %29, %30, !dbg !9352
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !9353

if.then20:                                        ; preds = %if.end18
  br label %for.inc, !dbg !9354

if.end21:                                         ; preds = %if.end18
  %31 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9355
  %clock22 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %31, i32 0, i32 0, !dbg !9357
  %32 = load i32, i32* %clock22, align 8, !dbg !9357
  %33 = load i32, i32* %clock1, align 4, !dbg !9358
  %cmp23 = icmp ne i32 %32, %33, !dbg !9359
  br i1 %cmp23, label %land.lhs.true, label %if.end27, !dbg !9360

land.lhs.true:                                    ; preds = %if.end21
  %34 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9361
  %clock24 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %34, i32 0, i32 0, !dbg !9362
  %35 = load i32, i32* %clock24, align 8, !dbg !9362
  %36 = load i32, i32* %clock2, align 4, !dbg !9363
  %cmp25 = icmp ne i32 %35, %36, !dbg !9364
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !9365

if.then26:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !9366

if.end27:                                         ; preds = %land.lhs.true, %if.end21
  %37 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9367
  %38 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !9368
  %call28 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %37, %struct.drm_display_mode* %38) #8, !dbg !9369
  store %struct.drm_display_mode* %call28, %struct.drm_display_mode** %newmode, align 8, !dbg !9370
  %39 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9371
  %tobool29 = icmp ne %struct.drm_display_mode* %39, null, !dbg !9371
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !9373

if.then30:                                        ; preds = %if.end27
  br label %for.inc, !dbg !9374

if.end31:                                         ; preds = %if.end27
  %40 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9375
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %40, i32 0, i32 11, !dbg !9376
  %41 = load i32, i32* %flags, align 8, !dbg !9376
  %and = and i32 %41, 507904, !dbg !9377
  %42 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9378
  %flags32 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %42, i32 0, i32 11, !dbg !9379
  %43 = load i32, i32* %flags32, align 8, !dbg !9380
  %or = or i32 %43, %and, !dbg !9380
  store i32 %or, i32* %flags32, align 8, !dbg !9380
  %44 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9381
  %clock33 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %44, i32 0, i32 0, !dbg !9383
  %45 = load i32, i32* %clock33, align 8, !dbg !9383
  %46 = load i32, i32* %clock1, align 4, !dbg !9384
  %cmp34 = icmp ne i32 %45, %46, !dbg !9385
  br i1 %cmp34, label %if.then35, label %if.else37, !dbg !9386

if.then35:                                        ; preds = %if.end31
  %47 = load i32, i32* %clock1, align 4, !dbg !9387
  %48 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9388
  %clock36 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %48, i32 0, i32 0, !dbg !9389
  store i32 %47, i32* %clock36, align 8, !dbg !9390
  br label %if.end39, !dbg !9388

if.else37:                                        ; preds = %if.end31
  %49 = load i32, i32* %clock2, align 4, !dbg !9391
  %50 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9392
  %clock38 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %50, i32 0, i32 0, !dbg !9393
  store i32 %49, i32* %clock38, align 8, !dbg !9394
  br label %if.end39

if.end39:                                         ; preds = %if.else37, %if.then35
  %51 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !9395
  %head40 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %51, i32 0, i32 30, !dbg !9396
  call void @list_add_tail(%struct.list_head* %head40, %struct.list_head* %list) #8, !dbg !9397
  br label %for.inc, !dbg !9398

for.inc:                                          ; preds = %if.end39, %if.then30, %if.then26, %if.then20, %if.then17
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !9399, metadata !DIExpression()), !dbg !9401
  %52 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9401
  %head42 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %52, i32 0, i32 30, !dbg !9401
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %head42, i32 0, i32 0, !dbg !9401
  %53 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !9401
  %54 = bitcast %struct.list_head* %53 to i8*, !dbg !9401
  store i8* %54, i8** %__mptr41, align 8, !dbg !9401
  br label %do.body44, !dbg !9401

do.body44:                                        ; preds = %for.inc
  br label %do.end45, !dbg !9402

do.end45:                                         ; preds = %do.body44
  %55 = load i8*, i8** %__mptr41, align 8, !dbg !9401
  %add.ptr47 = getelementptr i8, i8* %55, i64 -64, !dbg !9401
  %56 = bitcast i8* %add.ptr47 to %struct.drm_display_mode*, !dbg !9401
  store %struct.drm_display_mode* %56, %struct.drm_display_mode** %tmp46, align 8, !dbg !9402
  %57 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp46, align 8, !dbg !9401
  store %struct.drm_display_mode* %57, %struct.drm_display_mode** %mode, align 8, !dbg !9282
  br label %for.cond, !dbg !9282, !llvm.loop !9404

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr48, metadata !9406, metadata !DIExpression()), !dbg !9409
  %next49 = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0, !dbg !9409
  %58 = load %struct.list_head*, %struct.list_head** %next49, align 8, !dbg !9409
  %59 = bitcast %struct.list_head* %58 to i8*, !dbg !9409
  store i8* %59, i8** %__mptr48, align 8, !dbg !9409
  br label %do.body50, !dbg !9409

do.body50:                                        ; preds = %for.end
  br label %do.end51, !dbg !9410

do.end51:                                         ; preds = %do.body50
  %60 = load i8*, i8** %__mptr48, align 8, !dbg !9409
  %add.ptr53 = getelementptr i8, i8* %60, i64 -64, !dbg !9409
  %61 = bitcast i8* %add.ptr53 to %struct.drm_display_mode*, !dbg !9409
  store %struct.drm_display_mode* %61, %struct.drm_display_mode** %tmp52, align 8, !dbg !9410
  %62 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp52, align 8, !dbg !9409
  store %struct.drm_display_mode* %62, %struct.drm_display_mode** %mode, align 8, !dbg !9412
  call void @llvm.dbg.declare(metadata i8** %__mptr54, metadata !9413, metadata !DIExpression()), !dbg !9415
  %63 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9415
  %head55 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %63, i32 0, i32 30, !dbg !9415
  %next56 = getelementptr inbounds %struct.list_head, %struct.list_head* %head55, i32 0, i32 0, !dbg !9415
  %64 = load %struct.list_head*, %struct.list_head** %next56, align 8, !dbg !9415
  %65 = bitcast %struct.list_head* %64 to i8*, !dbg !9415
  store i8* %65, i8** %__mptr54, align 8, !dbg !9415
  br label %do.body57, !dbg !9415

do.body57:                                        ; preds = %do.end51
  br label %do.end58, !dbg !9416

do.end58:                                         ; preds = %do.body57
  %66 = load i8*, i8** %__mptr54, align 8, !dbg !9415
  %add.ptr60 = getelementptr i8, i8* %66, i64 -64, !dbg !9415
  %67 = bitcast i8* %add.ptr60 to %struct.drm_display_mode*, !dbg !9415
  store %struct.drm_display_mode* %67, %struct.drm_display_mode** %tmp59, align 8, !dbg !9416
  %68 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp59, align 8, !dbg !9415
  store %struct.drm_display_mode* %68, %struct.drm_display_mode** %tmp, align 8, !dbg !9412
  br label %for.cond61, !dbg !9412

for.cond61:                                       ; preds = %do.end72, %do.end58
  %69 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9418
  %head62 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %69, i32 0, i32 30, !dbg !9418
  %cmp63 = icmp eq %struct.list_head* %head62, %list, !dbg !9418
  %lnot64 = xor i1 %cmp63, true, !dbg !9418
  br i1 %lnot64, label %for.body65, label %for.end75, !dbg !9412

for.body65:                                       ; preds = %for.cond61
  %70 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9420
  %head66 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %70, i32 0, i32 30, !dbg !9422
  call void @list_del(%struct.list_head* %head66) #8, !dbg !9423
  %71 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9424
  %72 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9425
  call void @drm_mode_probed_add(%struct.drm_connector* %71, %struct.drm_display_mode* %72) #8, !dbg !9426
  %73 = load i32, i32* %modes, align 4, !dbg !9427
  %inc = add i32 %73, 1, !dbg !9427
  store i32 %inc, i32* %modes, align 4, !dbg !9427
  br label %for.inc67, !dbg !9428

for.inc67:                                        ; preds = %for.body65
  %74 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !9418
  store %struct.drm_display_mode* %74, %struct.drm_display_mode** %mode, align 8, !dbg !9418
  call void @llvm.dbg.declare(metadata i8** %__mptr68, metadata !9429, metadata !DIExpression()), !dbg !9431
  %75 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !9431
  %head69 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %75, i32 0, i32 30, !dbg !9431
  %next70 = getelementptr inbounds %struct.list_head, %struct.list_head* %head69, i32 0, i32 0, !dbg !9431
  %76 = load %struct.list_head*, %struct.list_head** %next70, align 8, !dbg !9431
  %77 = bitcast %struct.list_head* %76 to i8*, !dbg !9431
  store i8* %77, i8** %__mptr68, align 8, !dbg !9431
  br label %do.body71, !dbg !9431

do.body71:                                        ; preds = %for.inc67
  br label %do.end72, !dbg !9432

do.end72:                                         ; preds = %do.body71
  %78 = load i8*, i8** %__mptr68, align 8, !dbg !9431
  %add.ptr74 = getelementptr i8, i8* %78, i64 -64, !dbg !9431
  %79 = bitcast i8* %add.ptr74 to %struct.drm_display_mode*, !dbg !9431
  store %struct.drm_display_mode* %79, %struct.drm_display_mode** %tmp73, align 8, !dbg !9432
  %80 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp73, align 8, !dbg !9431
  store %struct.drm_display_mode* %80, %struct.drm_display_mode** %tmp, align 8, !dbg !9418
  br label %for.cond61, !dbg !9418, !llvm.loop !9434

for.end75:                                        ; preds = %for.cond61
  %81 = load i32, i32* %modes, align 4, !dbg !9436
  store i32 %81, i32* %retval, align 4, !dbg !9437
  br label %return, !dbg !9437

return:                                           ; preds = %for.end75, %if.then
  %82 = load i32, i32* %retval, align 4, !dbg !9438
  ret i32 %82, !dbg !9438
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_displayid_detailed_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !9439 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %displayid = alloca i8*, align 8
  %length = alloca i32, align 4
  %idx = alloca i32, align 4
  %block = alloca %struct.displayid_block*, align 8
  %num_modes = alloca i32, align 4
  %ext_index = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9440, metadata !DIExpression()), !dbg !9441
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !9442, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.declare(metadata i8** %displayid, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @llvm.dbg.declare(metadata i32* %length, metadata !9446, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !9448, metadata !DIExpression()), !dbg !9449
  call void @llvm.dbg.declare(metadata %struct.displayid_block** %block, metadata !9450, metadata !DIExpression()), !dbg !9451
  call void @llvm.dbg.declare(metadata i32* %num_modes, metadata !9452, metadata !DIExpression()), !dbg !9453
  store i32 0, i32* %num_modes, align 4, !dbg !9453
  call void @llvm.dbg.declare(metadata i32* %ext_index, metadata !9454, metadata !DIExpression()), !dbg !9455
  store i32 0, i32* %ext_index, align 4, !dbg !9455
  br label %for.cond, !dbg !9456

for.cond:                                         ; preds = %for.end, %entry
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9457
  %call = call i8* @drm_find_displayid_extension(%struct.edid* %0, i32* %length, i32* %idx, i32* %ext_index) #8, !dbg !9461
  store i8* %call, i8** %displayid, align 8, !dbg !9462
  %1 = load i8*, i8** %displayid, align 8, !dbg !9463
  %tobool = icmp ne i8* %1, null, !dbg !9463
  br i1 %tobool, label %if.end, label %if.then, !dbg !9465

if.then:                                          ; preds = %for.cond
  br label %for.end29, !dbg !9466

if.end:                                           ; preds = %for.cond
  %2 = load i32, i32* %idx, align 4, !dbg !9467
  %conv = sext i32 %2 to i64, !dbg !9467
  %add = add i64 %conv, 4, !dbg !9467
  %conv1 = trunc i64 %add to i32, !dbg !9467
  store i32 %conv1, i32* %idx, align 4, !dbg !9467
  %3 = load i8*, i8** %displayid, align 8, !dbg !9468
  %4 = load i32, i32* %idx, align 4, !dbg !9468
  %idxprom = sext i32 %4 to i64, !dbg !9468
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !9468
  %5 = bitcast i8* %arrayidx to %struct.displayid_block*, !dbg !9468
  store %struct.displayid_block* %5, %struct.displayid_block** %block, align 8, !dbg !9468
  br label %for.cond2, !dbg !9468

for.cond2:                                        ; preds = %for.inc, %if.end
  %6 = load i32, i32* %idx, align 4, !dbg !9470
  %conv3 = sext i32 %6 to i64, !dbg !9470
  %add4 = add i64 %conv3, 3, !dbg !9470
  %7 = load i32, i32* %length, align 4, !dbg !9470
  %conv5 = sext i32 %7 to i64, !dbg !9470
  %cmp = icmp ule i64 %add4, %conv5, !dbg !9470
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !9470

land.lhs.true:                                    ; preds = %for.cond2
  %8 = load i32, i32* %idx, align 4, !dbg !9470
  %conv7 = sext i32 %8 to i64, !dbg !9470
  %add8 = add i64 %conv7, 3, !dbg !9470
  %9 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !9470
  %num_bytes = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %9, i32 0, i32 2, !dbg !9470
  %10 = load i8, i8* %num_bytes, align 1, !dbg !9470
  %conv9 = zext i8 %10 to i64, !dbg !9470
  %add10 = add i64 %add8, %conv9, !dbg !9470
  %11 = load i32, i32* %length, align 4, !dbg !9470
  %conv11 = sext i32 %11 to i64, !dbg !9470
  %cmp12 = icmp ule i64 %add10, %conv11, !dbg !9470
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !9470

land.rhs:                                         ; preds = %land.lhs.true
  %12 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !9470
  %num_bytes14 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %12, i32 0, i32 2, !dbg !9470
  %13 = load i8, i8* %num_bytes14, align 1, !dbg !9470
  %conv15 = zext i8 %13 to i32, !dbg !9470
  %cmp16 = icmp sgt i32 %conv15, 0, !dbg !9470
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond2
  %14 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond2 ], [ %cmp16, %land.rhs ], !dbg !9472
  br i1 %14, label %for.body, label %for.end, !dbg !9468

for.body:                                         ; preds = %land.end
  %15 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !9473
  %tag = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %15, i32 0, i32 0, !dbg !9475
  %16 = load i8, i8* %tag, align 1, !dbg !9475
  %conv18 = zext i8 %16 to i32, !dbg !9473
  switch i32 %conv18, label %sw.epilog [
    i32 3, label %sw.bb
  ], !dbg !9476

sw.bb:                                            ; preds = %for.body
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9477
  %18 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !9479
  %call19 = call i32 @add_displayid_detailed_1_modes(%struct.drm_connector* %17, %struct.displayid_block* %18) #8, !dbg !9480
  %19 = load i32, i32* %num_modes, align 4, !dbg !9481
  %add20 = add i32 %19, %call19, !dbg !9481
  store i32 %add20, i32* %num_modes, align 4, !dbg !9481
  br label %sw.epilog, !dbg !9482

sw.epilog:                                        ; preds = %for.body, %sw.bb
  br label %for.inc, !dbg !9483

for.inc:                                          ; preds = %sw.epilog
  %20 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !9470
  %num_bytes21 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %20, i32 0, i32 2, !dbg !9470
  %21 = load i8, i8* %num_bytes21, align 1, !dbg !9470
  %conv22 = zext i8 %21 to i64, !dbg !9470
  %add23 = add i64 3, %conv22, !dbg !9470
  %22 = load i32, i32* %idx, align 4, !dbg !9470
  %conv24 = sext i32 %22 to i64, !dbg !9470
  %add25 = add i64 %conv24, %add23, !dbg !9470
  %conv26 = trunc i64 %add25 to i32, !dbg !9470
  store i32 %conv26, i32* %idx, align 4, !dbg !9470
  %23 = load i8*, i8** %displayid, align 8, !dbg !9470
  %24 = load i32, i32* %idx, align 4, !dbg !9470
  %idxprom27 = sext i32 %24 to i64, !dbg !9470
  %arrayidx28 = getelementptr i8, i8* %23, i64 %idxprom27, !dbg !9470
  %25 = bitcast i8* %arrayidx28 to %struct.displayid_block*, !dbg !9470
  store %struct.displayid_block* %25, %struct.displayid_block** %block, align 8, !dbg !9470
  br label %for.cond2, !dbg !9470, !llvm.loop !9484

for.end:                                          ; preds = %land.end
  br label %for.cond, !dbg !9486, !llvm.loop !9487

for.end29:                                        ; preds = %if.then
  %26 = load i32, i32* %num_modes, align 4, !dbg !9490
  ret i32 %26, !dbg !9491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_inferred_modes(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !9492 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %closure = alloca %struct.detailed_mode_closure, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9493, metadata !DIExpression()), !dbg !9494
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !9495, metadata !DIExpression()), !dbg !9496
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure* %closure, metadata !9497, metadata !DIExpression()), !dbg !9498
  %connector1 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 0, !dbg !9499
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9500
  store %struct.drm_connector* %0, %struct.drm_connector** %connector1, align 8, !dbg !9499
  %edid2 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 1, !dbg !9499
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9501
  store %struct.edid* %1, %struct.edid** %edid2, align 8, !dbg !9499
  %preferred = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 2, !dbg !9499
  store i8 0, i8* %preferred, align 8, !dbg !9499
  %quirks = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 3, !dbg !9499
  store i32 0, i32* %quirks, align 4, !dbg !9499
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !9499
  store i32 0, i32* %modes, align 8, !dbg !9499
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9502
  %version = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 6, !dbg !9502
  %3 = load i8, i8* %version, align 1, !dbg !9502
  %conv = zext i8 %3 to i32, !dbg !9502
  %cmp = icmp sgt i32 %conv, 1, !dbg !9502
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9502

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9502
  %version4 = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 6, !dbg !9502
  %5 = load i8, i8* %version4, align 1, !dbg !9502
  %conv5 = zext i8 %5 to i32, !dbg !9502
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !9502
  br i1 %cmp6, label %land.lhs.true, label %if.end, !dbg !9502

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9502
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 7, !dbg !9502
  %7 = load i8, i8* %revision, align 1, !dbg !9502
  %conv8 = zext i8 %7 to i32, !dbg !9502
  %cmp9 = icmp sgt i32 %conv8, 0, !dbg !9502
  br i1 %cmp9, label %if.then, label %if.end, !dbg !9504

if.then:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !9505
  %9 = bitcast %struct.edid* %8 to i8*, !dbg !9506
  %10 = bitcast %struct.detailed_mode_closure* %closure to i8*, !dbg !9507
  call void @drm_for_each_detailed_block(i8* %9, void (%struct.detailed_timing*, i8*)* @do_inferred_modes, i8* %10) #8, !dbg !9508
  br label %if.end, !dbg !9508

if.end:                                           ; preds = %if.then, %land.lhs.true, %lor.lhs.false
  %modes11 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %closure, i32 0, i32 4, !dbg !9509
  %11 = load i32, i32* %modes11, align 8, !dbg !9509
  ret i32 %11, !dbg !9510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @edid_fixup_preferred(%struct.drm_connector* %connector, i32 %quirks) #0 !dbg !9511 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %quirks.addr = alloca i32, align 4
  %t = alloca %struct.drm_display_mode*, align 8
  %cur_mode = alloca %struct.drm_display_mode*, align 8
  %preferred_mode = alloca %struct.drm_display_mode*, align 8
  %target_refresh = alloca i32, align 4
  %cur_vrefresh = alloca i32, align 4
  %preferred_vrefresh = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_display_mode*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.drm_display_mode*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp20 = alloca %struct.drm_display_mode*, align 8
  %__x = alloca i32, align 4
  %tmp55 = alloca i32, align 4
  %__x59 = alloca i32, align 4
  %tmp61 = alloca i32, align 4
  %__mptr73 = alloca i8*, align 8
  %tmp78 = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9514, metadata !DIExpression()), !dbg !9515
  store i32 %quirks, i32* %quirks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quirks.addr, metadata !9516, metadata !DIExpression()), !dbg !9517
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %t, metadata !9518, metadata !DIExpression()), !dbg !9519
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %cur_mode, metadata !9520, metadata !DIExpression()), !dbg !9521
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %preferred_mode, metadata !9522, metadata !DIExpression()), !dbg !9523
  call void @llvm.dbg.declare(metadata i32* %target_refresh, metadata !9524, metadata !DIExpression()), !dbg !9525
  store i32 0, i32* %target_refresh, align 4, !dbg !9525
  call void @llvm.dbg.declare(metadata i32* %cur_vrefresh, metadata !9526, metadata !DIExpression()), !dbg !9527
  call void @llvm.dbg.declare(metadata i32* %preferred_vrefresh, metadata !9528, metadata !DIExpression()), !dbg !9529
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9530
  %probed_modes = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 17, !dbg !9532
  %call = call i32 @list_empty(%struct.list_head* %probed_modes) #8, !dbg !9533
  %tobool = icmp ne i32 %call, 0, !dbg !9533
  br i1 %tobool, label %if.then, label %if.end, !dbg !9534

if.then:                                          ; preds = %entry
  br label %return, !dbg !9535

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %quirks.addr, align 4, !dbg !9536
  %and = and i32 %1, 1, !dbg !9538
  %tobool1 = icmp ne i32 %and, 0, !dbg !9538
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9539

if.then2:                                         ; preds = %if.end
  store i32 60, i32* %target_refresh, align 4, !dbg !9540
  br label %if.end3, !dbg !9541

if.end3:                                          ; preds = %if.then2, %if.end
  %2 = load i32, i32* %quirks.addr, align 4, !dbg !9542
  %and4 = and i32 %2, 4, !dbg !9544
  %tobool5 = icmp ne i32 %and4, 0, !dbg !9544
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9545

if.then6:                                         ; preds = %if.end3
  store i32 75, i32* %target_refresh, align 4, !dbg !9546
  br label %if.end7, !dbg !9547

if.end7:                                          ; preds = %if.then6, %if.end3
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9548, metadata !DIExpression()), !dbg !9550
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9550
  %probed_modes8 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %3, i32 0, i32 17, !dbg !9550
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes8, i32 0, i32 0, !dbg !9550
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9550
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !9550
  store i8* %5, i8** %__mptr, align 8, !dbg !9550
  br label %do.body, !dbg !9550

do.body:                                          ; preds = %if.end7
  br label %do.end, !dbg !9551

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9550
  %add.ptr = getelementptr i8, i8* %6, i64 -64, !dbg !9550
  %7 = bitcast i8* %add.ptr to %struct.drm_display_mode*, !dbg !9550
  store %struct.drm_display_mode* %7, %struct.drm_display_mode** %tmp, align 8, !dbg !9551
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !9550
  store %struct.drm_display_mode* %8, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9553
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !9554, metadata !DIExpression()), !dbg !9557
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9557
  %probed_modes10 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %9, i32 0, i32 17, !dbg !9557
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes10, i32 0, i32 0, !dbg !9557
  %10 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !9557
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !9557
  store i8* %11, i8** %__mptr9, align 8, !dbg !9557
  br label %do.body12, !dbg !9557

do.body12:                                        ; preds = %do.end
  br label %do.end13, !dbg !9558

do.end13:                                         ; preds = %do.body12
  %12 = load i8*, i8** %__mptr9, align 8, !dbg !9557
  %add.ptr15 = getelementptr i8, i8* %12, i64 -64, !dbg !9557
  %13 = bitcast i8* %add.ptr15 to %struct.drm_display_mode*, !dbg !9557
  store %struct.drm_display_mode* %13, %struct.drm_display_mode** %tmp14, align 8, !dbg !9558
  %14 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp14, align 8, !dbg !9557
  store %struct.drm_display_mode* %14, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9560
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !9561, metadata !DIExpression()), !dbg !9563
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9563
  %head = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %15, i32 0, i32 30, !dbg !9563
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0, !dbg !9563
  %16 = load %struct.list_head*, %struct.list_head** %next17, align 8, !dbg !9563
  %17 = bitcast %struct.list_head* %16 to i8*, !dbg !9563
  store i8* %17, i8** %__mptr16, align 8, !dbg !9563
  br label %do.body18, !dbg !9563

do.body18:                                        ; preds = %do.end13
  br label %do.end19, !dbg !9564

do.end19:                                         ; preds = %do.body18
  %18 = load i8*, i8** %__mptr16, align 8, !dbg !9563
  %add.ptr21 = getelementptr i8, i8* %18, i64 -64, !dbg !9563
  %19 = bitcast i8* %add.ptr21 to %struct.drm_display_mode*, !dbg !9563
  store %struct.drm_display_mode* %19, %struct.drm_display_mode** %tmp20, align 8, !dbg !9564
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp20, align 8, !dbg !9563
  store %struct.drm_display_mode* %20, %struct.drm_display_mode** %t, align 8, !dbg !9560
  br label %for.cond, !dbg !9560

for.cond:                                         ; preds = %do.end77, %do.end19
  %21 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9566
  %head22 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %21, i32 0, i32 30, !dbg !9566
  %22 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9566
  %probed_modes23 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %22, i32 0, i32 17, !dbg !9566
  %cmp = icmp eq %struct.list_head* %head22, %probed_modes23, !dbg !9566
  %lnot = xor i1 %cmp, true, !dbg !9566
  br i1 %lnot, label %for.body, label %for.end, !dbg !9560

for.body:                                         ; preds = %for.cond
  %23 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9568
  %type = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %23, i32 0, i32 28, !dbg !9570
  %24 = load i8, i8* %type, align 2, !dbg !9571
  %conv = zext i8 %24 to i32, !dbg !9571
  %and24 = and i32 %conv, -9, !dbg !9571
  %conv25 = trunc i32 %and24 to i8, !dbg !9571
  store i8 %conv25, i8* %type, align 2, !dbg !9571
  %25 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9572
  %26 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9574
  %cmp26 = icmp eq %struct.drm_display_mode* %25, %26, !dbg !9575
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !9576

if.then28:                                        ; preds = %for.body
  br label %for.inc, !dbg !9577

if.end29:                                         ; preds = %for.body
  %27 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9578
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %27, i32 0, i32 1, !dbg !9578
  %28 = load i16, i16* %hdisplay, align 4, !dbg !9578
  %conv30 = zext i16 %28 to i32, !dbg !9578
  %29 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9578
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %29, i32 0, i32 6, !dbg !9578
  %30 = load i16, i16* %vdisplay, align 2, !dbg !9578
  %conv31 = zext i16 %30 to i32, !dbg !9578
  %mul = mul i32 %conv30, %conv31, !dbg !9578
  %31 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9580
  %hdisplay32 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %31, i32 0, i32 1, !dbg !9580
  %32 = load i16, i16* %hdisplay32, align 4, !dbg !9580
  %conv33 = zext i16 %32 to i32, !dbg !9580
  %33 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9580
  %vdisplay34 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %33, i32 0, i32 6, !dbg !9580
  %34 = load i16, i16* %vdisplay34, align 2, !dbg !9580
  %conv35 = zext i16 %34 to i32, !dbg !9580
  %mul36 = mul i32 %conv33, %conv35, !dbg !9580
  %cmp37 = icmp sgt i32 %mul, %mul36, !dbg !9581
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !9582

if.then39:                                        ; preds = %if.end29
  %35 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9583
  store %struct.drm_display_mode* %35, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9584
  br label %if.end40, !dbg !9585

if.end40:                                         ; preds = %if.then39, %if.end29
  %36 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9586
  %call41 = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %36) #8, !dbg !9587
  store i32 %call41, i32* %cur_vrefresh, align 4, !dbg !9588
  %37 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9589
  %call42 = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %37) #8, !dbg !9590
  store i32 %call42, i32* %preferred_vrefresh, align 4, !dbg !9591
  %38 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9592
  %hdisplay43 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %38, i32 0, i32 1, !dbg !9592
  %39 = load i16, i16* %hdisplay43, align 4, !dbg !9592
  %conv44 = zext i16 %39 to i32, !dbg !9592
  %40 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9592
  %vdisplay45 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %40, i32 0, i32 6, !dbg !9592
  %41 = load i16, i16* %vdisplay45, align 2, !dbg !9592
  %conv46 = zext i16 %41 to i32, !dbg !9592
  %mul47 = mul i32 %conv44, %conv46, !dbg !9592
  %42 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9594
  %hdisplay48 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %42, i32 0, i32 1, !dbg !9594
  %43 = load i16, i16* %hdisplay48, align 4, !dbg !9594
  %conv49 = zext i16 %43 to i32, !dbg !9594
  %44 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9594
  %vdisplay50 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %44, i32 0, i32 6, !dbg !9594
  %45 = load i16, i16* %vdisplay50, align 2, !dbg !9594
  %conv51 = zext i16 %45 to i32, !dbg !9594
  %mul52 = mul i32 %conv49, %conv51, !dbg !9594
  %cmp53 = icmp eq i32 %mul47, %mul52, !dbg !9595
  br i1 %cmp53, label %land.lhs.true, label %if.end72, !dbg !9596

land.lhs.true:                                    ; preds = %if.end40
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !9597, metadata !DIExpression()), !dbg !9599
  %46 = load i32, i32* %cur_vrefresh, align 4, !dbg !9599
  %47 = load i32, i32* %target_refresh, align 4, !dbg !9599
  %sub = sub i32 %46, %47, !dbg !9599
  store i32 %sub, i32* %__x, align 4, !dbg !9599
  %48 = load i32, i32* %__x, align 4, !dbg !9599
  %cmp56 = icmp slt i32 %48, 0, !dbg !9599
  br i1 %cmp56, label %cond.true, label %cond.false, !dbg !9599

cond.true:                                        ; preds = %land.lhs.true
  %49 = load i32, i32* %__x, align 4, !dbg !9599
  %sub58 = sub i32 0, %49, !dbg !9599
  br label %cond.end, !dbg !9599

cond.false:                                       ; preds = %land.lhs.true
  %50 = load i32, i32* %__x, align 4, !dbg !9599
  br label %cond.end, !dbg !9599

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub58, %cond.true ], [ %50, %cond.false ], !dbg !9599
  store i32 %cond, i32* %tmp55, align 4, !dbg !9599
  %51 = load i32, i32* %tmp55, align 4, !dbg !9599
  call void @llvm.dbg.declare(metadata i32* %__x59, metadata !9600, metadata !DIExpression()), !dbg !9602
  %52 = load i32, i32* %preferred_vrefresh, align 4, !dbg !9602
  %53 = load i32, i32* %target_refresh, align 4, !dbg !9602
  %sub60 = sub i32 %52, %53, !dbg !9602
  store i32 %sub60, i32* %__x59, align 4, !dbg !9602
  %54 = load i32, i32* %__x59, align 4, !dbg !9602
  %cmp62 = icmp slt i32 %54, 0, !dbg !9602
  br i1 %cmp62, label %cond.true64, label %cond.false66, !dbg !9602

cond.true64:                                      ; preds = %cond.end
  %55 = load i32, i32* %__x59, align 4, !dbg !9602
  %sub65 = sub i32 0, %55, !dbg !9602
  br label %cond.end67, !dbg !9602

cond.false66:                                     ; preds = %cond.end
  %56 = load i32, i32* %__x59, align 4, !dbg !9602
  br label %cond.end67, !dbg !9602

cond.end67:                                       ; preds = %cond.false66, %cond.true64
  %cond68 = phi i32 [ %sub65, %cond.true64 ], [ %56, %cond.false66 ], !dbg !9602
  store i32 %cond68, i32* %tmp61, align 4, !dbg !9602
  %57 = load i32, i32* %tmp61, align 4, !dbg !9602
  %cmp69 = icmp slt i32 %51, %57, !dbg !9603
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !9604

if.then71:                                        ; preds = %cond.end67
  %58 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9605
  store %struct.drm_display_mode* %58, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9607
  br label %if.end72, !dbg !9608

if.end72:                                         ; preds = %if.then71, %cond.end67, %if.end40
  br label %for.inc, !dbg !9609

for.inc:                                          ; preds = %if.end72, %if.then28
  %59 = load %struct.drm_display_mode*, %struct.drm_display_mode** %t, align 8, !dbg !9566
  store %struct.drm_display_mode* %59, %struct.drm_display_mode** %cur_mode, align 8, !dbg !9566
  call void @llvm.dbg.declare(metadata i8** %__mptr73, metadata !9610, metadata !DIExpression()), !dbg !9612
  %60 = load %struct.drm_display_mode*, %struct.drm_display_mode** %t, align 8, !dbg !9612
  %head74 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %60, i32 0, i32 30, !dbg !9612
  %next75 = getelementptr inbounds %struct.list_head, %struct.list_head* %head74, i32 0, i32 0, !dbg !9612
  %61 = load %struct.list_head*, %struct.list_head** %next75, align 8, !dbg !9612
  %62 = bitcast %struct.list_head* %61 to i8*, !dbg !9612
  store i8* %62, i8** %__mptr73, align 8, !dbg !9612
  br label %do.body76, !dbg !9612

do.body76:                                        ; preds = %for.inc
  br label %do.end77, !dbg !9613

do.end77:                                         ; preds = %do.body76
  %63 = load i8*, i8** %__mptr73, align 8, !dbg !9612
  %add.ptr79 = getelementptr i8, i8* %63, i64 -64, !dbg !9612
  %64 = bitcast i8* %add.ptr79 to %struct.drm_display_mode*, !dbg !9612
  store %struct.drm_display_mode* %64, %struct.drm_display_mode** %tmp78, align 8, !dbg !9613
  %65 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp78, align 8, !dbg !9612
  store %struct.drm_display_mode* %65, %struct.drm_display_mode** %t, align 8, !dbg !9566
  br label %for.cond, !dbg !9566, !llvm.loop !9615

for.end:                                          ; preds = %for.cond
  %66 = load %struct.drm_display_mode*, %struct.drm_display_mode** %preferred_mode, align 8, !dbg !9617
  %type80 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %66, i32 0, i32 28, !dbg !9618
  %67 = load i8, i8* %type80, align 2, !dbg !9619
  %conv81 = zext i8 %67 to i32, !dbg !9619
  %or = or i32 %conv81, 8, !dbg !9619
  %conv82 = trunc i32 %or to i8, !dbg !9619
  store i8 %conv82, i8* %type80, align 2, !dbg !9619
  br label %return, !dbg !9620

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !9620
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_add_modes_noedid(%struct.drm_connector* %connector, i32 %hdisplay, i32 %vdisplay) #0 !dbg !9621 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %hdisplay.addr = alloca i32, align 4
  %vdisplay.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %count = alloca i32, align 4
  %num_modes = alloca i32, align 4
  %mode = alloca %struct.drm_display_mode*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %ptr = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9624, metadata !DIExpression()), !dbg !9625
  store i32 %hdisplay, i32* %hdisplay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hdisplay.addr, metadata !9626, metadata !DIExpression()), !dbg !9627
  store i32 %vdisplay, i32* %vdisplay.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vdisplay.addr, metadata !9628, metadata !DIExpression()), !dbg !9629
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9630, metadata !DIExpression()), !dbg !9631
  call void @llvm.dbg.declare(metadata i32* %count, metadata !9632, metadata !DIExpression()), !dbg !9633
  call void @llvm.dbg.declare(metadata i32* %num_modes, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i32 0, i32* %num_modes, align 4, !dbg !9635
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !9636, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !9638, metadata !DIExpression()), !dbg !9639
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9640
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !9641
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !9641
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !9639
  store i32 88, i32* %count, align 4, !dbg !9642
  %2 = load i32, i32* %hdisplay.addr, align 4, !dbg !9643
  %cmp = icmp slt i32 %2, 0, !dbg !9645
  br i1 %cmp, label %if.then, label %if.end, !dbg !9646

if.then:                                          ; preds = %entry
  store i32 0, i32* %hdisplay.addr, align 4, !dbg !9647
  br label %if.end, !dbg !9648

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %vdisplay.addr, align 4, !dbg !9649
  %cmp2 = icmp slt i32 %3, 0, !dbg !9651
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !9652

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %vdisplay.addr, align 4, !dbg !9653
  br label %if.end4, !dbg !9654

if.end4:                                          ; preds = %if.then3, %if.end
  store i32 0, i32* %i, align 4, !dbg !9655
  br label %for.cond, !dbg !9657

for.cond:                                         ; preds = %for.inc, %if.end4
  %4 = load i32, i32* %i, align 4, !dbg !9658
  %5 = load i32, i32* %count, align 4, !dbg !9660
  %cmp5 = icmp slt i32 %4, %5, !dbg !9661
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9662

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %ptr, metadata !9663, metadata !DIExpression()), !dbg !9665
  %6 = load i32, i32* %i, align 4, !dbg !9666
  %idxprom = sext i32 %6 to i64, !dbg !9667
  %arrayidx = getelementptr [88 x %struct.drm_display_mode], [88 x %struct.drm_display_mode]* @drm_dmt_modes, i64 0, i64 %idxprom, !dbg !9667
  store %struct.drm_display_mode* %arrayidx, %struct.drm_display_mode** %ptr, align 8, !dbg !9665
  %7 = load i32, i32* %hdisplay.addr, align 4, !dbg !9668
  %tobool = icmp ne i32 %7, 0, !dbg !9668
  br i1 %tobool, label %land.lhs.true, label %if.end17, !dbg !9670

land.lhs.true:                                    ; preds = %for.body
  %8 = load i32, i32* %vdisplay.addr, align 4, !dbg !9671
  %tobool6 = icmp ne i32 %8, 0, !dbg !9671
  br i1 %tobool6, label %if.then7, label %if.end17, !dbg !9672

if.then7:                                         ; preds = %land.lhs.true
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !9673
  %hdisplay8 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %9, i32 0, i32 1, !dbg !9676
  %10 = load i16, i16* %hdisplay8, align 4, !dbg !9676
  %conv = zext i16 %10 to i32, !dbg !9673
  %11 = load i32, i32* %hdisplay.addr, align 4, !dbg !9677
  %cmp9 = icmp sgt i32 %conv, %11, !dbg !9678
  br i1 %cmp9, label %if.then15, label %lor.lhs.false, !dbg !9679

lor.lhs.false:                                    ; preds = %if.then7
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !9680
  %vdisplay11 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %12, i32 0, i32 6, !dbg !9681
  %13 = load i16, i16* %vdisplay11, align 2, !dbg !9681
  %conv12 = zext i16 %13 to i32, !dbg !9680
  %14 = load i32, i32* %vdisplay.addr, align 4, !dbg !9682
  %cmp13 = icmp sgt i32 %conv12, %14, !dbg !9683
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !9684

if.then15:                                        ; preds = %lor.lhs.false, %if.then7
  br label %for.inc, !dbg !9685

if.end16:                                         ; preds = %lor.lhs.false
  br label %if.end17, !dbg !9686

if.end17:                                         ; preds = %if.end16, %land.lhs.true, %for.body
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !9687
  %call = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %15) #8, !dbg !9689
  %cmp18 = icmp sgt i32 %call, 61, !dbg !9690
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !9691

if.then20:                                        ; preds = %if.end17
  br label %for.inc, !dbg !9692

if.end21:                                         ; preds = %if.end17
  %16 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9693
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %ptr, align 8, !dbg !9694
  %call22 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %16, %struct.drm_display_mode* %17) #8, !dbg !9695
  store %struct.drm_display_mode* %call22, %struct.drm_display_mode** %mode, align 8, !dbg !9696
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9697
  %tobool23 = icmp ne %struct.drm_display_mode* %18, null, !dbg !9697
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !9699

if.then24:                                        ; preds = %if.end21
  %19 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9700
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9702
  call void @drm_mode_probed_add(%struct.drm_connector* %19, %struct.drm_display_mode* %20) #8, !dbg !9703
  %21 = load i32, i32* %num_modes, align 4, !dbg !9704
  %inc = add i32 %21, 1, !dbg !9704
  store i32 %inc, i32* %num_modes, align 4, !dbg !9704
  br label %if.end25, !dbg !9705

if.end25:                                         ; preds = %if.then24, %if.end21
  br label %for.inc, !dbg !9706

for.inc:                                          ; preds = %if.end25, %if.then20, %if.then15
  %22 = load i32, i32* %i, align 4, !dbg !9707
  %inc26 = add i32 %22, 1, !dbg !9707
  store i32 %inc26, i32* %i, align 4, !dbg !9707
  br label %for.cond, !dbg !9708, !llvm.loop !9709

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %num_modes, align 4, !dbg !9711
  ret i32 %23, !dbg !9712
}

; Function Attrs: noredzone
declare dso_local void @drm_mode_probed_add(%struct.drm_connector*, %struct.drm_display_mode*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_set_preferred_mode(%struct.drm_connector* %connector, i32 %hpref, i32 %vpref) #0 !dbg !9713 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %hpref.addr = alloca i32, align 4
  %vpref.addr = alloca i32, align 4
  %mode = alloca %struct.drm_display_mode*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_display_mode*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9716, metadata !DIExpression()), !dbg !9717
  store i32 %hpref, i32* %hpref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hpref.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  store i32 %vpref, i32* %vpref.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vpref.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !9722, metadata !DIExpression()), !dbg !9723
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9724, metadata !DIExpression()), !dbg !9727
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9727
  %probed_modes = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 17, !dbg !9727
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes, i32 0, i32 0, !dbg !9727
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9727
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !9727
  store i8* %2, i8** %__mptr, align 8, !dbg !9727
  br label %do.body, !dbg !9727

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9728

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !9727
  %add.ptr = getelementptr i8, i8* %3, i64 -64, !dbg !9727
  %4 = bitcast i8* %add.ptr to %struct.drm_display_mode*, !dbg !9727
  store %struct.drm_display_mode* %4, %struct.drm_display_mode** %tmp, align 8, !dbg !9728
  %5 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !9727
  store %struct.drm_display_mode* %5, %struct.drm_display_mode** %mode, align 8, !dbg !9730
  br label %for.cond, !dbg !9730

for.cond:                                         ; preds = %do.end13, %do.end
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9731
  %head = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 30, !dbg !9731
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9731
  %probed_modes1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %7, i32 0, i32 17, !dbg !9731
  %cmp = icmp eq %struct.list_head* %head, %probed_modes1, !dbg !9731
  %lnot = xor i1 %cmp, true, !dbg !9731
  br i1 %lnot, label %for.body, label %for.end, !dbg !9730

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9733
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %8, i32 0, i32 1, !dbg !9736
  %9 = load i16, i16* %hdisplay, align 4, !dbg !9736
  %conv = zext i16 %9 to i32, !dbg !9733
  %10 = load i32, i32* %hpref.addr, align 4, !dbg !9737
  %cmp2 = icmp eq i32 %conv, %10, !dbg !9738
  br i1 %cmp2, label %land.lhs.true, label %if.end, !dbg !9739

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9740
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %11, i32 0, i32 6, !dbg !9741
  %12 = load i16, i16* %vdisplay, align 2, !dbg !9741
  %conv4 = zext i16 %12 to i32, !dbg !9740
  %13 = load i32, i32* %vpref.addr, align 4, !dbg !9742
  %cmp5 = icmp eq i32 %conv4, %13, !dbg !9743
  br i1 %cmp5, label %if.then, label %if.end, !dbg !9744

if.then:                                          ; preds = %land.lhs.true
  %14 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9745
  %type = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %14, i32 0, i32 28, !dbg !9746
  %15 = load i8, i8* %type, align 2, !dbg !9747
  %conv7 = zext i8 %15 to i32, !dbg !9747
  %or = or i32 %conv7, 8, !dbg !9747
  %conv8 = trunc i32 %or to i8, !dbg !9747
  store i8 %conv8, i8* %type, align 2, !dbg !9747
  br label %if.end, !dbg !9745

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !9748

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !9749, metadata !DIExpression()), !dbg !9751
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !9751
  %head10 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %16, i32 0, i32 30, !dbg !9751
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %head10, i32 0, i32 0, !dbg !9751
  %17 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !9751
  %18 = bitcast %struct.list_head* %17 to i8*, !dbg !9751
  store i8* %18, i8** %__mptr9, align 8, !dbg !9751
  br label %do.body12, !dbg !9751

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !9752

do.end13:                                         ; preds = %do.body12
  %19 = load i8*, i8** %__mptr9, align 8, !dbg !9751
  %add.ptr15 = getelementptr i8, i8* %19, i64 -64, !dbg !9751
  %20 = bitcast i8* %add.ptr15 to %struct.drm_display_mode*, !dbg !9751
  store %struct.drm_display_mode* %20, %struct.drm_display_mode** %tmp14, align 8, !dbg !9752
  %21 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp14, align 8, !dbg !9751
  store %struct.drm_display_mode* %21, %struct.drm_display_mode** %mode, align 8, !dbg !9731
  br label %for.cond, !dbg !9731, !llvm.loop !9754

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_hdmi_infoframe_set_hdr_metadata(%struct.hdmi_drm_infoframe* %frame, %struct.drm_connector_state* %conn_state) #0 !dbg !9757 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.hdmi_drm_infoframe*, align 8
  %conn_state.addr = alloca %struct.drm_connector_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %hdr_metadata = alloca %struct.hdr_output_metadata*, align 8
  %err = alloca i32, align 4
  store %struct.hdmi_drm_infoframe* %frame, %struct.hdmi_drm_infoframe** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hdmi_drm_infoframe** %frame.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  store %struct.drm_connector_state* %conn_state, %struct.drm_connector_state** %conn_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state.addr, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !9787, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.hdr_output_metadata** %hdr_metadata, metadata !9789, metadata !DIExpression()), !dbg !9817
  call void @llvm.dbg.declare(metadata i32* %err, metadata !9818, metadata !DIExpression()), !dbg !9819
  %0 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9820
  %tobool = icmp ne %struct.hdmi_drm_infoframe* %0, null, !dbg !9820
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9822

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !9823
  %tobool1 = icmp ne %struct.drm_connector_state* %1, null, !dbg !9823
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9824

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9825
  br label %return, !dbg !9825

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !9826
  %connector2 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %2, i32 0, i32 0, !dbg !9827
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector2, align 8, !dbg !9827
  store %struct.drm_connector* %3, %struct.drm_connector** %connector, align 8, !dbg !9828
  %4 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !9829
  %hdr_output_metadata = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %4, i32 0, i32 17, !dbg !9831
  %5 = load %struct.drm_property_blob*, %struct.drm_property_blob** %hdr_output_metadata, align 8, !dbg !9831
  %tobool3 = icmp ne %struct.drm_property_blob* %5, null, !dbg !9829
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !9832

if.then4:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !9833
  br label %return, !dbg !9833

if.end5:                                          ; preds = %if.end
  %6 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !9834
  %hdr_output_metadata6 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %6, i32 0, i32 17, !dbg !9835
  %7 = load %struct.drm_property_blob*, %struct.drm_property_blob** %hdr_output_metadata6, align 8, !dbg !9835
  %data = getelementptr inbounds %struct.drm_property_blob, %struct.drm_property_blob* %7, i32 0, i32 5, !dbg !9836
  %8 = load i8*, i8** %data, align 8, !dbg !9836
  %9 = bitcast i8* %8 to %struct.hdr_output_metadata*, !dbg !9834
  store %struct.hdr_output_metadata* %9, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9837
  %10 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9838
  %tobool7 = icmp ne %struct.hdr_output_metadata* %10, null, !dbg !9838
  br i1 %tobool7, label %lor.lhs.false8, label %if.then10, !dbg !9840

lor.lhs.false8:                                   ; preds = %if.end5
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !9841
  %tobool9 = icmp ne %struct.drm_connector* %11, null, !dbg !9841
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !9842

if.then10:                                        ; preds = %lor.lhs.false8, %if.end5
  store i32 -22, i32* %retval, align 4, !dbg !9843
  br label %return, !dbg !9843

if.end11:                                         ; preds = %lor.lhs.false8
  %12 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9844
  %13 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %12, i32 0, i32 1, !dbg !9846
  %hdmi_metadata_type1 = bitcast %union.anon.75* %13 to %struct.hdr_metadata_infoframe*, !dbg !9846
  %eotf = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type1, i32 0, i32 0, !dbg !9847
  %14 = load i8, i8* %eotf, align 4, !dbg !9847
  %15 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !9848
  %hdr_sink_metadata = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %15, i32 0, i32 58, !dbg !9849
  %16 = getelementptr inbounds %struct.hdr_sink_metadata, %struct.hdr_sink_metadata* %hdr_sink_metadata, i32 0, i32 1, !dbg !9850
  %hdmi_type1 = bitcast %union.anon.72* %16 to %struct.hdr_static_metadata*, !dbg !9850
  %eotf12 = getelementptr inbounds %struct.hdr_static_metadata, %struct.hdr_static_metadata* %hdmi_type1, i32 0, i32 0, !dbg !9851
  %17 = load i8, i8* %eotf12, align 4, !dbg !9851
  %call = call zeroext i1 @is_eotf_supported(i8 zeroext %14, i8 zeroext %17) #8, !dbg !9852
  br i1 %call, label %if.end14, label %if.then13, !dbg !9853

if.then13:                                        ; preds = %if.end11
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i64 0, i64 0)) #8, !dbg !9854
  store i32 -22, i32* %retval, align 4, !dbg !9856
  br label %return, !dbg !9856

if.end14:                                         ; preds = %if.end11
  %18 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9857
  %call15 = call i32 @hdmi_drm_infoframe_init(%struct.hdmi_drm_infoframe* %18) #8, !dbg !9858
  store i32 %call15, i32* %err, align 4, !dbg !9859
  %19 = load i32, i32* %err, align 4, !dbg !9860
  %cmp = icmp slt i32 %19, 0, !dbg !9862
  br i1 %cmp, label %if.then16, label %if.end17, !dbg !9863

if.then16:                                        ; preds = %if.end14
  %20 = load i32, i32* %err, align 4, !dbg !9864
  store i32 %20, i32* %retval, align 4, !dbg !9865
  br label %return, !dbg !9865

if.end17:                                         ; preds = %if.end14
  %21 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9866
  %22 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %21, i32 0, i32 1, !dbg !9867
  %hdmi_metadata_type118 = bitcast %union.anon.75* %22 to %struct.hdr_metadata_infoframe*, !dbg !9867
  %eotf19 = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type118, i32 0, i32 0, !dbg !9868
  %23 = load i8, i8* %eotf19, align 4, !dbg !9868
  %conv = zext i8 %23 to i32, !dbg !9866
  %24 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9869
  %eotf20 = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %24, i32 0, i32 3, !dbg !9870
  store i32 %conv, i32* %eotf20, align 4, !dbg !9871
  %25 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9872
  %26 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %25, i32 0, i32 1, !dbg !9873
  %hdmi_metadata_type121 = bitcast %union.anon.75* %26 to %struct.hdr_metadata_infoframe*, !dbg !9873
  %metadata_type = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type121, i32 0, i32 1, !dbg !9874
  %27 = load i8, i8* %metadata_type, align 1, !dbg !9874
  %conv22 = zext i8 %27 to i32, !dbg !9872
  %28 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9875
  %metadata_type23 = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %28, i32 0, i32 4, !dbg !9876
  store i32 %conv22, i32* %metadata_type23, align 4, !dbg !9877
  br label %do.body, !dbg !9878

do.body:                                          ; preds = %if.end17
  br label %do.end, !dbg !9879

do.end:                                           ; preds = %do.body
  br label %do.body24, !dbg !9881

do.body24:                                        ; preds = %do.end
  br label %do.end25, !dbg !9882

do.end25:                                         ; preds = %do.body24
  %29 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9884
  %display_primaries = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %29, i32 0, i32 5, !dbg !9885
  %30 = bitcast [3 x %struct.anon.73]* %display_primaries to i8*, !dbg !9886
  %31 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9887
  %32 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %31, i32 0, i32 1, !dbg !9888
  %hdmi_metadata_type126 = bitcast %union.anon.75* %32 to %struct.hdr_metadata_infoframe*, !dbg !9888
  %display_primaries27 = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type126, i32 0, i32 2, !dbg !9889
  %33 = bitcast [3 x %struct.anon.76]* %display_primaries27 to i8*, !dbg !9886
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %30, i8* align 2 %33, i64 12, i1 false), !dbg !9886
  %34 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9890
  %white_point = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %34, i32 0, i32 6, !dbg !9891
  %35 = bitcast %struct.anon.74* %white_point to i8*, !dbg !9892
  %36 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9893
  %37 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %36, i32 0, i32 1, !dbg !9894
  %hdmi_metadata_type128 = bitcast %union.anon.75* %37 to %struct.hdr_metadata_infoframe*, !dbg !9894
  %white_point29 = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type128, i32 0, i32 3, !dbg !9895
  %38 = bitcast %struct.anon.77* %white_point29 to i8*, !dbg !9892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 2 %38, i64 4, i1 false), !dbg !9892
  %39 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9896
  %40 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %39, i32 0, i32 1, !dbg !9897
  %hdmi_metadata_type130 = bitcast %union.anon.75* %40 to %struct.hdr_metadata_infoframe*, !dbg !9897
  %max_display_mastering_luminance = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type130, i32 0, i32 4, !dbg !9898
  %41 = load i16, i16* %max_display_mastering_luminance, align 2, !dbg !9898
  %42 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9899
  %max_display_mastering_luminance31 = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %42, i32 0, i32 7, !dbg !9900
  store i16 %41, i16* %max_display_mastering_luminance31, align 4, !dbg !9901
  %43 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9902
  %44 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %43, i32 0, i32 1, !dbg !9903
  %hdmi_metadata_type132 = bitcast %union.anon.75* %44 to %struct.hdr_metadata_infoframe*, !dbg !9903
  %min_display_mastering_luminance = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type132, i32 0, i32 5, !dbg !9904
  %45 = load i16, i16* %min_display_mastering_luminance, align 4, !dbg !9904
  %46 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9905
  %min_display_mastering_luminance33 = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %46, i32 0, i32 8, !dbg !9906
  store i16 %45, i16* %min_display_mastering_luminance33, align 2, !dbg !9907
  %47 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9908
  %48 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %47, i32 0, i32 1, !dbg !9909
  %hdmi_metadata_type134 = bitcast %union.anon.75* %48 to %struct.hdr_metadata_infoframe*, !dbg !9909
  %max_fall = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type134, i32 0, i32 7, !dbg !9910
  %49 = load i16, i16* %max_fall, align 4, !dbg !9910
  %50 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9911
  %max_fall35 = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %50, i32 0, i32 10, !dbg !9912
  store i16 %49, i16* %max_fall35, align 2, !dbg !9913
  %51 = load %struct.hdr_output_metadata*, %struct.hdr_output_metadata** %hdr_metadata, align 8, !dbg !9914
  %52 = getelementptr inbounds %struct.hdr_output_metadata, %struct.hdr_output_metadata* %51, i32 0, i32 1, !dbg !9915
  %hdmi_metadata_type136 = bitcast %union.anon.75* %52 to %struct.hdr_metadata_infoframe*, !dbg !9915
  %max_cll = getelementptr inbounds %struct.hdr_metadata_infoframe, %struct.hdr_metadata_infoframe* %hdmi_metadata_type136, i32 0, i32 6, !dbg !9916
  %53 = load i16, i16* %max_cll, align 2, !dbg !9916
  %54 = load %struct.hdmi_drm_infoframe*, %struct.hdmi_drm_infoframe** %frame.addr, align 8, !dbg !9917
  %max_cll37 = getelementptr inbounds %struct.hdmi_drm_infoframe, %struct.hdmi_drm_infoframe* %54, i32 0, i32 9, !dbg !9918
  store i16 %53, i16* %max_cll37, align 4, !dbg !9919
  store i32 0, i32* %retval, align 4, !dbg !9920
  br label %return, !dbg !9920

return:                                           ; preds = %do.end25, %if.then16, %if.then13, %if.then10, %if.then4, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !9921
  ret i32 %55, !dbg !9921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_eotf_supported(i8 zeroext %output_eotf, i8 zeroext %sink_eotf) #0 !dbg !9922 {
entry:
  %output_eotf.addr = alloca i8, align 1
  %sink_eotf.addr = alloca i8, align 1
  store i8 %output_eotf, i8* %output_eotf.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %output_eotf.addr, metadata !9925, metadata !DIExpression()), !dbg !9926
  store i8 %sink_eotf, i8* %sink_eotf.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sink_eotf.addr, metadata !9927, metadata !DIExpression()), !dbg !9928
  %0 = load i8, i8* %sink_eotf.addr, align 1, !dbg !9929
  %conv = zext i8 %0 to i64, !dbg !9929
  %1 = load i8, i8* %output_eotf.addr, align 1, !dbg !9930
  %conv1 = zext i8 %1 to i32, !dbg !9930
  %sh_prom = zext i32 %conv1 to i64, !dbg !9930
  %shl = shl i64 1, %sh_prom, !dbg !9930
  %and = and i64 %conv, %shl, !dbg !9931
  %tobool = icmp ne i64 %and, 0, !dbg !9929
  ret i1 %tobool, !dbg !9932
}

; Function Attrs: noredzone
declare dso_local i32 @hdmi_drm_infoframe_init(%struct.hdmi_drm_infoframe*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_hdmi_avi_infoframe_from_display_mode(%struct.hdmi_avi_infoframe* %frame, %struct.drm_connector* %connector, %struct.drm_display_mode* %mode) #0 !dbg !9933 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.hdmi_avi_infoframe*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %picture_aspect = alloca i32, align 4
  %vic = alloca i8, align 1
  %hdmi_vic = alloca i8, align 1
  store %struct.hdmi_avi_infoframe* %frame, %struct.hdmi_avi_infoframe** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hdmi_avi_infoframe** %frame.addr, metadata !9961, metadata !DIExpression()), !dbg !9962
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.declare(metadata i32* %picture_aspect, metadata !9967, metadata !DIExpression()), !dbg !9968
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !9969, metadata !DIExpression()), !dbg !9970
  call void @llvm.dbg.declare(metadata i8* %hdmi_vic, metadata !9971, metadata !DIExpression()), !dbg !9972
  %0 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !9973
  %tobool = icmp ne %struct.hdmi_avi_infoframe* %0, null, !dbg !9973
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9975

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !9976
  %tobool1 = icmp ne %struct.drm_display_mode* %1, null, !dbg !9976
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9977

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -22, i32* %retval, align 4, !dbg !9978
  br label %return, !dbg !9978

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !9979
  call void @hdmi_avi_infoframe_init(%struct.hdmi_avi_infoframe* %2) #8, !dbg !9980
  %3 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !9981
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %3, i32 0, i32 11, !dbg !9983
  %4 = load i32, i32* %flags, align 8, !dbg !9983
  %and = and i32 %4, 4096, !dbg !9984
  %tobool2 = icmp ne i32 %and, 0, !dbg !9984
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9985

if.then3:                                         ; preds = %if.end
  %5 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !9986
  %pixel_repeat = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %5, i32 0, i32 15, !dbg !9987
  store i8 1, i8* %pixel_repeat, align 4, !dbg !9988
  br label %if.end4, !dbg !9986

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9989
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !9990
  %call = call zeroext i8 @drm_mode_cea_vic(%struct.drm_connector* %6, %struct.drm_display_mode* %7) #8, !dbg !9991
  store i8 %call, i8* %vic, align 1, !dbg !9992
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !9993
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !9994
  %call5 = call zeroext i8 @drm_mode_hdmi_vic(%struct.drm_connector* %8, %struct.drm_display_mode* %9) #8, !dbg !9995
  store i8 %call5, i8* %hdmi_vic, align 1, !dbg !9996
  %10 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !9997
  %picture_aspect6 = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %10, i32 0, i32 6, !dbg !9998
  store i32 0, i32* %picture_aspect6, align 4, !dbg !9999
  %11 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10000
  %content_type = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %11, i32 0, i32 14, !dbg !10001
  store i32 0, i32* %content_type, align 4, !dbg !10002
  %12 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10003
  %itc = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %12, i32 0, i32 8, !dbg !10004
  store i8 0, i8* %itc, align 4, !dbg !10005
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10006
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %13, i32 0, i32 33, !dbg !10007
  %14 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !10007
  store i32 %14, i32* %picture_aspect, align 4, !dbg !10008
  %15 = load i32, i32* %picture_aspect, align 4, !dbg !10009
  %cmp = icmp eq i32 %15, 0, !dbg !10011
  br i1 %cmp, label %if.then7, label %if.end16, !dbg !10012

if.then7:                                         ; preds = %if.end4
  %16 = load i8, i8* %vic, align 1, !dbg !10013
  %tobool8 = icmp ne i8 %16, 0, !dbg !10013
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !10016

if.then9:                                         ; preds = %if.then7
  %17 = load i8, i8* %vic, align 1, !dbg !10017
  %call10 = call i32 @drm_get_cea_aspect_ratio(i8 zeroext %17) #8, !dbg !10018
  store i32 %call10, i32* %picture_aspect, align 4, !dbg !10019
  br label %if.end15, !dbg !10020

if.else:                                          ; preds = %if.then7
  %18 = load i8, i8* %hdmi_vic, align 1, !dbg !10021
  %tobool11 = icmp ne i8 %18, 0, !dbg !10021
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !10023

if.then12:                                        ; preds = %if.else
  %19 = load i8, i8* %hdmi_vic, align 1, !dbg !10024
  %call13 = call i32 @drm_get_hdmi_aspect_ratio(i8 zeroext %19) #8, !dbg !10025
  store i32 %call13, i32* %picture_aspect, align 4, !dbg !10026
  br label %if.end14, !dbg !10027

if.end14:                                         ; preds = %if.then12, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end14, %if.then9
  br label %if.end16, !dbg !10028

if.end16:                                         ; preds = %if.end15, %if.end4
  %20 = load i32, i32* %picture_aspect, align 4, !dbg !10029
  %cmp17 = icmp ugt i32 %20, 2, !dbg !10031
  br i1 %cmp17, label %if.then18, label %if.end35, !dbg !10032

if.then18:                                        ; preds = %if.end16
  %21 = load i8, i8* %vic, align 1, !dbg !10033
  %tobool19 = icmp ne i8 %21, 0, !dbg !10033
  br i1 %tobool19, label %if.then20, label %if.else25, !dbg !10036

if.then20:                                        ; preds = %if.then18
  %22 = load i32, i32* %picture_aspect, align 4, !dbg !10037
  %23 = load i8, i8* %vic, align 1, !dbg !10040
  %call21 = call i32 @drm_get_cea_aspect_ratio(i8 zeroext %23) #8, !dbg !10041
  %cmp22 = icmp ne i32 %22, %call21, !dbg !10042
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !10043

if.then23:                                        ; preds = %if.then20
  store i32 -22, i32* %retval, align 4, !dbg !10044
  br label %return, !dbg !10044

if.end24:                                         ; preds = %if.then20
  br label %if.end34, !dbg !10045

if.else25:                                        ; preds = %if.then18
  %24 = load i8, i8* %hdmi_vic, align 1, !dbg !10046
  %tobool26 = icmp ne i8 %24, 0, !dbg !10046
  br i1 %tobool26, label %if.then27, label %if.else32, !dbg !10048

if.then27:                                        ; preds = %if.else25
  %25 = load i32, i32* %picture_aspect, align 4, !dbg !10049
  %26 = load i8, i8* %hdmi_vic, align 1, !dbg !10052
  %call28 = call i32 @drm_get_hdmi_aspect_ratio(i8 zeroext %26) #8, !dbg !10053
  %cmp29 = icmp ne i32 %25, %call28, !dbg !10054
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !10055

if.then30:                                        ; preds = %if.then27
  store i32 -22, i32* %retval, align 4, !dbg !10056
  br label %return, !dbg !10056

if.end31:                                         ; preds = %if.then27
  br label %if.end33, !dbg !10057

if.else32:                                        ; preds = %if.else25
  store i32 -22, i32* %retval, align 4, !dbg !10058
  br label %return, !dbg !10058

if.end33:                                         ; preds = %if.end31
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end24
  store i32 0, i32* %picture_aspect, align 4, !dbg !10060
  br label %if.end35, !dbg !10061

if.end35:                                         ; preds = %if.end34, %if.end16
  %27 = load i8, i8* %vic, align 1, !dbg !10062
  %28 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10063
  %video_code = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %28, i32 0, i32 12, !dbg !10064
  store i8 %27, i8* %video_code, align 4, !dbg !10065
  %29 = load i32, i32* %picture_aspect, align 4, !dbg !10066
  %30 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10067
  %picture_aspect36 = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %30, i32 0, i32 6, !dbg !10068
  store i32 %29, i32* %picture_aspect36, align 4, !dbg !10069
  %31 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10070
  %active_aspect = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %31, i32 0, i32 7, !dbg !10071
  store i32 8, i32* %active_aspect, align 4, !dbg !10072
  %32 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10073
  %scan_mode = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %32, i32 0, i32 4, !dbg !10074
  store i32 2, i32* %scan_mode, align 4, !dbg !10075
  store i32 0, i32* %retval, align 4, !dbg !10076
  br label %return, !dbg !10076

return:                                           ; preds = %if.end35, %if.else32, %if.then30, %if.then23, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !10077
  ret i32 %33, !dbg !10077
}

; Function Attrs: noredzone
declare dso_local void @hdmi_avi_infoframe_init(%struct.hdmi_avi_infoframe*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_mode_cea_vic(%struct.drm_connector* %connector, %struct.drm_display_mode* %mode) #0 !dbg !10078 {
entry:
  %retval = alloca i8, align 1
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %vic = alloca i8, align 1
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10081, metadata !DIExpression()), !dbg !10082
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !10083, metadata !DIExpression()), !dbg !10084
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !10085, metadata !DIExpression()), !dbg !10086
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10087
  %1 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10089
  %call = call zeroext i8 @drm_mode_hdmi_vic(%struct.drm_connector* %0, %struct.drm_display_mode* %1) #8, !dbg !10090
  %tobool = icmp ne i8 %call, 0, !dbg !10090
  br i1 %tobool, label %if.then, label %if.end, !dbg !10091

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !10092
  br label %return, !dbg !10092

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10093
  %call1 = call zeroext i8 @drm_match_cea_mode(%struct.drm_display_mode* %2) #8, !dbg !10094
  store i8 %call1, i8* %vic, align 1, !dbg !10095
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10096
  %call2 = call zeroext i1 @is_hdmi2_sink(%struct.drm_connector* %3) #8, !dbg !10098
  br i1 %call2, label %if.end5, label %land.lhs.true, !dbg !10099

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8, i8* %vic, align 1, !dbg !10100
  %conv = zext i8 %4 to i32, !dbg !10100
  %cmp = icmp sgt i32 %conv, 64, !dbg !10101
  br i1 %cmp, label %if.then4, label %if.end5, !dbg !10102

if.then4:                                         ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !10103
  br label %return, !dbg !10103

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %5 = load i8, i8* %vic, align 1, !dbg !10104
  store i8 %5, i8* %retval, align 1, !dbg !10105
  br label %return, !dbg !10105

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !10106
  ret i8 %6, !dbg !10106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_mode_hdmi_vic(%struct.drm_connector* %connector, %struct.drm_display_mode* %mode) #0 !dbg !10107 {
entry:
  %retval = alloca i8, align 1
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %has_hdmi_infoframe = alloca i8, align 1
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10108, metadata !DIExpression()), !dbg !10109
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !10110, metadata !DIExpression()), !dbg !10111
  call void @llvm.dbg.declare(metadata i8* %has_hdmi_infoframe, metadata !10112, metadata !DIExpression()), !dbg !10113
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10114
  %tobool = icmp ne %struct.drm_connector* %0, null, !dbg !10114
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10114

cond.true:                                        ; preds = %entry
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10115
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %1, i32 0, i32 18, !dbg !10116
  %has_hdmi_infoframe1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 12, !dbg !10117
  %2 = load i8, i8* %has_hdmi_infoframe1, align 2, !dbg !10117
  %tobool2 = trunc i8 %2 to i1, !dbg !10117
  %conv = zext i1 %tobool2 to i32, !dbg !10115
  br label %cond.end, !dbg !10114

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10114

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !10114
  %tobool3 = icmp ne i32 %cond, 0, !dbg !10114
  %frombool = zext i1 %tobool3 to i8, !dbg !10113
  store i8 %frombool, i8* %has_hdmi_infoframe, align 1, !dbg !10113
  %3 = load i8, i8* %has_hdmi_infoframe, align 1, !dbg !10118
  %tobool4 = trunc i8 %3 to i1, !dbg !10118
  br i1 %tobool4, label %if.end, label %if.then, !dbg !10120

if.then:                                          ; preds = %cond.end
  store i8 0, i8* %retval, align 1, !dbg !10121
  br label %return, !dbg !10121

if.end:                                           ; preds = %cond.end
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10122
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %4, i32 0, i32 11, !dbg !10124
  %5 = load i32, i32* %flags, align 8, !dbg !10124
  %and = and i32 %5, 507904, !dbg !10125
  %tobool5 = icmp ne i32 %and, 0, !dbg !10125
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !10126

if.then6:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !10127
  br label %return, !dbg !10127

if.end7:                                          ; preds = %if.end
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10128
  %call = call zeroext i8 @drm_match_hdmi_mode(%struct.drm_display_mode* %6) #8, !dbg !10129
  store i8 %call, i8* %retval, align 1, !dbg !10130
  br label %return, !dbg !10130

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !10131
  ret i8 %7, !dbg !10131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_get_cea_aspect_ratio(i8 zeroext %video_code) #0 !dbg !10132 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !10135
  %retval = alloca i32, align 4
  %video_code.addr = alloca i8, align 1
  %mode = alloca %struct.drm_display_mode*, align 8
  store i8 %video_code, i8* %video_code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_code.addr, metadata !10137, metadata !DIExpression()), !dbg !10138
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !10139, metadata !DIExpression()), !dbg !10140
  %0 = load i8, i8* %video_code.addr, align 1, !dbg !10141
  store i8 %0, i8* %vic.addr.i, align 1
  %1 = load i8, i8* %vic.addr.i, align 1, !dbg !10142
  %conv.i = zext i8 %1 to i32, !dbg !10142
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !10143
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !10144

land.lhs.true.i:                                  ; preds = %entry
  %2 = load i8, i8* %vic.addr.i, align 1, !dbg !10145
  %conv4.i = zext i8 %2 to i64, !dbg !10145
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !10146
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !10147

if.then.i:                                        ; preds = %land.lhs.true.i
  %3 = load i8, i8* %vic.addr.i, align 1, !dbg !10148
  %conv7.i = zext i8 %3 to i32, !dbg !10148
  %sub.i = sub i32 %conv7.i, 1, !dbg !10149
  %idxprom.i = sext i32 %sub.i to i64, !dbg !10150
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !10150
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !10151
  br label %cea_mode_for_vic.exit, !dbg !10151

if.end.i:                                         ; preds = %land.lhs.true.i, %entry
  %4 = load i8, i8* %vic.addr.i, align 1, !dbg !10152
  %conv8.i = zext i8 %4 to i32, !dbg !10152
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !10153
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !10154

land.lhs.true11.i:                                ; preds = %if.end.i
  %5 = load i8, i8* %vic.addr.i, align 1, !dbg !10155
  %conv12.i = zext i8 %5 to i64, !dbg !10155
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !10156
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !10157

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %6 = load i8, i8* %vic.addr.i, align 1, !dbg !10158
  %conv16.i = zext i8 %6 to i32, !dbg !10158
  %sub17.i = sub i32 %conv16.i, 193, !dbg !10159
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !10160
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !10160
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !10161
  br label %cea_mode_for_vic.exit, !dbg !10161

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !10162
  br label %cea_mode_for_vic.exit, !dbg !10162

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !10163
  store %struct.drm_display_mode* %7, %struct.drm_display_mode** %mode, align 8, !dbg !10140
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !10164
  %tobool = icmp ne %struct.drm_display_mode* %8, null, !dbg !10164
  br i1 %tobool, label %if.then, label %if.end, !dbg !10166

if.then:                                          ; preds = %cea_mode_for_vic.exit
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !10167
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %9, i32 0, i32 33, !dbg !10168
  %10 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !10168
  store i32 %10, i32* %retval, align 4, !dbg !10169
  br label %return, !dbg !10169

if.end:                                           ; preds = %cea_mode_for_vic.exit
  store i32 0, i32* %retval, align 4, !dbg !10170
  br label %return, !dbg !10170

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !10171
  ret i32 %11, !dbg !10171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_get_hdmi_aspect_ratio(i8 zeroext %video_code) #0 !dbg !10172 {
entry:
  %video_code.addr = alloca i8, align 1
  store i8 %video_code, i8* %video_code.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_code.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  %0 = load i8, i8* %video_code.addr, align 1, !dbg !10175
  %idxprom = zext i8 %0 to i64, !dbg !10176
  %arrayidx = getelementptr [5 x %struct.drm_display_mode], [5 x %struct.drm_display_mode]* @edid_4k_modes, i64 0, i64 %idxprom, !dbg !10176
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %arrayidx, i32 0, i32 33, !dbg !10177
  %1 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !10177
  ret i32 %1, !dbg !10178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_hdmi_avi_infoframe_colorspace(%struct.hdmi_avi_infoframe* %frame, %struct.drm_connector_state* %conn_state) #0 !dbg !10179 {
entry:
  %frame.addr = alloca %struct.hdmi_avi_infoframe*, align 8
  %conn_state.addr = alloca %struct.drm_connector_state*, align 8
  %colorimetry_val = alloca i32, align 4
  %colorimetry_index = alloca i32, align 4
  store %struct.hdmi_avi_infoframe* %frame, %struct.hdmi_avi_infoframe** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hdmi_avi_infoframe** %frame.addr, metadata !10182, metadata !DIExpression()), !dbg !10183
  store %struct.drm_connector_state* %conn_state, %struct.drm_connector_state** %conn_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state.addr, metadata !10184, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata i32* %colorimetry_val, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.declare(metadata i32* %colorimetry_index, metadata !10188, metadata !DIExpression()), !dbg !10189
  %0 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !10190
  %colorspace = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %0, i32 0, i32 13, !dbg !10191
  %1 = load i32, i32* %colorspace, align 8, !dbg !10191
  %and = and i32 %1, 511, !dbg !10192
  store i32 %and, i32* %colorimetry_index, align 4, !dbg !10189
  %2 = load i32, i32* %colorimetry_index, align 4, !dbg !10193
  %conv = zext i32 %2 to i64, !dbg !10193
  %cmp = icmp uge i64 %conv, 11, !dbg !10195
  br i1 %cmp, label %if.then, label %if.else, !dbg !10196

if.then:                                          ; preds = %entry
  store i32 0, i32* %colorimetry_val, align 4, !dbg !10197
  br label %if.end, !dbg !10198

if.else:                                          ; preds = %entry
  %3 = load i32, i32* %colorimetry_index, align 4, !dbg !10199
  %idxprom = zext i32 %3 to i64, !dbg !10200
  %arrayidx = getelementptr [11 x i32], [11 x i32]* @hdmi_colorimetry_val, i64 0, i64 %idxprom, !dbg !10200
  %4 = load i32, i32* %arrayidx, align 4, !dbg !10200
  store i32 %4, i32* %colorimetry_val, align 4, !dbg !10201
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load i32, i32* %colorimetry_val, align 4, !dbg !10202
  %and2 = and i32 %5, 3, !dbg !10203
  %6 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10204
  %colorimetry = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %6, i32 0, i32 5, !dbg !10205
  store i32 %and2, i32* %colorimetry, align 4, !dbg !10206
  %7 = load i32, i32* %colorimetry_val, align 4, !dbg !10207
  %shr = lshr i32 %7, 2, !dbg !10208
  %and3 = and i32 %shr, 7, !dbg !10209
  %8 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10210
  %extended_colorimetry = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %8, i32 0, i32 9, !dbg !10211
  store i32 %and3, i32* %extended_colorimetry, align 4, !dbg !10212
  ret void, !dbg !10213
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_hdmi_avi_infoframe_quant_range(%struct.hdmi_avi_infoframe* %frame, %struct.drm_connector* %connector, %struct.drm_display_mode* %mode, i32 %rgb_quant_range) #0 !dbg !10214 {
entry:
  %frame.addr = alloca %struct.hdmi_avi_infoframe*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %rgb_quant_range.addr = alloca i32, align 4
  %info = alloca %struct.drm_display_info*, align 8
  store %struct.hdmi_avi_infoframe* %frame, %struct.hdmi_avi_infoframe** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hdmi_avi_infoframe** %frame.addr, metadata !10217, metadata !DIExpression()), !dbg !10218
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10219, metadata !DIExpression()), !dbg !10220
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !10221, metadata !DIExpression()), !dbg !10222
  store i32 %rgb_quant_range, i32* %rgb_quant_range.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rgb_quant_range.addr, metadata !10223, metadata !DIExpression()), !dbg !10224
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !10225, metadata !DIExpression()), !dbg !10228
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10229
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !10230
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !10228
  %1 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !10231
  %rgb_quant_range_selectable = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %1, i32 0, i32 13, !dbg !10233
  %2 = load i8, i8* %rgb_quant_range_selectable, align 1, !dbg !10233
  %tobool = trunc i8 %2 to i1, !dbg !10233
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !10234

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %rgb_quant_range.addr, align 4, !dbg !10235
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10236
  %call = call i32 @drm_default_rgb_quant_range(%struct.drm_display_mode* %4) #8, !dbg !10237
  %cmp = icmp eq i32 %3, %call, !dbg !10238
  br i1 %cmp, label %if.then, label %if.else, !dbg !10239

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* %rgb_quant_range.addr, align 4, !dbg !10240
  %6 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10241
  %quantization_range = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %6, i32 0, i32 10, !dbg !10242
  store i32 %5, i32* %quantization_range, align 4, !dbg !10243
  br label %if.end, !dbg !10241

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10244
  %quantization_range1 = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %7, i32 0, i32 10, !dbg !10245
  store i32 0, i32* %quantization_range1, align 4, !dbg !10246
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10247
  %call2 = call zeroext i1 @is_hdmi2_sink(%struct.drm_connector* %8) #8, !dbg !10249
  br i1 %call2, label %lor.lhs.false3, label %if.then5, !dbg !10250

lor.lhs.false3:                                   ; preds = %if.end
  %9 = load i32, i32* %rgb_quant_range.addr, align 4, !dbg !10251
  %cmp4 = icmp eq i32 %9, 1, !dbg !10252
  br i1 %cmp4, label %if.then5, label %if.else6, !dbg !10253

if.then5:                                         ; preds = %lor.lhs.false3, %if.end
  %10 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10254
  %ycc_quantization_range = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %10, i32 0, i32 13, !dbg !10255
  store i32 0, i32* %ycc_quantization_range, align 4, !dbg !10256
  br label %if.end8, !dbg !10254

if.else6:                                         ; preds = %lor.lhs.false3
  %11 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10257
  %ycc_quantization_range7 = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %11, i32 0, i32 13, !dbg !10258
  store i32 1, i32* %ycc_quantization_range7, align 4, !dbg !10259
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.then5
  ret void, !dbg !10260
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_hdmi2_sink(%struct.drm_connector* %connector) #0 !dbg !10261 {
entry:
  %retval = alloca i1, align 1
  %connector.addr = alloca %struct.drm_connector*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10264, metadata !DIExpression()), !dbg !10265
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10266
  %tobool = icmp ne %struct.drm_connector* %0, null, !dbg !10266
  br i1 %tobool, label %if.end, label %if.then, !dbg !10268

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !10269
  br label %return, !dbg !10269

if.end:                                           ; preds = %entry
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10270
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %1, i32 0, i32 18, !dbg !10271
  %hdmi = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 16, !dbg !10272
  %scdc = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %hdmi, i32 0, i32 0, !dbg !10273
  %supported = getelementptr inbounds %struct.drm_scdc, %struct.drm_scdc* %scdc, i32 0, i32 0, !dbg !10274
  %2 = load i8, i8* %supported, align 8, !dbg !10274
  %tobool1 = trunc i8 %2 to i1, !dbg !10274
  br i1 %tobool1, label %lor.end, label %lor.rhs, !dbg !10275

lor.rhs:                                          ; preds = %if.end
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10276
  %display_info2 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %3, i32 0, i32 18, !dbg !10277
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info2, i32 0, i32 5, !dbg !10278
  %4 = load i32, i32* %color_formats, align 4, !dbg !10278
  %and = and i32 %4, 8, !dbg !10279
  %tobool3 = icmp ne i32 %and, 0, !dbg !10275
  br label %lor.end, !dbg !10275

lor.end:                                          ; preds = %lor.rhs, %if.end
  %5 = phi i1 [ true, %if.end ], [ %tobool3, %lor.rhs ]
  store i1 %5, i1* %retval, align 1, !dbg !10280
  br label %return, !dbg !10280

return:                                           ; preds = %lor.end, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !10281
  ret i1 %6, !dbg !10281
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_hdmi_avi_infoframe_bars(%struct.hdmi_avi_infoframe* %frame, %struct.drm_connector_state* %conn_state) #0 !dbg !10282 {
entry:
  %frame.addr = alloca %struct.hdmi_avi_infoframe*, align 8
  %conn_state.addr = alloca %struct.drm_connector_state*, align 8
  store %struct.hdmi_avi_infoframe* %frame, %struct.hdmi_avi_infoframe** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hdmi_avi_infoframe** %frame.addr, metadata !10283, metadata !DIExpression()), !dbg !10284
  store %struct.drm_connector_state* %conn_state, %struct.drm_connector_state** %conn_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state.addr, metadata !10285, metadata !DIExpression()), !dbg !10286
  %0 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !10287
  %tv = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %0, i32 0, i32 6, !dbg !10288
  %margins = getelementptr inbounds %struct.drm_tv_connector_state, %struct.drm_tv_connector_state* %tv, i32 0, i32 1, !dbg !10289
  %right = getelementptr inbounds %struct.drm_connector_tv_margins, %struct.drm_connector_tv_margins* %margins, i32 0, i32 2, !dbg !10290
  %1 = load i32, i32* %right, align 4, !dbg !10290
  %conv = trunc i32 %1 to i16, !dbg !10287
  %2 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10291
  %right_bar = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %2, i32 0, i32 19, !dbg !10292
  store i16 %conv, i16* %right_bar, align 4, !dbg !10293
  %3 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !10294
  %tv1 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %3, i32 0, i32 6, !dbg !10295
  %margins2 = getelementptr inbounds %struct.drm_tv_connector_state, %struct.drm_tv_connector_state* %tv1, i32 0, i32 1, !dbg !10296
  %left = getelementptr inbounds %struct.drm_connector_tv_margins, %struct.drm_connector_tv_margins* %margins2, i32 0, i32 1, !dbg !10297
  %4 = load i32, i32* %left, align 4, !dbg !10297
  %conv3 = trunc i32 %4 to i16, !dbg !10294
  %5 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10298
  %left_bar = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %5, i32 0, i32 18, !dbg !10299
  store i16 %conv3, i16* %left_bar, align 2, !dbg !10300
  %6 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !10301
  %tv4 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %6, i32 0, i32 6, !dbg !10302
  %margins5 = getelementptr inbounds %struct.drm_tv_connector_state, %struct.drm_tv_connector_state* %tv4, i32 0, i32 1, !dbg !10303
  %top = getelementptr inbounds %struct.drm_connector_tv_margins, %struct.drm_connector_tv_margins* %margins5, i32 0, i32 3, !dbg !10304
  %7 = load i32, i32* %top, align 4, !dbg !10304
  %conv6 = trunc i32 %7 to i16, !dbg !10301
  %8 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10305
  %top_bar = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %8, i32 0, i32 16, !dbg !10306
  store i16 %conv6, i16* %top_bar, align 2, !dbg !10307
  %9 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !10308
  %tv7 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %9, i32 0, i32 6, !dbg !10309
  %margins8 = getelementptr inbounds %struct.drm_tv_connector_state, %struct.drm_tv_connector_state* %tv7, i32 0, i32 1, !dbg !10310
  %bottom = getelementptr inbounds %struct.drm_connector_tv_margins, %struct.drm_connector_tv_margins* %margins8, i32 0, i32 0, !dbg !10311
  %10 = load i32, i32* %bottom, align 4, !dbg !10311
  %conv9 = trunc i32 %10 to i16, !dbg !10308
  %11 = load %struct.hdmi_avi_infoframe*, %struct.hdmi_avi_infoframe** %frame.addr, align 8, !dbg !10312
  %bottom_bar = getelementptr inbounds %struct.hdmi_avi_infoframe, %struct.hdmi_avi_infoframe* %11, i32 0, i32 17, !dbg !10313
  store i16 %conv9, i16* %bottom_bar, align 4, !dbg !10314
  ret void, !dbg !10315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_hdmi_vendor_infoframe_from_display_mode(%struct.hdmi_vendor_infoframe* %frame, %struct.drm_connector* %connector, %struct.drm_display_mode* %mode) #0 !dbg !10316 {
entry:
  %retval = alloca i32, align 4
  %frame.addr = alloca %struct.hdmi_vendor_infoframe*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %has_hdmi_infoframe = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.hdmi_vendor_infoframe* %frame, %struct.hdmi_vendor_infoframe** %frame.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hdmi_vendor_infoframe** %frame.addr, metadata !10329, metadata !DIExpression()), !dbg !10330
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10331, metadata !DIExpression()), !dbg !10332
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  call void @llvm.dbg.declare(metadata i8* %has_hdmi_infoframe, metadata !10335, metadata !DIExpression()), !dbg !10336
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10337
  %tobool = icmp ne %struct.drm_connector* %0, null, !dbg !10337
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10337

cond.true:                                        ; preds = %entry
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10338
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %1, i32 0, i32 18, !dbg !10339
  %has_hdmi_infoframe1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 12, !dbg !10340
  %2 = load i8, i8* %has_hdmi_infoframe1, align 2, !dbg !10340
  %tobool2 = trunc i8 %2 to i1, !dbg !10340
  %conv = zext i1 %tobool2 to i32, !dbg !10338
  br label %cond.end, !dbg !10337

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10337

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !10337
  %tobool3 = icmp ne i32 %cond, 0, !dbg !10337
  %frombool = zext i1 %tobool3 to i8, !dbg !10336
  store i8 %frombool, i8* %has_hdmi_infoframe, align 1, !dbg !10336
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10341, metadata !DIExpression()), !dbg !10342
  %3 = load %struct.hdmi_vendor_infoframe*, %struct.hdmi_vendor_infoframe** %frame.addr, align 8, !dbg !10343
  %tobool4 = icmp ne %struct.hdmi_vendor_infoframe* %3, null, !dbg !10343
  br i1 %tobool4, label %lor.lhs.false, label %if.then, !dbg !10345

lor.lhs.false:                                    ; preds = %cond.end
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10346
  %tobool5 = icmp ne %struct.drm_display_mode* %4, null, !dbg !10346
  br i1 %tobool5, label %if.end, label %if.then, !dbg !10347

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  store i32 -22, i32* %retval, align 4, !dbg !10348
  br label %return, !dbg !10348

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8, i8* %has_hdmi_infoframe, align 1, !dbg !10349
  %tobool6 = trunc i8 %5 to i1, !dbg !10349
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10351

if.then7:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10352
  br label %return, !dbg !10352

if.end8:                                          ; preds = %if.end
  %6 = load %struct.hdmi_vendor_infoframe*, %struct.hdmi_vendor_infoframe** %frame.addr, align 8, !dbg !10353
  %call = call i32 @hdmi_vendor_infoframe_init(%struct.hdmi_vendor_infoframe* %6) #8, !dbg !10354
  store i32 %call, i32* %err, align 4, !dbg !10355
  %7 = load i32, i32* %err, align 4, !dbg !10356
  %cmp = icmp slt i32 %7, 0, !dbg !10358
  br i1 %cmp, label %if.then10, label %if.end11, !dbg !10359

if.then10:                                        ; preds = %if.end8
  %8 = load i32, i32* %err, align 4, !dbg !10360
  store i32 %8, i32* %retval, align 4, !dbg !10361
  br label %return, !dbg !10361

if.end11:                                         ; preds = %if.end8
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10362
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10363
  %call12 = call zeroext i8 @drm_mode_hdmi_vic(%struct.drm_connector* %9, %struct.drm_display_mode* %10) #8, !dbg !10364
  %11 = load %struct.hdmi_vendor_infoframe*, %struct.hdmi_vendor_infoframe** %frame.addr, align 8, !dbg !10365
  %vic = getelementptr inbounds %struct.hdmi_vendor_infoframe, %struct.hdmi_vendor_infoframe* %11, i32 0, i32 4, !dbg !10366
  store i8 %call12, i8* %vic, align 4, !dbg !10367
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10368
  %call13 = call i32 @s3d_structure_from_display_mode(%struct.drm_display_mode* %12) #8, !dbg !10369
  %13 = load %struct.hdmi_vendor_infoframe*, %struct.hdmi_vendor_infoframe** %frame.addr, align 8, !dbg !10370
  %s3d_struct = getelementptr inbounds %struct.hdmi_vendor_infoframe, %struct.hdmi_vendor_infoframe* %13, i32 0, i32 5, !dbg !10371
  store i32 %call13, i32* %s3d_struct, align 4, !dbg !10372
  store i32 0, i32* %retval, align 4, !dbg !10373
  br label %return, !dbg !10373

return:                                           ; preds = %if.end11, %if.then10, %if.then7, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10374
  ret i32 %14, !dbg !10374
}

; Function Attrs: noredzone
declare dso_local i32 @hdmi_vendor_infoframe_init(%struct.hdmi_vendor_infoframe*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @s3d_structure_from_display_mode(%struct.drm_display_mode* %mode) #0 !dbg !10375 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %layout = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !10378, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.declare(metadata i32* %layout, metadata !10380, metadata !DIExpression()), !dbg !10381
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !10382
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 11, !dbg !10383
  %1 = load i32, i32* %flags, align 8, !dbg !10383
  %and = and i32 %1, 507904, !dbg !10384
  store i32 %and, i32* %layout, align 4, !dbg !10381
  %2 = load i32, i32* %layout, align 4, !dbg !10385
  switch i32 %2, label %sw.default [
    i32 16384, label %sw.bb
    i32 32768, label %sw.bb1
    i32 49152, label %sw.bb2
    i32 65536, label %sw.bb3
    i32 81920, label %sw.bb4
    i32 98304, label %sw.bb5
    i32 114688, label %sw.bb6
    i32 131072, label %sw.bb7
  ], !dbg !10386

sw.bb:                                            ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10387
  br label %return, !dbg !10387

sw.bb1:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !10389
  br label %return, !dbg !10389

sw.bb2:                                           ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10390
  br label %return, !dbg !10390

sw.bb3:                                           ; preds = %entry
  store i32 3, i32* %retval, align 4, !dbg !10391
  br label %return, !dbg !10391

sw.bb4:                                           ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !10392
  br label %return, !dbg !10392

sw.bb5:                                           ; preds = %entry
  store i32 5, i32* %retval, align 4, !dbg !10393
  br label %return, !dbg !10393

sw.bb6:                                           ; preds = %entry
  store i32 6, i32* %retval, align 4, !dbg !10394
  br label %return, !dbg !10394

sw.bb7:                                           ; preds = %entry
  store i32 8, i32* %retval, align 4, !dbg !10395
  br label %return, !dbg !10395

sw.default:                                       ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10396
  br label %return, !dbg !10396

return:                                           ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  %3 = load i32, i32* %retval, align 4, !dbg !10397
  ret i32 %3, !dbg !10397
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_update_tile_info(%struct.drm_connector* %connector, %struct.edid* %edid) #0 !dbg !10398 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %displayid = alloca i8*, align 8
  %ext_index = alloca i32, align 4
  %length = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10399, metadata !DIExpression()), !dbg !10400
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !10401, metadata !DIExpression()), !dbg !10402
  call void @llvm.dbg.declare(metadata i8** %displayid, metadata !10403, metadata !DIExpression()), !dbg !10404
  store i8* null, i8** %displayid, align 8, !dbg !10404
  call void @llvm.dbg.declare(metadata i32* %ext_index, metadata !10405, metadata !DIExpression()), !dbg !10406
  store i32 0, i32* %ext_index, align 4, !dbg !10406
  call void @llvm.dbg.declare(metadata i32* %length, metadata !10407, metadata !DIExpression()), !dbg !10408
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !10409, metadata !DIExpression()), !dbg !10410
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10411
  %has_tile = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 48, !dbg !10412
  store i8 0, i8* %has_tile, align 8, !dbg !10413
  br label %for.cond, !dbg !10414

for.cond:                                         ; preds = %if.end, %entry
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10415
  %call = call i8* @drm_find_displayid_extension(%struct.edid* %1, i32* %length, i32* %idx, i32* %ext_index) #8, !dbg !10419
  store i8* %call, i8** %displayid, align 8, !dbg !10420
  %2 = load i8*, i8** %displayid, align 8, !dbg !10421
  %tobool = icmp ne i8* %2, null, !dbg !10421
  br i1 %tobool, label %if.end, label %if.then, !dbg !10423

if.then:                                          ; preds = %for.cond
  br label %for.end, !dbg !10424

if.end:                                           ; preds = %for.cond
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10425
  %4 = load i8*, i8** %displayid, align 8, !dbg !10426
  %5 = load i32, i32* %length, align 4, !dbg !10427
  %6 = load i32, i32* %idx, align 4, !dbg !10428
  call void @drm_displayid_parse_tiled(%struct.drm_connector* %3, i8* %4, i32 %5, i32 %6) #8, !dbg !10429
  br label %for.cond, !dbg !10430, !llvm.loop !10431

for.end:                                          ; preds = %if.then
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10434
  %has_tile1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %7, i32 0, i32 48, !dbg !10436
  %8 = load i8, i8* %has_tile1, align 8, !dbg !10436
  %tobool2 = trunc i8 %8 to i1, !dbg !10436
  br i1 %tobool2, label %if.end7, label %land.lhs.true, !dbg !10437

land.lhs.true:                                    ; preds = %for.end
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10438
  %tile_group = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %9, i32 0, i32 49, !dbg !10439
  %10 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tile_group, align 8, !dbg !10439
  %tobool3 = icmp ne %struct.drm_tile_group* %10, null, !dbg !10438
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !10440

if.then4:                                         ; preds = %land.lhs.true
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10441
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %11, i32 0, i32 0, !dbg !10443
  %12 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !10443
  %13 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10444
  %tile_group5 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %13, i32 0, i32 49, !dbg !10445
  %14 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tile_group5, align 8, !dbg !10445
  call void @drm_mode_put_tile_group(%struct.drm_device* %12, %struct.drm_tile_group* %14) #8, !dbg !10446
  %15 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10447
  %tile_group6 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %15, i32 0, i32 49, !dbg !10448
  store %struct.drm_tile_group* null, %struct.drm_tile_group** %tile_group6, align 8, !dbg !10449
  br label %if.end7, !dbg !10450

if.end7:                                          ; preds = %if.then4, %land.lhs.true, %for.end
  ret void, !dbg !10451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @drm_find_displayid_extension(%struct.edid* %edid, i32* %length, i32* %idx, i32* %ext_index) #0 !dbg !10452 {
entry:
  %retval = alloca i8*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %length.addr = alloca i32*, align 8
  %idx.addr = alloca i32*, align 8
  %ext_index.addr = alloca i32*, align 8
  %displayid = alloca i8*, align 8
  %base = alloca %struct.displayid_hdr*, align 8
  %ret = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !10455, metadata !DIExpression()), !dbg !10456
  store i32* %length, i32** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %length.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  store i32* %idx, i32** %idx.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %idx.addr, metadata !10459, metadata !DIExpression()), !dbg !10460
  store i32* %ext_index, i32** %ext_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ext_index.addr, metadata !10461, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.declare(metadata i8** %displayid, metadata !10463, metadata !DIExpression()), !dbg !10464
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10465
  %1 = load i32*, i32** %ext_index.addr, align 8, !dbg !10466
  %call = call i8* @drm_find_edid_extension(%struct.edid* %0, i32 112, i32* %1) #8, !dbg !10467
  store i8* %call, i8** %displayid, align 8, !dbg !10464
  call void @llvm.dbg.declare(metadata %struct.displayid_hdr** %base, metadata !10468, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10470, metadata !DIExpression()), !dbg !10471
  %2 = load i8*, i8** %displayid, align 8, !dbg !10472
  %tobool = icmp ne i8* %2, null, !dbg !10472
  br i1 %tobool, label %if.end, label %if.then, !dbg !10474

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !10475
  br label %return, !dbg !10475

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %length.addr, align 8, !dbg !10476
  store i32 127, i32* %3, align 4, !dbg !10477
  %4 = load i32*, i32** %idx.addr, align 8, !dbg !10478
  store i32 1, i32* %4, align 4, !dbg !10479
  %5 = load i8*, i8** %displayid, align 8, !dbg !10480
  %6 = load i32*, i32** %length.addr, align 8, !dbg !10481
  %7 = load i32, i32* %6, align 4, !dbg !10482
  %8 = load i32*, i32** %idx.addr, align 8, !dbg !10483
  %9 = load i32, i32* %8, align 4, !dbg !10484
  %call1 = call i32 @validate_displayid(i8* %5, i32 %7, i32 %9) #8, !dbg !10485
  store i32 %call1, i32* %ret, align 4, !dbg !10486
  %10 = load i32, i32* %ret, align 4, !dbg !10487
  %tobool2 = icmp ne i32 %10, 0, !dbg !10487
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10489

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !10490
  br label %return, !dbg !10490

if.end4:                                          ; preds = %if.end
  %11 = load i8*, i8** %displayid, align 8, !dbg !10491
  %12 = load i32*, i32** %idx.addr, align 8, !dbg !10492
  %13 = load i32, i32* %12, align 4, !dbg !10493
  %idxprom = sext i32 %13 to i64, !dbg !10491
  %arrayidx = getelementptr i8, i8* %11, i64 %idxprom, !dbg !10491
  %14 = bitcast i8* %arrayidx to %struct.displayid_hdr*, !dbg !10494
  store %struct.displayid_hdr* %14, %struct.displayid_hdr** %base, align 8, !dbg !10495
  %15 = load i32*, i32** %idx.addr, align 8, !dbg !10496
  %16 = load i32, i32* %15, align 4, !dbg !10497
  %conv = sext i32 %16 to i64, !dbg !10497
  %add = add i64 %conv, 4, !dbg !10498
  %17 = load %struct.displayid_hdr*, %struct.displayid_hdr** %base, align 8, !dbg !10499
  %bytes = getelementptr inbounds %struct.displayid_hdr, %struct.displayid_hdr* %17, i32 0, i32 1, !dbg !10500
  %18 = load i8, i8* %bytes, align 1, !dbg !10500
  %conv5 = zext i8 %18 to i64, !dbg !10499
  %add6 = add i64 %add, %conv5, !dbg !10501
  %conv7 = trunc i64 %add6 to i32, !dbg !10497
  %19 = load i32*, i32** %length.addr, align 8, !dbg !10502
  store i32 %conv7, i32* %19, align 4, !dbg !10503
  %20 = load i8*, i8** %displayid, align 8, !dbg !10504
  store i8* %20, i8** %retval, align 8, !dbg !10505
  br label %return, !dbg !10505

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !10506
  ret i8* %21, !dbg !10506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_displayid_parse_tiled(%struct.drm_connector* %connector, i8* %displayid, i32 %length, i32 %idx) #0 !dbg !10507 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %displayid.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %block = alloca %struct.displayid_block*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10510, metadata !DIExpression()), !dbg !10511
  store i8* %displayid, i8** %displayid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %displayid.addr, metadata !10512, metadata !DIExpression()), !dbg !10513
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !10514, metadata !DIExpression()), !dbg !10515
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  call void @llvm.dbg.declare(metadata %struct.displayid_block** %block, metadata !10518, metadata !DIExpression()), !dbg !10521
  %0 = load i32, i32* %idx.addr, align 4, !dbg !10522
  %conv = sext i32 %0 to i64, !dbg !10522
  %add = add i64 %conv, 4, !dbg !10522
  %conv1 = trunc i64 %add to i32, !dbg !10522
  store i32 %conv1, i32* %idx.addr, align 4, !dbg !10522
  %1 = load i8*, i8** %displayid.addr, align 8, !dbg !10523
  %2 = load i32, i32* %idx.addr, align 4, !dbg !10523
  %idxprom = sext i32 %2 to i64, !dbg !10523
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !10523
  %3 = bitcast i8* %arrayidx to %struct.displayid_block*, !dbg !10523
  store %struct.displayid_block* %3, %struct.displayid_block** %block, align 8, !dbg !10523
  br label %for.cond, !dbg !10523

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %idx.addr, align 4, !dbg !10525
  %conv2 = sext i32 %4 to i64, !dbg !10525
  %add3 = add i64 %conv2, 3, !dbg !10525
  %5 = load i32, i32* %length.addr, align 4, !dbg !10525
  %conv4 = sext i32 %5 to i64, !dbg !10525
  %cmp = icmp ule i64 %add3, %conv4, !dbg !10525
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !10525

land.lhs.true:                                    ; preds = %for.cond
  %6 = load i32, i32* %idx.addr, align 4, !dbg !10525
  %conv6 = sext i32 %6 to i64, !dbg !10525
  %add7 = add i64 %conv6, 3, !dbg !10525
  %7 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10525
  %num_bytes = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %7, i32 0, i32 2, !dbg !10525
  %8 = load i8, i8* %num_bytes, align 1, !dbg !10525
  %conv8 = zext i8 %8 to i64, !dbg !10525
  %add9 = add i64 %add7, %conv8, !dbg !10525
  %9 = load i32, i32* %length.addr, align 4, !dbg !10525
  %conv10 = sext i32 %9 to i64, !dbg !10525
  %cmp11 = icmp ule i64 %add9, %conv10, !dbg !10525
  br i1 %cmp11, label %land.rhs, label %land.end, !dbg !10525

land.rhs:                                         ; preds = %land.lhs.true
  %10 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10525
  %num_bytes13 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %10, i32 0, i32 2, !dbg !10525
  %11 = load i8, i8* %num_bytes13, align 1, !dbg !10525
  %conv14 = zext i8 %11 to i32, !dbg !10525
  %cmp15 = icmp sgt i32 %conv14, 0, !dbg !10525
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %for.cond
  %12 = phi i1 [ false, %land.lhs.true ], [ false, %for.cond ], [ %cmp15, %land.rhs ], !dbg !10527
  br i1 %12, label %for.body, label %for.end, !dbg !10523

for.body:                                         ; preds = %land.end
  %13 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10528
  %tag = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %13, i32 0, i32 0, !dbg !10528
  %14 = load i8, i8* %tag, align 1, !dbg !10528
  %conv17 = zext i8 %14 to i32, !dbg !10528
  %15 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10528
  %rev = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %15, i32 0, i32 1, !dbg !10528
  %16 = load i8, i8* %rev, align 1, !dbg !10528
  %conv18 = zext i8 %16 to i32, !dbg !10528
  %17 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10528
  %num_bytes19 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %17, i32 0, i32 2, !dbg !10528
  %18 = load i8, i8* %num_bytes19, align 1, !dbg !10528
  %conv20 = zext i8 %18 to i32, !dbg !10528
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i64 0, i64 0), i32 %conv17, i32 %conv18, i32 %conv20) #8, !dbg !10528
  %19 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10530
  %tag21 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %19, i32 0, i32 0, !dbg !10531
  %20 = load i8, i8* %tag21, align 1, !dbg !10531
  %conv22 = zext i8 %20 to i32, !dbg !10530
  switch i32 %conv22, label %sw.default [
    i32 18, label %sw.bb
  ], !dbg !10532

sw.bb:                                            ; preds = %for.body
  %21 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10533
  %22 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10535
  call void @drm_parse_tiled_block(%struct.drm_connector* %21, %struct.displayid_block* %22) #8, !dbg !10536
  br label %sw.epilog, !dbg !10537

sw.default:                                       ; preds = %for.body
  %23 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10538
  %tag23 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %23, i32 0, i32 0, !dbg !10538
  %24 = load i8, i8* %tag23, align 1, !dbg !10538
  %conv24 = zext i8 %24 to i32, !dbg !10538
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.54, i64 0, i64 0), i32 %conv24) #8, !dbg !10538
  br label %sw.epilog, !dbg !10539

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %for.inc, !dbg !10540

for.inc:                                          ; preds = %sw.epilog
  %25 = load %struct.displayid_block*, %struct.displayid_block** %block, align 8, !dbg !10525
  %num_bytes25 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %25, i32 0, i32 2, !dbg !10525
  %26 = load i8, i8* %num_bytes25, align 1, !dbg !10525
  %conv26 = zext i8 %26 to i64, !dbg !10525
  %add27 = add i64 3, %conv26, !dbg !10525
  %27 = load i32, i32* %idx.addr, align 4, !dbg !10525
  %conv28 = sext i32 %27 to i64, !dbg !10525
  %add29 = add i64 %conv28, %add27, !dbg !10525
  %conv30 = trunc i64 %add29 to i32, !dbg !10525
  store i32 %conv30, i32* %idx.addr, align 4, !dbg !10525
  %28 = load i8*, i8** %displayid.addr, align 8, !dbg !10525
  %29 = load i32, i32* %idx.addr, align 4, !dbg !10525
  %idxprom31 = sext i32 %29 to i64, !dbg !10525
  %arrayidx32 = getelementptr i8, i8* %28, i64 %idxprom31, !dbg !10525
  %30 = bitcast i8* %arrayidx32 to %struct.displayid_block*, !dbg !10525
  store %struct.displayid_block* %30, %struct.displayid_block** %block, align 8, !dbg !10525
  br label %for.cond, !dbg !10525, !llvm.loop !10541

for.end:                                          ; preds = %land.end
  ret void, !dbg !10543
}

; Function Attrs: noredzone
declare dso_local void @drm_mode_put_tile_group(%struct.drm_device*, %struct.drm_tile_group*) #2

; Function Attrs: noredzone
declare dso_local i8* @memchr_inv(i8*, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.edid* @drm_load_edid_firmware(%struct.drm_connector* %connector) #0 !dbg !10544 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10545, metadata !DIExpression()), !dbg !10546
  %call = call i8* @ERR_PTR(i64 -2) #8, !dbg !10547
  %0 = bitcast i8* %call to %struct.edid*, !dbg !10547
  ret %struct.edid* %0, !dbg !10548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !10549 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10553, metadata !DIExpression()), !dbg !10554
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10555
  %1 = ptrtoint i8* %0 to i64, !dbg !10555
  %2 = inttoptr i64 %1 to i8*, !dbg !10555
  %3 = ptrtoint i8* %2 to i64, !dbg !10555
  %cmp = icmp uge i64 %3, -4095, !dbg !10555
  %lnot = xor i1 %cmp, true, !dbg !10555
  %lnot1 = xor i1 %lnot, true, !dbg !10555
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10555
  %conv = sext i32 %lnot.ext to i64, !dbg !10555
  %tobool = icmp ne i64 %conv, 0, !dbg !10555
  ret i1 %tobool, !dbg !10556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !10557 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !10560, metadata !DIExpression()), !dbg !10561
  %0 = load i64, i64* %error.addr, align 8, !dbg !10562
  %1 = inttoptr i64 %0 to i8*, !dbg !10563
  ret i8* %1, !dbg !10564
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #6

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #7 !dbg !10565 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10569, metadata !DIExpression()), !dbg !10574
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10576, metadata !DIExpression()), !dbg !10577
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10578, metadata !DIExpression()), !dbg !10579
  %0 = load i64, i64* %size.addr, align 8, !dbg !10580
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !10582
  br i1 %1, label %if.then, label %if.end447, !dbg !10583

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !10584
  %tobool = icmp ne i64 %2, 0, !dbg !10584
  br i1 %tobool, label %if.end, label %if.then1, !dbg !10587

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !10588
  br label %return, !dbg !10588

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !10589
  %cmp = icmp ult i64 %3, 4096, !dbg !10591
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !10592

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10593
  br label %return, !dbg !10593

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub = sub i64 %4, 1, !dbg !10594
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !10594
  br i1 %5, label %cond.true, label %cond.false442, !dbg !10594

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub4 = sub i64 %6, 1, !dbg !10594
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !10594
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !10594

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub6 = sub i64 %8, 1, !dbg !10594
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !10594
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !10594

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !10594

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub9 = sub i64 %9, 1, !dbg !10594
  %and = and i64 %sub9, -9223372036854775808, !dbg !10594
  %tobool10 = icmp ne i64 %and, 0, !dbg !10594
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !10594

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !10594

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub13 = sub i64 %10, 1, !dbg !10594
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !10594
  %tobool15 = icmp ne i64 %and14, 0, !dbg !10594
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !10594

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !10594

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub18 = sub i64 %11, 1, !dbg !10594
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !10594
  %tobool20 = icmp ne i64 %and19, 0, !dbg !10594
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !10594

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !10594

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub23 = sub i64 %12, 1, !dbg !10594
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !10594
  %tobool25 = icmp ne i64 %and24, 0, !dbg !10594
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !10594

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !10594

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub28 = sub i64 %13, 1, !dbg !10594
  %and29 = and i64 %sub28, 576460752303423488, !dbg !10594
  %tobool30 = icmp ne i64 %and29, 0, !dbg !10594
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !10594

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !10594

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub33 = sub i64 %14, 1, !dbg !10594
  %and34 = and i64 %sub33, 288230376151711744, !dbg !10594
  %tobool35 = icmp ne i64 %and34, 0, !dbg !10594
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !10594

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !10594

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub38 = sub i64 %15, 1, !dbg !10594
  %and39 = and i64 %sub38, 144115188075855872, !dbg !10594
  %tobool40 = icmp ne i64 %and39, 0, !dbg !10594
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !10594

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !10594

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub43 = sub i64 %16, 1, !dbg !10594
  %and44 = and i64 %sub43, 72057594037927936, !dbg !10594
  %tobool45 = icmp ne i64 %and44, 0, !dbg !10594
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !10594

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !10594

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub48 = sub i64 %17, 1, !dbg !10594
  %and49 = and i64 %sub48, 36028797018963968, !dbg !10594
  %tobool50 = icmp ne i64 %and49, 0, !dbg !10594
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !10594

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !10594

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub53 = sub i64 %18, 1, !dbg !10594
  %and54 = and i64 %sub53, 18014398509481984, !dbg !10594
  %tobool55 = icmp ne i64 %and54, 0, !dbg !10594
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !10594

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !10594

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub58 = sub i64 %19, 1, !dbg !10594
  %and59 = and i64 %sub58, 9007199254740992, !dbg !10594
  %tobool60 = icmp ne i64 %and59, 0, !dbg !10594
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !10594

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !10594

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub63 = sub i64 %20, 1, !dbg !10594
  %and64 = and i64 %sub63, 4503599627370496, !dbg !10594
  %tobool65 = icmp ne i64 %and64, 0, !dbg !10594
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !10594

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !10594

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub68 = sub i64 %21, 1, !dbg !10594
  %and69 = and i64 %sub68, 2251799813685248, !dbg !10594
  %tobool70 = icmp ne i64 %and69, 0, !dbg !10594
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !10594

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !10594

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub73 = sub i64 %22, 1, !dbg !10594
  %and74 = and i64 %sub73, 1125899906842624, !dbg !10594
  %tobool75 = icmp ne i64 %and74, 0, !dbg !10594
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !10594

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !10594

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub78 = sub i64 %23, 1, !dbg !10594
  %and79 = and i64 %sub78, 562949953421312, !dbg !10594
  %tobool80 = icmp ne i64 %and79, 0, !dbg !10594
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !10594

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !10594

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub83 = sub i64 %24, 1, !dbg !10594
  %and84 = and i64 %sub83, 281474976710656, !dbg !10594
  %tobool85 = icmp ne i64 %and84, 0, !dbg !10594
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !10594

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !10594

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub88 = sub i64 %25, 1, !dbg !10594
  %and89 = and i64 %sub88, 140737488355328, !dbg !10594
  %tobool90 = icmp ne i64 %and89, 0, !dbg !10594
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !10594

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !10594

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub93 = sub i64 %26, 1, !dbg !10594
  %and94 = and i64 %sub93, 70368744177664, !dbg !10594
  %tobool95 = icmp ne i64 %and94, 0, !dbg !10594
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !10594

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !10594

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub98 = sub i64 %27, 1, !dbg !10594
  %and99 = and i64 %sub98, 35184372088832, !dbg !10594
  %tobool100 = icmp ne i64 %and99, 0, !dbg !10594
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !10594

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !10594

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub103 = sub i64 %28, 1, !dbg !10594
  %and104 = and i64 %sub103, 17592186044416, !dbg !10594
  %tobool105 = icmp ne i64 %and104, 0, !dbg !10594
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !10594

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !10594

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub108 = sub i64 %29, 1, !dbg !10594
  %and109 = and i64 %sub108, 8796093022208, !dbg !10594
  %tobool110 = icmp ne i64 %and109, 0, !dbg !10594
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !10594

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !10594

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub113 = sub i64 %30, 1, !dbg !10594
  %and114 = and i64 %sub113, 4398046511104, !dbg !10594
  %tobool115 = icmp ne i64 %and114, 0, !dbg !10594
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !10594

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !10594

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub118 = sub i64 %31, 1, !dbg !10594
  %and119 = and i64 %sub118, 2199023255552, !dbg !10594
  %tobool120 = icmp ne i64 %and119, 0, !dbg !10594
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !10594

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !10594

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub123 = sub i64 %32, 1, !dbg !10594
  %and124 = and i64 %sub123, 1099511627776, !dbg !10594
  %tobool125 = icmp ne i64 %and124, 0, !dbg !10594
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !10594

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !10594

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub128 = sub i64 %33, 1, !dbg !10594
  %and129 = and i64 %sub128, 549755813888, !dbg !10594
  %tobool130 = icmp ne i64 %and129, 0, !dbg !10594
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !10594

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !10594

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub133 = sub i64 %34, 1, !dbg !10594
  %and134 = and i64 %sub133, 274877906944, !dbg !10594
  %tobool135 = icmp ne i64 %and134, 0, !dbg !10594
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !10594

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !10594

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub138 = sub i64 %35, 1, !dbg !10594
  %and139 = and i64 %sub138, 137438953472, !dbg !10594
  %tobool140 = icmp ne i64 %and139, 0, !dbg !10594
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !10594

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !10594

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub143 = sub i64 %36, 1, !dbg !10594
  %and144 = and i64 %sub143, 68719476736, !dbg !10594
  %tobool145 = icmp ne i64 %and144, 0, !dbg !10594
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !10594

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !10594

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub148 = sub i64 %37, 1, !dbg !10594
  %and149 = and i64 %sub148, 34359738368, !dbg !10594
  %tobool150 = icmp ne i64 %and149, 0, !dbg !10594
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !10594

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !10594

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub153 = sub i64 %38, 1, !dbg !10594
  %and154 = and i64 %sub153, 17179869184, !dbg !10594
  %tobool155 = icmp ne i64 %and154, 0, !dbg !10594
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !10594

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !10594

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub158 = sub i64 %39, 1, !dbg !10594
  %and159 = and i64 %sub158, 8589934592, !dbg !10594
  %tobool160 = icmp ne i64 %and159, 0, !dbg !10594
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !10594

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !10594

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub163 = sub i64 %40, 1, !dbg !10594
  %and164 = and i64 %sub163, 4294967296, !dbg !10594
  %tobool165 = icmp ne i64 %and164, 0, !dbg !10594
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !10594

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !10594

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub168 = sub i64 %41, 1, !dbg !10594
  %and169 = and i64 %sub168, 2147483648, !dbg !10594
  %tobool170 = icmp ne i64 %and169, 0, !dbg !10594
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !10594

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !10594

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub173 = sub i64 %42, 1, !dbg !10594
  %and174 = and i64 %sub173, 1073741824, !dbg !10594
  %tobool175 = icmp ne i64 %and174, 0, !dbg !10594
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !10594

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !10594

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub178 = sub i64 %43, 1, !dbg !10594
  %and179 = and i64 %sub178, 536870912, !dbg !10594
  %tobool180 = icmp ne i64 %and179, 0, !dbg !10594
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !10594

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !10594

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub183 = sub i64 %44, 1, !dbg !10594
  %and184 = and i64 %sub183, 268435456, !dbg !10594
  %tobool185 = icmp ne i64 %and184, 0, !dbg !10594
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !10594

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !10594

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub188 = sub i64 %45, 1, !dbg !10594
  %and189 = and i64 %sub188, 134217728, !dbg !10594
  %tobool190 = icmp ne i64 %and189, 0, !dbg !10594
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !10594

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !10594

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub193 = sub i64 %46, 1, !dbg !10594
  %and194 = and i64 %sub193, 67108864, !dbg !10594
  %tobool195 = icmp ne i64 %and194, 0, !dbg !10594
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !10594

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !10594

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub198 = sub i64 %47, 1, !dbg !10594
  %and199 = and i64 %sub198, 33554432, !dbg !10594
  %tobool200 = icmp ne i64 %and199, 0, !dbg !10594
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !10594

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !10594

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub203 = sub i64 %48, 1, !dbg !10594
  %and204 = and i64 %sub203, 16777216, !dbg !10594
  %tobool205 = icmp ne i64 %and204, 0, !dbg !10594
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !10594

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !10594

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub208 = sub i64 %49, 1, !dbg !10594
  %and209 = and i64 %sub208, 8388608, !dbg !10594
  %tobool210 = icmp ne i64 %and209, 0, !dbg !10594
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !10594

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !10594

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub213 = sub i64 %50, 1, !dbg !10594
  %and214 = and i64 %sub213, 4194304, !dbg !10594
  %tobool215 = icmp ne i64 %and214, 0, !dbg !10594
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !10594

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !10594

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub218 = sub i64 %51, 1, !dbg !10594
  %and219 = and i64 %sub218, 2097152, !dbg !10594
  %tobool220 = icmp ne i64 %and219, 0, !dbg !10594
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !10594

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !10594

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub223 = sub i64 %52, 1, !dbg !10594
  %and224 = and i64 %sub223, 1048576, !dbg !10594
  %tobool225 = icmp ne i64 %and224, 0, !dbg !10594
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !10594

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !10594

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub228 = sub i64 %53, 1, !dbg !10594
  %and229 = and i64 %sub228, 524288, !dbg !10594
  %tobool230 = icmp ne i64 %and229, 0, !dbg !10594
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !10594

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !10594

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub233 = sub i64 %54, 1, !dbg !10594
  %and234 = and i64 %sub233, 262144, !dbg !10594
  %tobool235 = icmp ne i64 %and234, 0, !dbg !10594
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !10594

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !10594

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub238 = sub i64 %55, 1, !dbg !10594
  %and239 = and i64 %sub238, 131072, !dbg !10594
  %tobool240 = icmp ne i64 %and239, 0, !dbg !10594
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !10594

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !10594

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub243 = sub i64 %56, 1, !dbg !10594
  %and244 = and i64 %sub243, 65536, !dbg !10594
  %tobool245 = icmp ne i64 %and244, 0, !dbg !10594
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !10594

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !10594

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub248 = sub i64 %57, 1, !dbg !10594
  %and249 = and i64 %sub248, 32768, !dbg !10594
  %tobool250 = icmp ne i64 %and249, 0, !dbg !10594
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !10594

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !10594

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub253 = sub i64 %58, 1, !dbg !10594
  %and254 = and i64 %sub253, 16384, !dbg !10594
  %tobool255 = icmp ne i64 %and254, 0, !dbg !10594
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !10594

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !10594

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub258 = sub i64 %59, 1, !dbg !10594
  %and259 = and i64 %sub258, 8192, !dbg !10594
  %tobool260 = icmp ne i64 %and259, 0, !dbg !10594
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !10594

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !10594

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub263 = sub i64 %60, 1, !dbg !10594
  %and264 = and i64 %sub263, 4096, !dbg !10594
  %tobool265 = icmp ne i64 %and264, 0, !dbg !10594
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !10594

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !10594

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub268 = sub i64 %61, 1, !dbg !10594
  %and269 = and i64 %sub268, 2048, !dbg !10594
  %tobool270 = icmp ne i64 %and269, 0, !dbg !10594
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !10594

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !10594

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub273 = sub i64 %62, 1, !dbg !10594
  %and274 = and i64 %sub273, 1024, !dbg !10594
  %tobool275 = icmp ne i64 %and274, 0, !dbg !10594
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !10594

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !10594

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub278 = sub i64 %63, 1, !dbg !10594
  %and279 = and i64 %sub278, 512, !dbg !10594
  %tobool280 = icmp ne i64 %and279, 0, !dbg !10594
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !10594

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !10594

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub283 = sub i64 %64, 1, !dbg !10594
  %and284 = and i64 %sub283, 256, !dbg !10594
  %tobool285 = icmp ne i64 %and284, 0, !dbg !10594
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !10594

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !10594

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub288 = sub i64 %65, 1, !dbg !10594
  %and289 = and i64 %sub288, 128, !dbg !10594
  %tobool290 = icmp ne i64 %and289, 0, !dbg !10594
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !10594

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !10594

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub293 = sub i64 %66, 1, !dbg !10594
  %and294 = and i64 %sub293, 64, !dbg !10594
  %tobool295 = icmp ne i64 %and294, 0, !dbg !10594
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !10594

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !10594

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub298 = sub i64 %67, 1, !dbg !10594
  %and299 = and i64 %sub298, 32, !dbg !10594
  %tobool300 = icmp ne i64 %and299, 0, !dbg !10594
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !10594

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !10594

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub303 = sub i64 %68, 1, !dbg !10594
  %and304 = and i64 %sub303, 16, !dbg !10594
  %tobool305 = icmp ne i64 %and304, 0, !dbg !10594
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !10594

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !10594

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub308 = sub i64 %69, 1, !dbg !10594
  %and309 = and i64 %sub308, 8, !dbg !10594
  %tobool310 = icmp ne i64 %and309, 0, !dbg !10594
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !10594

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !10594

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub313 = sub i64 %70, 1, !dbg !10594
  %and314 = and i64 %sub313, 4, !dbg !10594
  %tobool315 = icmp ne i64 %and314, 0, !dbg !10594
  %71 = zext i1 %tobool315 to i64, !dbg !10594
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !10594
  br label %cond.end, !dbg !10594

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !10594
  br label %cond.end317, !dbg !10594

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !10594
  br label %cond.end319, !dbg !10594

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !10594
  br label %cond.end321, !dbg !10594

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !10594
  br label %cond.end323, !dbg !10594

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !10594
  br label %cond.end325, !dbg !10594

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !10594
  br label %cond.end327, !dbg !10594

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !10594
  br label %cond.end329, !dbg !10594

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !10594
  br label %cond.end331, !dbg !10594

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !10594
  br label %cond.end333, !dbg !10594

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !10594
  br label %cond.end335, !dbg !10594

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !10594
  br label %cond.end337, !dbg !10594

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !10594
  br label %cond.end339, !dbg !10594

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !10594
  br label %cond.end341, !dbg !10594

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !10594
  br label %cond.end343, !dbg !10594

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !10594
  br label %cond.end345, !dbg !10594

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !10594
  br label %cond.end347, !dbg !10594

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !10594
  br label %cond.end349, !dbg !10594

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !10594
  br label %cond.end351, !dbg !10594

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !10594
  br label %cond.end353, !dbg !10594

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !10594
  br label %cond.end355, !dbg !10594

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !10594
  br label %cond.end357, !dbg !10594

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !10594
  br label %cond.end359, !dbg !10594

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !10594
  br label %cond.end361, !dbg !10594

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !10594
  br label %cond.end363, !dbg !10594

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !10594
  br label %cond.end365, !dbg !10594

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !10594
  br label %cond.end367, !dbg !10594

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !10594
  br label %cond.end369, !dbg !10594

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !10594
  br label %cond.end371, !dbg !10594

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !10594
  br label %cond.end373, !dbg !10594

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !10594
  br label %cond.end375, !dbg !10594

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !10594
  br label %cond.end377, !dbg !10594

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !10594
  br label %cond.end379, !dbg !10594

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !10594
  br label %cond.end381, !dbg !10594

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !10594
  br label %cond.end383, !dbg !10594

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !10594
  br label %cond.end385, !dbg !10594

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !10594
  br label %cond.end387, !dbg !10594

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !10594
  br label %cond.end389, !dbg !10594

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !10594
  br label %cond.end391, !dbg !10594

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !10594
  br label %cond.end393, !dbg !10594

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !10594
  br label %cond.end395, !dbg !10594

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !10594
  br label %cond.end397, !dbg !10594

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !10594
  br label %cond.end399, !dbg !10594

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !10594
  br label %cond.end401, !dbg !10594

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !10594
  br label %cond.end403, !dbg !10594

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !10594
  br label %cond.end405, !dbg !10594

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !10594
  br label %cond.end407, !dbg !10594

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !10594
  br label %cond.end409, !dbg !10594

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !10594
  br label %cond.end411, !dbg !10594

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !10594
  br label %cond.end413, !dbg !10594

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !10594
  br label %cond.end415, !dbg !10594

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !10594
  br label %cond.end417, !dbg !10594

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !10594
  br label %cond.end419, !dbg !10594

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !10594
  br label %cond.end421, !dbg !10594

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !10594
  br label %cond.end423, !dbg !10594

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !10594
  br label %cond.end425, !dbg !10594

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !10594
  br label %cond.end427, !dbg !10594

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !10594
  br label %cond.end429, !dbg !10594

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !10594
  br label %cond.end431, !dbg !10594

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !10594
  br label %cond.end433, !dbg !10594

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !10594
  br label %cond.end435, !dbg !10594

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !10594
  br label %cond.end437, !dbg !10594

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !10594
  br label %cond.end440, !dbg !10594

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !10594

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !10594
  br label %cond.end444, !dbg !10594

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !10594
  %sub443 = sub i64 %72, 1, !dbg !10594
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !10594
  br label %cond.end444, !dbg !10594

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !10594
  %sub446 = sub i32 %cond445, 12, !dbg !10595
  %add = add i32 %sub446, 1, !dbg !10596
  store i32 %add, i32* %retval, align 4, !dbg !10597
  br label %return, !dbg !10597

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !10598
  %dec = add i64 %73, -1, !dbg !10598
  store i64 %dec, i64* %size.addr, align 8, !dbg !10598
  %74 = load i64, i64* %size.addr, align 8, !dbg !10599
  %shr = lshr i64 %74, 12, !dbg !10599
  store i64 %shr, i64* %size.addr, align 8, !dbg !10599
  %75 = load i64, i64* %size.addr, align 8, !dbg !10600
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10577
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !10601
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !10602
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #13, !dbg !10601, !srcloc !10603
  store i32 %78, i32* %bitpos.i, align 4, !dbg !10601
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !10604
  %add.i = add i32 %79, 1, !dbg !10605
  store i32 %add.i, i32* %retval, align 4, !dbg !10606
  br label %return, !dbg !10606

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !10607
  ret i32 %80, !dbg !10607
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #7 !dbg !10608 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !10569, metadata !DIExpression()), !dbg !10612
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !10576, metadata !DIExpression()), !dbg !10614
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !10615, metadata !DIExpression()), !dbg !10616
  %0 = load i64, i64* %n.addr, align 8, !dbg !10617
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !10614
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !10618
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !10619
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #13, !dbg !10618, !srcloc !10603
  store i32 %3, i32* %bitpos.i, align 4, !dbg !10618
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !10620
  %add.i = add i32 %4, 1, !dbg !10621
  %sub = sub i32 %add.i, 1, !dbg !10622
  ret i32 %sub, !dbg !10623
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !10624 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !10628, metadata !DIExpression()), !dbg !10629
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !10630, metadata !DIExpression()), !dbg !10631
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  %0 = load i8*, i8** %object.addr, align 8, !dbg !10636
  ret i8* %0, !dbg !10637
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_debug_enabled(i32 %category) #0 !dbg !10638 {
entry:
  %category.addr = alloca i32, align 4
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !10641, metadata !DIExpression()), !dbg !10642
  %0 = load i32, i32* @__drm_debug, align 4, !dbg !10643
  %1 = load i32, i32* %category.addr, align 4, !dbg !10643
  %and = and i32 %0, %1, !dbg !10643
  %tobool = icmp ne i32 %and, 0, !dbg !10643
  %lnot = xor i1 %tobool, true, !dbg !10643
  %lnot1 = xor i1 %lnot, true, !dbg !10643
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10643
  %conv = sext i32 %lnot.ext to i64, !dbg !10643
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10643
  ret i1 %tobool2, !dbg !10644
}

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !10645 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !10649, metadata !DIExpression()), !dbg !10650
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !10651
  %tobool = trunc i8 %0 to i1, !dbg !10651
  %lnot = xor i1 %tobool, true, !dbg !10651
  %lnot1 = xor i1 %lnot, true, !dbg !10651
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10651
  %conv = sext i32 %lnot.ext to i64, !dbg !10651
  %tobool2 = icmp ne i64 %conv, 0, !dbg !10651
  ret i1 %tobool2, !dbg !10652
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local i32 @i2c_transfer(%struct.i2c_adapter*, %struct.i2c_msg*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_for_each_detailed_block(i8* %raw_edid, void (%struct.detailed_timing*, i8*)* %cb, i8* %closure) #0 !dbg !10653 {
entry:
  %raw_edid.addr = alloca i8*, align 8
  %cb.addr = alloca void (%struct.detailed_timing*, i8*)*, align 8
  %closure.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %edid = alloca %struct.edid*, align 8
  %ext = alloca i8*, align 8
  store i8* %raw_edid, i8** %raw_edid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %raw_edid.addr, metadata !10660, metadata !DIExpression()), !dbg !10661
  store void (%struct.detailed_timing*, i8*)* %cb, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.detailed_timing*, i8*)** %cb.addr, metadata !10662, metadata !DIExpression()), !dbg !10663
  store i8* %closure, i8** %closure.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !10664, metadata !DIExpression()), !dbg !10665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10666, metadata !DIExpression()), !dbg !10667
  call void @llvm.dbg.declare(metadata %struct.edid** %edid, metadata !10668, metadata !DIExpression()), !dbg !10669
  %0 = load i8*, i8** %raw_edid.addr, align 8, !dbg !10670
  %1 = bitcast i8* %0 to %struct.edid*, !dbg !10671
  store %struct.edid* %1, %struct.edid** %edid, align 8, !dbg !10669
  %2 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !10672
  %cmp = icmp eq %struct.edid* %2, null, !dbg !10674
  br i1 %cmp, label %if.then, label %if.end, !dbg !10675

if.then:                                          ; preds = %entry
  br label %for.end11, !dbg !10676

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10677
  br label %for.cond, !dbg !10679

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load i32, i32* %i, align 4, !dbg !10680
  %cmp1 = icmp slt i32 %3, 4, !dbg !10682
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10683

for.body:                                         ; preds = %for.cond
  %4 = load void (%struct.detailed_timing*, i8*)*, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8, !dbg !10684
  %5 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !10685
  %detailed_timings = getelementptr inbounds %struct.edid, %struct.edid* %5, i32 0, i32 25, !dbg !10686
  %6 = load i32, i32* %i, align 4, !dbg !10687
  %idxprom = sext i32 %6 to i64, !dbg !10685
  %arrayidx = getelementptr [4 x %struct.detailed_timing], [4 x %struct.detailed_timing]* %detailed_timings, i64 0, i64 %idxprom, !dbg !10685
  %7 = load i8*, i8** %closure.addr, align 8, !dbg !10688
  call void %4(%struct.detailed_timing* %arrayidx, i8* %7) #8, !dbg !10684
  br label %for.inc, !dbg !10684

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !10689
  %inc = add i32 %8, 1, !dbg !10689
  store i32 %inc, i32* %i, align 4, !dbg !10689
  br label %for.cond, !dbg !10690, !llvm.loop !10691

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %i, align 4, !dbg !10693
  br label %for.cond2, !dbg !10695

for.cond2:                                        ; preds = %for.inc9, %for.end
  %9 = load i32, i32* %i, align 4, !dbg !10696
  %10 = load i8*, i8** %raw_edid.addr, align 8, !dbg !10698
  %arrayidx3 = getelementptr i8, i8* %10, i64 126, !dbg !10698
  %11 = load i8, i8* %arrayidx3, align 1, !dbg !10698
  %conv = zext i8 %11 to i32, !dbg !10698
  %cmp4 = icmp sle i32 %9, %conv, !dbg !10699
  br i1 %cmp4, label %for.body6, label %for.end11, !dbg !10700

for.body6:                                        ; preds = %for.cond2
  call void @llvm.dbg.declare(metadata i8** %ext, metadata !10701, metadata !DIExpression()), !dbg !10703
  %12 = load i8*, i8** %raw_edid.addr, align 8, !dbg !10704
  %13 = load i32, i32* %i, align 4, !dbg !10705
  %mul = mul i32 %13, 128, !dbg !10706
  %idx.ext = sext i32 %mul to i64, !dbg !10707
  %add.ptr = getelementptr i8, i8* %12, i64 %idx.ext, !dbg !10707
  store i8* %add.ptr, i8** %ext, align 8, !dbg !10703
  %14 = load i8*, i8** %ext, align 8, !dbg !10708
  %15 = load i8, i8* %14, align 1, !dbg !10709
  %conv7 = zext i8 %15 to i32, !dbg !10709
  switch i32 %conv7, label %sw.default [
    i32 2, label %sw.bb
    i32 16, label %sw.bb8
  ], !dbg !10710

sw.bb:                                            ; preds = %for.body6
  %16 = load i8*, i8** %ext, align 8, !dbg !10711
  %17 = load void (%struct.detailed_timing*, i8*)*, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8, !dbg !10713
  %18 = load i8*, i8** %closure.addr, align 8, !dbg !10714
  call void @cea_for_each_detailed_block(i8* %16, void (%struct.detailed_timing*, i8*)* %17, i8* %18) #8, !dbg !10715
  br label %sw.epilog, !dbg !10716

sw.bb8:                                           ; preds = %for.body6
  %19 = load i8*, i8** %ext, align 8, !dbg !10717
  %20 = load void (%struct.detailed_timing*, i8*)*, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8, !dbg !10718
  %21 = load i8*, i8** %closure.addr, align 8, !dbg !10719
  call void @vtb_for_each_detailed_block(i8* %19, void (%struct.detailed_timing*, i8*)* %20, i8* %21) #8, !dbg !10720
  br label %sw.epilog, !dbg !10721

sw.default:                                       ; preds = %for.body6
  br label %sw.epilog, !dbg !10722

sw.epilog:                                        ; preds = %sw.default, %sw.bb8, %sw.bb
  br label %for.inc9, !dbg !10723

for.inc9:                                         ; preds = %sw.epilog
  %22 = load i32, i32* %i, align 4, !dbg !10724
  %inc10 = add i32 %22, 1, !dbg !10724
  store i32 %inc10, i32* %i, align 4, !dbg !10724
  br label %for.cond2, !dbg !10725, !llvm.loop !10726

for.end11:                                        ; preds = %if.then, %for.cond2
  ret void, !dbg !10728
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @monitor_name(%struct.detailed_timing* %t, i8* %data) #0 !dbg !10729 {
entry:
  %t.addr = alloca %struct.detailed_timing*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.detailed_timing* %t, %struct.detailed_timing** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %t.addr, metadata !10730, metadata !DIExpression()), !dbg !10731
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10732, metadata !DIExpression()), !dbg !10733
  %0 = load %struct.detailed_timing*, %struct.detailed_timing** %t.addr, align 8, !dbg !10734
  %1 = bitcast %struct.detailed_timing* %0 to i8*, !dbg !10736
  %call = call zeroext i1 @is_display_descriptor(i8* %1, i8 zeroext -4) #8, !dbg !10737
  br i1 %call, label %if.end, label %if.then, !dbg !10738

if.then:                                          ; preds = %entry
  br label %return, !dbg !10739

if.end:                                           ; preds = %entry
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %t.addr, align 8, !dbg !10740
  %data1 = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %2, i32 0, i32 1, !dbg !10741
  %other_data = bitcast %union.anon.0* %data1 to %struct.detailed_non_pixel*, !dbg !10742
  %data2 = getelementptr inbounds %struct.detailed_non_pixel, %struct.detailed_non_pixel* %other_data, i32 0, i32 3, !dbg !10743
  %str = bitcast %union.anon.1* %data2 to %struct.detailed_data_string*, !dbg !10744
  %str3 = getelementptr inbounds %struct.detailed_data_string, %struct.detailed_data_string* %str, i32 0, i32 0, !dbg !10745
  %arraydecay = getelementptr inbounds [13 x i8], [13 x i8]* %str3, i64 0, i64 0, !dbg !10740
  %3 = load i8*, i8** %data.addr, align 8, !dbg !10746
  %4 = bitcast i8* %3 to i8**, !dbg !10747
  store i8* %arraydecay, i8** %4, align 8, !dbg !10748
  br label %return, !dbg !10749

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @cea_for_each_detailed_block(i8* %ext, void (%struct.detailed_timing*, i8*)* %cb, i8* %closure) #0 !dbg !10750 {
entry:
  %ext.addr = alloca i8*, align 8
  %cb.addr = alloca void (%struct.detailed_timing*, i8*)*, align 8
  %closure.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %d = alloca i8, align 1
  %det_base = alloca i8*, align 8
  store i8* %ext, i8** %ext.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ext.addr, metadata !10751, metadata !DIExpression()), !dbg !10752
  store void (%struct.detailed_timing*, i8*)* %cb, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.detailed_timing*, i8*)** %cb.addr, metadata !10753, metadata !DIExpression()), !dbg !10754
  store i8* %closure, i8** %closure.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !10755, metadata !DIExpression()), !dbg !10756
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10757, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10759, metadata !DIExpression()), !dbg !10760
  call void @llvm.dbg.declare(metadata i8* %d, metadata !10761, metadata !DIExpression()), !dbg !10762
  %0 = load i8*, i8** %ext.addr, align 8, !dbg !10763
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !10763
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10763
  store i8 %1, i8* %d, align 1, !dbg !10762
  call void @llvm.dbg.declare(metadata i8** %det_base, metadata !10764, metadata !DIExpression()), !dbg !10765
  %2 = load i8*, i8** %ext.addr, align 8, !dbg !10766
  %3 = load i8, i8* %d, align 1, !dbg !10767
  %conv = zext i8 %3 to i32, !dbg !10767
  %idx.ext = sext i32 %conv to i64, !dbg !10768
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext, !dbg !10768
  store i8* %add.ptr, i8** %det_base, align 8, !dbg !10765
  %4 = load i8, i8* %d, align 1, !dbg !10769
  %conv1 = zext i8 %4 to i32, !dbg !10769
  %cmp = icmp slt i32 %conv1, 4, !dbg !10771
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10772

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8, i8* %d, align 1, !dbg !10773
  %conv3 = zext i8 %5 to i32, !dbg !10773
  %cmp4 = icmp sgt i32 %conv3, 127, !dbg !10774
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10775

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %for.end, !dbg !10776

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8, i8* %d, align 1, !dbg !10777
  %conv6 = zext i8 %6 to i32, !dbg !10777
  %sub = sub i32 127, %conv6, !dbg !10778
  %div = sdiv i32 %sub, 18, !dbg !10779
  store i32 %div, i32* %n, align 4, !dbg !10780
  store i32 0, i32* %i, align 4, !dbg !10781
  br label %for.cond, !dbg !10783

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load i32, i32* %i, align 4, !dbg !10784
  %8 = load i32, i32* %n, align 4, !dbg !10786
  %cmp7 = icmp slt i32 %7, %8, !dbg !10787
  br i1 %cmp7, label %for.body, label %for.end, !dbg !10788

for.body:                                         ; preds = %for.cond
  %9 = load void (%struct.detailed_timing*, i8*)*, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8, !dbg !10789
  %10 = load i8*, i8** %det_base, align 8, !dbg !10790
  %11 = load i32, i32* %i, align 4, !dbg !10791
  %mul = mul i32 18, %11, !dbg !10792
  %idx.ext9 = sext i32 %mul to i64, !dbg !10793
  %add.ptr10 = getelementptr i8, i8* %10, i64 %idx.ext9, !dbg !10793
  %12 = bitcast i8* %add.ptr10 to %struct.detailed_timing*, !dbg !10794
  %13 = load i8*, i8** %closure.addr, align 8, !dbg !10795
  call void %9(%struct.detailed_timing* %12, i8* %13) #8, !dbg !10789
  br label %for.inc, !dbg !10789

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !10796
  %inc = add i32 %14, 1, !dbg !10796
  store i32 %inc, i32* %i, align 4, !dbg !10796
  br label %for.cond, !dbg !10797, !llvm.loop !10798

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10800
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @vtb_for_each_detailed_block(i8* %ext, void (%struct.detailed_timing*, i8*)* %cb, i8* %closure) #0 !dbg !10801 {
entry:
  %ext.addr = alloca i8*, align 8
  %cb.addr = alloca void (%struct.detailed_timing*, i8*)*, align 8
  %closure.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %n = alloca i32, align 4
  %__UNIQUE_ID___x259 = alloca i32, align 4
  %__UNIQUE_ID___y260 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %det_base = alloca i8*, align 8
  store i8* %ext, i8** %ext.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ext.addr, metadata !10802, metadata !DIExpression()), !dbg !10803
  store void (%struct.detailed_timing*, i8*)* %cb, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.detailed_timing*, i8*)** %cb.addr, metadata !10804, metadata !DIExpression()), !dbg !10805
  store i8* %closure, i8** %closure.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %closure.addr, metadata !10806, metadata !DIExpression()), !dbg !10807
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10808, metadata !DIExpression()), !dbg !10809
  call void @llvm.dbg.declare(metadata i32* %n, metadata !10810, metadata !DIExpression()), !dbg !10811
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x259, metadata !10812, metadata !DIExpression()), !dbg !10814
  %0 = load i8*, i8** %ext.addr, align 8, !dbg !10814
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !10814
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10814
  %conv = zext i8 %1 to i32, !dbg !10814
  store i32 %conv, i32* %__UNIQUE_ID___x259, align 4, !dbg !10814
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y260, metadata !10815, metadata !DIExpression()), !dbg !10814
  store i32 6, i32* %__UNIQUE_ID___y260, align 4, !dbg !10814
  %2 = load i32, i32* %__UNIQUE_ID___x259, align 4, !dbg !10814
  %3 = load i32, i32* %__UNIQUE_ID___y260, align 4, !dbg !10814
  %cmp = icmp slt i32 %2, %3, !dbg !10814
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10814

cond.true:                                        ; preds = %entry
  %4 = load i32, i32* %__UNIQUE_ID___x259, align 4, !dbg !10814
  br label %cond.end, !dbg !10814

cond.false:                                       ; preds = %entry
  %5 = load i32, i32* %__UNIQUE_ID___y260, align 4, !dbg !10814
  br label %cond.end, !dbg !10814

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %5, %cond.false ], !dbg !10814
  store i32 %cond, i32* %tmp, align 4, !dbg !10814
  %6 = load i32, i32* %tmp, align 4, !dbg !10814
  store i32 %6, i32* %n, align 4, !dbg !10811
  call void @llvm.dbg.declare(metadata i8** %det_base, metadata !10816, metadata !DIExpression()), !dbg !10817
  %7 = load i8*, i8** %ext.addr, align 8, !dbg !10818
  %add.ptr = getelementptr i8, i8* %7, i64 5, !dbg !10819
  store i8* %add.ptr, i8** %det_base, align 8, !dbg !10817
  %8 = load i8*, i8** %ext.addr, align 8, !dbg !10820
  %arrayidx2 = getelementptr i8, i8* %8, i64 1, !dbg !10820
  %9 = load i8, i8* %arrayidx2, align 1, !dbg !10820
  %conv3 = zext i8 %9 to i32, !dbg !10820
  %cmp4 = icmp ne i32 %conv3, 1, !dbg !10822
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10823

if.then:                                          ; preds = %cond.end
  br label %for.end, !dbg !10824

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !10825
  br label %for.cond, !dbg !10827

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !10828
  %11 = load i32, i32* %n, align 4, !dbg !10830
  %cmp6 = icmp ult i32 %10, %11, !dbg !10831
  br i1 %cmp6, label %for.body, label %for.end, !dbg !10832

for.body:                                         ; preds = %for.cond
  %12 = load void (%struct.detailed_timing*, i8*)*, void (%struct.detailed_timing*, i8*)** %cb.addr, align 8, !dbg !10833
  %13 = load i8*, i8** %det_base, align 8, !dbg !10834
  %14 = load i32, i32* %i, align 4, !dbg !10835
  %mul = mul i32 18, %14, !dbg !10836
  %idx.ext = zext i32 %mul to i64, !dbg !10837
  %add.ptr8 = getelementptr i8, i8* %13, i64 %idx.ext, !dbg !10837
  %15 = bitcast i8* %add.ptr8 to %struct.detailed_timing*, !dbg !10838
  %16 = load i8*, i8** %closure.addr, align 8, !dbg !10839
  call void %12(%struct.detailed_timing* %15, i8* %16) #8, !dbg !10833
  br label %for.inc, !dbg !10833

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !10840
  %inc = add i32 %17, 1, !dbg !10840
  store i32 %inc, i32* %i, align 4, !dbg !10840
  br label %for.cond, !dbg !10841, !llvm.loop !10842

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !10844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_display_descriptor(i8* %d, i8 zeroext %tag) #0 !dbg !10845 {
entry:
  %d.addr = alloca i8*, align 8
  %tag.addr = alloca i8, align 1
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !10846, metadata !DIExpression()), !dbg !10847
  store i8 %tag, i8* %tag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %tag.addr, metadata !10848, metadata !DIExpression()), !dbg !10849
  %0 = load i8*, i8** %d.addr, align 8, !dbg !10850
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !10850
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10850
  %conv = zext i8 %1 to i32, !dbg !10850
  %cmp = icmp eq i32 %conv, 0, !dbg !10851
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !10852

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %d.addr, align 8, !dbg !10853
  %arrayidx2 = getelementptr i8, i8* %2, i64 1, !dbg !10853
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !10853
  %conv3 = zext i8 %3 to i32, !dbg !10853
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !10854
  br i1 %cmp4, label %land.lhs.true6, label %land.end, !dbg !10855

land.lhs.true6:                                   ; preds = %land.lhs.true
  %4 = load i8*, i8** %d.addr, align 8, !dbg !10856
  %arrayidx7 = getelementptr i8, i8* %4, i64 2, !dbg !10856
  %5 = load i8, i8* %arrayidx7, align 1, !dbg !10856
  %conv8 = zext i8 %5 to i32, !dbg !10856
  %cmp9 = icmp eq i32 %conv8, 0, !dbg !10857
  br i1 %cmp9, label %land.rhs, label %land.end, !dbg !10858

land.rhs:                                         ; preds = %land.lhs.true6
  %6 = load i8*, i8** %d.addr, align 8, !dbg !10859
  %arrayidx11 = getelementptr i8, i8* %6, i64 3, !dbg !10859
  %7 = load i8, i8* %arrayidx11, align 1, !dbg !10859
  %conv12 = zext i8 %7 to i32, !dbg !10859
  %8 = load i8, i8* %tag.addr, align 1, !dbg !10860
  %conv13 = zext i8 %8 to i32, !dbg !10860
  %cmp14 = icmp eq i32 %conv12, %conv13, !dbg !10861
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true6, %land.lhs.true, %entry
  %9 = phi i1 [ false, %land.lhs.true6 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp14, %land.rhs ], !dbg !10862
  ret i1 %9, !dbg !10863
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @drm_find_edid_extension(%struct.edid* %edid, i32 %ext_id, i32* %ext_index) #0 !dbg !10864 {
entry:
  %retval = alloca i8*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %ext_id.addr = alloca i32, align 4
  %ext_index.addr = alloca i32*, align 8
  %edid_ext = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !10867, metadata !DIExpression()), !dbg !10868
  store i32 %ext_id, i32* %ext_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ext_id.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  store i32* %ext_index, i32** %ext_index.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %ext_index.addr, metadata !10871, metadata !DIExpression()), !dbg !10872
  call void @llvm.dbg.declare(metadata i8** %edid_ext, metadata !10873, metadata !DIExpression()), !dbg !10874
  store i8* null, i8** %edid_ext, align 8, !dbg !10874
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10875, metadata !DIExpression()), !dbg !10876
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10877
  %cmp = icmp eq %struct.edid* %0, null, !dbg !10879
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10880

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10881
  %extensions = getelementptr inbounds %struct.edid, %struct.edid* %1, i32 0, i32 26, !dbg !10882
  %2 = load i8, i8* %extensions, align 1, !dbg !10882
  %conv = zext i8 %2 to i32, !dbg !10881
  %cmp1 = icmp eq i32 %conv, 0, !dbg !10883
  br i1 %cmp1, label %if.then, label %if.end, !dbg !10884

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* null, i8** %retval, align 8, !dbg !10885
  br label %return, !dbg !10885

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32*, i32** %ext_index.addr, align 8, !dbg !10886
  %4 = load i32, i32* %3, align 4, !dbg !10888
  store i32 %4, i32* %i, align 4, !dbg !10889
  br label %for.cond, !dbg !10890

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !10891
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10893
  %extensions3 = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 26, !dbg !10894
  %7 = load i8, i8* %extensions3, align 1, !dbg !10894
  %conv4 = zext i8 %7 to i32, !dbg !10893
  %cmp5 = icmp slt i32 %5, %conv4, !dbg !10895
  br i1 %cmp5, label %for.body, label %for.end, !dbg !10896

for.body:                                         ; preds = %for.cond
  %8 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10897
  %9 = bitcast %struct.edid* %8 to i8*, !dbg !10899
  %10 = load i32, i32* %i, align 4, !dbg !10900
  %add = add i32 %10, 1, !dbg !10901
  %mul = mul i32 128, %add, !dbg !10902
  %idx.ext = sext i32 %mul to i64, !dbg !10903
  %add.ptr = getelementptr i8, i8* %9, i64 %idx.ext, !dbg !10903
  store i8* %add.ptr, i8** %edid_ext, align 8, !dbg !10904
  %11 = load i8*, i8** %edid_ext, align 8, !dbg !10905
  %arrayidx = getelementptr i8, i8* %11, i64 0, !dbg !10905
  %12 = load i8, i8* %arrayidx, align 1, !dbg !10905
  %conv7 = zext i8 %12 to i32, !dbg !10905
  %13 = load i32, i32* %ext_id.addr, align 4, !dbg !10907
  %cmp8 = icmp eq i32 %conv7, %13, !dbg !10908
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !10909

if.then10:                                        ; preds = %for.body
  br label %for.end, !dbg !10910

if.end11:                                         ; preds = %for.body
  br label %for.inc, !dbg !10911

for.inc:                                          ; preds = %if.end11
  %14 = load i32, i32* %i, align 4, !dbg !10912
  %inc = add i32 %14, 1, !dbg !10912
  store i32 %inc, i32* %i, align 4, !dbg !10912
  br label %for.cond, !dbg !10913, !llvm.loop !10914

for.end:                                          ; preds = %if.then10, %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !10916
  %16 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10918
  %extensions12 = getelementptr inbounds %struct.edid, %struct.edid* %16, i32 0, i32 26, !dbg !10919
  %17 = load i8, i8* %extensions12, align 1, !dbg !10919
  %conv13 = zext i8 %17 to i32, !dbg !10918
  %cmp14 = icmp sge i32 %15, %conv13, !dbg !10920
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !10921

if.then16:                                        ; preds = %for.end
  store i8* null, i8** %retval, align 8, !dbg !10922
  br label %return, !dbg !10922

if.end17:                                         ; preds = %for.end
  %18 = load i32, i32* %i, align 4, !dbg !10923
  %add18 = add i32 %18, 1, !dbg !10924
  %19 = load i32*, i32** %ext_index.addr, align 8, !dbg !10925
  store i32 %add18, i32* %19, align 4, !dbg !10926
  %20 = load i8*, i8** %edid_ext, align 8, !dbg !10927
  store i8* %20, i8** %retval, align 8, !dbg !10928
  br label %return, !dbg !10928

return:                                           ; preds = %if.end17, %if.then16, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !10929
  ret i8* %21, !dbg !10929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @edid_vendor(%struct.edid* %edid, i8* %vendor) #0 !dbg !10930 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %vendor.addr = alloca i8*, align 8
  %edid_vendor = alloca [3 x i8], align 1
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !10933, metadata !DIExpression()), !dbg !10934
  store i8* %vendor, i8** %vendor.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %vendor.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata [3 x i8]* %edid_vendor, metadata !10937, metadata !DIExpression()), !dbg !10939
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10940
  %mfg_id = getelementptr inbounds %struct.edid, %struct.edid* %0, i32 0, i32 1, !dbg !10941
  %arrayidx = getelementptr [2 x i8], [2 x i8]* %mfg_id, i64 0, i64 0, !dbg !10940
  %1 = load i8, i8* %arrayidx, align 1, !dbg !10940
  %conv = zext i8 %1 to i32, !dbg !10940
  %and = and i32 %conv, 124, !dbg !10942
  %shr = ashr i32 %and, 2, !dbg !10943
  %add = add i32 %shr, 64, !dbg !10944
  %conv1 = trunc i32 %add to i8, !dbg !10945
  %arrayidx2 = getelementptr [3 x i8], [3 x i8]* %edid_vendor, i64 0, i64 0, !dbg !10946
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !10947
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10948
  %mfg_id3 = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 1, !dbg !10949
  %arrayidx4 = getelementptr [2 x i8], [2 x i8]* %mfg_id3, i64 0, i64 0, !dbg !10948
  %3 = load i8, i8* %arrayidx4, align 1, !dbg !10948
  %conv5 = zext i8 %3 to i32, !dbg !10948
  %and6 = and i32 %conv5, 3, !dbg !10950
  %shl = shl i32 %and6, 3, !dbg !10951
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10952
  %mfg_id7 = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 1, !dbg !10953
  %arrayidx8 = getelementptr [2 x i8], [2 x i8]* %mfg_id7, i64 0, i64 1, !dbg !10952
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !10952
  %conv9 = zext i8 %5 to i32, !dbg !10952
  %and10 = and i32 %conv9, 224, !dbg !10954
  %shr11 = ashr i32 %and10, 5, !dbg !10955
  %or = or i32 %shl, %shr11, !dbg !10956
  %add12 = add i32 %or, 64, !dbg !10957
  %conv13 = trunc i32 %add12 to i8, !dbg !10958
  %arrayidx14 = getelementptr [3 x i8], [3 x i8]* %edid_vendor, i64 0, i64 1, !dbg !10959
  store i8 %conv13, i8* %arrayidx14, align 1, !dbg !10960
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !10961
  %mfg_id15 = getelementptr inbounds %struct.edid, %struct.edid* %6, i32 0, i32 1, !dbg !10962
  %arrayidx16 = getelementptr [2 x i8], [2 x i8]* %mfg_id15, i64 0, i64 1, !dbg !10961
  %7 = load i8, i8* %arrayidx16, align 1, !dbg !10961
  %conv17 = zext i8 %7 to i32, !dbg !10961
  %and18 = and i32 %conv17, 31, !dbg !10963
  %add19 = add i32 %and18, 64, !dbg !10964
  %conv20 = trunc i32 %add19 to i8, !dbg !10965
  %arrayidx21 = getelementptr [3 x i8], [3 x i8]* %edid_vendor, i64 0, i64 2, !dbg !10966
  store i8 %conv20, i8* %arrayidx21, align 1, !dbg !10967
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %edid_vendor, i64 0, i64 0, !dbg !10968
  %8 = load i8*, i8** %vendor.addr, align 8, !dbg !10969
  %call = call i32 @strncmp(i8* %arraydecay, i8* %8, i64 3) #8, !dbg !10970
  %tobool = icmp ne i32 %call, 0, !dbg !10971
  %lnot = xor i1 %tobool, true, !dbg !10971
  ret i1 %lnot, !dbg !10972
}

; Function Attrs: noredzone
declare dso_local i32 @strncmp(i8*, i8*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @get_monitor_range(%struct.detailed_timing* %timing, i8* %info_monitor_range) #0 !dbg !10973 {
entry:
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %info_monitor_range.addr = alloca i8*, align 8
  %monitor_range = alloca %struct.drm_monitor_range_info*, align 8
  %data = alloca %struct.detailed_non_pixel*, align 8
  %range = alloca %struct.detailed_data_monitor_range*, align 8
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !10974, metadata !DIExpression()), !dbg !10975
  store i8* %info_monitor_range, i8** %info_monitor_range.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %info_monitor_range.addr, metadata !10976, metadata !DIExpression()), !dbg !10977
  call void @llvm.dbg.declare(metadata %struct.drm_monitor_range_info** %monitor_range, metadata !10978, metadata !DIExpression()), !dbg !10980
  %0 = load i8*, i8** %info_monitor_range.addr, align 8, !dbg !10981
  %1 = bitcast i8* %0 to %struct.drm_monitor_range_info*, !dbg !10981
  store %struct.drm_monitor_range_info* %1, %struct.drm_monitor_range_info** %monitor_range, align 8, !dbg !10980
  call void @llvm.dbg.declare(metadata %struct.detailed_non_pixel** %data, metadata !10982, metadata !DIExpression()), !dbg !10985
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !10986
  %data1 = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %2, i32 0, i32 1, !dbg !10987
  %other_data = bitcast %union.anon.0* %data1 to %struct.detailed_non_pixel*, !dbg !10988
  store %struct.detailed_non_pixel* %other_data, %struct.detailed_non_pixel** %data, align 8, !dbg !10985
  call void @llvm.dbg.declare(metadata %struct.detailed_data_monitor_range** %range, metadata !10989, metadata !DIExpression()), !dbg !10992
  %3 = load %struct.detailed_non_pixel*, %struct.detailed_non_pixel** %data, align 8, !dbg !10993
  %data2 = getelementptr inbounds %struct.detailed_non_pixel, %struct.detailed_non_pixel* %3, i32 0, i32 3, !dbg !10994
  %range3 = bitcast %union.anon.1* %data2 to %struct.detailed_data_monitor_range*, !dbg !10995
  store %struct.detailed_data_monitor_range* %range3, %struct.detailed_data_monitor_range** %range, align 8, !dbg !10992
  %4 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !10996
  %5 = bitcast %struct.detailed_timing* %4 to i8*, !dbg !10998
  %call = call zeroext i1 @is_display_descriptor(i8* %5, i8 zeroext -3) #8, !dbg !10999
  br i1 %call, label %if.end, label %if.then, !dbg !11000

if.then:                                          ; preds = %entry
  br label %return, !dbg !11001

if.end:                                           ; preds = %entry
  %6 = load %struct.detailed_data_monitor_range*, %struct.detailed_data_monitor_range** %range, align 8, !dbg !11002
  %flags = getelementptr inbounds %struct.detailed_data_monitor_range, %struct.detailed_data_monitor_range* %6, i32 0, i32 5, !dbg !11004
  %7 = load i8, i8* %flags, align 1, !dbg !11004
  %conv = zext i8 %7 to i32, !dbg !11002
  %cmp = icmp ne i32 %conv, 1, !dbg !11005
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !11006

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !11007

if.end6:                                          ; preds = %if.end
  %8 = load %struct.detailed_data_monitor_range*, %struct.detailed_data_monitor_range** %range, align 8, !dbg !11008
  %min_vfreq = getelementptr inbounds %struct.detailed_data_monitor_range, %struct.detailed_data_monitor_range* %8, i32 0, i32 0, !dbg !11009
  %9 = load i8, i8* %min_vfreq, align 1, !dbg !11009
  %10 = load %struct.drm_monitor_range_info*, %struct.drm_monitor_range_info** %monitor_range, align 8, !dbg !11010
  %min_vfreq7 = getelementptr inbounds %struct.drm_monitor_range_info, %struct.drm_monitor_range_info* %10, i32 0, i32 0, !dbg !11011
  store i8 %9, i8* %min_vfreq7, align 1, !dbg !11012
  %11 = load %struct.detailed_data_monitor_range*, %struct.detailed_data_monitor_range** %range, align 8, !dbg !11013
  %max_vfreq = getelementptr inbounds %struct.detailed_data_monitor_range, %struct.detailed_data_monitor_range* %11, i32 0, i32 1, !dbg !11014
  %12 = load i8, i8* %max_vfreq, align 1, !dbg !11014
  %13 = load %struct.drm_monitor_range_info*, %struct.drm_monitor_range_info** %monitor_range, align 8, !dbg !11015
  %max_vfreq8 = getelementptr inbounds %struct.drm_monitor_range_info, %struct.drm_monitor_range_info* %13, i32 0, i32 1, !dbg !11016
  store i8 %12, i8* %max_vfreq8, align 1, !dbg !11017
  br label %return, !dbg !11018

return:                                           ; preds = %if.end6, %if.then5, %if.then
  ret void, !dbg !11018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_hdmi_vsdb_video(%struct.drm_connector* %connector, i8* %db) #0 !dbg !11019 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  %len = alloca i8, align 1
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11022, metadata !DIExpression()), !dbg !11023
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !11026, metadata !DIExpression()), !dbg !11027
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11028
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !11029
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !11027
  call void @llvm.dbg.declare(metadata i8* %len, metadata !11030, metadata !DIExpression()), !dbg !11031
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11032
  %call = call i32 @cea_db_payload_len(i8* %1) #8, !dbg !11033
  %conv = trunc i32 %call to i8, !dbg !11033
  store i8 %conv, i8* %len, align 1, !dbg !11031
  %2 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11034
  %is_hdmi = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %2, i32 0, i32 11, !dbg !11035
  store i8 1, i8* %is_hdmi, align 1, !dbg !11036
  %3 = load i8, i8* %len, align 1, !dbg !11037
  %conv1 = zext i8 %3 to i32, !dbg !11037
  %cmp = icmp sge i32 %conv1, 6, !dbg !11039
  br i1 %cmp, label %if.then, label %if.end, !dbg !11040

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %db.addr, align 8, !dbg !11041
  %arrayidx = getelementptr i8, i8* %4, i64 6, !dbg !11041
  %5 = load i8, i8* %arrayidx, align 1, !dbg !11041
  %conv3 = zext i8 %5 to i32, !dbg !11041
  %and = and i32 %conv3, 1, !dbg !11042
  %tobool = icmp ne i32 %and, 0, !dbg !11041
  %6 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11043
  %dvi_dual = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %6, i32 0, i32 10, !dbg !11044
  %frombool = zext i1 %tobool to i8, !dbg !11045
  store i8 %frombool, i8* %dvi_dual, align 4, !dbg !11045
  br label %if.end, !dbg !11043

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8, i8* %len, align 1, !dbg !11046
  %conv4 = zext i8 %7 to i32, !dbg !11046
  %cmp5 = icmp sge i32 %conv4, 7, !dbg !11048
  br i1 %cmp5, label %if.then7, label %if.end10, !dbg !11049

if.then7:                                         ; preds = %if.end
  %8 = load i8*, i8** %db.addr, align 8, !dbg !11050
  %arrayidx8 = getelementptr i8, i8* %8, i64 7, !dbg !11050
  %9 = load i8, i8* %arrayidx8, align 1, !dbg !11050
  %conv9 = zext i8 %9 to i32, !dbg !11050
  %mul = mul i32 %conv9, 5000, !dbg !11051
  %10 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11052
  %max_tmds_clock = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %10, i32 0, i32 9, !dbg !11053
  store i32 %mul, i32* %max_tmds_clock, align 8, !dbg !11054
  br label %if.end10, !dbg !11052

if.end10:                                         ; preds = %if.then7, %if.end
  %11 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11055
  %dvi_dual11 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %11, i32 0, i32 10, !dbg !11055
  %12 = load i8, i8* %dvi_dual11, align 4, !dbg !11055
  %tobool12 = trunc i8 %12 to i1, !dbg !11055
  %conv13 = zext i1 %tobool12 to i32, !dbg !11055
  %13 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11055
  %max_tmds_clock14 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %13, i32 0, i32 9, !dbg !11055
  %14 = load i32, i32* %max_tmds_clock14, align 8, !dbg !11055
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30, i64 0, i64 0), i32 %conv13, i32 %14) #8, !dbg !11055
  %15 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11056
  %16 = load i8*, i8** %db.addr, align 8, !dbg !11057
  call void @drm_parse_hdmi_deep_color_info(%struct.drm_connector* %15, i8* %16) #8, !dbg !11058
  ret void, !dbg !11059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_db_is_hdmi_forum_vsdb(i8* %db) #0 !dbg !11060 {
entry:
  %retval = alloca i1, align 1
  %db.addr = alloca i8*, align 8
  %oui = alloca i32, align 4
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11061, metadata !DIExpression()), !dbg !11062
  call void @llvm.dbg.declare(metadata i32* %oui, metadata !11063, metadata !DIExpression()), !dbg !11064
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11065
  %call = call i32 @cea_db_tag(i8* %0) #8, !dbg !11067
  %cmp = icmp ne i32 %call, 3, !dbg !11068
  br i1 %cmp, label %if.then, label %if.end, !dbg !11069

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11070
  br label %return, !dbg !11070

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11071
  %call1 = call i32 @cea_db_payload_len(i8* %1) #8, !dbg !11073
  %cmp2 = icmp slt i32 %call1, 7, !dbg !11074
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11075

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11076
  br label %return, !dbg !11076

if.end4:                                          ; preds = %if.end
  %2 = load i8*, i8** %db.addr, align 8, !dbg !11077
  %arrayidx = getelementptr i8, i8* %2, i64 3, !dbg !11077
  %3 = load i8, i8* %arrayidx, align 1, !dbg !11077
  %conv = zext i8 %3 to i32, !dbg !11077
  %shl = shl i32 %conv, 16, !dbg !11078
  %4 = load i8*, i8** %db.addr, align 8, !dbg !11079
  %arrayidx5 = getelementptr i8, i8* %4, i64 2, !dbg !11079
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !11079
  %conv6 = zext i8 %5 to i32, !dbg !11079
  %shl7 = shl i32 %conv6, 8, !dbg !11080
  %or = or i32 %shl, %shl7, !dbg !11081
  %6 = load i8*, i8** %db.addr, align 8, !dbg !11082
  %arrayidx8 = getelementptr i8, i8* %6, i64 1, !dbg !11082
  %7 = load i8, i8* %arrayidx8, align 1, !dbg !11082
  %conv9 = zext i8 %7 to i32, !dbg !11082
  %or10 = or i32 %or, %conv9, !dbg !11083
  store i32 %or10, i32* %oui, align 4, !dbg !11084
  %8 = load i32, i32* %oui, align 4, !dbg !11085
  %cmp11 = icmp eq i32 %8, 12869080, !dbg !11086
  store i1 %cmp11, i1* %retval, align 1, !dbg !11087
  br label %return, !dbg !11087

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %9 = load i1, i1* %retval, align 1, !dbg !11088
  ret i1 %9, !dbg !11088
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_hdmi_forum_vsdb(%struct.drm_connector* %connector, i8* %hf_vsdb) #0 !dbg !11089 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %hf_vsdb.addr = alloca i8*, align 8
  %display = alloca %struct.drm_display_info*, align 8
  %hdmi = alloca %struct.drm_hdmi_info*, align 8
  %max_tmds_clock = alloca i32, align 4
  %scdc14 = alloca %struct.drm_scdc*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11090, metadata !DIExpression()), !dbg !11091
  store i8* %hf_vsdb, i8** %hf_vsdb.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hf_vsdb.addr, metadata !11092, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %display, metadata !11094, metadata !DIExpression()), !dbg !11095
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11096
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !11097
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %display, align 8, !dbg !11095
  call void @llvm.dbg.declare(metadata %struct.drm_hdmi_info** %hdmi, metadata !11098, metadata !DIExpression()), !dbg !11100
  %1 = load %struct.drm_display_info*, %struct.drm_display_info** %display, align 8, !dbg !11101
  %hdmi1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %1, i32 0, i32 16, !dbg !11102
  store %struct.drm_hdmi_info* %hdmi1, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11100
  %2 = load %struct.drm_display_info*, %struct.drm_display_info** %display, align 8, !dbg !11103
  %has_hdmi_infoframe = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %2, i32 0, i32 12, !dbg !11104
  store i8 1, i8* %has_hdmi_infoframe, align 2, !dbg !11105
  %3 = load i8*, i8** %hf_vsdb.addr, align 8, !dbg !11106
  %arrayidx = getelementptr i8, i8* %3, i64 6, !dbg !11106
  %4 = load i8, i8* %arrayidx, align 1, !dbg !11106
  %conv = zext i8 %4 to i32, !dbg !11106
  %and = and i32 %conv, 128, !dbg !11108
  %tobool = icmp ne i32 %and, 0, !dbg !11108
  br i1 %tobool, label %if.then, label %if.end8, !dbg !11109

if.then:                                          ; preds = %entry
  %5 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11110
  %scdc = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %5, i32 0, i32 0, !dbg !11112
  %supported = getelementptr inbounds %struct.drm_scdc, %struct.drm_scdc* %scdc, i32 0, i32 0, !dbg !11113
  store i8 1, i8* %supported, align 8, !dbg !11114
  %6 = load i8*, i8** %hf_vsdb.addr, align 8, !dbg !11115
  %arrayidx2 = getelementptr i8, i8* %6, i64 6, !dbg !11115
  %7 = load i8, i8* %arrayidx2, align 1, !dbg !11115
  %conv3 = zext i8 %7 to i32, !dbg !11115
  %and4 = and i32 %conv3, 64, !dbg !11117
  %tobool5 = icmp ne i32 %and4, 0, !dbg !11117
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !11118

if.then6:                                         ; preds = %if.then
  %8 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11119
  %scdc7 = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %8, i32 0, i32 0, !dbg !11120
  %read_request = getelementptr inbounds %struct.drm_scdc, %struct.drm_scdc* %scdc7, i32 0, i32 1, !dbg !11121
  store i8 1, i8* %read_request, align 1, !dbg !11122
  br label %if.end, !dbg !11119

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end8, !dbg !11123

if.end8:                                          ; preds = %if.end, %entry
  %9 = load i8*, i8** %hf_vsdb.addr, align 8, !dbg !11124
  %arrayidx9 = getelementptr i8, i8* %9, i64 5, !dbg !11124
  %10 = load i8, i8* %arrayidx9, align 1, !dbg !11124
  %tobool10 = icmp ne i8 %10, 0, !dbg !11124
  br i1 %tobool10, label %if.then11, label %if.end33, !dbg !11126

if.then11:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i32* %max_tmds_clock, metadata !11127, metadata !DIExpression()), !dbg !11129
  %11 = load i8*, i8** %hf_vsdb.addr, align 8, !dbg !11130
  %arrayidx12 = getelementptr i8, i8* %11, i64 5, !dbg !11130
  %12 = load i8, i8* %arrayidx12, align 1, !dbg !11130
  %conv13 = zext i8 %12 to i32, !dbg !11130
  %mul = mul i32 %conv13, 5000, !dbg !11131
  store i32 %mul, i32* %max_tmds_clock, align 4, !dbg !11129
  call void @llvm.dbg.declare(metadata %struct.drm_scdc** %scdc14, metadata !11132, metadata !DIExpression()), !dbg !11134
  %13 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11135
  %scdc15 = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %13, i32 0, i32 0, !dbg !11136
  store %struct.drm_scdc* %scdc15, %struct.drm_scdc** %scdc14, align 8, !dbg !11134
  %14 = load i32, i32* %max_tmds_clock, align 4, !dbg !11137
  %cmp = icmp ugt i32 %14, 340000, !dbg !11139
  br i1 %cmp, label %if.then17, label %if.end20, !dbg !11140

if.then17:                                        ; preds = %if.then11
  %15 = load i32, i32* %max_tmds_clock, align 4, !dbg !11141
  %16 = load %struct.drm_display_info*, %struct.drm_display_info** %display, align 8, !dbg !11143
  %max_tmds_clock18 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %16, i32 0, i32 9, !dbg !11144
  store i32 %15, i32* %max_tmds_clock18, align 8, !dbg !11145
  %17 = load %struct.drm_display_info*, %struct.drm_display_info** %display, align 8, !dbg !11146
  %max_tmds_clock19 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %17, i32 0, i32 9, !dbg !11146
  %18 = load i32, i32* %max_tmds_clock19, align 8, !dbg !11146
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i64 0, i64 0), i32 %18) #8, !dbg !11146
  br label %if.end20, !dbg !11147

if.end20:                                         ; preds = %if.then17, %if.then11
  %19 = load %struct.drm_scdc*, %struct.drm_scdc** %scdc14, align 8, !dbg !11148
  %supported21 = getelementptr inbounds %struct.drm_scdc, %struct.drm_scdc* %19, i32 0, i32 0, !dbg !11150
  %20 = load i8, i8* %supported21, align 1, !dbg !11150
  %tobool22 = trunc i8 %20 to i1, !dbg !11150
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !11151

if.then23:                                        ; preds = %if.end20
  %21 = load %struct.drm_scdc*, %struct.drm_scdc** %scdc14, align 8, !dbg !11152
  %scrambling = getelementptr inbounds %struct.drm_scdc, %struct.drm_scdc* %21, i32 0, i32 2, !dbg !11154
  %supported24 = getelementptr inbounds %struct.drm_scrambling, %struct.drm_scrambling* %scrambling, i32 0, i32 0, !dbg !11155
  store i8 1, i8* %supported24, align 1, !dbg !11156
  %22 = load i8*, i8** %hf_vsdb.addr, align 8, !dbg !11157
  %arrayidx25 = getelementptr i8, i8* %22, i64 6, !dbg !11157
  %23 = load i8, i8* %arrayidx25, align 1, !dbg !11157
  %conv26 = zext i8 %23 to i32, !dbg !11157
  %and27 = and i32 %conv26, 8, !dbg !11159
  %tobool28 = icmp ne i32 %and27, 0, !dbg !11159
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !11160

if.then29:                                        ; preds = %if.then23
  %24 = load %struct.drm_scdc*, %struct.drm_scdc** %scdc14, align 8, !dbg !11161
  %scrambling30 = getelementptr inbounds %struct.drm_scdc, %struct.drm_scdc* %24, i32 0, i32 2, !dbg !11162
  %low_rates = getelementptr inbounds %struct.drm_scrambling, %struct.drm_scrambling* %scrambling30, i32 0, i32 1, !dbg !11163
  store i8 1, i8* %low_rates, align 1, !dbg !11164
  br label %if.end31, !dbg !11161

if.end31:                                         ; preds = %if.then29, %if.then23
  br label %if.end32, !dbg !11165

if.end32:                                         ; preds = %if.end31, %if.end20
  br label %if.end33, !dbg !11166

if.end33:                                         ; preds = %if.end32, %if.end8
  %25 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11167
  %26 = load i8*, i8** %hf_vsdb.addr, align 8, !dbg !11168
  call void @drm_parse_ycbcr420_deep_color_info(%struct.drm_connector* %25, i8* %26) #8, !dbg !11169
  ret void, !dbg !11170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_db_is_y420cmdb(i8* %db) #0 !dbg !11171 {
entry:
  %retval = alloca i1, align 1
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11174
  %call = call i32 @cea_db_tag(i8* %0) #8, !dbg !11176
  %cmp = icmp ne i32 %call, 7, !dbg !11177
  br i1 %cmp, label %if.then, label %if.end, !dbg !11178

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11179
  br label %return, !dbg !11179

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11180
  %call1 = call i32 @cea_db_payload_len(i8* %1) #8, !dbg !11182
  %tobool = icmp ne i32 %call1, 0, !dbg !11182
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !11183

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11184
  br label %return, !dbg !11184

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %db.addr, align 8, !dbg !11185
  %call4 = call i32 @cea_db_extended_tag(i8* %2) #8, !dbg !11187
  %cmp5 = icmp ne i32 %call4, 15, !dbg !11188
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11189

if.then6:                                         ; preds = %if.end3
  store i1 false, i1* %retval, align 1, !dbg !11190
  br label %return, !dbg !11190

if.end7:                                          ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !11191
  br label %return, !dbg !11191

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !11192
  ret i1 %3, !dbg !11192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_y420cmdb_bitmap(%struct.drm_connector* %connector, i8* %db) #0 !dbg !11193 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  %hdmi = alloca %struct.drm_hdmi_info*, align 8
  %map_len = alloca i8, align 1
  %count = alloca i8, align 1
  %map = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11194, metadata !DIExpression()), !dbg !11195
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11196, metadata !DIExpression()), !dbg !11197
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !11198, metadata !DIExpression()), !dbg !11199
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11200
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !11201
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !11199
  call void @llvm.dbg.declare(metadata %struct.drm_hdmi_info** %hdmi, metadata !11202, metadata !DIExpression()), !dbg !11203
  %1 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11204
  %hdmi1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %1, i32 0, i32 16, !dbg !11205
  store %struct.drm_hdmi_info* %hdmi1, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11203
  call void @llvm.dbg.declare(metadata i8* %map_len, metadata !11206, metadata !DIExpression()), !dbg !11207
  %2 = load i8*, i8** %db.addr, align 8, !dbg !11208
  %call = call i32 @cea_db_payload_len(i8* %2) #8, !dbg !11209
  %sub = sub i32 %call, 1, !dbg !11210
  %conv = trunc i32 %sub to i8, !dbg !11209
  store i8 %conv, i8* %map_len, align 1, !dbg !11207
  call void @llvm.dbg.declare(metadata i8* %count, metadata !11211, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.declare(metadata i64* %map, metadata !11213, metadata !DIExpression()), !dbg !11214
  store i64 0, i64* %map, align 8, !dbg !11214
  %3 = load i8, i8* %map_len, align 1, !dbg !11215
  %conv2 = zext i8 %3 to i32, !dbg !11215
  %cmp = icmp eq i32 %conv2, 0, !dbg !11217
  br i1 %cmp, label %if.then, label %if.end, !dbg !11218

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11219
  %y420_cmdb_map = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %4, i32 0, i32 3, !dbg !11221
  store i64 -1, i64* %y420_cmdb_map, align 8, !dbg !11222
  %5 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11223
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %5, i32 0, i32 5, !dbg !11224
  %6 = load i32, i32* %color_formats, align 4, !dbg !11225
  %or = or i32 %6, 8, !dbg !11225
  store i32 %or, i32* %color_formats, align 4, !dbg !11225
  br label %return, !dbg !11226

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11227, metadata !DIExpression()), !dbg !11230
  %7 = load i8, i8* %map_len, align 1, !dbg !11230
  %conv4 = zext i8 %7 to i32, !dbg !11230
  %cmp5 = icmp sgt i32 %conv4, 8, !dbg !11230
  %lnot = xor i1 %cmp5, true, !dbg !11230
  %lnot7 = xor i1 %lnot, true, !dbg !11230
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !11230
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11230
  %8 = load i32, i32* %__ret_warn_on, align 4, !dbg !11231
  %tobool = icmp ne i32 %8, 0, !dbg !11231
  %lnot8 = xor i1 %tobool, true, !dbg !11231
  %lnot10 = xor i1 %lnot8, true, !dbg !11231
  %lnot.ext11 = zext i1 %lnot10 to i32, !dbg !11231
  %conv12 = sext i32 %lnot.ext11 to i64, !dbg !11231
  %tobool13 = icmp ne i64 %conv12, 0, !dbg !11231
  br i1 %tobool13, label %if.then14, label %if.end21, !dbg !11230

if.then14:                                        ; preds = %if.end
  br label %do.body, !dbg !11231

do.body:                                          ; preds = %if.then14
  br label %do.body15, !dbg !11233

do.body15:                                        ; preds = %do.body
  br label %do.end, !dbg !11235

do.end:                                           ; preds = %do.body15
  br label %do.body16, !dbg !11233

do.body16:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0), i32 4245, i32 2307, i64 12) #9, !dbg !11237, !srcloc !11239
  br label %do.end17, !dbg !11237

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 275) #9, !dbg !11240, !srcloc !11242
  br label %do.body18, !dbg !11233

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !11243

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !11233

do.end20:                                         ; preds = %do.end19
  br label %if.end21, !dbg !11233

if.end21:                                         ; preds = %do.end20, %if.end
  %9 = load i32, i32* %__ret_warn_on, align 4, !dbg !11230
  %tobool22 = icmp ne i32 %9, 0, !dbg !11230
  %lnot23 = xor i1 %tobool22, true, !dbg !11230
  %lnot25 = xor i1 %lnot23, true, !dbg !11230
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !11230
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !11230
  store i64 %conv27, i64* %tmp, align 8, !dbg !11231
  %10 = load i64, i64* %tmp, align 8, !dbg !11230
  %tobool28 = icmp ne i64 %10, 0, !dbg !11245
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !11246

if.then29:                                        ; preds = %if.end21
  store i8 8, i8* %map_len, align 1, !dbg !11247
  br label %if.end30, !dbg !11248

if.end30:                                         ; preds = %if.then29, %if.end21
  store i8 0, i8* %count, align 1, !dbg !11249
  br label %for.cond, !dbg !11251

for.cond:                                         ; preds = %for.inc, %if.end30
  %11 = load i8, i8* %count, align 1, !dbg !11252
  %conv31 = zext i8 %11 to i32, !dbg !11252
  %12 = load i8, i8* %map_len, align 1, !dbg !11254
  %conv32 = zext i8 %12 to i32, !dbg !11254
  %cmp33 = icmp slt i32 %conv31, %conv32, !dbg !11255
  br i1 %cmp33, label %for.body, label %for.end, !dbg !11256

for.body:                                         ; preds = %for.cond
  %13 = load i8*, i8** %db.addr, align 8, !dbg !11257
  %14 = load i8, i8* %count, align 1, !dbg !11258
  %conv35 = zext i8 %14 to i32, !dbg !11258
  %add = add i32 2, %conv35, !dbg !11259
  %idxprom = sext i32 %add to i64, !dbg !11257
  %arrayidx = getelementptr i8, i8* %13, i64 %idxprom, !dbg !11257
  %15 = load i8, i8* %arrayidx, align 1, !dbg !11257
  %conv36 = zext i8 %15 to i64, !dbg !11260
  %16 = load i8, i8* %count, align 1, !dbg !11261
  %conv37 = zext i8 %16 to i32, !dbg !11261
  %mul = mul i32 8, %conv37, !dbg !11262
  %sh_prom = zext i32 %mul to i64, !dbg !11263
  %shl = shl i64 %conv36, %sh_prom, !dbg !11263
  %17 = load i64, i64* %map, align 8, !dbg !11264
  %or38 = or i64 %17, %shl, !dbg !11264
  store i64 %or38, i64* %map, align 8, !dbg !11264
  br label %for.inc, !dbg !11265

for.inc:                                          ; preds = %for.body
  %18 = load i8, i8* %count, align 1, !dbg !11266
  %inc = add i8 %18, 1, !dbg !11266
  store i8 %inc, i8* %count, align 1, !dbg !11266
  br label %for.cond, !dbg !11267, !llvm.loop !11268

for.end:                                          ; preds = %for.cond
  %19 = load i64, i64* %map, align 8, !dbg !11270
  %tobool39 = icmp ne i64 %19, 0, !dbg !11270
  br i1 %tobool39, label %if.then40, label %if.end43, !dbg !11272

if.then40:                                        ; preds = %for.end
  %20 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11273
  %color_formats41 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %20, i32 0, i32 5, !dbg !11274
  %21 = load i32, i32* %color_formats41, align 4, !dbg !11275
  %or42 = or i32 %21, 8, !dbg !11275
  store i32 %or42, i32* %color_formats41, align 4, !dbg !11275
  br label %if.end43, !dbg !11273

if.end43:                                         ; preds = %if.then40, %for.end
  %22 = load i64, i64* %map, align 8, !dbg !11276
  %23 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11277
  %y420_cmdb_map44 = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %23, i32 0, i32 3, !dbg !11278
  store i64 %22, i64* %y420_cmdb_map44, align 8, !dbg !11279
  br label %return, !dbg !11280

return:                                           ; preds = %if.end43, %if.then
  ret void, !dbg !11280
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_db_is_vcdb(i8* %db) #0 !dbg !11281 {
entry:
  %retval = alloca i1, align 1
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11282, metadata !DIExpression()), !dbg !11283
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11284
  %call = call i32 @cea_db_tag(i8* %0) #8, !dbg !11286
  %cmp = icmp ne i32 %call, 7, !dbg !11287
  br i1 %cmp, label %if.then, label %if.end, !dbg !11288

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11289
  br label %return, !dbg !11289

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11290
  %call1 = call i32 @cea_db_payload_len(i8* %1) #8, !dbg !11292
  %cmp2 = icmp ne i32 %call1, 2, !dbg !11293
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !11294

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11295
  br label %return, !dbg !11295

if.end4:                                          ; preds = %if.end
  %2 = load i8*, i8** %db.addr, align 8, !dbg !11296
  %call5 = call i32 @cea_db_extended_tag(i8* %2) #8, !dbg !11298
  %cmp6 = icmp ne i32 %call5, 0, !dbg !11299
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !11300

if.then7:                                         ; preds = %if.end4
  store i1 false, i1* %retval, align 1, !dbg !11301
  br label %return, !dbg !11301

if.end8:                                          ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !11302
  br label %return, !dbg !11302

return:                                           ; preds = %if.end8, %if.then7, %if.then3, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !11303
  ret i1 %3, !dbg !11303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_vcdb(%struct.drm_connector* %connector, i8* %db) #0 !dbg !11304 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11305, metadata !DIExpression()), !dbg !11306
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11307, metadata !DIExpression()), !dbg !11308
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !11309, metadata !DIExpression()), !dbg !11310
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11311
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !11312
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !11310
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11313
  %arrayidx = getelementptr i8, i8* %1, i64 2, !dbg !11313
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11313
  %conv = zext i8 %2 to i32, !dbg !11313
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.39, i64 0, i64 0), i32 %conv) #8, !dbg !11313
  %3 = load i8*, i8** %db.addr, align 8, !dbg !11314
  %arrayidx1 = getelementptr i8, i8* %3, i64 2, !dbg !11314
  %4 = load i8, i8* %arrayidx1, align 1, !dbg !11314
  %conv2 = zext i8 %4 to i32, !dbg !11314
  %and = and i32 %conv2, 64, !dbg !11316
  %tobool = icmp ne i32 %and, 0, !dbg !11316
  br i1 %tobool, label %if.then, label %if.end, !dbg !11317

if.then:                                          ; preds = %entry
  %5 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11318
  %rgb_quant_range_selectable = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %5, i32 0, i32 13, !dbg !11319
  store i8 1, i8* %rgb_quant_range_selectable, align 1, !dbg !11320
  br label %if.end, !dbg !11318

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_db_is_hdmi_hdr_metadata_block(i8* %db) #0 !dbg !11322 {
entry:
  %retval = alloca i1, align 1
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11323, metadata !DIExpression()), !dbg !11324
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11325
  %call = call i32 @cea_db_tag(i8* %0) #8, !dbg !11327
  %cmp = icmp ne i32 %call, 7, !dbg !11328
  br i1 %cmp, label %if.then, label %if.end, !dbg !11329

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11330
  br label %return, !dbg !11330

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11331
  %arrayidx = getelementptr i8, i8* %1, i64 1, !dbg !11331
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11331
  %conv = zext i8 %2 to i32, !dbg !11331
  %cmp1 = icmp ne i32 %conv, 6, !dbg !11333
  br i1 %cmp1, label %if.then3, label %if.end4, !dbg !11334

if.then3:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !11335
  br label %return, !dbg !11335

if.end4:                                          ; preds = %if.end
  %3 = load i8*, i8** %db.addr, align 8, !dbg !11336
  %call5 = call i32 @cea_db_payload_len(i8* %3) #8, !dbg !11338
  %cmp6 = icmp slt i32 %call5, 3, !dbg !11339
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !11340

if.then8:                                         ; preds = %if.end4
  store i1 false, i1* %retval, align 1, !dbg !11341
  br label %return, !dbg !11341

if.end9:                                          ; preds = %if.end4
  store i1 true, i1* %retval, align 1, !dbg !11342
  br label %return, !dbg !11342

return:                                           ; preds = %if.end9, %if.then8, %if.then3, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !11343
  ret i1 %4, !dbg !11343
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_hdr_metadata_block(%struct.drm_connector* %connector, i8* %db) #0 !dbg !11344 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %len = alloca i16, align 2
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11345, metadata !DIExpression()), !dbg !11346
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11347, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.declare(metadata i16* %len, metadata !11349, metadata !DIExpression()), !dbg !11350
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11351
  %call = call i32 @cea_db_payload_len(i8* %0) #8, !dbg !11352
  %conv = trunc i32 %call to i16, !dbg !11352
  store i16 %conv, i16* %len, align 2, !dbg !11353
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11354
  %call1 = call zeroext i8 @eotf_supported(i8* %1) #8, !dbg !11355
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11356
  %hdr_sink_metadata = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 58, !dbg !11357
  %3 = getelementptr inbounds %struct.hdr_sink_metadata, %struct.hdr_sink_metadata* %hdr_sink_metadata, i32 0, i32 1, !dbg !11358
  %hdmi_type1 = bitcast %union.anon.72* %3 to %struct.hdr_static_metadata*, !dbg !11358
  %eotf = getelementptr inbounds %struct.hdr_static_metadata, %struct.hdr_static_metadata* %hdmi_type1, i32 0, i32 0, !dbg !11359
  store i8 %call1, i8* %eotf, align 4, !dbg !11360
  %4 = load i8*, i8** %db.addr, align 8, !dbg !11361
  %call2 = call zeroext i8 @hdr_metadata_type(i8* %4) #8, !dbg !11362
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11363
  %hdr_sink_metadata3 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %5, i32 0, i32 58, !dbg !11364
  %6 = getelementptr inbounds %struct.hdr_sink_metadata, %struct.hdr_sink_metadata* %hdr_sink_metadata3, i32 0, i32 1, !dbg !11365
  %hdmi_type14 = bitcast %union.anon.72* %6 to %struct.hdr_static_metadata*, !dbg !11365
  %metadata_type = getelementptr inbounds %struct.hdr_static_metadata, %struct.hdr_static_metadata* %hdmi_type14, i32 0, i32 1, !dbg !11366
  store i8 %call2, i8* %metadata_type, align 1, !dbg !11367
  %7 = load i16, i16* %len, align 2, !dbg !11368
  %conv5 = zext i16 %7 to i32, !dbg !11368
  %cmp = icmp sge i32 %conv5, 4, !dbg !11370
  br i1 %cmp, label %if.then, label %if.end, !dbg !11371

if.then:                                          ; preds = %entry
  %8 = load i8*, i8** %db.addr, align 8, !dbg !11372
  %arrayidx = getelementptr i8, i8* %8, i64 4, !dbg !11372
  %9 = load i8, i8* %arrayidx, align 1, !dbg !11372
  %conv7 = zext i8 %9 to i16, !dbg !11372
  %10 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11373
  %hdr_sink_metadata8 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %10, i32 0, i32 58, !dbg !11374
  %11 = getelementptr inbounds %struct.hdr_sink_metadata, %struct.hdr_sink_metadata* %hdr_sink_metadata8, i32 0, i32 1, !dbg !11375
  %hdmi_type19 = bitcast %union.anon.72* %11 to %struct.hdr_static_metadata*, !dbg !11375
  %max_cll = getelementptr inbounds %struct.hdr_static_metadata, %struct.hdr_static_metadata* %hdmi_type19, i32 0, i32 2, !dbg !11376
  store i16 %conv7, i16* %max_cll, align 2, !dbg !11377
  br label %if.end, !dbg !11373

if.end:                                           ; preds = %if.then, %entry
  %12 = load i16, i16* %len, align 2, !dbg !11378
  %conv10 = zext i16 %12 to i32, !dbg !11378
  %cmp11 = icmp sge i32 %conv10, 5, !dbg !11380
  br i1 %cmp11, label %if.then13, label %if.end18, !dbg !11381

if.then13:                                        ; preds = %if.end
  %13 = load i8*, i8** %db.addr, align 8, !dbg !11382
  %arrayidx14 = getelementptr i8, i8* %13, i64 5, !dbg !11382
  %14 = load i8, i8* %arrayidx14, align 1, !dbg !11382
  %conv15 = zext i8 %14 to i16, !dbg !11382
  %15 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11383
  %hdr_sink_metadata16 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %15, i32 0, i32 58, !dbg !11384
  %16 = getelementptr inbounds %struct.hdr_sink_metadata, %struct.hdr_sink_metadata* %hdr_sink_metadata16, i32 0, i32 1, !dbg !11385
  %hdmi_type117 = bitcast %union.anon.72* %16 to %struct.hdr_static_metadata*, !dbg !11385
  %max_fall = getelementptr inbounds %struct.hdr_static_metadata, %struct.hdr_static_metadata* %hdmi_type117, i32 0, i32 3, !dbg !11386
  store i16 %conv15, i16* %max_fall, align 4, !dbg !11387
  br label %if.end18, !dbg !11383

if.end18:                                         ; preds = %if.then13, %if.end
  %17 = load i16, i16* %len, align 2, !dbg !11388
  %conv19 = zext i16 %17 to i32, !dbg !11388
  %cmp20 = icmp sge i32 %conv19, 6, !dbg !11390
  br i1 %cmp20, label %if.then22, label %if.end27, !dbg !11391

if.then22:                                        ; preds = %if.end18
  %18 = load i8*, i8** %db.addr, align 8, !dbg !11392
  %arrayidx23 = getelementptr i8, i8* %18, i64 6, !dbg !11392
  %19 = load i8, i8* %arrayidx23, align 1, !dbg !11392
  %conv24 = zext i8 %19 to i16, !dbg !11392
  %20 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11393
  %hdr_sink_metadata25 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %20, i32 0, i32 58, !dbg !11394
  %21 = getelementptr inbounds %struct.hdr_sink_metadata, %struct.hdr_sink_metadata* %hdr_sink_metadata25, i32 0, i32 1, !dbg !11395
  %hdmi_type126 = bitcast %union.anon.72* %21 to %struct.hdr_static_metadata*, !dbg !11395
  %min_cll = getelementptr inbounds %struct.hdr_static_metadata, %struct.hdr_static_metadata* %hdmi_type126, i32 0, i32 4, !dbg !11396
  store i16 %conv24, i16* %min_cll, align 2, !dbg !11397
  br label %if.end27, !dbg !11393

if.end27:                                         ; preds = %if.then22, %if.end18
  ret void, !dbg !11398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_hdmi_deep_color_info(%struct.drm_connector* %connector, i8* %hdmi) #0 !dbg !11399 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %hdmi.addr = alloca i8*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  %dc_bpc = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  store i8* %hdmi, i8** %hdmi.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hdmi.addr, metadata !11402, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !11404, metadata !DIExpression()), !dbg !11405
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11406
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !11407
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !11405
  call void @llvm.dbg.declare(metadata i32* %dc_bpc, metadata !11408, metadata !DIExpression()), !dbg !11409
  store i32 0, i32* %dc_bpc, align 4, !dbg !11409
  %1 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11410
  %bpc = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %1, i32 0, i32 2, !dbg !11411
  store i32 8, i32* %bpc, align 8, !dbg !11412
  %2 = load i8*, i8** %hdmi.addr, align 8, !dbg !11413
  %call = call i32 @cea_db_payload_len(i8* %2) #8, !dbg !11415
  %cmp = icmp slt i32 %call, 6, !dbg !11416
  br i1 %cmp, label %if.then, label %if.end, !dbg !11417

if.then:                                          ; preds = %entry
  br label %if.end49, !dbg !11418

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %hdmi.addr, align 8, !dbg !11419
  %arrayidx = getelementptr i8, i8* %3, i64 6, !dbg !11419
  %4 = load i8, i8* %arrayidx, align 1, !dbg !11419
  %conv = zext i8 %4 to i32, !dbg !11419
  %and = and i32 %conv, 16, !dbg !11421
  %tobool = icmp ne i32 %and, 0, !dbg !11421
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !11422

if.then1:                                         ; preds = %if.end
  store i32 10, i32* %dc_bpc, align 4, !dbg !11423
  %5 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11425
  %edid_hdmi_dc_modes = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %5, i32 0, i32 14, !dbg !11426
  %6 = load i8, i8* %edid_hdmi_dc_modes, align 8, !dbg !11427
  %conv2 = zext i8 %6 to i32, !dbg !11427
  %or = or i32 %conv2, 16, !dbg !11427
  %conv3 = trunc i32 %or to i8, !dbg !11427
  store i8 %conv3, i8* %edid_hdmi_dc_modes, align 8, !dbg !11427
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11428
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %7, i32 0, i32 5, !dbg !11428
  %8 = load i8*, i8** %name, align 8, !dbg !11428
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.31, i64 0, i64 0), i8* %8) #8, !dbg !11428
  br label %if.end4, !dbg !11429

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load i8*, i8** %hdmi.addr, align 8, !dbg !11430
  %arrayidx5 = getelementptr i8, i8* %9, i64 6, !dbg !11430
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !11430
  %conv6 = zext i8 %10 to i32, !dbg !11430
  %and7 = and i32 %conv6, 32, !dbg !11432
  %tobool8 = icmp ne i32 %and7, 0, !dbg !11432
  br i1 %tobool8, label %if.then9, label %if.end15, !dbg !11433

if.then9:                                         ; preds = %if.end4
  store i32 12, i32* %dc_bpc, align 4, !dbg !11434
  %11 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11436
  %edid_hdmi_dc_modes10 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %11, i32 0, i32 14, !dbg !11437
  %12 = load i8, i8* %edid_hdmi_dc_modes10, align 8, !dbg !11438
  %conv11 = zext i8 %12 to i32, !dbg !11438
  %or12 = or i32 %conv11, 32, !dbg !11438
  %conv13 = trunc i32 %or12 to i8, !dbg !11438
  store i8 %conv13, i8* %edid_hdmi_dc_modes10, align 8, !dbg !11438
  %13 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11439
  %name14 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %13, i32 0, i32 5, !dbg !11439
  %14 = load i8*, i8** %name14, align 8, !dbg !11439
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.32, i64 0, i64 0), i8* %14) #8, !dbg !11439
  br label %if.end15, !dbg !11440

if.end15:                                         ; preds = %if.then9, %if.end4
  %15 = load i8*, i8** %hdmi.addr, align 8, !dbg !11441
  %arrayidx16 = getelementptr i8, i8* %15, i64 6, !dbg !11441
  %16 = load i8, i8* %arrayidx16, align 1, !dbg !11441
  %conv17 = zext i8 %16 to i32, !dbg !11441
  %and18 = and i32 %conv17, 64, !dbg !11443
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11443
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !11444

if.then20:                                        ; preds = %if.end15
  store i32 16, i32* %dc_bpc, align 4, !dbg !11445
  %17 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11447
  %edid_hdmi_dc_modes21 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %17, i32 0, i32 14, !dbg !11448
  %18 = load i8, i8* %edid_hdmi_dc_modes21, align 8, !dbg !11449
  %conv22 = zext i8 %18 to i32, !dbg !11449
  %or23 = or i32 %conv22, 64, !dbg !11449
  %conv24 = trunc i32 %or23 to i8, !dbg !11449
  store i8 %conv24, i8* %edid_hdmi_dc_modes21, align 8, !dbg !11449
  %19 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11450
  %name25 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %19, i32 0, i32 5, !dbg !11450
  %20 = load i8*, i8** %name25, align 8, !dbg !11450
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0), i8* %20) #8, !dbg !11450
  br label %if.end26, !dbg !11451

if.end26:                                         ; preds = %if.then20, %if.end15
  %21 = load i32, i32* %dc_bpc, align 4, !dbg !11452
  %cmp27 = icmp eq i32 %21, 0, !dbg !11454
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !11455

if.then29:                                        ; preds = %if.end26
  %22 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11456
  %name30 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %22, i32 0, i32 5, !dbg !11456
  %23 = load i8*, i8** %name30, align 8, !dbg !11456
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.34, i64 0, i64 0), i8* %23) #8, !dbg !11456
  br label %if.end49, !dbg !11458

if.end31:                                         ; preds = %if.end26
  %24 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11459
  %name32 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %24, i32 0, i32 5, !dbg !11459
  %25 = load i8*, i8** %name32, align 8, !dbg !11459
  %26 = load i32, i32* %dc_bpc, align 4, !dbg !11459
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.35, i64 0, i64 0), i8* %25, i32 %26) #8, !dbg !11459
  %27 = load i32, i32* %dc_bpc, align 4, !dbg !11460
  %28 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11461
  %bpc33 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %28, i32 0, i32 2, !dbg !11462
  store i32 %27, i32* %bpc33, align 8, !dbg !11463
  %29 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11464
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %29, i32 0, i32 5, !dbg !11465
  store i32 1, i32* %color_formats, align 4, !dbg !11466
  %30 = load i8*, i8** %hdmi.addr, align 8, !dbg !11467
  %arrayidx34 = getelementptr i8, i8* %30, i64 6, !dbg !11467
  %31 = load i8, i8* %arrayidx34, align 1, !dbg !11467
  %conv35 = zext i8 %31 to i32, !dbg !11467
  %and36 = and i32 %conv35, 8, !dbg !11469
  %tobool37 = icmp ne i32 %and36, 0, !dbg !11469
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !11470

if.then38:                                        ; preds = %if.end31
  %32 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !11471
  %color_formats39 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %32, i32 0, i32 5, !dbg !11473
  %33 = load i32, i32* %color_formats39, align 4, !dbg !11474
  %or40 = or i32 %33, 2, !dbg !11474
  store i32 %or40, i32* %color_formats39, align 4, !dbg !11474
  %34 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11475
  %name41 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %34, i32 0, i32 5, !dbg !11475
  %35 = load i8*, i8** %name41, align 8, !dbg !11475
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i8* %35) #8, !dbg !11475
  br label %if.end42, !dbg !11476

if.end42:                                         ; preds = %if.then38, %if.end31
  %36 = load i8*, i8** %hdmi.addr, align 8, !dbg !11477
  %arrayidx43 = getelementptr i8, i8* %36, i64 6, !dbg !11477
  %37 = load i8, i8* %arrayidx43, align 1, !dbg !11477
  %conv44 = zext i8 %37 to i32, !dbg !11477
  %and45 = and i32 %conv44, 32, !dbg !11479
  %tobool46 = icmp ne i32 %and45, 0, !dbg !11479
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !11480

if.then47:                                        ; preds = %if.end42
  %38 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11481
  %name48 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %38, i32 0, i32 5, !dbg !11481
  %39 = load i8*, i8** %name48, align 8, !dbg !11481
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.37, i64 0, i64 0), i8* %39) #8, !dbg !11481
  br label %if.end49, !dbg !11483

if.end49:                                         ; preds = %if.then, %if.then29, %if.then47, %if.end42
  ret void, !dbg !11484
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_ycbcr420_deep_color_info(%struct.drm_connector* %connector, i8* %db) #0 !dbg !11485 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %dc_mask = alloca i8, align 1
  %hdmi = alloca %struct.drm_hdmi_info*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11486, metadata !DIExpression()), !dbg !11487
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11488, metadata !DIExpression()), !dbg !11489
  call void @llvm.dbg.declare(metadata i8* %dc_mask, metadata !11490, metadata !DIExpression()), !dbg !11491
  call void @llvm.dbg.declare(metadata %struct.drm_hdmi_info** %hdmi, metadata !11492, metadata !DIExpression()), !dbg !11493
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11494
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !11495
  %hdmi1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 16, !dbg !11496
  store %struct.drm_hdmi_info* %hdmi1, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11493
  %1 = load i8*, i8** %db.addr, align 8, !dbg !11497
  %arrayidx = getelementptr i8, i8* %1, i64 7, !dbg !11497
  %2 = load i8, i8* %arrayidx, align 1, !dbg !11497
  %conv = zext i8 %2 to i32, !dbg !11497
  %and = and i32 %conv, 7, !dbg !11498
  %conv2 = trunc i32 %and to i8, !dbg !11497
  store i8 %conv2, i8* %dc_mask, align 1, !dbg !11499
  %3 = load i8, i8* %dc_mask, align 1, !dbg !11500
  %4 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !11501
  %y420_dc_modes = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %4, i32 0, i32 4, !dbg !11502
  store i8 %3, i8* %y420_dc_modes, align 8, !dbg !11503
  ret void, !dbg !11504
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @cea_db_extended_tag(i8* %db) #0 !dbg !11505 {
entry:
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11506, metadata !DIExpression()), !dbg !11507
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11508
  %arrayidx = getelementptr i8, i8* %0, i64 1, !dbg !11508
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11508
  %conv = zext i8 %1 to i32, !dbg !11508
  ret i32 %conv, !dbg !11509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @eotf_supported(i8* %edid_ext) #0 !dbg !11510 {
entry:
  %edid_ext.addr = alloca i8*, align 8
  store i8* %edid_ext, i8** %edid_ext.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %edid_ext.addr, metadata !11513, metadata !DIExpression()), !dbg !11514
  %0 = load i8*, i8** %edid_ext.addr, align 8, !dbg !11515
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !11515
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11515
  %conv = zext i8 %1 to i64, !dbg !11515
  %and = and i64 %conv, 15, !dbg !11516
  %conv1 = trunc i64 %and to i8, !dbg !11515
  ret i8 %conv1, !dbg !11517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @hdr_metadata_type(i8* %edid_ext) #0 !dbg !11518 {
entry:
  %edid_ext.addr = alloca i8*, align 8
  store i8* %edid_ext, i8** %edid_ext.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %edid_ext.addr, metadata !11519, metadata !DIExpression()), !dbg !11520
  %0 = load i8*, i8** %edid_ext.addr, align 8, !dbg !11521
  %arrayidx = getelementptr i8, i8* %0, i64 3, !dbg !11521
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11521
  %conv = zext i8 %1 to i64, !dbg !11521
  %and = and i64 %conv, 2, !dbg !11522
  %conv1 = trunc i64 %and to i8, !dbg !11521
  ret i8 %conv1, !dbg !11523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_hdmi_vsdb_audio(%struct.drm_connector* %connector, i8* %db) #0 !dbg !11524 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %len = alloca i8, align 1
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !11525, metadata !DIExpression()), !dbg !11526
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !11527, metadata !DIExpression()), !dbg !11528
  call void @llvm.dbg.declare(metadata i8* %len, metadata !11529, metadata !DIExpression()), !dbg !11530
  %0 = load i8*, i8** %db.addr, align 8, !dbg !11531
  %call = call i32 @cea_db_payload_len(i8* %0) #8, !dbg !11532
  %conv = trunc i32 %call to i8, !dbg !11532
  store i8 %conv, i8* %len, align 1, !dbg !11530
  %1 = load i8, i8* %len, align 1, !dbg !11533
  %conv1 = zext i8 %1 to i32, !dbg !11533
  %cmp = icmp sge i32 %conv1, 6, !dbg !11535
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11536

land.lhs.true:                                    ; preds = %entry
  %2 = load i8*, i8** %db.addr, align 8, !dbg !11537
  %arrayidx = getelementptr i8, i8* %2, i64 6, !dbg !11537
  %3 = load i8, i8* %arrayidx, align 1, !dbg !11537
  %conv3 = zext i8 %3 to i32, !dbg !11537
  %and = and i32 %conv3, 128, !dbg !11538
  %tobool = icmp ne i32 %and, 0, !dbg !11538
  br i1 %tobool, label %if.then, label %if.end, !dbg !11539

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11540
  %eld = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %4, i32 0, i32 36, !dbg !11541
  %arrayidx4 = getelementptr [128 x i8], [128 x i8]* %eld, i64 0, i64 5, !dbg !11540
  %5 = load i8, i8* %arrayidx4, align 1, !dbg !11542
  %conv5 = zext i8 %5 to i32, !dbg !11542
  %or = or i32 %conv5, 2, !dbg !11542
  %conv6 = trunc i32 %or to i8, !dbg !11542
  store i8 %conv6, i8* %arrayidx4, align 1, !dbg !11542
  br label %if.end, !dbg !11540

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %6 = load i8, i8* %len, align 1, !dbg !11543
  %conv7 = zext i8 %6 to i32, !dbg !11543
  %cmp8 = icmp sge i32 %conv7, 8, !dbg !11545
  br i1 %cmp8, label %if.then10, label %if.end23, !dbg !11546

if.then10:                                        ; preds = %if.end
  %7 = load i8*, i8** %db.addr, align 8, !dbg !11547
  %arrayidx11 = getelementptr i8, i8* %7, i64 8, !dbg !11547
  %8 = load i8, i8* %arrayidx11, align 1, !dbg !11547
  %conv12 = zext i8 %8 to i32, !dbg !11547
  %shr = ashr i32 %conv12, 7, !dbg !11549
  %tobool13 = icmp ne i32 %shr, 0, !dbg !11547
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11550
  %latency_present = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %9, i32 0, i32 37, !dbg !11551
  %arrayidx14 = getelementptr [2 x i8], [2 x i8]* %latency_present, i64 0, i64 0, !dbg !11550
  %frombool = zext i1 %tobool13 to i8, !dbg !11552
  store i8 %frombool, i8* %arrayidx14, align 8, !dbg !11552
  %10 = load i8*, i8** %db.addr, align 8, !dbg !11553
  %arrayidx15 = getelementptr i8, i8* %10, i64 8, !dbg !11553
  %11 = load i8, i8* %arrayidx15, align 1, !dbg !11553
  %conv16 = zext i8 %11 to i32, !dbg !11553
  %shr17 = ashr i32 %conv16, 6, !dbg !11554
  %and18 = and i32 %shr17, 1, !dbg !11555
  %tobool19 = icmp ne i32 %and18, 0, !dbg !11556
  %12 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11557
  %latency_present20 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %12, i32 0, i32 37, !dbg !11558
  %arrayidx21 = getelementptr [2 x i8], [2 x i8]* %latency_present20, i64 0, i64 1, !dbg !11557
  %frombool22 = zext i1 %tobool19 to i8, !dbg !11559
  store i8 %frombool22, i8* %arrayidx21, align 1, !dbg !11559
  br label %if.end23, !dbg !11560

if.end23:                                         ; preds = %if.then10, %if.end
  %13 = load i8, i8* %len, align 1, !dbg !11561
  %conv24 = zext i8 %13 to i32, !dbg !11561
  %cmp25 = icmp sge i32 %conv24, 9, !dbg !11563
  br i1 %cmp25, label %if.then27, label %if.end31, !dbg !11564

if.then27:                                        ; preds = %if.end23
  %14 = load i8*, i8** %db.addr, align 8, !dbg !11565
  %arrayidx28 = getelementptr i8, i8* %14, i64 9, !dbg !11565
  %15 = load i8, i8* %arrayidx28, align 1, !dbg !11565
  %conv29 = zext i8 %15 to i32, !dbg !11565
  %16 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11566
  %video_latency = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %16, i32 0, i32 38, !dbg !11567
  %arrayidx30 = getelementptr [2 x i32], [2 x i32]* %video_latency, i64 0, i64 0, !dbg !11566
  store i32 %conv29, i32* %arrayidx30, align 4, !dbg !11568
  br label %if.end31, !dbg !11566

if.end31:                                         ; preds = %if.then27, %if.end23
  %17 = load i8, i8* %len, align 1, !dbg !11569
  %conv32 = zext i8 %17 to i32, !dbg !11569
  %cmp33 = icmp sge i32 %conv32, 10, !dbg !11571
  br i1 %cmp33, label %if.then35, label %if.end39, !dbg !11572

if.then35:                                        ; preds = %if.end31
  %18 = load i8*, i8** %db.addr, align 8, !dbg !11573
  %arrayidx36 = getelementptr i8, i8* %18, i64 10, !dbg !11573
  %19 = load i8, i8* %arrayidx36, align 1, !dbg !11573
  %conv37 = zext i8 %19 to i32, !dbg !11573
  %20 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11574
  %audio_latency = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %20, i32 0, i32 39, !dbg !11575
  %arrayidx38 = getelementptr [2 x i32], [2 x i32]* %audio_latency, i64 0, i64 0, !dbg !11574
  store i32 %conv37, i32* %arrayidx38, align 4, !dbg !11576
  br label %if.end39, !dbg !11574

if.end39:                                         ; preds = %if.then35, %if.end31
  %21 = load i8, i8* %len, align 1, !dbg !11577
  %conv40 = zext i8 %21 to i32, !dbg !11577
  %cmp41 = icmp sge i32 %conv40, 11, !dbg !11579
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !11580

if.then43:                                        ; preds = %if.end39
  %22 = load i8*, i8** %db.addr, align 8, !dbg !11581
  %arrayidx44 = getelementptr i8, i8* %22, i64 11, !dbg !11581
  %23 = load i8, i8* %arrayidx44, align 1, !dbg !11581
  %conv45 = zext i8 %23 to i32, !dbg !11581
  %24 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11582
  %video_latency46 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %24, i32 0, i32 38, !dbg !11583
  %arrayidx47 = getelementptr [2 x i32], [2 x i32]* %video_latency46, i64 0, i64 1, !dbg !11582
  store i32 %conv45, i32* %arrayidx47, align 4, !dbg !11584
  br label %if.end48, !dbg !11582

if.end48:                                         ; preds = %if.then43, %if.end39
  %25 = load i8, i8* %len, align 1, !dbg !11585
  %conv49 = zext i8 %25 to i32, !dbg !11585
  %cmp50 = icmp sge i32 %conv49, 12, !dbg !11587
  br i1 %cmp50, label %if.then52, label %if.end57, !dbg !11588

if.then52:                                        ; preds = %if.end48
  %26 = load i8*, i8** %db.addr, align 8, !dbg !11589
  %arrayidx53 = getelementptr i8, i8* %26, i64 12, !dbg !11589
  %27 = load i8, i8* %arrayidx53, align 1, !dbg !11589
  %conv54 = zext i8 %27 to i32, !dbg !11589
  %28 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11590
  %audio_latency55 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %28, i32 0, i32 39, !dbg !11591
  %arrayidx56 = getelementptr [2 x i32], [2 x i32]* %audio_latency55, i64 0, i64 1, !dbg !11590
  store i32 %conv54, i32* %arrayidx56, align 4, !dbg !11592
  br label %if.end57, !dbg !11590

if.end57:                                         ; preds = %if.then52, %if.end48
  %29 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11593
  %latency_present58 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %29, i32 0, i32 37, !dbg !11593
  %arrayidx59 = getelementptr [2 x i8], [2 x i8]* %latency_present58, i64 0, i64 0, !dbg !11593
  %30 = load i8, i8* %arrayidx59, align 8, !dbg !11593
  %tobool60 = trunc i8 %30 to i1, !dbg !11593
  %conv61 = zext i1 %tobool60 to i32, !dbg !11593
  %31 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11593
  %latency_present62 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %31, i32 0, i32 37, !dbg !11593
  %arrayidx63 = getelementptr [2 x i8], [2 x i8]* %latency_present62, i64 0, i64 1, !dbg !11593
  %32 = load i8, i8* %arrayidx63, align 1, !dbg !11593
  %tobool64 = trunc i8 %32 to i1, !dbg !11593
  %conv65 = zext i1 %tobool64 to i32, !dbg !11593
  %33 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11593
  %video_latency66 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %33, i32 0, i32 38, !dbg !11593
  %arrayidx67 = getelementptr [2 x i32], [2 x i32]* %video_latency66, i64 0, i64 0, !dbg !11593
  %34 = load i32, i32* %arrayidx67, align 4, !dbg !11593
  %35 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11593
  %video_latency68 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %35, i32 0, i32 38, !dbg !11593
  %arrayidx69 = getelementptr [2 x i32], [2 x i32]* %video_latency68, i64 0, i64 1, !dbg !11593
  %36 = load i32, i32* %arrayidx69, align 4, !dbg !11593
  %37 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11593
  %audio_latency70 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %37, i32 0, i32 39, !dbg !11593
  %arrayidx71 = getelementptr [2 x i32], [2 x i32]* %audio_latency70, i64 0, i64 0, !dbg !11593
  %38 = load i32, i32* %arrayidx71, align 4, !dbg !11593
  %39 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !11593
  %audio_latency72 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %39, i32 0, i32 39, !dbg !11593
  %arrayidx73 = getelementptr [2 x i32], [2 x i32]* %audio_latency72, i64 0, i64 1, !dbg !11593
  %40 = load i32, i32* %arrayidx73, align 4, !dbg !11593
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.43, i64 0, i64 0), i32 %conv61, i32 %conv65, i32 %34, i32 %36, i32 %38, i32 %40) #8, !dbg !11593
  ret void, !dbg !11594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_eld_calc_baseline_block_size(i8* %eld) #0 !dbg !11595 {
entry:
  %eld.addr = alloca i8*, align 8
  store i8* %eld, i8** %eld.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eld.addr, metadata !11600, metadata !DIExpression()), !dbg !11601
  %0 = load i8*, i8** %eld.addr, align 8, !dbg !11602
  %call = call i32 @drm_eld_mnl(i8* %0) #8, !dbg !11603
  %add = add i32 16, %call, !dbg !11604
  %1 = load i8*, i8** %eld.addr, align 8, !dbg !11605
  %call1 = call i32 @drm_eld_sad_count(i8* %1) #8, !dbg !11606
  %mul = mul i32 %call1, 3, !dbg !11607
  %add2 = add i32 %add, %mul, !dbg !11608
  ret i32 %add2, !dbg !11609
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_eld_size(i8* %eld) #0 !dbg !11610 {
entry:
  %eld.addr = alloca i8*, align 8
  store i8* %eld, i8** %eld.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eld.addr, metadata !11611, metadata !DIExpression()), !dbg !11612
  %0 = load i8*, i8** %eld.addr, align 8, !dbg !11613
  %arrayidx = getelementptr i8, i8* %0, i64 2, !dbg !11613
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11613
  %conv = zext i8 %1 to i32, !dbg !11613
  %mul = mul i32 %conv, 4, !dbg !11614
  %add = add i32 4, %mul, !dbg !11615
  ret i32 %add, !dbg !11616
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_eld_mnl(i8* %eld) #0 !dbg !11617 {
entry:
  %eld.addr = alloca i8*, align 8
  store i8* %eld, i8** %eld.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eld.addr, metadata !11618, metadata !DIExpression()), !dbg !11619
  %0 = load i8*, i8** %eld.addr, align 8, !dbg !11620
  %arrayidx = getelementptr i8, i8* %0, i64 4, !dbg !11620
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11620
  %conv = zext i8 %1 to i32, !dbg !11620
  %and = and i32 %conv, 31, !dbg !11621
  %shr = ashr i32 %and, 0, !dbg !11622
  ret i32 %shr, !dbg !11623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_eld_sad_count(i8* %eld) #0 !dbg !11624 {
entry:
  %eld.addr = alloca i8*, align 8
  store i8* %eld, i8** %eld.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %eld.addr, metadata !11625, metadata !DIExpression()), !dbg !11626
  %0 = load i8*, i8** %eld.addr, align 8, !dbg !11627
  %arrayidx = getelementptr i8, i8* %0, i64 5, !dbg !11627
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11627
  %conv = zext i8 %1 to i32, !dbg !11627
  %and = and i32 %conv, 240, !dbg !11628
  %shr = ashr i32 %and, 4, !dbg !11629
  ret i32 %shr, !dbg !11630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_detailed_mode(%struct.detailed_timing* %timing, i8* %c) #0 !dbg !11631 {
entry:
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %c.addr = alloca i8*, align 8
  %closure = alloca %struct.detailed_mode_closure*, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  store i8* %c, i8** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure** %closure, metadata !11636, metadata !DIExpression()), !dbg !11638
  %0 = load i8*, i8** %c.addr, align 8, !dbg !11639
  %1 = bitcast i8* %0 to %struct.detailed_mode_closure*, !dbg !11639
  store %struct.detailed_mode_closure* %1, %struct.detailed_mode_closure** %closure, align 8, !dbg !11638
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !11640, metadata !DIExpression()), !dbg !11641
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !11642
  %3 = bitcast %struct.detailed_timing* %2 to i8*, !dbg !11644
  %call = call zeroext i1 @is_detailed_timing_descriptor(i8* %3) #8, !dbg !11645
  br i1 %call, label %if.end, label %if.then, !dbg !11646

if.then:                                          ; preds = %entry
  br label %return, !dbg !11647

if.end:                                           ; preds = %entry
  %4 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11648
  %connector = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %4, i32 0, i32 0, !dbg !11649
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !11649
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %5, i32 0, i32 0, !dbg !11650
  %6 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11650
  %7 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11651
  %edid = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %7, i32 0, i32 1, !dbg !11652
  %8 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !11652
  %9 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !11653
  %10 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11654
  %quirks = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %10, i32 0, i32 3, !dbg !11655
  %11 = load i32, i32* %quirks, align 4, !dbg !11655
  %call1 = call %struct.drm_display_mode* @drm_mode_detailed(%struct.drm_device* %6, %struct.edid* %8, %struct.detailed_timing* %9, i32 %11) #8, !dbg !11656
  store %struct.drm_display_mode* %call1, %struct.drm_display_mode** %newmode, align 8, !dbg !11657
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !11658
  %tobool = icmp ne %struct.drm_display_mode* %12, null, !dbg !11658
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !11660

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !11661

if.end3:                                          ; preds = %if.end
  %13 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11662
  %preferred = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %13, i32 0, i32 2, !dbg !11664
  %14 = load i8, i8* %preferred, align 8, !dbg !11664
  %tobool4 = trunc i8 %14 to i1, !dbg !11664
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !11665

if.then5:                                         ; preds = %if.end3
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !11666
  %type = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %15, i32 0, i32 28, !dbg !11667
  %16 = load i8, i8* %type, align 2, !dbg !11668
  %conv = zext i8 %16 to i32, !dbg !11668
  %or = or i32 %conv, 8, !dbg !11668
  %conv6 = trunc i32 %or to i8, !dbg !11668
  store i8 %conv6, i8* %type, align 2, !dbg !11668
  br label %if.end7, !dbg !11666

if.end7:                                          ; preds = %if.then5, %if.end3
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !11669
  call void @fixup_detailed_cea_mode_clock(%struct.drm_display_mode* %17) #8, !dbg !11670
  %18 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11671
  %connector8 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %18, i32 0, i32 0, !dbg !11672
  %19 = load %struct.drm_connector*, %struct.drm_connector** %connector8, align 8, !dbg !11672
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !11673
  call void @drm_mode_probed_add(%struct.drm_connector* %19, %struct.drm_display_mode* %20) #8, !dbg !11674
  %21 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11675
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %21, i32 0, i32 4, !dbg !11676
  %22 = load i32, i32* %modes, align 8, !dbg !11677
  %inc = add i32 %22, 1, !dbg !11677
  store i32 %inc, i32* %modes, align 8, !dbg !11677
  %23 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !11678
  %preferred9 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %23, i32 0, i32 2, !dbg !11679
  store i8 0, i8* %preferred9, align 8, !dbg !11680
  br label %return, !dbg !11681

return:                                           ; preds = %if.end7, %if.then2, %if.then
  ret void, !dbg !11681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @is_detailed_timing_descriptor(i8* %d) #0 !dbg !11682 {
entry:
  %d.addr = alloca i8*, align 8
  store i8* %d, i8** %d.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %d.addr, metadata !11683, metadata !DIExpression()), !dbg !11684
  %0 = load i8*, i8** %d.addr, align 8, !dbg !11685
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !11685
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11685
  %conv = zext i8 %1 to i32, !dbg !11685
  %cmp = icmp ne i32 %conv, 0, !dbg !11686
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !11687

lor.rhs:                                          ; preds = %entry
  %2 = load i8*, i8** %d.addr, align 8, !dbg !11688
  %arrayidx2 = getelementptr i8, i8* %2, i64 1, !dbg !11688
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !11688
  %conv3 = zext i8 %3 to i32, !dbg !11688
  %cmp4 = icmp ne i32 %conv3, 0, !dbg !11689
  br label %lor.end, !dbg !11687

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp4, %lor.rhs ]
  ret i1 %4, !dbg !11690
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_display_mode* @drm_mode_detailed(%struct.drm_device* %dev, %struct.edid* %edid, %struct.detailed_timing* %timing, i32 %quirks) #0 !dbg !11691 {
entry:
  %retval = alloca %struct.drm_display_mode*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %quirks.addr = alloca i32, align 4
  %mode = alloca %struct.drm_display_mode*, align 8
  %pt = alloca %struct.detailed_pixel_timing*, align 8
  %hactive = alloca i32, align 4
  %vactive = alloca i32, align 4
  %hblank = alloca i32, align 4
  %vblank = alloca i32, align 4
  %hsync_offset = alloca i32, align 4
  %hsync_pulse_width = alloca i32, align 4
  %vsync_offset = alloca i32, align 4
  %vsync_pulse_width = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !11694, metadata !DIExpression()), !dbg !11695
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !11696, metadata !DIExpression()), !dbg !11697
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !11698, metadata !DIExpression()), !dbg !11699
  store i32 %quirks, i32* %quirks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quirks.addr, metadata !11700, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !11702, metadata !DIExpression()), !dbg !11703
  call void @llvm.dbg.declare(metadata %struct.detailed_pixel_timing** %pt, metadata !11704, metadata !DIExpression()), !dbg !11705
  %0 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !11706
  %data = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %0, i32 0, i32 1, !dbg !11707
  %pixel_data = bitcast %union.anon.0* %data to %struct.detailed_pixel_timing*, !dbg !11708
  store %struct.detailed_pixel_timing* %pixel_data, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11705
  call void @llvm.dbg.declare(metadata i32* %hactive, metadata !11709, metadata !DIExpression()), !dbg !11710
  %1 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11711
  %hactive_hblank_hi = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %1, i32 0, i32 2, !dbg !11712
  %2 = load i8, i8* %hactive_hblank_hi, align 1, !dbg !11712
  %conv = zext i8 %2 to i32, !dbg !11711
  %and = and i32 %conv, 240, !dbg !11713
  %shl = shl i32 %and, 4, !dbg !11714
  %3 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11715
  %hactive_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %3, i32 0, i32 0, !dbg !11716
  %4 = load i8, i8* %hactive_lo, align 1, !dbg !11716
  %conv1 = zext i8 %4 to i32, !dbg !11715
  %or = or i32 %shl, %conv1, !dbg !11717
  store i32 %or, i32* %hactive, align 4, !dbg !11710
  call void @llvm.dbg.declare(metadata i32* %vactive, metadata !11718, metadata !DIExpression()), !dbg !11719
  %5 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11720
  %vactive_vblank_hi = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %5, i32 0, i32 5, !dbg !11721
  %6 = load i8, i8* %vactive_vblank_hi, align 1, !dbg !11721
  %conv2 = zext i8 %6 to i32, !dbg !11720
  %and3 = and i32 %conv2, 240, !dbg !11722
  %shl4 = shl i32 %and3, 4, !dbg !11723
  %7 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11724
  %vactive_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %7, i32 0, i32 3, !dbg !11725
  %8 = load i8, i8* %vactive_lo, align 1, !dbg !11725
  %conv5 = zext i8 %8 to i32, !dbg !11724
  %or6 = or i32 %shl4, %conv5, !dbg !11726
  store i32 %or6, i32* %vactive, align 4, !dbg !11719
  call void @llvm.dbg.declare(metadata i32* %hblank, metadata !11727, metadata !DIExpression()), !dbg !11728
  %9 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11729
  %hactive_hblank_hi7 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %9, i32 0, i32 2, !dbg !11730
  %10 = load i8, i8* %hactive_hblank_hi7, align 1, !dbg !11730
  %conv8 = zext i8 %10 to i32, !dbg !11729
  %and9 = and i32 %conv8, 15, !dbg !11731
  %shl10 = shl i32 %and9, 8, !dbg !11732
  %11 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11733
  %hblank_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %11, i32 0, i32 1, !dbg !11734
  %12 = load i8, i8* %hblank_lo, align 1, !dbg !11734
  %conv11 = zext i8 %12 to i32, !dbg !11733
  %or12 = or i32 %shl10, %conv11, !dbg !11735
  store i32 %or12, i32* %hblank, align 4, !dbg !11728
  call void @llvm.dbg.declare(metadata i32* %vblank, metadata !11736, metadata !DIExpression()), !dbg !11737
  %13 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11738
  %vactive_vblank_hi13 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %13, i32 0, i32 5, !dbg !11739
  %14 = load i8, i8* %vactive_vblank_hi13, align 1, !dbg !11739
  %conv14 = zext i8 %14 to i32, !dbg !11738
  %and15 = and i32 %conv14, 15, !dbg !11740
  %shl16 = shl i32 %and15, 8, !dbg !11741
  %15 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11742
  %vblank_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %15, i32 0, i32 4, !dbg !11743
  %16 = load i8, i8* %vblank_lo, align 1, !dbg !11743
  %conv17 = zext i8 %16 to i32, !dbg !11742
  %or18 = or i32 %shl16, %conv17, !dbg !11744
  store i32 %or18, i32* %vblank, align 4, !dbg !11737
  call void @llvm.dbg.declare(metadata i32* %hsync_offset, metadata !11745, metadata !DIExpression()), !dbg !11746
  %17 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11747
  %hsync_vsync_offset_pulse_width_hi = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %17, i32 0, i32 9, !dbg !11748
  %18 = load i8, i8* %hsync_vsync_offset_pulse_width_hi, align 1, !dbg !11748
  %conv19 = zext i8 %18 to i32, !dbg !11747
  %and20 = and i32 %conv19, 192, !dbg !11749
  %shl21 = shl i32 %and20, 2, !dbg !11750
  %19 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11751
  %hsync_offset_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %19, i32 0, i32 6, !dbg !11752
  %20 = load i8, i8* %hsync_offset_lo, align 1, !dbg !11752
  %conv22 = zext i8 %20 to i32, !dbg !11751
  %or23 = or i32 %shl21, %conv22, !dbg !11753
  store i32 %or23, i32* %hsync_offset, align 4, !dbg !11746
  call void @llvm.dbg.declare(metadata i32* %hsync_pulse_width, metadata !11754, metadata !DIExpression()), !dbg !11755
  %21 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11756
  %hsync_vsync_offset_pulse_width_hi24 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %21, i32 0, i32 9, !dbg !11757
  %22 = load i8, i8* %hsync_vsync_offset_pulse_width_hi24, align 1, !dbg !11757
  %conv25 = zext i8 %22 to i32, !dbg !11756
  %and26 = and i32 %conv25, 48, !dbg !11758
  %shl27 = shl i32 %and26, 4, !dbg !11759
  %23 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11760
  %hsync_pulse_width_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %23, i32 0, i32 7, !dbg !11761
  %24 = load i8, i8* %hsync_pulse_width_lo, align 1, !dbg !11761
  %conv28 = zext i8 %24 to i32, !dbg !11760
  %or29 = or i32 %shl27, %conv28, !dbg !11762
  store i32 %or29, i32* %hsync_pulse_width, align 4, !dbg !11755
  call void @llvm.dbg.declare(metadata i32* %vsync_offset, metadata !11763, metadata !DIExpression()), !dbg !11764
  %25 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11765
  %hsync_vsync_offset_pulse_width_hi30 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %25, i32 0, i32 9, !dbg !11766
  %26 = load i8, i8* %hsync_vsync_offset_pulse_width_hi30, align 1, !dbg !11766
  %conv31 = zext i8 %26 to i32, !dbg !11765
  %and32 = and i32 %conv31, 12, !dbg !11767
  %shl33 = shl i32 %and32, 2, !dbg !11768
  %27 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11769
  %vsync_offset_pulse_width_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %27, i32 0, i32 8, !dbg !11770
  %28 = load i8, i8* %vsync_offset_pulse_width_lo, align 1, !dbg !11770
  %conv34 = zext i8 %28 to i32, !dbg !11769
  %shr = ashr i32 %conv34, 4, !dbg !11771
  %or35 = or i32 %shl33, %shr, !dbg !11772
  store i32 %or35, i32* %vsync_offset, align 4, !dbg !11764
  call void @llvm.dbg.declare(metadata i32* %vsync_pulse_width, metadata !11773, metadata !DIExpression()), !dbg !11774
  %29 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11775
  %hsync_vsync_offset_pulse_width_hi36 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %29, i32 0, i32 9, !dbg !11776
  %30 = load i8, i8* %hsync_vsync_offset_pulse_width_hi36, align 1, !dbg !11776
  %conv37 = zext i8 %30 to i32, !dbg !11775
  %and38 = and i32 %conv37, 3, !dbg !11777
  %shl39 = shl i32 %and38, 4, !dbg !11778
  %31 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11779
  %vsync_offset_pulse_width_lo40 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %31, i32 0, i32 8, !dbg !11780
  %32 = load i8, i8* %vsync_offset_pulse_width_lo40, align 1, !dbg !11780
  %conv41 = zext i8 %32 to i32, !dbg !11779
  %and42 = and i32 %conv41, 15, !dbg !11781
  %or43 = or i32 %shl39, %and42, !dbg !11782
  store i32 %or43, i32* %vsync_pulse_width, align 4, !dbg !11774
  %33 = load i32, i32* %hactive, align 4, !dbg !11783
  %cmp = icmp ult i32 %33, 64, !dbg !11785
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11786

lor.lhs.false:                                    ; preds = %entry
  %34 = load i32, i32* %vactive, align 4, !dbg !11787
  %cmp45 = icmp ult i32 %34, 64, !dbg !11788
  br i1 %cmp45, label %if.then, label %if.end, !dbg !11789

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !11790
  br label %return, !dbg !11790

if.end:                                           ; preds = %lor.lhs.false
  %35 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11791
  %misc = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %35, i32 0, i32 15, !dbg !11793
  %36 = load i8, i8* %misc, align 1, !dbg !11793
  %conv47 = zext i8 %36 to i32, !dbg !11791
  %and48 = and i32 %conv47, 32, !dbg !11794
  %tobool = icmp ne i32 %and48, 0, !dbg !11794
  br i1 %tobool, label %if.then49, label %if.end50, !dbg !11795

if.then49:                                        ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.44, i64 0, i64 0)) #8, !dbg !11796
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !11798
  br label %return, !dbg !11798

if.end50:                                         ; preds = %if.end
  %37 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11799
  %misc51 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %37, i32 0, i32 15, !dbg !11801
  %38 = load i8, i8* %misc51, align 1, !dbg !11801
  %conv52 = zext i8 %38 to i32, !dbg !11799
  %and53 = and i32 %conv52, 24, !dbg !11802
  %tobool54 = icmp ne i32 %and53, 0, !dbg !11802
  br i1 %tobool54, label %if.end56, label %if.then55, !dbg !11803

if.then55:                                        ; preds = %if.end50
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45, i64 0, i64 0)) #8, !dbg !11804
  br label %if.end56, !dbg !11806

if.end56:                                         ; preds = %if.then55, %if.end50
  %39 = load i32, i32* %hsync_pulse_width, align 4, !dbg !11807
  %tobool57 = icmp ne i32 %39, 0, !dbg !11807
  br i1 %tobool57, label %lor.lhs.false58, label %if.then60, !dbg !11809

lor.lhs.false58:                                  ; preds = %if.end56
  %40 = load i32, i32* %vsync_pulse_width, align 4, !dbg !11810
  %tobool59 = icmp ne i32 %40, 0, !dbg !11810
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !11811

if.then60:                                        ; preds = %lor.lhs.false58, %if.end56
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.46, i64 0, i64 0)) #8, !dbg !11812
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !11814
  br label %return, !dbg !11814

if.end61:                                         ; preds = %lor.lhs.false58
  %41 = load i32, i32* %quirks.addr, align 4, !dbg !11815
  %and62 = and i32 %41, 128, !dbg !11817
  %tobool63 = icmp ne i32 %and62, 0, !dbg !11817
  br i1 %tobool63, label %if.then64, label %if.end68, !dbg !11818

if.then64:                                        ; preds = %if.end61
  %42 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11819
  %43 = load i32, i32* %hactive, align 4, !dbg !11821
  %44 = load i32, i32* %vactive, align 4, !dbg !11822
  %call = call %struct.drm_display_mode* @drm_cvt_mode(%struct.drm_device* %42, i32 %43, i32 %44, i32 60, i1 zeroext true, i1 zeroext false, i1 zeroext false) #8, !dbg !11823
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %mode, align 8, !dbg !11824
  %45 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11825
  %tobool65 = icmp ne %struct.drm_display_mode* %45, null, !dbg !11825
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !11827

if.then66:                                        ; preds = %if.then64
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !11828
  br label %return, !dbg !11828

if.end67:                                         ; preds = %if.then64
  br label %set_size, !dbg !11829

if.end68:                                         ; preds = %if.end61
  %46 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11830
  %call69 = call %struct.drm_display_mode* @drm_mode_create(%struct.drm_device* %46) #8, !dbg !11831
  store %struct.drm_display_mode* %call69, %struct.drm_display_mode** %mode, align 8, !dbg !11832
  %47 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11833
  %tobool70 = icmp ne %struct.drm_display_mode* %47, null, !dbg !11833
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !11835

if.then71:                                        ; preds = %if.end68
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !11836
  br label %return, !dbg !11836

if.end72:                                         ; preds = %if.end68
  %48 = load i32, i32* %quirks.addr, align 4, !dbg !11837
  %and73 = and i32 %48, 2, !dbg !11839
  %tobool74 = icmp ne i32 %and73, 0, !dbg !11839
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !11840

if.then75:                                        ; preds = %if.end72
  %49 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !11841
  %pixel_clock = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %49, i32 0, i32 0, !dbg !11842
  store i16 1088, i16* %pixel_clock, align 1, !dbg !11843
  br label %if.end76, !dbg !11841

if.end76:                                         ; preds = %if.then75, %if.end72
  %50 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !11844
  %pixel_clock77 = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %50, i32 0, i32 0, !dbg !11844
  %51 = load i16, i16* %pixel_clock77, align 1, !dbg !11844
  %conv78 = zext i16 %51 to i32, !dbg !11844
  %mul = mul i32 %conv78, 10, !dbg !11845
  %52 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11846
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %52, i32 0, i32 0, !dbg !11847
  store i32 %mul, i32* %clock, align 8, !dbg !11848
  %53 = load i32, i32* %hactive, align 4, !dbg !11849
  %conv79 = trunc i32 %53 to i16, !dbg !11849
  %54 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11850
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %54, i32 0, i32 1, !dbg !11851
  store i16 %conv79, i16* %hdisplay, align 4, !dbg !11852
  %55 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11853
  %hdisplay80 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %55, i32 0, i32 1, !dbg !11854
  %56 = load i16, i16* %hdisplay80, align 4, !dbg !11854
  %conv81 = zext i16 %56 to i32, !dbg !11853
  %57 = load i32, i32* %hsync_offset, align 4, !dbg !11855
  %add = add i32 %conv81, %57, !dbg !11856
  %conv82 = trunc i32 %add to i16, !dbg !11853
  %58 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11857
  %hsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %58, i32 0, i32 2, !dbg !11858
  store i16 %conv82, i16* %hsync_start, align 2, !dbg !11859
  %59 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11860
  %hsync_start83 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %59, i32 0, i32 2, !dbg !11861
  %60 = load i16, i16* %hsync_start83, align 2, !dbg !11861
  %conv84 = zext i16 %60 to i32, !dbg !11860
  %61 = load i32, i32* %hsync_pulse_width, align 4, !dbg !11862
  %add85 = add i32 %conv84, %61, !dbg !11863
  %conv86 = trunc i32 %add85 to i16, !dbg !11860
  %62 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11864
  %hsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %62, i32 0, i32 3, !dbg !11865
  store i16 %conv86, i16* %hsync_end, align 8, !dbg !11866
  %63 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11867
  %hdisplay87 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %63, i32 0, i32 1, !dbg !11868
  %64 = load i16, i16* %hdisplay87, align 4, !dbg !11868
  %conv88 = zext i16 %64 to i32, !dbg !11867
  %65 = load i32, i32* %hblank, align 4, !dbg !11869
  %add89 = add i32 %conv88, %65, !dbg !11870
  %conv90 = trunc i32 %add89 to i16, !dbg !11867
  %66 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11871
  %htotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %66, i32 0, i32 4, !dbg !11872
  store i16 %conv90, i16* %htotal, align 2, !dbg !11873
  %67 = load i32, i32* %vactive, align 4, !dbg !11874
  %conv91 = trunc i32 %67 to i16, !dbg !11874
  %68 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11875
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %68, i32 0, i32 6, !dbg !11876
  store i16 %conv91, i16* %vdisplay, align 2, !dbg !11877
  %69 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11878
  %vdisplay92 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %69, i32 0, i32 6, !dbg !11879
  %70 = load i16, i16* %vdisplay92, align 2, !dbg !11879
  %conv93 = zext i16 %70 to i32, !dbg !11878
  %71 = load i32, i32* %vsync_offset, align 4, !dbg !11880
  %add94 = add i32 %conv93, %71, !dbg !11881
  %conv95 = trunc i32 %add94 to i16, !dbg !11878
  %72 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11882
  %vsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %72, i32 0, i32 7, !dbg !11883
  store i16 %conv95, i16* %vsync_start, align 8, !dbg !11884
  %73 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11885
  %vsync_start96 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %73, i32 0, i32 7, !dbg !11886
  %74 = load i16, i16* %vsync_start96, align 8, !dbg !11886
  %conv97 = zext i16 %74 to i32, !dbg !11885
  %75 = load i32, i32* %vsync_pulse_width, align 4, !dbg !11887
  %add98 = add i32 %conv97, %75, !dbg !11888
  %conv99 = trunc i32 %add98 to i16, !dbg !11885
  %76 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11889
  %vsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %76, i32 0, i32 8, !dbg !11890
  store i16 %conv99, i16* %vsync_end, align 2, !dbg !11891
  %77 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11892
  %vdisplay100 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %77, i32 0, i32 6, !dbg !11893
  %78 = load i16, i16* %vdisplay100, align 2, !dbg !11893
  %conv101 = zext i16 %78 to i32, !dbg !11892
  %79 = load i32, i32* %vblank, align 4, !dbg !11894
  %add102 = add i32 %conv101, %79, !dbg !11895
  %conv103 = trunc i32 %add102 to i16, !dbg !11892
  %80 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11896
  %vtotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %80, i32 0, i32 9, !dbg !11897
  store i16 %conv103, i16* %vtotal, align 4, !dbg !11898
  %81 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11899
  %hsync_end104 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %81, i32 0, i32 3, !dbg !11901
  %82 = load i16, i16* %hsync_end104, align 8, !dbg !11901
  %conv105 = zext i16 %82 to i32, !dbg !11899
  %83 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11902
  %htotal106 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %83, i32 0, i32 4, !dbg !11903
  %84 = load i16, i16* %htotal106, align 2, !dbg !11903
  %conv107 = zext i16 %84 to i32, !dbg !11902
  %cmp108 = icmp sgt i32 %conv105, %conv107, !dbg !11904
  br i1 %cmp108, label %if.then110, label %if.end116, !dbg !11905

if.then110:                                       ; preds = %if.end76
  %85 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11906
  %hsync_end111 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %85, i32 0, i32 3, !dbg !11907
  %86 = load i16, i16* %hsync_end111, align 8, !dbg !11907
  %conv112 = zext i16 %86 to i32, !dbg !11906
  %add113 = add i32 %conv112, 1, !dbg !11908
  %conv114 = trunc i32 %add113 to i16, !dbg !11906
  %87 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11909
  %htotal115 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %87, i32 0, i32 4, !dbg !11910
  store i16 %conv114, i16* %htotal115, align 2, !dbg !11911
  br label %if.end116, !dbg !11909

if.end116:                                        ; preds = %if.then110, %if.end76
  %88 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11912
  %vsync_end117 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %88, i32 0, i32 8, !dbg !11914
  %89 = load i16, i16* %vsync_end117, align 2, !dbg !11914
  %conv118 = zext i16 %89 to i32, !dbg !11912
  %90 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11915
  %vtotal119 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %90, i32 0, i32 9, !dbg !11916
  %91 = load i16, i16* %vtotal119, align 4, !dbg !11916
  %conv120 = zext i16 %91 to i32, !dbg !11915
  %cmp121 = icmp sgt i32 %conv118, %conv120, !dbg !11917
  br i1 %cmp121, label %if.then123, label %if.end129, !dbg !11918

if.then123:                                       ; preds = %if.end116
  %92 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11919
  %vsync_end124 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %92, i32 0, i32 8, !dbg !11920
  %93 = load i16, i16* %vsync_end124, align 2, !dbg !11920
  %conv125 = zext i16 %93 to i32, !dbg !11919
  %add126 = add i32 %conv125, 1, !dbg !11921
  %conv127 = trunc i32 %add126 to i16, !dbg !11919
  %94 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11922
  %vtotal128 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %94, i32 0, i32 9, !dbg !11923
  store i16 %conv127, i16* %vtotal128, align 4, !dbg !11924
  br label %if.end129, !dbg !11922

if.end129:                                        ; preds = %if.then123, %if.end116
  %95 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11925
  %96 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11926
  call void @drm_mode_do_interlace_quirk(%struct.drm_display_mode* %95, %struct.detailed_pixel_timing* %96) #8, !dbg !11927
  %97 = load i32, i32* %quirks.addr, align 4, !dbg !11928
  %and130 = and i32 %97, 64, !dbg !11930
  %tobool131 = icmp ne i32 %and130, 0, !dbg !11930
  br i1 %tobool131, label %if.then132, label %if.end137, !dbg !11931

if.then132:                                       ; preds = %if.end129
  %98 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11932
  %misc133 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %98, i32 0, i32 15, !dbg !11934
  %99 = load i8, i8* %misc133, align 1, !dbg !11935
  %conv134 = zext i8 %99 to i32, !dbg !11935
  %or135 = or i32 %conv134, 6, !dbg !11935
  %conv136 = trunc i32 %or135 to i8, !dbg !11935
  store i8 %conv136, i8* %misc133, align 1, !dbg !11935
  br label %if.end137, !dbg !11936

if.end137:                                        ; preds = %if.then132, %if.end129
  %100 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11937
  %misc138 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %100, i32 0, i32 15, !dbg !11938
  %101 = load i8, i8* %misc138, align 1, !dbg !11938
  %conv139 = zext i8 %101 to i32, !dbg !11937
  %and140 = and i32 %conv139, 2, !dbg !11939
  %tobool141 = icmp ne i32 %and140, 0, !dbg !11940
  %102 = zext i1 %tobool141 to i64, !dbg !11940
  %cond = select i1 %tobool141, i32 1, i32 2, !dbg !11940
  %103 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11941
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %103, i32 0, i32 11, !dbg !11942
  %104 = load i32, i32* %flags, align 8, !dbg !11943
  %or142 = or i32 %104, %cond, !dbg !11943
  store i32 %or142, i32* %flags, align 8, !dbg !11943
  %105 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11944
  %misc143 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %105, i32 0, i32 15, !dbg !11945
  %106 = load i8, i8* %misc143, align 1, !dbg !11945
  %conv144 = zext i8 %106 to i32, !dbg !11944
  %and145 = and i32 %conv144, 4, !dbg !11946
  %tobool146 = icmp ne i32 %and145, 0, !dbg !11947
  %107 = zext i1 %tobool146 to i64, !dbg !11947
  %cond147 = select i1 %tobool146, i32 4, i32 8, !dbg !11947
  %108 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11948
  %flags148 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %108, i32 0, i32 11, !dbg !11949
  %109 = load i32, i32* %flags148, align 8, !dbg !11950
  %or149 = or i32 %109, %cond147, !dbg !11950
  store i32 %or149, i32* %flags148, align 8, !dbg !11950
  br label %set_size, !dbg !11948

set_size:                                         ; preds = %if.end137, %if.end67
  call void @llvm.dbg.label(metadata !11951), !dbg !11952
  %110 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11953
  %width_mm_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %110, i32 0, i32 10, !dbg !11954
  %111 = load i8, i8* %width_mm_lo, align 1, !dbg !11954
  %conv150 = zext i8 %111 to i32, !dbg !11953
  %112 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11955
  %width_height_mm_hi = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %112, i32 0, i32 12, !dbg !11956
  %113 = load i8, i8* %width_height_mm_hi, align 1, !dbg !11956
  %conv151 = zext i8 %113 to i32, !dbg !11955
  %and152 = and i32 %conv151, 240, !dbg !11957
  %shl153 = shl i32 %and152, 4, !dbg !11958
  %or154 = or i32 %conv150, %shl153, !dbg !11959
  %conv155 = trunc i32 %or154 to i16, !dbg !11953
  %114 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11960
  %width_mm = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %114, i32 0, i32 26, !dbg !11961
  store i16 %conv155, i16* %width_mm, align 2, !dbg !11962
  %115 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11963
  %height_mm_lo = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %115, i32 0, i32 11, !dbg !11964
  %116 = load i8, i8* %height_mm_lo, align 1, !dbg !11964
  %conv156 = zext i8 %116 to i32, !dbg !11963
  %117 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt, align 8, !dbg !11965
  %width_height_mm_hi157 = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %117, i32 0, i32 12, !dbg !11966
  %118 = load i8, i8* %width_height_mm_hi157, align 1, !dbg !11966
  %conv158 = zext i8 %118 to i32, !dbg !11965
  %and159 = and i32 %conv158, 15, !dbg !11967
  %shl160 = shl i32 %and159, 8, !dbg !11968
  %or161 = or i32 %conv156, %shl160, !dbg !11969
  %conv162 = trunc i32 %or161 to i16, !dbg !11963
  %119 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11970
  %height_mm = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %119, i32 0, i32 27, !dbg !11971
  store i16 %conv162, i16* %height_mm, align 4, !dbg !11972
  %120 = load i32, i32* %quirks.addr, align 4, !dbg !11973
  %and163 = and i32 %120, 8, !dbg !11975
  %tobool164 = icmp ne i32 %and163, 0, !dbg !11975
  br i1 %tobool164, label %if.then165, label %if.end174, !dbg !11976

if.then165:                                       ; preds = %set_size
  %121 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11977
  %width_mm166 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %121, i32 0, i32 26, !dbg !11979
  %122 = load i16, i16* %width_mm166, align 2, !dbg !11980
  %conv167 = zext i16 %122 to i32, !dbg !11980
  %mul168 = mul i32 %conv167, 10, !dbg !11980
  %conv169 = trunc i32 %mul168 to i16, !dbg !11980
  store i16 %conv169, i16* %width_mm166, align 2, !dbg !11980
  %123 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11981
  %height_mm170 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %123, i32 0, i32 27, !dbg !11982
  %124 = load i16, i16* %height_mm170, align 4, !dbg !11983
  %conv171 = zext i16 %124 to i32, !dbg !11983
  %mul172 = mul i32 %conv171, 10, !dbg !11983
  %conv173 = trunc i32 %mul172 to i16, !dbg !11983
  store i16 %conv173, i16* %height_mm170, align 4, !dbg !11983
  br label %if.end174, !dbg !11984

if.end174:                                        ; preds = %if.then165, %set_size
  %125 = load i32, i32* %quirks.addr, align 4, !dbg !11985
  %and175 = and i32 %125, 16, !dbg !11987
  %tobool176 = icmp ne i32 %and175, 0, !dbg !11987
  br i1 %tobool176, label %if.then177, label %if.end186, !dbg !11988

if.then177:                                       ; preds = %if.end174
  %126 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !11989
  %width_cm = getelementptr inbounds %struct.edid, %struct.edid* %126, i32 0, i32 9, !dbg !11991
  %127 = load i8, i8* %width_cm, align 1, !dbg !11991
  %conv178 = zext i8 %127 to i32, !dbg !11989
  %mul179 = mul i32 %conv178, 10, !dbg !11992
  %conv180 = trunc i32 %mul179 to i16, !dbg !11989
  %128 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11993
  %width_mm181 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %128, i32 0, i32 26, !dbg !11994
  store i16 %conv180, i16* %width_mm181, align 2, !dbg !11995
  %129 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !11996
  %height_cm = getelementptr inbounds %struct.edid, %struct.edid* %129, i32 0, i32 10, !dbg !11997
  %130 = load i8, i8* %height_cm, align 1, !dbg !11997
  %conv182 = zext i8 %130 to i32, !dbg !11996
  %mul183 = mul i32 %conv182, 10, !dbg !11998
  %conv184 = trunc i32 %mul183 to i16, !dbg !11996
  %131 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !11999
  %height_mm185 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %131, i32 0, i32 27, !dbg !12000
  store i16 %conv184, i16* %height_mm185, align 4, !dbg !12001
  br label %if.end186, !dbg !12002

if.end186:                                        ; preds = %if.then177, %if.end174
  %132 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12003
  %type = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %132, i32 0, i32 28, !dbg !12004
  store i8 64, i8* %type, align 2, !dbg !12005
  %133 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12006
  call void @drm_mode_set_name(%struct.drm_display_mode* %133) #8, !dbg !12007
  %134 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12008
  store %struct.drm_display_mode* %134, %struct.drm_display_mode** %retval, align 8, !dbg !12009
  br label %return, !dbg !12009

return:                                           ; preds = %if.end186, %if.then71, %if.then66, %if.then60, %if.then49, %if.then
  %135 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval, align 8, !dbg !12010
  ret %struct.drm_display_mode* %135, !dbg !12010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fixup_detailed_cea_mode_clock(%struct.drm_display_mode* %mode) #0 !dbg !12011 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !12012
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %cea_mode = alloca %struct.drm_display_mode*, align 8
  %clock1 = alloca i32, align 4
  %clock2 = alloca i32, align 4
  %clock = alloca i32, align 4
  %vic = alloca i8, align 1
  %type = alloca i8*, align 8
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x14 = alloca i32, align 4
  %tmp17 = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !12016, metadata !DIExpression()), !dbg !12017
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %cea_mode, metadata !12018, metadata !DIExpression()), !dbg !12019
  call void @llvm.dbg.declare(metadata i32* %clock1, metadata !12020, metadata !DIExpression()), !dbg !12021
  call void @llvm.dbg.declare(metadata i32* %clock2, metadata !12022, metadata !DIExpression()), !dbg !12023
  call void @llvm.dbg.declare(metadata i32* %clock, metadata !12024, metadata !DIExpression()), !dbg !12025
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !12026, metadata !DIExpression()), !dbg !12027
  call void @llvm.dbg.declare(metadata i8** %type, metadata !12028, metadata !DIExpression()), !dbg !12029
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12030
  %call = call zeroext i8 @drm_match_cea_mode_clock_tolerance(%struct.drm_display_mode* %0, i32 5) #8, !dbg !12031
  store i8 %call, i8* %vic, align 1, !dbg !12032
  %1 = load i8, i8* %vic, align 1, !dbg !12033
  %call1 = call zeroext i1 @drm_valid_cea_vic(i8 zeroext %1) #8, !dbg !12034
  br i1 %call1, label %if.then, label %if.else, !dbg !12035

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.47, i64 0, i64 0), i8** %type, align 8, !dbg !12036
  %2 = load i8, i8* %vic, align 1, !dbg !12037
  store i8 %2, i8* %vic.addr.i, align 1
  %3 = load i8, i8* %vic.addr.i, align 1, !dbg !12038
  %conv.i = zext i8 %3 to i32, !dbg !12038
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !12039
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !12040

land.lhs.true.i:                                  ; preds = %if.then
  %4 = load i8, i8* %vic.addr.i, align 1, !dbg !12041
  %conv4.i = zext i8 %4 to i64, !dbg !12041
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !12042
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !12043

if.then.i:                                        ; preds = %land.lhs.true.i
  %5 = load i8, i8* %vic.addr.i, align 1, !dbg !12044
  %conv7.i = zext i8 %5 to i32, !dbg !12044
  %sub.i = sub i32 %conv7.i, 1, !dbg !12045
  %idxprom.i = sext i32 %sub.i to i64, !dbg !12046
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !12046
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !12047
  br label %cea_mode_for_vic.exit, !dbg !12047

if.end.i:                                         ; preds = %land.lhs.true.i, %if.then
  %6 = load i8, i8* %vic.addr.i, align 1, !dbg !12048
  %conv8.i = zext i8 %6 to i32, !dbg !12048
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !12049
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !12050

land.lhs.true11.i:                                ; preds = %if.end.i
  %7 = load i8, i8* %vic.addr.i, align 1, !dbg !12051
  %conv12.i = zext i8 %7 to i64, !dbg !12051
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !12052
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !12053

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %8 = load i8, i8* %vic.addr.i, align 1, !dbg !12054
  %conv16.i = zext i8 %8 to i32, !dbg !12054
  %sub17.i = sub i32 %conv16.i, 193, !dbg !12055
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !12056
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !12056
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !12057
  br label %cea_mode_for_vic.exit, !dbg !12057

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !12058
  br label %cea_mode_for_vic.exit, !dbg !12058

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !12059
  store %struct.drm_display_mode* %9, %struct.drm_display_mode** %cea_mode, align 8, !dbg !12060
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !12061
  %clock3 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 0, !dbg !12062
  %11 = load i32, i32* %clock3, align 8, !dbg !12062
  store i32 %11, i32* %clock1, align 4, !dbg !12063
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !12064
  %call4 = call i32 @cea_mode_alternate_clock(%struct.drm_display_mode* %12) #8, !dbg !12065
  store i32 %call4, i32* %clock2, align 4, !dbg !12066
  br label %if.end11, !dbg !12067

if.else:                                          ; preds = %entry
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12068
  %call5 = call zeroext i8 @drm_match_hdmi_mode_clock_tolerance(%struct.drm_display_mode* %13, i32 5) #8, !dbg !12070
  store i8 %call5, i8* %vic, align 1, !dbg !12071
  %14 = load i8, i8* %vic, align 1, !dbg !12072
  %call6 = call zeroext i1 @drm_valid_hdmi_vic(i8 zeroext %14) #8, !dbg !12074
  br i1 %call6, label %if.then7, label %if.else10, !dbg !12075

if.then7:                                         ; preds = %if.else
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8** %type, align 8, !dbg !12076
  %15 = load i8, i8* %vic, align 1, !dbg !12078
  %idxprom = zext i8 %15 to i64, !dbg !12079
  %arrayidx = getelementptr [5 x %struct.drm_display_mode], [5 x %struct.drm_display_mode]* @edid_4k_modes, i64 0, i64 %idxprom, !dbg !12079
  store %struct.drm_display_mode* %arrayidx, %struct.drm_display_mode** %cea_mode, align 8, !dbg !12080
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !12081
  %clock8 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %16, i32 0, i32 0, !dbg !12082
  %17 = load i32, i32* %clock8, align 8, !dbg !12082
  store i32 %17, i32* %clock1, align 4, !dbg !12083
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %cea_mode, align 8, !dbg !12084
  %call9 = call i32 @hdmi_mode_alternate_clock(%struct.drm_display_mode* %18) #8, !dbg !12085
  store i32 %call9, i32* %clock2, align 4, !dbg !12086
  br label %if.end, !dbg !12087

if.else10:                                        ; preds = %if.else
  br label %return, !dbg !12088

if.end:                                           ; preds = %if.then7
  br label %if.end11

if.end11:                                         ; preds = %if.end, %cea_mode_for_vic.exit
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !12090, metadata !DIExpression()), !dbg !12093
  %19 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12093
  %clock12 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %19, i32 0, i32 0, !dbg !12093
  %20 = load i32, i32* %clock12, align 8, !dbg !12093
  %21 = load i32, i32* %clock1, align 4, !dbg !12093
  %sub = sub i32 %20, %21, !dbg !12093
  store i32 %sub, i32* %__x, align 4, !dbg !12093
  %22 = load i32, i32* %__x, align 4, !dbg !12093
  %cmp = icmp slt i32 %22, 0, !dbg !12093
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12093

cond.true:                                        ; preds = %if.end11
  %23 = load i32, i32* %__x, align 4, !dbg !12093
  %sub13 = sub i32 0, %23, !dbg !12093
  br label %cond.end, !dbg !12093

cond.false:                                       ; preds = %if.end11
  %24 = load i32, i32* %__x, align 4, !dbg !12093
  br label %cond.end, !dbg !12093

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub13, %cond.true ], [ %24, %cond.false ], !dbg !12093
  store i32 %cond, i32* %tmp, align 4, !dbg !12093
  %25 = load i32, i32* %tmp, align 4, !dbg !12093
  call void @llvm.dbg.declare(metadata i32* %__x14, metadata !12094, metadata !DIExpression()), !dbg !12096
  %26 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12096
  %clock15 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %26, i32 0, i32 0, !dbg !12096
  %27 = load i32, i32* %clock15, align 8, !dbg !12096
  %28 = load i32, i32* %clock2, align 4, !dbg !12096
  %sub16 = sub i32 %27, %28, !dbg !12096
  store i32 %sub16, i32* %__x14, align 4, !dbg !12096
  %29 = load i32, i32* %__x14, align 4, !dbg !12096
  %cmp18 = icmp slt i32 %29, 0, !dbg !12096
  br i1 %cmp18, label %cond.true19, label %cond.false21, !dbg !12096

cond.true19:                                      ; preds = %cond.end
  %30 = load i32, i32* %__x14, align 4, !dbg !12096
  %sub20 = sub i32 0, %30, !dbg !12096
  br label %cond.end22, !dbg !12096

cond.false21:                                     ; preds = %cond.end
  %31 = load i32, i32* %__x14, align 4, !dbg !12096
  br label %cond.end22, !dbg !12096

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi i32 [ %sub20, %cond.true19 ], [ %31, %cond.false21 ], !dbg !12096
  store i32 %cond23, i32* %tmp17, align 4, !dbg !12096
  %32 = load i32, i32* %tmp17, align 4, !dbg !12096
  %cmp24 = icmp slt i32 %25, %32, !dbg !12097
  br i1 %cmp24, label %if.then25, label %if.else26, !dbg !12098

if.then25:                                        ; preds = %cond.end22
  %33 = load i32, i32* %clock1, align 4, !dbg !12099
  store i32 %33, i32* %clock, align 4, !dbg !12100
  br label %if.end27, !dbg !12101

if.else26:                                        ; preds = %cond.end22
  %34 = load i32, i32* %clock2, align 4, !dbg !12102
  store i32 %34, i32* %clock, align 4, !dbg !12103
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then25
  %35 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12104
  %clock28 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %35, i32 0, i32 0, !dbg !12106
  %36 = load i32, i32* %clock28, align 8, !dbg !12106
  %37 = load i32, i32* %clock, align 4, !dbg !12107
  %cmp29 = icmp eq i32 %36, %37, !dbg !12108
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !12109

if.then30:                                        ; preds = %if.end27
  br label %return, !dbg !12110

if.end31:                                         ; preds = %if.end27
  %38 = load i8*, i8** %type, align 8, !dbg !12111
  %39 = load i8, i8* %vic, align 1, !dbg !12111
  %conv = zext i8 %39 to i32, !dbg !12111
  %40 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12111
  %clock32 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %40, i32 0, i32 0, !dbg !12111
  %41 = load i32, i32* %clock32, align 8, !dbg !12111
  %42 = load i32, i32* %clock, align 4, !dbg !12111
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.49, i64 0, i64 0), i8* %38, i32 %conv, i32 %41, i32 %42) #8, !dbg !12111
  %43 = load i32, i32* %clock, align 4, !dbg !12112
  %44 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12113
  %clock33 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %44, i32 0, i32 0, !dbg !12114
  store i32 %43, i32* %clock33, align 8, !dbg !12115
  br label %return, !dbg !12116

return:                                           ; preds = %if.end31, %if.then30, %if.else10
  ret void, !dbg !12116
}

; Function Attrs: noredzone
declare dso_local %struct.drm_display_mode* @drm_cvt_mode(%struct.drm_device*, i32, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_display_mode* @drm_mode_create(%struct.drm_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_mode_do_interlace_quirk(%struct.drm_display_mode* %mode, %struct.detailed_pixel_timing* %pt) #0 !dbg !748 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %pt.addr = alloca %struct.detailed_pixel_timing*, align 8
  %i = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !12117, metadata !DIExpression()), !dbg !12118
  store %struct.detailed_pixel_timing* %pt, %struct.detailed_pixel_timing** %pt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_pixel_timing** %pt.addr, metadata !12119, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12121, metadata !DIExpression()), !dbg !12122
  %0 = load %struct.detailed_pixel_timing*, %struct.detailed_pixel_timing** %pt.addr, align 8, !dbg !12123
  %misc = getelementptr inbounds %struct.detailed_pixel_timing, %struct.detailed_pixel_timing* %0, i32 0, i32 15, !dbg !12125
  %1 = load i8, i8* %misc, align 1, !dbg !12125
  %conv = zext i8 %1 to i32, !dbg !12123
  %and = and i32 %conv, 128, !dbg !12126
  %tobool = icmp ne i32 %and, 0, !dbg !12126
  br i1 %tobool, label %if.end, label %if.then, !dbg !12127

if.then:                                          ; preds = %entry
  br label %return, !dbg !12128

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12129
  br label %for.cond, !dbg !12131

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !12132
  %conv1 = sext i32 %2 to i64, !dbg !12132
  %cmp = icmp ult i64 %conv1, 7, !dbg !12134
  br i1 %cmp, label %for.body, label %for.end, !dbg !12135

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12136
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %3, i32 0, i32 1, !dbg !12139
  %4 = load i16, i16* %hdisplay, align 4, !dbg !12139
  %conv3 = zext i16 %4 to i32, !dbg !12136
  %5 = load i32, i32* %i, align 4, !dbg !12140
  %idxprom = sext i32 %5 to i64, !dbg !12141
  %arrayidx = getelementptr [7 x %struct.anon.78], [7 x %struct.anon.78]* @drm_mode_do_interlace_quirk.cea_interlaced, i64 0, i64 %idxprom, !dbg !12141
  %w = getelementptr inbounds %struct.anon.78, %struct.anon.78* %arrayidx, i32 0, i32 0, !dbg !12142
  %6 = load i32, i32* %w, align 8, !dbg !12142
  %cmp4 = icmp eq i32 %conv3, %6, !dbg !12143
  br i1 %cmp4, label %land.lhs.true, label %if.end27, !dbg !12144

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12145
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %7, i32 0, i32 6, !dbg !12146
  %8 = load i16, i16* %vdisplay, align 2, !dbg !12146
  %conv6 = zext i16 %8 to i32, !dbg !12145
  %9 = load i32, i32* %i, align 4, !dbg !12147
  %idxprom7 = sext i32 %9 to i64, !dbg !12148
  %arrayidx8 = getelementptr [7 x %struct.anon.78], [7 x %struct.anon.78]* @drm_mode_do_interlace_quirk.cea_interlaced, i64 0, i64 %idxprom7, !dbg !12148
  %h = getelementptr inbounds %struct.anon.78, %struct.anon.78* %arrayidx8, i32 0, i32 1, !dbg !12149
  %10 = load i32, i32* %h, align 4, !dbg !12149
  %div = sdiv i32 %10, 2, !dbg !12150
  %cmp9 = icmp eq i32 %conv6, %div, !dbg !12151
  br i1 %cmp9, label %if.then11, label %if.end27, !dbg !12152

if.then11:                                        ; preds = %land.lhs.true
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12153
  %vdisplay12 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %11, i32 0, i32 6, !dbg !12155
  %12 = load i16, i16* %vdisplay12, align 2, !dbg !12156
  %conv13 = zext i16 %12 to i32, !dbg !12156
  %mul = mul i32 %conv13, 2, !dbg !12156
  %conv14 = trunc i32 %mul to i16, !dbg !12156
  store i16 %conv14, i16* %vdisplay12, align 2, !dbg !12156
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12157
  %vsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %13, i32 0, i32 7, !dbg !12158
  %14 = load i16, i16* %vsync_start, align 8, !dbg !12159
  %conv15 = zext i16 %14 to i32, !dbg !12159
  %mul16 = mul i32 %conv15, 2, !dbg !12159
  %conv17 = trunc i32 %mul16 to i16, !dbg !12159
  store i16 %conv17, i16* %vsync_start, align 8, !dbg !12159
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12160
  %vsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %15, i32 0, i32 8, !dbg !12161
  %16 = load i16, i16* %vsync_end, align 2, !dbg !12162
  %conv18 = zext i16 %16 to i32, !dbg !12162
  %mul19 = mul i32 %conv18, 2, !dbg !12162
  %conv20 = trunc i32 %mul19 to i16, !dbg !12162
  store i16 %conv20, i16* %vsync_end, align 2, !dbg !12162
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12163
  %vtotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %17, i32 0, i32 9, !dbg !12164
  %18 = load i16, i16* %vtotal, align 4, !dbg !12165
  %conv21 = zext i16 %18 to i32, !dbg !12165
  %mul22 = mul i32 %conv21, 2, !dbg !12165
  %conv23 = trunc i32 %mul22 to i16, !dbg !12165
  store i16 %conv23, i16* %vtotal, align 4, !dbg !12165
  %19 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12166
  %vtotal24 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %19, i32 0, i32 9, !dbg !12167
  %20 = load i16, i16* %vtotal24, align 4, !dbg !12168
  %conv25 = zext i16 %20 to i32, !dbg !12168
  %or = or i32 %conv25, 1, !dbg !12168
  %conv26 = trunc i32 %or to i16, !dbg !12168
  store i16 %conv26, i16* %vtotal24, align 4, !dbg !12168
  br label %if.end27, !dbg !12169

if.end27:                                         ; preds = %if.then11, %land.lhs.true, %for.body
  br label %for.inc, !dbg !12170

for.inc:                                          ; preds = %if.end27
  %21 = load i32, i32* %i, align 4, !dbg !12171
  %inc = add i32 %21, 1, !dbg !12171
  store i32 %inc, i32* %i, align 4, !dbg !12171
  br label %for.cond, !dbg !12172, !llvm.loop !12173

for.end:                                          ; preds = %for.cond
  %22 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12175
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %22, i32 0, i32 11, !dbg !12176
  %23 = load i32, i32* %flags, align 8, !dbg !12177
  %or28 = or i32 %23, 16, !dbg !12177
  store i32 %or28, i32* %flags, align 8, !dbg !12177
  br label %return, !dbg !12178

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !12178
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_match_cea_mode_clock_tolerance(%struct.drm_display_mode* %to_match, i32 %clock_tolerance) #0 !dbg !12179 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !12182
  %retval = alloca i8, align 1
  %to_match.addr = alloca %struct.drm_display_mode*, align 8
  %clock_tolerance.addr = alloca i32, align 4
  %match_flags = alloca i32, align 4
  %vic = alloca i8, align 1
  %cea_mode = alloca %struct.drm_display_mode, align 8
  %clock1 = alloca i32, align 4
  %clock2 = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x15 = alloca i32, align 4
  %tmp18 = alloca i32, align 4
  store %struct.drm_display_mode* %to_match, %struct.drm_display_mode** %to_match.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %to_match.addr, metadata !12187, metadata !DIExpression()), !dbg !12188
  store i32 %clock_tolerance, i32* %clock_tolerance.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clock_tolerance.addr, metadata !12189, metadata !DIExpression()), !dbg !12190
  call void @llvm.dbg.declare(metadata i32* %match_flags, metadata !12191, metadata !DIExpression()), !dbg !12192
  store i32 5, i32* %match_flags, align 4, !dbg !12192
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !12193, metadata !DIExpression()), !dbg !12194
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12195
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 0, !dbg !12197
  %1 = load i32, i32* %clock, align 8, !dbg !12197
  %tobool = icmp ne i32 %1, 0, !dbg !12195
  br i1 %tobool, label %if.end, label %if.then, !dbg !12198

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12199
  br label %return, !dbg !12199

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12200
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 33, !dbg !12202
  %3 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !12202
  %tobool1 = icmp ne i32 %3, 0, !dbg !12200
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12203

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %match_flags, align 4, !dbg !12204
  %or = or i32 %4, 16, !dbg !12204
  store i32 %or, i32* %match_flags, align 4, !dbg !12204
  br label %if.end3, !dbg !12205

if.end3:                                          ; preds = %if.then2, %if.end
  store i8 1, i8* %vic, align 1, !dbg !12206
  br label %for.cond, !dbg !12207

for.cond:                                         ; preds = %for.inc, %if.end3
  %5 = load i8, i8* %vic, align 1, !dbg !12208
  %conv = zext i8 %5 to i32, !dbg !12208
  %call = call zeroext i8 @cea_num_vics() #8, !dbg !12209
  %conv4 = zext i8 %call to i32, !dbg !12209
  %cmp = icmp slt i32 %conv, %conv4, !dbg !12210
  br i1 %cmp, label %for.body, label %for.end, !dbg !12211

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode* %cea_mode, metadata !12212, metadata !DIExpression()), !dbg !12213
  %6 = load i8, i8* %vic, align 1, !dbg !12214
  store i8 %6, i8* %vic.addr.i, align 1
  %7 = load i8, i8* %vic.addr.i, align 1, !dbg !12215
  %conv.i = zext i8 %7 to i32, !dbg !12215
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !12216
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !12217

land.lhs.true.i:                                  ; preds = %for.body
  %8 = load i8, i8* %vic.addr.i, align 1, !dbg !12218
  %conv4.i = zext i8 %8 to i64, !dbg !12218
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !12219
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !12220

if.then.i:                                        ; preds = %land.lhs.true.i
  %9 = load i8, i8* %vic.addr.i, align 1, !dbg !12221
  %conv7.i = zext i8 %9 to i32, !dbg !12221
  %sub.i = sub i32 %conv7.i, 1, !dbg !12222
  %idxprom.i = sext i32 %sub.i to i64, !dbg !12223
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !12223
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !12224
  br label %cea_mode_for_vic.exit, !dbg !12224

if.end.i:                                         ; preds = %land.lhs.true.i, %for.body
  %10 = load i8, i8* %vic.addr.i, align 1, !dbg !12225
  %conv8.i = zext i8 %10 to i32, !dbg !12225
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !12226
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !12227

land.lhs.true11.i:                                ; preds = %if.end.i
  %11 = load i8, i8* %vic.addr.i, align 1, !dbg !12228
  %conv12.i = zext i8 %11 to i64, !dbg !12228
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !12229
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !12230

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %12 = load i8, i8* %vic.addr.i, align 1, !dbg !12231
  %conv16.i = zext i8 %12 to i32, !dbg !12231
  %sub17.i = sub i32 %conv16.i, 193, !dbg !12232
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !12233
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !12233
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !12234
  br label %cea_mode_for_vic.exit, !dbg !12234

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !12235
  br label %cea_mode_for_vic.exit, !dbg !12235

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !12236
  %14 = bitcast %struct.drm_display_mode* %cea_mode to i8*, !dbg !12237
  %15 = bitcast %struct.drm_display_mode* %13 to i8*, !dbg !12237
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 120, i1 false), !dbg !12237
  call void @llvm.dbg.declare(metadata i32* %clock1, metadata !12238, metadata !DIExpression()), !dbg !12239
  call void @llvm.dbg.declare(metadata i32* %clock2, metadata !12240, metadata !DIExpression()), !dbg !12241
  %clock7 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %cea_mode, i32 0, i32 0, !dbg !12242
  %16 = load i32, i32* %clock7, align 8, !dbg !12242
  store i32 %16, i32* %clock1, align 4, !dbg !12243
  %call8 = call i32 @cea_mode_alternate_clock(%struct.drm_display_mode* %cea_mode) #8, !dbg !12244
  store i32 %call8, i32* %clock2, align 4, !dbg !12245
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !12246, metadata !DIExpression()), !dbg !12249
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12249
  %clock9 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %17, i32 0, i32 0, !dbg !12249
  %18 = load i32, i32* %clock9, align 8, !dbg !12249
  %19 = load i32, i32* %clock1, align 4, !dbg !12249
  %sub = sub i32 %18, %19, !dbg !12249
  store i32 %sub, i32* %__x, align 4, !dbg !12249
  %20 = load i32, i32* %__x, align 4, !dbg !12249
  %cmp10 = icmp slt i32 %20, 0, !dbg !12249
  br i1 %cmp10, label %cond.true, label %cond.false, !dbg !12249

cond.true:                                        ; preds = %cea_mode_for_vic.exit
  %21 = load i32, i32* %__x, align 4, !dbg !12249
  %sub12 = sub i32 0, %21, !dbg !12249
  br label %cond.end, !dbg !12249

cond.false:                                       ; preds = %cea_mode_for_vic.exit
  %22 = load i32, i32* %__x, align 4, !dbg !12249
  br label %cond.end, !dbg !12249

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub12, %cond.true ], [ %22, %cond.false ], !dbg !12249
  store i32 %cond, i32* %tmp, align 4, !dbg !12249
  %23 = load i32, i32* %tmp, align 4, !dbg !12249
  %24 = load i32, i32* %clock_tolerance.addr, align 4, !dbg !12250
  %cmp13 = icmp ugt i32 %23, %24, !dbg !12251
  br i1 %cmp13, label %land.lhs.true, label %if.end29, !dbg !12252

land.lhs.true:                                    ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %__x15, metadata !12253, metadata !DIExpression()), !dbg !12255
  %25 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12255
  %clock16 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %25, i32 0, i32 0, !dbg !12255
  %26 = load i32, i32* %clock16, align 8, !dbg !12255
  %27 = load i32, i32* %clock2, align 4, !dbg !12255
  %sub17 = sub i32 %26, %27, !dbg !12255
  store i32 %sub17, i32* %__x15, align 4, !dbg !12255
  %28 = load i32, i32* %__x15, align 4, !dbg !12255
  %cmp19 = icmp slt i32 %28, 0, !dbg !12255
  br i1 %cmp19, label %cond.true21, label %cond.false23, !dbg !12255

cond.true21:                                      ; preds = %land.lhs.true
  %29 = load i32, i32* %__x15, align 4, !dbg !12255
  %sub22 = sub i32 0, %29, !dbg !12255
  br label %cond.end24, !dbg !12255

cond.false23:                                     ; preds = %land.lhs.true
  %30 = load i32, i32* %__x15, align 4, !dbg !12255
  br label %cond.end24, !dbg !12255

cond.end24:                                       ; preds = %cond.false23, %cond.true21
  %cond25 = phi i32 [ %sub22, %cond.true21 ], [ %30, %cond.false23 ], !dbg !12255
  store i32 %cond25, i32* %tmp18, align 4, !dbg !12255
  %31 = load i32, i32* %tmp18, align 4, !dbg !12255
  %32 = load i32, i32* %clock_tolerance.addr, align 4, !dbg !12256
  %cmp26 = icmp ugt i32 %31, %32, !dbg !12257
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !12258

if.then28:                                        ; preds = %cond.end24
  br label %for.inc, !dbg !12259

if.end29:                                         ; preds = %cond.end24, %cond.end
  br label %do.body, !dbg !12260

do.body:                                          ; preds = %do.cond, %if.end29
  %33 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12261
  %34 = load i32, i32* %match_flags, align 4, !dbg !12264
  %call30 = call zeroext i1 @drm_mode_match(%struct.drm_display_mode* %33, %struct.drm_display_mode* %cea_mode, i32 %34) #8, !dbg !12265
  br i1 %call30, label %if.then31, label %if.end32, !dbg !12266

if.then31:                                        ; preds = %do.body
  %35 = load i8, i8* %vic, align 1, !dbg !12267
  store i8 %35, i8* %retval, align 1, !dbg !12268
  br label %return, !dbg !12268

if.end32:                                         ; preds = %do.body
  br label %do.cond, !dbg !12269

do.cond:                                          ; preds = %if.end32
  %36 = load i8, i8* %vic, align 1, !dbg !12270
  %call33 = call zeroext i1 @cea_mode_alternate_timings(i8 zeroext %36, %struct.drm_display_mode* %cea_mode) #8, !dbg !12271
  br i1 %call33, label %do.body, label %do.end, !dbg !12269, !llvm.loop !12272

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !12274

for.inc:                                          ; preds = %do.end, %if.then28
  %37 = load i8, i8* %vic, align 1, !dbg !12275
  %call34 = call zeroext i8 @cea_next_vic(i8 zeroext %37) #8, !dbg !12276
  store i8 %call34, i8* %vic, align 1, !dbg !12277
  br label %for.cond, !dbg !12278, !llvm.loop !12279

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !12281
  br label %return, !dbg !12281

return:                                           ; preds = %for.end, %if.then31, %if.then
  %38 = load i8, i8* %retval, align 1, !dbg !12282
  ret i8 %38, !dbg !12282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_valid_cea_vic(i8 zeroext %vic) #0 !dbg !12283 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !12286
  %vic.addr = alloca i8, align 1
  store i8 %vic, i8* %vic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr, metadata !12288, metadata !DIExpression()), !dbg !12289
  %0 = load i8, i8* %vic.addr, align 1, !dbg !12290
  store i8 %0, i8* %vic.addr.i, align 1
  %1 = load i8, i8* %vic.addr.i, align 1, !dbg !12291
  %conv.i = zext i8 %1 to i32, !dbg !12291
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !12292
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !12293

land.lhs.true.i:                                  ; preds = %entry
  %2 = load i8, i8* %vic.addr.i, align 1, !dbg !12294
  %conv4.i = zext i8 %2 to i64, !dbg !12294
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !12295
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !12296

if.then.i:                                        ; preds = %land.lhs.true.i
  %3 = load i8, i8* %vic.addr.i, align 1, !dbg !12297
  %conv7.i = zext i8 %3 to i32, !dbg !12297
  %sub.i = sub i32 %conv7.i, 1, !dbg !12298
  %idxprom.i = sext i32 %sub.i to i64, !dbg !12299
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !12299
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !12300
  br label %cea_mode_for_vic.exit, !dbg !12300

if.end.i:                                         ; preds = %land.lhs.true.i, %entry
  %4 = load i8, i8* %vic.addr.i, align 1, !dbg !12301
  %conv8.i = zext i8 %4 to i32, !dbg !12301
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !12302
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !12303

land.lhs.true11.i:                                ; preds = %if.end.i
  %5 = load i8, i8* %vic.addr.i, align 1, !dbg !12304
  %conv12.i = zext i8 %5 to i64, !dbg !12304
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !12305
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !12306

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %6 = load i8, i8* %vic.addr.i, align 1, !dbg !12307
  %conv16.i = zext i8 %6 to i32, !dbg !12307
  %sub17.i = sub i32 %conv16.i, 193, !dbg !12308
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !12309
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !12309
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !12310
  br label %cea_mode_for_vic.exit, !dbg !12310

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !12311
  br label %cea_mode_for_vic.exit, !dbg !12311

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !12312
  %cmp = icmp ne %struct.drm_display_mode* %7, null, !dbg !12313
  ret i1 %cmp, !dbg !12314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_match_hdmi_mode_clock_tolerance(%struct.drm_display_mode* %to_match, i32 %clock_tolerance) #0 !dbg !12315 {
entry:
  %retval = alloca i8, align 1
  %to_match.addr = alloca %struct.drm_display_mode*, align 8
  %clock_tolerance.addr = alloca i32, align 4
  %match_flags = alloca i32, align 4
  %vic = alloca i8, align 1
  %hdmi_mode = alloca %struct.drm_display_mode*, align 8
  %clock1 = alloca i32, align 4
  %clock2 = alloca i32, align 4
  %__x = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__x12 = alloca i32, align 4
  %tmp15 = alloca i32, align 4
  store %struct.drm_display_mode* %to_match, %struct.drm_display_mode** %to_match.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %to_match.addr, metadata !12316, metadata !DIExpression()), !dbg !12317
  store i32 %clock_tolerance, i32* %clock_tolerance.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clock_tolerance.addr, metadata !12318, metadata !DIExpression()), !dbg !12319
  call void @llvm.dbg.declare(metadata i32* %match_flags, metadata !12320, metadata !DIExpression()), !dbg !12321
  store i32 5, i32* %match_flags, align 4, !dbg !12321
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !12322, metadata !DIExpression()), !dbg !12323
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12324
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 0, !dbg !12326
  %1 = load i32, i32* %clock, align 8, !dbg !12326
  %tobool = icmp ne i32 %1, 0, !dbg !12324
  br i1 %tobool, label %if.end, label %if.then, !dbg !12327

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12328
  br label %return, !dbg !12328

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12329
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 33, !dbg !12331
  %3 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !12331
  %tobool1 = icmp ne i32 %3, 0, !dbg !12329
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !12332

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %match_flags, align 4, !dbg !12333
  %or = or i32 %4, 16, !dbg !12333
  store i32 %or, i32* %match_flags, align 4, !dbg !12333
  br label %if.end3, !dbg !12334

if.end3:                                          ; preds = %if.then2, %if.end
  store i8 1, i8* %vic, align 1, !dbg !12335
  br label %for.cond, !dbg !12337

for.cond:                                         ; preds = %for.inc, %if.end3
  %5 = load i8, i8* %vic, align 1, !dbg !12338
  %conv = zext i8 %5 to i64, !dbg !12338
  %cmp = icmp ult i64 %conv, 5, !dbg !12340
  br i1 %cmp, label %for.body, label %for.end, !dbg !12341

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %hdmi_mode, metadata !12342, metadata !DIExpression()), !dbg !12344
  %6 = load i8, i8* %vic, align 1, !dbg !12345
  %idxprom = zext i8 %6 to i64, !dbg !12346
  %arrayidx = getelementptr [5 x %struct.drm_display_mode], [5 x %struct.drm_display_mode]* @edid_4k_modes, i64 0, i64 %idxprom, !dbg !12346
  store %struct.drm_display_mode* %arrayidx, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !12344
  call void @llvm.dbg.declare(metadata i32* %clock1, metadata !12347, metadata !DIExpression()), !dbg !12348
  call void @llvm.dbg.declare(metadata i32* %clock2, metadata !12349, metadata !DIExpression()), !dbg !12350
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !12351
  %clock5 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %7, i32 0, i32 0, !dbg !12352
  %8 = load i32, i32* %clock5, align 8, !dbg !12352
  store i32 %8, i32* %clock1, align 4, !dbg !12353
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !12354
  %call = call i32 @hdmi_mode_alternate_clock(%struct.drm_display_mode* %9) #8, !dbg !12355
  store i32 %call, i32* %clock2, align 4, !dbg !12356
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !12357, metadata !DIExpression()), !dbg !12360
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12360
  %clock6 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 0, !dbg !12360
  %11 = load i32, i32* %clock6, align 8, !dbg !12360
  %12 = load i32, i32* %clock1, align 4, !dbg !12360
  %sub = sub i32 %11, %12, !dbg !12360
  store i32 %sub, i32* %__x, align 4, !dbg !12360
  %13 = load i32, i32* %__x, align 4, !dbg !12360
  %cmp7 = icmp slt i32 %13, 0, !dbg !12360
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !12360

cond.true:                                        ; preds = %for.body
  %14 = load i32, i32* %__x, align 4, !dbg !12360
  %sub9 = sub i32 0, %14, !dbg !12360
  br label %cond.end, !dbg !12360

cond.false:                                       ; preds = %for.body
  %15 = load i32, i32* %__x, align 4, !dbg !12360
  br label %cond.end, !dbg !12360

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub9, %cond.true ], [ %15, %cond.false ], !dbg !12360
  store i32 %cond, i32* %tmp, align 4, !dbg !12360
  %16 = load i32, i32* %tmp, align 4, !dbg !12360
  %17 = load i32, i32* %clock_tolerance.addr, align 4, !dbg !12361
  %cmp10 = icmp ugt i32 %16, %17, !dbg !12362
  br i1 %cmp10, label %land.lhs.true, label %if.end26, !dbg !12363

land.lhs.true:                                    ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %__x12, metadata !12364, metadata !DIExpression()), !dbg !12366
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12366
  %clock13 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %18, i32 0, i32 0, !dbg !12366
  %19 = load i32, i32* %clock13, align 8, !dbg !12366
  %20 = load i32, i32* %clock2, align 4, !dbg !12366
  %sub14 = sub i32 %19, %20, !dbg !12366
  store i32 %sub14, i32* %__x12, align 4, !dbg !12366
  %21 = load i32, i32* %__x12, align 4, !dbg !12366
  %cmp16 = icmp slt i32 %21, 0, !dbg !12366
  br i1 %cmp16, label %cond.true18, label %cond.false20, !dbg !12366

cond.true18:                                      ; preds = %land.lhs.true
  %22 = load i32, i32* %__x12, align 4, !dbg !12366
  %sub19 = sub i32 0, %22, !dbg !12366
  br label %cond.end21, !dbg !12366

cond.false20:                                     ; preds = %land.lhs.true
  %23 = load i32, i32* %__x12, align 4, !dbg !12366
  br label %cond.end21, !dbg !12366

cond.end21:                                       ; preds = %cond.false20, %cond.true18
  %cond22 = phi i32 [ %sub19, %cond.true18 ], [ %23, %cond.false20 ], !dbg !12366
  store i32 %cond22, i32* %tmp15, align 4, !dbg !12366
  %24 = load i32, i32* %tmp15, align 4, !dbg !12366
  %25 = load i32, i32* %clock_tolerance.addr, align 4, !dbg !12367
  %cmp23 = icmp ugt i32 %24, %25, !dbg !12368
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !12369

if.then25:                                        ; preds = %cond.end21
  br label %for.inc, !dbg !12370

if.end26:                                         ; preds = %cond.end21, %cond.end
  %26 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !12371
  %27 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !12373
  %28 = load i32, i32* %match_flags, align 4, !dbg !12374
  %call27 = call zeroext i1 @drm_mode_match(%struct.drm_display_mode* %26, %struct.drm_display_mode* %27, i32 %28) #8, !dbg !12375
  br i1 %call27, label %if.then28, label %if.end29, !dbg !12376

if.then28:                                        ; preds = %if.end26
  %29 = load i8, i8* %vic, align 1, !dbg !12377
  store i8 %29, i8* %retval, align 1, !dbg !12378
  br label %return, !dbg !12378

if.end29:                                         ; preds = %if.end26
  br label %for.inc, !dbg !12379

for.inc:                                          ; preds = %if.end29, %if.then25
  %30 = load i8, i8* %vic, align 1, !dbg !12380
  %inc = add i8 %30, 1, !dbg !12380
  store i8 %inc, i8* %vic, align 1, !dbg !12380
  br label %for.cond, !dbg !12381, !llvm.loop !12382

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !12384
  br label %return, !dbg !12384

return:                                           ; preds = %for.end, %if.then28, %if.then
  %31 = load i8, i8* %retval, align 1, !dbg !12385
  ret i8 %31, !dbg !12385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_valid_hdmi_vic(i8 zeroext %vic) #0 !dbg !12386 {
entry:
  %vic.addr = alloca i8, align 1
  store i8 %vic, i8* %vic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  %0 = load i8, i8* %vic.addr, align 1, !dbg !12389
  %conv = zext i8 %0 to i32, !dbg !12389
  %cmp = icmp sgt i32 %conv, 0, !dbg !12390
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !12391

land.rhs:                                         ; preds = %entry
  %1 = load i8, i8* %vic.addr, align 1, !dbg !12392
  %conv2 = zext i8 %1 to i64, !dbg !12392
  %cmp3 = icmp ult i64 %conv2, 5, !dbg !12393
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp3, %land.rhs ], !dbg !12394
  ret i1 %2, !dbg !12395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hdmi_mode_alternate_clock(%struct.drm_display_mode* %hdmi_mode) #0 !dbg !12396 {
entry:
  %hdmi_mode.addr = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_display_mode* %hdmi_mode, %struct.drm_display_mode** %hdmi_mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %hdmi_mode.addr, metadata !12397, metadata !DIExpression()), !dbg !12398
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode.addr, align 8, !dbg !12399
  %call = call i32 @cea_mode_alternate_clock(%struct.drm_display_mode* %0) #8, !dbg !12400
  ret i32 %call, !dbg !12401
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_cvt_mode(%struct.detailed_timing* %timing, i8* %c) #0 !dbg !12402 {
entry:
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %c.addr = alloca i8*, align 8
  %closure = alloca %struct.detailed_mode_closure*, align 8
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !12403, metadata !DIExpression()), !dbg !12404
  store i8* %c, i8** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !12405, metadata !DIExpression()), !dbg !12406
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure** %closure, metadata !12407, metadata !DIExpression()), !dbg !12408
  %0 = load i8*, i8** %c.addr, align 8, !dbg !12409
  %1 = bitcast i8* %0 to %struct.detailed_mode_closure*, !dbg !12409
  store %struct.detailed_mode_closure* %1, %struct.detailed_mode_closure** %closure, align 8, !dbg !12408
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !12410
  %3 = bitcast %struct.detailed_timing* %2 to i8*, !dbg !12412
  %call = call zeroext i1 @is_display_descriptor(i8* %3, i8 zeroext -8) #8, !dbg !12413
  br i1 %call, label %if.end, label %if.then, !dbg !12414

if.then:                                          ; preds = %entry
  br label %return, !dbg !12415

if.end:                                           ; preds = %entry
  %4 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !12416
  %connector = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %4, i32 0, i32 0, !dbg !12417
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12417
  %6 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !12418
  %call1 = call i32 @drm_cvt_modes(%struct.drm_connector* %5, %struct.detailed_timing* %6) #8, !dbg !12419
  %7 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !12420
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %7, i32 0, i32 4, !dbg !12421
  %8 = load i32, i32* %modes, align 8, !dbg !12422
  %add = add i32 %8, %call1, !dbg !12422
  store i32 %add, i32* %modes, align 8, !dbg !12422
  br label %return, !dbg !12423

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !12423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_cvt_modes(%struct.drm_connector* %connector, %struct.detailed_timing* %timing) #0 !dbg !12424 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %modes = alloca i32, align 4
  %newmode = alloca %struct.drm_display_mode*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %cvt = alloca %struct.cvt_timing*, align 8
  %rates = alloca [5 x i32], align 16
  %empty = alloca [3 x i8], align 1
  %width = alloca i32, align 4
  %height = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !12427, metadata !DIExpression()), !dbg !12428
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !12429, metadata !DIExpression()), !dbg !12430
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12431, metadata !DIExpression()), !dbg !12432
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12433, metadata !DIExpression()), !dbg !12434
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !12435, metadata !DIExpression()), !dbg !12436
  store i32 0, i32* %modes, align 4, !dbg !12436
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !12437, metadata !DIExpression()), !dbg !12438
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !12439, metadata !DIExpression()), !dbg !12440
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12441
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !12442
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !12442
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !12440
  call void @llvm.dbg.declare(metadata %struct.cvt_timing** %cvt, metadata !12443, metadata !DIExpression()), !dbg !12445
  call void @llvm.dbg.declare(metadata [5 x i32]* %rates, metadata !12446, metadata !DIExpression()), !dbg !12449
  %2 = bitcast [5 x i32]* %rates to i8*, !dbg !12449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %2, i8* align 16 bitcast ([5 x i32]* @__const.drm_cvt_modes.rates to i8*), i64 20, i1 false), !dbg !12449
  call void @llvm.dbg.declare(metadata [3 x i8]* %empty, metadata !12450, metadata !DIExpression()), !dbg !12452
  %3 = bitcast [3 x i8]* %empty to i8*, !dbg !12452
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 0, i64 3, i1 false), !dbg !12452
  store i32 0, i32* %i, align 4, !dbg !12453
  br label %for.cond, !dbg !12455

for.cond:                                         ; preds = %for.inc46, %entry
  %4 = load i32, i32* %i, align 4, !dbg !12456
  %cmp = icmp slt i32 %4, 4, !dbg !12458
  br i1 %cmp, label %for.body, label %for.end48, !dbg !12459

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %width, metadata !12460, metadata !DIExpression()), !dbg !12462
  call void @llvm.dbg.declare(metadata i32* %height, metadata !12463, metadata !DIExpression()), !dbg !12464
  %5 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !12465
  %data = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %5, i32 0, i32 1, !dbg !12466
  %other_data = bitcast %union.anon.0* %data to %struct.detailed_non_pixel*, !dbg !12467
  %data2 = getelementptr inbounds %struct.detailed_non_pixel, %struct.detailed_non_pixel* %other_data, i32 0, i32 3, !dbg !12468
  %cvt3 = bitcast %union.anon.1* %data2 to [4 x %struct.cvt_timing]*, !dbg !12469
  %6 = load i32, i32* %i, align 4, !dbg !12470
  %idxprom = sext i32 %6 to i64, !dbg !12465
  %arrayidx = getelementptr [4 x %struct.cvt_timing], [4 x %struct.cvt_timing]* %cvt3, i64 0, i64 %idxprom, !dbg !12465
  store %struct.cvt_timing* %arrayidx, %struct.cvt_timing** %cvt, align 8, !dbg !12471
  %7 = load %struct.cvt_timing*, %struct.cvt_timing** %cvt, align 8, !dbg !12472
  %code = getelementptr inbounds %struct.cvt_timing, %struct.cvt_timing* %7, i32 0, i32 0, !dbg !12474
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %code, i64 0, i64 0, !dbg !12472
  %arraydecay4 = getelementptr inbounds [3 x i8], [3 x i8]* %empty, i64 0, i64 0, !dbg !12475
  %call = call i32 @memcmp(i8* %arraydecay, i8* %arraydecay4, i64 3) #8, !dbg !12476
  %tobool = icmp ne i32 %call, 0, !dbg !12476
  br i1 %tobool, label %if.end, label %if.then, !dbg !12477

if.then:                                          ; preds = %for.body
  br label %for.inc46, !dbg !12478

if.end:                                           ; preds = %for.body
  %8 = load %struct.cvt_timing*, %struct.cvt_timing** %cvt, align 8, !dbg !12479
  %code5 = getelementptr inbounds %struct.cvt_timing, %struct.cvt_timing* %8, i32 0, i32 0, !dbg !12480
  %arrayidx6 = getelementptr [3 x i8], [3 x i8]* %code5, i64 0, i64 0, !dbg !12479
  %9 = load i8, i8* %arrayidx6, align 1, !dbg !12479
  %conv = zext i8 %9 to i32, !dbg !12479
  %10 = load %struct.cvt_timing*, %struct.cvt_timing** %cvt, align 8, !dbg !12481
  %code7 = getelementptr inbounds %struct.cvt_timing, %struct.cvt_timing* %10, i32 0, i32 0, !dbg !12482
  %arrayidx8 = getelementptr [3 x i8], [3 x i8]* %code7, i64 0, i64 1, !dbg !12481
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !12481
  %conv9 = zext i8 %11 to i32, !dbg !12481
  %and = and i32 %conv9, 240, !dbg !12483
  %shl = shl i32 %and, 4, !dbg !12484
  %add = add i32 %conv, %shl, !dbg !12485
  %add10 = add i32 %add, 1, !dbg !12486
  %mul = mul i32 %add10, 2, !dbg !12487
  store i32 %mul, i32* %height, align 4, !dbg !12488
  %12 = load %struct.cvt_timing*, %struct.cvt_timing** %cvt, align 8, !dbg !12489
  %code11 = getelementptr inbounds %struct.cvt_timing, %struct.cvt_timing* %12, i32 0, i32 0, !dbg !12490
  %arrayidx12 = getelementptr [3 x i8], [3 x i8]* %code11, i64 0, i64 1, !dbg !12489
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !12489
  %conv13 = zext i8 %13 to i32, !dbg !12489
  %and14 = and i32 %conv13, 12, !dbg !12491
  switch i32 %and14, label %sw.epilog [
    i32 0, label %sw.bb
    i32 4, label %sw.bb16
    i32 8, label %sw.bb19
    i32 12, label %sw.bb22
  ], !dbg !12492

sw.bb:                                            ; preds = %if.end
  %14 = load i32, i32* %height, align 4, !dbg !12493
  %mul15 = mul i32 %14, 4, !dbg !12495
  %div = sdiv i32 %mul15, 3, !dbg !12496
  store i32 %div, i32* %width, align 4, !dbg !12497
  br label %sw.epilog, !dbg !12498

sw.bb16:                                          ; preds = %if.end
  %15 = load i32, i32* %height, align 4, !dbg !12499
  %mul17 = mul i32 %15, 16, !dbg !12500
  %div18 = sdiv i32 %mul17, 9, !dbg !12501
  store i32 %div18, i32* %width, align 4, !dbg !12502
  br label %sw.epilog, !dbg !12503

sw.bb19:                                          ; preds = %if.end
  %16 = load i32, i32* %height, align 4, !dbg !12504
  %mul20 = mul i32 %16, 16, !dbg !12505
  %div21 = sdiv i32 %mul20, 10, !dbg !12506
  store i32 %div21, i32* %width, align 4, !dbg !12507
  br label %sw.epilog, !dbg !12508

sw.bb22:                                          ; preds = %if.end
  %17 = load i32, i32* %height, align 4, !dbg !12509
  %mul23 = mul i32 %17, 15, !dbg !12510
  %div24 = sdiv i32 %mul23, 9, !dbg !12511
  store i32 %div24, i32* %width, align 4, !dbg !12512
  br label %sw.epilog, !dbg !12513

sw.epilog:                                        ; preds = %if.end, %sw.bb22, %sw.bb19, %sw.bb16, %sw.bb
  store i32 1, i32* %j, align 4, !dbg !12514
  br label %for.cond25, !dbg !12516

for.cond25:                                       ; preds = %for.inc, %sw.epilog
  %18 = load i32, i32* %j, align 4, !dbg !12517
  %cmp26 = icmp slt i32 %18, 5, !dbg !12519
  br i1 %cmp26, label %for.body28, label %for.end, !dbg !12520

for.body28:                                       ; preds = %for.cond25
  %19 = load %struct.cvt_timing*, %struct.cvt_timing** %cvt, align 8, !dbg !12521
  %code29 = getelementptr inbounds %struct.cvt_timing, %struct.cvt_timing* %19, i32 0, i32 0, !dbg !12524
  %arrayidx30 = getelementptr [3 x i8], [3 x i8]* %code29, i64 0, i64 2, !dbg !12521
  %20 = load i8, i8* %arrayidx30, align 1, !dbg !12521
  %conv31 = zext i8 %20 to i32, !dbg !12521
  %21 = load i32, i32* %j, align 4, !dbg !12525
  %shl32 = shl i32 1, %21, !dbg !12526
  %and33 = and i32 %conv31, %shl32, !dbg !12527
  %tobool34 = icmp ne i32 %and33, 0, !dbg !12527
  br i1 %tobool34, label %if.then35, label %if.end44, !dbg !12528

if.then35:                                        ; preds = %for.body28
  %22 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12529
  %23 = load i32, i32* %width, align 4, !dbg !12531
  %24 = load i32, i32* %height, align 4, !dbg !12532
  %25 = load i32, i32* %j, align 4, !dbg !12533
  %idxprom36 = sext i32 %25 to i64, !dbg !12534
  %arrayidx37 = getelementptr [5 x i32], [5 x i32]* %rates, i64 0, i64 %idxprom36, !dbg !12534
  %26 = load i32, i32* %arrayidx37, align 4, !dbg !12534
  %27 = load i32, i32* %j, align 4, !dbg !12535
  %cmp38 = icmp eq i32 %27, 0, !dbg !12536
  %call40 = call %struct.drm_display_mode* @drm_cvt_mode(%struct.drm_device* %22, i32 %23, i32 %24, i32 %26, i1 zeroext %cmp38, i1 zeroext false, i1 zeroext false) #8, !dbg !12537
  store %struct.drm_display_mode* %call40, %struct.drm_display_mode** %newmode, align 8, !dbg !12538
  %28 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !12539
  %tobool41 = icmp ne %struct.drm_display_mode* %28, null, !dbg !12539
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !12541

if.then42:                                        ; preds = %if.then35
  %29 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12542
  %30 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !12544
  call void @drm_mode_probed_add(%struct.drm_connector* %29, %struct.drm_display_mode* %30) #8, !dbg !12545
  %31 = load i32, i32* %modes, align 4, !dbg !12546
  %inc = add i32 %31, 1, !dbg !12546
  store i32 %inc, i32* %modes, align 4, !dbg !12546
  br label %if.end43, !dbg !12547

if.end43:                                         ; preds = %if.then42, %if.then35
  br label %if.end44, !dbg !12548

if.end44:                                         ; preds = %if.end43, %for.body28
  br label %for.inc, !dbg !12549

for.inc:                                          ; preds = %if.end44
  %32 = load i32, i32* %j, align 4, !dbg !12550
  %inc45 = add i32 %32, 1, !dbg !12550
  store i32 %inc45, i32* %j, align 4, !dbg !12550
  br label %for.cond25, !dbg !12551, !llvm.loop !12552

for.end:                                          ; preds = %for.cond25
  br label %for.inc46, !dbg !12554

for.inc46:                                        ; preds = %for.end, %if.then
  %33 = load i32, i32* %i, align 4, !dbg !12555
  %inc47 = add i32 %33, 1, !dbg !12555
  store i32 %inc47, i32* %i, align 4, !dbg !12555
  br label %for.cond, !dbg !12556, !llvm.loop !12557

for.end48:                                        ; preds = %for.cond
  %34 = load i32, i32* %modes, align 4, !dbg !12559
  ret i32 %34, !dbg !12560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_display_mode* @drm_mode_std(%struct.drm_connector* %connector, %struct.edid* %edid, %struct.std_timing* %t) #0 !dbg !12561 {
entry:
  %retval = alloca %struct.drm_display_mode*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %t.addr = alloca %struct.std_timing*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %m = alloca %struct.drm_display_mode*, align 8
  %mode = alloca %struct.drm_display_mode*, align 8
  %hsize = alloca i32, align 4
  %vsize = alloca i32, align 4
  %vrefresh_rate = alloca i32, align 4
  %aspect_ratio = alloca i32, align 4
  %vfreq = alloca i32, align 4
  %timing_level = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_display_mode*, align 8
  %__mptr68 = alloca i8*, align 8
  %tmp73 = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !12565, metadata !DIExpression()), !dbg !12566
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !12567, metadata !DIExpression()), !dbg !12568
  store %struct.std_timing* %t, %struct.std_timing** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.std_timing** %t.addr, metadata !12569, metadata !DIExpression()), !dbg !12570
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !12571, metadata !DIExpression()), !dbg !12572
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12573
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !12574
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !12574
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !12572
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %m, metadata !12575, metadata !DIExpression()), !dbg !12576
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !12577, metadata !DIExpression()), !dbg !12578
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %mode, align 8, !dbg !12578
  call void @llvm.dbg.declare(metadata i32* %hsize, metadata !12579, metadata !DIExpression()), !dbg !12580
  call void @llvm.dbg.declare(metadata i32* %vsize, metadata !12581, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.declare(metadata i32* %vrefresh_rate, metadata !12583, metadata !DIExpression()), !dbg !12584
  call void @llvm.dbg.declare(metadata i32* %aspect_ratio, metadata !12585, metadata !DIExpression()), !dbg !12586
  %2 = load %struct.std_timing*, %struct.std_timing** %t.addr, align 8, !dbg !12587
  %vfreq_aspect = getelementptr inbounds %struct.std_timing, %struct.std_timing* %2, i32 0, i32 1, !dbg !12588
  %3 = load i8, i8* %vfreq_aspect, align 1, !dbg !12588
  %conv = zext i8 %3 to i32, !dbg !12587
  %and = and i32 %conv, 192, !dbg !12589
  %shr = ashr i32 %and, 6, !dbg !12590
  store i32 %shr, i32* %aspect_ratio, align 4, !dbg !12586
  call void @llvm.dbg.declare(metadata i32* %vfreq, metadata !12591, metadata !DIExpression()), !dbg !12592
  %4 = load %struct.std_timing*, %struct.std_timing** %t.addr, align 8, !dbg !12593
  %vfreq_aspect2 = getelementptr inbounds %struct.std_timing, %struct.std_timing* %4, i32 0, i32 1, !dbg !12594
  %5 = load i8, i8* %vfreq_aspect2, align 1, !dbg !12594
  %conv3 = zext i8 %5 to i32, !dbg !12593
  %and4 = and i32 %conv3, 63, !dbg !12595
  %shr5 = ashr i32 %and4, 0, !dbg !12596
  store i32 %shr5, i32* %vfreq, align 4, !dbg !12592
  call void @llvm.dbg.declare(metadata i32* %timing_level, metadata !12597, metadata !DIExpression()), !dbg !12598
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12599
  %call = call i32 @standard_timing_level(%struct.edid* %6) #8, !dbg !12600
  store i32 %call, i32* %timing_level, align 4, !dbg !12598
  %7 = load %struct.std_timing*, %struct.std_timing** %t.addr, align 8, !dbg !12601
  %hsize6 = getelementptr inbounds %struct.std_timing, %struct.std_timing* %7, i32 0, i32 0, !dbg !12603
  %8 = load i8, i8* %hsize6, align 1, !dbg !12603
  %9 = load %struct.std_timing*, %struct.std_timing** %t.addr, align 8, !dbg !12604
  %vfreq_aspect7 = getelementptr inbounds %struct.std_timing, %struct.std_timing* %9, i32 0, i32 1, !dbg !12605
  %10 = load i8, i8* %vfreq_aspect7, align 1, !dbg !12605
  %call8 = call i32 @bad_std_timing(i8 zeroext %8, i8 zeroext %10) #8, !dbg !12606
  %tobool = icmp ne i32 %call8, 0, !dbg !12606
  br i1 %tobool, label %if.then, label %if.end, !dbg !12607

if.then:                                          ; preds = %entry
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !12608
  br label %return, !dbg !12608

if.end:                                           ; preds = %entry
  %11 = load %struct.std_timing*, %struct.std_timing** %t.addr, align 8, !dbg !12609
  %hsize9 = getelementptr inbounds %struct.std_timing, %struct.std_timing* %11, i32 0, i32 0, !dbg !12610
  %12 = load i8, i8* %hsize9, align 1, !dbg !12610
  %conv10 = zext i8 %12 to i32, !dbg !12609
  %mul = mul i32 %conv10, 8, !dbg !12611
  %add = add i32 %mul, 248, !dbg !12612
  store i32 %add, i32* %hsize, align 4, !dbg !12613
  %13 = load i32, i32* %vfreq, align 4, !dbg !12614
  %add11 = add i32 %13, 60, !dbg !12615
  store i32 %add11, i32* %vrefresh_rate, align 4, !dbg !12616
  %14 = load i32, i32* %aspect_ratio, align 4, !dbg !12617
  %cmp = icmp eq i32 %14, 0, !dbg !12619
  br i1 %cmp, label %if.then13, label %if.else20, !dbg !12620

if.then13:                                        ; preds = %if.end
  %15 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12621
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %15, i32 0, i32 7, !dbg !12624
  %16 = load i8, i8* %revision, align 1, !dbg !12624
  %conv14 = zext i8 %16 to i32, !dbg !12621
  %cmp15 = icmp slt i32 %conv14, 3, !dbg !12625
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !12626

if.then17:                                        ; preds = %if.then13
  %17 = load i32, i32* %hsize, align 4, !dbg !12627
  store i32 %17, i32* %vsize, align 4, !dbg !12628
  br label %if.end19, !dbg !12629

if.else:                                          ; preds = %if.then13
  %18 = load i32, i32* %hsize, align 4, !dbg !12630
  %mul18 = mul i32 %18, 10, !dbg !12631
  %div = sdiv i32 %mul18, 16, !dbg !12632
  store i32 %div, i32* %vsize, align 4, !dbg !12633
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then17
  br label %if.end37, !dbg !12634

if.else20:                                        ; preds = %if.end
  %19 = load i32, i32* %aspect_ratio, align 4, !dbg !12635
  %cmp21 = icmp eq i32 %19, 1, !dbg !12637
  br i1 %cmp21, label %if.then23, label %if.else26, !dbg !12638

if.then23:                                        ; preds = %if.else20
  %20 = load i32, i32* %hsize, align 4, !dbg !12639
  %mul24 = mul i32 %20, 3, !dbg !12640
  %div25 = sdiv i32 %mul24, 4, !dbg !12641
  store i32 %div25, i32* %vsize, align 4, !dbg !12642
  br label %if.end36, !dbg !12643

if.else26:                                        ; preds = %if.else20
  %21 = load i32, i32* %aspect_ratio, align 4, !dbg !12644
  %cmp27 = icmp eq i32 %21, 2, !dbg !12646
  br i1 %cmp27, label %if.then29, label %if.else32, !dbg !12647

if.then29:                                        ; preds = %if.else26
  %22 = load i32, i32* %hsize, align 4, !dbg !12648
  %mul30 = mul i32 %22, 4, !dbg !12649
  %div31 = sdiv i32 %mul30, 5, !dbg !12650
  store i32 %div31, i32* %vsize, align 4, !dbg !12651
  br label %if.end35, !dbg !12652

if.else32:                                        ; preds = %if.else26
  %23 = load i32, i32* %hsize, align 4, !dbg !12653
  %mul33 = mul i32 %23, 9, !dbg !12654
  %div34 = sdiv i32 %mul33, 16, !dbg !12655
  store i32 %div34, i32* %vsize, align 4, !dbg !12656
  br label %if.end35

if.end35:                                         ; preds = %if.else32, %if.then29
  br label %if.end36

if.end36:                                         ; preds = %if.end35, %if.then23
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.end19
  %24 = load i32, i32* %vrefresh_rate, align 4, !dbg !12657
  %cmp38 = icmp eq i32 %24, 60, !dbg !12659
  br i1 %cmp38, label %land.lhs.true, label %if.end51, !dbg !12660

land.lhs.true:                                    ; preds = %if.end37
  %25 = load i32, i32* %hsize, align 4, !dbg !12661
  %cmp40 = icmp eq i32 %25, 1360, !dbg !12662
  br i1 %cmp40, label %land.lhs.true42, label %lor.lhs.false, !dbg !12663

land.lhs.true42:                                  ; preds = %land.lhs.true
  %26 = load i32, i32* %vsize, align 4, !dbg !12664
  %cmp43 = icmp eq i32 %26, 765, !dbg !12665
  br i1 %cmp43, label %if.then50, label %lor.lhs.false, !dbg !12666

lor.lhs.false:                                    ; preds = %land.lhs.true42, %land.lhs.true
  %27 = load i32, i32* %hsize, align 4, !dbg !12667
  %cmp45 = icmp eq i32 %27, 1368, !dbg !12668
  br i1 %cmp45, label %land.lhs.true47, label %if.end51, !dbg !12669

land.lhs.true47:                                  ; preds = %lor.lhs.false
  %28 = load i32, i32* %vsize, align 4, !dbg !12670
  %cmp48 = icmp eq i32 %28, 769, !dbg !12671
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !12672

if.then50:                                        ; preds = %land.lhs.true47, %land.lhs.true42
  store i32 1366, i32* %hsize, align 4, !dbg !12673
  store i32 768, i32* %vsize, align 4, !dbg !12675
  br label %if.end51, !dbg !12676

if.end51:                                         ; preds = %if.then50, %land.lhs.true47, %lor.lhs.false, %if.end37
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12677, metadata !DIExpression()), !dbg !12680
  %29 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12680
  %probed_modes = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %29, i32 0, i32 17, !dbg !12680
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes, i32 0, i32 0, !dbg !12680
  %30 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12680
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !12680
  store i8* %31, i8** %__mptr, align 8, !dbg !12680
  br label %do.body, !dbg !12680

do.body:                                          ; preds = %if.end51
  br label %do.end, !dbg !12681

do.end:                                           ; preds = %do.body
  %32 = load i8*, i8** %__mptr, align 8, !dbg !12680
  %add.ptr = getelementptr i8, i8* %32, i64 -64, !dbg !12680
  %33 = bitcast i8* %add.ptr to %struct.drm_display_mode*, !dbg !12680
  store %struct.drm_display_mode* %33, %struct.drm_display_mode** %tmp, align 8, !dbg !12681
  %34 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !12680
  store %struct.drm_display_mode* %34, %struct.drm_display_mode** %m, align 8, !dbg !12683
  br label %for.cond, !dbg !12683

for.cond:                                         ; preds = %do.end72, %do.end
  %35 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !12684
  %head = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %35, i32 0, i32 30, !dbg !12684
  %36 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12684
  %probed_modes52 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %36, i32 0, i32 17, !dbg !12684
  %cmp53 = icmp eq %struct.list_head* %head, %probed_modes52, !dbg !12684
  %lnot = xor i1 %cmp53, true, !dbg !12684
  br i1 %lnot, label %for.body, label %for.end, !dbg !12683

for.body:                                         ; preds = %for.cond
  %37 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !12686
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %37, i32 0, i32 1, !dbg !12688
  %38 = load i16, i16* %hdisplay, align 4, !dbg !12688
  %conv55 = zext i16 %38 to i32, !dbg !12686
  %39 = load i32, i32* %hsize, align 4, !dbg !12689
  %cmp56 = icmp eq i32 %conv55, %39, !dbg !12690
  br i1 %cmp56, label %land.lhs.true58, label %if.end67, !dbg !12691

land.lhs.true58:                                  ; preds = %for.body
  %40 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !12692
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %40, i32 0, i32 6, !dbg !12693
  %41 = load i16, i16* %vdisplay, align 2, !dbg !12693
  %conv59 = zext i16 %41 to i32, !dbg !12692
  %42 = load i32, i32* %vsize, align 4, !dbg !12694
  %cmp60 = icmp eq i32 %conv59, %42, !dbg !12695
  br i1 %cmp60, label %land.lhs.true62, label %if.end67, !dbg !12696

land.lhs.true62:                                  ; preds = %land.lhs.true58
  %43 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !12697
  %call63 = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %43) #8, !dbg !12698
  %44 = load i32, i32* %vrefresh_rate, align 4, !dbg !12699
  %cmp64 = icmp eq i32 %call63, %44, !dbg !12700
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !12701

if.then66:                                        ; preds = %land.lhs.true62
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !12702
  br label %return, !dbg !12702

if.end67:                                         ; preds = %land.lhs.true62, %land.lhs.true58, %for.body
  br label %for.inc, !dbg !12699

for.inc:                                          ; preds = %if.end67
  call void @llvm.dbg.declare(metadata i8** %__mptr68, metadata !12703, metadata !DIExpression()), !dbg !12705
  %45 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !12705
  %head69 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %45, i32 0, i32 30, !dbg !12705
  %next70 = getelementptr inbounds %struct.list_head, %struct.list_head* %head69, i32 0, i32 0, !dbg !12705
  %46 = load %struct.list_head*, %struct.list_head** %next70, align 8, !dbg !12705
  %47 = bitcast %struct.list_head* %46 to i8*, !dbg !12705
  store i8* %47, i8** %__mptr68, align 8, !dbg !12705
  br label %do.body71, !dbg !12705

do.body71:                                        ; preds = %for.inc
  br label %do.end72, !dbg !12706

do.end72:                                         ; preds = %do.body71
  %48 = load i8*, i8** %__mptr68, align 8, !dbg !12705
  %add.ptr74 = getelementptr i8, i8* %48, i64 -64, !dbg !12705
  %49 = bitcast i8* %add.ptr74 to %struct.drm_display_mode*, !dbg !12705
  store %struct.drm_display_mode* %49, %struct.drm_display_mode** %tmp73, align 8, !dbg !12706
  %50 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp73, align 8, !dbg !12705
  store %struct.drm_display_mode* %50, %struct.drm_display_mode** %m, align 8, !dbg !12684
  br label %for.cond, !dbg !12684, !llvm.loop !12708

for.end:                                          ; preds = %for.cond
  %51 = load i32, i32* %hsize, align 4, !dbg !12710
  %cmp75 = icmp eq i32 %51, 1366, !dbg !12712
  br i1 %cmp75, label %land.lhs.true77, label %if.end96, !dbg !12713

land.lhs.true77:                                  ; preds = %for.end
  %52 = load i32, i32* %vsize, align 4, !dbg !12714
  %cmp78 = icmp eq i32 %52, 768, !dbg !12715
  br i1 %cmp78, label %land.lhs.true80, label %if.end96, !dbg !12716

land.lhs.true80:                                  ; preds = %land.lhs.true77
  %53 = load i32, i32* %vrefresh_rate, align 4, !dbg !12717
  %cmp81 = icmp eq i32 %53, 60, !dbg !12718
  br i1 %cmp81, label %if.then83, label %if.end96, !dbg !12719

if.then83:                                        ; preds = %land.lhs.true80
  %54 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12720
  %55 = load i32, i32* %vrefresh_rate, align 4, !dbg !12722
  %call84 = call %struct.drm_display_mode* @drm_cvt_mode(%struct.drm_device* %54, i32 1366, i32 768, i32 %55, i1 zeroext false, i1 zeroext false, i1 zeroext false) #8, !dbg !12723
  store %struct.drm_display_mode* %call84, %struct.drm_display_mode** %mode, align 8, !dbg !12724
  %56 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12725
  %tobool85 = icmp ne %struct.drm_display_mode* %56, null, !dbg !12725
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !12727

if.then86:                                        ; preds = %if.then83
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !12728
  br label %return, !dbg !12728

if.end87:                                         ; preds = %if.then83
  %57 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12729
  %hdisplay88 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %57, i32 0, i32 1, !dbg !12730
  store i16 1366, i16* %hdisplay88, align 4, !dbg !12731
  %58 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12732
  %hsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %58, i32 0, i32 2, !dbg !12733
  %59 = load i16, i16* %hsync_start, align 2, !dbg !12733
  %conv89 = zext i16 %59 to i32, !dbg !12732
  %sub = sub i32 %conv89, 1, !dbg !12734
  %conv90 = trunc i32 %sub to i16, !dbg !12732
  %60 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12735
  %hsync_start91 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %60, i32 0, i32 2, !dbg !12736
  store i16 %conv90, i16* %hsync_start91, align 2, !dbg !12737
  %61 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12738
  %hsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %61, i32 0, i32 3, !dbg !12739
  %62 = load i16, i16* %hsync_end, align 8, !dbg !12739
  %conv92 = zext i16 %62 to i32, !dbg !12738
  %sub93 = sub i32 %conv92, 1, !dbg !12740
  %conv94 = trunc i32 %sub93 to i16, !dbg !12738
  %63 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12741
  %hsync_end95 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %63, i32 0, i32 3, !dbg !12742
  store i16 %conv94, i16* %hsync_end95, align 8, !dbg !12743
  %64 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12744
  store %struct.drm_display_mode* %64, %struct.drm_display_mode** %retval, align 8, !dbg !12745
  br label %return, !dbg !12745

if.end96:                                         ; preds = %land.lhs.true80, %land.lhs.true77, %for.end
  %65 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12746
  %call97 = call zeroext i1 @drm_monitor_supports_rb(%struct.edid* %65) #8, !dbg !12748
  br i1 %call97, label %if.then98, label %if.end103, !dbg !12749

if.then98:                                        ; preds = %if.end96
  %66 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12750
  %67 = load i32, i32* %hsize, align 4, !dbg !12752
  %68 = load i32, i32* %vsize, align 4, !dbg !12753
  %69 = load i32, i32* %vrefresh_rate, align 4, !dbg !12754
  %call99 = call %struct.drm_display_mode* @drm_mode_find_dmt(%struct.drm_device* %66, i32 %67, i32 %68, i32 %69, i1 zeroext true) #8, !dbg !12755
  store %struct.drm_display_mode* %call99, %struct.drm_display_mode** %mode, align 8, !dbg !12756
  %70 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12757
  %tobool100 = icmp ne %struct.drm_display_mode* %70, null, !dbg !12757
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !12759

if.then101:                                       ; preds = %if.then98
  %71 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12760
  store %struct.drm_display_mode* %71, %struct.drm_display_mode** %retval, align 8, !dbg !12761
  br label %return, !dbg !12761

if.end102:                                        ; preds = %if.then98
  br label %if.end103, !dbg !12762

if.end103:                                        ; preds = %if.end102, %if.end96
  %72 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12763
  %73 = load i32, i32* %hsize, align 4, !dbg !12764
  %74 = load i32, i32* %vsize, align 4, !dbg !12765
  %75 = load i32, i32* %vrefresh_rate, align 4, !dbg !12766
  %call104 = call %struct.drm_display_mode* @drm_mode_find_dmt(%struct.drm_device* %72, i32 %73, i32 %74, i32 %75, i1 zeroext false) #8, !dbg !12767
  store %struct.drm_display_mode* %call104, %struct.drm_display_mode** %mode, align 8, !dbg !12768
  %76 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12769
  %tobool105 = icmp ne %struct.drm_display_mode* %76, null, !dbg !12769
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !12771

if.then106:                                       ; preds = %if.end103
  %77 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12772
  store %struct.drm_display_mode* %77, %struct.drm_display_mode** %retval, align 8, !dbg !12773
  br label %return, !dbg !12773

if.end107:                                        ; preds = %if.end103
  %78 = load i32, i32* %timing_level, align 4, !dbg !12774
  switch i32 %78, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb108
    i32 2, label %sw.bb110
    i32 3, label %sw.bb126
  ], !dbg !12775

sw.bb:                                            ; preds = %if.end107
  br label %sw.epilog, !dbg !12776

sw.bb108:                                         ; preds = %if.end107
  %79 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12778
  %80 = load i32, i32* %hsize, align 4, !dbg !12779
  %81 = load i32, i32* %vsize, align 4, !dbg !12780
  %82 = load i32, i32* %vrefresh_rate, align 4, !dbg !12781
  %call109 = call %struct.drm_display_mode* @drm_gtf_mode(%struct.drm_device* %79, i32 %80, i32 %81, i32 %82, i1 zeroext false, i32 0) #8, !dbg !12782
  store %struct.drm_display_mode* %call109, %struct.drm_display_mode** %mode, align 8, !dbg !12783
  br label %sw.epilog, !dbg !12784

sw.bb110:                                         ; preds = %if.end107
  %83 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12785
  %84 = load i32, i32* %hsize, align 4, !dbg !12786
  %85 = load i32, i32* %vsize, align 4, !dbg !12787
  %86 = load i32, i32* %vrefresh_rate, align 4, !dbg !12788
  %call111 = call %struct.drm_display_mode* @drm_gtf_mode(%struct.drm_device* %83, i32 %84, i32 %85, i32 %86, i1 zeroext false, i32 0) #8, !dbg !12789
  store %struct.drm_display_mode* %call111, %struct.drm_display_mode** %mode, align 8, !dbg !12790
  %87 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12791
  %tobool112 = icmp ne %struct.drm_display_mode* %87, null, !dbg !12791
  br i1 %tobool112, label %if.end114, label %if.then113, !dbg !12793

if.then113:                                       ; preds = %sw.bb110
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !12794
  br label %return, !dbg !12794

if.end114:                                        ; preds = %sw.bb110
  %88 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12795
  %call115 = call i32 @drm_mode_hsync(%struct.drm_display_mode* %88) #8, !dbg !12797
  %89 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12798
  %call116 = call i32 @drm_gtf2_hbreak(%struct.edid* %89) #8, !dbg !12799
  %cmp117 = icmp sgt i32 %call115, %call116, !dbg !12800
  br i1 %cmp117, label %if.then119, label %if.end125, !dbg !12801

if.then119:                                       ; preds = %if.end114
  %90 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12802
  %91 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12804
  call void @drm_mode_destroy(%struct.drm_device* %90, %struct.drm_display_mode* %91) #8, !dbg !12805
  %92 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12806
  %93 = load i32, i32* %hsize, align 4, !dbg !12807
  %94 = load i32, i32* %vsize, align 4, !dbg !12808
  %95 = load i32, i32* %vrefresh_rate, align 4, !dbg !12809
  %96 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12810
  %call120 = call i32 @drm_gtf2_m(%struct.edid* %96) #8, !dbg !12811
  %97 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12812
  %call121 = call i32 @drm_gtf2_2c(%struct.edid* %97) #8, !dbg !12813
  %98 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12814
  %call122 = call i32 @drm_gtf2_k(%struct.edid* %98) #8, !dbg !12815
  %99 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12816
  %call123 = call i32 @drm_gtf2_2j(%struct.edid* %99) #8, !dbg !12817
  %call124 = call %struct.drm_display_mode* @drm_gtf_mode_complex(%struct.drm_device* %92, i32 %93, i32 %94, i32 %95, i1 zeroext false, i32 0, i32 %call120, i32 %call121, i32 %call122, i32 %call123) #8, !dbg !12818
  store %struct.drm_display_mode* %call124, %struct.drm_display_mode** %mode, align 8, !dbg !12819
  br label %if.end125, !dbg !12820

if.end125:                                        ; preds = %if.then119, %if.end114
  br label %sw.epilog, !dbg !12821

sw.bb126:                                         ; preds = %if.end107
  %100 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12822
  %101 = load i32, i32* %hsize, align 4, !dbg !12823
  %102 = load i32, i32* %vsize, align 4, !dbg !12824
  %103 = load i32, i32* %vrefresh_rate, align 4, !dbg !12825
  %call127 = call %struct.drm_display_mode* @drm_cvt_mode(%struct.drm_device* %100, i32 %101, i32 %102, i32 %103, i1 zeroext false, i1 zeroext false, i1 zeroext false) #8, !dbg !12826
  store %struct.drm_display_mode* %call127, %struct.drm_display_mode** %mode, align 8, !dbg !12827
  br label %sw.epilog, !dbg !12828

sw.epilog:                                        ; preds = %if.end107, %sw.bb126, %if.end125, %sw.bb108, %sw.bb
  %104 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !12829
  store %struct.drm_display_mode* %104, %struct.drm_display_mode** %retval, align 8, !dbg !12830
  br label %return, !dbg !12830

return:                                           ; preds = %sw.epilog, %if.then113, %if.then106, %if.then101, %if.end87, %if.then86, %if.then66, %if.then
  %105 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval, align 8, !dbg !12831
  ret %struct.drm_display_mode* %105, !dbg !12831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_standard_modes(%struct.detailed_timing* %timing, i8* %c) #0 !dbg !12832 {
entry:
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %c.addr = alloca i8*, align 8
  %closure = alloca %struct.detailed_mode_closure*, align 8
  %data = alloca %struct.detailed_non_pixel*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %edid = alloca %struct.edid*, align 8
  %i = alloca i32, align 4
  %std = alloca %struct.std_timing*, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !12833, metadata !DIExpression()), !dbg !12834
  store i8* %c, i8** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !12835, metadata !DIExpression()), !dbg !12836
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure** %closure, metadata !12837, metadata !DIExpression()), !dbg !12838
  %0 = load i8*, i8** %c.addr, align 8, !dbg !12839
  %1 = bitcast i8* %0 to %struct.detailed_mode_closure*, !dbg !12839
  store %struct.detailed_mode_closure* %1, %struct.detailed_mode_closure** %closure, align 8, !dbg !12838
  call void @llvm.dbg.declare(metadata %struct.detailed_non_pixel** %data, metadata !12840, metadata !DIExpression()), !dbg !12842
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !12843
  %data1 = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %2, i32 0, i32 1, !dbg !12844
  %other_data = bitcast %union.anon.0* %data1 to %struct.detailed_non_pixel*, !dbg !12845
  store %struct.detailed_non_pixel* %other_data, %struct.detailed_non_pixel** %data, align 8, !dbg !12842
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !12846, metadata !DIExpression()), !dbg !12847
  %3 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !12848
  %connector2 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %3, i32 0, i32 0, !dbg !12849
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector2, align 8, !dbg !12849
  store %struct.drm_connector* %4, %struct.drm_connector** %connector, align 8, !dbg !12847
  call void @llvm.dbg.declare(metadata %struct.edid** %edid, metadata !12850, metadata !DIExpression()), !dbg !12851
  %5 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !12852
  %edid3 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %5, i32 0, i32 1, !dbg !12853
  %6 = load %struct.edid*, %struct.edid** %edid3, align 8, !dbg !12853
  store %struct.edid* %6, %struct.edid** %edid, align 8, !dbg !12851
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12854, metadata !DIExpression()), !dbg !12855
  %7 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !12856
  %8 = bitcast %struct.detailed_timing* %7 to i8*, !dbg !12858
  %call = call zeroext i1 @is_display_descriptor(i8* %8, i8 zeroext -6) #8, !dbg !12859
  br i1 %call, label %if.end, label %if.then, !dbg !12860

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !12861

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !12862
  br label %for.cond, !dbg !12864

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %i, align 4, !dbg !12865
  %cmp = icmp slt i32 %9, 6, !dbg !12867
  br i1 %cmp, label %for.body, label %for.end, !dbg !12868

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.std_timing** %std, metadata !12869, metadata !DIExpression()), !dbg !12871
  %10 = load %struct.detailed_non_pixel*, %struct.detailed_non_pixel** %data, align 8, !dbg !12872
  %data4 = getelementptr inbounds %struct.detailed_non_pixel, %struct.detailed_non_pixel* %10, i32 0, i32 3, !dbg !12873
  %timings = bitcast %union.anon.1* %data4 to [6 x %struct.std_timing]*, !dbg !12874
  %11 = load i32, i32* %i, align 4, !dbg !12875
  %idxprom = sext i32 %11 to i64, !dbg !12872
  %arrayidx = getelementptr [6 x %struct.std_timing], [6 x %struct.std_timing]* %timings, i64 0, i64 %idxprom, !dbg !12872
  store %struct.std_timing* %arrayidx, %struct.std_timing** %std, align 8, !dbg !12871
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !12876, metadata !DIExpression()), !dbg !12877
  %12 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12878
  %13 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !12879
  %14 = load %struct.std_timing*, %struct.std_timing** %std, align 8, !dbg !12880
  %call5 = call %struct.drm_display_mode* @drm_mode_std(%struct.drm_connector* %12, %struct.edid* %13, %struct.std_timing* %14) #8, !dbg !12881
  store %struct.drm_display_mode* %call5, %struct.drm_display_mode** %newmode, align 8, !dbg !12882
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !12883
  %tobool = icmp ne %struct.drm_display_mode* %15, null, !dbg !12883
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !12885

if.then6:                                         ; preds = %for.body
  %16 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12886
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !12888
  call void @drm_mode_probed_add(%struct.drm_connector* %16, %struct.drm_display_mode* %17) #8, !dbg !12889
  %18 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !12890
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %18, i32 0, i32 4, !dbg !12891
  %19 = load i32, i32* %modes, align 8, !dbg !12892
  %inc = add i32 %19, 1, !dbg !12892
  store i32 %inc, i32* %modes, align 8, !dbg !12892
  br label %if.end7, !dbg !12893

if.end7:                                          ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !12894

for.inc:                                          ; preds = %if.end7
  %20 = load i32, i32* %i, align 4, !dbg !12895
  %inc8 = add i32 %20, 1, !dbg !12895
  store i32 %inc8, i32* %i, align 4, !dbg !12895
  br label %for.cond, !dbg !12896, !llvm.loop !12897

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !12899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @standard_timing_level(%struct.edid* %edid) #0 !dbg !12900 {
entry:
  %retval = alloca i32, align 4
  %edid.addr = alloca %struct.edid*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !12903, metadata !DIExpression()), !dbg !12904
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12905
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %0, i32 0, i32 7, !dbg !12907
  %1 = load i8, i8* %revision, align 1, !dbg !12907
  %conv = zext i8 %1 to i32, !dbg !12905
  %cmp = icmp sge i32 %conv, 2, !dbg !12908
  br i1 %cmp, label %if.then, label %if.end17, !dbg !12909

if.then:                                          ; preds = %entry
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12910
  %revision2 = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 7, !dbg !12913
  %3 = load i8, i8* %revision2, align 1, !dbg !12913
  %conv3 = zext i8 %3 to i32, !dbg !12910
  %cmp4 = icmp sge i32 %conv3, 4, !dbg !12914
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !12915

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12916
  %features = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 12, !dbg !12917
  %5 = load i8, i8* %features, align 1, !dbg !12917
  %conv6 = zext i8 %5 to i32, !dbg !12916
  %and = and i32 %conv6, 1, !dbg !12918
  %tobool = icmp ne i32 %and, 0, !dbg !12918
  br i1 %tobool, label %if.then7, label %if.end, !dbg !12919

if.then7:                                         ; preds = %land.lhs.true
  store i32 3, i32* %retval, align 4, !dbg !12920
  br label %return, !dbg !12920

if.end:                                           ; preds = %land.lhs.true, %if.then
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12921
  %call = call i32 @drm_gtf2_hbreak(%struct.edid* %6) #8, !dbg !12923
  %tobool8 = icmp ne i32 %call, 0, !dbg !12923
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !12924

if.then9:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !12925
  br label %return, !dbg !12925

if.end10:                                         ; preds = %if.end
  %7 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12926
  %features11 = getelementptr inbounds %struct.edid, %struct.edid* %7, i32 0, i32 12, !dbg !12928
  %8 = load i8, i8* %features11, align 1, !dbg !12928
  %conv12 = zext i8 %8 to i32, !dbg !12926
  %and13 = and i32 %conv12, 1, !dbg !12929
  %tobool14 = icmp ne i32 %and13, 0, !dbg !12929
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !12930

if.then15:                                        ; preds = %if.end10
  store i32 1, i32* %retval, align 4, !dbg !12931
  br label %return, !dbg !12931

if.end16:                                         ; preds = %if.end10
  br label %if.end17, !dbg !12932

if.end17:                                         ; preds = %if.end16, %entry
  store i32 0, i32* %retval, align 4, !dbg !12933
  br label %return, !dbg !12933

return:                                           ; preds = %if.end17, %if.then15, %if.then9, %if.then7
  %9 = load i32, i32* %retval, align 4, !dbg !12934
  ret i32 %9, !dbg !12934
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @bad_std_timing(i8 zeroext %a, i8 zeroext %b) #0 !dbg !12935 {
entry:
  %a.addr = alloca i8, align 1
  %b.addr = alloca i8, align 1
  store i8 %a, i8* %a.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %a.addr, metadata !12938, metadata !DIExpression()), !dbg !12939
  store i8 %b, i8* %b.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %b.addr, metadata !12940, metadata !DIExpression()), !dbg !12941
  %0 = load i8, i8* %a.addr, align 1, !dbg !12942
  %conv = zext i8 %0 to i32, !dbg !12942
  %cmp = icmp eq i32 %conv, 0, !dbg !12943
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !12944

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %b.addr, align 1, !dbg !12945
  %conv2 = zext i8 %1 to i32, !dbg !12945
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !12946
  br i1 %cmp3, label %lor.end, label %lor.lhs.false, !dbg !12947

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i8, i8* %a.addr, align 1, !dbg !12948
  %conv5 = zext i8 %2 to i32, !dbg !12948
  %cmp6 = icmp eq i32 %conv5, 1, !dbg !12949
  br i1 %cmp6, label %land.lhs.true8, label %lor.rhs, !dbg !12950

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %3 = load i8, i8* %b.addr, align 1, !dbg !12951
  %conv9 = zext i8 %3 to i32, !dbg !12951
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !12952
  br i1 %cmp10, label %lor.end, label %lor.rhs, !dbg !12953

lor.rhs:                                          ; preds = %land.lhs.true8, %lor.lhs.false
  %4 = load i8, i8* %a.addr, align 1, !dbg !12954
  %conv12 = zext i8 %4 to i32, !dbg !12954
  %cmp13 = icmp eq i32 %conv12, 32, !dbg !12955
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !12956

land.rhs:                                         ; preds = %lor.rhs
  %5 = load i8, i8* %b.addr, align 1, !dbg !12957
  %conv15 = zext i8 %5 to i32, !dbg !12957
  %cmp16 = icmp eq i32 %conv15, 32, !dbg !12958
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %cmp16, %land.rhs ], !dbg !12959
  br label %lor.end, !dbg !12953

lor.end:                                          ; preds = %land.end, %land.lhs.true8, %land.lhs.true
  %7 = phi i1 [ true, %land.lhs.true8 ], [ true, %land.lhs.true ], [ %6, %land.end ]
  %lor.ext = zext i1 %7 to i32, !dbg !12953
  ret i32 %lor.ext, !dbg !12960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_monitor_supports_rb(%struct.edid* %edid) #0 !dbg !12961 {
entry:
  %retval = alloca i1, align 1
  %edid.addr = alloca %struct.edid*, align 8
  %ret = alloca i8, align 1
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !12962, metadata !DIExpression()), !dbg !12963
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12964
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %0, i32 0, i32 7, !dbg !12966
  %1 = load i8, i8* %revision, align 1, !dbg !12966
  %conv = zext i8 %1 to i32, !dbg !12964
  %cmp = icmp sge i32 %conv, 4, !dbg !12967
  br i1 %cmp, label %if.then, label %if.end, !dbg !12968

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !12969, metadata !DIExpression()), !dbg !12971
  store i8 0, i8* %ret, align 1, !dbg !12971
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12972
  %3 = bitcast %struct.edid* %2 to i8*, !dbg !12973
  call void @drm_for_each_detailed_block(i8* %3, void (%struct.detailed_timing*, i8*)* @is_rb, i8* %ret) #8, !dbg !12974
  %4 = load i8, i8* %ret, align 1, !dbg !12975
  %tobool = trunc i8 %4 to i1, !dbg !12975
  store i1 %tobool, i1* %retval, align 1, !dbg !12976
  br label %return, !dbg !12976

if.end:                                           ; preds = %entry
  %5 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !12977
  %input = getelementptr inbounds %struct.edid, %struct.edid* %5, i32 0, i32 8, !dbg !12978
  %6 = load i8, i8* %input, align 1, !dbg !12978
  %conv2 = zext i8 %6 to i32, !dbg !12977
  %and = and i32 %conv2, 128, !dbg !12979
  %cmp3 = icmp ne i32 %and, 0, !dbg !12980
  store i1 %cmp3, i1* %retval, align 1, !dbg !12981
  br label %return, !dbg !12981

return:                                           ; preds = %if.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !12982
  ret i1 %7, !dbg !12982
}

; Function Attrs: noredzone
declare dso_local %struct.drm_display_mode* @drm_gtf_mode(%struct.drm_device*, i32, i32, i32, i1 zeroext, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_mode_hsync(%struct.drm_display_mode* %mode) #0 !dbg !12983 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %__x = alloca i32, align 4
  %__d = alloca i16, align 2
  %tmp = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !12986, metadata !DIExpression()), !dbg !12987
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12988
  %htotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 4, !dbg !12990
  %1 = load i16, i16* %htotal, align 2, !dbg !12990
  %conv = zext i16 %1 to i32, !dbg !12988
  %cmp = icmp sle i32 %conv, 0, !dbg !12991
  br i1 %cmp, label %if.then, label %if.end, !dbg !12992

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12993
  br label %return, !dbg !12993

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__x, metadata !12994, metadata !DIExpression()), !dbg !12996
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12996
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 0, !dbg !12996
  %3 = load i32, i32* %clock, align 8, !dbg !12996
  store i32 %3, i32* %__x, align 4, !dbg !12996
  call void @llvm.dbg.declare(metadata i16* %__d, metadata !12997, metadata !DIExpression()), !dbg !12996
  %4 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12996
  %htotal2 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %4, i32 0, i32 4, !dbg !12996
  %5 = load i16, i16* %htotal2, align 2, !dbg !12996
  store i16 %5, i16* %__d, align 2, !dbg !12996
  %6 = load i32, i32* %__x, align 4, !dbg !12996
  %7 = load i16, i16* %__d, align 2, !dbg !12996
  %conv3 = zext i16 %7 to i32, !dbg !12996
  %div = sdiv i32 %conv3, 2, !dbg !12996
  %add = add i32 %6, %div, !dbg !12996
  %8 = load i16, i16* %__d, align 2, !dbg !12996
  %conv4 = zext i16 %8 to i32, !dbg !12996
  %div5 = sdiv i32 %add, %conv4, !dbg !12996
  store i32 %div5, i32* %tmp, align 4, !dbg !12996
  %9 = load i32, i32* %tmp, align 4, !dbg !12996
  store i32 %9, i32* %retval, align 4, !dbg !12998
  br label %return, !dbg !12998

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !12999
  ret i32 %10, !dbg !12999
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_gtf2_hbreak(%struct.edid* %edid) #0 !dbg !13000 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %r = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !13001, metadata !DIExpression()), !dbg !13002
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13003, metadata !DIExpression()), !dbg !13004
  store i8* null, i8** %r, align 8, !dbg !13004
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !13005
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !13006
  %2 = bitcast i8** %r to i8*, !dbg !13007
  call void @drm_for_each_detailed_block(i8* %1, void (%struct.detailed_timing*, i8*)* @find_gtf2, i8* %2) #8, !dbg !13008
  %3 = load i8*, i8** %r, align 8, !dbg !13009
  %tobool = icmp ne i8* %3, null, !dbg !13009
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13009

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %r, align 8, !dbg !13010
  %arrayidx = getelementptr i8, i8* %4, i64 12, !dbg !13010
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13010
  %conv = zext i8 %5 to i32, !dbg !13010
  %mul = mul i32 %conv, 2, !dbg !13011
  br label %cond.end, !dbg !13009

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13009

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %mul, %cond.true ], [ 0, %cond.false ], !dbg !13009
  ret i32 %cond, !dbg !13012
}

; Function Attrs: noredzone
declare dso_local void @drm_mode_destroy(%struct.drm_device*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_display_mode* @drm_gtf_mode_complex(%struct.drm_device*, i32, i32, i32, i1 zeroext, i32, i32, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_gtf2_m(%struct.edid* %edid) #0 !dbg !13013 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %r = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !13014, metadata !DIExpression()), !dbg !13015
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13016, metadata !DIExpression()), !dbg !13017
  store i8* null, i8** %r, align 8, !dbg !13017
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !13018
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !13019
  %2 = bitcast i8** %r to i8*, !dbg !13020
  call void @drm_for_each_detailed_block(i8* %1, void (%struct.detailed_timing*, i8*)* @find_gtf2, i8* %2) #8, !dbg !13021
  %3 = load i8*, i8** %r, align 8, !dbg !13022
  %tobool = icmp ne i8* %3, null, !dbg !13022
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13022

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %r, align 8, !dbg !13023
  %arrayidx = getelementptr i8, i8* %4, i64 15, !dbg !13023
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13023
  %conv = zext i8 %5 to i32, !dbg !13023
  %shl = shl i32 %conv, 8, !dbg !13024
  %6 = load i8*, i8** %r, align 8, !dbg !13025
  %arrayidx1 = getelementptr i8, i8* %6, i64 14, !dbg !13025
  %7 = load i8, i8* %arrayidx1, align 1, !dbg !13025
  %conv2 = zext i8 %7 to i32, !dbg !13025
  %add = add i32 %shl, %conv2, !dbg !13026
  br label %cond.end, !dbg !13022

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13022

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 0, %cond.false ], !dbg !13022
  ret i32 %cond, !dbg !13027
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_gtf2_2c(%struct.edid* %edid) #0 !dbg !13028 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %r = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13031, metadata !DIExpression()), !dbg !13032
  store i8* null, i8** %r, align 8, !dbg !13032
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !13033
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !13034
  %2 = bitcast i8** %r to i8*, !dbg !13035
  call void @drm_for_each_detailed_block(i8* %1, void (%struct.detailed_timing*, i8*)* @find_gtf2, i8* %2) #8, !dbg !13036
  %3 = load i8*, i8** %r, align 8, !dbg !13037
  %tobool = icmp ne i8* %3, null, !dbg !13037
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13037

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %r, align 8, !dbg !13038
  %arrayidx = getelementptr i8, i8* %4, i64 13, !dbg !13038
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13038
  %conv = zext i8 %5 to i32, !dbg !13038
  br label %cond.end, !dbg !13037

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13037

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !13037
  ret i32 %cond, !dbg !13039
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_gtf2_k(%struct.edid* %edid) #0 !dbg !13040 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %r = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !13041, metadata !DIExpression()), !dbg !13042
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13043, metadata !DIExpression()), !dbg !13044
  store i8* null, i8** %r, align 8, !dbg !13044
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !13045
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !13046
  %2 = bitcast i8** %r to i8*, !dbg !13047
  call void @drm_for_each_detailed_block(i8* %1, void (%struct.detailed_timing*, i8*)* @find_gtf2, i8* %2) #8, !dbg !13048
  %3 = load i8*, i8** %r, align 8, !dbg !13049
  %tobool = icmp ne i8* %3, null, !dbg !13049
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13049

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %r, align 8, !dbg !13050
  %arrayidx = getelementptr i8, i8* %4, i64 16, !dbg !13050
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13050
  %conv = zext i8 %5 to i32, !dbg !13050
  br label %cond.end, !dbg !13049

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13049

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !13049
  ret i32 %cond, !dbg !13051
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_gtf2_2j(%struct.edid* %edid) #0 !dbg !13052 {
entry:
  %edid.addr = alloca %struct.edid*, align 8
  %r = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !13053, metadata !DIExpression()), !dbg !13054
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13055, metadata !DIExpression()), !dbg !13056
  store i8* null, i8** %r, align 8, !dbg !13056
  %0 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !13057
  %1 = bitcast %struct.edid* %0 to i8*, !dbg !13058
  %2 = bitcast i8** %r to i8*, !dbg !13059
  call void @drm_for_each_detailed_block(i8* %1, void (%struct.detailed_timing*, i8*)* @find_gtf2, i8* %2) #8, !dbg !13060
  %3 = load i8*, i8** %r, align 8, !dbg !13061
  %tobool = icmp ne i8* %3, null, !dbg !13061
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13061

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %r, align 8, !dbg !13062
  %arrayidx = getelementptr i8, i8* %4, i64 17, !dbg !13062
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13062
  %conv = zext i8 %5 to i32, !dbg !13062
  br label %cond.end, !dbg !13061

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !13061

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %cond.false ], !dbg !13061
  ret i32 %cond, !dbg !13063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @is_rb(%struct.detailed_timing* %t, i8* %data) #0 !dbg !13064 {
entry:
  %t.addr = alloca %struct.detailed_timing*, align 8
  %data.addr = alloca i8*, align 8
  %r = alloca i8*, align 8
  store %struct.detailed_timing* %t, %struct.detailed_timing** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %t.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13067, metadata !DIExpression()), !dbg !13068
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13069, metadata !DIExpression()), !dbg !13070
  %0 = load %struct.detailed_timing*, %struct.detailed_timing** %t.addr, align 8, !dbg !13071
  %1 = bitcast %struct.detailed_timing* %0 to i8*, !dbg !13072
  store i8* %1, i8** %r, align 8, !dbg !13070
  %2 = load i8*, i8** %r, align 8, !dbg !13073
  %call = call zeroext i1 @is_display_descriptor(i8* %2, i8 zeroext -3) #8, !dbg !13075
  br i1 %call, label %if.end, label %if.then, !dbg !13076

if.then:                                          ; preds = %entry
  br label %if.end2, !dbg !13077

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %r, align 8, !dbg !13078
  %arrayidx = getelementptr i8, i8* %3, i64 15, !dbg !13078
  %4 = load i8, i8* %arrayidx, align 1, !dbg !13078
  %conv = zext i8 %4 to i32, !dbg !13078
  %and = and i32 %conv, 16, !dbg !13080
  %tobool = icmp ne i32 %and, 0, !dbg !13080
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !13081

if.then1:                                         ; preds = %if.end
  %5 = load i8*, i8** %data.addr, align 8, !dbg !13082
  store i8 1, i8* %5, align 1, !dbg !13083
  br label %if.end2, !dbg !13084

if.end2:                                          ; preds = %if.then, %if.then1, %if.end
  ret void, !dbg !13085
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @find_gtf2(%struct.detailed_timing* %t, i8* %data) #0 !dbg !13086 {
entry:
  %t.addr = alloca %struct.detailed_timing*, align 8
  %data.addr = alloca i8*, align 8
  %r = alloca i8*, align 8
  store %struct.detailed_timing* %t, %struct.detailed_timing** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %t.addr, metadata !13087, metadata !DIExpression()), !dbg !13088
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !13089, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.declare(metadata i8** %r, metadata !13091, metadata !DIExpression()), !dbg !13092
  %0 = load %struct.detailed_timing*, %struct.detailed_timing** %t.addr, align 8, !dbg !13093
  %1 = bitcast %struct.detailed_timing* %0 to i8*, !dbg !13094
  store i8* %1, i8** %r, align 8, !dbg !13092
  %2 = load i8*, i8** %r, align 8, !dbg !13095
  %call = call zeroext i1 @is_display_descriptor(i8* %2, i8 zeroext -3) #8, !dbg !13097
  br i1 %call, label %if.end, label %if.then, !dbg !13098

if.then:                                          ; preds = %entry
  br label %if.end3, !dbg !13099

if.end:                                           ; preds = %entry
  %3 = load i8*, i8** %r, align 8, !dbg !13100
  %arrayidx = getelementptr i8, i8* %3, i64 10, !dbg !13100
  %4 = load i8, i8* %arrayidx, align 1, !dbg !13100
  %conv = zext i8 %4 to i32, !dbg !13100
  %cmp = icmp eq i32 %conv, 2, !dbg !13102
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13103

if.then2:                                         ; preds = %if.end
  %5 = load i8*, i8** %r, align 8, !dbg !13104
  %6 = load i8*, i8** %data.addr, align 8, !dbg !13105
  %7 = bitcast i8* %6 to i8**, !dbg !13106
  store i8* %5, i8** %7, align 8, !dbg !13107
  br label %if.end3, !dbg !13108

if.end3:                                          ; preds = %if.then, %if.then2, %if.end
  ret void, !dbg !13109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_established_modes(%struct.detailed_timing* %timing, i8* %c) #0 !dbg !13110 {
entry:
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %c.addr = alloca i8*, align 8
  %closure = alloca %struct.detailed_mode_closure*, align 8
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  store i8* %c, i8** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure** %closure, metadata !13115, metadata !DIExpression()), !dbg !13116
  %0 = load i8*, i8** %c.addr, align 8, !dbg !13117
  %1 = bitcast i8* %0 to %struct.detailed_mode_closure*, !dbg !13117
  store %struct.detailed_mode_closure* %1, %struct.detailed_mode_closure** %closure, align 8, !dbg !13116
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !13118
  %3 = bitcast %struct.detailed_timing* %2 to i8*, !dbg !13120
  %call = call zeroext i1 @is_display_descriptor(i8* %3, i8 zeroext -9) #8, !dbg !13121
  br i1 %call, label %if.end, label %if.then, !dbg !13122

if.then:                                          ; preds = %entry
  br label %return, !dbg !13123

if.end:                                           ; preds = %entry
  %4 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !13124
  %connector = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %4, i32 0, i32 0, !dbg !13125
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !13125
  %6 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !13126
  %call1 = call i32 @drm_est3_modes(%struct.drm_connector* %5, %struct.detailed_timing* %6) #8, !dbg !13127
  %7 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !13128
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %7, i32 0, i32 4, !dbg !13129
  %8 = load i32, i32* %modes, align 8, !dbg !13130
  %add = add i32 %8, %call1, !dbg !13130
  store i32 %add, i32* %modes, align 8, !dbg !13130
  br label %return, !dbg !13131

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13131
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_est3_modes(%struct.drm_connector* %connector, %struct.detailed_timing* %timing) #0 !dbg !13132 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %m = alloca i32, align 4
  %modes = alloca i32, align 4
  %mode = alloca %struct.drm_display_mode*, align 8
  %est = alloca i8*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !13133, metadata !DIExpression()), !dbg !13134
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !13135, metadata !DIExpression()), !dbg !13136
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13137, metadata !DIExpression()), !dbg !13138
  call void @llvm.dbg.declare(metadata i32* %j, metadata !13139, metadata !DIExpression()), !dbg !13140
  call void @llvm.dbg.declare(metadata i32* %m, metadata !13141, metadata !DIExpression()), !dbg !13142
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !13143, metadata !DIExpression()), !dbg !13144
  store i32 0, i32* %modes, align 4, !dbg !13144
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !13145, metadata !DIExpression()), !dbg !13146
  call void @llvm.dbg.declare(metadata i8** %est, metadata !13147, metadata !DIExpression()), !dbg !13148
  %0 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !13149
  %1 = bitcast %struct.detailed_timing* %0 to i8*, !dbg !13150
  %add.ptr = getelementptr i8, i8* %1, i64 6, !dbg !13151
  store i8* %add.ptr, i8** %est, align 8, !dbg !13148
  store i32 0, i32* %i, align 4, !dbg !13152
  br label %for.cond, !dbg !13154

for.cond:                                         ; preds = %for.inc24, %entry
  %2 = load i32, i32* %i, align 4, !dbg !13155
  %cmp = icmp slt i32 %2, 6, !dbg !13157
  br i1 %cmp, label %for.body, label %for.end26, !dbg !13158

for.body:                                         ; preds = %for.cond
  store i32 7, i32* %j, align 4, !dbg !13159
  br label %for.cond1, !dbg !13162

for.cond1:                                        ; preds = %for.inc, %for.body
  %3 = load i32, i32* %j, align 4, !dbg !13163
  %cmp2 = icmp sge i32 %3, 0, !dbg !13165
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !13166

for.body3:                                        ; preds = %for.cond1
  %4 = load i32, i32* %i, align 4, !dbg !13167
  %mul = mul i32 %4, 8, !dbg !13169
  %5 = load i32, i32* %j, align 4, !dbg !13170
  %sub = sub i32 7, %5, !dbg !13171
  %add = add i32 %mul, %sub, !dbg !13172
  store i32 %add, i32* %m, align 4, !dbg !13173
  %6 = load i32, i32* %m, align 4, !dbg !13174
  %conv = sext i32 %6 to i64, !dbg !13174
  %cmp4 = icmp uge i64 %conv, 44, !dbg !13176
  br i1 %cmp4, label %if.then, label %if.end, !dbg !13177

if.then:                                          ; preds = %for.body3
  br label %for.end, !dbg !13178

if.end:                                           ; preds = %for.body3
  %7 = load i8*, i8** %est, align 8, !dbg !13179
  %8 = load i32, i32* %i, align 4, !dbg !13181
  %idxprom = sext i32 %8 to i64, !dbg !13179
  %arrayidx = getelementptr i8, i8* %7, i64 %idxprom, !dbg !13179
  %9 = load i8, i8* %arrayidx, align 1, !dbg !13179
  %conv6 = zext i8 %9 to i32, !dbg !13179
  %10 = load i32, i32* %j, align 4, !dbg !13182
  %shl = shl i32 1, %10, !dbg !13183
  %and = and i32 %conv6, %shl, !dbg !13184
  %tobool = icmp ne i32 %and, 0, !dbg !13184
  br i1 %tobool, label %if.then7, label %if.end23, !dbg !13185

if.then7:                                         ; preds = %if.end
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13186
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %11, i32 0, i32 0, !dbg !13188
  %12 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !13188
  %13 = load i32, i32* %m, align 4, !dbg !13189
  %idxprom8 = sext i32 %13 to i64, !dbg !13190
  %arrayidx9 = getelementptr [44 x %struct.minimode], [44 x %struct.minimode]* @est3_modes, i64 0, i64 %idxprom8, !dbg !13190
  %w = getelementptr inbounds %struct.minimode, %struct.minimode* %arrayidx9, i32 0, i32 0, !dbg !13191
  %14 = load i16, i16* %w, align 8, !dbg !13191
  %conv10 = sext i16 %14 to i32, !dbg !13190
  %15 = load i32, i32* %m, align 4, !dbg !13192
  %idxprom11 = sext i32 %15 to i64, !dbg !13193
  %arrayidx12 = getelementptr [44 x %struct.minimode], [44 x %struct.minimode]* @est3_modes, i64 0, i64 %idxprom11, !dbg !13193
  %h = getelementptr inbounds %struct.minimode, %struct.minimode* %arrayidx12, i32 0, i32 1, !dbg !13194
  %16 = load i16, i16* %h, align 2, !dbg !13194
  %conv13 = sext i16 %16 to i32, !dbg !13193
  %17 = load i32, i32* %m, align 4, !dbg !13195
  %idxprom14 = sext i32 %17 to i64, !dbg !13196
  %arrayidx15 = getelementptr [44 x %struct.minimode], [44 x %struct.minimode]* @est3_modes, i64 0, i64 %idxprom14, !dbg !13196
  %r = getelementptr inbounds %struct.minimode, %struct.minimode* %arrayidx15, i32 0, i32 2, !dbg !13197
  %18 = load i16, i16* %r, align 4, !dbg !13197
  %conv16 = sext i16 %18 to i32, !dbg !13196
  %19 = load i32, i32* %m, align 4, !dbg !13198
  %idxprom17 = sext i32 %19 to i64, !dbg !13199
  %arrayidx18 = getelementptr [44 x %struct.minimode], [44 x %struct.minimode]* @est3_modes, i64 0, i64 %idxprom17, !dbg !13199
  %rb = getelementptr inbounds %struct.minimode, %struct.minimode* %arrayidx18, i32 0, i32 3, !dbg !13200
  %20 = load i16, i16* %rb, align 2, !dbg !13200
  %tobool19 = icmp ne i16 %20, 0, !dbg !13199
  %call = call %struct.drm_display_mode* @drm_mode_find_dmt(%struct.drm_device* %12, i32 %conv10, i32 %conv13, i32 %conv16, i1 zeroext %tobool19) #8, !dbg !13201
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %mode, align 8, !dbg !13202
  %21 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !13203
  %tobool20 = icmp ne %struct.drm_display_mode* %21, null, !dbg !13203
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !13205

if.then21:                                        ; preds = %if.then7
  %22 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13206
  %23 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !13208
  call void @drm_mode_probed_add(%struct.drm_connector* %22, %struct.drm_display_mode* %23) #8, !dbg !13209
  %24 = load i32, i32* %modes, align 4, !dbg !13210
  %inc = add i32 %24, 1, !dbg !13210
  store i32 %inc, i32* %modes, align 4, !dbg !13210
  br label %if.end22, !dbg !13211

if.end22:                                         ; preds = %if.then21, %if.then7
  br label %if.end23, !dbg !13212

if.end23:                                         ; preds = %if.end22, %if.end
  br label %for.inc, !dbg !13213

for.inc:                                          ; preds = %if.end23
  %25 = load i32, i32* %j, align 4, !dbg !13214
  %dec = add i32 %25, -1, !dbg !13214
  store i32 %dec, i32* %j, align 4, !dbg !13214
  br label %for.cond1, !dbg !13215, !llvm.loop !13216

for.end:                                          ; preds = %if.then, %for.cond1
  br label %for.inc24, !dbg !13218

for.inc24:                                        ; preds = %for.end
  %26 = load i32, i32* %i, align 4, !dbg !13219
  %inc25 = add i32 %26, 1, !dbg !13219
  store i32 %inc25, i32* %i, align 4, !dbg !13219
  br label %for.cond, !dbg !13220, !llvm.loop !13221

for.end26:                                        ; preds = %for.cond
  %27 = load i32, i32* %modes, align 4, !dbg !13223
  ret i32 %27, !dbg !13224
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_cea_modes(%struct.drm_connector* %connector, i8* %db, i8 zeroext %len) #0 !dbg !13225 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %len.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %modes = alloca i32, align 4
  %hdmi = alloca %struct.drm_hdmi_info*, align 8
  %mode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !13228, metadata !DIExpression()), !dbg !13229
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !13230, metadata !DIExpression()), !dbg !13231
  store i8 %len, i8* %len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %len.addr, metadata !13232, metadata !DIExpression()), !dbg !13233
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13234, metadata !DIExpression()), !dbg !13235
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !13236, metadata !DIExpression()), !dbg !13237
  store i32 0, i32* %modes, align 4, !dbg !13237
  call void @llvm.dbg.declare(metadata %struct.drm_hdmi_info** %hdmi, metadata !13238, metadata !DIExpression()), !dbg !13239
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13240
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !13241
  %hdmi1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 16, !dbg !13242
  store %struct.drm_hdmi_info* %hdmi1, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !13239
  store i32 0, i32* %i, align 4, !dbg !13243
  br label %for.cond, !dbg !13245

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !13246
  %2 = load i8, i8* %len.addr, align 1, !dbg !13248
  %conv = zext i8 %2 to i32, !dbg !13248
  %cmp = icmp slt i32 %1, %conv, !dbg !13249
  br i1 %cmp, label %for.body, label %for.end, !dbg !13250

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !13251, metadata !DIExpression()), !dbg !13253
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13254
  %4 = load i8*, i8** %db.addr, align 8, !dbg !13255
  %5 = load i8, i8* %len.addr, align 1, !dbg !13256
  %6 = load i32, i32* %i, align 4, !dbg !13257
  %conv3 = trunc i32 %6 to i8, !dbg !13257
  %call = call %struct.drm_display_mode* @drm_display_mode_from_vic_index(%struct.drm_connector* %3, i8* %4, i8 zeroext %5, i8 zeroext %conv3) #8, !dbg !13258
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %mode, align 8, !dbg !13259
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !13260
  %tobool = icmp ne %struct.drm_display_mode* %7, null, !dbg !13260
  br i1 %tobool, label %if.then, label %if.end8, !dbg !13262

if.then:                                          ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !13263
  %cmp4 = icmp slt i32 %8, 64, !dbg !13266
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !13267

land.lhs.true:                                    ; preds = %if.then
  %9 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !13268
  %y420_cmdb_map = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %9, i32 0, i32 3, !dbg !13269
  %10 = load i64, i64* %y420_cmdb_map, align 8, !dbg !13269
  %11 = load i32, i32* %i, align 4, !dbg !13270
  %sh_prom = zext i32 %11 to i64, !dbg !13271
  %shl = shl i64 1, %sh_prom, !dbg !13271
  %and = and i64 %10, %shl, !dbg !13272
  %tobool6 = icmp ne i64 %and, 0, !dbg !13272
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !13273

if.then7:                                         ; preds = %land.lhs.true
  %12 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13274
  %13 = load i8*, i8** %db.addr, align 8, !dbg !13275
  %14 = load i32, i32* %i, align 4, !dbg !13276
  %idxprom = sext i32 %14 to i64, !dbg !13275
  %arrayidx = getelementptr i8, i8* %13, i64 %idxprom, !dbg !13275
  %15 = load i8, i8* %arrayidx, align 1, !dbg !13275
  call void @drm_add_cmdb_modes(%struct.drm_connector* %12, i8 zeroext %15) #8, !dbg !13277
  br label %if.end, !dbg !13277

if.end:                                           ; preds = %if.then7, %land.lhs.true, %if.then
  %16 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13278
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !13279
  call void @drm_mode_probed_add(%struct.drm_connector* %16, %struct.drm_display_mode* %17) #8, !dbg !13280
  %18 = load i32, i32* %modes, align 4, !dbg !13281
  %inc = add i32 %18, 1, !dbg !13281
  store i32 %inc, i32* %modes, align 4, !dbg !13281
  br label %if.end8, !dbg !13282

if.end8:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !13283

for.inc:                                          ; preds = %if.end8
  %19 = load i32, i32* %i, align 4, !dbg !13284
  %inc9 = add i32 %19, 1, !dbg !13284
  store i32 %inc9, i32* %i, align 4, !dbg !13284
  br label %for.cond, !dbg !13285, !llvm.loop !13286

for.end:                                          ; preds = %for.cond
  %20 = load i32, i32* %modes, align 4, !dbg !13288
  ret i32 %20, !dbg !13289
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @cea_db_is_y420vdb(i8* %db) #0 !dbg !13290 {
entry:
  %retval = alloca i1, align 1
  %db.addr = alloca i8*, align 8
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !13291, metadata !DIExpression()), !dbg !13292
  %0 = load i8*, i8** %db.addr, align 8, !dbg !13293
  %call = call i32 @cea_db_tag(i8* %0) #8, !dbg !13295
  %cmp = icmp ne i32 %call, 7, !dbg !13296
  br i1 %cmp, label %if.then, label %if.end, !dbg !13297

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !13298
  br label %return, !dbg !13298

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %db.addr, align 8, !dbg !13299
  %call1 = call i32 @cea_db_payload_len(i8* %1) #8, !dbg !13301
  %tobool = icmp ne i32 %call1, 0, !dbg !13301
  br i1 %tobool, label %if.end3, label %if.then2, !dbg !13302

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !13303
  br label %return, !dbg !13303

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %db.addr, align 8, !dbg !13304
  %call4 = call i32 @cea_db_extended_tag(i8* %2) #8, !dbg !13306
  %cmp5 = icmp ne i32 %call4, 14, !dbg !13307
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !13308

if.then6:                                         ; preds = %if.end3
  store i1 false, i1* %retval, align 1, !dbg !13309
  br label %return, !dbg !13309

if.end7:                                          ; preds = %if.end3
  store i1 true, i1* %retval, align 1, !dbg !13310
  br label %return, !dbg !13310

return:                                           ; preds = %if.end7, %if.then6, %if.then2, %if.then
  %3 = load i1, i1* %retval, align 1, !dbg !13311
  ret i1 %3, !dbg !13311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_y420vdb_modes(%struct.drm_connector* %connector, i8* %svds, i8 zeroext %svds_len) #0 !dbg !13312 {
entry:
  %map.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i, metadata !13313, metadata !DIExpression()), !dbg !13318
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !13323, metadata !DIExpression()), !dbg !13324
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !13325, metadata !DIExpression()), !dbg !13326
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !13327
  %connector.addr = alloca %struct.drm_connector*, align 8
  %svds.addr = alloca i8*, align 8
  %svds_len.addr = alloca i8, align 1
  %modes = alloca i32, align 4
  %i = alloca i32, align 4
  %dev = alloca %struct.drm_device*, align 8
  %info = alloca %struct.drm_display_info*, align 8
  %hdmi = alloca %struct.drm_hdmi_info*, align 8
  %vic = alloca i8, align 1
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !13329, metadata !DIExpression()), !dbg !13330
  store i8* %svds, i8** %svds.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %svds.addr, metadata !13331, metadata !DIExpression()), !dbg !13332
  store i8 %svds_len, i8* %svds_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %svds_len.addr, metadata !13333, metadata !DIExpression()), !dbg !13334
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !13335, metadata !DIExpression()), !dbg !13336
  store i32 0, i32* %modes, align 4, !dbg !13336
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13337, metadata !DIExpression()), !dbg !13338
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !13339, metadata !DIExpression()), !dbg !13340
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13341
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !13342
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !13342
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !13340
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !13343, metadata !DIExpression()), !dbg !13344
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13345
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 18, !dbg !13346
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !13344
  call void @llvm.dbg.declare(metadata %struct.drm_hdmi_info** %hdmi, metadata !13347, metadata !DIExpression()), !dbg !13348
  %3 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !13349
  %hdmi2 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %3, i32 0, i32 16, !dbg !13350
  store %struct.drm_hdmi_info* %hdmi2, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !13348
  store i32 0, i32* %i, align 4, !dbg !13351
  br label %for.cond, !dbg !13352

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %i, align 4, !dbg !13353
  %5 = load i8, i8* %svds_len.addr, align 1, !dbg !13354
  %conv = zext i8 %5 to i32, !dbg !13354
  %cmp = icmp slt i32 %4, %conv, !dbg !13355
  br i1 %cmp, label %for.body, label %for.end, !dbg !13356

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !13357, metadata !DIExpression()), !dbg !13358
  %6 = load i8*, i8** %svds.addr, align 8, !dbg !13359
  %7 = load i32, i32* %i, align 4, !dbg !13360
  %idxprom = sext i32 %7 to i64, !dbg !13359
  %arrayidx = getelementptr i8, i8* %6, i64 %idxprom, !dbg !13359
  %8 = load i8, i8* %arrayidx, align 1, !dbg !13359
  %call = call zeroext i8 @svd_to_vic(i8 zeroext %8) #8, !dbg !13361
  store i8 %call, i8* %vic, align 1, !dbg !13358
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !13362, metadata !DIExpression()), !dbg !13363
  %9 = load i8, i8* %vic, align 1, !dbg !13364
  %call4 = call zeroext i1 @drm_valid_cea_vic(i8 zeroext %9) #8, !dbg !13366
  br i1 %call4, label %if.end, label %if.then, !dbg !13367

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !13368

if.end:                                           ; preds = %for.body
  %10 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !13369
  %11 = load i8, i8* %vic, align 1, !dbg !13370
  store i8 %11, i8* %vic.addr.i, align 1
  %12 = load i8, i8* %vic.addr.i, align 1, !dbg !13371
  %conv.i = zext i8 %12 to i32, !dbg !13371
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !13372
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !13373

land.lhs.true.i:                                  ; preds = %if.end
  %13 = load i8, i8* %vic.addr.i, align 1, !dbg !13374
  %conv4.i = zext i8 %13 to i64, !dbg !13374
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !13375
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !13376

if.then.i:                                        ; preds = %land.lhs.true.i
  %14 = load i8, i8* %vic.addr.i, align 1, !dbg !13377
  %conv7.i = zext i8 %14 to i32, !dbg !13377
  %sub.i = sub i32 %conv7.i, 1, !dbg !13378
  %idxprom.i = sext i32 %sub.i to i64, !dbg !13379
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !13379
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !13380
  br label %cea_mode_for_vic.exit, !dbg !13380

if.end.i:                                         ; preds = %land.lhs.true.i, %if.end
  %15 = load i8, i8* %vic.addr.i, align 1, !dbg !13381
  %conv8.i = zext i8 %15 to i32, !dbg !13381
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !13382
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !13383

land.lhs.true11.i:                                ; preds = %if.end.i
  %16 = load i8, i8* %vic.addr.i, align 1, !dbg !13384
  %conv12.i = zext i8 %16 to i64, !dbg !13384
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !13385
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !13386

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %17 = load i8, i8* %vic.addr.i, align 1, !dbg !13387
  %conv16.i = zext i8 %17 to i32, !dbg !13387
  %sub17.i = sub i32 %conv16.i, 193, !dbg !13388
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !13389
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !13389
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !13390
  br label %cea_mode_for_vic.exit, !dbg !13390

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !13391
  br label %cea_mode_for_vic.exit, !dbg !13391

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !13392
  %call6 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %10, %struct.drm_display_mode* %18) #8, !dbg !13393
  store %struct.drm_display_mode* %call6, %struct.drm_display_mode** %newmode, align 8, !dbg !13394
  %19 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13395
  %tobool = icmp ne %struct.drm_display_mode* %19, null, !dbg !13395
  br i1 %tobool, label %if.end8, label %if.then7, !dbg !13397

if.then7:                                         ; preds = %cea_mode_for_vic.exit
  br label %for.end, !dbg !13398

if.end8:                                          ; preds = %cea_mode_for_vic.exit
  %20 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !13399
  %y420_vdb_modes = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %20, i32 0, i32 1, !dbg !13400
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %y420_vdb_modes, i64 0, i64 0, !dbg !13399
  %21 = load i8, i8* %vic, align 1, !dbg !13401
  %conv9 = zext i8 %21 to i32, !dbg !13401
  store i64* %arraydecay, i64** %map.addr.i, align 8
  store i32 %conv9, i32* %start.addr.i, align 4
  store i32 1, i32* %nbits.addr.i, align 4
  %22 = load i32, i32* %nbits.addr.i, align 4, !dbg !13402
  %23 = call i1 @llvm.is.constant.i32(i32 %22) #9, !dbg !13404
  br i1 %23, label %land.lhs.true.i16, label %if.else.i, !dbg !13405

land.lhs.true.i16:                                ; preds = %if.end8
  %24 = load i32, i32* %nbits.addr.i, align 4, !dbg !13406
  %cmp.i15 = icmp eq i32 %24, 1, !dbg !13407
  br i1 %cmp.i15, label %if.then.i18, label %if.else.i, !dbg !13408

if.then.i18:                                      ; preds = %land.lhs.true.i16
  %25 = load i32, i32* %start.addr.i, align 4, !dbg !13409
  %conv.i17 = zext i32 %25 to i64, !dbg !13409
  %26 = load i64*, i64** %map.addr.i, align 8, !dbg !13410
  call void @__set_bit(i64 %conv.i17, i64* %26) #12, !dbg !13411
  br label %bitmap_set.exit, !dbg !13411

if.else.i:                                        ; preds = %land.lhs.true.i16, %if.end8
  %27 = load i32, i32* %start.addr.i, align 4, !dbg !13412
  %and.i = and i32 %27, 7, !dbg !13414
  %28 = call i1 @llvm.is.constant.i32(i32 %and.i) #9, !dbg !13415
  br i1 %28, label %land.lhs.true1.i, label %if.else14.i, !dbg !13416

land.lhs.true1.i:                                 ; preds = %if.else.i
  %29 = load i32, i32* %start.addr.i, align 4, !dbg !13417
  %and2.i = and i32 %29, 7, !dbg !13417
  %cmp3.i = icmp eq i32 %and2.i, 0, !dbg !13417
  br i1 %cmp3.i, label %land.lhs.true5.i, label %if.else14.i, !dbg !13418

land.lhs.true5.i:                                 ; preds = %land.lhs.true1.i
  %30 = load i32, i32* %nbits.addr.i, align 4, !dbg !13419
  %and6.i = and i32 %30, 7, !dbg !13420
  %31 = call i1 @llvm.is.constant.i32(i32 %and6.i) #9, !dbg !13421
  br i1 %31, label %land.lhs.true7.i, label %if.else14.i, !dbg !13422

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %32 = load i32, i32* %nbits.addr.i, align 4, !dbg !13423
  %and8.i = and i32 %32, 7, !dbg !13423
  %cmp9.i19 = icmp eq i32 %and8.i, 0, !dbg !13423
  br i1 %cmp9.i19, label %if.then11.i, label %if.else14.i, !dbg !13424

if.then11.i:                                      ; preds = %land.lhs.true7.i
  %33 = load i64*, i64** %map.addr.i, align 8, !dbg !13425
  %34 = bitcast i64* %33 to i8*, !dbg !13426
  %35 = load i32, i32* %start.addr.i, align 4, !dbg !13427
  %div.i = udiv i32 %35, 8, !dbg !13428
  %idx.ext.i = zext i32 %div.i to i64, !dbg !13429
  %add.ptr.i = getelementptr i8, i8* %34, i64 %idx.ext.i, !dbg !13429
  %36 = load i32, i32* %nbits.addr.i, align 4, !dbg !13430
  %div12.i = udiv i32 %36, 8, !dbg !13431
  %conv13.i = zext i32 %div12.i to i64, !dbg !13430
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i, i8 -1, i64 %conv13.i, i1 false) #9, !dbg !13432
  br label %if.end.i20, !dbg !13432

if.else14.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true1.i, %if.else.i
  %37 = load i64*, i64** %map.addr.i, align 8, !dbg !13433
  %38 = load i32, i32* %start.addr.i, align 4, !dbg !13434
  %39 = load i32, i32* %nbits.addr.i, align 4, !dbg !13435
  call void @__bitmap_set(i64* %37, i32 %38, i32 %39) #12, !dbg !13436
  br label %if.end.i20

if.end.i20:                                       ; preds = %if.else14.i, %if.then11.i
  br label %bitmap_set.exit

bitmap_set.exit:                                  ; preds = %if.then.i18, %if.end.i20
  %40 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13437
  %41 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13438
  call void @drm_mode_probed_add(%struct.drm_connector* %40, %struct.drm_display_mode* %41) #8, !dbg !13439
  %42 = load i32, i32* %modes, align 4, !dbg !13440
  %inc = add i32 %42, 1, !dbg !13440
  store i32 %inc, i32* %modes, align 4, !dbg !13440
  br label %for.inc, !dbg !13441

for.inc:                                          ; preds = %bitmap_set.exit, %if.then
  %43 = load i32, i32* %i, align 4, !dbg !13442
  %inc10 = add i32 %43, 1, !dbg !13442
  store i32 %inc10, i32* %i, align 4, !dbg !13442
  br label %for.cond, !dbg !13443, !llvm.loop !13444

for.end:                                          ; preds = %if.then7, %for.cond
  %44 = load i32, i32* %modes, align 4, !dbg !13446
  %cmp11 = icmp sgt i32 %44, 0, !dbg !13448
  br i1 %cmp11, label %if.then13, label %if.end14, !dbg !13449

if.then13:                                        ; preds = %for.end
  %45 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !13450
  %color_formats = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %45, i32 0, i32 5, !dbg !13451
  %46 = load i32, i32* %color_formats, align 4, !dbg !13452
  %or = or i32 %46, 8, !dbg !13452
  store i32 %or, i32* %color_formats, align 4, !dbg !13452
  br label %if.end14, !dbg !13450

if.end14:                                         ; preds = %if.then13, %for.end
  %47 = load i32, i32* %modes, align 4, !dbg !13453
  ret i32 %47, !dbg !13454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_hdmi_vsdb_modes(%struct.drm_connector* %connector, i8* %db, i8 zeroext %len, i8* %video_db, i8 zeroext %video_len) #0 !dbg !13455 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %db.addr = alloca i8*, align 8
  %len.addr = alloca i8, align 1
  %video_db.addr = alloca i8*, align 8
  %video_len.addr = alloca i8, align 1
  %info = alloca %struct.drm_display_info*, align 8
  %modes = alloca i32, align 4
  %offset = alloca i32, align 4
  %i = alloca i32, align 4
  %multi_present = alloca i32, align 4
  %multi_len = alloca i32, align 4
  %vic_len = alloca i8, align 1
  %hdmi_3d_len = alloca i8, align 1
  %mask = alloca i16, align 2
  %structure_all = alloca i16, align 2
  %vic = alloca i8, align 1
  %vic_index = alloca i32, align 4
  %newmode = alloca %struct.drm_display_mode*, align 8
  %newflag = alloca i32, align 4
  %detail_present = alloca i8, align 1
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !13458, metadata !DIExpression()), !dbg !13459
  store i8* %db, i8** %db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %db.addr, metadata !13460, metadata !DIExpression()), !dbg !13461
  store i8 %len, i8* %len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %len.addr, metadata !13462, metadata !DIExpression()), !dbg !13463
  store i8* %video_db, i8** %video_db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %video_db.addr, metadata !13464, metadata !DIExpression()), !dbg !13465
  store i8 %video_len, i8* %video_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_len.addr, metadata !13466, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.declare(metadata %struct.drm_display_info** %info, metadata !13468, metadata !DIExpression()), !dbg !13469
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13470
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 18, !dbg !13471
  store %struct.drm_display_info* %display_info, %struct.drm_display_info** %info, align 8, !dbg !13469
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !13472, metadata !DIExpression()), !dbg !13473
  store i32 0, i32* %modes, align 4, !dbg !13473
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13474, metadata !DIExpression()), !dbg !13475
  store i32 0, i32* %offset, align 4, !dbg !13475
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13476, metadata !DIExpression()), !dbg !13477
  call void @llvm.dbg.declare(metadata i32* %multi_present, metadata !13478, metadata !DIExpression()), !dbg !13479
  store i32 0, i32* %multi_present, align 4, !dbg !13479
  call void @llvm.dbg.declare(metadata i32* %multi_len, metadata !13480, metadata !DIExpression()), !dbg !13481
  call void @llvm.dbg.declare(metadata i8* %vic_len, metadata !13482, metadata !DIExpression()), !dbg !13483
  call void @llvm.dbg.declare(metadata i8* %hdmi_3d_len, metadata !13484, metadata !DIExpression()), !dbg !13485
  store i8 0, i8* %hdmi_3d_len, align 1, !dbg !13485
  call void @llvm.dbg.declare(metadata i16* %mask, metadata !13486, metadata !DIExpression()), !dbg !13487
  call void @llvm.dbg.declare(metadata i16* %structure_all, metadata !13488, metadata !DIExpression()), !dbg !13489
  %1 = load i8, i8* %len.addr, align 1, !dbg !13490
  %conv = zext i8 %1 to i32, !dbg !13490
  %cmp = icmp slt i32 %conv, 8, !dbg !13492
  br i1 %cmp, label %if.then, label %if.end, !dbg !13493

if.then:                                          ; preds = %entry
  br label %out, !dbg !13494

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %db.addr, align 8, !dbg !13495
  %arrayidx = getelementptr i8, i8* %2, i64 8, !dbg !13495
  %3 = load i8, i8* %arrayidx, align 1, !dbg !13495
  %conv2 = zext i8 %3 to i32, !dbg !13495
  %and = and i32 %conv2, 32, !dbg !13497
  %tobool = icmp ne i32 %and, 0, !dbg !13497
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !13498

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !13499

if.end4:                                          ; preds = %if.end
  %4 = load i8*, i8** %db.addr, align 8, !dbg !13500
  %arrayidx5 = getelementptr i8, i8* %4, i64 8, !dbg !13500
  %5 = load i8, i8* %arrayidx5, align 1, !dbg !13500
  %conv6 = zext i8 %5 to i32, !dbg !13500
  %and7 = and i32 %conv6, 128, !dbg !13502
  %tobool8 = icmp ne i32 %and7, 0, !dbg !13502
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13503

if.then9:                                         ; preds = %if.end4
  %6 = load i32, i32* %offset, align 4, !dbg !13504
  %add = add i32 %6, 2, !dbg !13504
  store i32 %add, i32* %offset, align 4, !dbg !13504
  br label %if.end10, !dbg !13505

if.end10:                                         ; preds = %if.then9, %if.end4
  %7 = load i8*, i8** %db.addr, align 8, !dbg !13506
  %arrayidx11 = getelementptr i8, i8* %7, i64 8, !dbg !13506
  %8 = load i8, i8* %arrayidx11, align 1, !dbg !13506
  %conv12 = zext i8 %8 to i32, !dbg !13506
  %and13 = and i32 %conv12, 64, !dbg !13508
  %tobool14 = icmp ne i32 %and13, 0, !dbg !13508
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !13509

if.then15:                                        ; preds = %if.end10
  %9 = load i32, i32* %offset, align 4, !dbg !13510
  %add16 = add i32 %9, 2, !dbg !13510
  store i32 %add16, i32* %offset, align 4, !dbg !13510
  br label %if.end17, !dbg !13511

if.end17:                                         ; preds = %if.then15, %if.end10
  %10 = load i8, i8* %len.addr, align 1, !dbg !13512
  %conv18 = zext i8 %10 to i32, !dbg !13512
  %11 = load i32, i32* %offset, align 4, !dbg !13514
  %add19 = add i32 8, %11, !dbg !13515
  %add20 = add i32 %add19, 2, !dbg !13516
  %cmp21 = icmp slt i32 %conv18, %add20, !dbg !13517
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !13518

if.then23:                                        ; preds = %if.end17
  br label %out, !dbg !13519

if.end24:                                         ; preds = %if.end17
  %12 = load i32, i32* %offset, align 4, !dbg !13520
  %inc = add i32 %12, 1, !dbg !13520
  store i32 %inc, i32* %offset, align 4, !dbg !13520
  %13 = load i8*, i8** %db.addr, align 8, !dbg !13521
  %14 = load i32, i32* %offset, align 4, !dbg !13523
  %add25 = add i32 8, %14, !dbg !13524
  %idxprom = sext i32 %add25 to i64, !dbg !13521
  %arrayidx26 = getelementptr i8, i8* %13, i64 %idxprom, !dbg !13521
  %15 = load i8, i8* %arrayidx26, align 1, !dbg !13521
  %conv27 = zext i8 %15 to i32, !dbg !13521
  %and28 = and i32 %conv27, 128, !dbg !13525
  %tobool29 = icmp ne i32 %and28, 0, !dbg !13525
  br i1 %tobool29, label %if.then30, label %if.end37, !dbg !13526

if.then30:                                        ; preds = %if.end24
  %16 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13527
  %call = call i32 @add_hdmi_mandatory_stereo_modes(%struct.drm_connector* %16) #8, !dbg !13529
  %17 = load i32, i32* %modes, align 4, !dbg !13530
  %add31 = add i32 %17, %call, !dbg !13530
  store i32 %add31, i32* %modes, align 4, !dbg !13530
  %18 = load i8*, i8** %db.addr, align 8, !dbg !13531
  %19 = load i32, i32* %offset, align 4, !dbg !13532
  %add32 = add i32 8, %19, !dbg !13533
  %idxprom33 = sext i32 %add32 to i64, !dbg !13531
  %arrayidx34 = getelementptr i8, i8* %18, i64 %idxprom33, !dbg !13531
  %20 = load i8, i8* %arrayidx34, align 1, !dbg !13531
  %conv35 = zext i8 %20 to i32, !dbg !13531
  %and36 = and i32 %conv35, 96, !dbg !13534
  %shr = ashr i32 %and36, 5, !dbg !13535
  store i32 %shr, i32* %multi_present, align 4, !dbg !13536
  br label %if.end37, !dbg !13537

if.end37:                                         ; preds = %if.then30, %if.end24
  %21 = load i32, i32* %offset, align 4, !dbg !13538
  %inc38 = add i32 %21, 1, !dbg !13538
  store i32 %inc38, i32* %offset, align 4, !dbg !13538
  %22 = load i8*, i8** %db.addr, align 8, !dbg !13539
  %23 = load i32, i32* %offset, align 4, !dbg !13540
  %add39 = add i32 8, %23, !dbg !13541
  %idxprom40 = sext i32 %add39 to i64, !dbg !13539
  %arrayidx41 = getelementptr i8, i8* %22, i64 %idxprom40, !dbg !13539
  %24 = load i8, i8* %arrayidx41, align 1, !dbg !13539
  %conv42 = zext i8 %24 to i32, !dbg !13539
  %shr43 = ashr i32 %conv42, 5, !dbg !13542
  %conv44 = trunc i32 %shr43 to i8, !dbg !13539
  store i8 %conv44, i8* %vic_len, align 1, !dbg !13543
  %25 = load i8*, i8** %db.addr, align 8, !dbg !13544
  %26 = load i32, i32* %offset, align 4, !dbg !13545
  %add45 = add i32 8, %26, !dbg !13546
  %idxprom46 = sext i32 %add45 to i64, !dbg !13544
  %arrayidx47 = getelementptr i8, i8* %25, i64 %idxprom46, !dbg !13544
  %27 = load i8, i8* %arrayidx47, align 1, !dbg !13544
  %conv48 = zext i8 %27 to i32, !dbg !13544
  %and49 = and i32 %conv48, 31, !dbg !13547
  %conv50 = trunc i32 %and49 to i8, !dbg !13544
  store i8 %conv50, i8* %hdmi_3d_len, align 1, !dbg !13548
  store i32 0, i32* %i, align 4, !dbg !13549
  br label %for.cond, !dbg !13551

for.cond:                                         ; preds = %for.inc, %if.end37
  %28 = load i32, i32* %i, align 4, !dbg !13552
  %29 = load i8, i8* %vic_len, align 1, !dbg !13554
  %conv51 = zext i8 %29 to i32, !dbg !13554
  %cmp52 = icmp slt i32 %28, %conv51, !dbg !13555
  br i1 %cmp52, label %land.rhs, label %land.end, !dbg !13556

land.rhs:                                         ; preds = %for.cond
  %30 = load i8, i8* %len.addr, align 1, !dbg !13557
  %conv54 = zext i8 %30 to i32, !dbg !13557
  %31 = load i32, i32* %offset, align 4, !dbg !13558
  %add55 = add i32 9, %31, !dbg !13559
  %32 = load i32, i32* %i, align 4, !dbg !13560
  %add56 = add i32 %add55, %32, !dbg !13561
  %cmp57 = icmp sge i32 %conv54, %add56, !dbg !13562
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %33 = phi i1 [ false, %for.cond ], [ %cmp57, %land.rhs ], !dbg !13563
  br i1 %33, label %for.body, label %for.end, !dbg !13564

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !13565, metadata !DIExpression()), !dbg !13567
  %34 = load i8*, i8** %db.addr, align 8, !dbg !13568
  %35 = load i32, i32* %offset, align 4, !dbg !13569
  %add59 = add i32 9, %35, !dbg !13570
  %36 = load i32, i32* %i, align 4, !dbg !13571
  %add60 = add i32 %add59, %36, !dbg !13572
  %idxprom61 = sext i32 %add60 to i64, !dbg !13568
  %arrayidx62 = getelementptr i8, i8* %34, i64 %idxprom61, !dbg !13568
  %37 = load i8, i8* %arrayidx62, align 1, !dbg !13568
  store i8 %37, i8* %vic, align 1, !dbg !13573
  %38 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13574
  %39 = load i8, i8* %vic, align 1, !dbg !13575
  %call63 = call i32 @add_hdmi_mode(%struct.drm_connector* %38, i8 zeroext %39) #8, !dbg !13576
  %40 = load i32, i32* %modes, align 4, !dbg !13577
  %add64 = add i32 %40, %call63, !dbg !13577
  store i32 %add64, i32* %modes, align 4, !dbg !13577
  br label %for.inc, !dbg !13578

for.inc:                                          ; preds = %for.body
  %41 = load i32, i32* %i, align 4, !dbg !13579
  %inc65 = add i32 %41, 1, !dbg !13579
  store i32 %inc65, i32* %i, align 4, !dbg !13579
  br label %for.cond, !dbg !13580, !llvm.loop !13581

for.end:                                          ; preds = %land.end
  %42 = load i8, i8* %vic_len, align 1, !dbg !13583
  %conv66 = zext i8 %42 to i32, !dbg !13583
  %add67 = add i32 1, %conv66, !dbg !13584
  %43 = load i32, i32* %offset, align 4, !dbg !13585
  %add68 = add i32 %43, %add67, !dbg !13585
  store i32 %add68, i32* %offset, align 4, !dbg !13585
  %44 = load i32, i32* %multi_present, align 4, !dbg !13586
  %cmp69 = icmp eq i32 %44, 1, !dbg !13588
  br i1 %cmp69, label %if.then71, label %if.else, !dbg !13589

if.then71:                                        ; preds = %for.end
  store i32 2, i32* %multi_len, align 4, !dbg !13590
  br label %if.end77, !dbg !13591

if.else:                                          ; preds = %for.end
  %45 = load i32, i32* %multi_present, align 4, !dbg !13592
  %cmp72 = icmp eq i32 %45, 2, !dbg !13594
  br i1 %cmp72, label %if.then74, label %if.else75, !dbg !13595

if.then74:                                        ; preds = %if.else
  store i32 4, i32* %multi_len, align 4, !dbg !13596
  br label %if.end76, !dbg !13597

if.else75:                                        ; preds = %if.else
  store i32 0, i32* %multi_len, align 4, !dbg !13598
  br label %if.end76

if.end76:                                         ; preds = %if.else75, %if.then74
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then71
  %46 = load i8, i8* %len.addr, align 1, !dbg !13599
  %conv78 = zext i8 %46 to i32, !dbg !13599
  %47 = load i32, i32* %offset, align 4, !dbg !13601
  %add79 = add i32 8, %47, !dbg !13602
  %48 = load i8, i8* %hdmi_3d_len, align 1, !dbg !13603
  %conv80 = zext i8 %48 to i32, !dbg !13603
  %add81 = add i32 %add79, %conv80, !dbg !13604
  %sub = sub i32 %add81, 1, !dbg !13605
  %cmp82 = icmp slt i32 %conv78, %sub, !dbg !13606
  br i1 %cmp82, label %if.then84, label %if.end85, !dbg !13607

if.then84:                                        ; preds = %if.end77
  br label %out, !dbg !13608

if.end85:                                         ; preds = %if.end77
  %49 = load i8, i8* %hdmi_3d_len, align 1, !dbg !13609
  %conv86 = zext i8 %49 to i32, !dbg !13609
  %50 = load i32, i32* %multi_len, align 4, !dbg !13611
  %cmp87 = icmp slt i32 %conv86, %50, !dbg !13612
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !13613

if.then89:                                        ; preds = %if.end85
  br label %out, !dbg !13614

if.end90:                                         ; preds = %if.end85
  %51 = load i32, i32* %multi_present, align 4, !dbg !13615
  %cmp91 = icmp eq i32 %51, 1, !dbg !13617
  br i1 %cmp91, label %if.then95, label %lor.lhs.false, !dbg !13618

lor.lhs.false:                                    ; preds = %if.end90
  %52 = load i32, i32* %multi_present, align 4, !dbg !13619
  %cmp93 = icmp eq i32 %52, 2, !dbg !13620
  br i1 %cmp93, label %if.then95, label %if.end137, !dbg !13621

if.then95:                                        ; preds = %lor.lhs.false, %if.end90
  %53 = load i8*, i8** %db.addr, align 8, !dbg !13622
  %54 = load i32, i32* %offset, align 4, !dbg !13624
  %add96 = add i32 8, %54, !dbg !13625
  %idxprom97 = sext i32 %add96 to i64, !dbg !13622
  %arrayidx98 = getelementptr i8, i8* %53, i64 %idxprom97, !dbg !13622
  %55 = load i8, i8* %arrayidx98, align 1, !dbg !13622
  %conv99 = zext i8 %55 to i32, !dbg !13622
  %shl = shl i32 %conv99, 8, !dbg !13626
  %56 = load i8*, i8** %db.addr, align 8, !dbg !13627
  %57 = load i32, i32* %offset, align 4, !dbg !13628
  %add100 = add i32 9, %57, !dbg !13629
  %idxprom101 = sext i32 %add100 to i64, !dbg !13627
  %arrayidx102 = getelementptr i8, i8* %56, i64 %idxprom101, !dbg !13627
  %58 = load i8, i8* %arrayidx102, align 1, !dbg !13627
  %conv103 = zext i8 %58 to i32, !dbg !13627
  %or = or i32 %shl, %conv103, !dbg !13630
  %conv104 = trunc i32 %or to i16, !dbg !13631
  store i16 %conv104, i16* %structure_all, align 2, !dbg !13632
  %59 = load i32, i32* %multi_present, align 4, !dbg !13633
  %cmp105 = icmp eq i32 %59, 2, !dbg !13635
  br i1 %cmp105, label %if.then107, label %if.else119, !dbg !13636

if.then107:                                       ; preds = %if.then95
  %60 = load i8*, i8** %db.addr, align 8, !dbg !13637
  %61 = load i32, i32* %offset, align 4, !dbg !13638
  %add108 = add i32 10, %61, !dbg !13639
  %idxprom109 = sext i32 %add108 to i64, !dbg !13637
  %arrayidx110 = getelementptr i8, i8* %60, i64 %idxprom109, !dbg !13637
  %62 = load i8, i8* %arrayidx110, align 1, !dbg !13637
  %conv111 = zext i8 %62 to i32, !dbg !13637
  %shl112 = shl i32 %conv111, 8, !dbg !13640
  %63 = load i8*, i8** %db.addr, align 8, !dbg !13641
  %64 = load i32, i32* %offset, align 4, !dbg !13642
  %add113 = add i32 11, %64, !dbg !13643
  %idxprom114 = sext i32 %add113 to i64, !dbg !13641
  %arrayidx115 = getelementptr i8, i8* %63, i64 %idxprom114, !dbg !13641
  %65 = load i8, i8* %arrayidx115, align 1, !dbg !13641
  %conv116 = zext i8 %65 to i32, !dbg !13641
  %or117 = or i32 %shl112, %conv116, !dbg !13644
  %conv118 = trunc i32 %or117 to i16, !dbg !13645
  store i16 %conv118, i16* %mask, align 2, !dbg !13646
  br label %if.end120, !dbg !13647

if.else119:                                       ; preds = %if.then95
  store i16 -1, i16* %mask, align 2, !dbg !13648
  br label %if.end120

if.end120:                                        ; preds = %if.else119, %if.then107
  store i32 0, i32* %i, align 4, !dbg !13649
  br label %for.cond121, !dbg !13651

for.cond121:                                      ; preds = %for.inc134, %if.end120
  %66 = load i32, i32* %i, align 4, !dbg !13652
  %cmp122 = icmp slt i32 %66, 16, !dbg !13654
  br i1 %cmp122, label %for.body124, label %for.end136, !dbg !13655

for.body124:                                      ; preds = %for.cond121
  %67 = load i16, i16* %mask, align 2, !dbg !13656
  %conv125 = zext i16 %67 to i32, !dbg !13656
  %68 = load i32, i32* %i, align 4, !dbg !13659
  %shl126 = shl i32 1, %68, !dbg !13660
  %and127 = and i32 %conv125, %shl126, !dbg !13661
  %tobool128 = icmp ne i32 %and127, 0, !dbg !13661
  br i1 %tobool128, label %if.then129, label %if.end133, !dbg !13662

if.then129:                                       ; preds = %for.body124
  %69 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13663
  %70 = load i16, i16* %structure_all, align 2, !dbg !13664
  %71 = load i8*, i8** %video_db.addr, align 8, !dbg !13665
  %72 = load i8, i8* %video_len.addr, align 1, !dbg !13666
  %73 = load i32, i32* %i, align 4, !dbg !13667
  %conv130 = trunc i32 %73 to i8, !dbg !13667
  %call131 = call i32 @add_3d_struct_modes(%struct.drm_connector* %69, i16 zeroext %70, i8* %71, i8 zeroext %72, i8 zeroext %conv130) #8, !dbg !13668
  %74 = load i32, i32* %modes, align 4, !dbg !13669
  %add132 = add i32 %74, %call131, !dbg !13669
  store i32 %add132, i32* %modes, align 4, !dbg !13669
  br label %if.end133, !dbg !13670

if.end133:                                        ; preds = %if.then129, %for.body124
  br label %for.inc134, !dbg !13671

for.inc134:                                       ; preds = %if.end133
  %75 = load i32, i32* %i, align 4, !dbg !13672
  %inc135 = add i32 %75, 1, !dbg !13672
  store i32 %inc135, i32* %i, align 4, !dbg !13672
  br label %for.cond121, !dbg !13673, !llvm.loop !13674

for.end136:                                       ; preds = %for.cond121
  br label %if.end137, !dbg !13676

if.end137:                                        ; preds = %for.end136, %lor.lhs.false
  %76 = load i32, i32* %multi_len, align 4, !dbg !13677
  %77 = load i32, i32* %offset, align 4, !dbg !13678
  %add138 = add i32 %77, %76, !dbg !13678
  store i32 %add138, i32* %offset, align 4, !dbg !13678
  store i32 0, i32* %i, align 4, !dbg !13679
  br label %for.cond139, !dbg !13681

for.cond139:                                      ; preds = %for.inc201, %if.end137
  %78 = load i32, i32* %i, align 4, !dbg !13682
  %79 = load i8, i8* %hdmi_3d_len, align 1, !dbg !13684
  %conv140 = zext i8 %79 to i32, !dbg !13684
  %80 = load i32, i32* %multi_len, align 4, !dbg !13685
  %sub141 = sub i32 %conv140, %80, !dbg !13686
  %cmp142 = icmp slt i32 %78, %sub141, !dbg !13687
  br i1 %cmp142, label %for.body144, label %for.end203, !dbg !13688

for.body144:                                      ; preds = %for.cond139
  call void @llvm.dbg.declare(metadata i32* %vic_index, metadata !13689, metadata !DIExpression()), !dbg !13691
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !13692, metadata !DIExpression()), !dbg !13693
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %newmode, align 8, !dbg !13693
  call void @llvm.dbg.declare(metadata i32* %newflag, metadata !13694, metadata !DIExpression()), !dbg !13695
  store i32 0, i32* %newflag, align 4, !dbg !13695
  call void @llvm.dbg.declare(metadata i8* %detail_present, metadata !13696, metadata !DIExpression()), !dbg !13697
  %81 = load i8*, i8** %db.addr, align 8, !dbg !13698
  %82 = load i32, i32* %offset, align 4, !dbg !13699
  %add145 = add i32 8, %82, !dbg !13700
  %83 = load i32, i32* %i, align 4, !dbg !13701
  %add146 = add i32 %add145, %83, !dbg !13702
  %idxprom147 = sext i32 %add146 to i64, !dbg !13698
  %arrayidx148 = getelementptr i8, i8* %81, i64 %idxprom147, !dbg !13698
  %84 = load i8, i8* %arrayidx148, align 1, !dbg !13698
  %conv149 = zext i8 %84 to i32, !dbg !13698
  %and150 = and i32 %conv149, 15, !dbg !13703
  %cmp151 = icmp sgt i32 %and150, 7, !dbg !13704
  %frombool = zext i1 %cmp151 to i8, !dbg !13705
  store i8 %frombool, i8* %detail_present, align 1, !dbg !13705
  %85 = load i8, i8* %detail_present, align 1, !dbg !13706
  %tobool153 = trunc i8 %85 to i1, !dbg !13706
  br i1 %tobool153, label %land.lhs.true, label %if.end161, !dbg !13708

land.lhs.true:                                    ; preds = %for.body144
  %86 = load i32, i32* %i, align 4, !dbg !13709
  %add155 = add i32 %86, 1, !dbg !13710
  %87 = load i8, i8* %hdmi_3d_len, align 1, !dbg !13711
  %conv156 = zext i8 %87 to i32, !dbg !13711
  %88 = load i32, i32* %multi_len, align 4, !dbg !13712
  %sub157 = sub i32 %conv156, %88, !dbg !13713
  %cmp158 = icmp eq i32 %add155, %sub157, !dbg !13714
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !13715

if.then160:                                       ; preds = %land.lhs.true
  br label %for.end203, !dbg !13716

if.end161:                                        ; preds = %land.lhs.true, %for.body144
  %89 = load i8*, i8** %db.addr, align 8, !dbg !13717
  %90 = load i32, i32* %offset, align 4, !dbg !13718
  %add162 = add i32 8, %90, !dbg !13719
  %91 = load i32, i32* %i, align 4, !dbg !13720
  %add163 = add i32 %add162, %91, !dbg !13721
  %idxprom164 = sext i32 %add163 to i64, !dbg !13717
  %arrayidx165 = getelementptr i8, i8* %89, i64 %idxprom164, !dbg !13717
  %92 = load i8, i8* %arrayidx165, align 1, !dbg !13717
  %conv166 = zext i8 %92 to i32, !dbg !13717
  %shr167 = ashr i32 %conv166, 4, !dbg !13722
  store i32 %shr167, i32* %vic_index, align 4, !dbg !13723
  %93 = load i8*, i8** %db.addr, align 8, !dbg !13724
  %94 = load i32, i32* %offset, align 4, !dbg !13725
  %add168 = add i32 8, %94, !dbg !13726
  %95 = load i32, i32* %i, align 4, !dbg !13727
  %add169 = add i32 %add168, %95, !dbg !13728
  %idxprom170 = sext i32 %add169 to i64, !dbg !13724
  %arrayidx171 = getelementptr i8, i8* %93, i64 %idxprom170, !dbg !13724
  %96 = load i8, i8* %arrayidx171, align 1, !dbg !13724
  %conv172 = zext i8 %96 to i32, !dbg !13724
  %and173 = and i32 %conv172, 15, !dbg !13729
  switch i32 %and173, label %sw.epilog [
    i32 0, label %sw.bb
    i32 6, label %sw.bb174
    i32 8, label %sw.bb175
  ], !dbg !13730

sw.bb:                                            ; preds = %if.end161
  store i32 16384, i32* %newflag, align 4, !dbg !13731
  br label %sw.epilog, !dbg !13733

sw.bb174:                                         ; preds = %if.end161
  store i32 114688, i32* %newflag, align 4, !dbg !13734
  br label %sw.epilog, !dbg !13735

sw.bb175:                                         ; preds = %if.end161
  %97 = load i8*, i8** %db.addr, align 8, !dbg !13736
  %98 = load i32, i32* %offset, align 4, !dbg !13738
  %add176 = add i32 9, %98, !dbg !13739
  %99 = load i32, i32* %i, align 4, !dbg !13740
  %add177 = add i32 %add176, %99, !dbg !13741
  %idxprom178 = sext i32 %add177 to i64, !dbg !13736
  %arrayidx179 = getelementptr i8, i8* %97, i64 %idxprom178, !dbg !13736
  %100 = load i8, i8* %arrayidx179, align 1, !dbg !13736
  %conv180 = zext i8 %100 to i32, !dbg !13736
  %shr181 = ashr i32 %conv180, 4, !dbg !13742
  %cmp182 = icmp eq i32 %shr181, 1, !dbg !13743
  br i1 %cmp182, label %if.then184, label %if.end185, !dbg !13744

if.then184:                                       ; preds = %sw.bb175
  store i32 131072, i32* %newflag, align 4, !dbg !13745
  br label %if.end185, !dbg !13746

if.end185:                                        ; preds = %if.then184, %sw.bb175
  br label %sw.epilog, !dbg !13747

sw.epilog:                                        ; preds = %if.end161, %if.end185, %sw.bb174, %sw.bb
  %101 = load i32, i32* %newflag, align 4, !dbg !13748
  %cmp186 = icmp ne i32 %101, 0, !dbg !13750
  br i1 %cmp186, label %if.then188, label %if.end196, !dbg !13751

if.then188:                                       ; preds = %sw.epilog
  %102 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13752
  %103 = load i8*, i8** %video_db.addr, align 8, !dbg !13754
  %104 = load i8, i8* %video_len.addr, align 1, !dbg !13755
  %105 = load i32, i32* %vic_index, align 4, !dbg !13756
  %conv189 = trunc i32 %105 to i8, !dbg !13756
  %call190 = call %struct.drm_display_mode* @drm_display_mode_from_vic_index(%struct.drm_connector* %102, i8* %103, i8 zeroext %104, i8 zeroext %conv189) #8, !dbg !13757
  store %struct.drm_display_mode* %call190, %struct.drm_display_mode** %newmode, align 8, !dbg !13758
  %106 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13759
  %tobool191 = icmp ne %struct.drm_display_mode* %106, null, !dbg !13759
  br i1 %tobool191, label %if.then192, label %if.end195, !dbg !13761

if.then192:                                       ; preds = %if.then188
  %107 = load i32, i32* %newflag, align 4, !dbg !13762
  %108 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13764
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %108, i32 0, i32 11, !dbg !13765
  %109 = load i32, i32* %flags, align 8, !dbg !13766
  %or193 = or i32 %109, %107, !dbg !13766
  store i32 %or193, i32* %flags, align 8, !dbg !13766
  %110 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13767
  %111 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13768
  call void @drm_mode_probed_add(%struct.drm_connector* %110, %struct.drm_display_mode* %111) #8, !dbg !13769
  %112 = load i32, i32* %modes, align 4, !dbg !13770
  %inc194 = add i32 %112, 1, !dbg !13770
  store i32 %inc194, i32* %modes, align 4, !dbg !13770
  br label %if.end195, !dbg !13771

if.end195:                                        ; preds = %if.then192, %if.then188
  br label %if.end196, !dbg !13772

if.end196:                                        ; preds = %if.end195, %sw.epilog
  %113 = load i8, i8* %detail_present, align 1, !dbg !13773
  %tobool197 = trunc i8 %113 to i1, !dbg !13773
  br i1 %tobool197, label %if.then198, label %if.end200, !dbg !13775

if.then198:                                       ; preds = %if.end196
  %114 = load i32, i32* %i, align 4, !dbg !13776
  %inc199 = add i32 %114, 1, !dbg !13776
  store i32 %inc199, i32* %i, align 4, !dbg !13776
  br label %if.end200, !dbg !13777

if.end200:                                        ; preds = %if.then198, %if.end196
  br label %for.inc201, !dbg !13778

for.inc201:                                       ; preds = %if.end200
  %115 = load i32, i32* %i, align 4, !dbg !13779
  %inc202 = add i32 %115, 1, !dbg !13779
  store i32 %inc202, i32* %i, align 4, !dbg !13779
  br label %for.cond139, !dbg !13780, !llvm.loop !13781

for.end203:                                       ; preds = %if.then160, %for.cond139
  br label %out, !dbg !13782

out:                                              ; preds = %for.end203, %if.then89, %if.then84, %if.then23, %if.then3, %if.then
  call void @llvm.dbg.label(metadata !13783), !dbg !13784
  %116 = load i32, i32* %modes, align 4, !dbg !13785
  %cmp204 = icmp sgt i32 %116, 0, !dbg !13787
  br i1 %cmp204, label %if.then206, label %if.end207, !dbg !13788

if.then206:                                       ; preds = %out
  %117 = load %struct.drm_display_info*, %struct.drm_display_info** %info, align 8, !dbg !13789
  %has_hdmi_infoframe = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %117, i32 0, i32 12, !dbg !13790
  store i8 1, i8* %has_hdmi_infoframe, align 2, !dbg !13791
  br label %if.end207, !dbg !13789

if.end207:                                        ; preds = %if.then206, %out
  %118 = load i32, i32* %modes, align 4, !dbg !13792
  ret i32 %118, !dbg !13793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_display_mode* @drm_display_mode_from_vic_index(%struct.drm_connector* %connector, i8* %video_db, i8 zeroext %video_len, i8 zeroext %video_index) #0 !dbg !13794 {
entry:
  %retval.i = alloca %struct.drm_display_mode*, align 8
  %vic.addr.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr.i, metadata !7443, metadata !DIExpression()), !dbg !13797
  %retval = alloca %struct.drm_display_mode*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %video_db.addr = alloca i8*, align 8
  %video_len.addr = alloca i8, align 1
  %video_index.addr = alloca i8, align 1
  %dev = alloca %struct.drm_device*, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  %vic = alloca i8, align 1
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !13799, metadata !DIExpression()), !dbg !13800
  store i8* %video_db, i8** %video_db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %video_db.addr, metadata !13801, metadata !DIExpression()), !dbg !13802
  store i8 %video_len, i8* %video_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_len.addr, metadata !13803, metadata !DIExpression()), !dbg !13804
  store i8 %video_index, i8* %video_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_index.addr, metadata !13805, metadata !DIExpression()), !dbg !13806
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !13807, metadata !DIExpression()), !dbg !13808
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13809
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !13810
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !13810
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !13808
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !13811, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !13813, metadata !DIExpression()), !dbg !13814
  %2 = load i8*, i8** %video_db.addr, align 8, !dbg !13815
  %cmp = icmp eq i8* %2, null, !dbg !13817
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13818

lor.lhs.false:                                    ; preds = %entry
  %3 = load i8, i8* %video_index.addr, align 1, !dbg !13819
  %conv = zext i8 %3 to i32, !dbg !13819
  %4 = load i8, i8* %video_len.addr, align 1, !dbg !13820
  %conv2 = zext i8 %4 to i32, !dbg !13820
  %cmp3 = icmp sge i32 %conv, %conv2, !dbg !13821
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13822

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !13823
  br label %return, !dbg !13823

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i8*, i8** %video_db.addr, align 8, !dbg !13824
  %6 = load i8, i8* %video_index.addr, align 1, !dbg !13825
  %idxprom = zext i8 %6 to i64, !dbg !13824
  %arrayidx = getelementptr i8, i8* %5, i64 %idxprom, !dbg !13824
  %7 = load i8, i8* %arrayidx, align 1, !dbg !13824
  %call = call zeroext i8 @svd_to_vic(i8 zeroext %7) #8, !dbg !13826
  store i8 %call, i8* %vic, align 1, !dbg !13827
  %8 = load i8, i8* %vic, align 1, !dbg !13828
  %call5 = call zeroext i1 @drm_valid_cea_vic(i8 zeroext %8) #8, !dbg !13830
  br i1 %call5, label %if.end7, label %if.then6, !dbg !13831

if.then6:                                         ; preds = %if.end
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !13832
  br label %return, !dbg !13832

if.end7:                                          ; preds = %if.end
  %9 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !13833
  %10 = load i8, i8* %vic, align 1, !dbg !13834
  store i8 %10, i8* %vic.addr.i, align 1
  %11 = load i8, i8* %vic.addr.i, align 1, !dbg !13835
  %conv.i = zext i8 %11 to i32, !dbg !13835
  %cmp.i = icmp sge i32 %conv.i, 1, !dbg !13836
  br i1 %cmp.i, label %land.lhs.true.i, label %if.end.i, !dbg !13837

land.lhs.true.i:                                  ; preds = %if.end7
  %12 = load i8, i8* %vic.addr.i, align 1, !dbg !13838
  %conv4.i = zext i8 %12 to i64, !dbg !13838
  %cmp5.i = icmp ult i64 %conv4.i, 128, !dbg !13839
  br i1 %cmp5.i, label %if.then.i, label %if.end.i, !dbg !13840

if.then.i:                                        ; preds = %land.lhs.true.i
  %13 = load i8, i8* %vic.addr.i, align 1, !dbg !13841
  %conv7.i = zext i8 %13 to i32, !dbg !13841
  %sub.i = sub i32 %conv7.i, 1, !dbg !13842
  %idxprom.i = sext i32 %sub.i to i64, !dbg !13843
  %arrayidx.i = getelementptr [127 x %struct.drm_display_mode], [127 x %struct.drm_display_mode]* @edid_cea_modes_1, i64 0, i64 %idxprom.i, !dbg !13843
  store %struct.drm_display_mode* %arrayidx.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !13844
  br label %cea_mode_for_vic.exit, !dbg !13844

if.end.i:                                         ; preds = %land.lhs.true.i, %if.end7
  %14 = load i8, i8* %vic.addr.i, align 1, !dbg !13845
  %conv8.i = zext i8 %14 to i32, !dbg !13845
  %cmp9.i = icmp sge i32 %conv8.i, 193, !dbg !13846
  br i1 %cmp9.i, label %land.lhs.true11.i, label %if.end20.i, !dbg !13847

land.lhs.true11.i:                                ; preds = %if.end.i
  %15 = load i8, i8* %vic.addr.i, align 1, !dbg !13848
  %conv12.i = zext i8 %15 to i64, !dbg !13848
  %cmp13.i = icmp ult i64 %conv12.i, 220, !dbg !13849
  br i1 %cmp13.i, label %if.then15.i, label %if.end20.i, !dbg !13850

if.then15.i:                                      ; preds = %land.lhs.true11.i
  %16 = load i8, i8* %vic.addr.i, align 1, !dbg !13851
  %conv16.i = zext i8 %16 to i32, !dbg !13851
  %sub17.i = sub i32 %conv16.i, 193, !dbg !13852
  %idxprom18.i = sext i32 %sub17.i to i64, !dbg !13853
  %arrayidx19.i = getelementptr [27 x %struct.drm_display_mode], [27 x %struct.drm_display_mode]* @edid_cea_modes_193, i64 0, i64 %idxprom18.i, !dbg !13853
  store %struct.drm_display_mode* %arrayidx19.i, %struct.drm_display_mode** %retval.i, align 8, !dbg !13854
  br label %cea_mode_for_vic.exit, !dbg !13854

if.end20.i:                                       ; preds = %land.lhs.true11.i, %if.end.i
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval.i, align 8, !dbg !13855
  br label %cea_mode_for_vic.exit, !dbg !13855

cea_mode_for_vic.exit:                            ; preds = %if.then.i, %if.then15.i, %if.end20.i
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval.i, align 8, !dbg !13856
  %call9 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %9, %struct.drm_display_mode* %17) #8, !dbg !13857
  store %struct.drm_display_mode* %call9, %struct.drm_display_mode** %newmode, align 8, !dbg !13858
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13859
  %tobool = icmp ne %struct.drm_display_mode* %18, null, !dbg !13859
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !13861

if.then10:                                        ; preds = %cea_mode_for_vic.exit
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !13862
  br label %return, !dbg !13862

if.end11:                                         ; preds = %cea_mode_for_vic.exit
  %19 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !13863
  store %struct.drm_display_mode* %19, %struct.drm_display_mode** %retval, align 8, !dbg !13864
  br label %return, !dbg !13864

return:                                           ; preds = %if.end11, %if.then10, %if.then6, %if.then
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval, align 8, !dbg !13865
  ret %struct.drm_display_mode* %20, !dbg !13865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_add_cmdb_modes(%struct.drm_connector* %connector, i8 zeroext %svd) #0 !dbg !13866 {
entry:
  %map.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %map.addr.i, metadata !13313, metadata !DIExpression()), !dbg !13869
  %start.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %start.addr.i, metadata !13323, metadata !DIExpression()), !dbg !13871
  %nbits.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %nbits.addr.i, metadata !13325, metadata !DIExpression()), !dbg !13872
  %connector.addr = alloca %struct.drm_connector*, align 8
  %svd.addr = alloca i8, align 1
  %vic = alloca i8, align 1
  %hdmi = alloca %struct.drm_hdmi_info*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !13873, metadata !DIExpression()), !dbg !13874
  store i8 %svd, i8* %svd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %svd.addr, metadata !13875, metadata !DIExpression()), !dbg !13876
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !13877, metadata !DIExpression()), !dbg !13878
  %0 = load i8, i8* %svd.addr, align 1, !dbg !13879
  %call = call zeroext i8 @svd_to_vic(i8 zeroext %0) #8, !dbg !13880
  store i8 %call, i8* %vic, align 1, !dbg !13878
  call void @llvm.dbg.declare(metadata %struct.drm_hdmi_info** %hdmi, metadata !13881, metadata !DIExpression()), !dbg !13882
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !13883
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %1, i32 0, i32 18, !dbg !13884
  %hdmi1 = getelementptr inbounds %struct.drm_display_info, %struct.drm_display_info* %display_info, i32 0, i32 16, !dbg !13885
  store %struct.drm_hdmi_info* %hdmi1, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !13882
  %2 = load i8, i8* %vic, align 1, !dbg !13886
  %call2 = call zeroext i1 @drm_valid_cea_vic(i8 zeroext %2) #8, !dbg !13888
  br i1 %call2, label %if.end, label %if.then, !dbg !13889

if.then:                                          ; preds = %entry
  br label %return, !dbg !13890

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_hdmi_info*, %struct.drm_hdmi_info** %hdmi, align 8, !dbg !13891
  %y420_cmdb_modes = getelementptr inbounds %struct.drm_hdmi_info, %struct.drm_hdmi_info* %3, i32 0, i32 2, !dbg !13892
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %y420_cmdb_modes, i64 0, i64 0, !dbg !13891
  %4 = load i8, i8* %vic, align 1, !dbg !13893
  %conv = zext i8 %4 to i32, !dbg !13893
  store i64* %arraydecay, i64** %map.addr.i, align 8
  store i32 %conv, i32* %start.addr.i, align 4
  store i32 1, i32* %nbits.addr.i, align 4
  %5 = load i32, i32* %nbits.addr.i, align 4, !dbg !13894
  %6 = call i1 @llvm.is.constant.i32(i32 %5) #9, !dbg !13895
  br i1 %6, label %land.lhs.true.i, label %if.else.i, !dbg !13896

land.lhs.true.i:                                  ; preds = %if.end
  %7 = load i32, i32* %nbits.addr.i, align 4, !dbg !13897
  %cmp.i = icmp eq i32 %7, 1, !dbg !13898
  br i1 %cmp.i, label %if.then.i, label %if.else.i, !dbg !13899

if.then.i:                                        ; preds = %land.lhs.true.i
  %8 = load i32, i32* %start.addr.i, align 4, !dbg !13900
  %conv.i = zext i32 %8 to i64, !dbg !13900
  %9 = load i64*, i64** %map.addr.i, align 8, !dbg !13901
  call void @__set_bit(i64 %conv.i, i64* %9) #12, !dbg !13902
  br label %bitmap_set.exit, !dbg !13902

if.else.i:                                        ; preds = %land.lhs.true.i, %if.end
  %10 = load i32, i32* %start.addr.i, align 4, !dbg !13903
  %and.i = and i32 %10, 7, !dbg !13904
  %11 = call i1 @llvm.is.constant.i32(i32 %and.i) #9, !dbg !13905
  br i1 %11, label %land.lhs.true1.i, label %if.else14.i, !dbg !13906

land.lhs.true1.i:                                 ; preds = %if.else.i
  %12 = load i32, i32* %start.addr.i, align 4, !dbg !13907
  %and2.i = and i32 %12, 7, !dbg !13907
  %cmp3.i = icmp eq i32 %and2.i, 0, !dbg !13907
  br i1 %cmp3.i, label %land.lhs.true5.i, label %if.else14.i, !dbg !13908

land.lhs.true5.i:                                 ; preds = %land.lhs.true1.i
  %13 = load i32, i32* %nbits.addr.i, align 4, !dbg !13909
  %and6.i = and i32 %13, 7, !dbg !13910
  %14 = call i1 @llvm.is.constant.i32(i32 %and6.i) #9, !dbg !13911
  br i1 %14, label %land.lhs.true7.i, label %if.else14.i, !dbg !13912

land.lhs.true7.i:                                 ; preds = %land.lhs.true5.i
  %15 = load i32, i32* %nbits.addr.i, align 4, !dbg !13913
  %and8.i = and i32 %15, 7, !dbg !13913
  %cmp9.i = icmp eq i32 %and8.i, 0, !dbg !13913
  br i1 %cmp9.i, label %if.then11.i, label %if.else14.i, !dbg !13914

if.then11.i:                                      ; preds = %land.lhs.true7.i
  %16 = load i64*, i64** %map.addr.i, align 8, !dbg !13915
  %17 = bitcast i64* %16 to i8*, !dbg !13916
  %18 = load i32, i32* %start.addr.i, align 4, !dbg !13917
  %div.i = udiv i32 %18, 8, !dbg !13918
  %idx.ext.i = zext i32 %div.i to i64, !dbg !13919
  %add.ptr.i = getelementptr i8, i8* %17, i64 %idx.ext.i, !dbg !13919
  %19 = load i32, i32* %nbits.addr.i, align 4, !dbg !13920
  %div12.i = udiv i32 %19, 8, !dbg !13921
  %conv13.i = zext i32 %div12.i to i64, !dbg !13920
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr.i, i8 -1, i64 %conv13.i, i1 false) #9, !dbg !13922
  br label %if.end.i, !dbg !13922

if.else14.i:                                      ; preds = %land.lhs.true7.i, %land.lhs.true5.i, %land.lhs.true1.i, %if.else.i
  %20 = load i64*, i64** %map.addr.i, align 8, !dbg !13923
  %21 = load i32, i32* %start.addr.i, align 4, !dbg !13924
  %22 = load i32, i32* %nbits.addr.i, align 4, !dbg !13925
  call void @__bitmap_set(i64* %20, i32 %21, i32 %22) #12, !dbg !13926
  br label %if.end.i

if.end.i:                                         ; preds = %if.else14.i, %if.then11.i
  br label %bitmap_set.exit

bitmap_set.exit:                                  ; preds = %if.then.i, %if.end.i
  br label %return, !dbg !13927

return:                                           ; preds = %bitmap_set.exit, %if.then
  ret void, !dbg !13927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @svd_to_vic(i8 zeroext %svd) #0 !dbg !13928 {
entry:
  %retval = alloca i8, align 1
  %svd.addr = alloca i8, align 1
  store i8 %svd, i8* %svd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %svd.addr, metadata !13929, metadata !DIExpression()), !dbg !13930
  %0 = load i8, i8* %svd.addr, align 1, !dbg !13931
  %conv = zext i8 %0 to i32, !dbg !13931
  %cmp = icmp sge i32 %conv, 1, !dbg !13933
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !13934

land.lhs.true:                                    ; preds = %entry
  %1 = load i8, i8* %svd.addr, align 1, !dbg !13935
  %conv2 = zext i8 %1 to i32, !dbg !13935
  %cmp3 = icmp sle i32 %conv2, 64, !dbg !13936
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !13937

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %2 = load i8, i8* %svd.addr, align 1, !dbg !13938
  %conv5 = zext i8 %2 to i32, !dbg !13938
  %cmp6 = icmp sge i32 %conv5, 129, !dbg !13939
  br i1 %cmp6, label %land.lhs.true8, label %if.end, !dbg !13940

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %3 = load i8, i8* %svd.addr, align 1, !dbg !13941
  %conv9 = zext i8 %3 to i32, !dbg !13941
  %cmp10 = icmp sle i32 %conv9, 192, !dbg !13942
  br i1 %cmp10, label %if.then, label %if.end, !dbg !13943

if.then:                                          ; preds = %land.lhs.true8, %land.lhs.true
  %4 = load i8, i8* %svd.addr, align 1, !dbg !13944
  %conv12 = zext i8 %4 to i32, !dbg !13944
  %and = and i32 %conv12, 127, !dbg !13945
  %conv13 = trunc i32 %and to i8, !dbg !13944
  store i8 %conv13, i8* %retval, align 1, !dbg !13946
  br label %return, !dbg !13946

if.end:                                           ; preds = %land.lhs.true8, %lor.lhs.false
  %5 = load i8, i8* %svd.addr, align 1, !dbg !13947
  store i8 %5, i8* %retval, align 1, !dbg !13948
  br label %return, !dbg !13948

return:                                           ; preds = %if.end, %if.then
  %6 = load i8, i8* %retval, align 1, !dbg !13949
  ret i8 %6, !dbg !13949
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__set_bit(i64 %nr, i64* %addr) #0 !dbg !13950 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13956, metadata !DIExpression()), !dbg !13958
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13960, metadata !DIExpression()), !dbg !13961
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13962, metadata !DIExpression()), !dbg !13970
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13972, metadata !DIExpression()), !dbg !13973
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13974, metadata !DIExpression()), !dbg !13975
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13976, metadata !DIExpression()), !dbg !13977
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13978
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13979
  %div = sdiv i64 %1, 64, !dbg !13979
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13980
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13978
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13981
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13982
  %conv.i = trunc i64 %4 to i32, !dbg !13982
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !13983
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13984
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13984
  call void @kcsan_check_access(i8* %5, i64 %6, i32 1) #12, !dbg !13984
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13985
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13986
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !13987
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !13988
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10) #9, !dbg !13989, !srcloc !13990
  ret void, !dbg !13991
}

; Function Attrs: noredzone
declare dso_local void @__bitmap_set(i64*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !13992 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13996, metadata !DIExpression()), !dbg !13997
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13998, metadata !DIExpression()), !dbg !13999
  ret i1 true, !dbg !14000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !14001 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14005, metadata !DIExpression()), !dbg !14006
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14007, metadata !DIExpression()), !dbg !14008
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14009, metadata !DIExpression()), !dbg !14010
  ret void, !dbg !14011
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_hdmi_mandatory_stereo_modes(%struct.drm_connector* %connector) #0 !dbg !14012 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %mode = alloca %struct.drm_display_mode*, align 8
  %stereo_modes = alloca %struct.list_head, align 8
  %modes = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_display_mode*, align 8
  %mandatory = alloca %struct.stereo_mandatory_mode*, align 8
  %new_mode = alloca %struct.drm_display_mode*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14013, metadata !DIExpression()), !dbg !14014
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !14015, metadata !DIExpression()), !dbg !14016
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14017
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !14018
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !14018
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !14016
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !14019, metadata !DIExpression()), !dbg !14020
  call void @llvm.dbg.declare(metadata %struct.list_head* %stereo_modes, metadata !14021, metadata !DIExpression()), !dbg !14022
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !14023, metadata !DIExpression()), !dbg !14024
  store i32 0, i32* %modes, align 4, !dbg !14024
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14025, metadata !DIExpression()), !dbg !14026
  call void @INIT_LIST_HEAD(%struct.list_head* %stereo_modes) #8, !dbg !14027
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14028, metadata !DIExpression()), !dbg !14031
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14031
  %probed_modes = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 17, !dbg !14031
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes, i32 0, i32 0, !dbg !14031
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14031
  %4 = bitcast %struct.list_head* %3 to i8*, !dbg !14031
  store i8* %4, i8** %__mptr, align 8, !dbg !14031
  br label %do.body, !dbg !14031

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14032

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !14031
  %add.ptr = getelementptr i8, i8* %5, i64 -64, !dbg !14031
  %6 = bitcast i8* %add.ptr to %struct.drm_display_mode*, !dbg !14031
  store %struct.drm_display_mode* %6, %struct.drm_display_mode** %tmp, align 8, !dbg !14032
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !14031
  store %struct.drm_display_mode* %7, %struct.drm_display_mode** %mode, align 8, !dbg !14034
  br label %for.cond, !dbg !14034

for.cond:                                         ; preds = %do.end20, %do.end
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14035
  %head = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %8, i32 0, i32 30, !dbg !14035
  %9 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14035
  %probed_modes2 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %9, i32 0, i32 17, !dbg !14035
  %cmp = icmp eq %struct.list_head* %head, %probed_modes2, !dbg !14035
  %lnot = xor i1 %cmp, true, !dbg !14035
  br i1 %lnot, label %for.body, label %for.end23, !dbg !14034

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !14037
  br label %for.cond3, !dbg !14040

for.cond3:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !14041
  %conv = sext i32 %10 to i64, !dbg !14041
  %cmp4 = icmp ult i64 %conv, 8, !dbg !14043
  br i1 %cmp4, label %for.body6, label %for.end, !dbg !14044

for.body6:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata %struct.stereo_mandatory_mode** %mandatory, metadata !14045, metadata !DIExpression()), !dbg !14048
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %new_mode, metadata !14049, metadata !DIExpression()), !dbg !14050
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14051
  %12 = load i32, i32* %i, align 4, !dbg !14053
  %idxprom = sext i32 %12 to i64, !dbg !14054
  %arrayidx = getelementptr [8 x %struct.stereo_mandatory_mode], [8 x %struct.stereo_mandatory_mode]* @stereo_mandatory_modes, i64 0, i64 %idxprom, !dbg !14054
  %call = call zeroext i1 @stereo_match_mandatory(%struct.drm_display_mode* %11, %struct.stereo_mandatory_mode* %arrayidx) #8, !dbg !14055
  br i1 %call, label %if.end, label %if.then, !dbg !14056

if.then:                                          ; preds = %for.body6
  br label %for.inc, !dbg !14057

if.end:                                           ; preds = %for.body6
  %13 = load i32, i32* %i, align 4, !dbg !14058
  %idxprom7 = sext i32 %13 to i64, !dbg !14059
  %arrayidx8 = getelementptr [8 x %struct.stereo_mandatory_mode], [8 x %struct.stereo_mandatory_mode]* @stereo_mandatory_modes, i64 0, i64 %idxprom7, !dbg !14059
  store %struct.stereo_mandatory_mode* %arrayidx8, %struct.stereo_mandatory_mode** %mandatory, align 8, !dbg !14060
  %14 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !14061
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14062
  %call9 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %14, %struct.drm_display_mode* %15) #8, !dbg !14063
  store %struct.drm_display_mode* %call9, %struct.drm_display_mode** %new_mode, align 8, !dbg !14064
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %new_mode, align 8, !dbg !14065
  %tobool = icmp ne %struct.drm_display_mode* %16, null, !dbg !14065
  br i1 %tobool, label %if.end11, label %if.then10, !dbg !14067

if.then10:                                        ; preds = %if.end
  br label %for.inc, !dbg !14068

if.end11:                                         ; preds = %if.end
  %17 = load %struct.stereo_mandatory_mode*, %struct.stereo_mandatory_mode** %mandatory, align 8, !dbg !14069
  %flags = getelementptr inbounds %struct.stereo_mandatory_mode, %struct.stereo_mandatory_mode* %17, i32 0, i32 3, !dbg !14070
  %18 = load i32, i32* %flags, align 4, !dbg !14070
  %19 = load %struct.drm_display_mode*, %struct.drm_display_mode** %new_mode, align 8, !dbg !14071
  %flags12 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %19, i32 0, i32 11, !dbg !14072
  %20 = load i32, i32* %flags12, align 8, !dbg !14073
  %or = or i32 %20, %18, !dbg !14073
  store i32 %or, i32* %flags12, align 8, !dbg !14073
  %21 = load %struct.drm_display_mode*, %struct.drm_display_mode** %new_mode, align 8, !dbg !14074
  %head13 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %21, i32 0, i32 30, !dbg !14075
  call void @list_add_tail(%struct.list_head* %head13, %struct.list_head* %stereo_modes) #8, !dbg !14076
  %22 = load i32, i32* %modes, align 4, !dbg !14077
  %inc = add i32 %22, 1, !dbg !14077
  store i32 %inc, i32* %modes, align 4, !dbg !14077
  br label %for.inc, !dbg !14078

for.inc:                                          ; preds = %if.end11, %if.then10, %if.then
  %23 = load i32, i32* %i, align 4, !dbg !14079
  %inc14 = add i32 %23, 1, !dbg !14079
  store i32 %inc14, i32* %i, align 4, !dbg !14079
  br label %for.cond3, !dbg !14080, !llvm.loop !14081

for.end:                                          ; preds = %for.cond3
  br label %for.inc15, !dbg !14083

for.inc15:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !14084, metadata !DIExpression()), !dbg !14086
  %24 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14086
  %head17 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %24, i32 0, i32 30, !dbg !14086
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %head17, i32 0, i32 0, !dbg !14086
  %25 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !14086
  %26 = bitcast %struct.list_head* %25 to i8*, !dbg !14086
  store i8* %26, i8** %__mptr16, align 8, !dbg !14086
  br label %do.body19, !dbg !14086

do.body19:                                        ; preds = %for.inc15
  br label %do.end20, !dbg !14087

do.end20:                                         ; preds = %do.body19
  %27 = load i8*, i8** %__mptr16, align 8, !dbg !14086
  %add.ptr22 = getelementptr i8, i8* %27, i64 -64, !dbg !14086
  %28 = bitcast i8* %add.ptr22 to %struct.drm_display_mode*, !dbg !14086
  store %struct.drm_display_mode* %28, %struct.drm_display_mode** %tmp21, align 8, !dbg !14087
  %29 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp21, align 8, !dbg !14086
  store %struct.drm_display_mode* %29, %struct.drm_display_mode** %mode, align 8, !dbg !14035
  br label %for.cond, !dbg !14035, !llvm.loop !14089

for.end23:                                        ; preds = %for.cond
  %30 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14091
  %probed_modes24 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %30, i32 0, i32 17, !dbg !14092
  call void @list_splice_tail(%struct.list_head* %stereo_modes, %struct.list_head* %probed_modes24) #8, !dbg !14093
  %31 = load i32, i32* %modes, align 4, !dbg !14094
  ret i32 %31, !dbg !14095
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_hdmi_mode(%struct.drm_connector* %connector, i8 zeroext %vic) #0 !dbg !14096 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %vic.addr = alloca i8, align 1
  %dev = alloca %struct.drm_device*, align 8
  %newmode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14099, metadata !DIExpression()), !dbg !14100
  store i8 %vic, i8* %vic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vic.addr, metadata !14101, metadata !DIExpression()), !dbg !14102
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !14103, metadata !DIExpression()), !dbg !14104
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14105
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !14106
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !14106
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !14104
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !14107, metadata !DIExpression()), !dbg !14108
  %2 = load i8, i8* %vic.addr, align 1, !dbg !14109
  %call = call zeroext i1 @drm_valid_hdmi_vic(i8 zeroext %2) #8, !dbg !14111
  br i1 %call, label %if.end, label %if.then, !dbg !14112

if.then:                                          ; preds = %entry
  %3 = load i8, i8* %vic.addr, align 1, !dbg !14113
  %conv = zext i8 %3 to i32, !dbg !14113
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i64 0, i64 0), i32 %conv) #8, !dbg !14113
  store i32 0, i32* %retval, align 4, !dbg !14115
  br label %return, !dbg !14115

if.end:                                           ; preds = %entry
  %4 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !14116
  %5 = load i8, i8* %vic.addr, align 1, !dbg !14117
  %idxprom = zext i8 %5 to i64, !dbg !14118
  %arrayidx = getelementptr [5 x %struct.drm_display_mode], [5 x %struct.drm_display_mode]* @edid_4k_modes, i64 0, i64 %idxprom, !dbg !14118
  %call2 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %4, %struct.drm_display_mode* %arrayidx) #8, !dbg !14119
  store %struct.drm_display_mode* %call2, %struct.drm_display_mode** %newmode, align 8, !dbg !14120
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14121
  %tobool = icmp ne %struct.drm_display_mode* %6, null, !dbg !14121
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !14123

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14124
  br label %return, !dbg !14124

if.end4:                                          ; preds = %if.end
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14125
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14126
  call void @drm_mode_probed_add(%struct.drm_connector* %7, %struct.drm_display_mode* %8) #8, !dbg !14127
  store i32 1, i32* %retval, align 4, !dbg !14128
  br label %return, !dbg !14128

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !14129
  ret i32 %9, !dbg !14129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_3d_struct_modes(%struct.drm_connector* %connector, i16 zeroext %structure, i8* %video_db, i8 zeroext %video_len, i8 zeroext %video_index) #0 !dbg !14130 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %structure.addr = alloca i16, align 2
  %video_db.addr = alloca i8*, align 8
  %video_len.addr = alloca i8, align 1
  %video_index.addr = alloca i8, align 1
  %newmode = alloca %struct.drm_display_mode*, align 8
  %modes = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14133, metadata !DIExpression()), !dbg !14134
  store i16 %structure, i16* %structure.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %structure.addr, metadata !14135, metadata !DIExpression()), !dbg !14136
  store i8* %video_db, i8** %video_db.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %video_db.addr, metadata !14137, metadata !DIExpression()), !dbg !14138
  store i8 %video_len, i8* %video_len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_len.addr, metadata !14139, metadata !DIExpression()), !dbg !14140
  store i8 %video_index, i8* %video_index.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %video_index.addr, metadata !14141, metadata !DIExpression()), !dbg !14142
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !14143, metadata !DIExpression()), !dbg !14144
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !14145, metadata !DIExpression()), !dbg !14146
  store i32 0, i32* %modes, align 4, !dbg !14146
  %0 = load i16, i16* %structure.addr, align 2, !dbg !14147
  %conv = zext i16 %0 to i32, !dbg !14147
  %and = and i32 %conv, 1, !dbg !14149
  %tobool = icmp ne i32 %and, 0, !dbg !14149
  br i1 %tobool, label %if.then, label %if.end3, !dbg !14150

if.then:                                          ; preds = %entry
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14151
  %2 = load i8*, i8** %video_db.addr, align 8, !dbg !14153
  %3 = load i8, i8* %video_len.addr, align 1, !dbg !14154
  %4 = load i8, i8* %video_index.addr, align 1, !dbg !14155
  %call = call %struct.drm_display_mode* @drm_display_mode_from_vic_index(%struct.drm_connector* %1, i8* %2, i8 zeroext %3, i8 zeroext %4) #8, !dbg !14156
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %newmode, align 8, !dbg !14157
  %5 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14158
  %tobool1 = icmp ne %struct.drm_display_mode* %5, null, !dbg !14158
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !14160

if.then2:                                         ; preds = %if.then
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14161
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 11, !dbg !14163
  %7 = load i32, i32* %flags, align 8, !dbg !14164
  %or = or i32 %7, 16384, !dbg !14164
  store i32 %or, i32* %flags, align 8, !dbg !14164
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14165
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14166
  call void @drm_mode_probed_add(%struct.drm_connector* %8, %struct.drm_display_mode* %9) #8, !dbg !14167
  %10 = load i32, i32* %modes, align 4, !dbg !14168
  %inc = add i32 %10, 1, !dbg !14168
  store i32 %inc, i32* %modes, align 4, !dbg !14168
  br label %if.end, !dbg !14169

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !14170

if.end3:                                          ; preds = %if.end, %entry
  %11 = load i16, i16* %structure.addr, align 2, !dbg !14171
  %conv4 = zext i16 %11 to i32, !dbg !14171
  %and5 = and i32 %conv4, 64, !dbg !14173
  %tobool6 = icmp ne i32 %and5, 0, !dbg !14173
  br i1 %tobool6, label %if.then7, label %if.end15, !dbg !14174

if.then7:                                         ; preds = %if.end3
  %12 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14175
  %13 = load i8*, i8** %video_db.addr, align 8, !dbg !14177
  %14 = load i8, i8* %video_len.addr, align 1, !dbg !14178
  %15 = load i8, i8* %video_index.addr, align 1, !dbg !14179
  %call8 = call %struct.drm_display_mode* @drm_display_mode_from_vic_index(%struct.drm_connector* %12, i8* %13, i8 zeroext %14, i8 zeroext %15) #8, !dbg !14180
  store %struct.drm_display_mode* %call8, %struct.drm_display_mode** %newmode, align 8, !dbg !14181
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14182
  %tobool9 = icmp ne %struct.drm_display_mode* %16, null, !dbg !14182
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !14184

if.then10:                                        ; preds = %if.then7
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14185
  %flags11 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %17, i32 0, i32 11, !dbg !14187
  %18 = load i32, i32* %flags11, align 8, !dbg !14188
  %or12 = or i32 %18, 114688, !dbg !14188
  store i32 %or12, i32* %flags11, align 8, !dbg !14188
  %19 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14189
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14190
  call void @drm_mode_probed_add(%struct.drm_connector* %19, %struct.drm_display_mode* %20) #8, !dbg !14191
  %21 = load i32, i32* %modes, align 4, !dbg !14192
  %inc13 = add i32 %21, 1, !dbg !14192
  store i32 %inc13, i32* %modes, align 4, !dbg !14192
  br label %if.end14, !dbg !14193

if.end14:                                         ; preds = %if.then10, %if.then7
  br label %if.end15, !dbg !14194

if.end15:                                         ; preds = %if.end14, %if.end3
  %22 = load i16, i16* %structure.addr, align 2, !dbg !14195
  %conv16 = zext i16 %22 to i32, !dbg !14195
  %and17 = and i32 %conv16, 256, !dbg !14197
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14197
  br i1 %tobool18, label %if.then19, label %if.end27, !dbg !14198

if.then19:                                        ; preds = %if.end15
  %23 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14199
  %24 = load i8*, i8** %video_db.addr, align 8, !dbg !14201
  %25 = load i8, i8* %video_len.addr, align 1, !dbg !14202
  %26 = load i8, i8* %video_index.addr, align 1, !dbg !14203
  %call20 = call %struct.drm_display_mode* @drm_display_mode_from_vic_index(%struct.drm_connector* %23, i8* %24, i8 zeroext %25, i8 zeroext %26) #8, !dbg !14204
  store %struct.drm_display_mode* %call20, %struct.drm_display_mode** %newmode, align 8, !dbg !14205
  %27 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14206
  %tobool21 = icmp ne %struct.drm_display_mode* %27, null, !dbg !14206
  br i1 %tobool21, label %if.then22, label %if.end26, !dbg !14208

if.then22:                                        ; preds = %if.then19
  %28 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14209
  %flags23 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %28, i32 0, i32 11, !dbg !14211
  %29 = load i32, i32* %flags23, align 8, !dbg !14212
  %or24 = or i32 %29, 131072, !dbg !14212
  store i32 %or24, i32* %flags23, align 8, !dbg !14212
  %30 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14213
  %31 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14214
  call void @drm_mode_probed_add(%struct.drm_connector* %30, %struct.drm_display_mode* %31) #8, !dbg !14215
  %32 = load i32, i32* %modes, align 4, !dbg !14216
  %inc25 = add i32 %32, 1, !dbg !14216
  store i32 %inc25, i32* %modes, align 4, !dbg !14216
  br label %if.end26, !dbg !14217

if.end26:                                         ; preds = %if.then22, %if.then19
  br label %if.end27, !dbg !14218

if.end27:                                         ; preds = %if.end26, %if.end15
  %33 = load i32, i32* %modes, align 4, !dbg !14219
  ret i32 %33, !dbg !14220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !14221 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !14225, metadata !DIExpression()), !dbg !14226
  br label %do.body, !dbg !14227

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14228

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !14230

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !14228

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14232
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14232
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !14232
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !14232
  br label %do.end3, !dbg !14232

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !14228

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14234
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14235
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !14236
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !14237
  ret void, !dbg !14238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @stereo_match_mandatory(%struct.drm_display_mode* %mode, %struct.stereo_mandatory_mode* %stereo_mode) #0 !dbg !14239 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %stereo_mode.addr = alloca %struct.stereo_mandatory_mode*, align 8
  %interlaced = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !14242, metadata !DIExpression()), !dbg !14243
  store %struct.stereo_mandatory_mode* %stereo_mode, %struct.stereo_mandatory_mode** %stereo_mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.stereo_mandatory_mode** %stereo_mode.addr, metadata !14244, metadata !DIExpression()), !dbg !14245
  call void @llvm.dbg.declare(metadata i32* %interlaced, metadata !14246, metadata !DIExpression()), !dbg !14247
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !14248
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 11, !dbg !14249
  %1 = load i32, i32* %flags, align 8, !dbg !14249
  %and = and i32 %1, 16, !dbg !14250
  store i32 %and, i32* %interlaced, align 4, !dbg !14247
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !14251
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 1, !dbg !14252
  %3 = load i16, i16* %hdisplay, align 4, !dbg !14252
  %conv = zext i16 %3 to i32, !dbg !14251
  %4 = load %struct.stereo_mandatory_mode*, %struct.stereo_mandatory_mode** %stereo_mode.addr, align 8, !dbg !14253
  %width = getelementptr inbounds %struct.stereo_mandatory_mode, %struct.stereo_mandatory_mode* %4, i32 0, i32 0, !dbg !14254
  %5 = load i32, i32* %width, align 4, !dbg !14254
  %cmp = icmp eq i32 %conv, %5, !dbg !14255
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !14256

land.lhs.true:                                    ; preds = %entry
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !14257
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 6, !dbg !14258
  %7 = load i16, i16* %vdisplay, align 2, !dbg !14258
  %conv2 = zext i16 %7 to i32, !dbg !14257
  %8 = load %struct.stereo_mandatory_mode*, %struct.stereo_mandatory_mode** %stereo_mode.addr, align 8, !dbg !14259
  %height = getelementptr inbounds %struct.stereo_mandatory_mode, %struct.stereo_mandatory_mode* %8, i32 0, i32 1, !dbg !14260
  %9 = load i32, i32* %height, align 4, !dbg !14260
  %cmp3 = icmp eq i32 %conv2, %9, !dbg !14261
  br i1 %cmp3, label %land.lhs.true5, label %land.end, !dbg !14262

land.lhs.true5:                                   ; preds = %land.lhs.true
  %10 = load i32, i32* %interlaced, align 4, !dbg !14263
  %11 = load %struct.stereo_mandatory_mode*, %struct.stereo_mandatory_mode** %stereo_mode.addr, align 8, !dbg !14264
  %flags6 = getelementptr inbounds %struct.stereo_mandatory_mode, %struct.stereo_mandatory_mode* %11, i32 0, i32 3, !dbg !14265
  %12 = load i32, i32* %flags6, align 4, !dbg !14265
  %and7 = and i32 %12, 16, !dbg !14266
  %cmp8 = icmp eq i32 %10, %and7, !dbg !14267
  br i1 %cmp8, label %land.rhs, label %land.end, !dbg !14268

land.rhs:                                         ; preds = %land.lhs.true5
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !14269
  %call = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %13) #8, !dbg !14270
  %14 = load %struct.stereo_mandatory_mode*, %struct.stereo_mandatory_mode** %stereo_mode.addr, align 8, !dbg !14271
  %vrefresh = getelementptr inbounds %struct.stereo_mandatory_mode, %struct.stereo_mandatory_mode* %14, i32 0, i32 2, !dbg !14272
  %15 = load i32, i32* %vrefresh, align 4, !dbg !14272
  %cmp10 = icmp eq i32 %call, %15, !dbg !14273
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true5, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true5 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp10, %land.rhs ], !dbg !14274
  ret i1 %16, !dbg !14275
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !14276 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14279, metadata !DIExpression()), !dbg !14280
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14281, metadata !DIExpression()), !dbg !14282
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14283
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14284
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14285
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14285
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14286
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #8, !dbg !14287
  ret void, !dbg !14288
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !14289 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !14290, metadata !DIExpression()), !dbg !14291
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14292, metadata !DIExpression()), !dbg !14293
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14294
  %call = call i32 @list_empty(%struct.list_head* %0) #8, !dbg !14296
  %tobool = icmp ne i32 %call, 0, !dbg !14296
  br i1 %tobool, label %if.end, label %if.then, !dbg !14297

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14298
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14299
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !14300
  %3 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14300
  %4 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14301
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %3, %struct.list_head* %4) #8, !dbg !14302
  br label %if.end, !dbg !14302

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14303
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14304 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14307, metadata !DIExpression()), !dbg !14308
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14309, metadata !DIExpression()), !dbg !14310
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14311, metadata !DIExpression()), !dbg !14312
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14313
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14315
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14316
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #8, !dbg !14317
  br i1 %call, label %if.end, label %if.then, !dbg !14318

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !14319

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14320
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14321
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !14322
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !14323
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14324
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14325
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !14326
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !14327
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14328
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14329
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !14330
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !14331
  br label %do.body, !dbg !14332

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !14333

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !14335

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !14333

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14337
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14337
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !14337
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !14337
  br label %do.end7, !dbg !14337

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !14333

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !14339
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14340 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14345, metadata !DIExpression()), !dbg !14346
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14347, metadata !DIExpression()), !dbg !14348
  ret i1 true, !dbg !14349
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !14350 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !14355, metadata !DIExpression()), !dbg !14356
  br label %do.body, !dbg !14357

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14359

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14357
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !14357
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14357
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !14359
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !14357
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !14361
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !14362
  %conv = zext i1 %cmp to i32, !dbg !14362
  ret i32 %conv, !dbg !14363
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14364 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !14367, metadata !DIExpression()), !dbg !14368
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14369, metadata !DIExpression()), !dbg !14370
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14371, metadata !DIExpression()), !dbg !14372
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !14373, metadata !DIExpression()), !dbg !14374
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14375
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !14376
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !14376
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !14374
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !14377, metadata !DIExpression()), !dbg !14378
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !14379
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !14380
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !14380
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !14378
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14381
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !14382
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !14383
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !14384
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !14385
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14386
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !14387
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !14388
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14389
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !14390
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !14391
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !14392
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !14393
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14394
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !14395
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !14396
  ret void, !dbg !14397
}

; Function Attrs: noredzone
declare dso_local void @__drm_err(i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_match_hdmi_mode(%struct.drm_display_mode* %to_match) #0 !dbg !14398 {
entry:
  %retval = alloca i8, align 1
  %to_match.addr = alloca %struct.drm_display_mode*, align 8
  %match_flags = alloca i32, align 4
  %vic = alloca i8, align 1
  %hdmi_mode = alloca %struct.drm_display_mode*, align 8
  %clock1 = alloca i32, align 4
  %clock2 = alloca i32, align 4
  store %struct.drm_display_mode* %to_match, %struct.drm_display_mode** %to_match.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %to_match.addr, metadata !14399, metadata !DIExpression()), !dbg !14400
  call void @llvm.dbg.declare(metadata i32* %match_flags, metadata !14401, metadata !DIExpression()), !dbg !14402
  store i32 5, i32* %match_flags, align 4, !dbg !14402
  call void @llvm.dbg.declare(metadata i8* %vic, metadata !14403, metadata !DIExpression()), !dbg !14404
  %0 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !14405
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %0, i32 0, i32 0, !dbg !14407
  %1 = load i32, i32* %clock, align 8, !dbg !14407
  %tobool = icmp ne i32 %1, 0, !dbg !14405
  br i1 %tobool, label %if.end, label %if.then, !dbg !14408

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !14409
  br label %return, !dbg !14409

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !14410
  %picture_aspect_ratio = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %2, i32 0, i32 33, !dbg !14412
  %3 = load i32, i32* %picture_aspect_ratio, align 4, !dbg !14412
  %tobool1 = icmp ne i32 %3, 0, !dbg !14410
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !14413

if.then2:                                         ; preds = %if.end
  %4 = load i32, i32* %match_flags, align 4, !dbg !14414
  %or = or i32 %4, 16, !dbg !14414
  store i32 %or, i32* %match_flags, align 4, !dbg !14414
  br label %if.end3, !dbg !14415

if.end3:                                          ; preds = %if.then2, %if.end
  store i8 1, i8* %vic, align 1, !dbg !14416
  br label %for.cond, !dbg !14418

for.cond:                                         ; preds = %for.inc, %if.end3
  %5 = load i8, i8* %vic, align 1, !dbg !14419
  %conv = zext i8 %5 to i64, !dbg !14419
  %cmp = icmp ult i64 %conv, 5, !dbg !14421
  br i1 %cmp, label %for.body, label %for.end, !dbg !14422

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %hdmi_mode, metadata !14423, metadata !DIExpression()), !dbg !14425
  %6 = load i8, i8* %vic, align 1, !dbg !14426
  %idxprom = zext i8 %6 to i64, !dbg !14427
  %arrayidx = getelementptr [5 x %struct.drm_display_mode], [5 x %struct.drm_display_mode]* @edid_4k_modes, i64 0, i64 %idxprom, !dbg !14427
  store %struct.drm_display_mode* %arrayidx, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !14425
  call void @llvm.dbg.declare(metadata i32* %clock1, metadata !14428, metadata !DIExpression()), !dbg !14429
  call void @llvm.dbg.declare(metadata i32* %clock2, metadata !14430, metadata !DIExpression()), !dbg !14431
  %7 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !14432
  %clock5 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %7, i32 0, i32 0, !dbg !14433
  %8 = load i32, i32* %clock5, align 8, !dbg !14433
  store i32 %8, i32* %clock1, align 4, !dbg !14434
  %9 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !14435
  %call = call i32 @hdmi_mode_alternate_clock(%struct.drm_display_mode* %9) #8, !dbg !14436
  store i32 %call, i32* %clock2, align 4, !dbg !14437
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !14438
  %clock6 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 0, !dbg !14438
  %11 = load i32, i32* %clock6, align 8, !dbg !14438
  %conv7 = sext i32 %11 to i64, !dbg !14438
  %div = udiv i64 1000000000, %conv7, !dbg !14438
  %12 = load i32, i32* %clock1, align 4, !dbg !14440
  %conv8 = zext i32 %12 to i64, !dbg !14440
  %div9 = udiv i64 1000000000, %conv8, !dbg !14440
  %cmp10 = icmp eq i64 %div, %div9, !dbg !14441
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false, !dbg !14442

lor.lhs.false:                                    ; preds = %for.body
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !14443
  %clock12 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %13, i32 0, i32 0, !dbg !14443
  %14 = load i32, i32* %clock12, align 8, !dbg !14443
  %conv13 = sext i32 %14 to i64, !dbg !14443
  %div14 = udiv i64 1000000000, %conv13, !dbg !14443
  %15 = load i32, i32* %clock2, align 4, !dbg !14444
  %conv15 = zext i32 %15 to i64, !dbg !14444
  %div16 = udiv i64 1000000000, %conv15, !dbg !14444
  %cmp17 = icmp eq i64 %div14, %div16, !dbg !14445
  br i1 %cmp17, label %land.lhs.true, label %if.end22, !dbg !14446

land.lhs.true:                                    ; preds = %lor.lhs.false, %for.body
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %to_match.addr, align 8, !dbg !14447
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %hdmi_mode, align 8, !dbg !14448
  %18 = load i32, i32* %match_flags, align 4, !dbg !14449
  %call19 = call zeroext i1 @drm_mode_match(%struct.drm_display_mode* %16, %struct.drm_display_mode* %17, i32 %18) #8, !dbg !14450
  br i1 %call19, label %if.then21, label %if.end22, !dbg !14451

if.then21:                                        ; preds = %land.lhs.true
  %19 = load i8, i8* %vic, align 1, !dbg !14452
  store i8 %19, i8* %retval, align 1, !dbg !14453
  br label %return, !dbg !14453

if.end22:                                         ; preds = %land.lhs.true, %lor.lhs.false
  br label %for.inc, !dbg !14454

for.inc:                                          ; preds = %if.end22
  %20 = load i8, i8* %vic, align 1, !dbg !14455
  %inc = add i8 %20, 1, !dbg !14455
  store i8 %inc, i8* %vic, align 1, !dbg !14455
  br label %for.cond, !dbg !14456, !llvm.loop !14457

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !14459
  br label %return, !dbg !14459

return:                                           ; preds = %for.end, %if.then21, %if.then
  %21 = load i8, i8* %retval, align 1, !dbg !14460
  ret i8 %21, !dbg !14460
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !14461 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14462, metadata !DIExpression()), !dbg !14463
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14464
  call void @__list_del_entry(%struct.list_head* %0) #8, !dbg !14465
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14466
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !14467
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !14468
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14469
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !14470
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !14471
  ret void, !dbg !14472
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !14473 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14474, metadata !DIExpression()), !dbg !14475
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14476
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #8, !dbg !14478
  br i1 %call, label %if.end, label %if.then, !dbg !14479

if.then:                                          ; preds = %entry
  br label %return, !dbg !14480

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14481
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14482
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14482
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14483
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14484
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14484
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #8, !dbg !14485
  br label %return, !dbg !14486

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14486
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !14487 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14490, metadata !DIExpression()), !dbg !14491
  ret i1 true, !dbg !14492
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14493 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14494, metadata !DIExpression()), !dbg !14495
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14496, metadata !DIExpression()), !dbg !14497
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14498
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14499
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14500
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !14501
  br label %do.body, !dbg !14502

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !14503

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !14505

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !14503

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14507
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14507
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14507
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !14507
  br label %do.end5, !dbg !14507

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !14503

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !14509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @add_displayid_detailed_1_modes(%struct.drm_connector* %connector, %struct.displayid_block* %block) #0 !dbg !14510 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %block.addr = alloca %struct.displayid_block*, align 8
  %det = alloca %struct.displayid_detailed_timing_block*, align 8
  %i = alloca i32, align 4
  %num_timings = alloca i32, align 4
  %newmode = alloca %struct.drm_display_mode*, align 8
  %num_modes = alloca i32, align 4
  %timings = alloca %struct.displayid_detailed_timings_1*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14513, metadata !DIExpression()), !dbg !14514
  store %struct.displayid_block* %block, %struct.displayid_block** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.displayid_block** %block.addr, metadata !14515, metadata !DIExpression()), !dbg !14516
  call void @llvm.dbg.declare(metadata %struct.displayid_detailed_timing_block** %det, metadata !14517, metadata !DIExpression()), !dbg !14518
  %0 = load %struct.displayid_block*, %struct.displayid_block** %block.addr, align 8, !dbg !14519
  %1 = bitcast %struct.displayid_block* %0 to %struct.displayid_detailed_timing_block*, !dbg !14520
  store %struct.displayid_detailed_timing_block* %1, %struct.displayid_detailed_timing_block** %det, align 8, !dbg !14518
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14521, metadata !DIExpression()), !dbg !14522
  call void @llvm.dbg.declare(metadata i32* %num_timings, metadata !14523, metadata !DIExpression()), !dbg !14524
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !14525, metadata !DIExpression()), !dbg !14526
  call void @llvm.dbg.declare(metadata i32* %num_modes, metadata !14527, metadata !DIExpression()), !dbg !14528
  store i32 0, i32* %num_modes, align 4, !dbg !14528
  %2 = load %struct.displayid_block*, %struct.displayid_block** %block.addr, align 8, !dbg !14529
  %num_bytes = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %2, i32 0, i32 2, !dbg !14531
  %3 = load i8, i8* %num_bytes, align 1, !dbg !14531
  %conv = zext i8 %3 to i32, !dbg !14529
  %rem = srem i32 %conv, 20, !dbg !14532
  %tobool = icmp ne i32 %rem, 0, !dbg !14532
  br i1 %tobool, label %if.then, label %if.end, !dbg !14533

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14534
  br label %return, !dbg !14534

if.end:                                           ; preds = %entry
  %4 = load %struct.displayid_block*, %struct.displayid_block** %block.addr, align 8, !dbg !14535
  %num_bytes1 = getelementptr inbounds %struct.displayid_block, %struct.displayid_block* %4, i32 0, i32 2, !dbg !14536
  %5 = load i8, i8* %num_bytes1, align 1, !dbg !14536
  %conv2 = zext i8 %5 to i32, !dbg !14535
  %div = sdiv i32 %conv2, 20, !dbg !14537
  store i32 %div, i32* %num_timings, align 4, !dbg !14538
  store i32 0, i32* %i, align 4, !dbg !14539
  br label %for.cond, !dbg !14541

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i32, i32* %i, align 4, !dbg !14542
  %7 = load i32, i32* %num_timings, align 4, !dbg !14544
  %cmp = icmp slt i32 %6, %7, !dbg !14545
  br i1 %cmp, label %for.body, label %for.end, !dbg !14546

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.displayid_detailed_timings_1** %timings, metadata !14547, metadata !DIExpression()), !dbg !14550
  %8 = load %struct.displayid_detailed_timing_block*, %struct.displayid_detailed_timing_block** %det, align 8, !dbg !14551
  %timings4 = getelementptr inbounds %struct.displayid_detailed_timing_block, %struct.displayid_detailed_timing_block* %8, i32 0, i32 1, !dbg !14552
  %9 = load i32, i32* %i, align 4, !dbg !14553
  %idxprom = sext i32 %9 to i64, !dbg !14551
  %arrayidx = getelementptr [0 x %struct.displayid_detailed_timings_1], [0 x %struct.displayid_detailed_timings_1]* %timings4, i64 0, i64 %idxprom, !dbg !14551
  store %struct.displayid_detailed_timings_1* %arrayidx, %struct.displayid_detailed_timings_1** %timings, align 8, !dbg !14550
  %10 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14554
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %10, i32 0, i32 0, !dbg !14555
  %11 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !14555
  %12 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings, align 8, !dbg !14556
  %call = call %struct.drm_display_mode* @drm_mode_displayid_detailed(%struct.drm_device* %11, %struct.displayid_detailed_timings_1* %12) #8, !dbg !14557
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %newmode, align 8, !dbg !14558
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14559
  %tobool5 = icmp ne %struct.drm_display_mode* %13, null, !dbg !14559
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !14561

if.then6:                                         ; preds = %for.body
  br label %for.inc, !dbg !14562

if.end7:                                          ; preds = %for.body
  %14 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14563
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14564
  call void @drm_mode_probed_add(%struct.drm_connector* %14, %struct.drm_display_mode* %15) #8, !dbg !14565
  %16 = load i32, i32* %num_modes, align 4, !dbg !14566
  %inc = add i32 %16, 1, !dbg !14566
  store i32 %inc, i32* %num_modes, align 4, !dbg !14566
  br label %for.inc, !dbg !14567

for.inc:                                          ; preds = %if.end7, %if.then6
  %17 = load i32, i32* %i, align 4, !dbg !14568
  %inc8 = add i32 %17, 1, !dbg !14568
  store i32 %inc8, i32* %i, align 4, !dbg !14568
  br label %for.cond, !dbg !14569, !llvm.loop !14570

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* %num_modes, align 4, !dbg !14572
  store i32 %18, i32* %retval, align 4, !dbg !14573
  br label %return, !dbg !14573

return:                                           ; preds = %for.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !14574
  ret i32 %19, !dbg !14574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_display_mode* @drm_mode_displayid_detailed(%struct.drm_device* %dev, %struct.displayid_detailed_timings_1* %timings) #0 !dbg !14575 {
entry:
  %retval = alloca %struct.drm_display_mode*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %timings.addr = alloca %struct.displayid_detailed_timings_1*, align 8
  %mode = alloca %struct.drm_display_mode*, align 8
  %pixel_clock = alloca i32, align 4
  %hactive = alloca i32, align 4
  %hblank = alloca i32, align 4
  %hsync = alloca i32, align 4
  %hsync_width = alloca i32, align 4
  %vactive = alloca i32, align 4
  %vblank = alloca i32, align 4
  %vsync = alloca i32, align 4
  %vsync_width = alloca i32, align 4
  %hsync_positive = alloca i8, align 1
  %vsync_positive = alloca i8, align 1
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !14578, metadata !DIExpression()), !dbg !14579
  store %struct.displayid_detailed_timings_1* %timings, %struct.displayid_detailed_timings_1** %timings.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.displayid_detailed_timings_1** %timings.addr, metadata !14580, metadata !DIExpression()), !dbg !14581
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !14582, metadata !DIExpression()), !dbg !14583
  call void @llvm.dbg.declare(metadata i32* %pixel_clock, metadata !14584, metadata !DIExpression()), !dbg !14585
  %0 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14586
  %pixel_clock1 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %0, i32 0, i32 0, !dbg !14587
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %pixel_clock1, i64 0, i64 0, !dbg !14586
  %1 = load i8, i8* %arrayidx, align 1, !dbg !14586
  %conv = zext i8 %1 to i32, !dbg !14586
  %2 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14588
  %pixel_clock2 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %2, i32 0, i32 0, !dbg !14589
  %arrayidx3 = getelementptr [3 x i8], [3 x i8]* %pixel_clock2, i64 0, i64 1, !dbg !14588
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !14588
  %conv4 = zext i8 %3 to i32, !dbg !14588
  %shl = shl i32 %conv4, 8, !dbg !14590
  %or = or i32 %conv, %shl, !dbg !14591
  %4 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14592
  %pixel_clock5 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %4, i32 0, i32 0, !dbg !14593
  %arrayidx6 = getelementptr [3 x i8], [3 x i8]* %pixel_clock5, i64 0, i64 2, !dbg !14592
  %5 = load i8, i8* %arrayidx6, align 1, !dbg !14592
  %conv7 = zext i8 %5 to i32, !dbg !14592
  %shl8 = shl i32 %conv7, 16, !dbg !14594
  %or9 = or i32 %or, %shl8, !dbg !14595
  %add = add i32 %or9, 1, !dbg !14596
  store i32 %add, i32* %pixel_clock, align 4, !dbg !14585
  call void @llvm.dbg.declare(metadata i32* %hactive, metadata !14597, metadata !DIExpression()), !dbg !14598
  %6 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14599
  %hactive10 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %6, i32 0, i32 2, !dbg !14600
  %arrayidx11 = getelementptr [2 x i8], [2 x i8]* %hactive10, i64 0, i64 0, !dbg !14599
  %7 = load i8, i8* %arrayidx11, align 1, !dbg !14599
  %conv12 = zext i8 %7 to i32, !dbg !14599
  %8 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14601
  %hactive13 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %8, i32 0, i32 2, !dbg !14602
  %arrayidx14 = getelementptr [2 x i8], [2 x i8]* %hactive13, i64 0, i64 1, !dbg !14601
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !14601
  %conv15 = zext i8 %9 to i32, !dbg !14601
  %shl16 = shl i32 %conv15, 8, !dbg !14603
  %or17 = or i32 %conv12, %shl16, !dbg !14604
  %add18 = add i32 %or17, 1, !dbg !14605
  store i32 %add18, i32* %hactive, align 4, !dbg !14598
  call void @llvm.dbg.declare(metadata i32* %hblank, metadata !14606, metadata !DIExpression()), !dbg !14607
  %10 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14608
  %hblank19 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %10, i32 0, i32 3, !dbg !14609
  %arrayidx20 = getelementptr [2 x i8], [2 x i8]* %hblank19, i64 0, i64 0, !dbg !14608
  %11 = load i8, i8* %arrayidx20, align 1, !dbg !14608
  %conv21 = zext i8 %11 to i32, !dbg !14608
  %12 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14610
  %hblank22 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %12, i32 0, i32 3, !dbg !14611
  %arrayidx23 = getelementptr [2 x i8], [2 x i8]* %hblank22, i64 0, i64 1, !dbg !14610
  %13 = load i8, i8* %arrayidx23, align 1, !dbg !14610
  %conv24 = zext i8 %13 to i32, !dbg !14610
  %shl25 = shl i32 %conv24, 8, !dbg !14612
  %or26 = or i32 %conv21, %shl25, !dbg !14613
  %add27 = add i32 %or26, 1, !dbg !14614
  store i32 %add27, i32* %hblank, align 4, !dbg !14607
  call void @llvm.dbg.declare(metadata i32* %hsync, metadata !14615, metadata !DIExpression()), !dbg !14616
  %14 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14617
  %hsync28 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %14, i32 0, i32 4, !dbg !14618
  %arrayidx29 = getelementptr [2 x i8], [2 x i8]* %hsync28, i64 0, i64 0, !dbg !14617
  %15 = load i8, i8* %arrayidx29, align 1, !dbg !14617
  %conv30 = zext i8 %15 to i32, !dbg !14617
  %16 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14619
  %hsync31 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %16, i32 0, i32 4, !dbg !14620
  %arrayidx32 = getelementptr [2 x i8], [2 x i8]* %hsync31, i64 0, i64 1, !dbg !14619
  %17 = load i8, i8* %arrayidx32, align 1, !dbg !14619
  %conv33 = zext i8 %17 to i32, !dbg !14619
  %and = and i32 %conv33, 127, !dbg !14621
  %shl34 = shl i32 %and, 8, !dbg !14622
  %or35 = or i32 %conv30, %shl34, !dbg !14623
  %add36 = add i32 %or35, 1, !dbg !14624
  store i32 %add36, i32* %hsync, align 4, !dbg !14616
  call void @llvm.dbg.declare(metadata i32* %hsync_width, metadata !14625, metadata !DIExpression()), !dbg !14626
  %18 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14627
  %hsw = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %18, i32 0, i32 5, !dbg !14628
  %arrayidx37 = getelementptr [2 x i8], [2 x i8]* %hsw, i64 0, i64 0, !dbg !14627
  %19 = load i8, i8* %arrayidx37, align 1, !dbg !14627
  %conv38 = zext i8 %19 to i32, !dbg !14627
  %20 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14629
  %hsw39 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %20, i32 0, i32 5, !dbg !14630
  %arrayidx40 = getelementptr [2 x i8], [2 x i8]* %hsw39, i64 0, i64 1, !dbg !14629
  %21 = load i8, i8* %arrayidx40, align 1, !dbg !14629
  %conv41 = zext i8 %21 to i32, !dbg !14629
  %shl42 = shl i32 %conv41, 8, !dbg !14631
  %or43 = or i32 %conv38, %shl42, !dbg !14632
  %add44 = add i32 %or43, 1, !dbg !14633
  store i32 %add44, i32* %hsync_width, align 4, !dbg !14626
  call void @llvm.dbg.declare(metadata i32* %vactive, metadata !14634, metadata !DIExpression()), !dbg !14635
  %22 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14636
  %vactive45 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %22, i32 0, i32 6, !dbg !14637
  %arrayidx46 = getelementptr [2 x i8], [2 x i8]* %vactive45, i64 0, i64 0, !dbg !14636
  %23 = load i8, i8* %arrayidx46, align 1, !dbg !14636
  %conv47 = zext i8 %23 to i32, !dbg !14636
  %24 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14638
  %vactive48 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %24, i32 0, i32 6, !dbg !14639
  %arrayidx49 = getelementptr [2 x i8], [2 x i8]* %vactive48, i64 0, i64 1, !dbg !14638
  %25 = load i8, i8* %arrayidx49, align 1, !dbg !14638
  %conv50 = zext i8 %25 to i32, !dbg !14638
  %shl51 = shl i32 %conv50, 8, !dbg !14640
  %or52 = or i32 %conv47, %shl51, !dbg !14641
  %add53 = add i32 %or52, 1, !dbg !14642
  store i32 %add53, i32* %vactive, align 4, !dbg !14635
  call void @llvm.dbg.declare(metadata i32* %vblank, metadata !14643, metadata !DIExpression()), !dbg !14644
  %26 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14645
  %vblank54 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %26, i32 0, i32 7, !dbg !14646
  %arrayidx55 = getelementptr [2 x i8], [2 x i8]* %vblank54, i64 0, i64 0, !dbg !14645
  %27 = load i8, i8* %arrayidx55, align 1, !dbg !14645
  %conv56 = zext i8 %27 to i32, !dbg !14645
  %28 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14647
  %vblank57 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %28, i32 0, i32 7, !dbg !14648
  %arrayidx58 = getelementptr [2 x i8], [2 x i8]* %vblank57, i64 0, i64 1, !dbg !14647
  %29 = load i8, i8* %arrayidx58, align 1, !dbg !14647
  %conv59 = zext i8 %29 to i32, !dbg !14647
  %shl60 = shl i32 %conv59, 8, !dbg !14649
  %or61 = or i32 %conv56, %shl60, !dbg !14650
  %add62 = add i32 %or61, 1, !dbg !14651
  store i32 %add62, i32* %vblank, align 4, !dbg !14644
  call void @llvm.dbg.declare(metadata i32* %vsync, metadata !14652, metadata !DIExpression()), !dbg !14653
  %30 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14654
  %vsync63 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %30, i32 0, i32 8, !dbg !14655
  %arrayidx64 = getelementptr [2 x i8], [2 x i8]* %vsync63, i64 0, i64 0, !dbg !14654
  %31 = load i8, i8* %arrayidx64, align 1, !dbg !14654
  %conv65 = zext i8 %31 to i32, !dbg !14654
  %32 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14656
  %vsync66 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %32, i32 0, i32 8, !dbg !14657
  %arrayidx67 = getelementptr [2 x i8], [2 x i8]* %vsync66, i64 0, i64 1, !dbg !14656
  %33 = load i8, i8* %arrayidx67, align 1, !dbg !14656
  %conv68 = zext i8 %33 to i32, !dbg !14656
  %and69 = and i32 %conv68, 127, !dbg !14658
  %shl70 = shl i32 %and69, 8, !dbg !14659
  %or71 = or i32 %conv65, %shl70, !dbg !14660
  %add72 = add i32 %or71, 1, !dbg !14661
  store i32 %add72, i32* %vsync, align 4, !dbg !14653
  call void @llvm.dbg.declare(metadata i32* %vsync_width, metadata !14662, metadata !DIExpression()), !dbg !14663
  %34 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14664
  %vsw = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %34, i32 0, i32 9, !dbg !14665
  %arrayidx73 = getelementptr [2 x i8], [2 x i8]* %vsw, i64 0, i64 0, !dbg !14664
  %35 = load i8, i8* %arrayidx73, align 1, !dbg !14664
  %conv74 = zext i8 %35 to i32, !dbg !14664
  %36 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14666
  %vsw75 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %36, i32 0, i32 9, !dbg !14667
  %arrayidx76 = getelementptr [2 x i8], [2 x i8]* %vsw75, i64 0, i64 1, !dbg !14666
  %37 = load i8, i8* %arrayidx76, align 1, !dbg !14666
  %conv77 = zext i8 %37 to i32, !dbg !14666
  %shl78 = shl i32 %conv77, 8, !dbg !14668
  %or79 = or i32 %conv74, %shl78, !dbg !14669
  %add80 = add i32 %or79, 1, !dbg !14670
  store i32 %add80, i32* %vsync_width, align 4, !dbg !14663
  call void @llvm.dbg.declare(metadata i8* %hsync_positive, metadata !14671, metadata !DIExpression()), !dbg !14672
  %38 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14673
  %hsync81 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %38, i32 0, i32 4, !dbg !14674
  %arrayidx82 = getelementptr [2 x i8], [2 x i8]* %hsync81, i64 0, i64 1, !dbg !14673
  %39 = load i8, i8* %arrayidx82, align 1, !dbg !14673
  %conv83 = zext i8 %39 to i32, !dbg !14673
  %shr = ashr i32 %conv83, 7, !dbg !14675
  %and84 = and i32 %shr, 1, !dbg !14676
  %tobool = icmp ne i32 %and84, 0, !dbg !14677
  %frombool = zext i1 %tobool to i8, !dbg !14672
  store i8 %frombool, i8* %hsync_positive, align 1, !dbg !14672
  call void @llvm.dbg.declare(metadata i8* %vsync_positive, metadata !14678, metadata !DIExpression()), !dbg !14679
  %40 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14680
  %vsync85 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %40, i32 0, i32 8, !dbg !14681
  %arrayidx86 = getelementptr [2 x i8], [2 x i8]* %vsync85, i64 0, i64 1, !dbg !14680
  %41 = load i8, i8* %arrayidx86, align 1, !dbg !14680
  %conv87 = zext i8 %41 to i32, !dbg !14680
  %shr88 = ashr i32 %conv87, 7, !dbg !14682
  %and89 = and i32 %shr88, 1, !dbg !14683
  %tobool90 = icmp ne i32 %and89, 0, !dbg !14684
  %frombool91 = zext i1 %tobool90 to i8, !dbg !14679
  store i8 %frombool91, i8* %vsync_positive, align 1, !dbg !14679
  %42 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !14685
  %call = call %struct.drm_display_mode* @drm_mode_create(%struct.drm_device* %42) #8, !dbg !14686
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %mode, align 8, !dbg !14687
  %43 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14688
  %tobool92 = icmp ne %struct.drm_display_mode* %43, null, !dbg !14688
  br i1 %tobool92, label %if.end, label %if.then, !dbg !14690

if.then:                                          ; preds = %entry
  store %struct.drm_display_mode* null, %struct.drm_display_mode** %retval, align 8, !dbg !14691
  br label %return, !dbg !14691

if.end:                                           ; preds = %entry
  %44 = load i32, i32* %pixel_clock, align 4, !dbg !14692
  %mul = mul i32 %44, 10, !dbg !14693
  %45 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14694
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %45, i32 0, i32 0, !dbg !14695
  store i32 %mul, i32* %clock, align 8, !dbg !14696
  %46 = load i32, i32* %hactive, align 4, !dbg !14697
  %conv93 = trunc i32 %46 to i16, !dbg !14697
  %47 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14698
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %47, i32 0, i32 1, !dbg !14699
  store i16 %conv93, i16* %hdisplay, align 4, !dbg !14700
  %48 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14701
  %hdisplay94 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %48, i32 0, i32 1, !dbg !14702
  %49 = load i16, i16* %hdisplay94, align 4, !dbg !14702
  %conv95 = zext i16 %49 to i32, !dbg !14701
  %50 = load i32, i32* %hsync, align 4, !dbg !14703
  %add96 = add i32 %conv95, %50, !dbg !14704
  %conv97 = trunc i32 %add96 to i16, !dbg !14701
  %51 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14705
  %hsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %51, i32 0, i32 2, !dbg !14706
  store i16 %conv97, i16* %hsync_start, align 2, !dbg !14707
  %52 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14708
  %hsync_start98 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %52, i32 0, i32 2, !dbg !14709
  %53 = load i16, i16* %hsync_start98, align 2, !dbg !14709
  %conv99 = zext i16 %53 to i32, !dbg !14708
  %54 = load i32, i32* %hsync_width, align 4, !dbg !14710
  %add100 = add i32 %conv99, %54, !dbg !14711
  %conv101 = trunc i32 %add100 to i16, !dbg !14708
  %55 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14712
  %hsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %55, i32 0, i32 3, !dbg !14713
  store i16 %conv101, i16* %hsync_end, align 8, !dbg !14714
  %56 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14715
  %hdisplay102 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %56, i32 0, i32 1, !dbg !14716
  %57 = load i16, i16* %hdisplay102, align 4, !dbg !14716
  %conv103 = zext i16 %57 to i32, !dbg !14715
  %58 = load i32, i32* %hblank, align 4, !dbg !14717
  %add104 = add i32 %conv103, %58, !dbg !14718
  %conv105 = trunc i32 %add104 to i16, !dbg !14715
  %59 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14719
  %htotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %59, i32 0, i32 4, !dbg !14720
  store i16 %conv105, i16* %htotal, align 2, !dbg !14721
  %60 = load i32, i32* %vactive, align 4, !dbg !14722
  %conv106 = trunc i32 %60 to i16, !dbg !14722
  %61 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14723
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %61, i32 0, i32 6, !dbg !14724
  store i16 %conv106, i16* %vdisplay, align 2, !dbg !14725
  %62 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14726
  %vdisplay107 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %62, i32 0, i32 6, !dbg !14727
  %63 = load i16, i16* %vdisplay107, align 2, !dbg !14727
  %conv108 = zext i16 %63 to i32, !dbg !14726
  %64 = load i32, i32* %vsync, align 4, !dbg !14728
  %add109 = add i32 %conv108, %64, !dbg !14729
  %conv110 = trunc i32 %add109 to i16, !dbg !14726
  %65 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14730
  %vsync_start = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %65, i32 0, i32 7, !dbg !14731
  store i16 %conv110, i16* %vsync_start, align 8, !dbg !14732
  %66 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14733
  %vsync_start111 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %66, i32 0, i32 7, !dbg !14734
  %67 = load i16, i16* %vsync_start111, align 8, !dbg !14734
  %conv112 = zext i16 %67 to i32, !dbg !14733
  %68 = load i32, i32* %vsync_width, align 4, !dbg !14735
  %add113 = add i32 %conv112, %68, !dbg !14736
  %conv114 = trunc i32 %add113 to i16, !dbg !14733
  %69 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14737
  %vsync_end = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %69, i32 0, i32 8, !dbg !14738
  store i16 %conv114, i16* %vsync_end, align 2, !dbg !14739
  %70 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14740
  %vdisplay115 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %70, i32 0, i32 6, !dbg !14741
  %71 = load i16, i16* %vdisplay115, align 2, !dbg !14741
  %conv116 = zext i16 %71 to i32, !dbg !14740
  %72 = load i32, i32* %vblank, align 4, !dbg !14742
  %add117 = add i32 %conv116, %72, !dbg !14743
  %conv118 = trunc i32 %add117 to i16, !dbg !14740
  %73 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14744
  %vtotal = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %73, i32 0, i32 9, !dbg !14745
  store i16 %conv118, i16* %vtotal, align 4, !dbg !14746
  %74 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14747
  %flags = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %74, i32 0, i32 11, !dbg !14748
  store i32 0, i32* %flags, align 8, !dbg !14749
  %75 = load i8, i8* %hsync_positive, align 1, !dbg !14750
  %tobool119 = trunc i8 %75 to i1, !dbg !14750
  %76 = zext i1 %tobool119 to i64, !dbg !14750
  %cond = select i1 %tobool119, i32 1, i32 2, !dbg !14750
  %77 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14751
  %flags121 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %77, i32 0, i32 11, !dbg !14752
  %78 = load i32, i32* %flags121, align 8, !dbg !14753
  %or122 = or i32 %78, %cond, !dbg !14753
  store i32 %or122, i32* %flags121, align 8, !dbg !14753
  %79 = load i8, i8* %vsync_positive, align 1, !dbg !14754
  %tobool123 = trunc i8 %79 to i1, !dbg !14754
  %80 = zext i1 %tobool123 to i64, !dbg !14754
  %cond125 = select i1 %tobool123, i32 4, i32 8, !dbg !14754
  %81 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14755
  %flags126 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %81, i32 0, i32 11, !dbg !14756
  %82 = load i32, i32* %flags126, align 8, !dbg !14757
  %or127 = or i32 %82, %cond125, !dbg !14757
  store i32 %or127, i32* %flags126, align 8, !dbg !14757
  %83 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14758
  %type = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %83, i32 0, i32 28, !dbg !14759
  store i8 64, i8* %type, align 2, !dbg !14760
  %84 = load %struct.displayid_detailed_timings_1*, %struct.displayid_detailed_timings_1** %timings.addr, align 8, !dbg !14761
  %flags128 = getelementptr inbounds %struct.displayid_detailed_timings_1, %struct.displayid_detailed_timings_1* %84, i32 0, i32 1, !dbg !14763
  %85 = load i8, i8* %flags128, align 1, !dbg !14763
  %conv129 = zext i8 %85 to i32, !dbg !14761
  %and130 = and i32 %conv129, 128, !dbg !14764
  %tobool131 = icmp ne i32 %and130, 0, !dbg !14764
  br i1 %tobool131, label %if.then132, label %if.end137, !dbg !14765

if.then132:                                       ; preds = %if.end
  %86 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14766
  %type133 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %86, i32 0, i32 28, !dbg !14767
  %87 = load i8, i8* %type133, align 2, !dbg !14768
  %conv134 = zext i8 %87 to i32, !dbg !14768
  %or135 = or i32 %conv134, 8, !dbg !14768
  %conv136 = trunc i32 %or135 to i8, !dbg !14768
  store i8 %conv136, i8* %type133, align 2, !dbg !14768
  br label %if.end137, !dbg !14766

if.end137:                                        ; preds = %if.then132, %if.end
  %88 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14769
  call void @drm_mode_set_name(%struct.drm_display_mode* %88) #8, !dbg !14770
  %89 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !14771
  store %struct.drm_display_mode* %89, %struct.drm_display_mode** %retval, align 8, !dbg !14772
  br label %return, !dbg !14772

return:                                           ; preds = %if.end137, %if.then
  %90 = load %struct.drm_display_mode*, %struct.drm_display_mode** %retval, align 8, !dbg !14773
  ret %struct.drm_display_mode* %90, !dbg !14773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @do_inferred_modes(%struct.detailed_timing* %timing, i8* %c) #0 !dbg !14774 {
entry:
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %c.addr = alloca i8*, align 8
  %closure = alloca %struct.detailed_mode_closure*, align 8
  %data = alloca %struct.detailed_non_pixel*, align 8
  %range = alloca %struct.detailed_data_monitor_range*, align 8
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !14775, metadata !DIExpression()), !dbg !14776
  store i8* %c, i8** %c.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %c.addr, metadata !14777, metadata !DIExpression()), !dbg !14778
  call void @llvm.dbg.declare(metadata %struct.detailed_mode_closure** %closure, metadata !14779, metadata !DIExpression()), !dbg !14780
  %0 = load i8*, i8** %c.addr, align 8, !dbg !14781
  %1 = bitcast i8* %0 to %struct.detailed_mode_closure*, !dbg !14781
  store %struct.detailed_mode_closure* %1, %struct.detailed_mode_closure** %closure, align 8, !dbg !14780
  call void @llvm.dbg.declare(metadata %struct.detailed_non_pixel** %data, metadata !14782, metadata !DIExpression()), !dbg !14783
  %2 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14784
  %data1 = getelementptr inbounds %struct.detailed_timing, %struct.detailed_timing* %2, i32 0, i32 1, !dbg !14785
  %other_data = bitcast %union.anon.0* %data1 to %struct.detailed_non_pixel*, !dbg !14786
  store %struct.detailed_non_pixel* %other_data, %struct.detailed_non_pixel** %data, align 8, !dbg !14783
  call void @llvm.dbg.declare(metadata %struct.detailed_data_monitor_range** %range, metadata !14787, metadata !DIExpression()), !dbg !14789
  %3 = load %struct.detailed_non_pixel*, %struct.detailed_non_pixel** %data, align 8, !dbg !14790
  %data2 = getelementptr inbounds %struct.detailed_non_pixel, %struct.detailed_non_pixel* %3, i32 0, i32 3, !dbg !14791
  %range3 = bitcast %union.anon.1* %data2 to %struct.detailed_data_monitor_range*, !dbg !14792
  store %struct.detailed_data_monitor_range* %range3, %struct.detailed_data_monitor_range** %range, align 8, !dbg !14789
  %4 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14793
  %5 = bitcast %struct.detailed_timing* %4 to i8*, !dbg !14795
  %call = call zeroext i1 @is_display_descriptor(i8* %5, i8 zeroext -3) #8, !dbg !14796
  br i1 %call, label %if.end, label %if.then, !dbg !14797

if.then:                                          ; preds = %entry
  br label %sw.epilog, !dbg !14798

if.end:                                           ; preds = %entry
  %6 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14799
  %connector = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %6, i32 0, i32 0, !dbg !14800
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !14800
  %8 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14801
  %edid = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %8, i32 0, i32 1, !dbg !14802
  %9 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !14802
  %10 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14803
  %call4 = call i32 @drm_dmt_modes_for_range(%struct.drm_connector* %7, %struct.edid* %9, %struct.detailed_timing* %10) #8, !dbg !14804
  %11 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14805
  %modes = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %11, i32 0, i32 4, !dbg !14806
  %12 = load i32, i32* %modes, align 8, !dbg !14807
  %add = add i32 %12, %call4, !dbg !14807
  store i32 %add, i32* %modes, align 8, !dbg !14807
  %13 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14808
  %edid5 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %13, i32 0, i32 1, !dbg !14808
  %14 = load %struct.edid*, %struct.edid** %edid5, align 8, !dbg !14808
  %version = getelementptr inbounds %struct.edid, %struct.edid* %14, i32 0, i32 6, !dbg !14808
  %15 = load i8, i8* %version, align 1, !dbg !14808
  %conv = zext i8 %15 to i32, !dbg !14808
  %cmp = icmp sgt i32 %conv, 1, !dbg !14808
  br i1 %cmp, label %if.end17, label %lor.lhs.false, !dbg !14808

lor.lhs.false:                                    ; preds = %if.end
  %16 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14808
  %edid7 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %16, i32 0, i32 1, !dbg !14808
  %17 = load %struct.edid*, %struct.edid** %edid7, align 8, !dbg !14808
  %version8 = getelementptr inbounds %struct.edid, %struct.edid* %17, i32 0, i32 6, !dbg !14808
  %18 = load i8, i8* %version8, align 1, !dbg !14808
  %conv9 = zext i8 %18 to i32, !dbg !14808
  %cmp10 = icmp eq i32 %conv9, 1, !dbg !14808
  br i1 %cmp10, label %land.lhs.true, label %if.then16, !dbg !14808

land.lhs.true:                                    ; preds = %lor.lhs.false
  %19 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14808
  %edid12 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %19, i32 0, i32 1, !dbg !14808
  %20 = load %struct.edid*, %struct.edid** %edid12, align 8, !dbg !14808
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %20, i32 0, i32 7, !dbg !14808
  %21 = load i8, i8* %revision, align 1, !dbg !14808
  %conv13 = zext i8 %21 to i32, !dbg !14808
  %cmp14 = icmp sgt i32 %conv13, 1, !dbg !14808
  br i1 %cmp14, label %if.end17, label %if.then16, !dbg !14810

if.then16:                                        ; preds = %land.lhs.true, %lor.lhs.false
  br label %sw.epilog, !dbg !14811

if.end17:                                         ; preds = %land.lhs.true, %if.end
  %22 = load %struct.detailed_data_monitor_range*, %struct.detailed_data_monitor_range** %range, align 8, !dbg !14812
  %flags = getelementptr inbounds %struct.detailed_data_monitor_range, %struct.detailed_data_monitor_range* %22, i32 0, i32 5, !dbg !14813
  %23 = load i8, i8* %flags, align 1, !dbg !14813
  %conv18 = zext i8 %23 to i32, !dbg !14812
  switch i32 %conv18, label %sw.default [
    i32 2, label %sw.bb
    i32 0, label %sw.bb
    i32 4, label %sw.bb24
    i32 1, label %sw.bb49
  ], !dbg !14814

sw.bb:                                            ; preds = %if.end17, %if.end17
  %24 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14815
  %connector19 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %24, i32 0, i32 0, !dbg !14817
  %25 = load %struct.drm_connector*, %struct.drm_connector** %connector19, align 8, !dbg !14817
  %26 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14818
  %edid20 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %26, i32 0, i32 1, !dbg !14819
  %27 = load %struct.edid*, %struct.edid** %edid20, align 8, !dbg !14819
  %28 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14820
  %call21 = call i32 @drm_gtf_modes_for_range(%struct.drm_connector* %25, %struct.edid* %27, %struct.detailed_timing* %28) #8, !dbg !14821
  %29 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14822
  %modes22 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %29, i32 0, i32 4, !dbg !14823
  %30 = load i32, i32* %modes22, align 8, !dbg !14824
  %add23 = add i32 %30, %call21, !dbg !14824
  store i32 %add23, i32* %modes22, align 8, !dbg !14824
  br label %sw.epilog, !dbg !14825

sw.bb24:                                          ; preds = %if.end17
  %31 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14826
  %edid25 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %31, i32 0, i32 1, !dbg !14826
  %32 = load %struct.edid*, %struct.edid** %edid25, align 8, !dbg !14826
  %version26 = getelementptr inbounds %struct.edid, %struct.edid* %32, i32 0, i32 6, !dbg !14826
  %33 = load i8, i8* %version26, align 1, !dbg !14826
  %conv27 = zext i8 %33 to i32, !dbg !14826
  %cmp28 = icmp sgt i32 %conv27, 1, !dbg !14826
  br i1 %cmp28, label %if.end43, label %lor.lhs.false30, !dbg !14826

lor.lhs.false30:                                  ; preds = %sw.bb24
  %34 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14826
  %edid31 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %34, i32 0, i32 1, !dbg !14826
  %35 = load %struct.edid*, %struct.edid** %edid31, align 8, !dbg !14826
  %version32 = getelementptr inbounds %struct.edid, %struct.edid* %35, i32 0, i32 6, !dbg !14826
  %36 = load i8, i8* %version32, align 1, !dbg !14826
  %conv33 = zext i8 %36 to i32, !dbg !14826
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !14826
  br i1 %cmp34, label %land.lhs.true36, label %if.then42, !dbg !14826

land.lhs.true36:                                  ; preds = %lor.lhs.false30
  %37 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14826
  %edid37 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %37, i32 0, i32 1, !dbg !14826
  %38 = load %struct.edid*, %struct.edid** %edid37, align 8, !dbg !14826
  %revision38 = getelementptr inbounds %struct.edid, %struct.edid* %38, i32 0, i32 7, !dbg !14826
  %39 = load i8, i8* %revision38, align 1, !dbg !14826
  %conv39 = zext i8 %39 to i32, !dbg !14826
  %cmp40 = icmp sgt i32 %conv39, 3, !dbg !14826
  br i1 %cmp40, label %if.end43, label %if.then42, !dbg !14828

if.then42:                                        ; preds = %land.lhs.true36, %lor.lhs.false30
  br label %sw.epilog, !dbg !14829

if.end43:                                         ; preds = %land.lhs.true36, %sw.bb24
  %40 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14830
  %connector44 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %40, i32 0, i32 0, !dbg !14831
  %41 = load %struct.drm_connector*, %struct.drm_connector** %connector44, align 8, !dbg !14831
  %42 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14832
  %edid45 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %42, i32 0, i32 1, !dbg !14833
  %43 = load %struct.edid*, %struct.edid** %edid45, align 8, !dbg !14833
  %44 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14834
  %call46 = call i32 @drm_cvt_modes_for_range(%struct.drm_connector* %41, %struct.edid* %43, %struct.detailed_timing* %44) #8, !dbg !14835
  %45 = load %struct.detailed_mode_closure*, %struct.detailed_mode_closure** %closure, align 8, !dbg !14836
  %modes47 = getelementptr inbounds %struct.detailed_mode_closure, %struct.detailed_mode_closure* %45, i32 0, i32 4, !dbg !14837
  %46 = load i32, i32* %modes47, align 8, !dbg !14838
  %add48 = add i32 %46, %call46, !dbg !14838
  store i32 %add48, i32* %modes47, align 8, !dbg !14838
  br label %sw.epilog, !dbg !14839

sw.bb49:                                          ; preds = %if.end17
  br label %sw.default, !dbg !14839

sw.default:                                       ; preds = %if.end17, %sw.bb49
  br label %sw.epilog, !dbg !14840

sw.epilog:                                        ; preds = %if.then, %if.then16, %sw.default, %if.end43, %if.then42, %sw.bb
  ret void, !dbg !14841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dmt_modes_for_range(%struct.drm_connector* %connector, %struct.edid* %edid, %struct.detailed_timing* %timing) #0 !dbg !14842 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %i = alloca i32, align 4
  %modes = alloca i32, align 4
  %newmode = alloca %struct.drm_display_mode*, align 8
  %dev = alloca %struct.drm_device*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14845, metadata !DIExpression()), !dbg !14846
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !14847, metadata !DIExpression()), !dbg !14848
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !14849, metadata !DIExpression()), !dbg !14850
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14851, metadata !DIExpression()), !dbg !14852
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !14853, metadata !DIExpression()), !dbg !14854
  store i32 0, i32* %modes, align 4, !dbg !14854
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !14855, metadata !DIExpression()), !dbg !14856
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !14857, metadata !DIExpression()), !dbg !14858
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14859
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !14860
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !14860
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !14858
  store i32 0, i32* %i, align 4, !dbg !14861
  br label %for.cond, !dbg !14863

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !14864
  %conv = sext i32 %2 to i64, !dbg !14864
  %cmp = icmp ult i64 %conv, 88, !dbg !14866
  br i1 %cmp, label %for.body, label %for.end, !dbg !14867

for.body:                                         ; preds = %for.cond
  %3 = load i32, i32* %i, align 4, !dbg !14868
  %idx.ext = sext i32 %3 to i64, !dbg !14871
  %add.ptr = getelementptr %struct.drm_display_mode, %struct.drm_display_mode* getelementptr inbounds ([88 x %struct.drm_display_mode], [88 x %struct.drm_display_mode]* @drm_dmt_modes, i64 0, i64 0), i64 %idx.ext, !dbg !14871
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !14872
  %5 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14873
  %call = call zeroext i1 @mode_in_range(%struct.drm_display_mode* %add.ptr, %struct.edid* %4, %struct.detailed_timing* %5) #8, !dbg !14874
  br i1 %call, label %land.lhs.true, label %if.end10, !dbg !14875

land.lhs.true:                                    ; preds = %for.body
  %6 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14876
  %7 = load i32, i32* %i, align 4, !dbg !14877
  %idx.ext4 = sext i32 %7 to i64, !dbg !14878
  %add.ptr5 = getelementptr %struct.drm_display_mode, %struct.drm_display_mode* getelementptr inbounds ([88 x %struct.drm_display_mode], [88 x %struct.drm_display_mode]* @drm_dmt_modes, i64 0, i64 0), i64 %idx.ext4, !dbg !14878
  %call6 = call zeroext i1 @valid_inferred_mode(%struct.drm_connector* %6, %struct.drm_display_mode* %add.ptr5) #8, !dbg !14879
  br i1 %call6, label %if.then, label %if.end10, !dbg !14880

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !14881
  %9 = load i32, i32* %i, align 4, !dbg !14883
  %idxprom = sext i32 %9 to i64, !dbg !14884
  %arrayidx = getelementptr [88 x %struct.drm_display_mode], [88 x %struct.drm_display_mode]* @drm_dmt_modes, i64 0, i64 %idxprom, !dbg !14884
  %call8 = call %struct.drm_display_mode* @drm_mode_duplicate(%struct.drm_device* %8, %struct.drm_display_mode* %arrayidx) #8, !dbg !14885
  store %struct.drm_display_mode* %call8, %struct.drm_display_mode** %newmode, align 8, !dbg !14886
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14887
  %tobool = icmp ne %struct.drm_display_mode* %10, null, !dbg !14887
  br i1 %tobool, label %if.then9, label %if.end, !dbg !14889

if.then9:                                         ; preds = %if.then
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14890
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14892
  call void @drm_mode_probed_add(%struct.drm_connector* %11, %struct.drm_display_mode* %12) #8, !dbg !14893
  %13 = load i32, i32* %modes, align 4, !dbg !14894
  %inc = add i32 %13, 1, !dbg !14894
  store i32 %inc, i32* %modes, align 4, !dbg !14894
  br label %if.end, !dbg !14895

if.end:                                           ; preds = %if.then9, %if.then
  br label %if.end10, !dbg !14896

if.end10:                                         ; preds = %if.end, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14897

for.inc:                                          ; preds = %if.end10
  %14 = load i32, i32* %i, align 4, !dbg !14898
  %inc11 = add i32 %14, 1, !dbg !14898
  store i32 %inc11, i32* %i, align 4, !dbg !14898
  br label %for.cond, !dbg !14899, !llvm.loop !14900

for.end:                                          ; preds = %for.cond
  %15 = load i32, i32* %modes, align 4, !dbg !14902
  ret i32 %15, !dbg !14903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_gtf_modes_for_range(%struct.drm_connector* %connector, %struct.edid* %edid, %struct.detailed_timing* %timing) #0 !dbg !14904 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %i = alloca i32, align 4
  %modes = alloca i32, align 4
  %newmode = alloca %struct.drm_display_mode*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %m = alloca %struct.minimode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14905, metadata !DIExpression()), !dbg !14906
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !14907, metadata !DIExpression()), !dbg !14908
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !14909, metadata !DIExpression()), !dbg !14910
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14911, metadata !DIExpression()), !dbg !14912
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !14913, metadata !DIExpression()), !dbg !14914
  store i32 0, i32* %modes, align 4, !dbg !14914
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !14915, metadata !DIExpression()), !dbg !14916
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !14917, metadata !DIExpression()), !dbg !14918
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14919
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !14920
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !14920
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !14918
  store i32 0, i32* %i, align 4, !dbg !14921
  br label %for.cond, !dbg !14923

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !14924
  %conv = sext i32 %2 to i64, !dbg !14924
  %cmp = icmp ult i64 %conv, 7, !dbg !14926
  br i1 %cmp, label %for.body, label %for.end, !dbg !14927

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.minimode** %m, metadata !14928, metadata !DIExpression()), !dbg !14931
  %3 = load i32, i32* %i, align 4, !dbg !14932
  %idxprom = sext i32 %3 to i64, !dbg !14933
  %arrayidx = getelementptr [7 x %struct.minimode], [7 x %struct.minimode]* @extra_modes, i64 0, i64 %idxprom, !dbg !14933
  store %struct.minimode* %arrayidx, %struct.minimode** %m, align 8, !dbg !14931
  %4 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !14934
  %5 = load %struct.minimode*, %struct.minimode** %m, align 8, !dbg !14935
  %w = getelementptr inbounds %struct.minimode, %struct.minimode* %5, i32 0, i32 0, !dbg !14936
  %6 = load i16, i16* %w, align 2, !dbg !14936
  %conv3 = sext i16 %6 to i32, !dbg !14935
  %7 = load %struct.minimode*, %struct.minimode** %m, align 8, !dbg !14937
  %h = getelementptr inbounds %struct.minimode, %struct.minimode* %7, i32 0, i32 1, !dbg !14938
  %8 = load i16, i16* %h, align 2, !dbg !14938
  %conv4 = sext i16 %8 to i32, !dbg !14937
  %9 = load %struct.minimode*, %struct.minimode** %m, align 8, !dbg !14939
  %r = getelementptr inbounds %struct.minimode, %struct.minimode* %9, i32 0, i32 2, !dbg !14940
  %10 = load i16, i16* %r, align 2, !dbg !14940
  %conv5 = sext i16 %10 to i32, !dbg !14939
  %call = call %struct.drm_display_mode* @drm_gtf_mode(%struct.drm_device* %4, i32 %conv3, i32 %conv4, i32 %conv5, i1 zeroext false, i32 0) #8, !dbg !14941
  store %struct.drm_display_mode* %call, %struct.drm_display_mode** %newmode, align 8, !dbg !14942
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14943
  %tobool = icmp ne %struct.drm_display_mode* %11, null, !dbg !14943
  br i1 %tobool, label %if.end, label %if.then, !dbg !14945

if.then:                                          ; preds = %for.body
  %12 = load i32, i32* %modes, align 4, !dbg !14946
  store i32 %12, i32* %retval, align 4, !dbg !14947
  br label %return, !dbg !14947

if.end:                                           ; preds = %for.body
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14948
  call void @drm_mode_fixup_1366x768(%struct.drm_display_mode* %13) #8, !dbg !14949
  %14 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14950
  %15 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !14952
  %16 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !14953
  %call6 = call zeroext i1 @mode_in_range(%struct.drm_display_mode* %14, %struct.edid* %15, %struct.detailed_timing* %16) #8, !dbg !14954
  br i1 %call6, label %lor.lhs.false, label %if.then8, !dbg !14955

lor.lhs.false:                                    ; preds = %if.end
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14956
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14957
  %call7 = call zeroext i1 @valid_inferred_mode(%struct.drm_connector* %17, %struct.drm_display_mode* %18) #8, !dbg !14958
  br i1 %call7, label %if.end9, label %if.then8, !dbg !14959

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  %19 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !14960
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14962
  call void @drm_mode_destroy(%struct.drm_device* %19, %struct.drm_display_mode* %20) #8, !dbg !14963
  br label %for.inc, !dbg !14964

if.end9:                                          ; preds = %lor.lhs.false
  %21 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14965
  %22 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !14966
  call void @drm_mode_probed_add(%struct.drm_connector* %21, %struct.drm_display_mode* %22) #8, !dbg !14967
  %23 = load i32, i32* %modes, align 4, !dbg !14968
  %inc = add i32 %23, 1, !dbg !14968
  store i32 %inc, i32* %modes, align 4, !dbg !14968
  br label %for.inc, !dbg !14969

for.inc:                                          ; preds = %if.end9, %if.then8
  %24 = load i32, i32* %i, align 4, !dbg !14970
  %inc10 = add i32 %24, 1, !dbg !14970
  store i32 %inc10, i32* %i, align 4, !dbg !14970
  br label %for.cond, !dbg !14971, !llvm.loop !14972

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* %modes, align 4, !dbg !14974
  store i32 %25, i32* %retval, align 4, !dbg !14975
  br label %return, !dbg !14975

return:                                           ; preds = %for.end, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !14976
  ret i32 %26, !dbg !14976
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_cvt_modes_for_range(%struct.drm_connector* %connector, %struct.edid* %edid, %struct.detailed_timing* %timing) #0 !dbg !14977 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %i = alloca i32, align 4
  %modes = alloca i32, align 4
  %newmode = alloca %struct.drm_display_mode*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %rb = alloca i8, align 1
  %m = alloca %struct.minimode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !14978, metadata !DIExpression()), !dbg !14979
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !14980, metadata !DIExpression()), !dbg !14981
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !14982, metadata !DIExpression()), !dbg !14983
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14984, metadata !DIExpression()), !dbg !14985
  call void @llvm.dbg.declare(metadata i32* %modes, metadata !14986, metadata !DIExpression()), !dbg !14987
  store i32 0, i32* %modes, align 4, !dbg !14987
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %newmode, metadata !14988, metadata !DIExpression()), !dbg !14989
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !14990, metadata !DIExpression()), !dbg !14991
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !14992
  %dev1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 0, !dbg !14993
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !14993
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !14991
  call void @llvm.dbg.declare(metadata i8* %rb, metadata !14994, metadata !DIExpression()), !dbg !14995
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !14996
  %call = call zeroext i1 @drm_monitor_supports_rb(%struct.edid* %2) #8, !dbg !14997
  %frombool = zext i1 %call to i8, !dbg !14995
  store i8 %frombool, i8* %rb, align 1, !dbg !14995
  store i32 0, i32* %i, align 4, !dbg !14998
  br label %for.cond, !dbg !15000

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !15001
  %conv = sext i32 %3 to i64, !dbg !15001
  %cmp = icmp ult i64 %conv, 7, !dbg !15003
  br i1 %cmp, label %for.body, label %for.end, !dbg !15004

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.minimode** %m, metadata !15005, metadata !DIExpression()), !dbg !15007
  %4 = load i32, i32* %i, align 4, !dbg !15008
  %idxprom = sext i32 %4 to i64, !dbg !15009
  %arrayidx = getelementptr [7 x %struct.minimode], [7 x %struct.minimode]* @extra_modes, i64 0, i64 %idxprom, !dbg !15009
  store %struct.minimode* %arrayidx, %struct.minimode** %m, align 8, !dbg !15007
  %5 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !15010
  %6 = load %struct.minimode*, %struct.minimode** %m, align 8, !dbg !15011
  %w = getelementptr inbounds %struct.minimode, %struct.minimode* %6, i32 0, i32 0, !dbg !15012
  %7 = load i16, i16* %w, align 2, !dbg !15012
  %conv3 = sext i16 %7 to i32, !dbg !15011
  %8 = load %struct.minimode*, %struct.minimode** %m, align 8, !dbg !15013
  %h = getelementptr inbounds %struct.minimode, %struct.minimode* %8, i32 0, i32 1, !dbg !15014
  %9 = load i16, i16* %h, align 2, !dbg !15014
  %conv4 = sext i16 %9 to i32, !dbg !15013
  %10 = load %struct.minimode*, %struct.minimode** %m, align 8, !dbg !15015
  %r = getelementptr inbounds %struct.minimode, %struct.minimode* %10, i32 0, i32 2, !dbg !15016
  %11 = load i16, i16* %r, align 2, !dbg !15016
  %conv5 = sext i16 %11 to i32, !dbg !15015
  %12 = load i8, i8* %rb, align 1, !dbg !15017
  %tobool = trunc i8 %12 to i1, !dbg !15017
  %call6 = call %struct.drm_display_mode* @drm_cvt_mode(%struct.drm_device* %5, i32 %conv3, i32 %conv4, i32 %conv5, i1 zeroext %tobool, i1 zeroext false, i1 zeroext false) #8, !dbg !15018
  store %struct.drm_display_mode* %call6, %struct.drm_display_mode** %newmode, align 8, !dbg !15019
  %13 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !15020
  %tobool7 = icmp ne %struct.drm_display_mode* %13, null, !dbg !15020
  br i1 %tobool7, label %if.end, label %if.then, !dbg !15022

if.then:                                          ; preds = %for.body
  %14 = load i32, i32* %modes, align 4, !dbg !15023
  store i32 %14, i32* %retval, align 4, !dbg !15024
  br label %return, !dbg !15024

if.end:                                           ; preds = %for.body
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !15025
  call void @drm_mode_fixup_1366x768(%struct.drm_display_mode* %15) #8, !dbg !15026
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !15027
  %17 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15029
  %18 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !15030
  %call8 = call zeroext i1 @mode_in_range(%struct.drm_display_mode* %16, %struct.edid* %17, %struct.detailed_timing* %18) #8, !dbg !15031
  br i1 %call8, label %lor.lhs.false, label %if.then10, !dbg !15032

lor.lhs.false:                                    ; preds = %if.end
  %19 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15033
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !15034
  %call9 = call zeroext i1 @valid_inferred_mode(%struct.drm_connector* %19, %struct.drm_display_mode* %20) #8, !dbg !15035
  br i1 %call9, label %if.end11, label %if.then10, !dbg !15036

if.then10:                                        ; preds = %lor.lhs.false, %if.end
  %21 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !15037
  %22 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !15039
  call void @drm_mode_destroy(%struct.drm_device* %21, %struct.drm_display_mode* %22) #8, !dbg !15040
  br label %for.inc, !dbg !15041

if.end11:                                         ; preds = %lor.lhs.false
  %23 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15042
  %24 = load %struct.drm_display_mode*, %struct.drm_display_mode** %newmode, align 8, !dbg !15043
  call void @drm_mode_probed_add(%struct.drm_connector* %23, %struct.drm_display_mode* %24) #8, !dbg !15044
  %25 = load i32, i32* %modes, align 4, !dbg !15045
  %inc = add i32 %25, 1, !dbg !15045
  store i32 %inc, i32* %modes, align 4, !dbg !15045
  br label %for.inc, !dbg !15046

for.inc:                                          ; preds = %if.end11, %if.then10
  %26 = load i32, i32* %i, align 4, !dbg !15047
  %inc12 = add i32 %26, 1, !dbg !15047
  store i32 %inc12, i32* %i, align 4, !dbg !15047
  br label %for.cond, !dbg !15048, !llvm.loop !15049

for.end:                                          ; preds = %for.cond
  %27 = load i32, i32* %modes, align 4, !dbg !15051
  store i32 %27, i32* %retval, align 4, !dbg !15052
  br label %return, !dbg !15052

return:                                           ; preds = %for.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !15053
  ret i32 %28, !dbg !15053
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mode_in_range(%struct.drm_display_mode* %mode, %struct.edid* %edid, %struct.detailed_timing* %timing) #0 !dbg !15054 {
entry:
  %retval = alloca i1, align 1
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %timing.addr = alloca %struct.detailed_timing*, align 8
  %max_clock = alloca i32, align 4
  %t = alloca i8*, align 8
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !15057, metadata !DIExpression()), !dbg !15058
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !15059, metadata !DIExpression()), !dbg !15060
  store %struct.detailed_timing* %timing, %struct.detailed_timing** %timing.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.detailed_timing** %timing.addr, metadata !15061, metadata !DIExpression()), !dbg !15062
  call void @llvm.dbg.declare(metadata i32* %max_clock, metadata !15063, metadata !DIExpression()), !dbg !15064
  call void @llvm.dbg.declare(metadata i8** %t, metadata !15065, metadata !DIExpression()), !dbg !15066
  %0 = load %struct.detailed_timing*, %struct.detailed_timing** %timing.addr, align 8, !dbg !15067
  %1 = bitcast %struct.detailed_timing* %0 to i8*, !dbg !15068
  store i8* %1, i8** %t, align 8, !dbg !15066
  %2 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15069
  %3 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15071
  %4 = load i8*, i8** %t, align 8, !dbg !15072
  %call = call zeroext i1 @mode_in_hsync_range(%struct.drm_display_mode* %2, %struct.edid* %3, i8* %4) #8, !dbg !15073
  br i1 %call, label %if.end, label %if.then, !dbg !15074

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !15075
  br label %return, !dbg !15075

if.end:                                           ; preds = %entry
  %5 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15076
  %6 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15078
  %7 = load i8*, i8** %t, align 8, !dbg !15079
  %call1 = call zeroext i1 @mode_in_vsync_range(%struct.drm_display_mode* %5, %struct.edid* %6, i8* %7) #8, !dbg !15080
  br i1 %call1, label %if.end3, label %if.then2, !dbg !15081

if.then2:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !15082
  br label %return, !dbg !15082

if.end3:                                          ; preds = %if.end
  %8 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15083
  %9 = load i8*, i8** %t, align 8, !dbg !15085
  %call4 = call i32 @range_pixel_clock(%struct.edid* %8, i8* %9) #8, !dbg !15086
  store i32 %call4, i32* %max_clock, align 4, !dbg !15087
  %tobool = icmp ne i32 %call4, 0, !dbg !15087
  br i1 %tobool, label %if.then5, label %if.end8, !dbg !15088

if.then5:                                         ; preds = %if.end3
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15089
  %clock = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 0, !dbg !15091
  %11 = load i32, i32* %clock, align 8, !dbg !15091
  %12 = load i32, i32* %max_clock, align 4, !dbg !15092
  %cmp = icmp ugt i32 %11, %12, !dbg !15093
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !15094

if.then6:                                         ; preds = %if.then5
  store i1 false, i1* %retval, align 1, !dbg !15095
  br label %return, !dbg !15095

if.end7:                                          ; preds = %if.then5
  br label %if.end8, !dbg !15092

if.end8:                                          ; preds = %if.end7, %if.end3
  %13 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15096
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %13, i32 0, i32 7, !dbg !15098
  %14 = load i8, i8* %revision, align 1, !dbg !15098
  %conv = zext i8 %14 to i32, !dbg !15096
  %cmp9 = icmp sge i32 %conv, 4, !dbg !15099
  br i1 %cmp9, label %land.lhs.true, label %if.end29, !dbg !15100

land.lhs.true:                                    ; preds = %if.end8
  %15 = load i8*, i8** %t, align 8, !dbg !15101
  %arrayidx = getelementptr i8, i8* %15, i64 10, !dbg !15101
  %16 = load i8, i8* %arrayidx, align 1, !dbg !15101
  %conv11 = zext i8 %16 to i32, !dbg !15101
  %cmp12 = icmp eq i32 %conv11, 4, !dbg !15102
  br i1 %cmp12, label %if.then14, label %if.end29, !dbg !15103

if.then14:                                        ; preds = %land.lhs.true
  %17 = load i8*, i8** %t, align 8, !dbg !15104
  %arrayidx15 = getelementptr i8, i8* %17, i64 13, !dbg !15104
  %18 = load i8, i8* %arrayidx15, align 1, !dbg !15104
  %conv16 = zext i8 %18 to i32, !dbg !15104
  %tobool17 = icmp ne i32 %conv16, 0, !dbg !15104
  br i1 %tobool17, label %land.lhs.true18, label %if.end28, !dbg !15106

land.lhs.true18:                                  ; preds = %if.then14
  %19 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15107
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %19, i32 0, i32 1, !dbg !15108
  %20 = load i16, i16* %hdisplay, align 4, !dbg !15108
  %conv19 = zext i16 %20 to i32, !dbg !15107
  %21 = load i8*, i8** %t, align 8, !dbg !15109
  %arrayidx20 = getelementptr i8, i8* %21, i64 13, !dbg !15109
  %22 = load i8, i8* %arrayidx20, align 1, !dbg !15109
  %conv21 = zext i8 %22 to i32, !dbg !15109
  %23 = load i8*, i8** %t, align 8, !dbg !15110
  %arrayidx22 = getelementptr i8, i8* %23, i64 12, !dbg !15110
  %24 = load i8, i8* %arrayidx22, align 1, !dbg !15110
  %conv23 = zext i8 %24 to i32, !dbg !15110
  %and = and i32 %conv23, 3, !dbg !15111
  %mul = mul i32 256, %and, !dbg !15112
  %add = add i32 %conv21, %mul, !dbg !15113
  %mul24 = mul i32 8, %add, !dbg !15114
  %cmp25 = icmp sgt i32 %conv19, %mul24, !dbg !15115
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !15116

if.then27:                                        ; preds = %land.lhs.true18
  store i1 false, i1* %retval, align 1, !dbg !15117
  br label %return, !dbg !15117

if.end28:                                         ; preds = %land.lhs.true18, %if.then14
  br label %if.end29, !dbg !15118

if.end29:                                         ; preds = %if.end28, %land.lhs.true, %if.end8
  %25 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15119
  %call30 = call zeroext i1 @mode_is_rb(%struct.drm_display_mode* %25) #8, !dbg !15121
  br i1 %call30, label %land.lhs.true32, label %if.end35, !dbg !15122

land.lhs.true32:                                  ; preds = %if.end29
  %26 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15123
  %call33 = call zeroext i1 @drm_monitor_supports_rb(%struct.edid* %26) #8, !dbg !15124
  br i1 %call33, label %if.end35, label %if.then34, !dbg !15125

if.then34:                                        ; preds = %land.lhs.true32
  store i1 false, i1* %retval, align 1, !dbg !15126
  br label %return, !dbg !15126

if.end35:                                         ; preds = %land.lhs.true32, %if.end29
  store i1 true, i1* %retval, align 1, !dbg !15127
  br label %return, !dbg !15127

return:                                           ; preds = %if.end35, %if.then34, %if.then27, %if.then6, %if.then2, %if.then
  %27 = load i1, i1* %retval, align 1, !dbg !15128
  ret i1 %27, !dbg !15128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @valid_inferred_mode(%struct.drm_connector* %connector, %struct.drm_display_mode* %mode) #0 !dbg !15129 {
entry:
  %retval = alloca i1, align 1
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %m = alloca %struct.drm_display_mode*, align 8
  %ok = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_display_mode*, align 8
  %__mptr30 = alloca i8*, align 8
  %tmp35 = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !15132, metadata !DIExpression()), !dbg !15133
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !15134, metadata !DIExpression()), !dbg !15135
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %m, metadata !15136, metadata !DIExpression()), !dbg !15137
  call void @llvm.dbg.declare(metadata i8* %ok, metadata !15138, metadata !DIExpression()), !dbg !15139
  store i8 0, i8* %ok, align 1, !dbg !15139
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15140, metadata !DIExpression()), !dbg !15143
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15143
  %probed_modes = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 17, !dbg !15143
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %probed_modes, i32 0, i32 0, !dbg !15143
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15143
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !15143
  store i8* %2, i8** %__mptr, align 8, !dbg !15143
  br label %do.body, !dbg !15143

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15144

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !15143
  %add.ptr = getelementptr i8, i8* %3, i64 -64, !dbg !15143
  %4 = bitcast i8* %add.ptr to %struct.drm_display_mode*, !dbg !15143
  store %struct.drm_display_mode* %4, %struct.drm_display_mode** %tmp, align 8, !dbg !15144
  %5 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp, align 8, !dbg !15143
  store %struct.drm_display_mode* %5, %struct.drm_display_mode** %m, align 8, !dbg !15146
  br label %for.cond, !dbg !15146

for.cond:                                         ; preds = %do.end34, %do.end
  %6 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15147
  %head = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %6, i32 0, i32 30, !dbg !15147
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15147
  %probed_modes1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %7, i32 0, i32 17, !dbg !15147
  %cmp = icmp eq %struct.list_head* %head, %probed_modes1, !dbg !15147
  %lnot = xor i1 %cmp, true, !dbg !15147
  br i1 %lnot, label %for.body, label %for.end, !dbg !15146

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15149
  %hdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %8, i32 0, i32 1, !dbg !15152
  %9 = load i16, i16* %hdisplay, align 4, !dbg !15152
  %conv = zext i16 %9 to i32, !dbg !15149
  %10 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15153
  %hdisplay2 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %10, i32 0, i32 1, !dbg !15154
  %11 = load i16, i16* %hdisplay2, align 4, !dbg !15154
  %conv3 = zext i16 %11 to i32, !dbg !15153
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !15155
  br i1 %cmp4, label %land.lhs.true, label %if.end, !dbg !15156

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15157
  %vdisplay = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %12, i32 0, i32 6, !dbg !15158
  %13 = load i16, i16* %vdisplay, align 2, !dbg !15158
  %conv6 = zext i16 %13 to i32, !dbg !15157
  %14 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15159
  %vdisplay7 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %14, i32 0, i32 6, !dbg !15160
  %15 = load i16, i16* %vdisplay7, align 2, !dbg !15160
  %conv8 = zext i16 %15 to i32, !dbg !15159
  %cmp9 = icmp eq i32 %conv6, %conv8, !dbg !15161
  br i1 %cmp9, label %land.lhs.true11, label %if.end, !dbg !15162

land.lhs.true11:                                  ; preds = %land.lhs.true
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15163
  %call = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %16) #8, !dbg !15164
  %17 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15165
  %call12 = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %17) #8, !dbg !15166
  %cmp13 = icmp eq i32 %call, %call12, !dbg !15167
  br i1 %cmp13, label %if.then, label %if.end, !dbg !15168

if.then:                                          ; preds = %land.lhs.true11
  store i1 false, i1* %retval, align 1, !dbg !15169
  br label %return, !dbg !15169

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true, %for.body
  %18 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15170
  %hdisplay15 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %18, i32 0, i32 1, !dbg !15172
  %19 = load i16, i16* %hdisplay15, align 4, !dbg !15172
  %conv16 = zext i16 %19 to i32, !dbg !15170
  %20 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15173
  %hdisplay17 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %20, i32 0, i32 1, !dbg !15174
  %21 = load i16, i16* %hdisplay17, align 4, !dbg !15174
  %conv18 = zext i16 %21 to i32, !dbg !15173
  %cmp19 = icmp sle i32 %conv16, %conv18, !dbg !15175
  br i1 %cmp19, label %land.lhs.true21, label %if.end29, !dbg !15176

land.lhs.true21:                                  ; preds = %if.end
  %22 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15177
  %vdisplay22 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %22, i32 0, i32 6, !dbg !15178
  %23 = load i16, i16* %vdisplay22, align 2, !dbg !15178
  %conv23 = zext i16 %23 to i32, !dbg !15177
  %24 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15179
  %vdisplay24 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %24, i32 0, i32 6, !dbg !15180
  %25 = load i16, i16* %vdisplay24, align 2, !dbg !15180
  %conv25 = zext i16 %25 to i32, !dbg !15179
  %cmp26 = icmp sle i32 %conv23, %conv25, !dbg !15181
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !15182

if.then28:                                        ; preds = %land.lhs.true21
  store i8 1, i8* %ok, align 1, !dbg !15183
  br label %if.end29, !dbg !15184

if.end29:                                         ; preds = %if.then28, %land.lhs.true21, %if.end
  br label %for.inc, !dbg !15185

for.inc:                                          ; preds = %if.end29
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !15186, metadata !DIExpression()), !dbg !15188
  %26 = load %struct.drm_display_mode*, %struct.drm_display_mode** %m, align 8, !dbg !15188
  %head31 = getelementptr inbounds %struct.drm_display_mode, %struct.drm_display_mode* %26, i32 0, i32 30, !dbg !15188
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %head31, i32 0, i32 0, !dbg !15188
  %27 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !15188
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !15188
  store i8* %28, i8** %__mptr30, align 8, !dbg !15188
  br label %do.body33, !dbg !15188

do.body33:                                        ; preds = %for.inc
  br label %do.end34, !dbg !15189

do.end34:                                         ; preds = %do.body33
  %29 = load i8*, i8** %__mptr30, align 8, !dbg !15188
  %add.ptr36 = getelementptr i8, i8* %29, i64 -64, !dbg !15188
  %30 = bitcast i8* %add.ptr36 to %struct.drm_display_mode*, !dbg !15188
  store %struct.drm_display_mode* %30, %struct.drm_display_mode** %tmp35, align 8, !dbg !15189
  %31 = load %struct.drm_display_mode*, %struct.drm_display_mode** %tmp35, align 8, !dbg !15188
  store %struct.drm_display_mode* %31, %struct.drm_display_mode** %m, align 8, !dbg !15147
  br label %for.cond, !dbg !15147, !llvm.loop !15191

for.end:                                          ; preds = %for.cond
  %32 = load i8, i8* %ok, align 1, !dbg !15193
  %tobool = trunc i8 %32 to i1, !dbg !15193
  store i1 %tobool, i1* %retval, align 1, !dbg !15194
  br label %return, !dbg !15194

return:                                           ; preds = %for.end, %if.then
  %33 = load i1, i1* %retval, align 1, !dbg !15195
  ret i1 %33, !dbg !15195
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mode_in_hsync_range(%struct.drm_display_mode* %mode, %struct.edid* %edid, i8* %t) #0 !dbg !15196 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %t.addr = alloca i8*, align 8
  %hsync = alloca i32, align 4
  %hmin = alloca i32, align 4
  %hmax = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !15199, metadata !DIExpression()), !dbg !15200
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !15201, metadata !DIExpression()), !dbg !15202
  store i8* %t, i8** %t.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %t.addr, metadata !15203, metadata !DIExpression()), !dbg !15204
  call void @llvm.dbg.declare(metadata i32* %hsync, metadata !15205, metadata !DIExpression()), !dbg !15206
  call void @llvm.dbg.declare(metadata i32* %hmin, metadata !15207, metadata !DIExpression()), !dbg !15208
  call void @llvm.dbg.declare(metadata i32* %hmax, metadata !15209, metadata !DIExpression()), !dbg !15210
  %0 = load i8*, i8** %t.addr, align 8, !dbg !15211
  %arrayidx = getelementptr i8, i8* %0, i64 7, !dbg !15211
  %1 = load i8, i8* %arrayidx, align 1, !dbg !15211
  %conv = zext i8 %1 to i32, !dbg !15211
  store i32 %conv, i32* %hmin, align 4, !dbg !15212
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15213
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 7, !dbg !15215
  %3 = load i8, i8* %revision, align 1, !dbg !15215
  %conv1 = zext i8 %3 to i32, !dbg !15213
  %cmp = icmp sge i32 %conv1, 4, !dbg !15216
  br i1 %cmp, label %if.then, label %if.end, !dbg !15217

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %t.addr, align 8, !dbg !15218
  %arrayidx3 = getelementptr i8, i8* %4, i64 4, !dbg !15218
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !15218
  %conv4 = zext i8 %5 to i32, !dbg !15218
  %and = and i32 %conv4, 4, !dbg !15219
  %tobool = icmp ne i32 %and, 0, !dbg !15220
  %6 = zext i1 %tobool to i64, !dbg !15220
  %cond = select i1 %tobool, i32 255, i32 0, !dbg !15220
  %7 = load i32, i32* %hmin, align 4, !dbg !15221
  %add = add i32 %7, %cond, !dbg !15221
  store i32 %add, i32* %hmin, align 4, !dbg !15221
  br label %if.end, !dbg !15222

if.end:                                           ; preds = %if.then, %entry
  %8 = load i8*, i8** %t.addr, align 8, !dbg !15223
  %arrayidx5 = getelementptr i8, i8* %8, i64 8, !dbg !15223
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !15223
  %conv6 = zext i8 %9 to i32, !dbg !15223
  store i32 %conv6, i32* %hmax, align 4, !dbg !15224
  %10 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15225
  %revision7 = getelementptr inbounds %struct.edid, %struct.edid* %10, i32 0, i32 7, !dbg !15227
  %11 = load i8, i8* %revision7, align 1, !dbg !15227
  %conv8 = zext i8 %11 to i32, !dbg !15225
  %cmp9 = icmp sge i32 %conv8, 4, !dbg !15228
  br i1 %cmp9, label %if.then11, label %if.end18, !dbg !15229

if.then11:                                        ; preds = %if.end
  %12 = load i8*, i8** %t.addr, align 8, !dbg !15230
  %arrayidx12 = getelementptr i8, i8* %12, i64 4, !dbg !15230
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !15230
  %conv13 = zext i8 %13 to i32, !dbg !15230
  %and14 = and i32 %conv13, 8, !dbg !15231
  %tobool15 = icmp ne i32 %and14, 0, !dbg !15232
  %14 = zext i1 %tobool15 to i64, !dbg !15232
  %cond16 = select i1 %tobool15, i32 255, i32 0, !dbg !15232
  %15 = load i32, i32* %hmax, align 4, !dbg !15233
  %add17 = add i32 %15, %cond16, !dbg !15233
  store i32 %add17, i32* %hmax, align 4, !dbg !15233
  br label %if.end18, !dbg !15234

if.end18:                                         ; preds = %if.then11, %if.end
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15235
  %call = call i32 @drm_mode_hsync(%struct.drm_display_mode* %16) #8, !dbg !15236
  store i32 %call, i32* %hsync, align 4, !dbg !15237
  %17 = load i32, i32* %hsync, align 4, !dbg !15238
  %18 = load i32, i32* %hmax, align 4, !dbg !15239
  %cmp19 = icmp sle i32 %17, %18, !dbg !15240
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !15241

land.rhs:                                         ; preds = %if.end18
  %19 = load i32, i32* %hsync, align 4, !dbg !15242
  %20 = load i32, i32* %hmin, align 4, !dbg !15243
  %cmp21 = icmp sge i32 %19, %20, !dbg !15244
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end18
  %21 = phi i1 [ false, %if.end18 ], [ %cmp21, %land.rhs ], !dbg !15245
  ret i1 %21, !dbg !15246
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mode_in_vsync_range(%struct.drm_display_mode* %mode, %struct.edid* %edid, i8* %t) #0 !dbg !15247 {
entry:
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %edid.addr = alloca %struct.edid*, align 8
  %t.addr = alloca i8*, align 8
  %vsync = alloca i32, align 4
  %vmin = alloca i32, align 4
  %vmax = alloca i32, align 4
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !15248, metadata !DIExpression()), !dbg !15249
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !15250, metadata !DIExpression()), !dbg !15251
  store i8* %t, i8** %t.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %t.addr, metadata !15252, metadata !DIExpression()), !dbg !15253
  call void @llvm.dbg.declare(metadata i32* %vsync, metadata !15254, metadata !DIExpression()), !dbg !15255
  call void @llvm.dbg.declare(metadata i32* %vmin, metadata !15256, metadata !DIExpression()), !dbg !15257
  call void @llvm.dbg.declare(metadata i32* %vmax, metadata !15258, metadata !DIExpression()), !dbg !15259
  %0 = load i8*, i8** %t.addr, align 8, !dbg !15260
  %arrayidx = getelementptr i8, i8* %0, i64 5, !dbg !15260
  %1 = load i8, i8* %arrayidx, align 1, !dbg !15260
  %conv = zext i8 %1 to i32, !dbg !15260
  store i32 %conv, i32* %vmin, align 4, !dbg !15261
  %2 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15262
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %2, i32 0, i32 7, !dbg !15264
  %3 = load i8, i8* %revision, align 1, !dbg !15264
  %conv1 = zext i8 %3 to i32, !dbg !15262
  %cmp = icmp sge i32 %conv1, 4, !dbg !15265
  br i1 %cmp, label %if.then, label %if.end, !dbg !15266

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %t.addr, align 8, !dbg !15267
  %arrayidx3 = getelementptr i8, i8* %4, i64 4, !dbg !15267
  %5 = load i8, i8* %arrayidx3, align 1, !dbg !15267
  %conv4 = zext i8 %5 to i32, !dbg !15267
  %and = and i32 %conv4, 1, !dbg !15268
  %tobool = icmp ne i32 %and, 0, !dbg !15269
  %6 = zext i1 %tobool to i64, !dbg !15269
  %cond = select i1 %tobool, i32 255, i32 0, !dbg !15269
  %7 = load i32, i32* %vmin, align 4, !dbg !15270
  %add = add i32 %7, %cond, !dbg !15270
  store i32 %add, i32* %vmin, align 4, !dbg !15270
  br label %if.end, !dbg !15271

if.end:                                           ; preds = %if.then, %entry
  %8 = load i8*, i8** %t.addr, align 8, !dbg !15272
  %arrayidx5 = getelementptr i8, i8* %8, i64 6, !dbg !15272
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !15272
  %conv6 = zext i8 %9 to i32, !dbg !15272
  store i32 %conv6, i32* %vmax, align 4, !dbg !15273
  %10 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15274
  %revision7 = getelementptr inbounds %struct.edid, %struct.edid* %10, i32 0, i32 7, !dbg !15276
  %11 = load i8, i8* %revision7, align 1, !dbg !15276
  %conv8 = zext i8 %11 to i32, !dbg !15274
  %cmp9 = icmp sge i32 %conv8, 4, !dbg !15277
  br i1 %cmp9, label %if.then11, label %if.end18, !dbg !15278

if.then11:                                        ; preds = %if.end
  %12 = load i8*, i8** %t.addr, align 8, !dbg !15279
  %arrayidx12 = getelementptr i8, i8* %12, i64 4, !dbg !15279
  %13 = load i8, i8* %arrayidx12, align 1, !dbg !15279
  %conv13 = zext i8 %13 to i32, !dbg !15279
  %and14 = and i32 %conv13, 2, !dbg !15280
  %tobool15 = icmp ne i32 %and14, 0, !dbg !15281
  %14 = zext i1 %tobool15 to i64, !dbg !15281
  %cond16 = select i1 %tobool15, i32 255, i32 0, !dbg !15281
  %15 = load i32, i32* %vmax, align 4, !dbg !15282
  %add17 = add i32 %15, %cond16, !dbg !15282
  store i32 %add17, i32* %vmax, align 4, !dbg !15282
  br label %if.end18, !dbg !15283

if.end18:                                         ; preds = %if.then11, %if.end
  %16 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !15284
  %call = call i32 @drm_mode_vrefresh(%struct.drm_display_mode* %16) #8, !dbg !15285
  store i32 %call, i32* %vsync, align 4, !dbg !15286
  %17 = load i32, i32* %vsync, align 4, !dbg !15287
  %18 = load i32, i32* %vmax, align 4, !dbg !15288
  %cmp19 = icmp sle i32 %17, %18, !dbg !15289
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !15290

land.rhs:                                         ; preds = %if.end18
  %19 = load i32, i32* %vsync, align 4, !dbg !15291
  %20 = load i32, i32* %vmin, align 4, !dbg !15292
  %cmp21 = icmp sge i32 %19, %20, !dbg !15293
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end18
  %21 = phi i1 [ false, %if.end18 ], [ %cmp21, %land.rhs ], !dbg !15294
  ret i1 %21, !dbg !15295
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @range_pixel_clock(%struct.edid* %edid, i8* %t) #0 !dbg !15296 {
entry:
  %retval = alloca i32, align 4
  %edid.addr = alloca %struct.edid*, align 8
  %t.addr = alloca i8*, align 8
  store %struct.edid* %edid, %struct.edid** %edid.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edid** %edid.addr, metadata !15299, metadata !DIExpression()), !dbg !15300
  store i8* %t, i8** %t.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %t.addr, metadata !15301, metadata !DIExpression()), !dbg !15302
  %0 = load i8*, i8** %t.addr, align 8, !dbg !15303
  %arrayidx = getelementptr i8, i8* %0, i64 9, !dbg !15303
  %1 = load i8, i8* %arrayidx, align 1, !dbg !15303
  %conv = zext i8 %1 to i32, !dbg !15303
  %cmp = icmp eq i32 %conv, 0, !dbg !15305
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15306

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8*, i8** %t.addr, align 8, !dbg !15307
  %arrayidx2 = getelementptr i8, i8* %2, i64 9, !dbg !15307
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !15307
  %conv3 = zext i8 %3 to i32, !dbg !15307
  %cmp4 = icmp eq i32 %conv3, 255, !dbg !15308
  br i1 %cmp4, label %if.then, label %if.end, !dbg !15309

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !15310
  br label %return, !dbg !15310

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.edid*, %struct.edid** %edid.addr, align 8, !dbg !15311
  %revision = getelementptr inbounds %struct.edid, %struct.edid* %4, i32 0, i32 7, !dbg !15313
  %5 = load i8, i8* %revision, align 1, !dbg !15313
  %conv6 = zext i8 %5 to i32, !dbg !15311
  %cmp7 = icmp sge i32 %conv6, 4, !dbg !15314
  br i1 %cmp7, label %land.lhs.true, label %if.end19, !dbg !15315

land.lhs.true:                                    ; preds = %if.end
  %6 = load i8*, i8** %t.addr, align 8, !dbg !15316
  %arrayidx9 = getelementptr i8, i8* %6, i64 10, !dbg !15316
  %7 = load i8, i8* %arrayidx9, align 1, !dbg !15316
  %conv10 = zext i8 %7 to i32, !dbg !15316
  %cmp11 = icmp eq i32 %conv10, 4, !dbg !15317
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !15318

if.then13:                                        ; preds = %land.lhs.true
  %8 = load i8*, i8** %t.addr, align 8, !dbg !15319
  %arrayidx14 = getelementptr i8, i8* %8, i64 9, !dbg !15319
  %9 = load i8, i8* %arrayidx14, align 1, !dbg !15319
  %conv15 = zext i8 %9 to i32, !dbg !15319
  %mul = mul i32 %conv15, 10000, !dbg !15320
  %10 = load i8*, i8** %t.addr, align 8, !dbg !15321
  %arrayidx16 = getelementptr i8, i8* %10, i64 12, !dbg !15321
  %11 = load i8, i8* %arrayidx16, align 1, !dbg !15321
  %conv17 = zext i8 %11 to i32, !dbg !15321
  %shr = ashr i32 %conv17, 2, !dbg !15322
  %mul18 = mul i32 %shr, 250, !dbg !15323
  %sub = sub i32 %mul, %mul18, !dbg !15324
  store i32 %sub, i32* %retval, align 4, !dbg !15325
  br label %return, !dbg !15325

if.end19:                                         ; preds = %land.lhs.true, %if.end
  %12 = load i8*, i8** %t.addr, align 8, !dbg !15326
  %arrayidx20 = getelementptr i8, i8* %12, i64 9, !dbg !15326
  %13 = load i8, i8* %arrayidx20, align 1, !dbg !15326
  %conv21 = zext i8 %13 to i32, !dbg !15326
  %mul22 = mul i32 %conv21, 10000, !dbg !15327
  %add = add i32 %mul22, 5001, !dbg !15328
  store i32 %add, i32* %retval, align 4, !dbg !15329
  br label %return, !dbg !15329

return:                                           ; preds = %if.end19, %if.then13, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !15330
  ret i32 %14, !dbg !15330
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @validate_displayid(i8* %displayid, i32 %length, i32 %idx) #0 !dbg !15331 {
entry:
  %retval = alloca i32, align 4
  %displayid.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %idx.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %dispid_length = alloca i32, align 4
  %csum = alloca i8, align 1
  %base = alloca %struct.displayid_hdr*, align 8
  store i8* %displayid, i8** %displayid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %displayid.addr, metadata !15334, metadata !DIExpression()), !dbg !15335
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !15336, metadata !DIExpression()), !dbg !15337
  store i32 %idx, i32* %idx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %idx.addr, metadata !15338, metadata !DIExpression()), !dbg !15339
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15340, metadata !DIExpression()), !dbg !15341
  call void @llvm.dbg.declare(metadata i32* %dispid_length, metadata !15342, metadata !DIExpression()), !dbg !15343
  call void @llvm.dbg.declare(metadata i8* %csum, metadata !15344, metadata !DIExpression()), !dbg !15345
  store i8 0, i8* %csum, align 1, !dbg !15345
  call void @llvm.dbg.declare(metadata %struct.displayid_hdr** %base, metadata !15346, metadata !DIExpression()), !dbg !15347
  %0 = load i8*, i8** %displayid.addr, align 8, !dbg !15348
  %1 = load i32, i32* %idx.addr, align 4, !dbg !15349
  %idxprom = sext i32 %1 to i64, !dbg !15348
  %arrayidx = getelementptr i8, i8* %0, i64 %idxprom, !dbg !15348
  %2 = bitcast i8* %arrayidx to %struct.displayid_hdr*, !dbg !15350
  store %struct.displayid_hdr* %2, %struct.displayid_hdr** %base, align 8, !dbg !15351
  %3 = load %struct.displayid_hdr*, %struct.displayid_hdr** %base, align 8, !dbg !15352
  %rev = getelementptr inbounds %struct.displayid_hdr, %struct.displayid_hdr* %3, i32 0, i32 0, !dbg !15352
  %4 = load i8, i8* %rev, align 1, !dbg !15352
  %conv = zext i8 %4 to i32, !dbg !15352
  %5 = load %struct.displayid_hdr*, %struct.displayid_hdr** %base, align 8, !dbg !15352
  %bytes = getelementptr inbounds %struct.displayid_hdr, %struct.displayid_hdr* %5, i32 0, i32 1, !dbg !15352
  %6 = load i8, i8* %bytes, align 1, !dbg !15352
  %conv1 = zext i8 %6 to i32, !dbg !15352
  %7 = load %struct.displayid_hdr*, %struct.displayid_hdr** %base, align 8, !dbg !15352
  %prod_id = getelementptr inbounds %struct.displayid_hdr, %struct.displayid_hdr* %7, i32 0, i32 2, !dbg !15352
  %8 = load i8, i8* %prod_id, align 1, !dbg !15352
  %conv2 = zext i8 %8 to i32, !dbg !15352
  %9 = load %struct.displayid_hdr*, %struct.displayid_hdr** %base, align 8, !dbg !15352
  %ext_count = getelementptr inbounds %struct.displayid_hdr, %struct.displayid_hdr* %9, i32 0, i32 3, !dbg !15352
  %10 = load i8, i8* %ext_count, align 1, !dbg !15352
  %conv3 = zext i8 %10 to i32, !dbg !15352
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.51, i64 0, i64 0), i32 %conv, i32 %conv1, i32 %conv2, i32 %conv3) #8, !dbg !15352
  %11 = load %struct.displayid_hdr*, %struct.displayid_hdr** %base, align 8, !dbg !15353
  %bytes4 = getelementptr inbounds %struct.displayid_hdr, %struct.displayid_hdr* %11, i32 0, i32 1, !dbg !15354
  %12 = load i8, i8* %bytes4, align 1, !dbg !15354
  %conv5 = zext i8 %12 to i64, !dbg !15353
  %add = add i64 4, %conv5, !dbg !15355
  %add6 = add i64 %add, 1, !dbg !15356
  %conv7 = trunc i64 %add6 to i32, !dbg !15357
  store i32 %conv7, i32* %dispid_length, align 4, !dbg !15358
  %13 = load i32, i32* %dispid_length, align 4, !dbg !15359
  %14 = load i32, i32* %length.addr, align 4, !dbg !15361
  %15 = load i32, i32* %idx.addr, align 4, !dbg !15362
  %sub = sub i32 %14, %15, !dbg !15363
  %cmp = icmp sgt i32 %13, %sub, !dbg !15364
  br i1 %cmp, label %if.then, label %if.end, !dbg !15365

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !15366
  br label %return, !dbg !15366

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15367
  br label %for.cond, !dbg !15369

for.cond:                                         ; preds = %for.inc, %if.end
  %16 = load i32, i32* %i, align 4, !dbg !15370
  %17 = load i32, i32* %dispid_length, align 4, !dbg !15372
  %cmp9 = icmp slt i32 %16, %17, !dbg !15373
  br i1 %cmp9, label %for.body, label %for.end, !dbg !15374

for.body:                                         ; preds = %for.cond
  %18 = load i8*, i8** %displayid.addr, align 8, !dbg !15375
  %19 = load i32, i32* %idx.addr, align 4, !dbg !15376
  %20 = load i32, i32* %i, align 4, !dbg !15377
  %add11 = add i32 %19, %20, !dbg !15378
  %idxprom12 = sext i32 %add11 to i64, !dbg !15375
  %arrayidx13 = getelementptr i8, i8* %18, i64 %idxprom12, !dbg !15375
  %21 = load i8, i8* %arrayidx13, align 1, !dbg !15375
  %conv14 = zext i8 %21 to i32, !dbg !15375
  %22 = load i8, i8* %csum, align 1, !dbg !15379
  %conv15 = zext i8 %22 to i32, !dbg !15379
  %add16 = add i32 %conv15, %conv14, !dbg !15379
  %conv17 = trunc i32 %add16 to i8, !dbg !15379
  store i8 %conv17, i8* %csum, align 1, !dbg !15379
  br label %for.inc, !dbg !15380

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %i, align 4, !dbg !15381
  %inc = add i32 %23, 1, !dbg !15381
  store i32 %inc, i32* %i, align 4, !dbg !15381
  br label %for.cond, !dbg !15382, !llvm.loop !15383

for.end:                                          ; preds = %for.cond
  %24 = load i8, i8* %csum, align 1, !dbg !15385
  %tobool = icmp ne i8 %24, 0, !dbg !15385
  br i1 %tobool, label %if.then18, label %if.end20, !dbg !15387

if.then18:                                        ; preds = %for.end
  %25 = load i8, i8* %csum, align 1, !dbg !15388
  %conv19 = zext i8 %25 to i32, !dbg !15388
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.52, i64 0, i64 0), i32 %conv19) #10, !dbg !15388
  store i32 -22, i32* %retval, align 4, !dbg !15390
  br label %return, !dbg !15390

if.end20:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !15391
  br label %return, !dbg !15391

return:                                           ; preds = %if.end20, %if.then18, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !15392
  ret i32 %26, !dbg !15392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_parse_tiled_block(%struct.drm_connector* %connector, %struct.displayid_block* %block) #0 !dbg !15393 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %block.addr = alloca %struct.displayid_block*, align 8
  %tile = alloca %struct.displayid_tiled_block*, align 8
  %w = alloca i16, align 2
  %h = alloca i16, align 2
  %tile_v_loc = alloca i8, align 1
  %tile_h_loc = alloca i8, align 1
  %num_v_tile = alloca i8, align 1
  %num_h_tile = alloca i8, align 1
  %tg = alloca %struct.drm_tile_group*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !15396, metadata !DIExpression()), !dbg !15397
  store %struct.displayid_block* %block, %struct.displayid_block** %block.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.displayid_block** %block.addr, metadata !15398, metadata !DIExpression()), !dbg !15399
  call void @llvm.dbg.declare(metadata %struct.displayid_tiled_block** %tile, metadata !15400, metadata !DIExpression()), !dbg !15403
  %0 = load %struct.displayid_block*, %struct.displayid_block** %block.addr, align 8, !dbg !15404
  %1 = bitcast %struct.displayid_block* %0 to %struct.displayid_tiled_block*, !dbg !15405
  store %struct.displayid_tiled_block* %1, %struct.displayid_tiled_block** %tile, align 8, !dbg !15403
  call void @llvm.dbg.declare(metadata i16* %w, metadata !15406, metadata !DIExpression()), !dbg !15407
  call void @llvm.dbg.declare(metadata i16* %h, metadata !15408, metadata !DIExpression()), !dbg !15409
  call void @llvm.dbg.declare(metadata i8* %tile_v_loc, metadata !15410, metadata !DIExpression()), !dbg !15411
  call void @llvm.dbg.declare(metadata i8* %tile_h_loc, metadata !15412, metadata !DIExpression()), !dbg !15413
  call void @llvm.dbg.declare(metadata i8* %num_v_tile, metadata !15414, metadata !DIExpression()), !dbg !15415
  call void @llvm.dbg.declare(metadata i8* %num_h_tile, metadata !15416, metadata !DIExpression()), !dbg !15417
  call void @llvm.dbg.declare(metadata %struct.drm_tile_group** %tg, metadata !15418, metadata !DIExpression()), !dbg !15419
  %2 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15420
  %tile_size = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %2, i32 0, i32 3, !dbg !15421
  %arrayidx = getelementptr [4 x i8], [4 x i8]* %tile_size, i64 0, i64 0, !dbg !15420
  %3 = load i8, i8* %arrayidx, align 1, !dbg !15420
  %conv = zext i8 %3 to i32, !dbg !15420
  %4 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15422
  %tile_size1 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %4, i32 0, i32 3, !dbg !15423
  %arrayidx2 = getelementptr [4 x i8], [4 x i8]* %tile_size1, i64 0, i64 1, !dbg !15422
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !15422
  %conv3 = zext i8 %5 to i32, !dbg !15422
  %shl = shl i32 %conv3, 8, !dbg !15424
  %or = or i32 %conv, %shl, !dbg !15425
  %conv4 = trunc i32 %or to i16, !dbg !15420
  store i16 %conv4, i16* %w, align 2, !dbg !15426
  %6 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15427
  %tile_size5 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %6, i32 0, i32 3, !dbg !15428
  %arrayidx6 = getelementptr [4 x i8], [4 x i8]* %tile_size5, i64 0, i64 2, !dbg !15427
  %7 = load i8, i8* %arrayidx6, align 1, !dbg !15427
  %conv7 = zext i8 %7 to i32, !dbg !15427
  %8 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15429
  %tile_size8 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %8, i32 0, i32 3, !dbg !15430
  %arrayidx9 = getelementptr [4 x i8], [4 x i8]* %tile_size8, i64 0, i64 3, !dbg !15429
  %9 = load i8, i8* %arrayidx9, align 1, !dbg !15429
  %conv10 = zext i8 %9 to i32, !dbg !15429
  %shl11 = shl i32 %conv10, 8, !dbg !15431
  %or12 = or i32 %conv7, %shl11, !dbg !15432
  %conv13 = trunc i32 %or12 to i16, !dbg !15427
  store i16 %conv13, i16* %h, align 2, !dbg !15433
  %10 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15434
  %topo = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %10, i32 0, i32 2, !dbg !15435
  %arrayidx14 = getelementptr [3 x i8], [3 x i8]* %topo, i64 0, i64 0, !dbg !15434
  %11 = load i8, i8* %arrayidx14, align 1, !dbg !15434
  %conv15 = zext i8 %11 to i32, !dbg !15434
  %and = and i32 %conv15, 15, !dbg !15436
  %12 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15437
  %topo16 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %12, i32 0, i32 2, !dbg !15438
  %arrayidx17 = getelementptr [3 x i8], [3 x i8]* %topo16, i64 0, i64 2, !dbg !15437
  %13 = load i8, i8* %arrayidx17, align 1, !dbg !15437
  %conv18 = zext i8 %13 to i32, !dbg !15437
  %and19 = and i32 %conv18, 48, !dbg !15439
  %or20 = or i32 %and, %and19, !dbg !15440
  %conv21 = trunc i32 %or20 to i8, !dbg !15441
  store i8 %conv21, i8* %num_v_tile, align 1, !dbg !15442
  %14 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15443
  %topo22 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %14, i32 0, i32 2, !dbg !15444
  %arrayidx23 = getelementptr [3 x i8], [3 x i8]* %topo22, i64 0, i64 0, !dbg !15443
  %15 = load i8, i8* %arrayidx23, align 1, !dbg !15443
  %conv24 = zext i8 %15 to i32, !dbg !15443
  %shr = ashr i32 %conv24, 4, !dbg !15445
  %16 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15446
  %topo25 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %16, i32 0, i32 2, !dbg !15447
  %arrayidx26 = getelementptr [3 x i8], [3 x i8]* %topo25, i64 0, i64 2, !dbg !15446
  %17 = load i8, i8* %arrayidx26, align 1, !dbg !15446
  %conv27 = zext i8 %17 to i32, !dbg !15446
  %shr28 = ashr i32 %conv27, 2, !dbg !15448
  %and29 = and i32 %shr28, 48, !dbg !15449
  %or30 = or i32 %shr, %and29, !dbg !15450
  %conv31 = trunc i32 %or30 to i8, !dbg !15451
  store i8 %conv31, i8* %num_h_tile, align 1, !dbg !15452
  %18 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15453
  %topo32 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %18, i32 0, i32 2, !dbg !15454
  %arrayidx33 = getelementptr [3 x i8], [3 x i8]* %topo32, i64 0, i64 1, !dbg !15453
  %19 = load i8, i8* %arrayidx33, align 1, !dbg !15453
  %conv34 = zext i8 %19 to i32, !dbg !15453
  %and35 = and i32 %conv34, 15, !dbg !15455
  %20 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15456
  %topo36 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %20, i32 0, i32 2, !dbg !15457
  %arrayidx37 = getelementptr [3 x i8], [3 x i8]* %topo36, i64 0, i64 2, !dbg !15456
  %21 = load i8, i8* %arrayidx37, align 1, !dbg !15456
  %conv38 = zext i8 %21 to i32, !dbg !15456
  %and39 = and i32 %conv38, 3, !dbg !15458
  %shl40 = shl i32 %and39, 4, !dbg !15459
  %or41 = or i32 %and35, %shl40, !dbg !15460
  %conv42 = trunc i32 %or41 to i8, !dbg !15461
  store i8 %conv42, i8* %tile_v_loc, align 1, !dbg !15462
  %22 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15463
  %topo43 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %22, i32 0, i32 2, !dbg !15464
  %arrayidx44 = getelementptr [3 x i8], [3 x i8]* %topo43, i64 0, i64 1, !dbg !15463
  %23 = load i8, i8* %arrayidx44, align 1, !dbg !15463
  %conv45 = zext i8 %23 to i32, !dbg !15463
  %shr46 = ashr i32 %conv45, 4, !dbg !15465
  %24 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15466
  %topo47 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %24, i32 0, i32 2, !dbg !15467
  %arrayidx48 = getelementptr [3 x i8], [3 x i8]* %topo47, i64 0, i64 2, !dbg !15466
  %25 = load i8, i8* %arrayidx48, align 1, !dbg !15466
  %conv49 = zext i8 %25 to i32, !dbg !15466
  %shr50 = ashr i32 %conv49, 2, !dbg !15468
  %and51 = and i32 %shr50, 3, !dbg !15469
  %shl52 = shl i32 %and51, 4, !dbg !15470
  %or53 = or i32 %shr46, %shl52, !dbg !15471
  %conv54 = trunc i32 %or53 to i8, !dbg !15472
  store i8 %conv54, i8* %tile_h_loc, align 1, !dbg !15473
  %26 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15474
  %has_tile = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %26, i32 0, i32 48, !dbg !15475
  store i8 1, i8* %has_tile, align 8, !dbg !15476
  %27 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15477
  %tile_cap = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %27, i32 0, i32 1, !dbg !15479
  %28 = load i8, i8* %tile_cap, align 1, !dbg !15479
  %conv55 = zext i8 %28 to i32, !dbg !15477
  %and56 = and i32 %conv55, 128, !dbg !15480
  %tobool = icmp ne i32 %and56, 0, !dbg !15480
  br i1 %tobool, label %if.then, label %if.end, !dbg !15481

if.then:                                          ; preds = %entry
  %29 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15482
  %tile_is_single_monitor = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %29, i32 0, i32 50, !dbg !15483
  store i8 1, i8* %tile_is_single_monitor, align 8, !dbg !15484
  br label %if.end, !dbg !15482

if.end:                                           ; preds = %if.then, %entry
  %30 = load i8, i8* %num_h_tile, align 1, !dbg !15485
  %conv57 = zext i8 %30 to i32, !dbg !15485
  %add = add i32 %conv57, 1, !dbg !15486
  %conv58 = trunc i32 %add to i8, !dbg !15485
  %31 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15487
  %num_h_tile59 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %31, i32 0, i32 51, !dbg !15488
  store i8 %conv58, i8* %num_h_tile59, align 1, !dbg !15489
  %32 = load i8, i8* %num_v_tile, align 1, !dbg !15490
  %conv60 = zext i8 %32 to i32, !dbg !15490
  %add61 = add i32 %conv60, 1, !dbg !15491
  %conv62 = trunc i32 %add61 to i8, !dbg !15490
  %33 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15492
  %num_v_tile63 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %33, i32 0, i32 52, !dbg !15493
  store i8 %conv62, i8* %num_v_tile63, align 2, !dbg !15494
  %34 = load i8, i8* %tile_h_loc, align 1, !dbg !15495
  %35 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15496
  %tile_h_loc64 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %35, i32 0, i32 53, !dbg !15497
  store i8 %34, i8* %tile_h_loc64, align 1, !dbg !15498
  %36 = load i8, i8* %tile_v_loc, align 1, !dbg !15499
  %37 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15500
  %tile_v_loc65 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %37, i32 0, i32 54, !dbg !15501
  store i8 %36, i8* %tile_v_loc65, align 4, !dbg !15502
  %38 = load i16, i16* %w, align 2, !dbg !15503
  %conv66 = zext i16 %38 to i32, !dbg !15503
  %add67 = add i32 %conv66, 1, !dbg !15504
  %conv68 = trunc i32 %add67 to i16, !dbg !15503
  %39 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15505
  %tile_h_size = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %39, i32 0, i32 55, !dbg !15506
  store i16 %conv68, i16* %tile_h_size, align 2, !dbg !15507
  %40 = load i16, i16* %h, align 2, !dbg !15508
  %conv69 = zext i16 %40 to i32, !dbg !15508
  %add70 = add i32 %conv69, 1, !dbg !15509
  %conv71 = trunc i32 %add70 to i16, !dbg !15508
  %41 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15510
  %tile_v_size = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %41, i32 0, i32 56, !dbg !15511
  store i16 %conv71, i16* %tile_v_size, align 8, !dbg !15512
  %42 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15513
  %tile_cap72 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %42, i32 0, i32 1, !dbg !15513
  %43 = load i8, i8* %tile_cap72, align 1, !dbg !15513
  %conv73 = zext i8 %43 to i32, !dbg !15513
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i64 0, i64 0), i32 %conv73) #8, !dbg !15513
  %44 = load i16, i16* %w, align 2, !dbg !15514
  %conv74 = zext i16 %44 to i32, !dbg !15514
  %add75 = add i32 %conv74, 1, !dbg !15514
  %45 = load i16, i16* %h, align 2, !dbg !15514
  %conv76 = zext i16 %45 to i32, !dbg !15514
  %add77 = add i32 %conv76, 1, !dbg !15514
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.56, i64 0, i64 0), i32 %add75, i32 %add77) #8, !dbg !15514
  %46 = load i8, i8* %num_h_tile, align 1, !dbg !15515
  %conv78 = zext i8 %46 to i32, !dbg !15515
  %add79 = add i32 %conv78, 1, !dbg !15515
  %47 = load i8, i8* %num_v_tile, align 1, !dbg !15515
  %conv80 = zext i8 %47 to i32, !dbg !15515
  %add81 = add i32 %conv80, 1, !dbg !15515
  %48 = load i8, i8* %tile_h_loc, align 1, !dbg !15515
  %conv82 = zext i8 %48 to i32, !dbg !15515
  %49 = load i8, i8* %tile_v_loc, align 1, !dbg !15515
  %conv83 = zext i8 %49 to i32, !dbg !15515
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.57, i64 0, i64 0), i32 %add79, i32 %add81, i32 %conv82, i32 %conv83) #8, !dbg !15515
  %50 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15516
  %topology_id = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %50, i32 0, i32 5, !dbg !15516
  %arrayidx84 = getelementptr [8 x i8], [8 x i8]* %topology_id, i64 0, i64 0, !dbg !15516
  %51 = load i8, i8* %arrayidx84, align 1, !dbg !15516
  %conv85 = zext i8 %51 to i32, !dbg !15516
  %52 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15516
  %topology_id86 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %52, i32 0, i32 5, !dbg !15516
  %arrayidx87 = getelementptr [8 x i8], [8 x i8]* %topology_id86, i64 0, i64 1, !dbg !15516
  %53 = load i8, i8* %arrayidx87, align 1, !dbg !15516
  %conv88 = zext i8 %53 to i32, !dbg !15516
  %54 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15516
  %topology_id89 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %54, i32 0, i32 5, !dbg !15516
  %arrayidx90 = getelementptr [8 x i8], [8 x i8]* %topology_id89, i64 0, i64 2, !dbg !15516
  %55 = load i8, i8* %arrayidx90, align 1, !dbg !15516
  %conv91 = zext i8 %55 to i32, !dbg !15516
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.58, i64 0, i64 0), i32 %conv85, i32 %conv88, i32 %conv91) #8, !dbg !15516
  %56 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15517
  %dev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %56, i32 0, i32 0, !dbg !15518
  %57 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !15518
  %58 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15519
  %topology_id92 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %58, i32 0, i32 5, !dbg !15520
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %topology_id92, i64 0, i64 0, !dbg !15519
  %call = call %struct.drm_tile_group* @drm_mode_get_tile_group(%struct.drm_device* %57, i8* %arraydecay) #8, !dbg !15521
  store %struct.drm_tile_group* %call, %struct.drm_tile_group** %tg, align 8, !dbg !15522
  %59 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tg, align 8, !dbg !15523
  %tobool93 = icmp ne %struct.drm_tile_group* %59, null, !dbg !15523
  br i1 %tobool93, label %if.end99, label %if.then94, !dbg !15525

if.then94:                                        ; preds = %if.end
  %60 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15526
  %dev95 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %60, i32 0, i32 0, !dbg !15527
  %61 = load %struct.drm_device*, %struct.drm_device** %dev95, align 8, !dbg !15527
  %62 = load %struct.displayid_tiled_block*, %struct.displayid_tiled_block** %tile, align 8, !dbg !15528
  %topology_id96 = getelementptr inbounds %struct.displayid_tiled_block, %struct.displayid_tiled_block* %62, i32 0, i32 5, !dbg !15529
  %arraydecay97 = getelementptr inbounds [8 x i8], [8 x i8]* %topology_id96, i64 0, i64 0, !dbg !15528
  %call98 = call %struct.drm_tile_group* @drm_mode_create_tile_group(%struct.drm_device* %61, i8* %arraydecay97) #8, !dbg !15530
  store %struct.drm_tile_group* %call98, %struct.drm_tile_group** %tg, align 8, !dbg !15531
  br label %if.end99, !dbg !15532

if.end99:                                         ; preds = %if.then94, %if.end
  %63 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tg, align 8, !dbg !15533
  %tobool100 = icmp ne %struct.drm_tile_group* %63, null, !dbg !15533
  br i1 %tobool100, label %if.end102, label %if.then101, !dbg !15535

if.then101:                                       ; preds = %if.end99
  br label %if.end113, !dbg !15536

if.end102:                                        ; preds = %if.end99
  %64 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15537
  %tile_group = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %64, i32 0, i32 49, !dbg !15539
  %65 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tile_group, align 8, !dbg !15539
  %66 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tg, align 8, !dbg !15540
  %cmp = icmp ne %struct.drm_tile_group* %65, %66, !dbg !15541
  br i1 %cmp, label %if.then104, label %if.else, !dbg !15542

if.then104:                                       ; preds = %if.end102
  %67 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15543
  %tile_group105 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %67, i32 0, i32 49, !dbg !15546
  %68 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tile_group105, align 8, !dbg !15546
  %tobool106 = icmp ne %struct.drm_tile_group* %68, null, !dbg !15543
  br i1 %tobool106, label %if.then107, label %if.end110, !dbg !15547

if.then107:                                       ; preds = %if.then104
  %69 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15548
  %dev108 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %69, i32 0, i32 0, !dbg !15549
  %70 = load %struct.drm_device*, %struct.drm_device** %dev108, align 8, !dbg !15549
  %71 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15550
  %tile_group109 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %71, i32 0, i32 49, !dbg !15551
  %72 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tile_group109, align 8, !dbg !15551
  call void @drm_mode_put_tile_group(%struct.drm_device* %70, %struct.drm_tile_group* %72) #8, !dbg !15552
  br label %if.end110, !dbg !15552

if.end110:                                        ; preds = %if.then107, %if.then104
  %73 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tg, align 8, !dbg !15553
  %74 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15554
  %tile_group111 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %74, i32 0, i32 49, !dbg !15555
  store %struct.drm_tile_group* %73, %struct.drm_tile_group** %tile_group111, align 8, !dbg !15556
  br label %if.end113, !dbg !15557

if.else:                                          ; preds = %if.end102
  %75 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !15558
  %dev112 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %75, i32 0, i32 0, !dbg !15560
  %76 = load %struct.drm_device*, %struct.drm_device** %dev112, align 8, !dbg !15560
  %77 = load %struct.drm_tile_group*, %struct.drm_tile_group** %tg, align 8, !dbg !15561
  call void @drm_mode_put_tile_group(%struct.drm_device* %76, %struct.drm_tile_group* %77) #8, !dbg !15562
  br label %if.end113

if.end113:                                        ; preds = %if.then101, %if.else, %if.end110
  ret void, !dbg !15563
}

; Function Attrs: noredzone
declare dso_local %struct.drm_tile_group* @drm_mode_get_tile_group(%struct.drm_device*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_tile_group* @drm_mode_create_tile_group(%struct.drm_device*, i8*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone willreturn }
attributes #6 = { nounwind willreturn }
attributes #7 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noredzone }
attributes #9 = { nounwind }
attributes #10 = { cold noredzone }
attributes #11 = { noredzone nounwind readnone }
attributes #12 = { noredzone nounwind }
attributes #13 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!802, !803, !804, !805}
!llvm.ident = !{!806}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "edid_header", scope: !2, file: !3, line: 1558, type: !801, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !367, globals: !640, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/gpu/drm/drm_edid.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !24, !30, !37, !43, !48, !54, !61, !67, !76, !84, !90, !96, !103, !111, !117, !131, !137, !181, !190, !197, !203, !208, !216, !223, !228, !234, !238, !254, !260, !267, !273, !280, !286, !289, !299, !305, !311, !323, !333, !339, !343, !349, !360}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 10, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_debug_category", file: !12, line: 277, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/drm/drm_print.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23}
!14 = !DIEnumerator(name: "DRM_UT_CORE", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DRM_UT_DRIVER", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DRM_UT_KMS", value: 4, isUnsigned: true)
!17 = !DIEnumerator(name: "DRM_UT_PRIME", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "DRM_UT_ATOMIC", value: 16, isUnsigned: true)
!19 = !DIEnumerator(name: "DRM_UT_VBL", value: 32, isUnsigned: true)
!20 = !DIEnumerator(name: "DRM_UT_STATE", value: 64, isUnsigned: true)
!21 = !DIEnumerator(name: "DRM_UT_LEASE", value: 128, isUnsigned: true)
!22 = !DIEnumerator(name: "DRM_UT_DP", value: 256, isUnsigned: true)
!23 = !DIEnumerator(name: "DRM_UT_DRMRES", value: 512, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !25, line: 567, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "DUMP_PREFIX_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "DUMP_PREFIX_ADDRESS", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "DUMP_PREFIX_OFFSET", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !31, line: 15, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!34 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !38, line: 546, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !44, line: 65, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47}
!46 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !49, line: 16, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53}
!51 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !55, line: 59, baseType: !7, size: 32, elements: !56)
!55 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!56 = !{!57, !58, !59, !60}
!57 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!61 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !62, line: 54, baseType: !7, size: 32, elements: !63)
!62 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!63 = !{!64, !65, !66}
!64 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !68, line: 296, baseType: !7, size: 32, elements: !69)
!68 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!69 = !{!70, !71, !72, !73, !74, !75}
!70 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!72 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!73 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!74 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!75 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !77, line: 9, baseType: !7, size: 32, elements: !78)
!77 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!78 = !{!79, !80, !81, !82, !83}
!79 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !85, line: 26, baseType: !7, size: 32, elements: !86)
!85 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!86 = !{!87, !88, !89}
!87 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!88 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!89 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!90 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !91, line: 44, baseType: !7, size: 32, elements: !92)
!91 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!92 = !{!93, !94, !95}
!93 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!94 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!95 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !97, line: 343, baseType: !7, size: 32, elements: !98)
!97 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!98 = !{!99, !100, !101, !102}
!99 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !104, line: 524, baseType: !7, size: 32, elements: !105)
!104 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!105 = !{!106, !107, !108, !109, !110}
!106 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!110 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!111 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !104, line: 502, baseType: !7, size: 32, elements: !112)
!112 = !{!113, !114, !115, !116}
!113 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!114 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!115 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!116 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!117 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !118, line: 76, baseType: !7, size: 32, elements: !119)
!118 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!119 = !{!120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130}
!120 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!121 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!122 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!123 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!124 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!125 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!126 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!127 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!128 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!129 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!130 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!131 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !132, line: 11, baseType: !7, size: 32, elements: !133)
!132 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!133 = !{!134, !135, !136}
!134 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!135 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!136 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_mode_status", file: !138, line: 91, baseType: !139, size: 32, elements: !140)
!138 = !DIFile(filename: "./include/drm/drm_modes.h", directory: "/home/lizy2001/genbc/linux")
!139 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!140 = !{!141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180}
!141 = !DIEnumerator(name: "MODE_OK", value: 0)
!142 = !DIEnumerator(name: "MODE_HSYNC", value: 1)
!143 = !DIEnumerator(name: "MODE_VSYNC", value: 2)
!144 = !DIEnumerator(name: "MODE_H_ILLEGAL", value: 3)
!145 = !DIEnumerator(name: "MODE_V_ILLEGAL", value: 4)
!146 = !DIEnumerator(name: "MODE_BAD_WIDTH", value: 5)
!147 = !DIEnumerator(name: "MODE_NOMODE", value: 6)
!148 = !DIEnumerator(name: "MODE_NO_INTERLACE", value: 7)
!149 = !DIEnumerator(name: "MODE_NO_DBLESCAN", value: 8)
!150 = !DIEnumerator(name: "MODE_NO_VSCAN", value: 9)
!151 = !DIEnumerator(name: "MODE_MEM", value: 10)
!152 = !DIEnumerator(name: "MODE_VIRTUAL_X", value: 11)
!153 = !DIEnumerator(name: "MODE_VIRTUAL_Y", value: 12)
!154 = !DIEnumerator(name: "MODE_MEM_VIRT", value: 13)
!155 = !DIEnumerator(name: "MODE_NOCLOCK", value: 14)
!156 = !DIEnumerator(name: "MODE_CLOCK_HIGH", value: 15)
!157 = !DIEnumerator(name: "MODE_CLOCK_LOW", value: 16)
!158 = !DIEnumerator(name: "MODE_CLOCK_RANGE", value: 17)
!159 = !DIEnumerator(name: "MODE_BAD_HVALUE", value: 18)
!160 = !DIEnumerator(name: "MODE_BAD_VVALUE", value: 19)
!161 = !DIEnumerator(name: "MODE_BAD_VSCAN", value: 20)
!162 = !DIEnumerator(name: "MODE_HSYNC_NARROW", value: 21)
!163 = !DIEnumerator(name: "MODE_HSYNC_WIDE", value: 22)
!164 = !DIEnumerator(name: "MODE_HBLANK_NARROW", value: 23)
!165 = !DIEnumerator(name: "MODE_HBLANK_WIDE", value: 24)
!166 = !DIEnumerator(name: "MODE_VSYNC_NARROW", value: 25)
!167 = !DIEnumerator(name: "MODE_VSYNC_WIDE", value: 26)
!168 = !DIEnumerator(name: "MODE_VBLANK_NARROW", value: 27)
!169 = !DIEnumerator(name: "MODE_VBLANK_WIDE", value: 28)
!170 = !DIEnumerator(name: "MODE_PANEL", value: 29)
!171 = !DIEnumerator(name: "MODE_INTERLACE_WIDTH", value: 30)
!172 = !DIEnumerator(name: "MODE_ONE_WIDTH", value: 31)
!173 = !DIEnumerator(name: "MODE_ONE_HEIGHT", value: 32)
!174 = !DIEnumerator(name: "MODE_ONE_SIZE", value: 33)
!175 = !DIEnumerator(name: "MODE_NO_REDUCED", value: 34)
!176 = !DIEnumerator(name: "MODE_NO_STEREO", value: 35)
!177 = !DIEnumerator(name: "MODE_NO_420", value: 36)
!178 = !DIEnumerator(name: "MODE_STALE", value: -3)
!179 = !DIEnumerator(name: "MODE_BAD", value: -2)
!180 = !DIEnumerator(name: "MODE_ERROR", value: -1)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_picture_aspect", file: !182, line: 96, baseType: !7, size: 32, elements: !183)
!182 = !DIFile(filename: "./include/linux/hdmi.h", directory: "/home/lizy2001/genbc/linux")
!183 = !{!184, !185, !186, !187, !188, !189}
!184 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_NONE", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_4_3", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_16_9", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_64_27", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_256_135", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_RESERVED", value: 5, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switch_power_state", file: !191, line: 33, baseType: !7, size: 32, elements: !192)
!191 = !DIFile(filename: "./include/drm/drm_device.h", directory: "/home/lizy2001/genbc/linux")
!192 = !{!193, !194, !195, !196}
!193 = !DIEnumerator(name: "DRM_SWITCH_POWER_ON", value: 0, isUnsigned: true)
!194 = !DIEnumerator(name: "DRM_SWITCH_POWER_OFF", value: 1, isUnsigned: true)
!195 = !DIEnumerator(name: "DRM_SWITCH_POWER_CHANGING", value: 2, isUnsigned: true)
!196 = !DIEnumerator(name: "DRM_SWITCH_POWER_DYNAMIC_OFF", value: 3, isUnsigned: true)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_registration_state", file: !198, line: 94, baseType: !7, size: 32, elements: !199)
!198 = !DIFile(filename: "./include/drm/drm_connector.h", directory: "/home/lizy2001/genbc/linux")
!199 = !{!200, !201, !202}
!200 = !DIEnumerator(name: "DRM_CONNECTOR_INITIALIZING", value: 0, isUnsigned: true)
!201 = !DIEnumerator(name: "DRM_CONNECTOR_REGISTERED", value: 1, isUnsigned: true)
!202 = !DIEnumerator(name: "DRM_CONNECTOR_UNREGISTERED", value: 2, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_status", file: !198, line: 59, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207}
!205 = !DIEnumerator(name: "connector_status_connected", value: 1, isUnsigned: true)
!206 = !DIEnumerator(name: "connector_status_disconnected", value: 2, isUnsigned: true)
!207 = !DIEnumerator(name: "connector_status_unknown", value: 3, isUnsigned: true)
!208 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "subpixel_order", file: !198, line: 133, baseType: !7, size: 32, elements: !209)
!209 = !{!210, !211, !212, !213, !214, !215}
!210 = !DIEnumerator(name: "SubPixelUnknown", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "SubPixelHorizontalRGB", value: 1, isUnsigned: true)
!212 = !DIEnumerator(name: "SubPixelHorizontalBGR", value: 2, isUnsigned: true)
!213 = !DIEnumerator(name: "SubPixelVerticalRGB", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "SubPixelVerticalBGR", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "SubPixelNone", value: 5, isUnsigned: true)
!216 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_color_encoding", file: !217, line: 77, baseType: !7, size: 32, elements: !218)
!217 = !DIFile(filename: "./include/drm/drm_color_mgmt.h", directory: "/home/lizy2001/genbc/linux")
!218 = !{!219, !220, !221, !222}
!219 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT601", value: 0, isUnsigned: true)
!220 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT709", value: 1, isUnsigned: true)
!221 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT2020", value: 2, isUnsigned: true)
!222 = !DIEnumerator(name: "DRM_COLOR_ENCODING_MAX", value: 3, isUnsigned: true)
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_color_range", file: !217, line: 84, baseType: !7, size: 32, elements: !224)
!224 = !{!225, !226, !227}
!225 = !DIEnumerator(name: "DRM_COLOR_YCBCR_LIMITED_RANGE", value: 0, isUnsigned: true)
!226 = !DIEnumerator(name: "DRM_COLOR_YCBCR_FULL_RANGE", value: 1, isUnsigned: true)
!227 = !DIEnumerator(name: "DRM_COLOR_RANGE_MAX", value: 2, isUnsigned: true)
!228 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_plane_type", file: !229, line: 536, baseType: !7, size: 32, elements: !230)
!229 = !DIFile(filename: "./include/drm/drm_plane.h", directory: "/home/lizy2001/genbc/linux")
!230 = !{!231, !232, !233}
!231 = !DIEnumerator(name: "DRM_PLANE_TYPE_OVERLAY", value: 0, isUnsigned: true)
!232 = !DIEnumerator(name: "DRM_PLANE_TYPE_PRIMARY", value: 1, isUnsigned: true)
!233 = !DIEnumerator(name: "DRM_PLANE_TYPE_CURSOR", value: 2, isUnsigned: true)
!234 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_link_status", file: !198, line: 223, baseType: !7, size: 32, elements: !235)
!235 = !{!236, !237}
!236 = !DIEnumerator(name: "DRM_LINK_STATUS_GOOD", value: 0, isUnsigned: true)
!237 = !DIEnumerator(name: "DRM_LINK_STATUS_BAD", value: 1, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_mode_subconnector", file: !239, line: 334, baseType: !7, size: 32, elements: !240)
!239 = !DIFile(filename: "./include/uapi/drm/drm_mode.h", directory: "/home/lizy2001/genbc/linux")
!240 = !{!241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253}
!241 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Automatic", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Unknown", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_VGA", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DVID", value: 3, isUnsigned: true)
!245 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DVIA", value: 4, isUnsigned: true)
!246 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Composite", value: 5, isUnsigned: true)
!247 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_SVIDEO", value: 6, isUnsigned: true)
!248 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Component", value: 8, isUnsigned: true)
!249 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_SCART", value: 9, isUnsigned: true)
!250 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DisplayPort", value: 10, isUnsigned: true)
!251 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_HDMIA", value: 11, isUnsigned: true)
!252 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Native", value: 15, isUnsigned: true)
!253 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Wireless", value: 18, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_force", file: !198, line: 46, baseType: !7, size: 32, elements: !255)
!255 = !{!256, !257, !258, !259}
!256 = !DIEnumerator(name: "DRM_FORCE_UNSPECIFIED", value: 0, isUnsigned: true)
!257 = !DIEnumerator(name: "DRM_FORCE_OFF", value: 1, isUnsigned: true)
!258 = !DIEnumerator(name: "DRM_FORCE_ON", value: 2, isUnsigned: true)
!259 = !DIEnumerator(name: "DRM_FORCE_ON_DIGITAL", value: 3, isUnsigned: true)
!260 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_panel_orientation", file: !198, line: 249, baseType: !139, size: 32, elements: !261)
!261 = !{!262, !263, !264, !265, !266}
!262 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_UNKNOWN", value: -1)
!263 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_NORMAL", value: 0)
!264 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_BOTTOM_UP", value: 1)
!265 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_LEFT_UP", value: 2)
!266 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_RIGHT_UP", value: 3)
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_quantization_range", file: !182, line: 131, baseType: !7, size: 32, elements: !268)
!268 = !{!269, !270, !271, !272}
!269 = !DIEnumerator(name: "HDMI_QUANTIZATION_RANGE_DEFAULT", value: 0, isUnsigned: true)
!270 = !DIEnumerator(name: "HDMI_QUANTIZATION_RANGE_LIMITED", value: 1, isUnsigned: true)
!271 = !DIEnumerator(name: "HDMI_QUANTIZATION_RANGE_FULL", value: 2, isUnsigned: true)
!272 = !DIEnumerator(name: "HDMI_QUANTIZATION_RANGE_RESERVED", value: 3, isUnsigned: true)
!273 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_infoframe_type", file: !182, line: 45, baseType: !7, size: 32, elements: !274)
!274 = !{!275, !276, !277, !278, !279}
!275 = !DIEnumerator(name: "HDMI_INFOFRAME_TYPE_VENDOR", value: 129, isUnsigned: true)
!276 = !DIEnumerator(name: "HDMI_INFOFRAME_TYPE_AVI", value: 130, isUnsigned: true)
!277 = !DIEnumerator(name: "HDMI_INFOFRAME_TYPE_SPD", value: 131, isUnsigned: true)
!278 = !DIEnumerator(name: "HDMI_INFOFRAME_TYPE_AUDIO", value: 132, isUnsigned: true)
!279 = !DIEnumerator(name: "HDMI_INFOFRAME_TYPE_DRM", value: 135, isUnsigned: true)
!280 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_eotf", file: !182, line: 162, baseType: !7, size: 32, elements: !281)
!281 = !{!282, !283, !284, !285}
!282 = !DIEnumerator(name: "HDMI_EOTF_TRADITIONAL_GAMMA_SDR", value: 0, isUnsigned: true)
!283 = !DIEnumerator(name: "HDMI_EOTF_TRADITIONAL_GAMMA_HDR", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "HDMI_EOTF_SMPTE_ST2084", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "HDMI_EOTF_BT_2100_HLG", value: 3, isUnsigned: true)
!286 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_metadata_type", file: !182, line: 158, baseType: !7, size: 32, elements: !287)
!287 = !{!288}
!288 = !DIEnumerator(name: "HDMI_STATIC_METADATA_TYPE1", value: 1, isUnsigned: true)
!289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_colorspace", file: !182, line: 71, baseType: !7, size: 32, elements: !290)
!290 = !{!291, !292, !293, !294, !295, !296, !297, !298}
!291 = !DIEnumerator(name: "HDMI_COLORSPACE_RGB", value: 0, isUnsigned: true)
!292 = !DIEnumerator(name: "HDMI_COLORSPACE_YUV422", value: 1, isUnsigned: true)
!293 = !DIEnumerator(name: "HDMI_COLORSPACE_YUV444", value: 2, isUnsigned: true)
!294 = !DIEnumerator(name: "HDMI_COLORSPACE_YUV420", value: 3, isUnsigned: true)
!295 = !DIEnumerator(name: "HDMI_COLORSPACE_RESERVED4", value: 4, isUnsigned: true)
!296 = !DIEnumerator(name: "HDMI_COLORSPACE_RESERVED5", value: 5, isUnsigned: true)
!297 = !DIEnumerator(name: "HDMI_COLORSPACE_RESERVED6", value: 6, isUnsigned: true)
!298 = !DIEnumerator(name: "HDMI_COLORSPACE_IDO_DEFINED", value: 7, isUnsigned: true)
!299 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_scan_mode", file: !182, line: 82, baseType: !7, size: 32, elements: !300)
!300 = !{!301, !302, !303, !304}
!301 = !DIEnumerator(name: "HDMI_SCAN_MODE_NONE", value: 0, isUnsigned: true)
!302 = !DIEnumerator(name: "HDMI_SCAN_MODE_OVERSCAN", value: 1, isUnsigned: true)
!303 = !DIEnumerator(name: "HDMI_SCAN_MODE_UNDERSCAN", value: 2, isUnsigned: true)
!304 = !DIEnumerator(name: "HDMI_SCAN_MODE_RESERVED", value: 3, isUnsigned: true)
!305 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_colorimetry", file: !182, line: 89, baseType: !7, size: 32, elements: !306)
!306 = !{!307, !308, !309, !310}
!307 = !DIEnumerator(name: "HDMI_COLORIMETRY_NONE", value: 0, isUnsigned: true)
!308 = !DIEnumerator(name: "HDMI_COLORIMETRY_ITU_601", value: 1, isUnsigned: true)
!309 = !DIEnumerator(name: "HDMI_COLORIMETRY_ITU_709", value: 2, isUnsigned: true)
!310 = !DIEnumerator(name: "HDMI_COLORIMETRY_EXTENDED", value: 3, isUnsigned: true)
!311 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_active_aspect", file: !182, line: 105, baseType: !7, size: 32, elements: !312)
!312 = !{!313, !314, !315, !316, !317, !318, !319, !320, !321, !322}
!313 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_16_9_TOP", value: 2, isUnsigned: true)
!314 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_14_9_TOP", value: 3, isUnsigned: true)
!315 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_16_9_CENTER", value: 4, isUnsigned: true)
!316 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_PICTURE", value: 8, isUnsigned: true)
!317 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_4_3", value: 9, isUnsigned: true)
!318 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_16_9", value: 10, isUnsigned: true)
!319 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_14_9", value: 11, isUnsigned: true)
!320 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_4_3_SP_14_9", value: 13, isUnsigned: true)
!321 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_16_9_SP_14_9", value: 14, isUnsigned: true)
!322 = !DIEnumerator(name: "HDMI_ACTIVE_ASPECT_16_9_SP_4_3", value: 15, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_extended_colorimetry", file: !182, line: 118, baseType: !7, size: 32, elements: !324)
!324 = !{!325, !326, !327, !328, !329, !330, !331, !332}
!325 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_XV_YCC_601", value: 0, isUnsigned: true)
!326 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_XV_YCC_709", value: 1, isUnsigned: true)
!327 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_S_YCC_601", value: 2, isUnsigned: true)
!328 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_OPYCC_601", value: 3, isUnsigned: true)
!329 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_OPRGB", value: 4, isUnsigned: true)
!330 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_BT2020_CONST_LUM", value: 5, isUnsigned: true)
!331 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_BT2020", value: 6, isUnsigned: true)
!332 = !DIEnumerator(name: "HDMI_EXTENDED_COLORIMETRY_RESERVED", value: 7, isUnsigned: true)
!333 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_nups", file: !182, line: 139, baseType: !7, size: 32, elements: !334)
!334 = !{!335, !336, !337, !338}
!335 = !DIEnumerator(name: "HDMI_NUPS_UNKNOWN", value: 0, isUnsigned: true)
!336 = !DIEnumerator(name: "HDMI_NUPS_HORIZONTAL", value: 1, isUnsigned: true)
!337 = !DIEnumerator(name: "HDMI_NUPS_VERTICAL", value: 2, isUnsigned: true)
!338 = !DIEnumerator(name: "HDMI_NUPS_BOTH", value: 3, isUnsigned: true)
!339 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_ycc_quantization_range", file: !182, line: 146, baseType: !7, size: 32, elements: !340)
!340 = !{!341, !342}
!341 = !DIEnumerator(name: "HDMI_YCC_QUANTIZATION_RANGE_LIMITED", value: 0, isUnsigned: true)
!342 = !DIEnumerator(name: "HDMI_YCC_QUANTIZATION_RANGE_FULL", value: 1, isUnsigned: true)
!343 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_content_type", file: !182, line: 151, baseType: !7, size: 32, elements: !344)
!344 = !{!345, !346, !347, !348}
!345 = !DIEnumerator(name: "HDMI_CONTENT_TYPE_GRAPHICS", value: 0, isUnsigned: true)
!346 = !DIEnumerator(name: "HDMI_CONTENT_TYPE_PHOTO", value: 1, isUnsigned: true)
!347 = !DIEnumerator(name: "HDMI_CONTENT_TYPE_CINEMA", value: 2, isUnsigned: true)
!348 = !DIEnumerator(name: "HDMI_CONTENT_TYPE_GAME", value: 3, isUnsigned: true)
!349 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_3d_structure", file: !182, line: 341, baseType: !139, size: 32, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !356, !357, !358, !359}
!351 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_INVALID", value: -1)
!352 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_FRAME_PACKING", value: 0)
!353 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_FIELD_ALTERNATIVE", value: 1)
!354 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_LINE_ALTERNATIVE", value: 2)
!355 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_SIDE_BY_SIDE_FULL", value: 3)
!356 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_L_DEPTH", value: 4)
!357 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_L_DEPTH_GFX_GFX_DEPTH", value: 5)
!358 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_TOP_AND_BOTTOM", value: 6)
!359 = !DIEnumerator(name: "HDMI_3D_STRUCTURE_SIDE_BY_SIDE_HALF", value: 8)
!360 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !361, line: 305, baseType: !7, size: 32, elements: !362)
!361 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!362 = !{!363, !364, !365, !366}
!363 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!364 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!365 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!366 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!367 = !{!368, !369, !522, !523, !139, !525, !574, !575, !576, !578, !579, !586, !426, !428, !589, !7, !590, !591, !594, !596, !598, !600, !620, !627}
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edid", file: !371, line: 290, size: 1024, elements: !372)
!371 = !DIFile(filename: "./include/drm/drm_edid.h", directory: "/home/lizy2001/genbc/linux")
!372 = !{!373, !382, !386, !387, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !415, !421, !520, !521}
!373 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !370, file: !371, line: 291, baseType: !374, size: 64)
!374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 64, elements: !380)
!375 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !376, line: 17, baseType: !377)
!376 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !378, line: 21, baseType: !379)
!378 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!379 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!380 = !{!381}
!381 = !DISubrange(count: 8)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_id", scope: !370, file: !371, line: 293, baseType: !383, size: 16, offset: 64)
!383 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 16, elements: !384)
!384 = !{!385}
!385 = !DISubrange(count: 2)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "prod_code", scope: !370, file: !371, line: 294, baseType: !383, size: 16, offset: 80)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !370, file: !371, line: 295, baseType: !388, size: 32, offset: 96)
!388 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !376, line: 21, baseType: !389)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !378, line: 27, baseType: !7)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_week", scope: !370, file: !371, line: 296, baseType: !375, size: 8, offset: 128)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_year", scope: !370, file: !371, line: 297, baseType: !375, size: 8, offset: 136)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !370, file: !371, line: 299, baseType: !375, size: 8, offset: 144)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !370, file: !371, line: 300, baseType: !375, size: 8, offset: 152)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !370, file: !371, line: 302, baseType: !375, size: 8, offset: 160)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "width_cm", scope: !370, file: !371, line: 303, baseType: !375, size: 8, offset: 168)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "height_cm", scope: !370, file: !371, line: 304, baseType: !375, size: 8, offset: 176)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !370, file: !371, line: 305, baseType: !375, size: 8, offset: 184)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !370, file: !371, line: 306, baseType: !375, size: 8, offset: 192)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "red_green_lo", scope: !370, file: !371, line: 308, baseType: !375, size: 8, offset: 200)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "black_white_lo", scope: !370, file: !371, line: 309, baseType: !375, size: 8, offset: 208)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "red_x", scope: !370, file: !371, line: 310, baseType: !375, size: 8, offset: 216)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "red_y", scope: !370, file: !371, line: 311, baseType: !375, size: 8, offset: 224)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "green_x", scope: !370, file: !371, line: 312, baseType: !375, size: 8, offset: 232)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "green_y", scope: !370, file: !371, line: 313, baseType: !375, size: 8, offset: 240)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "blue_x", scope: !370, file: !371, line: 314, baseType: !375, size: 8, offset: 248)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "blue_y", scope: !370, file: !371, line: 315, baseType: !375, size: 8, offset: 256)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "white_x", scope: !370, file: !371, line: 316, baseType: !375, size: 8, offset: 264)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "white_y", scope: !370, file: !371, line: 317, baseType: !375, size: 8, offset: 272)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "established_timings", scope: !370, file: !371, line: 319, baseType: !410, size: 24, offset: 280)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "est_timings", file: !371, line: 44, size: 24, elements: !411)
!411 = !{!412, !413, !414}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !410, file: !371, line: 45, baseType: !375, size: 8)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !410, file: !371, line: 46, baseType: !375, size: 8, offset: 8)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_rsvd", scope: !410, file: !371, line: 47, baseType: !375, size: 8, offset: 16)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "standard_timings", scope: !370, file: !371, line: 321, baseType: !416, size: 128, offset: 304)
!416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 128, elements: !380)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "std_timing", file: !371, line: 58, size: 16, elements: !418)
!418 = !{!419, !420}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "hsize", scope: !417, file: !371, line: 59, baseType: !375, size: 8)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "vfreq_aspect", scope: !417, file: !371, line: 60, baseType: !375, size: 8, offset: 8)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "detailed_timings", scope: !370, file: !371, line: 323, baseType: !422, size: 576, offset: 432)
!422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !423, size: 576, elements: !518)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_timing", file: !371, line: 170, size: 144, elements: !424)
!424 = !{!425, !430}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock", scope: !423, file: !371, line: 171, baseType: !426, size: 16)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !427, line: 29, baseType: !428)
!427 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !378, line: 24, baseType: !429)
!429 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !423, file: !371, line: 175, baseType: !431, size: 128, offset: 16)
!431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !423, file: !371, line: 172, size: 128, elements: !432)
!432 = !{!433, !452}
!433 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_data", scope: !431, file: !371, line: 173, baseType: !434, size: 128)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_pixel_timing", file: !371, line: 70, size: 128, elements: !435)
!435 = !{!436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "hactive_lo", scope: !434, file: !371, line: 71, baseType: !375, size: 8)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "hblank_lo", scope: !434, file: !371, line: 72, baseType: !375, size: 8, offset: 8)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "hactive_hblank_hi", scope: !434, file: !371, line: 73, baseType: !375, size: 8, offset: 16)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "vactive_lo", scope: !434, file: !371, line: 74, baseType: !375, size: 8, offset: 24)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_lo", scope: !434, file: !371, line: 75, baseType: !375, size: 8, offset: 32)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "vactive_vblank_hi", scope: !434, file: !371, line: 76, baseType: !375, size: 8, offset: 40)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_offset_lo", scope: !434, file: !371, line: 77, baseType: !375, size: 8, offset: 48)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_pulse_width_lo", scope: !434, file: !371, line: 78, baseType: !375, size: 8, offset: 56)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_offset_pulse_width_lo", scope: !434, file: !371, line: 79, baseType: !375, size: 8, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_vsync_offset_pulse_width_hi", scope: !434, file: !371, line: 80, baseType: !375, size: 8, offset: 72)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm_lo", scope: !434, file: !371, line: 81, baseType: !375, size: 8, offset: 80)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm_lo", scope: !434, file: !371, line: 82, baseType: !375, size: 8, offset: 88)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "width_height_mm_hi", scope: !434, file: !371, line: 83, baseType: !375, size: 8, offset: 96)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "hborder", scope: !434, file: !371, line: 84, baseType: !375, size: 8, offset: 104)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "vborder", scope: !434, file: !371, line: 85, baseType: !375, size: 8, offset: 112)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !434, file: !371, line: 86, baseType: !375, size: 8, offset: 120)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "other_data", scope: !431, file: !371, line: 174, baseType: !453, size: 128)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_non_pixel", file: !371, line: 145, size: 128, elements: !454)
!454 = !{!455, !456, !457, !458}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !453, file: !371, line: 146, baseType: !375, size: 8)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !453, file: !371, line: 147, baseType: !375, size: 8, offset: 8)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !453, file: !371, line: 150, baseType: !375, size: 8, offset: 16)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !453, file: !371, line: 157, baseType: !459, size: 104, offset: 24)
!459 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !453, file: !371, line: 151, size: 104, elements: !460)
!460 = !{!461, !468, !499, !506, !510}
!461 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !459, file: !371, line: 152, baseType: !462, size: 104)
!462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_string", file: !371, line: 90, size: 104, elements: !463)
!463 = !{!464}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !462, file: !371, line: 91, baseType: !465, size: 104)
!465 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 104, elements: !466)
!466 = !{!467}
!467 = !DISubrange(count: 13)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !459, file: !371, line: 153, baseType: !469, size: 104)
!469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_monitor_range", file: !371, line: 99, size: 104, elements: !470)
!470 = !{!471, !472, !473, !474, !475, !476, !477}
!471 = !DIDerivedType(tag: DW_TAG_member, name: "min_vfreq", scope: !469, file: !371, line: 100, baseType: !375, size: 8)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfreq", scope: !469, file: !371, line: 101, baseType: !375, size: 8, offset: 8)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "min_hfreq_khz", scope: !469, file: !371, line: 102, baseType: !375, size: 8, offset: 16)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "max_hfreq_khz", scope: !469, file: !371, line: 103, baseType: !375, size: 8, offset: 24)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock_mhz", scope: !469, file: !371, line: 104, baseType: !375, size: 8, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !469, file: !371, line: 105, baseType: !375, size: 8, offset: 40)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "formula", scope: !469, file: !371, line: 124, baseType: !478, size: 56, offset: 48)
!478 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !469, file: !371, line: 106, size: 56, elements: !479)
!479 = !{!480, !489}
!480 = !DIDerivedType(tag: DW_TAG_member, name: "gtf2", scope: !478, file: !371, line: 114, baseType: !481, size: 56)
!481 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !478, file: !371, line: 107, size: 56, elements: !482)
!482 = !{!483, !484, !485, !486, !487, !488}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !481, file: !371, line: 108, baseType: !375, size: 8)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "hfreq_start_khz", scope: !481, file: !371, line: 109, baseType: !375, size: 8, offset: 8)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !481, file: !371, line: 110, baseType: !375, size: 8, offset: 16)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !481, file: !371, line: 111, baseType: !426, size: 16, offset: 24)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !481, file: !371, line: 112, baseType: !375, size: 8, offset: 40)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !481, file: !371, line: 113, baseType: !375, size: 8, offset: 48)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !478, file: !371, line: 123, baseType: !490, size: 56)
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !478, file: !371, line: 115, size: 56, elements: !491)
!491 = !{!492, !493, !494, !495, !496, !497, !498}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !490, file: !371, line: 116, baseType: !375, size: 8)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !490, file: !371, line: 117, baseType: !375, size: 8, offset: 8)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !490, file: !371, line: 118, baseType: !375, size: 8, offset: 16)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "supported_aspects", scope: !490, file: !371, line: 119, baseType: !375, size: 8, offset: 24)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !490, file: !371, line: 120, baseType: !375, size: 8, offset: 32)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "supported_scalings", scope: !490, file: !371, line: 121, baseType: !375, size: 8, offset: 40)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_refresh", scope: !490, file: !371, line: 122, baseType: !375, size: 8, offset: 48)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !459, file: !371, line: 154, baseType: !500, size: 32)
!500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_wpindex", file: !371, line: 127, size: 32, elements: !501)
!501 = !{!502, !503, !504, !505}
!502 = !DIDerivedType(tag: DW_TAG_member, name: "white_yx_lo", scope: !500, file: !371, line: 128, baseType: !375, size: 8)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "white_x_hi", scope: !500, file: !371, line: 129, baseType: !375, size: 8, offset: 8)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "white_y_hi", scope: !500, file: !371, line: 130, baseType: !375, size: 8, offset: 16)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !500, file: !371, line: 131, baseType: !375, size: 8, offset: 24)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "timings", scope: !459, file: !371, line: 155, baseType: !507, size: 96)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !417, size: 96, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 6)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !459, file: !371, line: 156, baseType: !511, size: 96)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 96, elements: !518)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cvt_timing", file: !371, line: 141, size: 24, elements: !513)
!513 = !{!514}
!514 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !512, file: !371, line: 142, baseType: !515, size: 24)
!515 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 24, elements: !516)
!516 = !{!517}
!517 = !DISubrange(count: 3)
!518 = !{!519}
!519 = !DISubrange(count: 4)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !370, file: !371, line: 325, baseType: !375, size: 8, offset: 1008)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !370, file: !371, line: 327, baseType: !375, size: 8, offset: 1016)
!522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !524, line: 148, baseType: !7)
!524 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_display_mode", file: !138, line: 224, size: 960, elements: !527)
!527 = !{!528, !529, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !561, !567, !572, !573}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !526, file: !138, line: 230, baseType: !139, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "hdisplay", scope: !526, file: !138, line: 231, baseType: !530, size: 16, offset: 32)
!530 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !376, line: 19, baseType: !428)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_start", scope: !526, file: !138, line: 232, baseType: !530, size: 16, offset: 48)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_end", scope: !526, file: !138, line: 233, baseType: !530, size: 16, offset: 64)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "htotal", scope: !526, file: !138, line: 234, baseType: !530, size: 16, offset: 80)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "hskew", scope: !526, file: !138, line: 235, baseType: !530, size: 16, offset: 96)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "vdisplay", scope: !526, file: !138, line: 236, baseType: !530, size: 16, offset: 112)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_start", scope: !526, file: !138, line: 237, baseType: !530, size: 16, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_end", scope: !526, file: !138, line: 238, baseType: !530, size: 16, offset: 144)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "vtotal", scope: !526, file: !138, line: 239, baseType: !530, size: 16, offset: 160)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "vscan", scope: !526, file: !138, line: 240, baseType: !530, size: 16, offset: 176)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !526, file: !138, line: 275, baseType: !388, size: 32, offset: 192)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_clock", scope: !526, file: !138, line: 292, baseType: !139, size: 32, offset: 224)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hdisplay", scope: !526, file: !138, line: 293, baseType: !530, size: 16, offset: 256)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hblank_start", scope: !526, file: !138, line: 294, baseType: !530, size: 16, offset: 272)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hblank_end", scope: !526, file: !138, line: 295, baseType: !530, size: 16, offset: 288)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hsync_start", scope: !526, file: !138, line: 296, baseType: !530, size: 16, offset: 304)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hsync_end", scope: !526, file: !138, line: 297, baseType: !530, size: 16, offset: 320)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_htotal", scope: !526, file: !138, line: 298, baseType: !530, size: 16, offset: 336)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hskew", scope: !526, file: !138, line: 299, baseType: !530, size: 16, offset: 352)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vdisplay", scope: !526, file: !138, line: 300, baseType: !530, size: 16, offset: 368)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vblank_start", scope: !526, file: !138, line: 301, baseType: !530, size: 16, offset: 384)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vblank_end", scope: !526, file: !138, line: 302, baseType: !530, size: 16, offset: 400)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vsync_start", scope: !526, file: !138, line: 303, baseType: !530, size: 16, offset: 416)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vsync_end", scope: !526, file: !138, line: 304, baseType: !530, size: 16, offset: 432)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vtotal", scope: !526, file: !138, line: 305, baseType: !530, size: 16, offset: 448)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm", scope: !526, file: !138, line: 313, baseType: !530, size: 16, offset: 464)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm", scope: !526, file: !138, line: 321, baseType: !530, size: 16, offset: 480)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !526, file: !138, line: 350, baseType: !375, size: 8, offset: 496)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "expose_to_userspace", scope: !526, file: !138, line: 361, baseType: !559, size: 8, offset: 504)
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !524, line: 30, baseType: !560)
!560 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !526, file: !138, line: 368, baseType: !562, size: 128, offset: 512)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !524, line: 178, size: 128, elements: !563)
!563 = !{!564, !566}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !562, file: !524, line: 179, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !562, file: !524, line: 179, baseType: !565, size: 64, offset: 64)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !526, file: !138, line: 375, baseType: !568, size: 256, offset: 640)
!568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 256, elements: !570)
!569 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!570 = !{!571}
!571 = !DISubrange(count: 32)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !526, file: !138, line: 383, baseType: !137, size: 32, offset: 896)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect_ratio", scope: !526, file: !138, line: 390, baseType: !181, size: 32, offset: 928)
!574 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !375)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "displayid_block", file: !581, line: 62, size: 24, elements: !582)
!581 = !DIFile(filename: "./include/drm/drm_displayid.h", directory: "/home/lizy2001/genbc/linux")
!582 = !{!583, !584, !585}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !580, file: !581, line: 63, baseType: !375, size: 8)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !580, file: !581, line: 64, baseType: !375, size: 8, offset: 8)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !580, file: !581, line: 65, baseType: !375, size: 8, offset: 16)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !376, line: 23, baseType: !587)
!587 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !378, line: 31, baseType: !588)
!588 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !593)
!593 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !526)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !565)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !597)
!600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !601, size: 64)
!601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "displayid_detailed_timing_block", file: !581, line: 90, size: 24, elements: !602)
!602 = !{!603, !604}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !601, file: !581, line: 91, baseType: !580, size: 24)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "timings", scope: !601, file: !581, line: 92, baseType: !605, offset: 24)
!605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !606, elements: !618)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "displayid_detailed_timings_1", file: !581, line: 77, size: 160, elements: !607)
!607 = !{!608, !609, !610, !611, !612, !613, !614, !615, !616, !617}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock", scope: !606, file: !581, line: 78, baseType: !515, size: 24)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !606, file: !581, line: 79, baseType: !375, size: 8, offset: 24)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "hactive", scope: !606, file: !581, line: 80, baseType: !383, size: 16, offset: 32)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "hblank", scope: !606, file: !581, line: 81, baseType: !383, size: 16, offset: 48)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "hsync", scope: !606, file: !581, line: 82, baseType: !383, size: 16, offset: 64)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "hsw", scope: !606, file: !581, line: 83, baseType: !383, size: 16, offset: 80)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "vactive", scope: !606, file: !581, line: 84, baseType: !383, size: 16, offset: 96)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "vblank", scope: !606, file: !581, line: 85, baseType: !383, size: 16, offset: 112)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !606, file: !581, line: 86, baseType: !383, size: 16, offset: 128)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "vsw", scope: !606, file: !581, line: 87, baseType: !383, size: 16, offset: 144)
!618 = !{!619}
!619 = !DISubrange(count: -1)
!620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !621, size: 64)
!621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "displayid_hdr", file: !581, line: 55, size: 32, elements: !622)
!622 = !{!623, !624, !625, !626}
!623 = !DIDerivedType(tag: DW_TAG_member, name: "rev", scope: !621, file: !581, line: 56, baseType: !375, size: 8)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !621, file: !581, line: 57, baseType: !375, size: 8, offset: 8)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "prod_id", scope: !621, file: !581, line: 58, baseType: !375, size: 8, offset: 16)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ext_count", scope: !621, file: !581, line: 59, baseType: !375, size: 8, offset: 24)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "displayid_tiled_block", file: !581, line: 68, size: 192, elements: !629)
!629 = !{!630, !631, !632, !633, !635, !639}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !628, file: !581, line: 69, baseType: !580, size: 24)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "tile_cap", scope: !628, file: !581, line: 70, baseType: !375, size: 8, offset: 24)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "topo", scope: !628, file: !581, line: 71, baseType: !515, size: 24, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "tile_size", scope: !628, file: !581, line: 72, baseType: !634, size: 32, offset: 56)
!634 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 32, elements: !518)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tile_pixel_bezel", scope: !628, file: !581, line: 73, baseType: !636, size: 40, offset: 88)
!636 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 40, elements: !637)
!637 = !{!638}
!638 = !DISubrange(count: 5)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "topology_id", scope: !628, file: !581, line: 74, baseType: !374, size: 64, offset: 128)
!640 = !{!641, !702, !707, !0, !712, !717, !719, !724, !729, !734, !746, !761, !764, !769, !782, !792, !795}
!641 = !DIGlobalVariableExpression(var: !642, expr: !DIExpression())
!642 = distinct !DIGlobalVariable(name: "__param_edid_fixup", scope: !2, file: !3, line: 1583, type: !643, isLocal: true, isDefinition: true, align: 64)
!643 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !644)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param", file: !645, line: 69, size: 320, elements: !646)
!645 = !DIFile(filename: "./include/linux/moduleparam.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !650, !654, !673, !675, !679, !680}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !644, file: !645, line: 70, baseType: !648, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !569)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "mod", scope: !644, file: !645, line: 71, baseType: !651, size: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !652, size: 64)
!652 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !653, line: 76, flags: DIFlagFwdDecl)
!653 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!654 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !644, file: !645, line: 72, baseType: !655, size: 64, offset: 128)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_param_ops", file: !645, line: 47, size: 256, elements: !658)
!658 = !{!659, !660, !665, !669}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !657, file: !645, line: 49, baseType: !7, size: 32)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !657, file: !645, line: 51, baseType: !661, size: 64, offset: 64)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = !DISubroutineType(types: !663)
!663 = !{!139, !648, !664}
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !657, file: !645, line: 53, baseType: !666, size: 64, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DISubroutineType(types: !668)
!668 = !{!139, !590, !664}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !657, file: !645, line: 55, baseType: !670, size: 64, offset: 192)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = !DISubroutineType(types: !672)
!672 = !{null, !368}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !644, file: !645, line: 73, baseType: !674, size: 16, offset: 192)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !644, file: !645, line: 74, baseType: !676, size: 8, offset: 208)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "s8", file: !376, line: 16, baseType: !677)
!677 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !378, line: 20, baseType: !678)
!678 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !644, file: !645, line: 75, baseType: !375, size: 8, offset: 216)
!680 = !DIDerivedType(tag: DW_TAG_member, scope: !644, file: !645, line: 76, baseType: !681, size: 64, offset: 256)
!681 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !645, line: 76, size: 64, elements: !682)
!682 = !{!683, !684, !691}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !681, file: !645, line: 77, baseType: !368, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !681, file: !645, line: 78, baseType: !685, size: 64)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !687)
!687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_string", file: !645, line: 86, size: 128, elements: !688)
!688 = !{!689, !690}
!689 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !687, file: !645, line: 87, baseType: !7, size: 32)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !687, file: !645, line: 88, baseType: !590, size: 64, offset: 64)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "arr", scope: !681, file: !645, line: 79, baseType: !692, size: 64)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !694)
!694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kparam_array", file: !645, line: 92, size: 256, elements: !695)
!695 = !{!696, !697, !698, !700, !701}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !694, file: !645, line: 94, baseType: !7, size: 32)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "elemsize", scope: !694, file: !645, line: 95, baseType: !7, size: 32, offset: 32)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !694, file: !645, line: 96, baseType: !699, size: 64, offset: 64)
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !694, file: !645, line: 97, baseType: !655, size: 64, offset: 128)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !694, file: !645, line: 98, baseType: !368, size: 64, offset: 192)
!702 = !DIGlobalVariableExpression(var: !703, expr: !DIExpression())
!703 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_edid_fixuptype252", scope: !2, file: !3, line: 1583, type: !704, isLocal: true, isDefinition: true, align: 8)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 224, elements: !705)
!705 = !{!706}
!706 = !DISubrange(count: 28)
!707 = !DIGlobalVariableExpression(var: !708, expr: !DIExpression())
!708 = distinct !DIGlobalVariable(name: "__UNIQUE_ID_edid_fixup253", scope: !2, file: !3, line: 1584, type: !709, isLocal: true, isDefinition: true, align: 8)
!709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 632, elements: !710)
!710 = !{!711}
!711 = !DISubrange(count: 79)
!712 = !DIGlobalVariableExpression(var: !713, expr: !DIExpression())
!713 = distinct !DIGlobalVariable(name: "__param_str_edid_fixup", scope: !2, file: !3, line: 1583, type: !714, isLocal: true, isDefinition: true)
!714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !649, size: 120, elements: !715)
!715 = !{!716}
!716 = !DISubrange(count: 15)
!717 = !DIGlobalVariableExpression(var: !718, expr: !DIExpression())
!718 = distinct !DIGlobalVariable(name: "edid_fixup", scope: !2, file: !3, line: 1582, type: !139, isLocal: true, isDefinition: true)
!719 = !DIGlobalVariableExpression(var: !720, expr: !DIExpression())
!720 = distinct !DIGlobalVariable(name: "drm_dmt_modes", scope: !2, file: !3, line: 224, type: !721, isLocal: true, isDefinition: true)
!721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 84480, elements: !722)
!722 = !{!723}
!723 = !DISubrange(count: 88)
!724 = !DIGlobalVariableExpression(var: !725, expr: !DIExpression())
!725 = distinct !DIGlobalVariable(name: "edid_cea_modes_1", scope: !2, file: !3, line: 718, type: !726, isLocal: true, isDefinition: true)
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 121920, elements: !727)
!727 = !{!728}
!728 = !DISubrange(count: 127)
!729 = !DIGlobalVariableExpression(var: !730, expr: !DIExpression())
!730 = distinct !DIGlobalVariable(name: "edid_cea_modes_193", scope: !2, file: !3, line: 1386, type: !731, isLocal: true, isDefinition: true)
!731 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 25920, elements: !732)
!732 = !{!733}
!733 = !DISubrange(count: 27)
!734 = !DIGlobalVariableExpression(var: !735, expr: !DIExpression())
!735 = distinct !DIGlobalVariable(name: "edid_quirk_list", scope: !2, file: !3, line: 106, type: !736, isLocal: true, isDefinition: true)
!736 = !DICompositeType(tag: DW_TAG_array_type, baseType: !737, size: 5568, elements: !744)
!737 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !738)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edid_quirk", file: !3, line: 102, size: 96, elements: !739)
!739 = !{!740, !742, !743}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !738, file: !3, line: 103, baseType: !741, size: 32)
!741 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 32, elements: !518)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "product_id", scope: !738, file: !3, line: 104, baseType: !139, size: 32, offset: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !738, file: !3, line: 105, baseType: !388, size: 32, offset: 64)
!744 = !{!745}
!745 = !DISubrange(count: 58)
!746 = !DIGlobalVariableExpression(var: !747, expr: !DIExpression())
!747 = distinct !DIGlobalVariable(name: "cea_interlaced", scope: !748, file: !3, line: 2566, type: !753, isLocal: true, isDefinition: true)
!748 = distinct !DISubprogram(name: "drm_mode_do_interlace_quirk", scope: !3, file: !3, line: 2560, type: !749, scopeLine: 2562, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!749 = !DISubroutineType(types: !750)
!750 = !{null, !525, !751}
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!752 = !{}
!753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !754, size: 448, elements: !759)
!754 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !748, file: !3, line: 2564, size: 64, elements: !756)
!756 = !{!757, !758}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !755, file: !3, line: 2565, baseType: !139, size: 32)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !755, file: !3, line: 2565, baseType: !139, size: 32, offset: 32)
!759 = !{!760}
!760 = !DISubrange(count: 7)
!761 = !DIGlobalVariableExpression(var: !762, expr: !DIExpression())
!762 = distinct !DIGlobalVariable(name: "edid_4k_modes", scope: !2, file: !3, line: 1527, type: !763, isLocal: true, isDefinition: true)
!763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 4800, elements: !637)
!764 = !DIGlobalVariableExpression(var: !765, expr: !DIExpression())
!765 = distinct !DIGlobalVariable(name: "edid_est_modes", scope: !2, file: !3, line: 589, type: !766, isLocal: true, isDefinition: true)
!766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !595, size: 16320, elements: !767)
!767 = !{!768}
!768 = !DISubrange(count: 17)
!769 = !DIGlobalVariableExpression(var: !770, expr: !DIExpression())
!770 = distinct !DIGlobalVariable(name: "est3_modes", scope: !2, file: !3, line: 650, type: !771, isLocal: true, isDefinition: true)
!771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 2816, elements: !780)
!772 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "minimode", file: !3, line: 643, size: 64, elements: !774)
!774 = !{!775, !777, !778, !779}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !773, file: !3, line: 644, baseType: !776, size: 16)
!776 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !773, file: !3, line: 645, baseType: !776, size: 16, offset: 16)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !773, file: !3, line: 646, baseType: !776, size: 16, offset: 32)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !773, file: !3, line: 647, baseType: !776, size: 16, offset: 48)
!780 = !{!781}
!781 = !DISubrange(count: 44)
!782 = !DIGlobalVariableExpression(var: !783, expr: !DIExpression())
!783 = distinct !DIGlobalVariable(name: "stereo_mandatory_modes", scope: !2, file: !3, line: 3805, type: !784, isLocal: true, isDefinition: true)
!784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !785, size: 1024, elements: !380)
!785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !786)
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stereo_mandatory_mode", file: !3, line: 3800, size: 128, elements: !787)
!787 = !{!788, !789, !790, !791}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !786, file: !3, line: 3801, baseType: !139, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !786, file: !3, line: 3801, baseType: !139, size: 32, offset: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "vrefresh", scope: !786, file: !3, line: 3801, baseType: !139, size: 32, offset: 64)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !786, file: !3, line: 3802, baseType: !7, size: 32, offset: 96)
!792 = !DIGlobalVariableExpression(var: !793, expr: !DIExpression())
!793 = distinct !DIGlobalVariable(name: "extra_modes", scope: !2, file: !3, line: 703, type: !794, isLocal: true, isDefinition: true)
!794 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 448, elements: !759)
!795 = !DIGlobalVariableExpression(var: !796, expr: !DIExpression())
!796 = distinct !DIGlobalVariable(name: "hdmi_colorimetry_val", scope: !2, file: !3, line: 5685, type: !797, isLocal: true, isDefinition: true)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !798, size: 352, elements: !799)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !388)
!799 = !{!800}
!800 = !DISubrange(count: 11)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 64, elements: !380)
!802 = !{i32 7, !"Dwarf Version", i32 4}
!803 = !{i32 2, !"Debug Info Version", i32 3}
!804 = !{i32 1, !"wchar_size", i32 2}
!805 = !{i32 1, !"Code Model", i32 2}
!806 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!807 = distinct !DISubprogram(name: "drm_edid_header_is_valid", scope: !3, file: !3, line: 1570, type: !808, scopeLine: 1571, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!808 = !DISubroutineType(types: !809)
!809 = !{!139, !576}
!810 = !DILocalVariable(name: "raw_edid", arg: 1, scope: !807, file: !3, line: 1570, type: !576)
!811 = !DILocation(line: 1570, column: 40, scope: !807)
!812 = !DILocalVariable(name: "i", scope: !807, file: !3, line: 1572, type: !139)
!813 = !DILocation(line: 1572, column: 6, scope: !807)
!814 = !DILocalVariable(name: "score", scope: !807, file: !3, line: 1572, type: !139)
!815 = !DILocation(line: 1572, column: 9, scope: !807)
!816 = !DILocation(line: 1574, column: 9, scope: !817)
!817 = distinct !DILexicalBlock(scope: !807, file: !3, line: 1574, column: 2)
!818 = !DILocation(line: 1574, column: 7, scope: !817)
!819 = !DILocation(line: 1574, column: 14, scope: !820)
!820 = distinct !DILexicalBlock(scope: !817, file: !3, line: 1574, column: 2)
!821 = !DILocation(line: 1574, column: 16, scope: !820)
!822 = !DILocation(line: 1574, column: 2, scope: !817)
!823 = !DILocation(line: 1575, column: 7, scope: !824)
!824 = distinct !DILexicalBlock(scope: !820, file: !3, line: 1575, column: 7)
!825 = !DILocation(line: 1575, column: 16, scope: !824)
!826 = !DILocation(line: 1575, column: 34, scope: !824)
!827 = !DILocation(line: 1575, column: 22, scope: !824)
!828 = !DILocation(line: 1575, column: 19, scope: !824)
!829 = !DILocation(line: 1575, column: 7, scope: !820)
!830 = !DILocation(line: 1576, column: 9, scope: !824)
!831 = !DILocation(line: 1576, column: 4, scope: !824)
!832 = !DILocation(line: 1575, column: 35, scope: !824)
!833 = !DILocation(line: 1574, column: 40, scope: !820)
!834 = !DILocation(line: 1574, column: 2, scope: !820)
!835 = distinct !{!835, !822, !836}
!836 = !DILocation(line: 1576, column: 9, scope: !817)
!837 = !DILocation(line: 1578, column: 9, scope: !807)
!838 = !DILocation(line: 1578, column: 2, scope: !807)
!839 = distinct !DISubprogram(name: "drm_edid_are_equal", scope: !3, file: !3, line: 1625, type: !840, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!840 = !DISubroutineType(types: !841)
!841 = !{!559, !842, !842}
!842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !843, size: 64)
!843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !370)
!844 = !DILocalVariable(name: "edid1", arg: 1, scope: !839, file: !3, line: 1625, type: !842)
!845 = !DILocation(line: 1625, column: 44, scope: !839)
!846 = !DILocalVariable(name: "edid2", arg: 2, scope: !839, file: !3, line: 1625, type: !842)
!847 = !DILocation(line: 1625, column: 70, scope: !839)
!848 = !DILocalVariable(name: "edid1_len", scope: !839, file: !3, line: 1627, type: !139)
!849 = !DILocation(line: 1627, column: 6, scope: !839)
!850 = !DILocalVariable(name: "edid2_len", scope: !839, file: !3, line: 1627, type: !139)
!851 = !DILocation(line: 1627, column: 17, scope: !839)
!852 = !DILocalVariable(name: "edid1_present", scope: !839, file: !3, line: 1628, type: !559)
!853 = !DILocation(line: 1628, column: 7, scope: !839)
!854 = !DILocation(line: 1628, column: 23, scope: !839)
!855 = !DILocation(line: 1628, column: 29, scope: !839)
!856 = !DILocalVariable(name: "edid2_present", scope: !839, file: !3, line: 1629, type: !559)
!857 = !DILocation(line: 1629, column: 7, scope: !839)
!858 = !DILocation(line: 1629, column: 23, scope: !839)
!859 = !DILocation(line: 1629, column: 29, scope: !839)
!860 = !DILocation(line: 1631, column: 6, scope: !861)
!861 = distinct !DILexicalBlock(scope: !839, file: !3, line: 1631, column: 6)
!862 = !DILocation(line: 1631, column: 23, scope: !861)
!863 = !DILocation(line: 1631, column: 20, scope: !861)
!864 = !DILocation(line: 1631, column: 6, scope: !839)
!865 = !DILocation(line: 1632, column: 3, scope: !861)
!866 = !DILocation(line: 1634, column: 6, scope: !867)
!867 = distinct !DILexicalBlock(scope: !839, file: !3, line: 1634, column: 6)
!868 = !DILocation(line: 1634, column: 6, scope: !839)
!869 = !DILocation(line: 1635, column: 34, scope: !870)
!870 = distinct !DILexicalBlock(scope: !867, file: !3, line: 1634, column: 13)
!871 = !DILocation(line: 1635, column: 41, scope: !870)
!872 = !DILocation(line: 1635, column: 32, scope: !870)
!873 = !DILocation(line: 1635, column: 27, scope: !870)
!874 = !DILocation(line: 1635, column: 13, scope: !870)
!875 = !DILocation(line: 1636, column: 34, scope: !870)
!876 = !DILocation(line: 1636, column: 41, scope: !870)
!877 = !DILocation(line: 1636, column: 32, scope: !870)
!878 = !DILocation(line: 1636, column: 27, scope: !870)
!879 = !DILocation(line: 1636, column: 13, scope: !870)
!880 = !DILocation(line: 1638, column: 7, scope: !881)
!881 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1638, column: 7)
!882 = !DILocation(line: 1638, column: 20, scope: !881)
!883 = !DILocation(line: 1638, column: 17, scope: !881)
!884 = !DILocation(line: 1638, column: 7, scope: !870)
!885 = !DILocation(line: 1639, column: 4, scope: !881)
!886 = !DILocation(line: 1641, column: 14, scope: !887)
!887 = distinct !DILexicalBlock(scope: !870, file: !3, line: 1641, column: 7)
!888 = !DILocation(line: 1641, column: 21, scope: !887)
!889 = !DILocation(line: 1641, column: 28, scope: !887)
!890 = !DILocation(line: 1641, column: 7, scope: !887)
!891 = !DILocation(line: 1641, column: 7, scope: !870)
!892 = !DILocation(line: 1642, column: 4, scope: !887)
!893 = !DILocation(line: 1643, column: 2, scope: !870)
!894 = !DILocation(line: 1645, column: 2, scope: !839)
!895 = !DILocation(line: 1646, column: 1, scope: !839)
!896 = distinct !DISubprogram(name: "drm_edid_block_valid", scope: !3, file: !3, line: 1661, type: !897, scopeLine: 1663, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!897 = !DISubroutineType(types: !898)
!898 = !{!559, !522, !139, !559, !589}
!899 = !DILocalVariable(name: "raw_edid", arg: 1, scope: !896, file: !3, line: 1661, type: !522)
!900 = !DILocation(line: 1661, column: 31, scope: !896)
!901 = !DILocalVariable(name: "block", arg: 2, scope: !896, file: !3, line: 1661, type: !139)
!902 = !DILocation(line: 1661, column: 45, scope: !896)
!903 = !DILocalVariable(name: "print_bad_edid", arg: 3, scope: !896, file: !3, line: 1661, type: !559)
!904 = !DILocation(line: 1661, column: 57, scope: !896)
!905 = !DILocalVariable(name: "edid_corrupt", arg: 4, scope: !896, file: !3, line: 1662, type: !589)
!906 = !DILocation(line: 1662, column: 12, scope: !896)
!907 = !DILocalVariable(name: "csum", scope: !896, file: !3, line: 1664, type: !375)
!908 = !DILocation(line: 1664, column: 5, scope: !896)
!909 = !DILocalVariable(name: "edid", scope: !896, file: !3, line: 1665, type: !369)
!910 = !DILocation(line: 1665, column: 15, scope: !896)
!911 = !DILocation(line: 1665, column: 37, scope: !896)
!912 = !DILocation(line: 1665, column: 22, scope: !896)
!913 = !DILocalVariable(name: "__ret_warn_on", scope: !914, file: !3, line: 1667, type: !139)
!914 = distinct !DILexicalBlock(scope: !915, file: !3, line: 1667, column: 6)
!915 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1667, column: 6)
!916 = !DILocation(line: 1667, column: 6, scope: !914)
!917 = !DILocation(line: 1667, column: 6, scope: !918)
!918 = distinct !DILexicalBlock(scope: !914, file: !3, line: 1667, column: 6)
!919 = !DILocation(line: 1667, column: 6, scope: !920)
!920 = distinct !DILexicalBlock(scope: !918, file: !3, line: 1667, column: 6)
!921 = !DILocation(line: 1667, column: 6, scope: !922)
!922 = distinct !DILexicalBlock(scope: !920, file: !3, line: 1667, column: 6)
!923 = !DILocation(line: 1667, column: 6, scope: !924)
!924 = distinct !DILexicalBlock(scope: !920, file: !3, line: 1667, column: 6)
!925 = !{i32 -2140397629, i32 -2140397600, i32 -2140397554, i32 -2140397496, i32 -2140397442, i32 -2140397388, i32 -2140397333, i32 -2140397302}
!926 = !DILocation(line: 1667, column: 6, scope: !927)
!927 = distinct !DILexicalBlock(scope: !920, file: !3, line: 1667, column: 6)
!928 = !{i32 -2140396893, i32 -2140396886, i32 -2140396834, i32 -2140396803, i32 -2140396773}
!929 = !DILocation(line: 1667, column: 6, scope: !930)
!930 = distinct !DILexicalBlock(scope: !920, file: !3, line: 1667, column: 6)
!931 = !DILocation(line: 1667, column: 6, scope: !915)
!932 = !DILocation(line: 1667, column: 6, scope: !896)
!933 = !DILocation(line: 1668, column: 3, scope: !915)
!934 = !DILocation(line: 1670, column: 6, scope: !935)
!935 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1670, column: 6)
!936 = !DILocation(line: 1670, column: 17, scope: !935)
!937 = !DILocation(line: 1670, column: 21, scope: !935)
!938 = !DILocation(line: 1670, column: 24, scope: !935)
!939 = !DILocation(line: 1670, column: 35, scope: !935)
!940 = !DILocation(line: 1670, column: 6, scope: !896)
!941 = !DILocation(line: 1671, column: 14, scope: !935)
!942 = !DILocation(line: 1671, column: 3, scope: !935)
!943 = !DILocation(line: 1673, column: 6, scope: !944)
!944 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1673, column: 6)
!945 = !DILocation(line: 1673, column: 12, scope: !944)
!946 = !DILocation(line: 1673, column: 6, scope: !896)
!947 = !DILocalVariable(name: "score", scope: !948, file: !3, line: 1674, type: !139)
!948 = distinct !DILexicalBlock(scope: !944, file: !3, line: 1673, column: 18)
!949 = !DILocation(line: 1674, column: 7, scope: !948)
!950 = !DILocation(line: 1674, column: 40, scope: !948)
!951 = !DILocation(line: 1674, column: 15, scope: !948)
!952 = !DILocation(line: 1676, column: 7, scope: !953)
!953 = distinct !DILexicalBlock(scope: !948, file: !3, line: 1676, column: 7)
!954 = !DILocation(line: 1676, column: 13, scope: !953)
!955 = !DILocation(line: 1676, column: 7, scope: !948)
!956 = !DILocation(line: 1677, column: 8, scope: !957)
!957 = distinct !DILexicalBlock(scope: !958, file: !3, line: 1677, column: 8)
!958 = distinct !DILexicalBlock(scope: !953, file: !3, line: 1676, column: 19)
!959 = !DILocation(line: 1677, column: 8, scope: !958)
!960 = !DILocation(line: 1678, column: 6, scope: !957)
!961 = !DILocation(line: 1678, column: 19, scope: !957)
!962 = !DILocation(line: 1678, column: 5, scope: !957)
!963 = !DILocation(line: 1679, column: 3, scope: !958)
!964 = !DILocation(line: 1679, column: 14, scope: !965)
!965 = distinct !DILexicalBlock(scope: !953, file: !3, line: 1679, column: 14)
!966 = !DILocation(line: 1679, column: 23, scope: !965)
!967 = !DILocation(line: 1679, column: 20, scope: !965)
!968 = !DILocation(line: 1679, column: 14, scope: !953)
!969 = !DILocation(line: 1685, column: 8, scope: !970)
!970 = distinct !DILexicalBlock(scope: !971, file: !3, line: 1685, column: 8)
!971 = distinct !DILexicalBlock(scope: !965, file: !3, line: 1679, column: 35)
!972 = !DILocation(line: 1685, column: 8, scope: !971)
!973 = !DILocation(line: 1686, column: 6, scope: !970)
!974 = !DILocation(line: 1686, column: 19, scope: !970)
!975 = !DILocation(line: 1686, column: 5, scope: !970)
!976 = !DILocation(line: 1687, column: 4, scope: !971)
!977 = !DILocation(line: 1688, column: 11, scope: !971)
!978 = !DILocation(line: 1688, column: 4, scope: !971)
!979 = !DILocation(line: 1689, column: 3, scope: !971)
!980 = !DILocation(line: 1690, column: 8, scope: !981)
!981 = distinct !DILexicalBlock(scope: !982, file: !3, line: 1690, column: 8)
!982 = distinct !DILexicalBlock(scope: !965, file: !3, line: 1689, column: 10)
!983 = !DILocation(line: 1690, column: 8, scope: !982)
!984 = !DILocation(line: 1691, column: 6, scope: !981)
!985 = !DILocation(line: 1691, column: 19, scope: !981)
!986 = !DILocation(line: 1691, column: 5, scope: !981)
!987 = !DILocation(line: 1692, column: 4, scope: !982)
!988 = !DILocation(line: 1694, column: 2, scope: !948)
!989 = !DILocation(line: 1696, column: 33, scope: !896)
!990 = !DILocation(line: 1696, column: 9, scope: !896)
!991 = !DILocation(line: 1696, column: 7, scope: !896)
!992 = !DILocation(line: 1697, column: 35, scope: !993)
!993 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1697, column: 6)
!994 = !DILocation(line: 1697, column: 45, scope: !993)
!995 = !DILocation(line: 1697, column: 6, scope: !993)
!996 = !DILocation(line: 1697, column: 6, scope: !896)
!997 = !DILocation(line: 1698, column: 7, scope: !998)
!998 = distinct !DILexicalBlock(scope: !999, file: !3, line: 1698, column: 7)
!999 = distinct !DILexicalBlock(scope: !993, file: !3, line: 1697, column: 52)
!1000 = !DILocation(line: 1698, column: 7, scope: !999)
!1001 = !DILocation(line: 1699, column: 5, scope: !998)
!1002 = !DILocation(line: 1699, column: 18, scope: !998)
!1003 = !DILocation(line: 1699, column: 4, scope: !998)
!1004 = !DILocation(line: 1702, column: 7, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !999, file: !3, line: 1702, column: 7)
!1006 = !DILocation(line: 1702, column: 19, scope: !1005)
!1007 = !DILocation(line: 1702, column: 7, scope: !999)
!1008 = !DILocation(line: 1703, column: 4, scope: !1009)
!1009 = distinct !DILexicalBlock(scope: !1005, file: !3, line: 1702, column: 31)
!1010 = !DILocation(line: 1704, column: 4, scope: !1009)
!1011 = !DILocation(line: 1705, column: 3, scope: !1009)
!1012 = !DILocation(line: 1706, column: 8, scope: !1013)
!1013 = distinct !DILexicalBlock(scope: !1014, file: !3, line: 1706, column: 8)
!1014 = distinct !DILexicalBlock(scope: !1005, file: !3, line: 1705, column: 10)
!1015 = !DILocation(line: 1706, column: 8, scope: !1014)
!1016 = !DILocation(line: 1707, column: 5, scope: !1013)
!1017 = !DILocation(line: 1709, column: 4, scope: !1014)
!1018 = !DILocation(line: 1711, column: 2, scope: !999)
!1019 = !DILocation(line: 1714, column: 10, scope: !896)
!1020 = !DILocation(line: 1714, column: 2, scope: !896)
!1021 = !DILocation(line: 1716, column: 7, scope: !1022)
!1022 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 1716, column: 7)
!1023 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1714, column: 23)
!1024 = !DILocation(line: 1716, column: 13, scope: !1022)
!1025 = !DILocation(line: 1716, column: 21, scope: !1022)
!1026 = !DILocation(line: 1716, column: 7, scope: !1023)
!1027 = !DILocation(line: 1717, column: 4, scope: !1028)
!1028 = distinct !DILexicalBlock(scope: !1022, file: !3, line: 1716, column: 27)
!1029 = !DILocation(line: 1718, column: 4, scope: !1028)
!1030 = !DILocation(line: 1721, column: 7, scope: !1031)
!1031 = distinct !DILexicalBlock(scope: !1023, file: !3, line: 1721, column: 7)
!1032 = !DILocation(line: 1721, column: 13, scope: !1031)
!1033 = !DILocation(line: 1721, column: 22, scope: !1031)
!1034 = !DILocation(line: 1721, column: 7, scope: !1023)
!1035 = !DILocation(line: 1722, column: 4, scope: !1031)
!1036 = !DILocation(line: 1723, column: 3, scope: !1023)
!1037 = !DILocation(line: 1726, column: 3, scope: !1023)
!1038 = !DILocation(line: 1729, column: 2, scope: !896)
!1039 = !DILabel(scope: !896, name: "bad", file: !3, line: 1731)
!1040 = !DILocation(line: 1731, column: 1, scope: !896)
!1041 = !DILocation(line: 1732, column: 6, scope: !1042)
!1042 = distinct !DILexicalBlock(scope: !896, file: !3, line: 1732, column: 6)
!1043 = !DILocation(line: 1732, column: 6, scope: !896)
!1044 = !DILocation(line: 1733, column: 24, scope: !1045)
!1045 = distinct !DILexicalBlock(scope: !1046, file: !3, line: 1733, column: 7)
!1046 = distinct !DILexicalBlock(scope: !1042, file: !3, line: 1732, column: 22)
!1047 = !DILocation(line: 1733, column: 7, scope: !1045)
!1048 = !DILocation(line: 1733, column: 7, scope: !1046)
!1049 = !DILocation(line: 1734, column: 4, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1045, file: !3, line: 1733, column: 48)
!1051 = !DILocation(line: 1735, column: 3, scope: !1050)
!1052 = !DILocation(line: 1736, column: 4, scope: !1053)
!1053 = distinct !DILexicalBlock(scope: !1045, file: !3, line: 1735, column: 10)
!1054 = !DILocation(line: 1739, column: 12, scope: !1053)
!1055 = !DILocation(line: 1737, column: 4, scope: !1053)
!1056 = !DILocation(line: 1741, column: 2, scope: !1046)
!1057 = !DILocation(line: 1742, column: 2, scope: !896)
!1058 = !DILocation(line: 1743, column: 1, scope: !896)
!1059 = distinct !DISubprogram(name: "drm_edid_block_checksum", scope: !3, file: !3, line: 1589, type: !808, scopeLine: 1590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!1060 = !DILocalVariable(name: "raw_edid", arg: 1, scope: !1059, file: !3, line: 1589, type: !576)
!1061 = !DILocation(line: 1589, column: 46, scope: !1059)
!1062 = !DILocalVariable(name: "i", scope: !1059, file: !3, line: 1591, type: !139)
!1063 = !DILocation(line: 1591, column: 6, scope: !1059)
!1064 = !DILocalVariable(name: "csum", scope: !1059, file: !3, line: 1592, type: !375)
!1065 = !DILocation(line: 1592, column: 5, scope: !1059)
!1066 = !DILocalVariable(name: "crc", scope: !1059, file: !3, line: 1592, type: !375)
!1067 = !DILocation(line: 1592, column: 15, scope: !1059)
!1068 = !DILocation(line: 1594, column: 9, scope: !1069)
!1069 = distinct !DILexicalBlock(scope: !1059, file: !3, line: 1594, column: 2)
!1070 = !DILocation(line: 1594, column: 7, scope: !1069)
!1071 = !DILocation(line: 1594, column: 14, scope: !1072)
!1072 = distinct !DILexicalBlock(scope: !1069, file: !3, line: 1594, column: 2)
!1073 = !DILocation(line: 1594, column: 16, scope: !1072)
!1074 = !DILocation(line: 1594, column: 2, scope: !1069)
!1075 = !DILocation(line: 1595, column: 11, scope: !1072)
!1076 = !DILocation(line: 1595, column: 20, scope: !1072)
!1077 = !DILocation(line: 1595, column: 8, scope: !1072)
!1078 = !DILocation(line: 1595, column: 3, scope: !1072)
!1079 = !DILocation(line: 1594, column: 36, scope: !1072)
!1080 = !DILocation(line: 1594, column: 2, scope: !1072)
!1081 = distinct !{!1081, !1074, !1082}
!1082 = !DILocation(line: 1595, column: 21, scope: !1069)
!1083 = !DILocation(line: 1597, column: 16, scope: !1059)
!1084 = !DILocation(line: 1597, column: 14, scope: !1059)
!1085 = !DILocation(line: 1597, column: 8, scope: !1059)
!1086 = !DILocation(line: 1597, column: 6, scope: !1059)
!1087 = !DILocation(line: 1599, column: 9, scope: !1059)
!1088 = !DILocation(line: 1599, column: 2, scope: !1059)
!1089 = distinct !DISubprogram(name: "drm_edid_block_checksum_diff", scope: !3, file: !3, line: 1602, type: !1090, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!1090 = !DISubroutineType(types: !1091)
!1091 = !{!559, !576, !375}
!1092 = !DILocalVariable(name: "raw_edid", arg: 1, scope: !1089, file: !3, line: 1602, type: !576)
!1093 = !DILocation(line: 1602, column: 52, scope: !1089)
!1094 = !DILocalVariable(name: "real_checksum", arg: 2, scope: !1089, file: !3, line: 1602, type: !375)
!1095 = !DILocation(line: 1602, column: 65, scope: !1089)
!1096 = !DILocation(line: 1604, column: 6, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1089, file: !3, line: 1604, column: 6)
!1098 = !DILocation(line: 1604, column: 35, scope: !1097)
!1099 = !DILocation(line: 1604, column: 32, scope: !1097)
!1100 = !DILocation(line: 1604, column: 6, scope: !1089)
!1101 = !DILocation(line: 1605, column: 3, scope: !1097)
!1102 = !DILocation(line: 1607, column: 3, scope: !1097)
!1103 = !DILocation(line: 1608, column: 1, scope: !1089)
!1104 = distinct !DISubprogram(name: "drm_edid_is_zero", scope: !3, file: !3, line: 1610, type: !1105, scopeLine: 1611, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!559, !576, !139}
!1107 = !DILocalVariable(name: "in_edid", arg: 1, scope: !1104, file: !3, line: 1610, type: !576)
!1108 = !DILocation(line: 1610, column: 40, scope: !1104)
!1109 = !DILocalVariable(name: "length", arg: 2, scope: !1104, file: !3, line: 1610, type: !139)
!1110 = !DILocation(line: 1610, column: 53, scope: !1104)
!1111 = !DILocation(line: 1612, column: 17, scope: !1112)
!1112 = distinct !DILexicalBlock(scope: !1104, file: !3, line: 1612, column: 6)
!1113 = !DILocation(line: 1612, column: 29, scope: !1112)
!1114 = !DILocation(line: 1612, column: 6, scope: !1112)
!1115 = !DILocation(line: 1612, column: 6, scope: !1104)
!1116 = !DILocation(line: 1613, column: 3, scope: !1112)
!1117 = !DILocation(line: 1615, column: 2, scope: !1104)
!1118 = !DILocation(line: 1616, column: 1, scope: !1104)
!1119 = distinct !DISubprogram(name: "drm_edid_is_valid", scope: !3, file: !3, line: 1754, type: !1120, scopeLine: 1755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!559, !369}
!1122 = !DILocalVariable(name: "edid", arg: 1, scope: !1119, file: !3, line: 1754, type: !369)
!1123 = !DILocation(line: 1754, column: 37, scope: !1119)
!1124 = !DILocalVariable(name: "i", scope: !1119, file: !3, line: 1756, type: !139)
!1125 = !DILocation(line: 1756, column: 6, scope: !1119)
!1126 = !DILocalVariable(name: "raw", scope: !1119, file: !3, line: 1757, type: !522)
!1127 = !DILocation(line: 1757, column: 6, scope: !1119)
!1128 = !DILocation(line: 1757, column: 18, scope: !1119)
!1129 = !DILocation(line: 1757, column: 12, scope: !1119)
!1130 = !DILocation(line: 1759, column: 7, scope: !1131)
!1131 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 1759, column: 6)
!1132 = !DILocation(line: 1759, column: 6, scope: !1119)
!1133 = !DILocation(line: 1760, column: 3, scope: !1131)
!1134 = !DILocation(line: 1762, column: 9, scope: !1135)
!1135 = distinct !DILexicalBlock(scope: !1119, file: !3, line: 1762, column: 2)
!1136 = !DILocation(line: 1762, column: 7, scope: !1135)
!1137 = !DILocation(line: 1762, column: 14, scope: !1138)
!1138 = distinct !DILexicalBlock(scope: !1135, file: !3, line: 1762, column: 2)
!1139 = !DILocation(line: 1762, column: 19, scope: !1138)
!1140 = !DILocation(line: 1762, column: 25, scope: !1138)
!1141 = !DILocation(line: 1762, column: 16, scope: !1138)
!1142 = !DILocation(line: 1762, column: 2, scope: !1135)
!1143 = !DILocation(line: 1763, column: 29, scope: !1144)
!1144 = distinct !DILexicalBlock(scope: !1138, file: !3, line: 1763, column: 7)
!1145 = !DILocation(line: 1763, column: 35, scope: !1144)
!1146 = !DILocation(line: 1763, column: 37, scope: !1144)
!1147 = !DILocation(line: 1763, column: 33, scope: !1144)
!1148 = !DILocation(line: 1763, column: 52, scope: !1144)
!1149 = !DILocation(line: 1763, column: 8, scope: !1144)
!1150 = !DILocation(line: 1763, column: 7, scope: !1138)
!1151 = !DILocation(line: 1764, column: 4, scope: !1144)
!1152 = !DILocation(line: 1763, column: 65, scope: !1144)
!1153 = !DILocation(line: 1762, column: 38, scope: !1138)
!1154 = !DILocation(line: 1762, column: 2, scope: !1138)
!1155 = distinct !{!1155, !1142, !1156}
!1156 = !DILocation(line: 1764, column: 11, scope: !1135)
!1157 = !DILocation(line: 1766, column: 2, scope: !1119)
!1158 = !DILocation(line: 1767, column: 1, scope: !1119)
!1159 = distinct !DISubprogram(name: "drm_add_override_edid_modes", scope: !3, file: !3, line: 1890, type: !1160, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!1160 = !DISubroutineType(types: !1161)
!1161 = !{!139, !1162}
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector", file: !198, line: 1170, size: 9280, elements: !1164)
!1164 = !{!1165, !5421, !5422, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5493, !5979, !5980, !5981, !5982, !5983, !5984, !5985, !5986, !5988, !5989, !5993, !6012, !6013, !6014, !6015, !6016, !6017, !6019, !6021, !6023, !6024, !6147, !6148, !6149, !6150, !6151, !6152, !6153, !6154, !6155, !6163, !6164, !6165, !6166, !6167, !6168, !6169, !6170, !6171}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1163, file: !198, line: 1172, baseType: !1166, size: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_device", file: !191, line: 53, size: 11840, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1185, !4903, !4909, !5086, !5087, !5088, !5089, !5090, !5093, !5094, !5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102, !5103, !5104, !5105, !5106, !5107, !5108, !5111, !5112, !5113, !5114, !5115, !5116, !5119, !5123, !5124, !5409, !5410, !5411, !5414, !5417, !5418}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_dev_list", scope: !1167, file: !191, line: 59, baseType: !562, size: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "if_version", scope: !1167, file: !191, line: 62, baseType: !139, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1167, file: !191, line: 65, baseType: !1172, size: 32, offset: 160)
!1172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1173, line: 19, size: 32, elements: !1174)
!1173 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1174 = !{!1175}
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1172, file: !1173, line: 20, baseType: !1176, size: 32)
!1176 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1177, line: 113, baseType: !1178)
!1177 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1177, line: 111, size: 32, elements: !1179)
!1179 = !{!1180}
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1178, file: !1177, line: 112, baseType: !1181, size: 32)
!1181 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !524, line: 168, baseType: !1182)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !524, line: 166, size: 32, elements: !1183)
!1183 = !{!1184}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1182, file: !524, line: 167, baseType: !139, size: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1167, file: !191, line: 68, baseType: !1186, size: 64, offset: 192)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !97, line: 461, size: 5568, elements: !1188)
!1188 = !{!1189, !4358, !4359, !4362, !4363, !4414, !4505, !4506, !4507, !4508, !4509, !4518, !4623, !4636, !4830, !4831, !4835, !4837, !4838, !4839, !4843, !4849, !4850, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4891, !4892, !4893, !4896, !4899, !4900, !4901, !4902}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1187, file: !97, line: 462, baseType: !1190, size: 512)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !1191, line: 64, size: 512, elements: !1192)
!1191 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!1192 = !{!1193, !1194, !1195, !1197, !1253, !4231, !4352, !4353, !4354, !4355, !4356, !4357}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1190, file: !1191, line: 65, baseType: !648, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1190, file: !1191, line: 66, baseType: !562, size: 128, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1190, file: !1191, line: 67, baseType: !1196, size: 64, offset: 192)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !1190, file: !1191, line: 68, baseType: !1198, size: 64, offset: 256)
!1198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !1191, line: 192, size: 704, elements: !1200)
!1200 = !{!1201, !1202, !1217, !1218}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1199, file: !1191, line: 193, baseType: !562, size: 128)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !1199, file: !1191, line: 194, baseType: !1203, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !1204, line: 83, baseType: !1205)
!1204 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !1204, line: 71, elements: !1206)
!1206 = !{!1207}
!1207 = !DIDerivedType(tag: DW_TAG_member, scope: !1205, file: !1204, line: 72, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1205, file: !1204, line: 72, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !1208, file: !1204, line: 73, baseType: !1211)
!1211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !1204, line: 20, elements: !1212)
!1212 = !{!1213}
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1211, file: !1204, line: 21, baseType: !1214)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !1215, line: 25, baseType: !1216)
!1215 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1215, line: 25, elements: !752)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !1199, file: !1191, line: 195, baseType: !1190, size: 512, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !1199, file: !1191, line: 196, baseType: !1219, size: 64, offset: 640)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !1191, line: 156, size: 192, elements: !1222)
!1222 = !{!1223, !1228, !1233}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1221, file: !1191, line: 157, baseType: !1224, size: 64)
!1224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1225)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DISubroutineType(types: !1227)
!1227 = !{!139, !1198, !1196}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1221, file: !1191, line: 158, baseType: !1229, size: 64, offset: 64)
!1229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DISubroutineType(types: !1232)
!1232 = !{!648, !1198, !1196}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !1221, file: !1191, line: 159, baseType: !1234, size: 64, offset: 128)
!1234 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!139, !1198, !1196, !1238}
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !1191, line: 148, size: 20736, elements: !1240)
!1240 = !{!1241, !1243, !1247, !1248, !1252}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !1239, file: !1191, line: 149, baseType: !1242, size: 192)
!1242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 192, elements: !516)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !1239, file: !1191, line: 150, baseType: !1244, size: 4096, offset: 192)
!1244 = !DICompositeType(tag: DW_TAG_array_type, baseType: !590, size: 4096, elements: !1245)
!1245 = !{!1246}
!1246 = !DISubrange(count: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !1239, file: !1191, line: 151, baseType: !139, size: 32, offset: 4288)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1239, file: !1191, line: 152, baseType: !1249, size: 16384, offset: 4320)
!1249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 16384, elements: !1250)
!1250 = !{!1251}
!1251 = !DISubrange(count: 2048)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !1239, file: !1191, line: 153, baseType: !139, size: 32, offset: 20704)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !1190, file: !1191, line: 69, baseType: !1254, size: 64, offset: 320)
!1254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1255, size: 64)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !1191, line: 138, size: 448, elements: !1256)
!1256 = !{!1257, !1261, !1288, !1290, !4193, !4221, !4225}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1255, file: !1191, line: 139, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1259, size: 64)
!1259 = !DISubroutineType(types: !1260)
!1260 = !{null, !1196}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !1255, file: !1191, line: 140, baseType: !1262, size: 64, offset: 64)
!1262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1264)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !1265, line: 230, size: 128, elements: !1266)
!1265 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!1266 = !{!1267, !1281}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1264, file: !1265, line: 231, baseType: !1268, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = !DISubroutineType(types: !1270)
!1270 = !{!1271, !1196, !1275, !590}
!1271 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !524, line: 60, baseType: !1272)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !1273, line: 73, baseType: !1274)
!1273 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!1274 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !1273, line: 15, baseType: !593)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !1265, line: 30, size: 128, elements: !1277)
!1277 = !{!1278, !1279}
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1276, file: !1265, line: 31, baseType: !648, size: 64)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1276, file: !1265, line: 32, baseType: !1280, size: 16, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !524, line: 19, baseType: !429)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !1264, file: !1265, line: 232, baseType: !1282, size: 64, offset: 64)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DISubroutineType(types: !1284)
!1284 = !{!1271, !1196, !1275, !648, !1285}
!1285 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !524, line: 55, baseType: !1286)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !1273, line: 72, baseType: !1287)
!1287 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !1273, line: 16, baseType: !574)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !1255, file: !1191, line: 141, baseType: !1289, size: 64, offset: 128)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1275, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !1255, file: !1191, line: 142, baseType: !1291, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1292, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1293, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1294)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !1265, line: 84, size: 320, elements: !1295)
!1295 = !{!1296, !1297, !1301, !4190, !4191}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1294, file: !1265, line: 85, baseType: !648, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !1294, file: !1265, line: 86, baseType: !1298, size: 64, offset: 64)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!1280, !1196, !1275, !139}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !1294, file: !1265, line: 88, baseType: !1302, size: 64, offset: 128)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DISubroutineType(types: !1304)
!1304 = !{!1280, !1196, !1305, !139}
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !1265, line: 168, size: 448, elements: !1307)
!1307 = !{!1308, !1309, !1310, !1311, !4185, !4186}
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1306, file: !1265, line: 169, baseType: !1276, size: 128)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1306, file: !1265, line: 170, baseType: !1285, size: 64, offset: 128)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1306, file: !1265, line: 171, baseType: !368, size: 64, offset: 192)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1306, file: !1265, line: 172, baseType: !1312, size: 64, offset: 256)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!1271, !1315, !1196, !1305, !590, !1481, !1285}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !68, line: 916, size: 1856, align: 32, elements: !1317)
!1317 = !{!1318, !1336, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4168, !4169, !4178, !4179, !4180, !4181, !4182, !4183, !4184}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1316, file: !68, line: 920, baseType: !1319, size: 128)
!1319 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1316, file: !68, line: 917, size: 128, elements: !1320)
!1320 = !{!1321, !1327}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1319, file: !68, line: 918, baseType: !1322, size: 64)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1323, line: 58, size: 64, elements: !1324)
!1323 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1324 = !{!1325}
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1322, file: !1323, line: 59, baseType: !1326, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1319, file: !68, line: 919, baseType: !1328, size: 128, align: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !524, line: 216, size: 128, align: 64, elements: !1329)
!1329 = !{!1330, !1332}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1328, file: !524, line: 217, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1328, file: !524, line: 218, baseType: !1333, size: 64, offset: 64)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = !DISubroutineType(types: !1335)
!1335 = !{null, !1331}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1316, file: !68, line: 921, baseType: !1337, size: 128, offset: 128)
!1337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !1338, line: 8, size: 128, elements: !1339)
!1338 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!1339 = !{!1340, !1344}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !1337, file: !1338, line: 9, baseType: !1341, size: 64)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !1343, line: 18, flags: DIFlagFwdDecl)
!1343 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !1337, file: !1338, line: 10, baseType: !1345, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1346, size: 64)
!1346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !1343, line: 89, size: 1536, elements: !1347)
!1347 = !{!1348, !1349, !1359, !1367, !1368, !1383, !4118, !4120, !4132, !4133, !4134, !4135, !4136, !4142, !4143, !4144}
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !1346, file: !1343, line: 91, baseType: !7, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !1346, file: !1343, line: 92, baseType: !1350, size: 32, offset: 32)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !1351, line: 277, baseType: !1352)
!1351 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !1351, line: 277, size: 32, elements: !1353)
!1353 = !{!1354}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1352, file: !1351, line: 277, baseType: !1355, size: 32)
!1355 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !1351, line: 70, baseType: !1356)
!1356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !1351, line: 65, size: 32, elements: !1357)
!1357 = !{!1358}
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !1356, file: !1351, line: 66, baseType: !7, size: 32)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !1346, file: !1343, line: 93, baseType: !1360, size: 128, offset: 64)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !1361, line: 38, size: 128, elements: !1362)
!1361 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!1362 = !{!1363, !1365}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1360, file: !1361, line: 39, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1360, file: !1361, line: 39, baseType: !1366, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !1346, file: !1343, line: 94, baseType: !1345, size: 64, offset: 192)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !1346, file: !1343, line: 95, baseType: !1369, size: 128, offset: 256)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !1343, line: 47, size: 128, elements: !1370)
!1370 = !{!1371, !1380}
!1371 = !DIDerivedType(tag: DW_TAG_member, scope: !1369, file: !1343, line: 48, baseType: !1372, size: 64)
!1372 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1369, file: !1343, line: 48, size: 64, elements: !1373)
!1373 = !{!1374, !1379}
!1374 = !DIDerivedType(tag: DW_TAG_member, scope: !1372, file: !1343, line: 49, baseType: !1375, size: 64)
!1375 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1372, file: !1343, line: 49, size: 64, elements: !1376)
!1376 = !{!1377, !1378}
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1375, file: !1343, line: 50, baseType: !388, size: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1375, file: !1343, line: 50, baseType: !388, size: 32, offset: 32)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !1372, file: !1343, line: 52, baseType: !586, size: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1369, file: !1343, line: 54, baseType: !1381, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !379)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !1346, file: !1343, line: 96, baseType: !1384, size: 64, offset: 384)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !68, line: 610, size: 4224, elements: !1386)
!1386 = !{!1387, !1388, !1389, !1397, !1404, !1405, !1548, !3831, !3832, !3833, !3839, !3840, !3841, !3842, !3843, !3844, !3845, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3855, !3856, !3857, !3858, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !4094, !4102, !4103, !4104, !4114, !4115, !4116, !4117}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !1385, file: !68, line: 611, baseType: !1280, size: 16)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !1385, file: !68, line: 612, baseType: !429, size: 16, offset: 16)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !1385, file: !68, line: 613, baseType: !1390, size: 32, offset: 32)
!1390 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !1391, line: 23, baseType: !1392)
!1391 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1391, line: 21, size: 32, elements: !1393)
!1393 = !{!1394}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1392, file: !1391, line: 22, baseType: !1395, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !524, line: 32, baseType: !1396)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !1273, line: 49, baseType: !7)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !1385, file: !68, line: 614, baseType: !1398, size: 32, offset: 64)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !1391, line: 28, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1391, line: 26, size: 32, elements: !1400)
!1400 = !{!1401}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1399, file: !1391, line: 27, baseType: !1402, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !524, line: 33, baseType: !1403)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !1273, line: 50, baseType: !7)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1385, file: !68, line: 615, baseType: !7, size: 32, offset: 96)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !1385, file: !68, line: 622, baseType: !1406, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1407, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1408)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !68, line: 1864, size: 1536, align: 512, elements: !1409)
!1409 = !{!1410, !1414, !1424, !1428, !1434, !1438, !1442, !1446, !1450, !1454, !1458, !1459, !1465, !1469, !1495, !1524, !1528, !1534, !1539, !1543, !1544}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1408, file: !68, line: 1865, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{!1345, !1384, !1345, !7}
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !1408, file: !68, line: 1866, baseType: !1415, size: 64, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DISubroutineType(types: !1417)
!1417 = !{!648, !1345, !1384, !1418}
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !1420, line: 10, size: 128, elements: !1421)
!1420 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!1421 = !{!1422, !1423}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1419, file: !1420, line: 11, baseType: !670, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !1419, file: !1420, line: 12, baseType: !368, size: 64, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !1408, file: !68, line: 1867, baseType: !1425, size: 64, offset: 128)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DISubroutineType(types: !1427)
!1427 = !{!139, !1384, !139}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !1408, file: !68, line: 1868, baseType: !1429, size: 64, offset: 192)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!1432, !1384, !139}
!1432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1433 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !68, line: 581, flags: DIFlagFwdDecl)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !1408, file: !68, line: 1870, baseType: !1435, size: 64, offset: 256)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1436, size: 64)
!1436 = !DISubroutineType(types: !1437)
!1437 = !{!139, !1345, !590, !139}
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !1408, file: !68, line: 1872, baseType: !1439, size: 64, offset: 320)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DISubroutineType(types: !1441)
!1441 = !{!139, !1384, !1345, !1280, !559}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1408, file: !68, line: 1873, baseType: !1443, size: 64, offset: 384)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DISubroutineType(types: !1445)
!1445 = !{!139, !1345, !1384, !1345}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !1408, file: !68, line: 1874, baseType: !1447, size: 64, offset: 448)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DISubroutineType(types: !1449)
!1449 = !{!139, !1384, !1345}
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !1408, file: !68, line: 1875, baseType: !1451, size: 64, offset: 512)
!1451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1452 = !DISubroutineType(types: !1453)
!1453 = !{!139, !1384, !1345, !648}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !1408, file: !68, line: 1876, baseType: !1455, size: 64, offset: 576)
!1455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1456, size: 64)
!1456 = !DISubroutineType(types: !1457)
!1457 = !{!139, !1384, !1345, !1280}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !1408, file: !68, line: 1877, baseType: !1447, size: 64, offset: 640)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !1408, file: !68, line: 1878, baseType: !1460, size: 64, offset: 704)
!1460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!1461 = !DISubroutineType(types: !1462)
!1462 = !{!139, !1384, !1345, !1280, !1463}
!1463 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !524, line: 16, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !524, line: 13, baseType: !388)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !1408, file: !68, line: 1879, baseType: !1466, size: 64, offset: 768)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DISubroutineType(types: !1468)
!1468 = !{!139, !1384, !1345, !1384, !1345, !7}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !1408, file: !68, line: 1881, baseType: !1470, size: 64, offset: 832)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1471, size: 64)
!1471 = !DISubroutineType(types: !1472)
!1472 = !{!139, !1345, !1473}
!1473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1474, size: 64)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !68, line: 219, size: 640, elements: !1475)
!1475 = !{!1476, !1477, !1478, !1479, !1480, !1484, !1492, !1493, !1494}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !1474, file: !68, line: 220, baseType: !7, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !1474, file: !68, line: 221, baseType: !1280, size: 16, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !1474, file: !68, line: 222, baseType: !1390, size: 32, offset: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !1474, file: !68, line: 223, baseType: !1398, size: 32, offset: 96)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !1474, file: !68, line: 224, baseType: !1481, size: 64, offset: 128)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !524, line: 46, baseType: !1482)
!1482 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !1273, line: 88, baseType: !1483)
!1483 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !1474, file: !68, line: 225, baseType: !1485, size: 128, offset: 192)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1486, line: 13, size: 128, elements: !1487)
!1486 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1487 = !{!1488, !1491}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1485, file: !1486, line: 14, baseType: !1489, size: 64)
!1489 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1486, line: 8, baseType: !1490)
!1490 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !378, line: 30, baseType: !1483)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1485, file: !1486, line: 15, baseType: !593, size: 64, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !1474, file: !68, line: 226, baseType: !1485, size: 128, offset: 320)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !1474, file: !68, line: 227, baseType: !1485, size: 128, offset: 448)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !1474, file: !68, line: 234, baseType: !1315, size: 64, offset: 576)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !1408, file: !68, line: 1882, baseType: !1496, size: 64, offset: 896)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DISubroutineType(types: !1498)
!1498 = !{!139, !1499, !1501, !388, !7}
!1499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1337)
!1501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1502, size: 64)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !1503, line: 22, size: 1152, elements: !1504)
!1503 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!1504 = !{!1505, !1506, !1507, !1508, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !1502, file: !1503, line: 23, baseType: !388, size: 32)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1502, file: !1503, line: 24, baseType: !1280, size: 16, offset: 32)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !1502, file: !1503, line: 25, baseType: !7, size: 32, offset: 64)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !1502, file: !1503, line: 26, baseType: !1509, size: 32, offset: 96)
!1509 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !524, line: 104, baseType: !388)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1502, file: !1503, line: 27, baseType: !586, size: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !1502, file: !1503, line: 28, baseType: !586, size: 64, offset: 192)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1502, file: !1503, line: 37, baseType: !586, size: 64, offset: 256)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !1502, file: !1503, line: 38, baseType: !1463, size: 32, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !1502, file: !1503, line: 39, baseType: !1463, size: 32, offset: 352)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1502, file: !1503, line: 40, baseType: !1390, size: 32, offset: 384)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1502, file: !1503, line: 41, baseType: !1398, size: 32, offset: 416)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1502, file: !1503, line: 42, baseType: !1481, size: 64, offset: 448)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !1502, file: !1503, line: 43, baseType: !1485, size: 128, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !1502, file: !1503, line: 44, baseType: !1485, size: 128, offset: 640)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1502, file: !1503, line: 45, baseType: !1485, size: 128, offset: 768)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !1502, file: !1503, line: 46, baseType: !1485, size: 128, offset: 896)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1502, file: !1503, line: 47, baseType: !586, size: 64, offset: 1024)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !1502, file: !1503, line: 48, baseType: !586, size: 64, offset: 1088)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !1408, file: !68, line: 1883, baseType: !1525, size: 64, offset: 960)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DISubroutineType(types: !1527)
!1527 = !{!1271, !1345, !590, !1285}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !1408, file: !68, line: 1884, baseType: !1529, size: 64, offset: 1024)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DISubroutineType(types: !1531)
!1531 = !{!139, !1384, !1532, !586, !586}
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !68, line: 50, flags: DIFlagFwdDecl)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !1408, file: !68, line: 1886, baseType: !1535, size: 64, offset: 1088)
!1535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1536, size: 64)
!1536 = !DISubroutineType(types: !1537)
!1537 = !{!139, !1384, !1538, !139}
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1485, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !1408, file: !68, line: 1887, baseType: !1540, size: 64, offset: 1152)
!1540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1541, size: 64)
!1541 = !DISubroutineType(types: !1542)
!1542 = !{!139, !1384, !1345, !1315, !7, !1280}
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !1408, file: !68, line: 1890, baseType: !1455, size: 64, offset: 1216)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !1408, file: !68, line: 1891, baseType: !1545, size: 64, offset: 1280)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!139, !1384, !1432, !139}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !1385, file: !68, line: 623, baseType: !1549, size: 64, offset: 192)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !68, line: 1416, size: 9472, elements: !1551)
!1551 = !{!1552, !1553, !1554, !1555, !1556, !1557, !1604, !3440, !3522, !3605, !3609, !3610, !3611, !3612, !3613, !3614, !3615, !3616, !3621, !3625, !3626, !3629, !3630, !3633, !3634, !3635, !3676, !3702, !3703, !3704, !3705, !3706, !3707, !3710, !3711, !3718, !3719, !3721, !3722, !3723, !3782, !3783, !3798, !3799, !3800, !3801, !3802, !3805, !3806, !3807, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !1550, file: !68, line: 1417, baseType: !562, size: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !1550, file: !68, line: 1418, baseType: !1463, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !1550, file: !68, line: 1419, baseType: !379, size: 8, offset: 160)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !1550, file: !68, line: 1420, baseType: !574, size: 64, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !1550, file: !68, line: 1421, baseType: !1481, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !1550, file: !68, line: 1422, baseType: !1558, size: 64, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !68, line: 2228, size: 576, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1570, !1574, !1578, !1582, !1583, !1584, !1594, !1597, !1598, !1599, !1601, !1602, !1603}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1559, file: !68, line: 2229, baseType: !648, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !1559, file: !68, line: 2230, baseType: !139, size: 32, offset: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !1559, file: !68, line: 2238, baseType: !1564, size: 64, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DISubroutineType(types: !1566)
!1566 = !{!139, !1567}
!1567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1568, size: 64)
!1568 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !1569, line: 28, flags: DIFlagFwdDecl)
!1569 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1559, file: !68, line: 2239, baseType: !1571, size: 64, offset: 192)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1573)
!1573 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !68, line: 70, flags: DIFlagFwdDecl)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !1559, file: !68, line: 2240, baseType: !1575, size: 64, offset: 256)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = !DISubroutineType(types: !1577)
!1577 = !{!1345, !1558, !139, !648, !368}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !1559, file: !68, line: 2242, baseType: !1579, size: 64, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DISubroutineType(types: !1581)
!1581 = !{null, !1549}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1559, file: !68, line: 2243, baseType: !651, size: 64, offset: 384)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1559, file: !68, line: 2244, baseType: !1558, size: 64, offset: 448)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !1559, file: !68, line: 2245, baseType: !1585, size: 64, offset: 512)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !524, line: 182, size: 64, elements: !1586)
!1586 = !{!1587}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1585, file: !524, line: 183, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !524, line: 186, size: 128, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1589, file: !524, line: 187, baseType: !1588, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !1589, file: !524, line: 187, baseType: !1593, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !1559, file: !68, line: 2247, baseType: !1595, offset: 576)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !1596, line: 187, elements: !752)
!1596 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !1559, file: !68, line: 2248, baseType: !1595, offset: 576)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !1559, file: !68, line: 2249, baseType: !1595, offset: 576)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !1559, file: !68, line: 2250, baseType: !1600, offset: 576)
!1600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1595, elements: !516)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !1559, file: !68, line: 2252, baseType: !1595, offset: 576)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !1559, file: !68, line: 2253, baseType: !1595, offset: 576)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !1559, file: !68, line: 2254, baseType: !1595, offset: 576)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !1550, file: !68, line: 1423, baseType: !1605, size: 64, offset: 384)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1607)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !68, line: 1935, size: 1472, elements: !1608)
!1608 = !{!1609, !1613, !1617, !1618, !1622, !1628, !1632, !1633, !1634, !1638, !1642, !1643, !1644, !1645, !1651, !1656, !1657, !1713, !1714, !1715, !1716, !3424, !3439}
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !1607, file: !68, line: 1936, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DISubroutineType(types: !1612)
!1612 = !{!1384, !1549}
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !1607, file: !68, line: 1937, baseType: !1614, size: 64, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1615, size: 64)
!1615 = !DISubroutineType(types: !1616)
!1616 = !{null, !1384}
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !1607, file: !68, line: 1938, baseType: !1614, size: 64, offset: 128)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !1607, file: !68, line: 1940, baseType: !1619, size: 64, offset: 192)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DISubroutineType(types: !1621)
!1621 = !{null, !1384, !139}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !1607, file: !68, line: 1941, baseType: !1623, size: 64, offset: 256)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DISubroutineType(types: !1625)
!1625 = !{!139, !1384, !1626}
!1626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1627, size: 64)
!1627 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !38, line: 40, flags: DIFlagFwdDecl)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !1607, file: !68, line: 1942, baseType: !1629, size: 64, offset: 320)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{!139, !1384}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !1607, file: !68, line: 1943, baseType: !1614, size: 64, offset: 384)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !1607, file: !68, line: 1944, baseType: !1579, size: 64, offset: 448)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !1607, file: !68, line: 1945, baseType: !1635, size: 64, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DISubroutineType(types: !1637)
!1637 = !{!139, !1549, !139}
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !1607, file: !68, line: 1946, baseType: !1639, size: 64, offset: 576)
!1639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1640, size: 64)
!1640 = !DISubroutineType(types: !1641)
!1641 = !{!139, !1549}
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !1607, file: !68, line: 1947, baseType: !1639, size: 64, offset: 640)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !1607, file: !68, line: 1948, baseType: !1639, size: 64, offset: 704)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !1607, file: !68, line: 1949, baseType: !1639, size: 64, offset: 768)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !1607, file: !68, line: 1950, baseType: !1646, size: 64, offset: 832)
!1646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1647, size: 64)
!1647 = !DISubroutineType(types: !1648)
!1648 = !{!139, !1345, !1649}
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !68, line: 57, flags: DIFlagFwdDecl)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !1607, file: !68, line: 1951, baseType: !1652, size: 64, offset: 896)
!1652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1653, size: 64)
!1653 = !DISubroutineType(types: !1654)
!1654 = !{!139, !1549, !1655, !590}
!1655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !1607, file: !68, line: 1952, baseType: !1579, size: 64, offset: 960)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !1607, file: !68, line: 1954, baseType: !1658, size: 64, offset: 1024)
!1658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1659, size: 64)
!1659 = !DISubroutineType(types: !1660)
!1660 = !{!139, !1661, !1345}
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1663, line: 16, size: 896, elements: !1664)
!1663 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1686, !1708, !1709, !1712}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1662, file: !1663, line: 17, baseType: !590, size: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1662, file: !1663, line: 18, baseType: !1285, size: 64, offset: 64)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1662, file: !1663, line: 19, baseType: !1285, size: 64, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1662, file: !1663, line: 20, baseType: !1285, size: 64, offset: 192)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1662, file: !1663, line: 21, baseType: !1285, size: 64, offset: 256)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1662, file: !1663, line: 22, baseType: !1481, size: 64, offset: 320)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1662, file: !1663, line: 23, baseType: !1481, size: 64, offset: 384)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1662, file: !1663, line: 24, baseType: !1673, size: 192, offset: 448)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1674, line: 53, size: 192, elements: !1675)
!1674 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1675 = !{!1676, !1684, !1685}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1673, file: !1674, line: 54, baseType: !1677, size: 64)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !1678, line: 13, baseType: !1679)
!1678 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !524, line: 175, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !524, line: 173, size: 64, elements: !1681)
!1681 = !{!1682}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !1680, file: !524, line: 174, baseType: !1683, size: 64)
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !376, line: 22, baseType: !1490)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1673, file: !1674, line: 55, baseType: !1203, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1673, file: !1674, line: 59, baseType: !562, size: 128, offset: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1662, file: !1663, line: 25, baseType: !1687, size: 64, offset: 640)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!1689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1663, line: 31, size: 256, elements: !1690)
!1690 = !{!1691, !1696, !1700, !1704}
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1689, file: !1663, line: 32, baseType: !1692, size: 64)
!1692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1693, size: 64)
!1693 = !DISubroutineType(types: !1694)
!1694 = !{!368, !1661, !1695}
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1481, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1689, file: !1663, line: 33, baseType: !1697, size: 64, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1698, size: 64)
!1698 = !DISubroutineType(types: !1699)
!1699 = !{null, !1661, !368}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1689, file: !1663, line: 34, baseType: !1701, size: 64, offset: 128)
!1701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1702, size: 64)
!1702 = !DISubroutineType(types: !1703)
!1703 = !{!368, !1661, !368, !1695}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1689, file: !1663, line: 35, baseType: !1705, size: 64, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1706, size: 64)
!1706 = !DISubroutineType(types: !1707)
!1707 = !{!139, !1661, !368}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1662, file: !1663, line: 26, baseType: !139, size: 32, offset: 704)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1662, file: !1663, line: 27, baseType: !1710, size: 64, offset: 768)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1316)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1662, file: !1663, line: 28, baseType: !368, size: 64, offset: 832)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !1607, file: !68, line: 1955, baseType: !1658, size: 64, offset: 1088)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !1607, file: !68, line: 1956, baseType: !1658, size: 64, offset: 1152)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !1607, file: !68, line: 1957, baseType: !1658, size: 64, offset: 1216)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !1607, file: !68, line: 1963, baseType: !1717, size: 64, offset: 1280)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!139, !1549, !1720, !523}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !1722, line: 68, size: 512, align: 128, elements: !1723)
!1722 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!1723 = !{!1724, !1725, !3416, !3423}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1721, file: !1722, line: 69, baseType: !574, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, scope: !1721, file: !1722, line: 77, baseType: !1726, size: 320, offset: 64)
!1726 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1721, file: !1722, line: 77, size: 320, elements: !1727)
!1727 = !{!1728, !1901, !1906, !1934, !1942, !1948, !3347, !3415}
!1728 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 78, baseType: !1729, size: 320)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 78, size: 320, elements: !1730)
!1730 = !{!1731, !1732, !1899, !1900}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1729, file: !1722, line: 84, baseType: !562, size: 128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !1729, file: !1722, line: 86, baseType: !1733, size: 64, offset: 128)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !68, line: 451, size: 1216, align: 64, elements: !1735)
!1735 = !{!1736, !1737, !1744, !1745, !1746, !1761, !1770, !1771, !1772, !1773, !1892, !1893, !1896, !1897, !1898}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !1734, file: !68, line: 452, baseType: !1384, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !1734, file: !68, line: 453, baseType: !1738, size: 128, offset: 64)
!1738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1739, line: 292, size: 128, elements: !1740)
!1739 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1740 = !{!1741, !1742, !1743}
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1738, file: !1739, line: 293, baseType: !1203)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1738, file: !1739, line: 295, baseType: !523, size: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1738, file: !1739, line: 296, baseType: !368, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1734, file: !68, line: 454, baseType: !523, size: 32, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !1734, file: !68, line: 455, baseType: !1181, size: 32, offset: 224)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !1734, file: !68, line: 460, baseType: !1747, size: 128, offset: 256)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !1748, line: 125, size: 128, elements: !1749)
!1748 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!1749 = !{!1750, !1760}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1747, file: !1748, line: 126, baseType: !1751, size: 64)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !1748, line: 31, size: 64, elements: !1752)
!1752 = !{!1753}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1751, file: !1748, line: 32, baseType: !1754, size: 64)
!1754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1755, size: 64)
!1755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !1748, line: 24, size: 192, align: 64, elements: !1756)
!1756 = !{!1757, !1758, !1759}
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !1755, file: !1748, line: 25, baseType: !574, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !1755, file: !1748, line: 26, baseType: !1754, size: 64, offset: 64)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !1755, file: !1748, line: 27, baseType: !1754, size: 64, offset: 128)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1747, file: !1748, line: 127, baseType: !1754, size: 64, offset: 64)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !1734, file: !68, line: 461, baseType: !1762, size: 256, offset: 384)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1763, line: 35, size: 256, elements: !1764)
!1763 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1764 = !{!1765, !1766, !1767, !1769}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1762, file: !1763, line: 36, baseType: !1677, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1762, file: !1763, line: 42, baseType: !1677, size: 64, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1762, file: !1763, line: 46, baseType: !1768, offset: 128)
!1768 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !1204, line: 29, baseType: !1211)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1762, file: !1763, line: 47, baseType: !562, size: 128, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !1734, file: !68, line: 462, baseType: !574, size: 64, offset: 640)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !1734, file: !68, line: 463, baseType: !574, size: 64, offset: 704)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !1734, file: !68, line: 464, baseType: !574, size: 64, offset: 768)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !1734, file: !68, line: 465, baseType: !1774, size: 64, offset: 832)
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1776)
!1776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !68, line: 367, size: 1408, elements: !1777)
!1777 = !{!1778, !1782, !1786, !1790, !1794, !1798, !1804, !1810, !1814, !1819, !1823, !1827, !1831, !1857, !1861, !1867, !1868, !1869, !1873, !1877, !1881, !1888}
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !1776, file: !68, line: 368, baseType: !1779, size: 64)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DISubroutineType(types: !1781)
!1781 = !{!139, !1720, !1626}
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !1776, file: !68, line: 369, baseType: !1783, size: 64, offset: 64)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = !DISubroutineType(types: !1785)
!1785 = !{!139, !1315, !1720}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !1776, file: !68, line: 372, baseType: !1787, size: 64, offset: 128)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = !DISubroutineType(types: !1789)
!1789 = !{!139, !1733, !1626}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !1776, file: !68, line: 375, baseType: !1791, size: 64, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DISubroutineType(types: !1793)
!1793 = !{!139, !1720}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !1776, file: !68, line: 381, baseType: !1795, size: 64, offset: 256)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DISubroutineType(types: !1797)
!1797 = !{!139, !1315, !1733, !565, !7}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !1776, file: !68, line: 383, baseType: !1799, size: 64, offset: 320)
!1799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1800, size: 64)
!1800 = !DISubroutineType(types: !1801)
!1801 = !{null, !1802}
!1802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1803 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !68, line: 290, flags: DIFlagFwdDecl)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !1776, file: !68, line: 385, baseType: !1805, size: 64, offset: 384)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = !DISubroutineType(types: !1807)
!1807 = !{!139, !1315, !1733, !1481, !7, !7, !1808, !1809}
!1808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1720, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !368, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !1776, file: !68, line: 388, baseType: !1811, size: 64, offset: 448)
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DISubroutineType(types: !1813)
!1813 = !{!139, !1315, !1733, !1481, !7, !7, !1720, !368}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !1776, file: !68, line: 393, baseType: !1815, size: 64, offset: 512)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!1818, !1733, !1818}
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !524, line: 125, baseType: !586)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !1776, file: !68, line: 394, baseType: !1820, size: 64, offset: 576)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DISubroutineType(types: !1822)
!1822 = !{null, !1720, !7, !7}
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !1776, file: !68, line: 395, baseType: !1824, size: 64, offset: 640)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DISubroutineType(types: !1826)
!1826 = !{!139, !1720, !523}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !1776, file: !68, line: 396, baseType: !1828, size: 64, offset: 704)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = !DISubroutineType(types: !1830)
!1830 = !{null, !1720}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !1776, file: !68, line: 397, baseType: !1832, size: 64, offset: 768)
!1832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1833 = !DISubroutineType(types: !1834)
!1834 = !{!1271, !1835, !1855}
!1835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1836, size: 64)
!1836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !68, line: 320, size: 384, elements: !1837)
!1837 = !{!1838, !1839, !1840, !1844, !1845, !1846, !1847, !1848}
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1836, file: !68, line: 321, baseType: !1315, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1836, file: !68, line: 326, baseType: !1481, size: 64, offset: 64)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1836, file: !68, line: 327, baseType: !1841, size: 64, offset: 128)
!1841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!1842 = !DISubroutineType(types: !1843)
!1843 = !{null, !1835, !593, !593}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1836, file: !68, line: 328, baseType: !368, size: 64, offset: 192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1836, file: !68, line: 329, baseType: !139, size: 32, offset: 256)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1836, file: !68, line: 330, baseType: !530, size: 16, offset: 288)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1836, file: !68, line: 331, baseType: !530, size: 16, offset: 304)
!1848 = !DIDerivedType(tag: DW_TAG_member, scope: !1836, file: !68, line: 332, baseType: !1849, size: 64, offset: 320)
!1849 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1836, file: !68, line: 332, size: 64, elements: !1850)
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1849, file: !68, line: 333, baseType: !7, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1849, file: !68, line: 334, baseType: !1853, size: 64)
!1853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1854, size: 64)
!1854 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !68, line: 334, flags: DIFlagFwdDecl)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !68, line: 64, flags: DIFlagFwdDecl)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !1776, file: !68, line: 402, baseType: !1858, size: 64, offset: 832)
!1858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1859, size: 64)
!1859 = !DISubroutineType(types: !1860)
!1860 = !{!139, !1733, !1720, !1720, !30}
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !1776, file: !68, line: 404, baseType: !1862, size: 64, offset: 896)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DISubroutineType(types: !1864)
!1864 = !{!559, !1720, !1865}
!1865 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1866, line: 305, baseType: !7)
!1866 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !1776, file: !68, line: 405, baseType: !1828, size: 64, offset: 960)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !1776, file: !68, line: 406, baseType: !1791, size: 64, offset: 1024)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !1776, file: !68, line: 407, baseType: !1870, size: 64, offset: 1088)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = !DISubroutineType(types: !1872)
!1872 = !{!139, !1720, !574, !574}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !1776, file: !68, line: 409, baseType: !1874, size: 64, offset: 1152)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DISubroutineType(types: !1876)
!1876 = !{null, !1720, !589, !589}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !1776, file: !68, line: 410, baseType: !1878, size: 64, offset: 1216)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = !DISubroutineType(types: !1880)
!1880 = !{!139, !1733, !1720}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !1776, file: !68, line: 413, baseType: !1882, size: 64, offset: 1280)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DISubroutineType(types: !1884)
!1884 = !{!139, !1885, !1315, !1887}
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !68, line: 61, flags: DIFlagFwdDecl)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !1776, file: !68, line: 415, baseType: !1889, size: 64, offset: 1344)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DISubroutineType(types: !1891)
!1891 = !{null, !1315}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1734, file: !68, line: 466, baseType: !574, size: 64, offset: 896)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !1734, file: !68, line: 467, baseType: !1894, size: 32, offset: 960)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1895, line: 8, baseType: !388)
!1895 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !1734, file: !68, line: 468, baseType: !1203, offset: 992)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !1734, file: !68, line: 469, baseType: !562, size: 128, offset: 1024)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1734, file: !68, line: 470, baseType: !368, size: 64, offset: 1152)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1729, file: !1722, line: 87, baseType: !574, size: 64, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1729, file: !1722, line: 94, baseType: !574, size: 64, offset: 256)
!1901 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 96, baseType: !1902, size: 64)
!1902 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 96, size: 64, elements: !1903)
!1903 = !{!1904}
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1902, file: !1722, line: 101, baseType: !1905, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !524, line: 143, baseType: !586)
!1906 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 103, baseType: !1907, size: 320)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 103, size: 320, elements: !1908)
!1908 = !{!1909, !1919, !1922, !1923}
!1909 = !DIDerivedType(tag: DW_TAG_member, scope: !1907, file: !1722, line: 104, baseType: !1910, size: 128)
!1910 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1907, file: !1722, line: 104, size: 128, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1910, file: !1722, line: 105, baseType: !562, size: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, scope: !1910, file: !1722, line: 106, baseType: !1914, size: 128)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1910, file: !1722, line: 106, size: 128, elements: !1915)
!1915 = !{!1916, !1917, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1914, file: !1722, line: 107, baseType: !1720, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1914, file: !1722, line: 109, baseType: !139, size: 32, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1914, file: !1722, line: 110, baseType: !139, size: 32, offset: 96)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1907, file: !1722, line: 117, baseType: !1920, size: 64, offset: 128)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !1722, line: 117, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1907, file: !1722, line: 119, baseType: !368, size: 64, offset: 192)
!1923 = !DIDerivedType(tag: DW_TAG_member, scope: !1907, file: !1722, line: 120, baseType: !1924, size: 64, offset: 256)
!1924 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1907, file: !1722, line: 120, size: 64, elements: !1925)
!1925 = !{!1926, !1927, !1928}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1924, file: !1722, line: 121, baseType: !368, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1924, file: !1722, line: 122, baseType: !574, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, scope: !1924, file: !1722, line: 123, baseType: !1929, size: 32)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1924, file: !1722, line: 123, size: 32, elements: !1930)
!1930 = !{!1931, !1932, !1933}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1929, file: !1722, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1929, file: !1722, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1929, file: !1722, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 130, baseType: !1935, size: 192)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 130, size: 192, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1935, file: !1722, line: 131, baseType: !574, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1935, file: !1722, line: 134, baseType: !379, size: 8, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1935, file: !1722, line: 135, baseType: !379, size: 8, offset: 72)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1935, file: !1722, line: 136, baseType: !1181, size: 32, offset: 96)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1935, file: !1722, line: 137, baseType: !7, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 139, baseType: !1943, size: 256)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 139, size: 256, elements: !1944)
!1944 = !{!1945, !1946, !1947}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1943, file: !1722, line: 140, baseType: !574, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1943, file: !1722, line: 141, baseType: !1181, size: 32, offset: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1943, file: !1722, line: 143, baseType: !562, size: 128, offset: 128)
!1948 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 145, baseType: !1949, size: 256)
!1949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 145, size: 256, elements: !1950)
!1950 = !{!1951, !1952, !1955, !1956, !3346}
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1949, file: !1722, line: 146, baseType: !574, size: 64)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1949, file: !1722, line: 147, baseType: !1953, size: 64, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1954, line: 509, baseType: !1720)
!1954 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1949, file: !1722, line: 148, baseType: !574, size: 64, offset: 128)
!1956 = !DIDerivedType(tag: DW_TAG_member, scope: !1949, file: !1722, line: 149, baseType: !1957, size: 64, offset: 192)
!1957 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1949, file: !1722, line: 149, size: 64, elements: !1958)
!1958 = !{!1959, !3345}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1957, file: !1722, line: 150, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1961, size: 64)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !1722, line: 388, size: 7296, elements: !1962)
!1962 = !{!1963, !3343}
!1963 = !DIDerivedType(tag: DW_TAG_member, scope: !1961, file: !1722, line: 389, baseType: !1964, size: 7296)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1961, file: !1722, line: 389, size: 7296, elements: !1965)
!1965 = !{!1966, !2084, !2085, !2086, !2090, !2091, !2092, !2093, !2094, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2133, !2139, !2142, !2181, !2182, !3327, !3328, !3331, !3332, !3333, !3336, !3337, !3338, !3341, !3342}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1964, file: !1722, line: 390, baseType: !1967, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !1722, line: 305, size: 1472, elements: !1969)
!1969 = !{!1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1984, !1985, !1990, !1991, !1994, !2078, !2079, !2080, !2081, !2082}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1968, file: !1722, line: 308, baseType: !574, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1968, file: !1722, line: 309, baseType: !574, size: 64, offset: 64)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1968, file: !1722, line: 313, baseType: !1967, size: 64, offset: 128)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1968, file: !1722, line: 313, baseType: !1967, size: 64, offset: 192)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1968, file: !1722, line: 315, baseType: !1755, size: 192, align: 64, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1968, file: !1722, line: 323, baseType: !574, size: 64, offset: 448)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1968, file: !1722, line: 327, baseType: !1960, size: 64, offset: 512)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1968, file: !1722, line: 333, baseType: !1978, size: 64, offset: 576)
!1978 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1954, line: 284, baseType: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1954, line: 284, size: 64, elements: !1980)
!1980 = !{!1981}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1979, file: !1954, line: 284, baseType: !1982, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1983, line: 19, baseType: !574)
!1983 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1968, file: !1722, line: 334, baseType: !574, size: 64, offset: 640)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1968, file: !1722, line: 343, baseType: !1986, size: 256, offset: 704)
!1986 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1968, file: !1722, line: 340, size: 256, elements: !1987)
!1987 = !{!1988, !1989}
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1986, file: !1722, line: 341, baseType: !1755, size: 192, align: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1986, file: !1722, line: 342, baseType: !574, size: 64, offset: 192)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1968, file: !1722, line: 351, baseType: !562, size: 128, offset: 960)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1968, file: !1722, line: 353, baseType: !1992, size: 64, offset: 1088)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !1722, line: 353, flags: DIFlagFwdDecl)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1968, file: !1722, line: 356, baseType: !1995, size: 64, offset: 1152)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1997)
!1997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !38, line: 557, size: 832, elements: !1998)
!1998 = !{!1999, !2003, !2004, !2008, !2012, !2052, !2056, !2060, !2064, !2065, !2066, !2070, !2074}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1997, file: !38, line: 558, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{null, !1967}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1997, file: !38, line: 559, baseType: !2000, size: 64, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1997, file: !38, line: 560, baseType: !2005, size: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DISubroutineType(types: !2007)
!2007 = !{!139, !1967, !574}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1997, file: !38, line: 561, baseType: !2009, size: 64, offset: 192)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!139, !1967}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1997, file: !38, line: 562, baseType: !2013, size: 64, offset: 256)
!2013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2014, size: 64)
!2014 = !DISubroutineType(types: !2015)
!2015 = !{!2016, !2017}
!2016 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !1722, line: 682, baseType: !7)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !38, line: 508, size: 768, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025, !2032, !2039, !2045, !2046, !2047, !2049, !2051}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !2018, file: !38, line: 509, baseType: !1967, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2018, file: !38, line: 510, baseType: !7, size: 32, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2018, file: !38, line: 511, baseType: !523, size: 32, offset: 96)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !2018, file: !38, line: 512, baseType: !574, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2018, file: !38, line: 513, baseType: !574, size: 64, offset: 192)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2018, file: !38, line: 514, baseType: !2026, size: 64, offset: 256)
!2026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2027, size: 64)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1954, line: 385, baseType: !2028)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1954, line: 385, size: 64, elements: !2029)
!2029 = !{!2030}
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !2028, file: !1954, line: 385, baseType: !2031, size: 64)
!2031 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1983, line: 15, baseType: !574)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2018, file: !38, line: 516, baseType: !2033, size: 64, offset: 320)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1954, line: 359, baseType: !2035)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1954, line: 359, size: 64, elements: !2036)
!2036 = !{!2037}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !2035, file: !1954, line: 359, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1983, line: 16, baseType: !574)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !2018, file: !38, line: 519, baseType: !2040, size: 64, offset: 384)
!2040 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1983, line: 21, baseType: !2041)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1983, line: 21, size: 64, elements: !2042)
!2042 = !{!2043}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2041, file: !1983, line: 21, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1983, line: 14, baseType: !574)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !2018, file: !38, line: 521, baseType: !1720, size: 64, offset: 448)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2018, file: !38, line: 522, baseType: !1720, size: 64, offset: 512)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !2018, file: !38, line: 528, baseType: !2048, size: 64, offset: 576)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2018, file: !38, line: 532, baseType: !2050, size: 64, offset: 640)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !2018, file: !38, line: 536, baseType: !1953, size: 64, offset: 704)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1997, file: !38, line: 563, baseType: !2053, size: 64, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DISubroutineType(types: !2055)
!2055 = !{!2016, !2017, !37}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1997, file: !38, line: 565, baseType: !2057, size: 64, offset: 384)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{null, !2017, !574, !574}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1997, file: !38, line: 567, baseType: !2061, size: 64, offset: 448)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!574, !1967}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1997, file: !38, line: 571, baseType: !2013, size: 64, offset: 512)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1997, file: !38, line: 574, baseType: !2013, size: 64, offset: 576)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1997, file: !38, line: 579, baseType: !2067, size: 64, offset: 640)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!139, !1967, !574, !368, !139, !139}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1997, file: !38, line: 585, baseType: !2071, size: 64, offset: 704)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{!648, !1967}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1997, file: !38, line: 615, baseType: !2075, size: 64, offset: 768)
!2075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2076, size: 64)
!2076 = !DISubroutineType(types: !2077)
!2077 = !{!1720, !1967, !574}
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1968, file: !1722, line: 359, baseType: !574, size: 64, offset: 1216)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1968, file: !1722, line: 361, baseType: !1315, size: 64, offset: 1280)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1968, file: !1722, line: 362, baseType: !368, size: 64, offset: 1344)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1968, file: !1722, line: 365, baseType: !1677, size: 64, offset: 1408)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1968, file: !1722, line: 373, baseType: !2083, offset: 1472)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !1722, line: 296, elements: !752)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1964, file: !1722, line: 391, baseType: !1751, size: 64, offset: 64)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1964, file: !1722, line: 392, baseType: !586, size: 64, offset: 128)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1964, file: !1722, line: 394, baseType: !2087, size: 64, offset: 192)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!574, !1315, !574, !574, !574, !574}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1964, file: !1722, line: 398, baseType: !574, size: 64, offset: 256)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1964, file: !1722, line: 399, baseType: !574, size: 64, offset: 320)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1964, file: !1722, line: 405, baseType: !574, size: 64, offset: 384)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1964, file: !1722, line: 406, baseType: !574, size: 64, offset: 448)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1964, file: !1722, line: 407, baseType: !2095, size: 64, offset: 512)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1954, line: 286, baseType: !2097)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1954, line: 286, size: 64, elements: !2098)
!2098 = !{!2099}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2097, file: !1954, line: 286, baseType: !2100, size: 64)
!2100 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1983, line: 18, baseType: !574)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1964, file: !1722, line: 416, baseType: !1181, size: 32, offset: 576)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1964, file: !1722, line: 428, baseType: !1181, size: 32, offset: 608)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1964, file: !1722, line: 437, baseType: !1181, size: 32, offset: 640)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1964, file: !1722, line: 447, baseType: !1181, size: 32, offset: 672)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1964, file: !1722, line: 450, baseType: !1677, size: 64, offset: 704)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1964, file: !1722, line: 452, baseType: !139, size: 32, offset: 768)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1964, file: !1722, line: 454, baseType: !1203, offset: 800)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1964, file: !1722, line: 457, baseType: !1762, size: 256, offset: 832)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1964, file: !1722, line: 459, baseType: !562, size: 128, offset: 1088)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1964, file: !1722, line: 466, baseType: !574, size: 64, offset: 1216)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1964, file: !1722, line: 467, baseType: !574, size: 64, offset: 1280)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1964, file: !1722, line: 469, baseType: !574, size: 64, offset: 1344)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1964, file: !1722, line: 470, baseType: !574, size: 64, offset: 1408)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1964, file: !1722, line: 471, baseType: !1679, size: 64, offset: 1472)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1964, file: !1722, line: 472, baseType: !574, size: 64, offset: 1536)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1964, file: !1722, line: 473, baseType: !574, size: 64, offset: 1600)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1964, file: !1722, line: 474, baseType: !574, size: 64, offset: 1664)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1964, file: !1722, line: 475, baseType: !574, size: 64, offset: 1728)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1964, file: !1722, line: 477, baseType: !1203, offset: 1792)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1964, file: !1722, line: 478, baseType: !574, size: 64, offset: 1792)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1964, file: !1722, line: 478, baseType: !574, size: 64, offset: 1856)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1964, file: !1722, line: 478, baseType: !574, size: 64, offset: 1920)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1964, file: !1722, line: 478, baseType: !574, size: 64, offset: 1984)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1964, file: !1722, line: 479, baseType: !574, size: 64, offset: 2048)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1964, file: !1722, line: 479, baseType: !574, size: 64, offset: 2112)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1964, file: !1722, line: 479, baseType: !574, size: 64, offset: 2176)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1964, file: !1722, line: 480, baseType: !574, size: 64, offset: 2240)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1964, file: !1722, line: 480, baseType: !574, size: 64, offset: 2304)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1964, file: !1722, line: 480, baseType: !574, size: 64, offset: 2368)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1964, file: !1722, line: 480, baseType: !574, size: 64, offset: 2432)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1964, file: !1722, line: 482, baseType: !2132, size: 2816, offset: 2496)
!2132 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 2816, elements: !780)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1964, file: !1722, line: 488, baseType: !2134, size: 256, offset: 5312)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2135, line: 60, size: 256, elements: !2136)
!2135 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2134, file: !2135, line: 61, baseType: !2138, size: 256)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1677, size: 256, elements: !518)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1964, file: !1722, line: 490, baseType: !2140, size: 64, offset: 5568)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !1722, line: 490, flags: DIFlagFwdDecl)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1964, file: !1722, line: 493, baseType: !2143, size: 896, offset: 5632)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2144, line: 53, baseType: !2145)
!2144 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2145 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2144, line: 13, size: 896, elements: !2146)
!2146 = !{!2147, !2148, !2149, !2150, !2153, !2154, !2155, !2156, !2176, !2177, !2178}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2145, file: !2144, line: 18, baseType: !586, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2145, file: !2144, line: 28, baseType: !1679, size: 64, offset: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2145, file: !2144, line: 31, baseType: !1762, size: 256, offset: 128)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2145, file: !2144, line: 32, baseType: !2151, size: 64, offset: 384)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2144, line: 32, flags: DIFlagFwdDecl)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2145, file: !2144, line: 37, baseType: !429, size: 16, offset: 448)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2145, file: !2144, line: 40, baseType: !1673, size: 192, offset: 512)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2145, file: !2144, line: 41, baseType: !368, size: 64, offset: 704)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2145, file: !2144, line: 42, baseType: !2157, size: 64, offset: 768)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2159)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2160, line: 13, size: 896, elements: !2161)
!2160 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2161 = !{!2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2159, file: !2160, line: 14, baseType: !368, size: 64)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2159, file: !2160, line: 15, baseType: !574, size: 64, offset: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2159, file: !2160, line: 17, baseType: !574, size: 64, offset: 128)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2159, file: !2160, line: 17, baseType: !574, size: 64, offset: 192)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2159, file: !2160, line: 19, baseType: !593, size: 64, offset: 256)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2159, file: !2160, line: 21, baseType: !593, size: 64, offset: 320)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2159, file: !2160, line: 22, baseType: !593, size: 64, offset: 384)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2159, file: !2160, line: 23, baseType: !593, size: 64, offset: 448)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2159, file: !2160, line: 24, baseType: !593, size: 64, offset: 512)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2159, file: !2160, line: 25, baseType: !593, size: 64, offset: 576)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2159, file: !2160, line: 26, baseType: !593, size: 64, offset: 640)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2159, file: !2160, line: 27, baseType: !593, size: 64, offset: 704)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2159, file: !2160, line: 28, baseType: !593, size: 64, offset: 768)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2159, file: !2160, line: 29, baseType: !593, size: 64, offset: 832)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2145, file: !2144, line: 44, baseType: !1181, size: 32, offset: 832)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2145, file: !2144, line: 50, baseType: !530, size: 16, offset: 864)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2145, file: !2144, line: 51, baseType: !2179, size: 16, offset: 880)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !376, line: 18, baseType: !2180)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !378, line: 23, baseType: !776)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1964, file: !1722, line: 495, baseType: !574, size: 64, offset: 6528)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1964, file: !1722, line: 497, baseType: !2183, size: 64, offset: 6592)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !1722, line: 381, size: 384, elements: !2185)
!2185 = !{!2186, !2187, !3326}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2184, file: !1722, line: 382, baseType: !1181, size: 32)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2184, file: !1722, line: 383, baseType: !2188, size: 128, offset: 64)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !1722, line: 376, size: 128, elements: !2189)
!2189 = !{!2190, !3324}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2188, file: !1722, line: 377, baseType: !2191, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !2193, line: 640, size: 48640, elements: !2194)
!2193 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!2194 = !{!2195, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2215, !2233, !2244, !2325, !2326, !2327, !2338, !2339, !2341, !2342, !2343, !2344, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2423, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2494, !2496, !2497, !2498, !2510, !2511, !2512, !2513, !2514, !2515, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2539, !2544, !2722, !2723, !2724, !2725, !2729, !2732, !2735, !2738, !2741, !2767, !2868, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2914, !2915, !2916, !2917, !2918, !2923, !2924, !2925, !2928, !2929, !2932, !2935, !2938, !2941, !2984, !2987, !2988, !3067, !3068, !3071, !3072, !3075, !3076, !3077, !3081, !3082, !3083, !3096, !3097, !3098, !3108, !3113, !3116, !3122, !3123, !3124, !3125, !3126, !3127, !3128, !3129, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153}
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !2192, file: !2193, line: 646, baseType: !2196, size: 128)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !2197, line: 56, size: 128, elements: !2198)
!2197 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!2198 = !{!2199, !2200}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2196, file: !2197, line: 57, baseType: !574, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2196, file: !2197, line: 58, baseType: !388, size: 32, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2192, file: !2193, line: 649, baseType: !592, size: 64, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !2192, file: !2193, line: 657, baseType: !368, size: 64, offset: 192)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2192, file: !2193, line: 658, baseType: !1176, size: 32, offset: 256)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2192, file: !2193, line: 660, baseType: !7, size: 32, offset: 288)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !2192, file: !2193, line: 661, baseType: !7, size: 32, offset: 320)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2192, file: !2193, line: 684, baseType: !139, size: 32, offset: 352)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2192, file: !2193, line: 686, baseType: !139, size: 32, offset: 384)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !2192, file: !2193, line: 687, baseType: !139, size: 32, offset: 416)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !2192, file: !2193, line: 688, baseType: !139, size: 32, offset: 448)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !2192, file: !2193, line: 689, baseType: !7, size: 32, offset: 480)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !2192, file: !2193, line: 691, baseType: !2212, size: 64, offset: 512)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2214)
!2214 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !2193, line: 691, flags: DIFlagFwdDecl)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !2192, file: !2193, line: 692, baseType: !2216, size: 832, offset: 576)
!2216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !2193, line: 451, size: 832, elements: !2217)
!2217 = !{!2218, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231}
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2216, file: !2193, line: 453, baseType: !2219, size: 128)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !2193, line: 325, size: 128, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2219, file: !2193, line: 326, baseType: !574, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !2219, file: !2193, line: 327, baseType: !388, size: 32, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !2216, file: !2193, line: 454, baseType: !1755, size: 192, align: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !2216, file: !2193, line: 455, baseType: !562, size: 128, offset: 320)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2216, file: !2193, line: 456, baseType: !7, size: 32, offset: 448)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !2216, file: !2193, line: 458, baseType: !586, size: 64, offset: 512)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2216, file: !2193, line: 459, baseType: !586, size: 64, offset: 576)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !2216, file: !2193, line: 460, baseType: !586, size: 64, offset: 640)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !2216, file: !2193, line: 461, baseType: !586, size: 64, offset: 704)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !2216, file: !2193, line: 463, baseType: !586, size: 64, offset: 768)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !2216, file: !2193, line: 465, baseType: !2232, offset: 832)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !2193, line: 415, elements: !752)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2192, file: !2193, line: 693, baseType: !2234, size: 384, offset: 1408)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !2193, line: 489, size: 384, elements: !2235)
!2235 = !{!2236, !2237, !2238, !2239, !2240, !2241, !2242}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !2234, file: !2193, line: 490, baseType: !562, size: 128)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2234, file: !2193, line: 491, baseType: !574, size: 64, offset: 128)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !2234, file: !2193, line: 492, baseType: !574, size: 64, offset: 192)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !2234, file: !2193, line: 493, baseType: !7, size: 32, offset: 256)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !2234, file: !2193, line: 494, baseType: !429, size: 16, offset: 288)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !2234, file: !2193, line: 495, baseType: !429, size: 16, offset: 304)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !2234, file: !2193, line: 497, baseType: !2243, size: 64, offset: 320)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !2192, file: !2193, line: 697, baseType: !2245, size: 1792, offset: 1792)
!2245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !2193, line: 507, size: 1792, elements: !2246)
!2246 = !{!2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2322, !2323}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !2245, file: !2193, line: 508, baseType: !1755, size: 192, align: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !2245, file: !2193, line: 515, baseType: !586, size: 64, offset: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !2245, file: !2193, line: 516, baseType: !586, size: 64, offset: 256)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !2245, file: !2193, line: 517, baseType: !586, size: 64, offset: 320)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !2245, file: !2193, line: 518, baseType: !586, size: 64, offset: 384)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !2245, file: !2193, line: 519, baseType: !586, size: 64, offset: 448)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !2245, file: !2193, line: 526, baseType: !1683, size: 64, offset: 512)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !2245, file: !2193, line: 527, baseType: !586, size: 64, offset: 576)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2245, file: !2193, line: 528, baseType: !7, size: 32, offset: 640)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !2245, file: !2193, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !2245, file: !2193, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !2245, file: !2193, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !2245, file: !2193, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !2245, file: !2193, line: 563, baseType: !2261, size: 512, offset: 704)
!2261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !44, line: 118, size: 512, elements: !2262)
!2262 = !{!2263, !2271, !2272, !2277, !2318, !2319, !2320, !2321}
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2261, file: !44, line: 119, baseType: !2264, size: 256)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !2265, line: 9, size: 256, elements: !2266)
!2265 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!2266 = !{!2267, !2268}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2264, file: !2265, line: 10, baseType: !1755, size: 192, align: 64)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2264, file: !2265, line: 11, baseType: !2269, size: 64, offset: 192)
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !2270, line: 29, baseType: !1683)
!2270 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !2261, file: !44, line: 120, baseType: !2269, size: 64, offset: 256)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2261, file: !44, line: 121, baseType: !2273, size: 64, offset: 320)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{!43, !2276}
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2261, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2261, file: !44, line: 122, baseType: !2278, size: 64, offset: 384)
!2278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2279, size: 64)
!2279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !44, line: 159, size: 512, align: 512, elements: !2280)
!2280 = !{!2281, !2299, !2300, !2303, !2308, !2309, !2313, !2317}
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !2279, file: !44, line: 160, baseType: !2282, size: 64)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !44, line: 214, size: 4608, align: 512, elements: !2284)
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2283, file: !44, line: 215, baseType: !1768)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2283, file: !44, line: 216, baseType: !7, size: 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !2283, file: !44, line: 217, baseType: !7, size: 32, offset: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !2283, file: !44, line: 218, baseType: !7, size: 32, offset: 64)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !2283, file: !44, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !2283, file: !44, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !2283, file: !44, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !2283, file: !44, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !2283, file: !44, line: 233, baseType: !2269, size: 64, offset: 128)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !2283, file: !44, line: 234, baseType: !2276, size: 64, offset: 192)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !2283, file: !44, line: 235, baseType: !2269, size: 64, offset: 256)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !2283, file: !44, line: 236, baseType: !2276, size: 64, offset: 320)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !2283, file: !44, line: 237, baseType: !2298, size: 4096, offset: 512)
!2298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2279, size: 4096, elements: !380)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2279, file: !44, line: 161, baseType: !7, size: 32, offset: 64)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2279, file: !44, line: 162, baseType: !2301, size: 32, offset: 96)
!2301 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !524, line: 27, baseType: !2302)
!2302 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !1273, line: 96, baseType: !139)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2279, file: !44, line: 163, baseType: !2304, size: 32, offset: 128)
!2304 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !1351, line: 276, baseType: !2305)
!2305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !1351, line: 276, size: 32, elements: !2306)
!2306 = !{!2307}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2305, file: !1351, line: 276, baseType: !1355, size: 32)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !2279, file: !44, line: 164, baseType: !2276, size: 64, offset: 192)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2279, file: !44, line: 165, baseType: !2310, size: 128, offset: 256)
!2310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !2265, line: 14, size: 128, elements: !2311)
!2311 = !{!2312}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2310, file: !2265, line: 15, baseType: !1747, size: 128)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !2279, file: !44, line: 166, baseType: !2314, size: 64, offset: 384)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DISubroutineType(types: !2316)
!2316 = !{!2269}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2279, file: !44, line: 167, baseType: !2269, size: 64, offset: 448)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2261, file: !44, line: 123, baseType: !375, size: 8, offset: 448)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !2261, file: !44, line: 124, baseType: !375, size: 8, offset: 456)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !2261, file: !44, line: 125, baseType: !375, size: 8, offset: 464)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !2261, file: !44, line: 126, baseType: !375, size: 8, offset: 472)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !2245, file: !2193, line: 572, baseType: !2261, size: 512, offset: 1216)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !2245, file: !2193, line: 580, baseType: !2324, size: 64, offset: 1728)
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2245, size: 64)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2192, file: !2193, line: 721, baseType: !7, size: 32, offset: 3584)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !2192, file: !2193, line: 722, baseType: !139, size: 32, offset: 3616)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !2192, file: !2193, line: 723, baseType: !2328, size: 64, offset: 3648)
!2328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2329, size: 64)
!2329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2330)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !2331, line: 17, baseType: !2332)
!2331 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !2331, line: 17, size: 64, elements: !2333)
!2333 = !{!2334}
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !2332, file: !2331, line: 17, baseType: !2335, size: 64)
!2335 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 64, elements: !2336)
!2336 = !{!2337}
!2337 = !DISubrange(count: 1)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !2192, file: !2193, line: 724, baseType: !2330, size: 64, offset: 3712)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !2192, file: !2193, line: 749, baseType: !2340, offset: 3776)
!2340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !2193, line: 290, elements: !752)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2192, file: !2193, line: 751, baseType: !562, size: 128, offset: 3776)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !2192, file: !2193, line: 757, baseType: !1960, size: 64, offset: 3904)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !2192, file: !2193, line: 758, baseType: !1960, size: 64, offset: 3968)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !2192, file: !2193, line: 761, baseType: !2345, size: 320, offset: 4032)
!2345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2135, line: 34, size: 320, elements: !2346)
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2345, file: !2135, line: 35, baseType: !586, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2345, file: !2135, line: 36, baseType: !2349, size: 256, offset: 64)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1967, size: 256, elements: !518)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !2192, file: !2193, line: 766, baseType: !139, size: 32, offset: 4352)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !2192, file: !2193, line: 767, baseType: !139, size: 32, offset: 4384)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !2192, file: !2193, line: 768, baseType: !139, size: 32, offset: 4416)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !2192, file: !2193, line: 770, baseType: !139, size: 32, offset: 4448)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !2192, file: !2193, line: 772, baseType: !574, size: 64, offset: 4480)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2192, file: !2193, line: 775, baseType: !7, size: 32, offset: 4544)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !2192, file: !2193, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !2192, file: !2193, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !2192, file: !2193, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !2192, file: !2193, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !2192, file: !2193, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !2192, file: !2193, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !2192, file: !2193, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !2192, file: !2193, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !2192, file: !2193, line: 831, baseType: !574, size: 64, offset: 4672)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !2192, file: !2193, line: 833, baseType: !2366, size: 384, offset: 4736)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !49, line: 25, size: 384, elements: !2367)
!2367 = !{!2368, !2373}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2366, file: !49, line: 26, baseType: !2369, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DISubroutineType(types: !2371)
!2371 = !{!593, !2372}
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2373 = !DIDerivedType(tag: DW_TAG_member, scope: !2366, file: !49, line: 27, baseType: !2374, size: 320, offset: 64)
!2374 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2366, file: !49, line: 27, size: 320, elements: !2375)
!2375 = !{!2376, !2386, !2413}
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2374, file: !49, line: 36, baseType: !2377, size: 320)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2374, file: !49, line: 29, size: 320, elements: !2378)
!2378 = !{!2379, !2381, !2382, !2383, !2384, !2385}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2377, file: !49, line: 30, baseType: !2380, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2377, file: !49, line: 31, baseType: !388, size: 32, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2377, file: !49, line: 32, baseType: !388, size: 32, offset: 96)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2377, file: !49, line: 33, baseType: !388, size: 32, offset: 128)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2377, file: !49, line: 34, baseType: !586, size: 64, offset: 192)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2377, file: !49, line: 35, baseType: !2380, size: 64, offset: 256)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2374, file: !49, line: 46, baseType: !2387, size: 192)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2374, file: !49, line: 38, size: 192, elements: !2388)
!2388 = !{!2389, !2390, !2391, !2412}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2387, file: !49, line: 39, baseType: !2301, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2387, file: !49, line: 40, baseType: !48, size: 32, offset: 32)
!2391 = !DIDerivedType(tag: DW_TAG_member, scope: !2387, file: !49, line: 41, baseType: !2392, size: 64, offset: 64)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !49, line: 41, size: 64, elements: !2393)
!2393 = !{!2394, !2402}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2392, file: !49, line: 42, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2396, size: 64)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2397, line: 7, size: 128, elements: !2398)
!2397 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2398 = !{!2399, !2401}
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2396, file: !2397, line: 8, baseType: !2400, size: 64)
!2400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !1273, line: 93, baseType: !1483)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2396, file: !2397, line: 9, baseType: !1483, size: 64, offset: 64)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2392, file: !49, line: 43, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2404, size: 64)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2405, line: 7, size: 64, elements: !2406)
!2405 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2406 = !{!2407, !2411}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2404, file: !2405, line: 8, baseType: !2408, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2405, line: 5, baseType: !2409)
!2409 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !376, line: 20, baseType: !2410)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !378, line: 26, baseType: !139)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2404, file: !2405, line: 9, baseType: !2409, size: 32, offset: 32)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2387, file: !49, line: 45, baseType: !586, size: 64, offset: 128)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2374, file: !49, line: 54, baseType: !2414, size: 256)
!2414 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2374, file: !49, line: 48, size: 256, elements: !2415)
!2415 = !{!2416, !2419, !2420, !2421, !2422}
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2414, file: !49, line: 49, baseType: !2417, size: 64)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !49, line: 14, flags: DIFlagFwdDecl)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2414, file: !49, line: 50, baseType: !139, size: 32, offset: 64)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2414, file: !49, line: 51, baseType: !139, size: 32, offset: 96)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2414, file: !49, line: 52, baseType: !574, size: 64, offset: 128)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2414, file: !49, line: 53, baseType: !574, size: 64, offset: 192)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2192, file: !2193, line: 835, baseType: !2424, size: 32, offset: 5120)
!2424 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !524, line: 22, baseType: !2425)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !1273, line: 28, baseType: !139)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !2192, file: !2193, line: 836, baseType: !2424, size: 32, offset: 5152)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !2192, file: !2193, line: 840, baseType: !574, size: 64, offset: 5184)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !2192, file: !2193, line: 849, baseType: !2191, size: 64, offset: 5248)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2192, file: !2193, line: 852, baseType: !2191, size: 64, offset: 5312)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2192, file: !2193, line: 857, baseType: !562, size: 128, offset: 5376)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !2192, file: !2193, line: 858, baseType: !562, size: 128, offset: 5504)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !2192, file: !2193, line: 859, baseType: !2191, size: 64, offset: 5632)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !2192, file: !2193, line: 867, baseType: !562, size: 128, offset: 5696)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !2192, file: !2193, line: 868, baseType: !562, size: 128, offset: 5824)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !2192, file: !2193, line: 871, baseType: !2436, size: 64, offset: 5952)
!2436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!2437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !77, line: 59, size: 768, elements: !2438)
!2438 = !{!2439, !2440, !2441, !2442, !2444, !2445, !2452, !2453}
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2437, file: !77, line: 61, baseType: !1176, size: 32)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2437, file: !77, line: 62, baseType: !7, size: 32, offset: 32)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2437, file: !77, line: 63, baseType: !1203, offset: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !2437, file: !77, line: 65, baseType: !2443, size: 256, offset: 64)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, size: 256, elements: !518)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !2437, file: !77, line: 66, baseType: !1585, size: 64, offset: 320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !2437, file: !77, line: 68, baseType: !2446, size: 128, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !2447, line: 40, baseType: !2448)
!2447 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!2448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !2447, line: 36, size: 128, elements: !2449)
!2449 = !{!2450, !2451}
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2448, file: !2447, line: 37, baseType: !1203)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2448, file: !2447, line: 38, baseType: !562, size: 128)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2437, file: !77, line: 69, baseType: !1328, size: 128, align: 64, offset: 512)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !2437, file: !77, line: 70, baseType: !2454, size: 128, offset: 640)
!2454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2455, size: 128, elements: !2336)
!2455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !77, line: 54, size: 128, elements: !2456)
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !2455, file: !77, line: 55, baseType: !139, size: 32)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2455, file: !77, line: 56, baseType: !2459, size: 64, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !2461, line: 20, size: 1088, elements: !2462)
!2461 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2462 = !{!2463, !2464, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2480, !2483, !2484}
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !2460, file: !2461, line: 21, baseType: !1172, size: 32)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !2460, file: !2461, line: 22, baseType: !2465, size: 192, offset: 64)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !2466, line: 19, size: 192, elements: !2467)
!2466 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!2467 = !{!2468, !2469, !2470}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !2465, file: !2466, line: 20, baseType: !1738, size: 128)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !2465, file: !2466, line: 21, baseType: !7, size: 32, offset: 128)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !2465, file: !2466, line: 22, baseType: !7, size: 32, offset: 160)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2460, file: !2461, line: 23, baseType: !1328, size: 128, align: 64, offset: 256)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !2460, file: !2461, line: 24, baseType: !7, size: 32, offset: 384)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !2460, file: !2461, line: 25, baseType: !2191, size: 64, offset: 448)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !2460, file: !2461, line: 26, baseType: !1920, size: 64, offset: 512)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2460, file: !2461, line: 27, baseType: !7, size: 32, offset: 576)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2460, file: !2461, line: 28, baseType: !2459, size: 64, offset: 640)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2460, file: !2461, line: 32, baseType: !2478, size: 64, offset: 704)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1391, line: 18, flags: DIFlagFwdDecl)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2460, file: !2461, line: 33, baseType: !2481, size: 64, offset: 768)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !2461, line: 33, flags: DIFlagFwdDecl)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !2460, file: !2461, line: 34, baseType: !139, size: 32, offset: 832)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2460, file: !2461, line: 35, baseType: !2485, size: 192, offset: 896)
!2485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !2486, line: 7, size: 192, elements: !2487)
!2486 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!2487 = !{!2488, !2489, !2493}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !2485, file: !2486, line: 8, baseType: !1677, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2485, file: !2486, line: 9, baseType: !2490, size: 64, offset: 64)
!2490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2492)
!2492 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !2486, line: 5, flags: DIFlagFwdDecl)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !2485, file: !2486, line: 10, baseType: !7, size: 32, offset: 128)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !2192, file: !2193, line: 872, baseType: !2495, size: 512, offset: 6016)
!2495 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 512, elements: !518)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !2192, file: !2193, line: 873, baseType: !562, size: 128, offset: 6528)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !2192, file: !2193, line: 874, baseType: !562, size: 128, offset: 6656)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !2192, file: !2193, line: 876, baseType: !2499, size: 64, offset: 6784)
!2499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2500, size: 64)
!2500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2501, line: 26, size: 192, elements: !2502)
!2501 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2502 = !{!2503, !2504}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2500, file: !2501, line: 27, baseType: !7, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2500, file: !2501, line: 28, baseType: !2505, size: 128, offset: 64)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2506, line: 43, size: 128, elements: !2507)
!2506 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2507 = !{!2508, !2509}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2505, file: !2506, line: 44, baseType: !1768)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2505, file: !2506, line: 45, baseType: !562, size: 128)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !2192, file: !2193, line: 879, baseType: !1655, size: 64, offset: 6848)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !2192, file: !2193, line: 882, baseType: !1655, size: 64, offset: 6912)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2192, file: !2193, line: 884, baseType: !586, size: 64, offset: 6976)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2192, file: !2193, line: 885, baseType: !586, size: 64, offset: 7040)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2192, file: !2193, line: 890, baseType: !586, size: 64, offset: 7104)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2192, file: !2193, line: 891, baseType: !2516, size: 128, offset: 7168)
!2516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !2193, line: 242, size: 128, elements: !2517)
!2517 = !{!2518, !2519, !2520}
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2516, file: !2193, line: 244, baseType: !586, size: 64)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2516, file: !2193, line: 245, baseType: !586, size: 64, offset: 64)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2516, file: !2193, line: 246, baseType: !1768, offset: 128)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2192, file: !2193, line: 900, baseType: !574, size: 64, offset: 7296)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2192, file: !2193, line: 901, baseType: !574, size: 64, offset: 7360)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !2192, file: !2193, line: 904, baseType: !586, size: 64, offset: 7424)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !2192, file: !2193, line: 907, baseType: !586, size: 64, offset: 7488)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2192, file: !2193, line: 910, baseType: !574, size: 64, offset: 7552)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2192, file: !2193, line: 911, baseType: !574, size: 64, offset: 7616)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2192, file: !2193, line: 914, baseType: !2528, size: 640, offset: 7680)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2529, line: 123, size: 640, elements: !2530)
!2529 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2530 = !{!2531, !2537, !2538}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2528, file: !2529, line: 124, baseType: !2532, size: 576)
!2532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2533, size: 576, elements: !516)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2529, line: 108, size: 192, elements: !2534)
!2534 = !{!2535, !2536}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2533, file: !2529, line: 109, baseType: !586, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2533, file: !2529, line: 110, baseType: !2310, size: 128, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2528, file: !2529, line: 125, baseType: !7, size: 32, offset: 576)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2528, file: !2529, line: 126, baseType: !7, size: 32, offset: 608)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !2192, file: !2193, line: 917, baseType: !2540, size: 192, offset: 8320)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2529, line: 134, size: 192, elements: !2541)
!2541 = !{!2542, !2543}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2540, file: !2529, line: 135, baseType: !1328, size: 128, align: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2540, file: !2529, line: 136, baseType: !7, size: 32, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !2192, file: !2193, line: 923, baseType: !2545, size: 64, offset: 8512)
!2545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2546, size: 64)
!2546 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2547)
!2547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !2548, line: 111, size: 1280, elements: !2549)
!2548 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!2549 = !{!2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2567, !2568, !2569, !2570, !2571, !2572, !2677, !2678, !2679, !2680, !2706, !2707, !2717}
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2547, file: !2548, line: 112, baseType: !1181, size: 32)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2547, file: !2548, line: 120, baseType: !1390, size: 32, offset: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2547, file: !2548, line: 121, baseType: !1398, size: 32, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !2547, file: !2548, line: 122, baseType: !1390, size: 32, offset: 96)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !2547, file: !2548, line: 123, baseType: !1398, size: 32, offset: 128)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !2547, file: !2548, line: 124, baseType: !1390, size: 32, offset: 160)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !2547, file: !2548, line: 125, baseType: !1398, size: 32, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !2547, file: !2548, line: 126, baseType: !1390, size: 32, offset: 224)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !2547, file: !2548, line: 127, baseType: !1398, size: 32, offset: 256)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !2547, file: !2548, line: 128, baseType: !7, size: 32, offset: 288)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !2547, file: !2548, line: 129, baseType: !2561, size: 64, offset: 320)
!2561 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !2562, line: 26, baseType: !2563)
!2562 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!2563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !2562, line: 24, size: 64, elements: !2564)
!2564 = !{!2565}
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2563, file: !2562, line: 25, baseType: !2566, size: 64)
!2566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 64, elements: !384)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !2547, file: !2548, line: 130, baseType: !2561, size: 64, offset: 384)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !2547, file: !2548, line: 131, baseType: !2561, size: 64, offset: 448)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !2547, file: !2548, line: 132, baseType: !2561, size: 64, offset: 512)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !2547, file: !2548, line: 133, baseType: !2561, size: 64, offset: 576)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !2547, file: !2548, line: 135, baseType: !379, size: 8, offset: 640)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !2547, file: !2548, line: 137, baseType: !2573, size: 64, offset: 704)
!2573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2574, size: 64)
!2574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !2575, line: 189, size: 1664, elements: !2576)
!2575 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!2576 = !{!2577, !2578, !2581, !2586, !2587, !2590, !2591, !2596, !2597, !2598, !2599, !2601, !2602, !2603, !2604, !2605, !2641, !2662}
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2574, file: !2575, line: 190, baseType: !1176, size: 32)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !2574, file: !2575, line: 191, baseType: !2579, size: 32, offset: 32)
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !2575, line: 28, baseType: !2580)
!2580 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !524, line: 98, baseType: !2409)
!2581 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 192, baseType: !2582, size: 192, offset: 64)
!2582 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 192, size: 192, elements: !2583)
!2583 = !{!2584, !2585}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !2582, file: !2575, line: 193, baseType: !562, size: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !2582, file: !2575, line: 194, baseType: !1755, size: 192, align: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !2574, file: !2575, line: 199, baseType: !1762, size: 256, offset: 256)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2574, file: !2575, line: 200, baseType: !2588, size: 64, offset: 512)
!2588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2589, size: 64)
!2589 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !2575, line: 200, flags: DIFlagFwdDecl)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !2574, file: !2575, line: 201, baseType: !368, size: 64, offset: 576)
!2591 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 202, baseType: !2592, size: 64, offset: 640)
!2592 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 202, size: 64, elements: !2593)
!2593 = !{!2594, !2595}
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !2592, file: !2575, line: 203, baseType: !1489, size: 64)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !2592, file: !2575, line: 204, baseType: !1489, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !2574, file: !2575, line: 206, baseType: !1489, size: 64, offset: 704)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2574, file: !2575, line: 207, baseType: !1390, size: 32, offset: 768)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2574, file: !2575, line: 208, baseType: !1398, size: 32, offset: 800)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !2574, file: !2575, line: 209, baseType: !2600, size: 32, offset: 832)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !2575, line: 31, baseType: !1509)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !2574, file: !2575, line: 210, baseType: !429, size: 16, offset: 864)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !2574, file: !2575, line: 211, baseType: !429, size: 16, offset: 880)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2574, file: !2575, line: 215, baseType: !776, size: 16, offset: 896)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2574, file: !2575, line: 222, baseType: !574, size: 64, offset: 960)
!2605 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 239, baseType: !2606, size: 320, offset: 1024)
!2606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 239, size: 320, elements: !2607)
!2607 = !{!2608, !2633}
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !2606, file: !2575, line: 240, baseType: !2609, size: 320)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !2575, line: 108, size: 320, elements: !2610)
!2610 = !{!2611, !2612, !2622, !2625, !2632}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2609, file: !2575, line: 110, baseType: !574, size: 64)
!2612 = !DIDerivedType(tag: DW_TAG_member, scope: !2609, file: !2575, line: 111, baseType: !2613, size: 64, offset: 64)
!2613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2609, file: !2575, line: 111, size: 64, elements: !2614)
!2614 = !{!2615, !2621}
!2615 = !DIDerivedType(tag: DW_TAG_member, scope: !2613, file: !2575, line: 112, baseType: !2616, size: 64)
!2616 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2613, file: !2575, line: 112, size: 64, elements: !2617)
!2617 = !{!2618, !2619}
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !2616, file: !2575, line: 114, baseType: !530, size: 16)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !2616, file: !2575, line: 115, baseType: !2620, size: 48, offset: 16)
!2620 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 48, elements: !508)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2613, file: !2575, line: 121, baseType: !574, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2609, file: !2575, line: 123, baseType: !2623, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !2575, line: 96, flags: DIFlagFwdDecl)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2609, file: !2575, line: 124, baseType: !2626, size: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2627, size: 64)
!2627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !2575, line: 102, size: 192, elements: !2628)
!2628 = !{!2629, !2630, !2631}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2627, file: !2575, line: 103, baseType: !1328, size: 128, align: 64)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2627, file: !2575, line: 104, baseType: !1176, size: 32, offset: 128)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !2627, file: !2575, line: 105, baseType: !559, size: 8, offset: 160)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2609, file: !2575, line: 125, baseType: !648, size: 64, offset: 256)
!2633 = !DIDerivedType(tag: DW_TAG_member, scope: !2606, file: !2575, line: 241, baseType: !2634, size: 320)
!2634 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2606, file: !2575, line: 241, size: 320, elements: !2635)
!2635 = !{!2636, !2637, !2638, !2639, !2640}
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2634, file: !2575, line: 242, baseType: !574, size: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !2634, file: !2575, line: 243, baseType: !574, size: 64, offset: 64)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2634, file: !2575, line: 244, baseType: !2623, size: 64, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !2634, file: !2575, line: 245, baseType: !2626, size: 64, offset: 192)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2634, file: !2575, line: 246, baseType: !590, size: 64, offset: 256)
!2641 = !DIDerivedType(tag: DW_TAG_member, scope: !2574, file: !2575, line: 254, baseType: !2642, size: 256, offset: 1344)
!2642 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2574, file: !2575, line: 254, size: 256, elements: !2643)
!2643 = !{!2644, !2650}
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !2642, file: !2575, line: 255, baseType: !2645, size: 256)
!2645 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !2575, line: 128, size: 256, elements: !2646)
!2646 = !{!2647, !2648}
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !2645, file: !2575, line: 129, baseType: !368, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2645, file: !2575, line: 130, baseType: !2649, size: 256)
!2649 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 256, elements: !518)
!2650 = !DIDerivedType(tag: DW_TAG_member, scope: !2642, file: !2575, line: 256, baseType: !2651, size: 256)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2642, file: !2575, line: 256, size: 256, elements: !2652)
!2652 = !{!2653, !2654}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !2651, file: !2575, line: 258, baseType: !562, size: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !2651, file: !2575, line: 259, baseType: !2655, size: 128, offset: 128)
!2655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !2656, line: 22, size: 128, elements: !2657)
!2656 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!2657 = !{!2658, !2661}
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !2655, file: !2656, line: 23, baseType: !2659, size: 64)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !2656, line: 23, flags: DIFlagFwdDecl)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !2655, file: !2656, line: 24, baseType: !574, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !2574, file: !2575, line: 274, baseType: !2663, size: 64, offset: 1600)
!2663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2664, size: 64)
!2664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !2575, line: 170, size: 192, elements: !2665)
!2665 = !{!2666, !2675, !2676}
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2664, file: !2575, line: 171, baseType: !2667, size: 64)
!2667 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !2575, line: 165, baseType: !2668)
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = !DISubroutineType(types: !2670)
!2670 = !{!139, !2573, !2671, !2673, !2573}
!2671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2672, size: 64)
!2672 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2624)
!2673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2645)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2664, file: !2575, line: 172, baseType: !2573, size: 64, offset: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !2664, file: !2575, line: 173, baseType: !2623, size: 64, offset: 128)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !2547, file: !2548, line: 138, baseType: !2573, size: 64, offset: 768)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !2547, file: !2548, line: 139, baseType: !2573, size: 64, offset: 832)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !2547, file: !2548, line: 140, baseType: !2573, size: 64, offset: 896)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2547, file: !2548, line: 145, baseType: !2681, size: 64, offset: 960)
!2681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2682, size: 64)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !2683, line: 13, size: 896, elements: !2684)
!2683 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!2684 = !{!2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695}
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !2682, file: !2683, line: 14, baseType: !1176, size: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !2682, file: !2683, line: 15, baseType: !1181, size: 32, offset: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !2682, file: !2683, line: 16, baseType: !1181, size: 32, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !2682, file: !2683, line: 21, baseType: !1677, size: 64, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !2682, file: !2683, line: 27, baseType: !574, size: 64, offset: 192)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !2682, file: !2683, line: 28, baseType: !574, size: 64, offset: 256)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !2682, file: !2683, line: 29, baseType: !1677, size: 64, offset: 320)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !2682, file: !2683, line: 32, baseType: !1589, size: 128, offset: 384)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2682, file: !2683, line: 33, baseType: !1390, size: 32, offset: 512)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !2682, file: !2683, line: 37, baseType: !1677, size: 64, offset: 576)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !2682, file: !2683, line: 44, baseType: !2696, size: 256, offset: 640)
!2696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !2697, line: 15, size: 256, elements: !2698)
!2697 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!2698 = !{!2699, !2700, !2701, !2702, !2703, !2704, !2705}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2696, file: !2697, line: 16, baseType: !1768)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2696, file: !2697, line: 18, baseType: !139, size: 32)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !2696, file: !2697, line: 19, baseType: !139, size: 32, offset: 32)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !2696, file: !2697, line: 20, baseType: !139, size: 32, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !2696, file: !2697, line: 21, baseType: !139, size: 32, offset: 96)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2696, file: !2697, line: 22, baseType: !574, size: 64, offset: 128)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2696, file: !2697, line: 23, baseType: !574, size: 64, offset: 192)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2547, file: !2548, line: 146, baseType: !2478, size: 64, offset: 1024)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !2547, file: !2548, line: 147, baseType: !2708, size: 64, offset: 1088)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !2548, line: 25, size: 64, elements: !2710)
!2710 = !{!2711, !2712, !2713}
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2709, file: !2548, line: 26, baseType: !1181, size: 32)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2709, file: !2548, line: 27, baseType: !139, size: 32, offset: 32)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2709, file: !2548, line: 28, baseType: !2714, offset: 64)
!2714 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1398, elements: !2715)
!2715 = !{!2716}
!2716 = !DISubrange(count: 0)
!2717 = !DIDerivedType(tag: DW_TAG_member, scope: !2547, file: !2548, line: 149, baseType: !2718, size: 128, offset: 1152)
!2718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2547, file: !2548, line: 149, size: 128, elements: !2719)
!2719 = !{!2720, !2721}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2718, file: !2548, line: 150, baseType: !139, size: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2718, file: !2548, line: 151, baseType: !1328, size: 128, align: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !2192, file: !2193, line: 926, baseType: !2545, size: 64, offset: 8576)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !2192, file: !2193, line: 929, baseType: !2545, size: 64, offset: 8640)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !2192, file: !2193, line: 933, baseType: !2573, size: 64, offset: 8704)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !2192, file: !2193, line: 943, baseType: !2726, size: 128, offset: 8768)
!2726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 128, elements: !2727)
!2727 = !{!2728}
!2728 = !DISubrange(count: 16)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !2192, file: !2193, line: 945, baseType: !2730, size: 64, offset: 8896)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !2193, line: 49, flags: DIFlagFwdDecl)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !2192, file: !2193, line: 956, baseType: !2733, size: 64, offset: 8960)
!2733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2734, size: 64)
!2734 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !2193, line: 45, flags: DIFlagFwdDecl)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2192, file: !2193, line: 959, baseType: !2736, size: 64, offset: 9024)
!2736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2737, size: 64)
!2737 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !2193, line: 959, flags: DIFlagFwdDecl)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !2192, file: !2193, line: 962, baseType: !2739, size: 64, offset: 9088)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !2193, line: 66, flags: DIFlagFwdDecl)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !2192, file: !2193, line: 966, baseType: !2742, size: 64, offset: 9152)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2743, size: 64)
!2743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2744, line: 31, size: 576, elements: !2745)
!2744 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2745 = !{!2746, !2747, !2750, !2753, !2756, !2757, !2760, !2763, !2764}
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2743, file: !2744, line: 32, baseType: !1181, size: 32)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2743, file: !2744, line: 33, baseType: !2748, size: 64, offset: 64)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2744, line: 9, flags: DIFlagFwdDecl)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2743, file: !2744, line: 34, baseType: !2751, size: 64, offset: 128)
!2751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2752, size: 64)
!2752 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2744, line: 10, flags: DIFlagFwdDecl)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2743, file: !2744, line: 35, baseType: !2754, size: 64, offset: 192)
!2754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2755, size: 64)
!2755 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2744, line: 8, flags: DIFlagFwdDecl)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2743, file: !2744, line: 36, baseType: !2459, size: 64, offset: 256)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2743, file: !2744, line: 37, baseType: !2758, size: 64, offset: 320)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2759, size: 64)
!2759 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2575, line: 34, flags: DIFlagFwdDecl)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2743, file: !2744, line: 38, baseType: !2761, size: 64, offset: 384)
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2744, line: 38, flags: DIFlagFwdDecl)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2743, file: !2744, line: 39, baseType: !2761, size: 64, offset: 448)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2743, file: !2744, line: 40, baseType: !2765, size: 64, offset: 512)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2744, line: 12, flags: DIFlagFwdDecl)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2192, file: !2193, line: 969, baseType: !2768, size: 64, offset: 9216)
!2768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2769, size: 64)
!2769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2770, line: 82, size: 7296, elements: !2771)
!2770 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2771 = !{!2772, !2773, !2774, !2775, !2776, !2777, !2778, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2807, !2816, !2817, !2819, !2820, !2821, !2824, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2854, !2855, !2862, !2863, !2864, !2865, !2866, !2867}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2769, file: !2770, line: 83, baseType: !1176, size: 32)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2769, file: !2770, line: 84, baseType: !1181, size: 32, offset: 32)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2769, file: !2770, line: 85, baseType: !139, size: 32, offset: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2769, file: !2770, line: 86, baseType: !562, size: 128, offset: 128)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2769, file: !2770, line: 88, baseType: !2446, size: 128, offset: 256)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2769, file: !2770, line: 91, baseType: !2191, size: 64, offset: 384)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2769, file: !2770, line: 94, baseType: !2779, size: 192, offset: 448)
!2779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2780, line: 30, size: 192, elements: !2781)
!2780 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2781 = !{!2782, !2783}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2779, file: !2780, line: 31, baseType: !562, size: 128)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2779, file: !2780, line: 32, baseType: !2784, size: 64, offset: 128)
!2784 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2785, line: 25, baseType: !2786)
!2785 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2786 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2785, line: 23, size: 64, elements: !2787)
!2787 = !{!2788}
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2786, file: !2785, line: 24, baseType: !2335, size: 64)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2769, file: !2770, line: 97, baseType: !1585, size: 64, offset: 640)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2769, file: !2770, line: 100, baseType: !139, size: 32, offset: 704)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2769, file: !2770, line: 106, baseType: !139, size: 32, offset: 736)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2769, file: !2770, line: 107, baseType: !2191, size: 64, offset: 768)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2769, file: !2770, line: 110, baseType: !139, size: 32, offset: 832)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2769, file: !2770, line: 111, baseType: !7, size: 32, offset: 864)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2769, file: !2770, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2769, file: !2770, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2769, file: !2770, line: 128, baseType: !139, size: 32, offset: 928)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2769, file: !2770, line: 129, baseType: !562, size: 128, offset: 960)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2769, file: !2770, line: 132, baseType: !2261, size: 512, offset: 1088)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2769, file: !2770, line: 133, baseType: !2269, size: 64, offset: 1600)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2769, file: !2770, line: 140, baseType: !2802, size: 256, offset: 1664)
!2802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2803, size: 256, elements: !384)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2770, line: 38, size: 128, elements: !2804)
!2804 = !{!2805, !2806}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2803, file: !2770, line: 39, baseType: !586, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2803, file: !2770, line: 40, baseType: !586, size: 64, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2769, file: !2770, line: 146, baseType: !2808, size: 192, offset: 1920)
!2808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2770, line: 66, size: 192, elements: !2809)
!2809 = !{!2810}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2808, file: !2770, line: 67, baseType: !2811, size: 192)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2770, line: 47, size: 192, elements: !2812)
!2812 = !{!2813, !2814, !2815}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2811, file: !2770, line: 48, baseType: !1679, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2811, file: !2770, line: 49, baseType: !1679, size: 64, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2811, file: !2770, line: 50, baseType: !1679, size: 64, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2769, file: !2770, line: 150, baseType: !2528, size: 640, offset: 2112)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2769, file: !2770, line: 153, baseType: !2818, size: 256, offset: 2752)
!2818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2436, size: 256, elements: !518)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2769, file: !2770, line: 159, baseType: !2436, size: 64, offset: 3008)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2769, file: !2770, line: 162, baseType: !139, size: 32, offset: 3072)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2769, file: !2770, line: 164, baseType: !2822, size: 64, offset: 3136)
!2822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2823, size: 64)
!2823 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2770, line: 164, flags: DIFlagFwdDecl)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2769, file: !2770, line: 175, baseType: !2825, size: 32, offset: 3200)
!2825 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !1351, line: 805, baseType: !2826)
!2826 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1351, line: 798, size: 32, elements: !2827)
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2826, file: !1351, line: 803, baseType: !1350, size: 32)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2826, file: !1351, line: 804, baseType: !1203, offset: 32)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2769, file: !2770, line: 176, baseType: !586, size: 64, offset: 3264)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2769, file: !2770, line: 176, baseType: !586, size: 64, offset: 3328)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2769, file: !2770, line: 176, baseType: !586, size: 64, offset: 3392)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2769, file: !2770, line: 176, baseType: !586, size: 64, offset: 3456)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2769, file: !2770, line: 177, baseType: !586, size: 64, offset: 3520)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2769, file: !2770, line: 178, baseType: !586, size: 64, offset: 3584)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2769, file: !2770, line: 179, baseType: !2516, size: 128, offset: 3648)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2769, file: !2770, line: 180, baseType: !574, size: 64, offset: 3776)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2769, file: !2770, line: 180, baseType: !574, size: 64, offset: 3840)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2769, file: !2770, line: 180, baseType: !574, size: 64, offset: 3904)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2769, file: !2770, line: 180, baseType: !574, size: 64, offset: 3968)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2769, file: !2770, line: 181, baseType: !574, size: 64, offset: 4032)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2769, file: !2770, line: 181, baseType: !574, size: 64, offset: 4096)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2769, file: !2770, line: 181, baseType: !574, size: 64, offset: 4160)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2769, file: !2770, line: 181, baseType: !574, size: 64, offset: 4224)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2769, file: !2770, line: 182, baseType: !574, size: 64, offset: 4288)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2769, file: !2770, line: 182, baseType: !574, size: 64, offset: 4352)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2769, file: !2770, line: 182, baseType: !574, size: 64, offset: 4416)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2769, file: !2770, line: 182, baseType: !574, size: 64, offset: 4480)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2769, file: !2770, line: 183, baseType: !574, size: 64, offset: 4544)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2769, file: !2770, line: 183, baseType: !574, size: 64, offset: 4608)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2769, file: !2770, line: 184, baseType: !2852, offset: 4672)
!2852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2853, line: 12, elements: !752)
!2853 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2769, file: !2770, line: 192, baseType: !588, size: 64, offset: 4672)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2769, file: !2770, line: 203, baseType: !2856, size: 2048, offset: 4736)
!2856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2857, size: 2048, elements: !2727)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2858, line: 43, size: 128, elements: !2859)
!2858 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2859 = !{!2860, !2861}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2857, file: !2858, line: 44, baseType: !1287, size: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2857, file: !2858, line: 45, baseType: !1287, size: 64, offset: 64)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2769, file: !2770, line: 220, baseType: !559, size: 8, offset: 6784)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2769, file: !2770, line: 221, baseType: !776, size: 16, offset: 6800)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2769, file: !2770, line: 222, baseType: !776, size: 16, offset: 6816)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2769, file: !2770, line: 224, baseType: !1960, size: 64, offset: 6848)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2769, file: !2770, line: 227, baseType: !1673, size: 192, offset: 6912)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2769, file: !2770, line: 233, baseType: !1673, size: 192, offset: 7104)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !2192, file: !2193, line: 970, baseType: !2869, size: 64, offset: 9280)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2770, line: 20, size: 16576, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2870, file: !2770, line: 21, baseType: !1203)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2870, file: !2770, line: 22, baseType: !1176, size: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2870, file: !2770, line: 23, baseType: !2446, size: 128, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2870, file: !2770, line: 24, baseType: !2876, size: 16384, offset: 192)
!2876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2877, size: 16384, elements: !1245)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2780, line: 49, size: 256, elements: !2878)
!2878 = !{!2879}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2877, file: !2780, line: 50, baseType: !2880, size: 256)
!2880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2780, line: 35, size: 256, elements: !2881)
!2881 = !{!2882, !2889, !2890, !2896}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2880, file: !2780, line: 37, baseType: !2883, size: 64)
!2883 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2884, line: 19, baseType: !2885)
!2884 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2886, size: 64)
!2886 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2884, line: 18, baseType: !2887)
!2887 = !DISubroutineType(types: !2888)
!2888 = !{null, !139}
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2880, file: !2780, line: 38, baseType: !574, size: 64, offset: 64)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2880, file: !2780, line: 44, baseType: !2891, size: 64, offset: 128)
!2891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2884, line: 22, baseType: !2892)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2884, line: 21, baseType: !2894)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{null}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2880, file: !2780, line: 46, baseType: !2784, size: 64, offset: 192)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !2192, file: !2193, line: 971, baseType: !2784, size: 64, offset: 9344)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !2192, file: !2193, line: 972, baseType: !2784, size: 64, offset: 9408)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !2192, file: !2193, line: 974, baseType: !2784, size: 64, offset: 9472)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !2192, file: !2193, line: 975, baseType: !2779, size: 192, offset: 9536)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !2192, file: !2193, line: 976, baseType: !574, size: 64, offset: 9728)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !2192, file: !2193, line: 977, baseType: !1285, size: 64, offset: 9792)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !2192, file: !2193, line: 978, baseType: !7, size: 32, offset: 9856)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !2192, file: !2193, line: 980, baseType: !1331, size: 64, offset: 9920)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !2192, file: !2193, line: 989, baseType: !2906, size: 128, offset: 9984)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2907, line: 35, size: 128, elements: !2908)
!2907 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2908 = !{!2909, !2910, !2911}
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2906, file: !2907, line: 36, baseType: !139, size: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2906, file: !2907, line: 37, baseType: !1181, size: 32, offset: 32)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2906, file: !2907, line: 38, baseType: !2912, size: 64, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2913, size: 64)
!2913 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2907, line: 23, flags: DIFlagFwdDecl)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !2192, file: !2193, line: 992, baseType: !586, size: 64, offset: 10112)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !2192, file: !2193, line: 993, baseType: !586, size: 64, offset: 10176)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !2192, file: !2193, line: 996, baseType: !1203, offset: 10240)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !2192, file: !2193, line: 999, baseType: !1768, offset: 10240)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !2192, file: !2193, line: 1001, baseType: !2919, size: 64, offset: 10240)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !2193, line: 636, size: 64, elements: !2920)
!2920 = !{!2921}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2919, file: !2193, line: 637, baseType: !2922, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !2192, file: !2193, line: 1005, baseType: !1747, size: 128, offset: 10304)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !2192, file: !2193, line: 1007, baseType: !2191, size: 64, offset: 10432)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !2192, file: !2193, line: 1009, baseType: !2926, size: 64, offset: 10496)
!2926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2927, size: 64)
!2927 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !2193, line: 1009, flags: DIFlagFwdDecl)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !2192, file: !2193, line: 1043, baseType: !368, size: 64, offset: 10560)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !2192, file: !2193, line: 1046, baseType: !2930, size: 64, offset: 10624)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !2193, line: 41, flags: DIFlagFwdDecl)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !2192, file: !2193, line: 1050, baseType: !2933, size: 64, offset: 10688)
!2933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2934, size: 64)
!2934 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !2193, line: 42, flags: DIFlagFwdDecl)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !2192, file: !2193, line: 1054, baseType: !2936, size: 64, offset: 10752)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !2193, line: 55, flags: DIFlagFwdDecl)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !2192, file: !2193, line: 1056, baseType: !2939, size: 64, offset: 10816)
!2939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2940, size: 64)
!2940 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !2193, line: 40, flags: DIFlagFwdDecl)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !2192, file: !2193, line: 1058, baseType: !2942, size: 64, offset: 10880)
!2942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2943, size: 64)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2944, line: 99, size: 704, elements: !2945)
!2944 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2945 = !{!2946, !2947, !2948, !2949, !2950, !2951, !2952, !2971, !2972}
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2943, file: !2944, line: 100, baseType: !1677, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2943, file: !2944, line: 101, baseType: !1181, size: 32, offset: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2943, file: !2944, line: 102, baseType: !1181, size: 32, offset: 96)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2943, file: !2944, line: 105, baseType: !1203, offset: 128)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2943, file: !2944, line: 107, baseType: !429, size: 16, offset: 128)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2943, file: !2944, line: 109, baseType: !1738, size: 128, offset: 192)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2943, file: !2944, line: 110, baseType: !2953, size: 64, offset: 320)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2944, line: 73, size: 448, elements: !2955)
!2955 = !{!2956, !2959, !2960, !2965, !2970}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2954, file: !2944, line: 74, baseType: !2957, size: 64)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2944, line: 74, flags: DIFlagFwdDecl)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2954, file: !2944, line: 75, baseType: !2942, size: 64, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, scope: !2954, file: !2944, line: 83, baseType: !2961, size: 128, offset: 128)
!2961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2954, file: !2944, line: 83, size: 128, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2961, file: !2944, line: 84, baseType: !562, size: 128)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2961, file: !2944, line: 85, baseType: !1920, size: 64)
!2965 = !DIDerivedType(tag: DW_TAG_member, scope: !2954, file: !2944, line: 87, baseType: !2966, size: 128, offset: 256)
!2966 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2954, file: !2944, line: 87, size: 128, elements: !2967)
!2967 = !{!2968, !2969}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2966, file: !2944, line: 88, baseType: !1589, size: 128)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2966, file: !2944, line: 89, baseType: !1328, size: 128, align: 64)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2954, file: !2944, line: 92, baseType: !7, size: 32, offset: 384)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2943, file: !2944, line: 111, baseType: !1585, size: 64, offset: 384)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2943, file: !2944, line: 113, baseType: !2973, size: 256, offset: 448)
!2973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2974, line: 102, size: 256, elements: !2975)
!2974 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2975 = !{!2976, !2977, !2978}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2973, file: !2974, line: 103, baseType: !1677, size: 64)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2973, file: !2974, line: 104, baseType: !562, size: 128, offset: 64)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2973, file: !2974, line: 105, baseType: !2979, size: 64, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2974, line: 21, baseType: !2980)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !2983}
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !2192, file: !2193, line: 1061, baseType: !2985, size: 64, offset: 10944)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !2193, line: 43, flags: DIFlagFwdDecl)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !2192, file: !2193, line: 1064, baseType: !574, size: 64, offset: 11008)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !2192, file: !2193, line: 1065, baseType: !2989, size: 64, offset: 11072)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2780, line: 14, baseType: !2991)
!2991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2780, line: 12, size: 384, elements: !2992)
!2992 = !{!2993}
!2993 = !DIDerivedType(tag: DW_TAG_member, scope: !2991, file: !2780, line: 13, baseType: !2994, size: 384)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2991, file: !2780, line: 13, size: 384, elements: !2995)
!2995 = !{!2996, !2997, !2998, !2999}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2994, file: !2780, line: 13, baseType: !139, size: 32)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2994, file: !2780, line: 13, baseType: !139, size: 32, offset: 32)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2994, file: !2780, line: 13, baseType: !139, size: 32, offset: 64)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2994, file: !2780, line: 13, baseType: !3000, size: 256, offset: 128)
!3000 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3001, line: 32, size: 256, elements: !3002)
!3001 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3002 = !{!3003, !3008, !3021, !3027, !3036, !3056, !3061}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3000, file: !3001, line: 37, baseType: !3004, size: 64)
!3004 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 34, size: 64, elements: !3005)
!3005 = !{!3006, !3007}
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3004, file: !3001, line: 35, baseType: !2425, size: 32)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3004, file: !3001, line: 36, baseType: !1396, size: 32, offset: 32)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3000, file: !3001, line: 45, baseType: !3009, size: 192)
!3009 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 40, size: 192, elements: !3010)
!3010 = !{!3011, !3013, !3014, !3020}
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3009, file: !3001, line: 41, baseType: !3012, size: 32)
!3012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !1273, line: 95, baseType: !139)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3009, file: !3001, line: 42, baseType: !139, size: 32, offset: 32)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3009, file: !3001, line: 43, baseType: !3015, size: 64, offset: 64)
!3015 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3001, line: 11, baseType: !3016)
!3016 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3001, line: 8, size: 64, elements: !3017)
!3017 = !{!3018, !3019}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3016, file: !3001, line: 9, baseType: !139, size: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3016, file: !3001, line: 10, baseType: !368, size: 64)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3009, file: !3001, line: 44, baseType: !139, size: 32, offset: 128)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3000, file: !3001, line: 52, baseType: !3022, size: 128)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 48, size: 128, elements: !3023)
!3023 = !{!3024, !3025, !3026}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3022, file: !3001, line: 49, baseType: !2425, size: 32)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3022, file: !3001, line: 50, baseType: !1396, size: 32, offset: 32)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3022, file: !3001, line: 51, baseType: !3015, size: 64, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3000, file: !3001, line: 61, baseType: !3028, size: 256)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 55, size: 256, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033, !3035}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3028, file: !3001, line: 56, baseType: !2425, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3028, file: !3001, line: 57, baseType: !1396, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3028, file: !3001, line: 58, baseType: !139, size: 32, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3028, file: !3001, line: 59, baseType: !3034, size: 64, offset: 128)
!3034 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !1273, line: 94, baseType: !1274)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3028, file: !3001, line: 60, baseType: !3034, size: 64, offset: 192)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3000, file: !3001, line: 95, baseType: !3037, size: 256)
!3037 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 64, size: 256, elements: !3038)
!3038 = !{!3039, !3040}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3037, file: !3001, line: 65, baseType: !368, size: 64)
!3040 = !DIDerivedType(tag: DW_TAG_member, scope: !3037, file: !3001, line: 77, baseType: !3041, size: 192, offset: 64)
!3041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3037, file: !3001, line: 77, size: 192, elements: !3042)
!3042 = !{!3043, !3044, !3051}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3041, file: !3001, line: 82, baseType: !776, size: 16)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3041, file: !3001, line: 88, baseType: !3045, size: 192)
!3045 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3041, file: !3001, line: 84, size: 192, elements: !3046)
!3046 = !{!3047, !3049, !3050}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3045, file: !3001, line: 85, baseType: !3048, size: 64)
!3048 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 64, elements: !380)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3045, file: !3001, line: 86, baseType: !368, size: 64, offset: 64)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3045, file: !3001, line: 87, baseType: !368, size: 64, offset: 128)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3041, file: !3001, line: 93, baseType: !3052, size: 96)
!3052 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3041, file: !3001, line: 90, size: 96, elements: !3053)
!3053 = !{!3054, !3055}
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3052, file: !3001, line: 91, baseType: !3048, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3052, file: !3001, line: 92, baseType: !389, size: 32, offset: 64)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3000, file: !3001, line: 101, baseType: !3057, size: 128)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 98, size: 128, elements: !3058)
!3058 = !{!3059, !3060}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3057, file: !3001, line: 99, baseType: !593, size: 64)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3057, file: !3001, line: 100, baseType: !139, size: 32, offset: 64)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3000, file: !3001, line: 108, baseType: !3062, size: 128)
!3062 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3000, file: !3001, line: 104, size: 128, elements: !3063)
!3063 = !{!3064, !3065, !3066}
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3062, file: !3001, line: 105, baseType: !368, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3062, file: !3001, line: 106, baseType: !139, size: 32, offset: 64)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3062, file: !3001, line: 107, baseType: !7, size: 32, offset: 96)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2192, file: !2193, line: 1067, baseType: !2852, offset: 11136)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !2192, file: !2193, line: 1099, baseType: !3069, size: 64, offset: 11136)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !2193, line: 56, flags: DIFlagFwdDecl)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !2192, file: !2193, line: 1103, baseType: !562, size: 128, offset: 11200)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !2192, file: !2193, line: 1104, baseType: !3073, size: 64, offset: 11328)
!3073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3074, size: 64)
!3074 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !2193, line: 46, flags: DIFlagFwdDecl)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !2192, file: !2193, line: 1105, baseType: !1673, size: 192, offset: 11392)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !2192, file: !2193, line: 1106, baseType: !7, size: 32, offset: 11584)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !2192, file: !2193, line: 1109, baseType: !3078, size: 128, offset: 11648)
!3078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3079, size: 128, elements: !384)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !2193, line: 51, flags: DIFlagFwdDecl)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !2192, file: !2193, line: 1110, baseType: !1673, size: 192, offset: 11776)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !2192, file: !2193, line: 1111, baseType: !562, size: 128, offset: 11968)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !2192, file: !2193, line: 1173, baseType: !3084, size: 64, offset: 12096)
!3084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3085, size: 64)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3086, line: 62, size: 256, align: 256, elements: !3087)
!3086 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3087 = !{!3088, !3089, !3090, !3095}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3085, file: !3086, line: 75, baseType: !389, size: 32)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3085, file: !3086, line: 90, baseType: !389, size: 32, offset: 32)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3085, file: !3086, line: 124, baseType: !3091, size: 64, offset: 64)
!3091 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3085, file: !3086, line: 109, size: 64, elements: !3092)
!3092 = !{!3093, !3094}
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3091, file: !3086, line: 110, baseType: !587, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3091, file: !3086, line: 112, baseType: !587, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3085, file: !3086, line: 144, baseType: !389, size: 32, offset: 128)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !2192, file: !2193, line: 1174, baseType: !388, size: 32, offset: 12160)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !2192, file: !2193, line: 1179, baseType: !574, size: 64, offset: 12224)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !2192, file: !2193, line: 1182, baseType: !3099, size: 128, offset: 12288)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2135, line: 76, size: 128, elements: !3100)
!3100 = !{!3101, !3106, !3107}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3099, file: !2135, line: 85, baseType: !3102, size: 64)
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3103, line: 7, size: 64, elements: !3104)
!3103 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3104 = !{!3105}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3102, file: !3103, line: 12, baseType: !2332, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3099, file: !2135, line: 88, baseType: !559, size: 8, offset: 64)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3099, file: !2135, line: 95, baseType: !559, size: 8, offset: 72)
!3108 = !DIDerivedType(tag: DW_TAG_member, scope: !2192, file: !2193, line: 1184, baseType: !3109, size: 128, offset: 12416)
!3109 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2192, file: !2193, line: 1184, size: 128, elements: !3110)
!3110 = !{!3111, !3112}
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3109, file: !2193, line: 1185, baseType: !1176, size: 32)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3109, file: !2193, line: 1186, baseType: !1328, size: 128, align: 64)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !2192, file: !2193, line: 1190, baseType: !3114, size: 64, offset: 12544)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !2193, line: 53, flags: DIFlagFwdDecl)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !2192, file: !2193, line: 1192, baseType: !3117, size: 128, offset: 12608)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2135, line: 64, size: 128, elements: !3118)
!3118 = !{!3119, !3120, !3121}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3117, file: !2135, line: 65, baseType: !1720, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3117, file: !2135, line: 67, baseType: !389, size: 32, offset: 64)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3117, file: !2135, line: 68, baseType: !389, size: 32, offset: 96)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !2192, file: !2193, line: 1206, baseType: !139, size: 32, offset: 12736)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !2192, file: !2193, line: 1207, baseType: !139, size: 32, offset: 12768)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !2192, file: !2193, line: 1209, baseType: !574, size: 64, offset: 12800)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !2192, file: !2193, line: 1219, baseType: !586, size: 64, offset: 12864)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !2192, file: !2193, line: 1220, baseType: !586, size: 64, offset: 12928)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !2192, file: !2193, line: 1317, baseType: !139, size: 32, offset: 12992)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !2192, file: !2193, line: 1319, baseType: !2191, size: 64, offset: 13056)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !2192, file: !2193, line: 1322, baseType: !3130, size: 64, offset: 13120)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3132, line: 56, size: 512, elements: !3133)
!3132 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3133 = !{!3134, !3135, !3136, !3137, !3138, !3139, !3140, !3142}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3131, file: !3132, line: 57, baseType: !3130, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3131, file: !3132, line: 58, baseType: !368, size: 64, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3131, file: !3132, line: 59, baseType: !574, size: 64, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3131, file: !3132, line: 60, baseType: !574, size: 64, offset: 192)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3131, file: !3132, line: 61, baseType: !1808, size: 64, offset: 256)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3131, file: !3132, line: 62, baseType: !7, size: 32, offset: 320)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3131, file: !3132, line: 63, baseType: !3141, size: 64, offset: 384)
!3141 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !524, line: 153, baseType: !586)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3131, file: !3132, line: 64, baseType: !3143, size: 64, offset: 448)
!3143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3144, size: 64)
!3144 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !2192, file: !2193, line: 1326, baseType: !1176, size: 32, offset: 13184)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !2192, file: !2193, line: 1342, baseType: !368, size: 64, offset: 13248)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !2192, file: !2193, line: 1343, baseType: !587, size: 64, offset: 13312)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !2192, file: !2193, line: 1344, baseType: !586, size: 64, offset: 13376)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !2192, file: !2193, line: 1345, baseType: !587, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !2192, file: !2193, line: 1346, baseType: !587, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !2192, file: !2193, line: 1347, baseType: !587, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !2192, file: !2193, line: 1348, baseType: !1328, size: 128, align: 64, offset: 13504)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !2192, file: !2193, line: 1358, baseType: !3154, size: 34816, offset: 13824)
!3154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3155, line: 485, size: 34816, elements: !3156)
!3155 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3156 = !{!3157, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3186, !3187, !3188, !3189, !3190, !3191, !3194, !3195, !3196}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3154, file: !3155, line: 487, baseType: !3158, size: 192)
!3158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3159, size: 192, elements: !516)
!3159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3160, line: 16, size: 64, elements: !3161)
!3160 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3161 = !{!3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174}
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3159, file: !3160, line: 17, baseType: !530, size: 16)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3159, file: !3160, line: 18, baseType: !530, size: 16, offset: 16)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3159, file: !3160, line: 19, baseType: !530, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3159, file: !3160, line: 19, baseType: !530, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3159, file: !3160, line: 19, baseType: !530, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3159, file: !3160, line: 19, baseType: !530, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3159, file: !3160, line: 19, baseType: !530, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3159, file: !3160, line: 20, baseType: !530, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3159, file: !3160, line: 20, baseType: !530, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3159, file: !3160, line: 20, baseType: !530, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3159, file: !3160, line: 20, baseType: !530, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3159, file: !3160, line: 20, baseType: !530, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3159, file: !3160, line: 20, baseType: !530, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3154, file: !3155, line: 491, baseType: !574, size: 64, offset: 192)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3154, file: !3155, line: 495, baseType: !429, size: 16, offset: 256)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3154, file: !3155, line: 496, baseType: !429, size: 16, offset: 272)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3154, file: !3155, line: 497, baseType: !429, size: 16, offset: 288)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3154, file: !3155, line: 498, baseType: !429, size: 16, offset: 304)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3154, file: !3155, line: 502, baseType: !574, size: 64, offset: 320)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3154, file: !3155, line: 503, baseType: !574, size: 64, offset: 384)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3154, file: !3155, line: 514, baseType: !3183, size: 256, offset: 448)
!3183 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3184, size: 256, elements: !518)
!3184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3185, size: 64)
!3185 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3155, line: 483, flags: DIFlagFwdDecl)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3154, file: !3155, line: 516, baseType: !574, size: 64, offset: 704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3154, file: !3155, line: 518, baseType: !574, size: 64, offset: 768)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3154, file: !3155, line: 520, baseType: !574, size: 64, offset: 832)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3154, file: !3155, line: 521, baseType: !574, size: 64, offset: 896)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3154, file: !3155, line: 522, baseType: !574, size: 64, offset: 960)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3154, file: !3155, line: 528, baseType: !3192, size: 64, offset: 1024)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3155, line: 10, flags: DIFlagFwdDecl)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3154, file: !3155, line: 535, baseType: !574, size: 64, offset: 1088)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3154, file: !3155, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3154, file: !3155, line: 540, baseType: !3197, size: 33280, offset: 1536)
!3197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3198, line: 317, size: 33280, elements: !3199)
!3198 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3199 = !{!3200, !3201, !3202}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3197, file: !3198, line: 330, baseType: !7, size: 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3197, file: !3198, line: 337, baseType: !574, size: 64, offset: 64)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3197, file: !3198, line: 348, baseType: !3203, size: 32768, offset: 512)
!3203 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3198, line: 304, size: 32768, elements: !3204)
!3204 = !{!3205, !3220, !3257, !3307, !3320}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3203, file: !3198, line: 305, baseType: !3206, size: 896)
!3206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3198, line: 12, size: 896, elements: !3207)
!3207 = !{!3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3219}
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3206, file: !3198, line: 13, baseType: !388, size: 32)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3206, file: !3198, line: 14, baseType: !388, size: 32, offset: 32)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3206, file: !3198, line: 15, baseType: !388, size: 32, offset: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3206, file: !3198, line: 16, baseType: !388, size: 32, offset: 96)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3206, file: !3198, line: 17, baseType: !388, size: 32, offset: 128)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3206, file: !3198, line: 18, baseType: !388, size: 32, offset: 160)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3206, file: !3198, line: 19, baseType: !388, size: 32, offset: 192)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3206, file: !3198, line: 22, baseType: !3216, size: 640, offset: 224)
!3216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 640, elements: !3217)
!3217 = !{!3218}
!3218 = !DISubrange(count: 20)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3206, file: !3198, line: 25, baseType: !388, size: 32, offset: 864)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3203, file: !3198, line: 306, baseType: !3221, size: 4096, align: 128)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3198, line: 34, size: 4096, align: 128, elements: !3222)
!3222 = !{!3223, !3224, !3225, !3226, !3227, !3242, !3243, !3244, !3246, !3248, !3252}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3221, file: !3198, line: 35, baseType: !530, size: 16)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3221, file: !3198, line: 36, baseType: !530, size: 16, offset: 16)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3221, file: !3198, line: 37, baseType: !530, size: 16, offset: 32)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3221, file: !3198, line: 38, baseType: !530, size: 16, offset: 48)
!3227 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3198, line: 39, baseType: !3228, size: 128, offset: 64)
!3228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3198, line: 39, size: 128, elements: !3229)
!3229 = !{!3230, !3235}
!3230 = !DIDerivedType(tag: DW_TAG_member, scope: !3228, file: !3198, line: 40, baseType: !3231, size: 128)
!3231 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3228, file: !3198, line: 40, size: 128, elements: !3232)
!3232 = !{!3233, !3234}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3231, file: !3198, line: 41, baseType: !586, size: 64)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3231, file: !3198, line: 42, baseType: !586, size: 64, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, scope: !3228, file: !3198, line: 44, baseType: !3236, size: 128)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3228, file: !3198, line: 44, size: 128, elements: !3237)
!3237 = !{!3238, !3239, !3240, !3241}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3236, file: !3198, line: 45, baseType: !388, size: 32)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3236, file: !3198, line: 46, baseType: !388, size: 32, offset: 32)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3236, file: !3198, line: 47, baseType: !388, size: 32, offset: 64)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3236, file: !3198, line: 48, baseType: !388, size: 32, offset: 96)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3221, file: !3198, line: 51, baseType: !388, size: 32, offset: 192)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3221, file: !3198, line: 52, baseType: !388, size: 32, offset: 224)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3221, file: !3198, line: 55, baseType: !3245, size: 1024, offset: 256)
!3245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 1024, elements: !570)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3221, file: !3198, line: 58, baseType: !3247, size: 2048, offset: 1280)
!3247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 2048, elements: !1245)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3221, file: !3198, line: 60, baseType: !3249, size: 384, offset: 3328)
!3249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 384, elements: !3250)
!3250 = !{!3251}
!3251 = !DISubrange(count: 12)
!3252 = !DIDerivedType(tag: DW_TAG_member, scope: !3221, file: !3198, line: 62, baseType: !3253, size: 384, offset: 3712)
!3253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3221, file: !3198, line: 62, size: 384, elements: !3254)
!3254 = !{!3255, !3256}
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3253, file: !3198, line: 63, baseType: !3249, size: 384)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3253, file: !3198, line: 64, baseType: !3249, size: 384)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3203, file: !3198, line: 307, baseType: !3258, size: 1088)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3198, line: 79, size: 1088, elements: !3259)
!3259 = !{!3260, !3261, !3262, !3263, !3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3306}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3258, file: !3198, line: 80, baseType: !388, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3258, file: !3198, line: 81, baseType: !388, size: 32, offset: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3258, file: !3198, line: 82, baseType: !388, size: 32, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3258, file: !3198, line: 83, baseType: !388, size: 32, offset: 96)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3258, file: !3198, line: 84, baseType: !388, size: 32, offset: 128)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3258, file: !3198, line: 85, baseType: !388, size: 32, offset: 160)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3258, file: !3198, line: 86, baseType: !388, size: 32, offset: 192)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3258, file: !3198, line: 88, baseType: !3216, size: 640, offset: 224)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3258, file: !3198, line: 89, baseType: !375, size: 8, offset: 864)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3258, file: !3198, line: 90, baseType: !375, size: 8, offset: 872)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3258, file: !3198, line: 91, baseType: !375, size: 8, offset: 880)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3258, file: !3198, line: 92, baseType: !375, size: 8, offset: 888)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3258, file: !3198, line: 93, baseType: !375, size: 8, offset: 896)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3258, file: !3198, line: 94, baseType: !375, size: 8, offset: 904)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3258, file: !3198, line: 95, baseType: !3275, size: 64, offset: 960)
!3275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3276, size: 64)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3277, line: 11, size: 128, elements: !3278)
!3277 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3278 = !{!3279, !3280}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3276, file: !3277, line: 12, baseType: !593, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3276, file: !3277, line: 13, baseType: !3281, size: 64, offset: 64)
!3281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3282, size: 64)
!3282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3283, line: 56, size: 1344, elements: !3284)
!3283 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3284 = !{!3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3282, file: !3283, line: 61, baseType: !574, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3282, file: !3283, line: 62, baseType: !574, size: 64, offset: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3282, file: !3283, line: 63, baseType: !574, size: 64, offset: 128)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3282, file: !3283, line: 64, baseType: !574, size: 64, offset: 192)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3282, file: !3283, line: 65, baseType: !574, size: 64, offset: 256)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3282, file: !3283, line: 66, baseType: !574, size: 64, offset: 320)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3282, file: !3283, line: 68, baseType: !574, size: 64, offset: 384)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3282, file: !3283, line: 69, baseType: !574, size: 64, offset: 448)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3282, file: !3283, line: 70, baseType: !574, size: 64, offset: 512)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3282, file: !3283, line: 71, baseType: !574, size: 64, offset: 576)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3282, file: !3283, line: 72, baseType: !574, size: 64, offset: 640)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3282, file: !3283, line: 73, baseType: !574, size: 64, offset: 704)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3282, file: !3283, line: 74, baseType: !574, size: 64, offset: 768)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3282, file: !3283, line: 75, baseType: !574, size: 64, offset: 832)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3282, file: !3283, line: 76, baseType: !574, size: 64, offset: 896)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3282, file: !3283, line: 81, baseType: !574, size: 64, offset: 960)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3282, file: !3283, line: 83, baseType: !574, size: 64, offset: 1024)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3282, file: !3283, line: 84, baseType: !574, size: 64, offset: 1088)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3282, file: !3283, line: 85, baseType: !574, size: 64, offset: 1152)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3282, file: !3283, line: 86, baseType: !574, size: 64, offset: 1216)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3282, file: !3283, line: 87, baseType: !574, size: 64, offset: 1280)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3258, file: !3198, line: 96, baseType: !388, size: 32, offset: 1024)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3203, file: !3198, line: 308, baseType: !3308, size: 4608, align: 512)
!3308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3198, line: 289, size: 4608, align: 512, elements: !3309)
!3309 = !{!3310, !3311, !3318}
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3308, file: !3198, line: 290, baseType: !3221, size: 4096, align: 128)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3308, file: !3198, line: 291, baseType: !3312, size: 512, offset: 4096)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3198, line: 268, size: 512, elements: !3313)
!3313 = !{!3314, !3315, !3316}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3312, file: !3198, line: 269, baseType: !586, size: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3312, file: !3198, line: 270, baseType: !586, size: 64, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3312, file: !3198, line: 271, baseType: !3317, size: 384, offset: 128)
!3317 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 384, elements: !508)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3308, file: !3198, line: 292, baseType: !3319, offset: 4608)
!3319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, elements: !2715)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3203, file: !3198, line: 309, baseType: !3321, size: 32768)
!3321 = !DICompositeType(tag: DW_TAG_array_type, baseType: !375, size: 32768, elements: !3322)
!3322 = !{!3323}
!3323 = !DISubrange(count: 4096)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2188, file: !1722, line: 378, baseType: !3325, size: 64, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2188, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2184, file: !1722, line: 384, baseType: !2500, size: 192, offset: 192)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1964, file: !1722, line: 500, baseType: !1203, offset: 6656)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1964, file: !1722, line: 501, baseType: !3329, size: 64, offset: 6656)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !1722, line: 387, flags: DIFlagFwdDecl)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1964, file: !1722, line: 516, baseType: !2478, size: 64, offset: 6720)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1964, file: !1722, line: 519, baseType: !1315, size: 64, offset: 6784)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1964, file: !1722, line: 521, baseType: !3334, size: 64, offset: 6848)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !1722, line: 521, flags: DIFlagFwdDecl)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1964, file: !1722, line: 545, baseType: !1181, size: 32, offset: 6912)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1964, file: !1722, line: 548, baseType: !559, size: 8, offset: 6944)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1964, file: !1722, line: 550, baseType: !3339, offset: 6952)
!3339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !3340, line: 142, elements: !752)
!3340 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1964, file: !1722, line: 554, baseType: !2973, size: 256, offset: 6976)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1964, file: !1722, line: 557, baseType: !388, size: 32, offset: 7232)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1961, file: !1722, line: 565, baseType: !3344, offset: 7296)
!3344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, elements: !618)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1957, file: !1722, line: 151, baseType: !1181, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1949, file: !1722, line: 156, baseType: !1203, offset: 256)
!3347 = !DIDerivedType(tag: DW_TAG_member, scope: !1726, file: !1722, line: 159, baseType: !3348, size: 128)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1726, file: !1722, line: 159, size: 128, elements: !3349)
!3349 = !{!3350, !3414}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !3348, file: !1722, line: 161, baseType: !3351, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !55, line: 110, size: 1152, elements: !3353)
!3353 = !{!3354, !3364, !3385, !3386, !3387, !3388, !3389, !3401, !3402, !3403}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !3352, file: !55, line: 111, baseType: !3355, size: 384)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !55, line: 19, size: 384, elements: !3356)
!3356 = !{!3357, !3359, !3360, !3361, !3362, !3363}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !3355, file: !55, line: 20, baseType: !3358, size: 64)
!3358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !3355, file: !55, line: 21, baseType: !3358, size: 64, offset: 64)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !3355, file: !55, line: 22, baseType: !3358, size: 64, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3355, file: !55, line: 23, baseType: !574, size: 64, offset: 192)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3355, file: !55, line: 24, baseType: !574, size: 64, offset: 256)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3355, file: !55, line: 25, baseType: !574, size: 64, offset: 320)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3352, file: !55, line: 112, baseType: !3365, size: 64, offset: 384)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3367, line: 105, size: 128, elements: !3368)
!3367 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3368 = !{!3369, !3370}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3366, file: !3367, line: 110, baseType: !574, size: 64)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3366, file: !3367, line: 118, baseType: !3371, size: 64, offset: 64)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3367, line: 95, size: 448, elements: !3373)
!3373 = !{!3374, !3375, !3380, !3381, !3382, !3383, !3384}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3372, file: !3367, line: 96, baseType: !1677, size: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3372, file: !3367, line: 97, baseType: !3376, size: 64, offset: 64)
!3376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3377, size: 64)
!3377 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3367, line: 60, baseType: !3378)
!3378 = !DISubroutineType(types: !3379)
!3379 = !{null, !3365}
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3372, file: !3367, line: 98, baseType: !3376, size: 64, offset: 128)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3372, file: !3367, line: 99, baseType: !559, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3372, file: !3367, line: 100, baseType: !559, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3372, file: !3367, line: 101, baseType: !1328, size: 128, align: 64, offset: 256)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3372, file: !3367, line: 102, baseType: !3365, size: 64, offset: 384)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !3352, file: !55, line: 113, baseType: !3366, size: 128, offset: 448)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !3352, file: !55, line: 114, baseType: !2500, size: 192, offset: 576)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3352, file: !55, line: 115, baseType: !54, size: 32, offset: 768)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3352, file: !55, line: 116, baseType: !7, size: 32, offset: 800)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3352, file: !55, line: 117, baseType: !3390, size: 64, offset: 832)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3392)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !55, line: 67, size: 256, elements: !3393)
!3393 = !{!3394, !3395, !3399, !3400}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !3392, file: !55, line: 73, baseType: !1828, size: 64)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !3392, file: !55, line: 78, baseType: !3396, size: 64, offset: 64)
!3396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3397, size: 64)
!3397 = !DISubroutineType(types: !3398)
!3398 = !{null, !3351}
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3392, file: !55, line: 83, baseType: !3396, size: 64, offset: 128)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !3392, file: !55, line: 89, baseType: !2013, size: 64, offset: 192)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3352, file: !55, line: 118, baseType: !368, size: 64, offset: 896)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !3352, file: !55, line: 119, baseType: !139, size: 32, offset: 960)
!3403 = !DIDerivedType(tag: DW_TAG_member, scope: !3352, file: !55, line: 120, baseType: !3404, size: 128, offset: 1024)
!3404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3352, file: !55, line: 120, size: 128, elements: !3405)
!3405 = !{!3406, !3412}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !3404, file: !55, line: 121, baseType: !3407, size: 128)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !3408, line: 6, size: 128, elements: !3409)
!3408 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!3409 = !{!3410, !3411}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3407, file: !3408, line: 7, baseType: !586, size: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3407, file: !3408, line: 8, baseType: !586, size: 64, offset: 64)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !3404, file: !55, line: 122, baseType: !3413)
!3413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3407, elements: !2715)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !3348, file: !1722, line: 162, baseType: !368, size: 64, offset: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !1726, file: !1722, line: 176, baseType: !1328, size: 128, align: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, scope: !1721, file: !1722, line: 179, baseType: !3417, size: 32, offset: 384)
!3417 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1721, file: !1722, line: 179, size: 32, elements: !3418)
!3418 = !{!3419, !3420, !3421, !3422}
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !3417, file: !1722, line: 184, baseType: !1181, size: 32)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !3417, file: !1722, line: 192, baseType: !7, size: 32)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3417, file: !1722, line: 194, baseType: !7, size: 32)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !3417, file: !1722, line: 195, baseType: !139, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !1721, file: !1722, line: 199, baseType: !1181, size: 32, offset: 416)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !1607, file: !68, line: 1964, baseType: !3425, size: 64, offset: 1344)
!3425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3426, size: 64)
!3426 = !DISubroutineType(types: !3427)
!3427 = !{!593, !1549, !3428}
!3428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3429, size: 64)
!3429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !3430, line: 12, size: 256, elements: !3431)
!3430 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!3431 = !{!3432, !3433, !3434, !3435, !3436}
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !3429, file: !3430, line: 13, baseType: !523, size: 32)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !3429, file: !3430, line: 16, baseType: !139, size: 32, offset: 32)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !3429, file: !3430, line: 23, baseType: !574, size: 64, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !3429, file: !3430, line: 30, baseType: !574, size: 64, offset: 128)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !3429, file: !3430, line: 33, baseType: !3437, size: 64, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !1722, line: 27, flags: DIFlagFwdDecl)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !1607, file: !68, line: 1966, baseType: !3425, size: 64, offset: 1408)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !1550, file: !68, line: 1424, baseType: !3441, size: 64, offset: 448)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3443)
!3443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !62, line: 322, size: 704, elements: !3444)
!3444 = !{!3445, !3491, !3495, !3499, !3500, !3501, !3502, !3503, !3508, !3513, !3517}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !3443, file: !62, line: 323, baseType: !3446, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{!139, !3449}
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !62, line: 294, size: 1600, elements: !3451)
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3476, !3477, !3478}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !3450, file: !62, line: 295, baseType: !1589, size: 128)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !3450, file: !62, line: 296, baseType: !562, size: 128, offset: 128)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !3450, file: !62, line: 297, baseType: !562, size: 128, offset: 256)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !3450, file: !62, line: 298, baseType: !562, size: 128, offset: 384)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !3450, file: !62, line: 299, baseType: !1673, size: 192, offset: 512)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !3450, file: !62, line: 300, baseType: !1203, offset: 704)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !3450, file: !62, line: 301, baseType: !1181, size: 32, offset: 704)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !3450, file: !62, line: 302, baseType: !1549, size: 64, offset: 768)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !3450, file: !62, line: 303, baseType: !3461, size: 64, offset: 832)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !62, line: 68, size: 64, elements: !3462)
!3462 = !{!3463, !3475}
!3463 = !DIDerivedType(tag: DW_TAG_member, scope: !3461, file: !62, line: 69, baseType: !3464, size: 32)
!3464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3461, file: !62, line: 69, size: 32, elements: !3465)
!3465 = !{!3466, !3467, !3468}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3464, file: !62, line: 70, baseType: !1390, size: 32)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !3464, file: !62, line: 71, baseType: !1398, size: 32)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !3464, file: !62, line: 72, baseType: !3469, size: 32)
!3469 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !3470, line: 24, baseType: !3471)
!3470 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!3471 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3470, line: 22, size: 32, elements: !3472)
!3472 = !{!3473}
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3471, file: !3470, line: 23, baseType: !3474, size: 32)
!3474 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !3470, line: 20, baseType: !1396)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3461, file: !62, line: 74, baseType: !61, size: 32, offset: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !3450, file: !62, line: 304, baseType: !1481, size: 64, offset: 896)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !3450, file: !62, line: 305, baseType: !574, size: 64, offset: 960)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !3450, file: !62, line: 306, baseType: !3479, size: 576, offset: 1024)
!3479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !62, line: 205, size: 576, elements: !3480)
!3480 = !{!3481, !3483, !3484, !3485, !3486, !3487, !3488, !3489, !3490}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !3479, file: !62, line: 206, baseType: !3482, size: 64)
!3482 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !62, line: 66, baseType: !1483)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !3479, file: !62, line: 207, baseType: !3482, size: 64, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !3479, file: !62, line: 208, baseType: !3482, size: 64, offset: 128)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !3479, file: !62, line: 209, baseType: !3482, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !3479, file: !62, line: 210, baseType: !3482, size: 64, offset: 256)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !3479, file: !62, line: 211, baseType: !3482, size: 64, offset: 320)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !3479, file: !62, line: 212, baseType: !3482, size: 64, offset: 384)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !3479, file: !62, line: 213, baseType: !1489, size: 64, offset: 448)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !3479, file: !62, line: 214, baseType: !1489, size: 64, offset: 512)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !3443, file: !62, line: 324, baseType: !3492, size: 64, offset: 64)
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DISubroutineType(types: !3494)
!3494 = !{!3449, !1549, !139}
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !3443, file: !62, line: 325, baseType: !3496, size: 64, offset: 128)
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DISubroutineType(types: !3498)
!3498 = !{null, !3449}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !3443, file: !62, line: 326, baseType: !3446, size: 64, offset: 192)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !3443, file: !62, line: 327, baseType: !3446, size: 64, offset: 256)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !3443, file: !62, line: 328, baseType: !3446, size: 64, offset: 320)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !3443, file: !62, line: 329, baseType: !1635, size: 64, offset: 384)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !3443, file: !62, line: 332, baseType: !3504, size: 64, offset: 448)
!3504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3505, size: 64)
!3505 = !DISubroutineType(types: !3506)
!3506 = !{!3507, !1384}
!3507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !3443, file: !62, line: 333, baseType: !3509, size: 64, offset: 512)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!139, !1384, !3512}
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !3443, file: !62, line: 335, baseType: !3514, size: 64, offset: 576)
!3514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3515, size: 64)
!3515 = !DISubroutineType(types: !3516)
!3516 = !{!139, !1384, !3507}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3443, file: !62, line: 337, baseType: !3518, size: 64, offset: 640)
!3518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3519, size: 64)
!3519 = !DISubroutineType(types: !3520)
!3520 = !{!139, !1549, !3521}
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !1550, file: !68, line: 1425, baseType: !3523, size: 64, offset: 512)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3525)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !62, line: 428, size: 704, elements: !3526)
!3526 = !{!3527, !3531, !3532, !3536, !3537, !3538, !3553, !3576, !3580, !3581, !3604}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !3525, file: !62, line: 429, baseType: !3528, size: 64)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!139, !1549, !139, !139, !1499}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !3525, file: !62, line: 430, baseType: !1635, size: 64, offset: 64)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !3525, file: !62, line: 431, baseType: !3533, size: 64, offset: 128)
!3533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3534, size: 64)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!139, !1549, !7}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !3525, file: !62, line: 432, baseType: !3533, size: 64, offset: 192)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !3525, file: !62, line: 433, baseType: !1635, size: 64, offset: 256)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !3525, file: !62, line: 434, baseType: !3539, size: 64, offset: 320)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{!139, !1549, !139, !3542}
!3542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3543, size: 64)
!3543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !62, line: 415, size: 256, elements: !3544)
!3544 = !{!3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552}
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !3543, file: !62, line: 416, baseType: !139, size: 32)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !3543, file: !62, line: 417, baseType: !7, size: 32, offset: 32)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !3543, file: !62, line: 418, baseType: !7, size: 32, offset: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !3543, file: !62, line: 420, baseType: !7, size: 32, offset: 96)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !3543, file: !62, line: 421, baseType: !7, size: 32, offset: 128)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !3543, file: !62, line: 422, baseType: !7, size: 32, offset: 160)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !3543, file: !62, line: 423, baseType: !7, size: 32, offset: 192)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !3543, file: !62, line: 424, baseType: !7, size: 32, offset: 224)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !3525, file: !62, line: 435, baseType: !3554, size: 64, offset: 384)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DISubroutineType(types: !3556)
!3556 = !{!139, !1549, !3461, !3557}
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !62, line: 343, size: 960, elements: !3559)
!3559 = !{!3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !3558, file: !62, line: 344, baseType: !139, size: 32)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !3558, file: !62, line: 345, baseType: !586, size: 64, offset: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !3558, file: !62, line: 346, baseType: !586, size: 64, offset: 128)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !3558, file: !62, line: 347, baseType: !586, size: 64, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !3558, file: !62, line: 348, baseType: !586, size: 64, offset: 256)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !3558, file: !62, line: 349, baseType: !586, size: 64, offset: 320)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !3558, file: !62, line: 350, baseType: !586, size: 64, offset: 384)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !3558, file: !62, line: 351, baseType: !1683, size: 64, offset: 448)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !3558, file: !62, line: 353, baseType: !1683, size: 64, offset: 512)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !3558, file: !62, line: 354, baseType: !139, size: 32, offset: 576)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !3558, file: !62, line: 355, baseType: !139, size: 32, offset: 608)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !3558, file: !62, line: 356, baseType: !586, size: 64, offset: 640)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !3558, file: !62, line: 357, baseType: !586, size: 64, offset: 704)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !3558, file: !62, line: 358, baseType: !586, size: 64, offset: 768)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !3558, file: !62, line: 359, baseType: !1683, size: 64, offset: 832)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !3558, file: !62, line: 360, baseType: !139, size: 32, offset: 896)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !3525, file: !62, line: 436, baseType: !3577, size: 64, offset: 448)
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = !DISubroutineType(types: !3579)
!3579 = !{!139, !1549, !3521, !3557}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !3525, file: !62, line: 438, baseType: !3554, size: 64, offset: 512)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !3525, file: !62, line: 439, baseType: !3582, size: 64, offset: 576)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!139, !1549, !3585}
!3585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3586, size: 64)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !62, line: 409, size: 1408, elements: !3587)
!3587 = !{!3588, !3589}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !3586, file: !62, line: 410, baseType: !7, size: 32)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !3586, file: !62, line: 411, baseType: !3590, size: 1344, offset: 64)
!3590 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3591, size: 1344, elements: !516)
!3591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !62, line: 395, size: 448, elements: !3592)
!3592 = !{!3593, !3594, !3595, !3596, !3597, !3598, !3599, !3600, !3601, !3603}
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3591, file: !62, line: 396, baseType: !7, size: 32)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !3591, file: !62, line: 397, baseType: !7, size: 32, offset: 32)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !3591, file: !62, line: 399, baseType: !7, size: 32, offset: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !3591, file: !62, line: 400, baseType: !7, size: 32, offset: 96)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !3591, file: !62, line: 401, baseType: !7, size: 32, offset: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !3591, file: !62, line: 402, baseType: !7, size: 32, offset: 160)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !3591, file: !62, line: 403, baseType: !7, size: 32, offset: 192)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !3591, file: !62, line: 404, baseType: !588, size: 64, offset: 256)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !3591, file: !62, line: 405, baseType: !3602, size: 64, offset: 320)
!3602 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !524, line: 126, baseType: !586)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !3591, file: !62, line: 406, baseType: !3602, size: 64, offset: 384)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !3525, file: !62, line: 440, baseType: !3533, size: 64, offset: 640)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !1550, file: !68, line: 1426, baseType: !3606, size: 64, offset: 576)
!3606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3607, size: 64)
!3607 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3608)
!3608 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !68, line: 49, flags: DIFlagFwdDecl)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !1550, file: !68, line: 1427, baseType: !574, size: 64, offset: 640)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !1550, file: !68, line: 1428, baseType: !574, size: 64, offset: 704)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !1550, file: !68, line: 1429, baseType: !574, size: 64, offset: 768)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !1550, file: !68, line: 1430, baseType: !1345, size: 64, offset: 832)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !1550, file: !68, line: 1431, baseType: !1762, size: 256, offset: 896)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !1550, file: !68, line: 1432, baseType: !139, size: 32, offset: 1152)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !1550, file: !68, line: 1433, baseType: !1181, size: 32, offset: 1184)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !1550, file: !68, line: 1437, baseType: !3617, size: 64, offset: 1216)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3620)
!3620 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !68, line: 1437, flags: DIFlagFwdDecl)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !1550, file: !68, line: 1449, baseType: !3622, size: 64, offset: 1280)
!3622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !1361, line: 34, size: 64, elements: !3623)
!3623 = !{!3624}
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3622, file: !1361, line: 35, baseType: !1364, size: 64)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !1550, file: !68, line: 1450, baseType: !562, size: 128, offset: 1344)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !1550, file: !68, line: 1451, baseType: !3627, size: 64, offset: 1472)
!3627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3628, size: 64)
!3628 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !68, line: 699, flags: DIFlagFwdDecl)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !1550, file: !68, line: 1452, baseType: !2939, size: 64, offset: 1536)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !1550, file: !68, line: 1453, baseType: !3631, size: 64, offset: 1600)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !68, line: 1453, flags: DIFlagFwdDecl)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !1550, file: !68, line: 1454, baseType: !1589, size: 128, offset: 1664)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !1550, file: !68, line: 1455, baseType: !7, size: 32, offset: 1792)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !1550, file: !68, line: 1456, baseType: !3636, size: 2432, offset: 1856)
!3636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !62, line: 518, size: 2432, elements: !3637)
!3637 = !{!3638, !3639, !3640, !3642, !3674}
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3636, file: !62, line: 519, baseType: !7, size: 32)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !3636, file: !62, line: 520, baseType: !1762, size: 256, offset: 64)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !3636, file: !62, line: 521, baseType: !3641, size: 192, offset: 320)
!3641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1384, size: 192, elements: !516)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3636, file: !62, line: 522, baseType: !3643, size: 1728, offset: 512)
!3643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3644, size: 1728, elements: !516)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !62, line: 222, size: 576, elements: !3645)
!3645 = !{!3646, !3666, !3667, !3668, !3669, !3670, !3671, !3672, !3673}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !3644, file: !62, line: 223, baseType: !3647, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3648, size: 64)
!3648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !62, line: 443, size: 256, elements: !3649)
!3649 = !{!3650, !3651, !3664, !3665}
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !3648, file: !62, line: 444, baseType: !139, size: 32)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !3648, file: !62, line: 445, baseType: !3652, size: 64, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3653, size: 64)
!3653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3654)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !62, line: 310, size: 512, elements: !3655)
!3655 = !{!3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663}
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !3654, file: !62, line: 311, baseType: !1635, size: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !3654, file: !62, line: 312, baseType: !1635, size: 64, offset: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !3654, file: !62, line: 313, baseType: !1635, size: 64, offset: 128)
!3659 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !3654, file: !62, line: 314, baseType: !1635, size: 64, offset: 192)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !3654, file: !62, line: 315, baseType: !3446, size: 64, offset: 256)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !3654, file: !62, line: 316, baseType: !3446, size: 64, offset: 320)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !3654, file: !62, line: 317, baseType: !3446, size: 64, offset: 384)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !3654, file: !62, line: 318, baseType: !3518, size: 64, offset: 448)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !3648, file: !62, line: 446, baseType: !651, size: 64, offset: 128)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !3648, file: !62, line: 447, baseType: !3647, size: 64, offset: 192)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !3644, file: !62, line: 224, baseType: !139, size: 32, offset: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !3644, file: !62, line: 226, baseType: !562, size: 128, offset: 128)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !3644, file: !62, line: 227, baseType: !574, size: 64, offset: 256)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !3644, file: !62, line: 228, baseType: !7, size: 32, offset: 320)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !3644, file: !62, line: 229, baseType: !7, size: 32, offset: 352)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !3644, file: !62, line: 230, baseType: !3482, size: 64, offset: 384)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !3644, file: !62, line: 231, baseType: !3482, size: 64, offset: 448)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !3644, file: !62, line: 232, baseType: !368, size: 64, offset: 512)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3636, file: !62, line: 523, baseType: !3675, size: 192, offset: 2240)
!3675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3652, size: 192, elements: !516)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !1550, file: !68, line: 1458, baseType: !3677, size: 2112, offset: 4288)
!3677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !68, line: 1410, size: 2112, elements: !3678)
!3678 = !{!3679, !3680, !3681}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3677, file: !68, line: 1411, baseType: !139, size: 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !3677, file: !68, line: 1412, baseType: !2446, size: 128, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !3677, file: !68, line: 1413, baseType: !3682, size: 1920, offset: 192)
!3682 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3683, size: 1920, elements: !516)
!3683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !3684, line: 12, size: 640, elements: !3685)
!3684 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!3685 = !{!3686, !3694, !3695, !3700, !3701}
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !3683, file: !3684, line: 13, baseType: !3687, size: 320)
!3687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !3688, line: 17, size: 320, elements: !3689)
!3688 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!3689 = !{!3690, !3691, !3692, !3693}
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !3687, file: !3688, line: 18, baseType: !139, size: 32)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !3687, file: !3688, line: 19, baseType: !139, size: 32, offset: 32)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !3687, file: !3688, line: 20, baseType: !2446, size: 128, offset: 64)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !3687, file: !3688, line: 22, baseType: !1328, size: 128, align: 64, offset: 192)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !3683, file: !3684, line: 14, baseType: !699, size: 64, offset: 320)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !3683, file: !3684, line: 15, baseType: !3696, size: 64, offset: 384)
!3696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !3697, line: 16, size: 64, elements: !3698)
!3697 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!3698 = !{!3699}
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !3696, file: !3697, line: 17, baseType: !2191, size: 64)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !3683, file: !3684, line: 16, baseType: !2446, size: 128, offset: 448)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3683, file: !3684, line: 17, baseType: !1181, size: 32, offset: 576)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !1550, file: !68, line: 1465, baseType: !368, size: 64, offset: 6400)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !1550, file: !68, line: 1468, baseType: !388, size: 32, offset: 6464)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !1550, file: !68, line: 1470, baseType: !1489, size: 64, offset: 6528)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !1550, file: !68, line: 1471, baseType: !1489, size: 64, offset: 6592)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !1550, file: !68, line: 1473, baseType: !389, size: 32, offset: 6656)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !1550, file: !68, line: 1474, baseType: !3708, size: 64, offset: 6720)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !68, line: 603, flags: DIFlagFwdDecl)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !1550, file: !68, line: 1477, baseType: !568, size: 256, offset: 6784)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !1550, file: !68, line: 1478, baseType: !3712, size: 128, offset: 7040)
!3712 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !3713, line: 18, baseType: !3714)
!3713 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!3714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3713, line: 16, size: 128, elements: !3715)
!3715 = !{!3716}
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3714, file: !3713, line: 17, baseType: !3717, size: 128)
!3717 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 128, elements: !2727)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !1550, file: !68, line: 1480, baseType: !7, size: 32, offset: 7168)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !1550, file: !68, line: 1481, baseType: !3720, size: 32, offset: 7200)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !524, line: 150, baseType: !7)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !1550, file: !68, line: 1487, baseType: !1673, size: 192, offset: 7232)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !1550, file: !68, line: 1493, baseType: !648, size: 64, offset: 7424)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !1550, file: !68, line: 1495, baseType: !3724, size: 64, offset: 7488)
!3724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3725, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3726)
!3726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !1343, line: 135, size: 1024, align: 512, elements: !3727)
!3727 = !{!3728, !3732, !3733, !3740, !3746, !3750, !3754, !3758, !3759, !3763, !3767, !3772, !3776}
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !3726, file: !1343, line: 136, baseType: !3729, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3730, size: 64)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{!139, !1345, !7}
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !3726, file: !1343, line: 137, baseType: !3729, size: 64, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !3726, file: !1343, line: 138, baseType: !3734, size: 64, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3735, size: 64)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!139, !3737, !3739}
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1346)
!3739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !3726, file: !1343, line: 139, baseType: !3741, size: 64, offset: 192)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!139, !3737, !7, !648, !3744}
!3744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3745, size: 64)
!3745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1369)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !3726, file: !1343, line: 141, baseType: !3747, size: 64, offset: 256)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!139, !3737}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !3726, file: !1343, line: 142, baseType: !3751, size: 64, offset: 320)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DISubroutineType(types: !3753)
!3753 = !{!139, !1345}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !3726, file: !1343, line: 143, baseType: !3755, size: 64, offset: 384)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{null, !1345}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !3726, file: !1343, line: 144, baseType: !3755, size: 64, offset: 448)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !3726, file: !1343, line: 145, baseType: !3760, size: 64, offset: 512)
!3760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3761, size: 64)
!3761 = !DISubroutineType(types: !3762)
!3762 = !{null, !1345, !1384}
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !3726, file: !1343, line: 146, baseType: !3764, size: 64, offset: 576)
!3764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3765, size: 64)
!3765 = !DISubroutineType(types: !3766)
!3766 = !{!590, !1345, !590, !139}
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !3726, file: !1343, line: 147, baseType: !3768, size: 64, offset: 640)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!1341, !3771}
!3771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1337, size: 64)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !3726, file: !1343, line: 148, baseType: !3773, size: 64, offset: 704)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!139, !1499, !559}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !3726, file: !1343, line: 149, baseType: !3777, size: 64, offset: 768)
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3778, size: 64)
!3778 = !DISubroutineType(types: !3779)
!3779 = !{!1345, !1345, !3780}
!3780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3781, size: 64)
!3781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1385)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !1550, file: !68, line: 1500, baseType: !139, size: 32, offset: 7552)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !1550, file: !68, line: 1502, baseType: !3784, size: 448, offset: 7616)
!3784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !3430, line: 60, size: 448, elements: !3785)
!3785 = !{!3786, !3791, !3792, !3793, !3794, !3795, !3796}
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !3784, file: !3430, line: 61, baseType: !3787, size: 64)
!3787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3788, size: 64)
!3788 = !DISubroutineType(types: !3789)
!3789 = !{!574, !3790, !3428}
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3784, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !3784, file: !3430, line: 63, baseType: !3787, size: 64, offset: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3784, file: !3430, line: 66, baseType: !593, size: 64, offset: 128)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !3784, file: !3430, line: 67, baseType: !139, size: 32, offset: 192)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3784, file: !3430, line: 68, baseType: !7, size: 32, offset: 224)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3784, file: !3430, line: 71, baseType: !562, size: 128, offset: 256)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !3784, file: !3430, line: 77, baseType: !3797, size: 64, offset: 384)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !1550, file: !68, line: 1505, baseType: !1677, size: 64, offset: 8064)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !1550, file: !68, line: 1508, baseType: !1677, size: 64, offset: 8128)
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !1550, file: !68, line: 1511, baseType: !139, size: 32, offset: 8192)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !1550, file: !68, line: 1514, baseType: !1894, size: 32, offset: 8224)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !1550, file: !68, line: 1517, baseType: !3803, size: 64, offset: 8256)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2974, line: 18, flags: DIFlagFwdDecl)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !1550, file: !68, line: 1518, baseType: !1585, size: 64, offset: 8320)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !1550, file: !68, line: 1525, baseType: !2478, size: 64, offset: 8384)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !1550, file: !68, line: 1532, baseType: !3808, size: 64, offset: 8448)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !3809, line: 52, size: 64, elements: !3810)
!3809 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!3810 = !{!3811}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3808, file: !3809, line: 53, baseType: !3812, size: 64)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !3809, line: 40, size: 256, elements: !3814)
!3814 = !{!3815, !3816, !3821}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3813, file: !3809, line: 42, baseType: !1203)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !3813, file: !3809, line: 44, baseType: !3817, size: 192)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !3809, line: 28, size: 192, elements: !3818)
!3818 = !{!3819, !3820}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3817, file: !3809, line: 29, baseType: !562, size: 128)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3817, file: !3809, line: 31, baseType: !593, size: 64, offset: 128)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !3813, file: !3809, line: 49, baseType: !593, size: 64, offset: 192)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !1550, file: !68, line: 1533, baseType: !3808, size: 64, offset: 8512)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1550, file: !68, line: 1534, baseType: !1328, size: 128, align: 64, offset: 8576)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !1550, file: !68, line: 1535, baseType: !2973, size: 256, offset: 8704)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !1550, file: !68, line: 1537, baseType: !1673, size: 192, offset: 8960)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !1550, file: !68, line: 1542, baseType: !139, size: 32, offset: 9152)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !1550, file: !68, line: 1545, baseType: !1203, offset: 9184)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !1550, file: !68, line: 1546, baseType: !562, size: 128, offset: 9216)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !1550, file: !68, line: 1548, baseType: !1203, offset: 9344)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !1550, file: !68, line: 1549, baseType: !562, size: 128, offset: 9344)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !1385, file: !68, line: 624, baseType: !1733, size: 64, offset: 256)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !1385, file: !68, line: 631, baseType: !574, size: 64, offset: 320)
!3833 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !68, line: 639, baseType: !3834, size: 32, offset: 384)
!3834 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !68, line: 639, size: 32, elements: !3835)
!3835 = !{!3836, !3838}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !3834, file: !68, line: 640, baseType: !3837, size: 32)
!3837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !3834, file: !68, line: 641, baseType: !7, size: 32)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !1385, file: !68, line: 643, baseType: !1463, size: 32, offset: 416)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !1385, file: !68, line: 644, baseType: !1481, size: 64, offset: 448)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !1385, file: !68, line: 645, baseType: !1485, size: 128, offset: 512)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !1385, file: !68, line: 646, baseType: !1485, size: 128, offset: 640)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !1385, file: !68, line: 647, baseType: !1485, size: 128, offset: 768)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !1385, file: !68, line: 648, baseType: !1203, offset: 896)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !1385, file: !68, line: 649, baseType: !429, size: 16, offset: 896)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !1385, file: !68, line: 650, baseType: !375, size: 8, offset: 912)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !1385, file: !68, line: 651, baseType: !375, size: 8, offset: 920)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !1385, file: !68, line: 652, baseType: !3602, size: 64, offset: 960)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !1385, file: !68, line: 659, baseType: !574, size: 64, offset: 1024)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !1385, file: !68, line: 660, baseType: !1762, size: 256, offset: 1088)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !1385, file: !68, line: 662, baseType: !574, size: 64, offset: 1344)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !1385, file: !68, line: 663, baseType: !574, size: 64, offset: 1408)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !1385, file: !68, line: 665, baseType: !1589, size: 128, offset: 1472)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !1385, file: !68, line: 666, baseType: !562, size: 128, offset: 1600)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !1385, file: !68, line: 675, baseType: !562, size: 128, offset: 1728)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !1385, file: !68, line: 676, baseType: !562, size: 128, offset: 1856)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !1385, file: !68, line: 677, baseType: !562, size: 128, offset: 1984)
!3858 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !68, line: 678, baseType: !3859, size: 128, offset: 2112)
!3859 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !68, line: 678, size: 128, elements: !3860)
!3860 = !{!3861, !3862}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !3859, file: !68, line: 679, baseType: !1585, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !3859, file: !68, line: 680, baseType: !1328, size: 128, align: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !1385, file: !68, line: 682, baseType: !1679, size: 64, offset: 2240)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !1385, file: !68, line: 683, baseType: !1679, size: 64, offset: 2304)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !1385, file: !68, line: 684, baseType: !1181, size: 32, offset: 2368)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !1385, file: !68, line: 685, baseType: !1181, size: 32, offset: 2400)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !1385, file: !68, line: 686, baseType: !1181, size: 32, offset: 2432)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !1385, file: !68, line: 688, baseType: !1181, size: 32, offset: 2464)
!3869 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !68, line: 690, baseType: !3870, size: 64, offset: 2496)
!3870 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !68, line: 690, size: 64, elements: !3871)
!3871 = !{!3872, !4093}
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !3870, file: !68, line: 691, baseType: !3873, size: 64)
!3873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3874, size: 64)
!3874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3875)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !68, line: 1822, size: 2048, elements: !3876)
!3876 = !{!3877, !3878, !3882, !3886, !3890, !3891, !3892, !3896, !3909, !3910, !3917, !3921, !3922, !3926, !3927, !3931, !3936, !3937, !3941, !3945, !4053, !4057, !4058, !4062, !4063, !4067, !4071, !4076, !4080, !4084, !4088, !4092}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3875, file: !68, line: 1823, baseType: !651, size: 64)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3875, file: !68, line: 1824, baseType: !3879, size: 64, offset: 64)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = !DISubroutineType(types: !3881)
!3881 = !{!1481, !1315, !1481, !139}
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3875, file: !68, line: 1825, baseType: !3883, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3884, size: 64)
!3884 = !DISubroutineType(types: !3885)
!3885 = !{!1271, !1315, !590, !1285, !1695}
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3875, file: !68, line: 1826, baseType: !3887, size: 64, offset: 192)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!1271, !1315, !648, !1285, !1695}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3875, file: !68, line: 1827, baseType: !1832, size: 64, offset: 256)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3875, file: !68, line: 1828, baseType: !1832, size: 64, offset: 320)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3875, file: !68, line: 1829, baseType: !3893, size: 64, offset: 384)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!139, !1835, !559}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3875, file: !68, line: 1830, baseType: !3897, size: 64, offset: 448)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DISubroutineType(types: !3899)
!3899 = !{!139, !1315, !3900}
!3900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3901, size: 64)
!3901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !68, line: 1776, size: 128, elements: !3902)
!3902 = !{!3903, !3908}
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3901, file: !68, line: 1777, baseType: !3904, size: 64)
!3904 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !68, line: 1773, baseType: !3905)
!3905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3906, size: 64)
!3906 = !DISubroutineType(types: !3907)
!3907 = !{!139, !3900, !648, !139, !1481, !586, !7}
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3901, file: !68, line: 1778, baseType: !1481, size: 64, offset: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3875, file: !68, line: 1831, baseType: !3897, size: 64, offset: 512)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3875, file: !68, line: 1832, baseType: !3911, size: 64, offset: 576)
!3911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!3912 = !DISubroutineType(types: !3913)
!3913 = !{!3914, !1315, !3915}
!3914 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !427, line: 52, baseType: !7)
!3915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3916, size: 64)
!3916 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1569, line: 27, flags: DIFlagFwdDecl)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3875, file: !68, line: 1833, baseType: !3918, size: 64, offset: 640)
!3918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3919 = !DISubroutineType(types: !3920)
!3920 = !{!593, !1315, !7, !574}
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3875, file: !68, line: 1834, baseType: !3918, size: 64, offset: 704)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3875, file: !68, line: 1835, baseType: !3923, size: 64, offset: 768)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DISubroutineType(types: !3925)
!3925 = !{!139, !1315, !1967}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3875, file: !68, line: 1836, baseType: !574, size: 64, offset: 832)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3875, file: !68, line: 1837, baseType: !3928, size: 64, offset: 896)
!3928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3929, size: 64)
!3929 = !DISubroutineType(types: !3930)
!3930 = !{!139, !1384, !1315}
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3875, file: !68, line: 1838, baseType: !3932, size: 64, offset: 960)
!3932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3933, size: 64)
!3933 = !DISubroutineType(types: !3934)
!3934 = !{!139, !1315, !3935}
!3935 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !68, line: 1007, baseType: !368)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3875, file: !68, line: 1839, baseType: !3928, size: 64, offset: 1024)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3875, file: !68, line: 1840, baseType: !3938, size: 64, offset: 1088)
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = !DISubroutineType(types: !3940)
!3940 = !{!139, !1315, !1481, !1481, !139}
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3875, file: !68, line: 1841, baseType: !3942, size: 64, offset: 1152)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DISubroutineType(types: !3944)
!3944 = !{!139, !139, !1315, !139}
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3875, file: !68, line: 1842, baseType: !3946, size: 64, offset: 1216)
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DISubroutineType(types: !3948)
!3948 = !{!139, !1315, !139, !3949}
!3949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3950, size: 64)
!3950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !68, line: 1062, size: 1664, elements: !3951)
!3951 = !{!3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3983, !3984, !3985, !3998, !4029}
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3950, file: !68, line: 1063, baseType: !3949, size: 64)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3950, file: !68, line: 1064, baseType: !562, size: 128, offset: 64)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3950, file: !68, line: 1065, baseType: !1589, size: 128, offset: 192)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3950, file: !68, line: 1066, baseType: !562, size: 128, offset: 320)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3950, file: !68, line: 1069, baseType: !562, size: 128, offset: 448)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3950, file: !68, line: 1072, baseType: !3935, size: 64, offset: 576)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3950, file: !68, line: 1073, baseType: !7, size: 32, offset: 640)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3950, file: !68, line: 1074, baseType: !379, size: 8, offset: 672)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3950, file: !68, line: 1075, baseType: !7, size: 32, offset: 704)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3950, file: !68, line: 1076, baseType: !139, size: 32, offset: 736)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3950, file: !68, line: 1077, baseType: !2446, size: 128, offset: 768)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3950, file: !68, line: 1078, baseType: !1315, size: 64, offset: 896)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3950, file: !68, line: 1079, baseType: !1481, size: 64, offset: 960)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3950, file: !68, line: 1080, baseType: !1481, size: 64, offset: 1024)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3950, file: !68, line: 1082, baseType: !3967, size: 64, offset: 1088)
!3967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3968, size: 64)
!3968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !68, line: 1314, size: 320, elements: !3969)
!3969 = !{!3970, !3978, !3979, !3980, !3981, !3982}
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3968, file: !68, line: 1315, baseType: !3971)
!3971 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3972, line: 20, baseType: !3973)
!3972 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3973 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3972, line: 11, elements: !3974)
!3974 = !{!3975}
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3973, file: !3972, line: 12, baseType: !3976)
!3976 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !1215, line: 33, baseType: !3977)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1215, line: 31, elements: !752)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3968, file: !68, line: 1316, baseType: !139, size: 32)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3968, file: !68, line: 1317, baseType: !139, size: 32, offset: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3968, file: !68, line: 1318, baseType: !3967, size: 64, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3968, file: !68, line: 1319, baseType: !1315, size: 64, offset: 128)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3968, file: !68, line: 1320, baseType: !1328, size: 128, align: 64, offset: 192)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3950, file: !68, line: 1084, baseType: !574, size: 64, offset: 1152)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3950, file: !68, line: 1085, baseType: !574, size: 64, offset: 1216)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3950, file: !68, line: 1087, baseType: !3986, size: 64, offset: 1280)
!3986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3987, size: 64)
!3987 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3988)
!3988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !68, line: 1011, size: 128, elements: !3989)
!3989 = !{!3990, !3994}
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3988, file: !68, line: 1012, baseType: !3991, size: 64)
!3991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3992, size: 64)
!3992 = !DISubroutineType(types: !3993)
!3993 = !{null, !3949, !3949}
!3994 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3988, file: !68, line: 1013, baseType: !3995, size: 64, offset: 64)
!3995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3996, size: 64)
!3996 = !DISubroutineType(types: !3997)
!3997 = !{null, !3949}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3950, file: !68, line: 1088, baseType: !3999, size: 64, offset: 1344)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4001)
!4001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !68, line: 1016, size: 512, elements: !4002)
!4002 = !{!4003, !4007, !4011, !4012, !4016, !4020, !4024, !4028}
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !4001, file: !68, line: 1017, baseType: !4004, size: 64)
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4005, size: 64)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!3935, !3935}
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !4001, file: !68, line: 1018, baseType: !4008, size: 64, offset: 64)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{null, !3935}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !4001, file: !68, line: 1019, baseType: !3995, size: 64, offset: 128)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !4001, file: !68, line: 1020, baseType: !4013, size: 64, offset: 192)
!4013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4014, size: 64)
!4014 = !DISubroutineType(types: !4015)
!4015 = !{!139, !3949, !139}
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !4001, file: !68, line: 1021, baseType: !4017, size: 64, offset: 256)
!4017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4018, size: 64)
!4018 = !DISubroutineType(types: !4019)
!4019 = !{!559, !3949}
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !4001, file: !68, line: 1022, baseType: !4021, size: 64, offset: 320)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DISubroutineType(types: !4023)
!4023 = !{!139, !3949, !139, !565}
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !4001, file: !68, line: 1023, baseType: !4025, size: 64, offset: 384)
!4025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4026, size: 64)
!4026 = !DISubroutineType(types: !4027)
!4027 = !{null, !3949, !1809}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !4001, file: !68, line: 1024, baseType: !4017, size: 64, offset: 448)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3950, file: !68, line: 1097, baseType: !4030, size: 256, offset: 1408)
!4030 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3950, file: !68, line: 1089, size: 256, elements: !4031)
!4031 = !{!4032, !4041, !4047}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !4030, file: !68, line: 1090, baseType: !4033, size: 256)
!4033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !4034, line: 10, size: 256, elements: !4035)
!4034 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!4035 = !{!4036, !4037, !4040}
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4033, file: !4034, line: 11, baseType: !388, size: 32)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4033, file: !4034, line: 12, baseType: !4038, size: 64, offset: 64)
!4038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4039, size: 64)
!4039 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !4034, line: 5, flags: DIFlagFwdDecl)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4033, file: !4034, line: 13, baseType: !562, size: 128, offset: 128)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !4030, file: !68, line: 1091, baseType: !4042, size: 64)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !4034, line: 17, size: 64, elements: !4043)
!4043 = !{!4044}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4042, file: !4034, line: 18, baseType: !4045, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !4034, line: 16, flags: DIFlagFwdDecl)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !4030, file: !68, line: 1096, baseType: !4048, size: 192)
!4048 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4030, file: !68, line: 1092, size: 192, elements: !4049)
!4049 = !{!4050, !4051, !4052}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4048, file: !68, line: 1093, baseType: !562, size: 128)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4048, file: !68, line: 1094, baseType: !139, size: 32, offset: 128)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !4048, file: !68, line: 1095, baseType: !7, size: 32, offset: 160)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3875, file: !68, line: 1843, baseType: !4054, size: 64, offset: 1280)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!1271, !1315, !1720, !139, !1285, !1695, !139}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3875, file: !68, line: 1844, baseType: !2087, size: 64, offset: 1344)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3875, file: !68, line: 1845, baseType: !4059, size: 64, offset: 1408)
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DISubroutineType(types: !4061)
!4061 = !{!139, !139}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3875, file: !68, line: 1846, baseType: !3946, size: 64, offset: 1472)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3875, file: !68, line: 1847, baseType: !4064, size: 64, offset: 1536)
!4064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4065, size: 64)
!4065 = !DISubroutineType(types: !4066)
!4066 = !{!1271, !3114, !1315, !1695, !1285, !7}
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3875, file: !68, line: 1848, baseType: !4068, size: 64, offset: 1600)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!1271, !1315, !1695, !3114, !1285, !7}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3875, file: !68, line: 1849, baseType: !4072, size: 64, offset: 1664)
!4072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4073, size: 64)
!4073 = !DISubroutineType(types: !4074)
!4074 = !{!139, !1315, !593, !4075, !1809}
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3875, file: !68, line: 1850, baseType: !4077, size: 64, offset: 1728)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!593, !1315, !139, !1481, !1481}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3875, file: !68, line: 1852, baseType: !4081, size: 64, offset: 1792)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{null, !1661, !1315}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3875, file: !68, line: 1856, baseType: !4085, size: 64, offset: 1856)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!1271, !1315, !1481, !1315, !1481, !1285, !7}
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3875, file: !68, line: 1858, baseType: !4089, size: 64, offset: 1920)
!4089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4090, size: 64)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!1481, !1315, !1481, !1315, !1481, !1481, !7}
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3875, file: !68, line: 1861, baseType: !3938, size: 64, offset: 1984)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !3870, file: !68, line: 692, baseType: !1614, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !1385, file: !68, line: 694, baseType: !4095, size: 64, offset: 2560)
!4095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4096, size: 64)
!4096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !68, line: 1100, size: 384, elements: !4097)
!4097 = !{!4098, !4099, !4100, !4101}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !4096, file: !68, line: 1101, baseType: !1203)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !4096, file: !68, line: 1102, baseType: !562, size: 128)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !4096, file: !68, line: 1103, baseType: !562, size: 128, offset: 128)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !4096, file: !68, line: 1104, baseType: !562, size: 128, offset: 256)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !1385, file: !68, line: 695, baseType: !1734, size: 1216, align: 64, offset: 2624)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !1385, file: !68, line: 696, baseType: !562, size: 128, offset: 3840)
!4104 = !DIDerivedType(tag: DW_TAG_member, scope: !1385, file: !68, line: 697, baseType: !4105, size: 64, offset: 3968)
!4105 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1385, file: !68, line: 697, size: 64, elements: !4106)
!4106 = !{!4107, !4108, !4109, !4112, !4113}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !4105, file: !68, line: 698, baseType: !3114, size: 64)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !4105, file: !68, line: 699, baseType: !3627, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !4105, file: !68, line: 700, baseType: !4110, size: 64)
!4110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4111, size: 64)
!4111 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !68, line: 700, flags: DIFlagFwdDecl)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !4105, file: !68, line: 701, baseType: !590, size: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !4105, file: !68, line: 702, baseType: !7, size: 32)
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !1385, file: !68, line: 705, baseType: !389, size: 32, offset: 4032)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !1385, file: !68, line: 708, baseType: !389, size: 32, offset: 4064)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !1385, file: !68, line: 709, baseType: !3708, size: 64, offset: 4096)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !1385, file: !68, line: 720, baseType: !368, size: 64, offset: 4160)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !1346, file: !1343, line: 98, baseType: !4119, size: 256, offset: 448)
!4119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !379, size: 256, elements: !570)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !1346, file: !1343, line: 101, baseType: !4121, size: 32, offset: 704)
!4121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !4122, line: 25, size: 32, elements: !4123)
!4122 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!4123 = !{!4124}
!4124 = !DIDerivedType(tag: DW_TAG_member, scope: !4121, file: !4122, line: 26, baseType: !4125, size: 32)
!4125 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4121, file: !4122, line: 26, size: 32, elements: !4126)
!4126 = !{!4127}
!4127 = !DIDerivedType(tag: DW_TAG_member, scope: !4125, file: !4122, line: 30, baseType: !4128, size: 32)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4125, file: !4122, line: 30, size: 32, elements: !4129)
!4129 = !{!4130, !4131}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4128, file: !4122, line: 31, baseType: !1203)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4128, file: !4122, line: 32, baseType: !139, size: 32)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !1346, file: !1343, line: 102, baseType: !3724, size: 64, offset: 768)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !1346, file: !1343, line: 103, baseType: !1549, size: 64, offset: 832)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !1346, file: !1343, line: 104, baseType: !574, size: 64, offset: 896)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !1346, file: !1343, line: 105, baseType: !368, size: 64, offset: 960)
!4136 = !DIDerivedType(tag: DW_TAG_member, scope: !1346, file: !1343, line: 107, baseType: !4137, size: 128, offset: 1024)
!4137 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1346, file: !1343, line: 107, size: 128, elements: !4138)
!4138 = !{!4139, !4140}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !4137, file: !1343, line: 108, baseType: !562, size: 128)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !4137, file: !1343, line: 109, baseType: !4141, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2446, size: 64)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !1346, file: !1343, line: 111, baseType: !562, size: 128, offset: 1152)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !1346, file: !1343, line: 112, baseType: !562, size: 128, offset: 1280)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !1346, file: !1343, line: 120, baseType: !4145, size: 128, offset: 1408)
!4145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1346, file: !1343, line: 116, size: 128, elements: !4146)
!4146 = !{!4147, !4148, !4149}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !4145, file: !1343, line: 117, baseType: !1589, size: 128)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !4145, file: !1343, line: 118, baseType: !1360, size: 128)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !4145, file: !1343, line: 119, baseType: !1328, size: 128, align: 64)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1316, file: !68, line: 922, baseType: !1384, size: 64, offset: 256)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1316, file: !68, line: 923, baseType: !3873, size: 64, offset: 320)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1316, file: !68, line: 929, baseType: !1203, offset: 384)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1316, file: !68, line: 930, baseType: !67, size: 32, offset: 384)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1316, file: !68, line: 931, baseType: !1677, size: 64, offset: 448)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1316, file: !68, line: 932, baseType: !7, size: 32, offset: 512)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1316, file: !68, line: 933, baseType: !3720, size: 32, offset: 544)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1316, file: !68, line: 934, baseType: !1673, size: 192, offset: 576)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1316, file: !68, line: 935, baseType: !1481, size: 64, offset: 768)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1316, file: !68, line: 936, baseType: !4160, size: 192, offset: 832)
!4160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !68, line: 885, size: 192, elements: !4161)
!4161 = !{!4162, !4163, !4164, !4165, !4166, !4167}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4160, file: !68, line: 886, baseType: !3971)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !4160, file: !68, line: 887, baseType: !2436, size: 64)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !4160, file: !68, line: 888, baseType: !76, size: 32, offset: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !4160, file: !68, line: 889, baseType: !1390, size: 32, offset: 96)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !4160, file: !68, line: 889, baseType: !1390, size: 32, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !4160, file: !68, line: 890, baseType: !139, size: 32, offset: 160)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1316, file: !68, line: 937, baseType: !2545, size: 64, offset: 1024)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1316, file: !68, line: 938, baseType: !4170, size: 256, offset: 1088)
!4170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !68, line: 896, size: 256, elements: !4171)
!4171 = !{!4172, !4173, !4174, !4175, !4176, !4177}
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4170, file: !68, line: 897, baseType: !574, size: 64)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4170, file: !68, line: 898, baseType: !7, size: 32, offset: 64)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !4170, file: !68, line: 899, baseType: !7, size: 32, offset: 96)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4170, file: !68, line: 902, baseType: !7, size: 32, offset: 128)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !4170, file: !68, line: 903, baseType: !7, size: 32, offset: 160)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !4170, file: !68, line: 904, baseType: !1481, size: 64, offset: 192)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1316, file: !68, line: 940, baseType: !586, size: 64, offset: 1344)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1316, file: !68, line: 945, baseType: !368, size: 64, offset: 1408)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1316, file: !68, line: 949, baseType: !562, size: 128, offset: 1472)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1316, file: !68, line: 950, baseType: !562, size: 128, offset: 1600)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1316, file: !68, line: 952, baseType: !1733, size: 64, offset: 1728)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1316, file: !68, line: 953, baseType: !1894, size: 32, offset: 1792)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1316, file: !68, line: 954, baseType: !1894, size: 32, offset: 1824)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1306, file: !1265, line: 174, baseType: !1312, size: 64, offset: 320)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1306, file: !1265, line: 176, baseType: !4187, size: 64, offset: 384)
!4187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4188, size: 64)
!4188 = !DISubroutineType(types: !4189)
!4189 = !{!139, !1315, !1196, !1305, !1967}
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !1294, file: !1265, line: 90, baseType: !1289, size: 64, offset: 192)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !1294, file: !1265, line: 91, baseType: !4192, size: 64, offset: 256)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1305, size: 64)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !1255, file: !1191, line: 143, baseType: !4194, size: 64, offset: 256)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!4197, !1196}
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4199)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !85, line: 39, size: 384, elements: !4200)
!4200 = !{!4201, !4202, !4206, !4210, !4216, !4220}
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4199, file: !85, line: 40, baseType: !84, size: 32)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4199, file: !85, line: 41, baseType: !4203, size: 64, offset: 64)
!4203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4204, size: 64)
!4204 = !DISubroutineType(types: !4205)
!4205 = !{!559}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4199, file: !85, line: 42, baseType: !4207, size: 64, offset: 128)
!4207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4208, size: 64)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!368}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4199, file: !85, line: 43, baseType: !4211, size: 64, offset: 192)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DISubroutineType(types: !4213)
!4213 = !{!3143, !4214}
!4214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4215, size: 64)
!4215 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !85, line: 19, flags: DIFlagFwdDecl)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4199, file: !85, line: 44, baseType: !4217, size: 64, offset: 256)
!4217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4218, size: 64)
!4218 = !DISubroutineType(types: !4219)
!4219 = !{!3143}
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4199, file: !85, line: 45, baseType: !670, size: 64, offset: 320)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !1255, file: !1191, line: 144, baseType: !4222, size: 64, offset: 320)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!3143, !1196}
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !1255, file: !1191, line: 145, baseType: !4226, size: 64, offset: 384)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{null, !1196, !4229, !4230}
!4229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !1190, file: !1191, line: 70, baseType: !4232, size: 64, offset: 384)
!4232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4233, size: 64)
!4233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !1569, line: 123, size: 1024, elements: !4234)
!4234 = !{!4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4345, !4346, !4347, !4348, !4349}
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4233, file: !1569, line: 124, baseType: !1181, size: 32)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4233, file: !1569, line: 125, baseType: !1181, size: 32, offset: 32)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4233, file: !1569, line: 135, baseType: !4232, size: 64, offset: 64)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4233, file: !1569, line: 136, baseType: !648, size: 64, offset: 128)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4233, file: !1569, line: 138, baseType: !1755, size: 192, align: 64, offset: 192)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4233, file: !1569, line: 140, baseType: !3143, size: 64, offset: 384)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4233, file: !1569, line: 141, baseType: !7, size: 32, offset: 448)
!4242 = !DIDerivedType(tag: DW_TAG_member, scope: !4233, file: !1569, line: 142, baseType: !4243, size: 256, offset: 512)
!4243 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4233, file: !1569, line: 142, size: 256, elements: !4244)
!4244 = !{!4245, !4285, !4289}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4243, file: !1569, line: 143, baseType: !4246, size: 192)
!4246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !1569, line: 91, size: 192, elements: !4247)
!4247 = !{!4248, !4249, !4250}
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4246, file: !1569, line: 92, baseType: !574, size: 64)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4246, file: !1569, line: 94, baseType: !1751, size: 64, offset: 64)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4246, file: !1569, line: 100, baseType: !4251, size: 64, offset: 128)
!4251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4252, size: 64)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !1569, line: 180, size: 704, elements: !4253)
!4253 = !{!4254, !4255, !4256, !4257, !4258, !4259, !4283, !4284}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4252, file: !1569, line: 182, baseType: !4232, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4252, file: !1569, line: 183, baseType: !7, size: 32, offset: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4252, file: !1569, line: 186, baseType: !2465, size: 192, offset: 128)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4252, file: !1569, line: 187, baseType: !388, size: 32, offset: 320)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4252, file: !1569, line: 188, baseType: !388, size: 32, offset: 352)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4252, file: !1569, line: 189, baseType: !4260, size: 64, offset: 384)
!4260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4261, size: 64)
!4261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !1569, line: 168, size: 320, elements: !4262)
!4262 = !{!4263, !4267, !4271, !4275, !4279}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4261, file: !1569, line: 169, baseType: !4264, size: 64)
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4265, size: 64)
!4265 = !DISubroutineType(types: !4266)
!4266 = !{!139, !1661, !4251}
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4261, file: !1569, line: 171, baseType: !4268, size: 64, offset: 64)
!4268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4269, size: 64)
!4269 = !DISubroutineType(types: !4270)
!4270 = !{!139, !4232, !648, !1280}
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4261, file: !1569, line: 173, baseType: !4272, size: 64, offset: 128)
!4272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4273, size: 64)
!4273 = !DISubroutineType(types: !4274)
!4274 = !{!139, !4232}
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4261, file: !1569, line: 174, baseType: !4276, size: 64, offset: 192)
!4276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4277, size: 64)
!4277 = !DISubroutineType(types: !4278)
!4278 = !{!139, !4232, !4232, !648}
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4261, file: !1569, line: 176, baseType: !4280, size: 64, offset: 256)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 64)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!139, !1661, !4232, !4251}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4252, file: !1569, line: 192, baseType: !562, size: 128, offset: 448)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4252, file: !1569, line: 194, baseType: !2446, size: 128, offset: 576)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4243, file: !1569, line: 144, baseType: !4286, size: 64)
!4286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !1569, line: 103, size: 64, elements: !4287)
!4287 = !{!4288}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4286, file: !1569, line: 104, baseType: !4232, size: 64)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4243, file: !1569, line: 145, baseType: !4290, size: 256)
!4290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !1569, line: 107, size: 256, elements: !4291)
!4291 = !{!4292, !4340, !4343, !4344}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4290, file: !1569, line: 108, baseType: !4293, size: 64)
!4293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4294, size: 64)
!4294 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4295)
!4295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !1569, line: 217, size: 768, elements: !4296)
!4296 = !{!4297, !4317, !4321, !4322, !4323, !4324, !4325, !4329, !4330, !4331, !4332, !4336}
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4295, file: !1569, line: 222, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{!139, !4301}
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !1569, line: 197, size: 1088, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4314, !4315, !4316}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4302, file: !1569, line: 199, baseType: !4232, size: 64)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4302, file: !1569, line: 200, baseType: !1315, size: 64, offset: 64)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4302, file: !1569, line: 201, baseType: !1661, size: 64, offset: 128)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4302, file: !1569, line: 202, baseType: !368, size: 64, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4302, file: !1569, line: 205, baseType: !1673, size: 192, offset: 256)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4302, file: !1569, line: 206, baseType: !1673, size: 192, offset: 448)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4302, file: !1569, line: 207, baseType: !139, size: 32, offset: 640)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4302, file: !1569, line: 208, baseType: !562, size: 128, offset: 704)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4302, file: !1569, line: 209, baseType: !590, size: 64, offset: 832)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4302, file: !1569, line: 211, baseType: !1285, size: 64, offset: 896)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4302, file: !1569, line: 212, baseType: !559, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4315 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4302, file: !1569, line: 213, baseType: !559, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4302, file: !1569, line: 214, baseType: !1995, size: 64, offset: 1024)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4295, file: !1569, line: 223, baseType: !4318, size: 64, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{null, !4301}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4295, file: !1569, line: 236, baseType: !1705, size: 64, offset: 128)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4295, file: !1569, line: 238, baseType: !1692, size: 64, offset: 192)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4295, file: !1569, line: 239, baseType: !1701, size: 64, offset: 256)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4295, file: !1569, line: 240, baseType: !1697, size: 64, offset: 320)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4295, file: !1569, line: 242, baseType: !4326, size: 64, offset: 384)
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4327, size: 64)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!1271, !4301, !590, !1285, !1481}
!4329 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4295, file: !1569, line: 252, baseType: !1285, size: 64, offset: 448)
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4295, file: !1569, line: 259, baseType: !559, size: 8, offset: 512)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4295, file: !1569, line: 260, baseType: !4326, size: 64, offset: 576)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4295, file: !1569, line: 263, baseType: !4333, size: 64, offset: 640)
!4333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4334, size: 64)
!4334 = !DISubroutineType(types: !4335)
!4335 = !{!3914, !4301, !3915}
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4295, file: !1569, line: 266, baseType: !4337, size: 64, offset: 704)
!4337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4338, size: 64)
!4338 = !DISubroutineType(types: !4339)
!4339 = !{!139, !4301, !1967}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4290, file: !1569, line: 109, baseType: !4341, size: 64, offset: 64)
!4341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4342 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !1569, line: 31, flags: DIFlagFwdDecl)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4290, file: !1569, line: 110, baseType: !1481, size: 64, offset: 128)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4290, file: !1569, line: 111, baseType: !4232, size: 64, offset: 192)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4233, file: !1569, line: 148, baseType: !368, size: 64, offset: 768)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4233, file: !1569, line: 154, baseType: !586, size: 64, offset: 832)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4233, file: !1569, line: 156, baseType: !429, size: 16, offset: 896)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4233, file: !1569, line: 157, baseType: !1280, size: 16, offset: 912)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4233, file: !1569, line: 158, baseType: !4350, size: 64, offset: 960)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !1569, line: 32, flags: DIFlagFwdDecl)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1190, file: !1191, line: 71, baseType: !1172, size: 32, offset: 448)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !1190, file: !1191, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !1190, file: !1191, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !1190, file: !1191, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !1190, file: !1191, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !1190, file: !1191, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1187, file: !97, line: 463, baseType: !1186, size: 64, offset: 512)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1187, file: !97, line: 465, baseType: !4360, size: 64, offset: 576)
!4360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4361, size: 64)
!4361 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !97, line: 36, flags: DIFlagFwdDecl)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !1187, file: !97, line: 467, baseType: !648, size: 64, offset: 640)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1187, file: !97, line: 468, baseType: !4364, size: 64, offset: 704)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4366)
!4366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !97, line: 87, size: 384, elements: !4367)
!4367 = !{!4368, !4369, !4370, !4374, !4379, !4383}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4366, file: !97, line: 88, baseType: !648, size: 64)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4366, file: !97, line: 89, baseType: !1291, size: 64, offset: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4366, file: !97, line: 90, baseType: !4371, size: 64, offset: 128)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!139, !1186, !1238}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4366, file: !97, line: 91, baseType: !4375, size: 64, offset: 192)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!590, !1186, !4378, !4229, !4230}
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4366, file: !97, line: 93, baseType: !4380, size: 64, offset: 256)
!4380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4381, size: 64)
!4381 = !DISubroutineType(types: !4382)
!4382 = !{null, !1186}
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4366, file: !97, line: 95, baseType: !4384, size: 64, offset: 320)
!4384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4385, size: 64)
!4385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4386)
!4386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !104, line: 278, size: 1472, elements: !4387)
!4387 = !{!4388, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413}
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4386, file: !104, line: 279, baseType: !4389, size: 64)
!4389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4390, size: 64)
!4390 = !DISubroutineType(types: !4391)
!4391 = !{!139, !1186}
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4386, file: !104, line: 280, baseType: !4380, size: 64, offset: 64)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4386, file: !104, line: 281, baseType: !4389, size: 64, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4386, file: !104, line: 282, baseType: !4389, size: 64, offset: 192)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4386, file: !104, line: 283, baseType: !4389, size: 64, offset: 256)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4386, file: !104, line: 284, baseType: !4389, size: 64, offset: 320)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4386, file: !104, line: 285, baseType: !4389, size: 64, offset: 384)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4386, file: !104, line: 286, baseType: !4389, size: 64, offset: 448)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4386, file: !104, line: 287, baseType: !4389, size: 64, offset: 512)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4386, file: !104, line: 288, baseType: !4389, size: 64, offset: 576)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4386, file: !104, line: 289, baseType: !4389, size: 64, offset: 640)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4386, file: !104, line: 290, baseType: !4389, size: 64, offset: 704)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4386, file: !104, line: 291, baseType: !4389, size: 64, offset: 768)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4386, file: !104, line: 292, baseType: !4389, size: 64, offset: 832)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4386, file: !104, line: 293, baseType: !4389, size: 64, offset: 896)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4386, file: !104, line: 294, baseType: !4389, size: 64, offset: 960)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4386, file: !104, line: 295, baseType: !4389, size: 64, offset: 1024)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4386, file: !104, line: 296, baseType: !4389, size: 64, offset: 1088)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4386, file: !104, line: 297, baseType: !4389, size: 64, offset: 1152)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4386, file: !104, line: 298, baseType: !4389, size: 64, offset: 1216)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4386, file: !104, line: 299, baseType: !4389, size: 64, offset: 1280)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4386, file: !104, line: 300, baseType: !4389, size: 64, offset: 1344)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4386, file: !104, line: 301, baseType: !4389, size: 64, offset: 1408)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !1187, file: !97, line: 470, baseType: !4415, size: 64, offset: 768)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4417, line: 82, size: 1408, elements: !4418)
!4417 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4418 = !{!4419, !4420, !4421, !4422, !4423, !4424, !4425, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4493, !4494, !4495, !4496, !4500, !4503, !4504}
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4416, file: !4417, line: 83, baseType: !648, size: 64)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4416, file: !4417, line: 84, baseType: !648, size: 64, offset: 64)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4416, file: !4417, line: 85, baseType: !1186, size: 64, offset: 128)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4416, file: !4417, line: 86, baseType: !1291, size: 64, offset: 192)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4416, file: !4417, line: 87, baseType: !1291, size: 64, offset: 256)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4416, file: !4417, line: 88, baseType: !1291, size: 64, offset: 320)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4416, file: !4417, line: 90, baseType: !4426, size: 64, offset: 384)
!4426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4427, size: 64)
!4427 = !DISubroutineType(types: !4428)
!4428 = !{!139, !1186, !4429}
!4429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4430, size: 64)
!4430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !91, line: 95, size: 1152, elements: !4431)
!4431 = !{!4432, !4433, !4434, !4435, !4436, !4437, !4438, !4451, !4464, !4465, !4466, !4467, !4468, !4476, !4477, !4478, !4479, !4480, !4481}
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4430, file: !91, line: 96, baseType: !648, size: 64)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4430, file: !91, line: 97, baseType: !4415, size: 64, offset: 64)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4430, file: !91, line: 99, baseType: !651, size: 64, offset: 128)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4430, file: !91, line: 100, baseType: !648, size: 64, offset: 192)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4430, file: !91, line: 102, baseType: !559, size: 8, offset: 256)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4430, file: !91, line: 103, baseType: !90, size: 32, offset: 288)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4430, file: !91, line: 105, baseType: !4439, size: 64, offset: 320)
!4439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4440, size: 64)
!4440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4441)
!4441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4442, line: 262, size: 1600, elements: !4443)
!4442 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4443 = !{!4444, !4445, !4446, !4450}
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4441, file: !4442, line: 263, baseType: !568, size: 256)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4441, file: !4442, line: 264, baseType: !568, size: 256, offset: 256)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4441, file: !4442, line: 265, baseType: !4447, size: 1024, offset: 512)
!4447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 1024, elements: !4448)
!4448 = !{!4449}
!4449 = !DISubrange(count: 128)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4441, file: !4442, line: 266, baseType: !3143, size: 64, offset: 1536)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4430, file: !91, line: 106, baseType: !4452, size: 64, offset: 384)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4454)
!4454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4442, line: 210, size: 256, elements: !4455)
!4455 = !{!4456, !4460, !4462, !4463}
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4454, file: !4442, line: 211, baseType: !4457, size: 72)
!4457 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 72, elements: !4458)
!4458 = !{!4459}
!4459 = !DISubrange(count: 9)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4454, file: !4442, line: 212, baseType: !4461, size: 64, offset: 128)
!4461 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4442, line: 14, baseType: !574)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4454, file: !4442, line: 213, baseType: !389, size: 32, offset: 192)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4454, file: !4442, line: 214, baseType: !389, size: 32, offset: 224)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4430, file: !91, line: 108, baseType: !4389, size: 64, offset: 448)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4430, file: !91, line: 109, baseType: !4380, size: 64, offset: 512)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4430, file: !91, line: 110, baseType: !4389, size: 64, offset: 576)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4430, file: !91, line: 111, baseType: !4380, size: 64, offset: 640)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4430, file: !91, line: 112, baseType: !4469, size: 64, offset: 704)
!4469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4470, size: 64)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{!139, !1186, !4472}
!4472 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !104, line: 52, baseType: !4473)
!4473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !104, line: 50, size: 32, elements: !4474)
!4474 = !{!4475}
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4473, file: !104, line: 51, baseType: !139, size: 32)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4430, file: !91, line: 113, baseType: !4389, size: 64, offset: 768)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4430, file: !91, line: 114, baseType: !1291, size: 64, offset: 832)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4430, file: !91, line: 115, baseType: !1291, size: 64, offset: 896)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4430, file: !91, line: 117, baseType: !4384, size: 64, offset: 960)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4430, file: !91, line: 118, baseType: !4380, size: 64, offset: 1024)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4430, file: !91, line: 120, baseType: !4482, size: 64, offset: 1088)
!4482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4483, size: 64)
!4483 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !91, line: 120, flags: DIFlagFwdDecl)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4416, file: !4417, line: 91, baseType: !4371, size: 64, offset: 448)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4416, file: !4417, line: 92, baseType: !4389, size: 64, offset: 512)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4416, file: !4417, line: 93, baseType: !4380, size: 64, offset: 576)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4416, file: !4417, line: 94, baseType: !4389, size: 64, offset: 640)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4416, file: !4417, line: 95, baseType: !4380, size: 64, offset: 704)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4416, file: !4417, line: 97, baseType: !4389, size: 64, offset: 768)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4416, file: !4417, line: 98, baseType: !4389, size: 64, offset: 832)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4416, file: !4417, line: 100, baseType: !4469, size: 64, offset: 896)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4416, file: !4417, line: 101, baseType: !4389, size: 64, offset: 960)
!4493 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4416, file: !4417, line: 103, baseType: !4389, size: 64, offset: 1024)
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4416, file: !4417, line: 105, baseType: !4389, size: 64, offset: 1088)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4416, file: !4417, line: 107, baseType: !4384, size: 64, offset: 1152)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4416, file: !4417, line: 109, baseType: !4497, size: 64, offset: 1216)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4498, size: 64)
!4498 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4499)
!4499 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4417, line: 109, flags: DIFlagFwdDecl)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4416, file: !4417, line: 111, baseType: !4501, size: 64, offset: 1280)
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4417, line: 111, flags: DIFlagFwdDecl)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4416, file: !4417, line: 112, baseType: !1595, offset: 1344)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4416, file: !4417, line: 114, baseType: !559, size: 8, offset: 1344)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1187, file: !97, line: 471, baseType: !4429, size: 64, offset: 832)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !1187, file: !97, line: 473, baseType: !368, size: 64, offset: 896)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !1187, file: !97, line: 475, baseType: !368, size: 64, offset: 960)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1187, file: !97, line: 480, baseType: !1673, size: 192, offset: 1024)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1187, file: !97, line: 484, baseType: !4510, size: 576, offset: 1216)
!4510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !97, line: 361, size: 576, elements: !4511)
!4511 = !{!4512, !4513, !4514, !4515, !4516, !4517}
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4510, file: !97, line: 362, baseType: !562, size: 128)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4510, file: !97, line: 363, baseType: !562, size: 128, offset: 128)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4510, file: !97, line: 364, baseType: !562, size: 128, offset: 256)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4510, file: !97, line: 365, baseType: !562, size: 128, offset: 384)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4510, file: !97, line: 366, baseType: !559, size: 8, offset: 512)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4510, file: !97, line: 367, baseType: !96, size: 32, offset: 544)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !1187, file: !97, line: 485, baseType: !4519, size: 2304, offset: 1792)
!4519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !104, line: 565, size: 2304, elements: !4520)
!4520 = !{!4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4574, !4575, !4576, !4577, !4578, !4579, !4580, !4581, !4582, !4583, !4584, !4585, !4586, !4587, !4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4616, !4620}
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4519, file: !104, line: 566, baseType: !4472, size: 32)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4519, file: !104, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4519, file: !104, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4519, file: !104, line: 569, baseType: !559, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4519, file: !104, line: 570, baseType: !559, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4519, file: !104, line: 571, baseType: !559, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4519, file: !104, line: 572, baseType: !559, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4519, file: !104, line: 573, baseType: !559, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4519, file: !104, line: 574, baseType: !559, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4519, file: !104, line: 575, baseType: !559, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4519, file: !104, line: 576, baseType: !559, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4519, file: !104, line: 577, baseType: !388, size: 32, offset: 64)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4519, file: !104, line: 578, baseType: !1203, offset: 96)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4519, file: !104, line: 580, baseType: !562, size: 128, offset: 128)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4519, file: !104, line: 581, baseType: !2500, size: 192, offset: 256)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4519, file: !104, line: 582, baseType: !4537, size: 64, offset: 448)
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4538, size: 64)
!4538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4539, line: 43, size: 1472, elements: !4540)
!4539 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4540 = !{!4541, !4542, !4543, !4544, !4545, !4548, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4572, !4573}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4538, file: !4539, line: 44, baseType: !648, size: 64)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4538, file: !4539, line: 45, baseType: !139, size: 32, offset: 64)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4538, file: !4539, line: 46, baseType: !562, size: 128, offset: 128)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4538, file: !4539, line: 47, baseType: !1203, offset: 256)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4538, file: !4539, line: 48, baseType: !4546, size: 64, offset: 256)
!4546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4547, size: 64)
!4547 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !104, line: 533, flags: DIFlagFwdDecl)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4538, file: !4539, line: 49, baseType: !4549, size: 320, offset: 320)
!4549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !4550, line: 11, size: 320, elements: !4551)
!4550 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!4551 = !{!4552, !4553, !4554, !4559}
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4549, file: !4550, line: 16, baseType: !1589, size: 128)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4549, file: !4550, line: 17, baseType: !574, size: 64, offset: 128)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !4549, file: !4550, line: 18, baseType: !4555, size: 64, offset: 192)
!4555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4556, size: 64)
!4556 = !DISubroutineType(types: !4557)
!4557 = !{null, !4558}
!4558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4549, size: 64)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4549, file: !4550, line: 19, baseType: !388, size: 32, offset: 256)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4538, file: !4539, line: 50, baseType: !574, size: 64, offset: 640)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4538, file: !4539, line: 51, baseType: !2269, size: 64, offset: 704)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4538, file: !4539, line: 52, baseType: !2269, size: 64, offset: 768)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4538, file: !4539, line: 53, baseType: !2269, size: 64, offset: 832)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4538, file: !4539, line: 54, baseType: !2269, size: 64, offset: 896)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4538, file: !4539, line: 55, baseType: !2269, size: 64, offset: 960)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4538, file: !4539, line: 56, baseType: !574, size: 64, offset: 1024)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4538, file: !4539, line: 57, baseType: !574, size: 64, offset: 1088)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4538, file: !4539, line: 58, baseType: !574, size: 64, offset: 1152)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4538, file: !4539, line: 59, baseType: !574, size: 64, offset: 1216)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4538, file: !4539, line: 60, baseType: !574, size: 64, offset: 1280)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4538, file: !4539, line: 61, baseType: !1186, size: 64, offset: 1344)
!4572 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4538, file: !4539, line: 62, baseType: !559, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4538, file: !4539, line: 63, baseType: !559, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4519, file: !104, line: 583, baseType: !559, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4519, file: !104, line: 584, baseType: !559, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4519, file: !104, line: 585, baseType: !559, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4519, file: !104, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4519, file: !104, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4519, file: !104, line: 592, baseType: !2261, size: 512, offset: 576)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4519, file: !104, line: 593, baseType: !586, size: 64, offset: 1088)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4519, file: !104, line: 594, baseType: !2973, size: 256, offset: 1152)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4519, file: !104, line: 595, baseType: !2446, size: 128, offset: 1408)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4519, file: !104, line: 596, baseType: !4546, size: 64, offset: 1536)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4519, file: !104, line: 597, baseType: !1181, size: 32, offset: 1600)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4519, file: !104, line: 598, baseType: !1181, size: 32, offset: 1632)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4519, file: !104, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4519, file: !104, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4519, file: !104, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4519, file: !104, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4519, file: !104, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4519, file: !104, line: 604, baseType: !559, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4519, file: !104, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4519, file: !104, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4519, file: !104, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4519, file: !104, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4519, file: !104, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4519, file: !104, line: 610, baseType: !7, size: 32, offset: 1696)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4519, file: !104, line: 611, baseType: !103, size: 32, offset: 1728)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4519, file: !104, line: 612, baseType: !111, size: 32, offset: 1760)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4519, file: !104, line: 613, baseType: !139, size: 32, offset: 1792)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4519, file: !104, line: 614, baseType: !139, size: 32, offset: 1824)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4519, file: !104, line: 615, baseType: !586, size: 64, offset: 1856)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4519, file: !104, line: 616, baseType: !586, size: 64, offset: 1920)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4519, file: !104, line: 617, baseType: !586, size: 64, offset: 1984)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4519, file: !104, line: 618, baseType: !586, size: 64, offset: 2048)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4519, file: !104, line: 620, baseType: !4607, size: 64, offset: 2112)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !104, line: 536, size: 256, elements: !4609)
!4609 = !{!4610, !4611, !4612, !4613}
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4608, file: !104, line: 537, baseType: !1203)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4608, file: !104, line: 538, baseType: !7, size: 32)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4608, file: !104, line: 540, baseType: !562, size: 128, offset: 64)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4608, file: !104, line: 543, baseType: !4614, size: 64, offset: 192)
!4614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4615, size: 64)
!4615 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !104, line: 534, flags: DIFlagFwdDecl)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4519, file: !104, line: 621, baseType: !4617, size: 64, offset: 2176)
!4617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4618, size: 64)
!4618 = !DISubroutineType(types: !4619)
!4619 = !{null, !1186, !2409}
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4519, file: !104, line: 622, baseType: !4621, size: 64, offset: 2240)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !104, line: 622, flags: DIFlagFwdDecl)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !1187, file: !97, line: 486, baseType: !4624, size: 64, offset: 4096)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !104, line: 642, size: 1792, elements: !4626)
!4626 = !{!4627, !4628, !4629, !4633, !4634, !4635}
!4627 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4625, file: !104, line: 643, baseType: !4386, size: 1472)
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4625, file: !104, line: 644, baseType: !4389, size: 64, offset: 1472)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4625, file: !104, line: 645, baseType: !4630, size: 64, offset: 1536)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DISubroutineType(types: !4632)
!4632 = !{null, !1186, !559}
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4625, file: !104, line: 646, baseType: !4389, size: 64, offset: 1600)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4625, file: !104, line: 647, baseType: !4380, size: 64, offset: 1664)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4625, file: !104, line: 648, baseType: !4380, size: 64, offset: 1728)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !1187, file: !97, line: 493, baseType: !4637, size: 64, offset: 4160)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !118, line: 162, size: 1088, elements: !4639)
!4639 = !{!4640, !4641, !4642, !4814, !4815, !4816, !4817, !4818, !4819, !4822, !4823, !4824, !4825, !4826, !4827, !4828}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4638, file: !118, line: 163, baseType: !562, size: 128)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4638, file: !118, line: 164, baseType: !648, size: 64, offset: 128)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4638, file: !118, line: 165, baseType: !4643, size: 64, offset: 192)
!4643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4644, size: 64)
!4644 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4645)
!4645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !118, line: 105, size: 640, elements: !4646)
!4646 = !{!4647, !4765, !4776, !4781, !4785, !4791, !4795, !4799, !4806, !4810}
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4645, file: !118, line: 106, baseType: !4648, size: 64)
!4648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4649, size: 64)
!4649 = !DISubroutineType(types: !4650)
!4650 = !{!139, !4637, !4651, !117}
!4651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4652, size: 64)
!4652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4653, line: 51, size: 1344, elements: !4654)
!4653 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!4654 = !{!4655, !4656, !4658, !4659, !4749, !4758, !4759, !4760, !4761, !4762, !4763, !4764}
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4652, file: !4653, line: 52, baseType: !648, size: 64)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !4652, file: !4653, line: 53, baseType: !4657, size: 32, offset: 64)
!4657 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !4653, line: 28, baseType: !388)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !4652, file: !4653, line: 54, baseType: !648, size: 64, offset: 128)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4652, file: !4653, line: 55, baseType: !4660, size: 192, offset: 192)
!4660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4661, line: 17, size: 192, elements: !4662)
!4661 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4662 = !{!4663, !4665, !4748}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4660, file: !4661, line: 18, baseType: !4664, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4660, file: !4661, line: 19, baseType: !4666, size: 64, offset: 64)
!4666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4667, size: 64)
!4667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4668)
!4668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4661, line: 110, size: 1152, elements: !4669)
!4669 = !{!4670, !4674, !4678, !4684, !4690, !4694, !4698, !4703, !4707, !4708, !4712, !4716, !4720, !4731, !4732, !4733, !4734, !4744}
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4668, file: !4661, line: 111, baseType: !4671, size: 64)
!4671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4672, size: 64)
!4672 = !DISubroutineType(types: !4673)
!4673 = !{!4664, !4664}
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4668, file: !4661, line: 112, baseType: !4675, size: 64, offset: 64)
!4675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4676, size: 64)
!4676 = !DISubroutineType(types: !4677)
!4677 = !{null, !4664}
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4668, file: !4661, line: 113, baseType: !4679, size: 64, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4680, size: 64)
!4680 = !DISubroutineType(types: !4681)
!4681 = !{!559, !4682}
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4660)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4668, file: !4661, line: 114, baseType: !4685, size: 64, offset: 192)
!4685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4686, size: 64)
!4686 = !DISubroutineType(types: !4687)
!4687 = !{!3143, !4682, !4688}
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4668, file: !4661, line: 116, baseType: !4691, size: 64, offset: 256)
!4691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4692, size: 64)
!4692 = !DISubroutineType(types: !4693)
!4693 = !{!559, !4682, !648}
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4668, file: !4661, line: 118, baseType: !4695, size: 64, offset: 320)
!4695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4696, size: 64)
!4696 = !DISubroutineType(types: !4697)
!4697 = !{!139, !4682, !648, !7, !368, !1285}
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4668, file: !4661, line: 123, baseType: !4699, size: 64, offset: 384)
!4699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4700, size: 64)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!139, !4682, !648, !4702, !1285}
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4668, file: !4661, line: 126, baseType: !4704, size: 64, offset: 448)
!4704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4705, size: 64)
!4705 = !DISubroutineType(types: !4706)
!4706 = !{!648, !4682}
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4668, file: !4661, line: 127, baseType: !4704, size: 64, offset: 512)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4668, file: !4661, line: 128, baseType: !4709, size: 64, offset: 576)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{!4664, !4682}
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4668, file: !4661, line: 130, baseType: !4713, size: 64, offset: 640)
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 64)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{!4664, !4682, !4664}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4668, file: !4661, line: 133, baseType: !4717, size: 64, offset: 704)
!4717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4718, size: 64)
!4718 = !DISubroutineType(types: !4719)
!4719 = !{!4664, !4682, !648}
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4668, file: !4661, line: 135, baseType: !4721, size: 64, offset: 768)
!4721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4722, size: 64)
!4722 = !DISubroutineType(types: !4723)
!4723 = !{!139, !4682, !648, !648, !7, !7, !4724}
!4724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4725, size: 64)
!4725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4661, line: 43, size: 640, elements: !4726)
!4726 = !{!4727, !4728, !4729}
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4725, file: !4661, line: 44, baseType: !4664, size: 64)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4725, file: !4661, line: 45, baseType: !7, size: 32, offset: 64)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4725, file: !4661, line: 46, baseType: !4730, size: 512, offset: 128)
!4730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !586, size: 512, elements: !380)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4668, file: !4661, line: 140, baseType: !4713, size: 64, offset: 832)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4668, file: !4661, line: 143, baseType: !4709, size: 64, offset: 896)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4668, file: !4661, line: 145, baseType: !4671, size: 64, offset: 960)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4668, file: !4661, line: 146, baseType: !4735, size: 64, offset: 1024)
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4736, size: 64)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!139, !4682, !4738}
!4738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4739, size: 64)
!4739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4661, line: 29, size: 128, elements: !4740)
!4740 = !{!4741, !4742, !4743}
!4741 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4739, file: !4661, line: 30, baseType: !7, size: 32)
!4742 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4739, file: !4661, line: 31, baseType: !7, size: 32, offset: 32)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4739, file: !4661, line: 32, baseType: !4682, size: 64, offset: 64)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4668, file: !4661, line: 148, baseType: !4745, size: 64, offset: 1088)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{!139, !4682, !1186}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4660, file: !4661, line: 20, baseType: !1186, size: 64, offset: 128)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4652, file: !4653, line: 57, baseType: !4750, size: 64, offset: 384)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !4653, line: 31, size: 704, elements: !4752)
!4752 = !{!4753, !4754, !4755, !4756, !4757}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4751, file: !4653, line: 32, baseType: !590, size: 64)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4751, file: !4653, line: 33, baseType: !139, size: 32, offset: 64)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4751, file: !4653, line: 34, baseType: !368, size: 64, offset: 128)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4751, file: !4653, line: 35, baseType: !4750, size: 64, offset: 192)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4751, file: !4653, line: 43, baseType: !1306, size: 448, offset: 256)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !4652, file: !4653, line: 58, baseType: !4750, size: 64, offset: 448)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4652, file: !4653, line: 59, baseType: !4651, size: 64, offset: 512)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !4652, file: !4653, line: 60, baseType: !4651, size: 64, offset: 576)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !4652, file: !4653, line: 61, baseType: !4651, size: 64, offset: 640)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4652, file: !4653, line: 63, baseType: !1190, size: 512, offset: 704)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4652, file: !4653, line: 65, baseType: !574, size: 64, offset: 1216)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4652, file: !4653, line: 66, baseType: !368, size: 64, offset: 1280)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !4645, file: !118, line: 108, baseType: !4766, size: 64, offset: 64)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = !DISubroutineType(types: !4768)
!4768 = !{!139, !4637, !4769, !117}
!4769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4770, size: 64)
!4770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !118, line: 63, size: 640, elements: !4771)
!4771 = !{!4772, !4773, !4774}
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4770, file: !118, line: 64, baseType: !4664, size: 64)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4770, file: !118, line: 65, baseType: !139, size: 32, offset: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4770, file: !118, line: 66, baseType: !4775, size: 512, offset: 96)
!4775 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 512, elements: !2727)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4645, file: !118, line: 110, baseType: !4777, size: 64, offset: 128)
!4777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4778, size: 64)
!4778 = !DISubroutineType(types: !4779)
!4779 = !{!139, !4637, !7, !4780}
!4780 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !524, line: 164, baseType: !574)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4645, file: !118, line: 111, baseType: !4782, size: 64, offset: 192)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{null, !4637, !7}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !4645, file: !118, line: 112, baseType: !4786, size: 64, offset: 256)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!139, !4637, !4651, !4789, !7, !4790, !699}
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4645, file: !118, line: 117, baseType: !4792, size: 64, offset: 320)
!4792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4793, size: 64)
!4793 = !DISubroutineType(types: !4794)
!4794 = !{!139, !4637, !7, !7, !368}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !4645, file: !118, line: 119, baseType: !4796, size: 64, offset: 384)
!4796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4797, size: 64)
!4797 = !DISubroutineType(types: !4798)
!4798 = !{null, !4637, !7, !7}
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4645, file: !118, line: 121, baseType: !4800, size: 64, offset: 448)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4801, size: 64)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{!139, !4637, !4803, !559}
!4803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4804, size: 64)
!4804 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4805, line: 11, flags: DIFlagFwdDecl)
!4805 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !4645, file: !118, line: 122, baseType: !4807, size: 64, offset: 512)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{null, !4637, !4803}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !4645, file: !118, line: 123, baseType: !4811, size: 64, offset: 576)
!4811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4812, size: 64)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!139, !4637, !4769, !4790, !699}
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !4638, file: !118, line: 166, baseType: !368, size: 64, offset: 256)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4638, file: !118, line: 167, baseType: !7, size: 32, offset: 320)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !4638, file: !118, line: 168, baseType: !7, size: 32, offset: 352)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4638, file: !118, line: 171, baseType: !4664, size: 64, offset: 384)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !4638, file: !118, line: 172, baseType: !117, size: 32, offset: 448)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !4638, file: !118, line: 173, baseType: !4820, size: 64, offset: 512)
!4820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4821, size: 64)
!4821 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !118, line: 134, flags: DIFlagFwdDecl)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4638, file: !118, line: 175, baseType: !4637, size: 64, offset: 576)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !4638, file: !118, line: 182, baseType: !4780, size: 64, offset: 640)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !4638, file: !118, line: 183, baseType: !7, size: 32, offset: 704)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !4638, file: !118, line: 184, baseType: !7, size: 32, offset: 736)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !4638, file: !118, line: 185, baseType: !1738, size: 128, offset: 768)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !4638, file: !118, line: 186, baseType: !1673, size: 192, offset: 896)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !4638, file: !118, line: 187, baseType: !4829, offset: 1088)
!4829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !618)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !1187, file: !97, line: 499, baseType: !562, size: 128, offset: 4224)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !1187, file: !97, line: 502, baseType: !4832, size: 64, offset: 4352)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4834)
!4834 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !97, line: 502, flags: DIFlagFwdDecl)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !1187, file: !97, line: 504, baseType: !4836, size: 64, offset: 4416)
!4836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !1187, file: !97, line: 505, baseType: !586, size: 64, offset: 4480)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !1187, file: !97, line: 510, baseType: !586, size: 64, offset: 4544)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !1187, file: !97, line: 511, baseType: !4840, size: 64, offset: 4608)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4842)
!4842 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !97, line: 511, flags: DIFlagFwdDecl)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !1187, file: !97, line: 513, baseType: !4844, size: 64, offset: 4672)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !97, line: 288, size: 128, elements: !4846)
!4846 = !{!4847, !4848}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4845, file: !97, line: 293, baseType: !7, size: 32)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4845, file: !97, line: 294, baseType: !574, size: 64, offset: 64)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !1187, file: !97, line: 515, baseType: !562, size: 128, offset: 4736)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !1187, file: !97, line: 526, baseType: !4851, offset: 4864)
!4851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4852, line: 5, elements: !752)
!4852 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !1187, file: !97, line: 528, baseType: !4651, size: 64, offset: 4864)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !1187, file: !97, line: 529, baseType: !4664, size: 64, offset: 4928)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !1187, file: !97, line: 534, baseType: !1463, size: 32, offset: 4992)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1187, file: !97, line: 535, baseType: !388, size: 32, offset: 5024)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !1187, file: !97, line: 537, baseType: !1203, offset: 5056)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !1187, file: !97, line: 538, baseType: !562, size: 128, offset: 5056)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !1187, file: !97, line: 540, baseType: !4860, size: 64, offset: 5184)
!4860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4861, size: 64)
!4861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4862, line: 54, size: 960, elements: !4863)
!4862 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4863 = !{!4864, !4865, !4866, !4867, !4868, !4869, !4870, !4874, !4878, !4879, !4880, !4881, !4885, !4889, !4890}
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4861, file: !4862, line: 55, baseType: !648, size: 64)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4861, file: !4862, line: 56, baseType: !651, size: 64, offset: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4861, file: !4862, line: 58, baseType: !1291, size: 64, offset: 128)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4861, file: !4862, line: 59, baseType: !1291, size: 64, offset: 192)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4861, file: !4862, line: 60, baseType: !1196, size: 64, offset: 256)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4861, file: !4862, line: 62, baseType: !4371, size: 64, offset: 320)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4861, file: !4862, line: 63, baseType: !4871, size: 64, offset: 384)
!4871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4872, size: 64)
!4872 = !DISubroutineType(types: !4873)
!4873 = !{!590, !1186, !4378}
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4861, file: !4862, line: 65, baseType: !4875, size: 64, offset: 448)
!4875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4876, size: 64)
!4876 = !DISubroutineType(types: !4877)
!4877 = !{null, !4860}
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4861, file: !4862, line: 66, baseType: !4380, size: 64, offset: 512)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4861, file: !4862, line: 68, baseType: !4389, size: 64, offset: 576)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4861, file: !4862, line: 70, baseType: !4197, size: 64, offset: 640)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4861, file: !4862, line: 71, baseType: !4882, size: 64, offset: 704)
!4882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!4883 = !DISubroutineType(types: !4884)
!4884 = !{!3143, !1186}
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4861, file: !4862, line: 73, baseType: !4886, size: 64, offset: 768)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{null, !1186, !4229, !4230}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4861, file: !4862, line: 75, baseType: !4384, size: 64, offset: 832)
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4861, file: !4862, line: 77, baseType: !4501, size: 64, offset: 896)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1187, file: !97, line: 541, baseType: !1291, size: 64, offset: 5248)
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1187, file: !97, line: 543, baseType: !4380, size: 64, offset: 5312)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !1187, file: !97, line: 544, baseType: !4894, size: 64, offset: 5376)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !97, line: 45, flags: DIFlagFwdDecl)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !1187, file: !97, line: 545, baseType: !4897, size: 64, offset: 5440)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !97, line: 47, flags: DIFlagFwdDecl)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !1187, file: !97, line: 547, baseType: !559, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !1187, file: !97, line: 548, baseType: !559, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !1187, file: !97, line: 549, baseType: !559, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !1187, file: !97, line: 550, baseType: !559, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "managed", scope: !1167, file: !191, line: 83, baseType: !4904, size: 192, offset: 256)
!4904 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1167, file: !191, line: 76, size: 192, elements: !4905)
!4905 = !{!4906, !4907, !4908}
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4904, file: !191, line: 78, baseType: !562, size: 128)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "final_kfree", scope: !4904, file: !191, line: 80, baseType: !368, size: 64, offset: 128)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4904, file: !191, line: 82, baseType: !1203, offset: 192)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !1167, file: !191, line: 86, baseType: !4910, size: 64, offset: 448)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_driver", file: !4912, line: 162, size: 3328, elements: !4913)
!4912 = !DIFile(filename: "./include/drm/drm_drv.h", directory: "/home/lizy2001/genbc/linux")
!4913 = !{!4914, !4918, !4925, !4929, !4933, !4934, !4935, !4940, !4941, !4945, !4946, !4950, !4951, !4957, !4963, !4967, !4971, !4975, !4979, !4984, !4990, !4994, !4998, !4999, !5005, !5011, !5015, !5019, !5023, !5037, !5043, !5047, !5048, !5049, !5050, !5051, !5052, !5053, !5054, !5055, !5059, !5060, !5061, !5062, !5063, !5064, !5068, !5069, !5073, !5077, !5081, !5085}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !4911, file: !4912, line: 179, baseType: !4915, size: 64)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{!139, !1166, !574}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4911, file: !4912, line: 199, baseType: !4919, size: 64, offset: 64)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!139, !1166, !4922}
!4922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4923, size: 64)
!4923 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_file", file: !4924, line: 34, flags: DIFlagFwdDecl)
!4924 = !DIFile(filename: "./include/drm/drm_mode_config.h", directory: "/home/lizy2001/genbc/linux")
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "postclose", scope: !4911, file: !4912, line: 213, baseType: !4926, size: 64, offset: 128)
!4926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4927, size: 64)
!4927 = !DISubroutineType(types: !4928)
!4928 = !{null, !1166, !4922}
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "lastclose", scope: !4911, file: !4912, line: 241, baseType: !4930, size: 64, offset: 192)
!4930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4931, size: 64)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{null, !1166}
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "unload", scope: !4911, file: !4912, line: 258, baseType: !4930, size: 64, offset: 256)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4911, file: !4912, line: 270, baseType: !4930, size: 64, offset: 320)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "irq_handler", scope: !4911, file: !4912, line: 278, baseType: !4936, size: 64, offset: 384)
!4936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4937, size: 64)
!4937 = !DISubroutineType(types: !4938)
!4938 = !{!4939, !139, !368}
!4939 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !132, line: 17, baseType: !131)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "irq_preinstall", scope: !4911, file: !4912, line: 288, baseType: !4930, size: 64, offset: 448)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "irq_postinstall", scope: !4911, file: !4912, line: 297, baseType: !4942, size: 64, offset: 512)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = !DISubroutineType(types: !4944)
!4944 = !{!139, !1166}
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "irq_uninstall", scope: !4911, file: !4912, line: 306, baseType: !4930, size: 64, offset: 576)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "master_set", scope: !4911, file: !4912, line: 313, baseType: !4947, size: 64, offset: 640)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = !DISubroutineType(types: !4949)
!4949 = !{null, !1166, !4922, !559}
!4950 = !DIDerivedType(tag: DW_TAG_member, name: "master_drop", scope: !4911, file: !4912, line: 320, baseType: !4926, size: 64, offset: 704)
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_init", scope: !4911, file: !4912, line: 327, baseType: !4952, size: 64, offset: 768)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = !DISubroutineType(types: !4954)
!4954 = !{null, !4955}
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_minor", file: !191, line: 13, flags: DIFlagFwdDecl)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "gem_free_object_unlocked", scope: !4911, file: !4912, line: 335, baseType: !4958, size: 64, offset: 832)
!4958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4959, size: 64)
!4959 = !DISubroutineType(types: !4960)
!4960 = !{null, !4961}
!4961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4962, size: 64)
!4962 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_gem_object", file: !4912, line: 36, flags: DIFlagFwdDecl)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "gem_open_object", scope: !4911, file: !4912, line: 344, baseType: !4964, size: 64, offset: 896)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!139, !4961, !4922}
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "gem_close_object", scope: !4911, file: !4912, line: 353, baseType: !4968, size: 64, offset: 960)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{null, !4961, !4922}
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "gem_create_object", scope: !4911, file: !4912, line: 361, baseType: !4972, size: 64, offset: 1024)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!4961, !1166, !1285}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "prime_handle_to_fd", scope: !4911, file: !4912, line: 372, baseType: !4976, size: 64, offset: 1088)
!4976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4977, size: 64)
!4977 = !DISubroutineType(types: !4978)
!4978 = !{!139, !1166, !4922, !1509, !1509, !1655}
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "prime_fd_to_handle", scope: !4911, file: !4912, line: 383, baseType: !4980, size: 64, offset: 1152)
!4980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4981, size: 64)
!4981 = !DISubroutineType(types: !4982)
!4982 = !{!139, !1166, !4922, !139, !4983}
!4983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1509, size: 64)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_export", scope: !4911, file: !4912, line: 391, baseType: !4985, size: 64, offset: 1216)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!4988, !4961, !139}
!4988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4989, size: 64)
!4989 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf", file: !4912, line: 391, flags: DIFlagFwdDecl)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_import", scope: !4911, file: !4912, line: 400, baseType: !4991, size: 64, offset: 1280)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!4992 = !DISubroutineType(types: !4993)
!4993 = !{!4961, !1166, !4988}
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_pin", scope: !4911, file: !4912, line: 408, baseType: !4995, size: 64, offset: 1344)
!4995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4996, size: 64)
!4996 = !DISubroutineType(types: !4997)
!4997 = !{!139, !4961}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_unpin", scope: !4911, file: !4912, line: 415, baseType: !4958, size: 64, offset: 1408)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_get_sg_table", scope: !4911, file: !4912, line: 423, baseType: !5000, size: 64, offset: 1472)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{!5003, !4961}
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !4912, line: 423, flags: DIFlagFwdDecl)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_import_sg_table", scope: !4911, file: !4912, line: 431, baseType: !5006, size: 64, offset: 1536)
!5006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5007, size: 64)
!5007 = !DISubroutineType(types: !5008)
!5008 = !{!4961, !1166, !5009, !5003}
!5009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5010, size: 64)
!5010 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attachment", file: !4912, line: 39, flags: DIFlagFwdDecl)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_vmap", scope: !4911, file: !4912, line: 441, baseType: !5012, size: 64, offset: 1600)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = !DISubroutineType(types: !5014)
!5014 = !{!368, !4961}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_vunmap", scope: !4911, file: !4912, line: 449, baseType: !5016, size: 64, offset: 1664)
!5016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5017, size: 64)
!5017 = !DISubroutineType(types: !5018)
!5018 = !{null, !4961, !368}
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_mmap", scope: !4911, file: !4912, line: 460, baseType: !5020, size: 64, offset: 1728)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = !DISubroutineType(types: !5022)
!5022 = !{!139, !4961, !1967}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_create", scope: !4911, file: !4912, line: 484, baseType: !5024, size: 64, offset: 1792)
!5024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5025, size: 64)
!5025 = !DISubroutineType(types: !5026)
!5026 = !{!139, !4922, !1166, !5027}
!5027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5028, size: 64)
!5028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_create_dumb", file: !239, line: 805, size: 256, elements: !5029)
!5029 = !{!5030, !5031, !5032, !5033, !5034, !5035, !5036}
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5028, file: !239, line: 806, baseType: !389, size: 32)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5028, file: !239, line: 807, baseType: !389, size: 32, offset: 32)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !5028, file: !239, line: 808, baseType: !389, size: 32, offset: 64)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5028, file: !239, line: 809, baseType: !389, size: 32, offset: 96)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5028, file: !239, line: 811, baseType: !389, size: 32, offset: 128)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !5028, file: !239, line: 812, baseType: !389, size: 32, offset: 160)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5028, file: !239, line: 813, baseType: !587, size: 64, offset: 192)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_map_offset", scope: !4911, file: !4912, line: 502, baseType: !5038, size: 64, offset: 1856)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!139, !4922, !1166, !1509, !5041}
!5041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5042, size: 64)
!5042 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !524, line: 107, baseType: !586)
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_destroy", scope: !4911, file: !4912, line: 521, baseType: !5044, size: 64, offset: 1920)
!5044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5045, size: 64)
!5045 = !DISubroutineType(types: !5046)
!5046 = !{!139, !4922, !1166, !1509}
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "gem_vm_ops", scope: !4911, file: !4912, line: 531, baseType: !1995, size: 64, offset: 1984)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4911, file: !4912, line: 534, baseType: !139, size: 32, offset: 2048)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4911, file: !4912, line: 536, baseType: !139, size: 32, offset: 2080)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "patchlevel", scope: !4911, file: !4912, line: 538, baseType: !139, size: 32, offset: 2112)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4911, file: !4912, line: 540, baseType: !590, size: 64, offset: 2176)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4911, file: !4912, line: 542, baseType: !590, size: 64, offset: 2240)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !4911, file: !4912, line: 544, baseType: !590, size: 64, offset: 2304)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "driver_features", scope: !4911, file: !4912, line: 552, baseType: !388, size: 32, offset: 2368)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "ioctls", scope: !4911, file: !4912, line: 562, baseType: !5056, size: 64, offset: 2432)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5058)
!5058 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_ioctl_desc", file: !4912, line: 562, flags: DIFlagFwdDecl)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "num_ioctls", scope: !4911, file: !4912, line: 564, baseType: !139, size: 32, offset: 2496)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4911, file: !4912, line: 573, baseType: !3873, size: 64, offset: 2560)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_dev_list", scope: !4911, file: !4912, line: 579, baseType: !562, size: 128, offset: 2624)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "firstopen", scope: !4911, file: !4912, line: 580, baseType: !4942, size: 64, offset: 2752)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "preclose", scope: !4911, file: !4912, line: 581, baseType: !4926, size: 64, offset: 2816)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ioctl", scope: !4911, file: !4912, line: 582, baseType: !5065, size: 64, offset: 2880)
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{!139, !1166, !368, !4922}
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "dma_quiescent", scope: !4911, file: !4912, line: 583, baseType: !4942, size: 64, offset: 2944)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "context_dtor", scope: !4911, file: !4912, line: 584, baseType: !5070, size: 64, offset: 3008)
!5070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5071, size: 64)
!5071 = !DISubroutineType(types: !5072)
!5072 = !{!139, !1166, !139}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_counter", scope: !4911, file: !4912, line: 585, baseType: !5074, size: 64, offset: 3072)
!5074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5075 = !DISubroutineType(types: !5076)
!5076 = !{!388, !1166, !7}
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "enable_vblank", scope: !4911, file: !4912, line: 586, baseType: !5078, size: 64, offset: 3136)
!5078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5079, size: 64)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{!139, !1166, !7}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "disable_vblank", scope: !4911, file: !4912, line: 587, baseType: !5082, size: 64, offset: 3200)
!5082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5083, size: 64)
!5083 = !DISubroutineType(types: !5084)
!5084 = !{null, !1166, !7}
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv_size", scope: !4911, file: !4912, line: 588, baseType: !139, size: 32, offset: 3264)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "dev_private", scope: !1167, file: !191, line: 98, baseType: !368, size: 64, offset: 512)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !1167, file: !191, line: 101, baseType: !4955, size: 64, offset: 576)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !1167, file: !191, line: 104, baseType: !4955, size: 64, offset: 640)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !1167, file: !191, line: 111, baseType: !559, size: 8, offset: 704)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !1167, file: !191, line: 119, baseType: !5091, size: 64, offset: 768)
!5091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5092, size: 64)
!5092 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_master", file: !191, line: 14, flags: DIFlagFwdDecl)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "driver_features", scope: !1167, file: !191, line: 129, baseType: !388, size: 32, offset: 832)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "unplugged", scope: !1167, file: !191, line: 137, baseType: !559, size: 8, offset: 864)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "anon_inode", scope: !1167, file: !191, line: 140, baseType: !1384, size: 64, offset: 896)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1167, file: !191, line: 143, baseType: !590, size: 64, offset: 960)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "struct_mutex", scope: !1167, file: !191, line: 153, baseType: !1673, size: 192, offset: 1024)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "master_mutex", scope: !1167, file: !191, line: 160, baseType: !1673, size: 192, offset: 1216)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "open_count", scope: !1167, file: !191, line: 168, baseType: !1181, size: 32, offset: 1408)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "filelist_mutex", scope: !1167, file: !191, line: 171, baseType: !1673, size: 192, offset: 1472)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !1167, file: !191, line: 177, baseType: !562, size: 128, offset: 1664)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "filelist_internal", scope: !1167, file: !191, line: 185, baseType: !562, size: 128, offset: 1792)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "clientlist_mutex", scope: !1167, file: !191, line: 192, baseType: !1673, size: 192, offset: 1920)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "clientlist", scope: !1167, file: !191, line: 199, baseType: !562, size: 128, offset: 2112)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enabled", scope: !1167, file: !191, line: 208, baseType: !559, size: 8, offset: 2240)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !1167, file: !191, line: 213, baseType: !139, size: 32, offset: 2272)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_disable_immediate", scope: !1167, file: !191, line: 228, baseType: !559, size: 8, offset: 2304)
!5108 = !DIDerivedType(tag: DW_TAG_member, name: "vblank", scope: !1167, file: !191, line: 238, baseType: !5109, size: 64, offset: 2368)
!5109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5110, size: 64)
!5110 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vblank_crtc", file: !191, line: 16, flags: DIFlagFwdDecl)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_time_lock", scope: !1167, file: !191, line: 245, baseType: !1203, offset: 2432)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "vbl_lock", scope: !1167, file: !191, line: 250, baseType: !1203, offset: 2432)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "max_vblank_count", scope: !1167, file: !191, line: 273, baseType: !388, size: 32, offset: 2432)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_event_list", scope: !1167, file: !191, line: 276, baseType: !562, size: 128, offset: 2496)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !1167, file: !191, line: 284, baseType: !1203, offset: 2624)
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "agp", scope: !1167, file: !191, line: 287, baseType: !5117, size: 64, offset: 2624)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_agp_head", file: !191, line: 287, flags: DIFlagFwdDecl)
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !1167, file: !191, line: 290, baseType: !5120, size: 64, offset: 2688)
!5120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5121, size: 64)
!5121 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !5122, line: 79, flags: DIFlagFwdDecl)
!5122 = !DIFile(filename: "./include/acpi/acpi_drivers.h", directory: "/home/lizy2001/genbc/linux")
!5123 = !DIDerivedType(tag: DW_TAG_member, name: "num_crtcs", scope: !1167, file: !191, line: 297, baseType: !7, size: 32, offset: 2752)
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "mode_config", scope: !1167, file: !191, line: 300, baseType: !5125, size: 8384, offset: 2816)
!5125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config", file: !4924, line: 358, size: 8384, elements: !5126)
!5126 = !{!5127, !5128, !5147, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5164, !5165, !5169, !5170, !5174, !5175, !5176, !5177, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5322, !5324, !5325, !5326, !5327, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5350, !5351, !5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381, !5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405}
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5125, file: !4924, line: 369, baseType: !1673, size: 192)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "connection_mutex", scope: !5125, file: !4924, line: 379, baseType: !5129, size: 384, offset: 192)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_modeset_lock", file: !5130, line: 76, size: 384, elements: !5131)
!5130 = !DIFile(filename: "./include/drm/drm_modeset_lock.h", directory: "/home/lizy2001/genbc/linux")
!5131 = !{!5132, !5146}
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5129, file: !5130, line: 80, baseType: !5133, size: 256)
!5133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_mutex", file: !1674, line: 71, size: 256, elements: !5134)
!5134 = !{!5135, !5136}
!5135 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5133, file: !1674, line: 72, baseType: !1673, size: 192)
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !5133, file: !1674, line: 73, baseType: !5137, size: 64, offset: 192)
!5137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5138, size: 64)
!5138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_acquire_ctx", file: !5139, line: 31, size: 192, elements: !5140)
!5139 = !DIFile(filename: "./include/linux/ww_mutex.h", directory: "/home/lizy2001/genbc/linux")
!5140 = !{!5141, !5142, !5143, !5144, !5145}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !5138, file: !5139, line: 32, baseType: !2191, size: 64)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !5138, file: !5139, line: 33, baseType: !574, size: 64, offset: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "acquired", scope: !5138, file: !5139, line: 34, baseType: !7, size: 32, offset: 128)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "wounded", scope: !5138, file: !5139, line: 35, baseType: !429, size: 16, offset: 160)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "is_wait_die", scope: !5138, file: !5139, line: 36, baseType: !429, size: 16, offset: 176)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5129, file: !5130, line: 86, baseType: !562, size: 128, offset: 256)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_ctx", scope: !5125, file: !4924, line: 389, baseType: !5148, size: 64, offset: 576)
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_modeset_acquire_ctx", file: !5130, line: 43, size: 448, elements: !5150)
!5150 = !{!5151, !5152, !5154, !5155, !5156}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "ww_ctx", scope: !5149, file: !5130, line: 45, baseType: !5138, size: 192)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "contended", scope: !5149, file: !5130, line: 52, baseType: !5153, size: 64, offset: 192)
!5153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !5149, file: !5130, line: 57, baseType: !562, size: 128, offset: 256)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_only", scope: !5149, file: !5130, line: 62, baseType: !559, size: 8, offset: 384)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "interruptible", scope: !5149, file: !5130, line: 65, baseType: !559, size: 8, offset: 392)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "idr_mutex", scope: !5125, file: !4924, line: 397, baseType: !1673, size: 192, offset: 640)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "object_idr", scope: !5125, file: !4924, line: 405, baseType: !2465, size: 192, offset: 832)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "tile_idr", scope: !5125, file: !4924, line: 413, baseType: !2465, size: 192, offset: 1024)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "fb_lock", scope: !5125, file: !4924, line: 416, baseType: !1673, size: 192, offset: 1216)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "num_fb", scope: !5125, file: !4924, line: 418, baseType: !139, size: 32, offset: 1408)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "fb_list", scope: !5125, file: !4924, line: 420, baseType: !562, size: 128, offset: 1472)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "connector_list_lock", scope: !5125, file: !4924, line: 426, baseType: !1203, offset: 1600)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "num_connector", scope: !5125, file: !4924, line: 431, baseType: !139, size: 32, offset: 1600)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "connector_ida", scope: !5125, file: !4924, line: 435, baseType: !5166, size: 128, offset: 1664)
!5166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !2466, line: 244, size: 128, elements: !5167)
!5167 = !{!5168}
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !5166, file: !2466, line: 245, baseType: !1738, size: 128)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "connector_list", scope: !5125, file: !4924, line: 443, baseType: !562, size: 128, offset: 1792)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "connector_free_list", scope: !5125, file: !4924, line: 453, baseType: !5171, size: 64, offset: 1920)
!5171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !1323, line: 54, size: 64, elements: !5172)
!5172 = !{!5173}
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !5171, file: !1323, line: 55, baseType: !1326, size: 64)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "connector_free_work", scope: !5125, file: !4924, line: 457, baseType: !2973, size: 256, offset: 1984)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "num_encoder", scope: !5125, file: !4924, line: 465, baseType: !139, size: 32, offset: 2240)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_list", scope: !5125, file: !4924, line: 473, baseType: !562, size: 128, offset: 2304)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "num_total_plane", scope: !5125, file: !4924, line: 482, baseType: !139, size: 32, offset: 2432)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "plane_list", scope: !5125, file: !4924, line: 489, baseType: !562, size: 128, offset: 2496)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "num_crtc", scope: !5125, file: !4924, line: 497, baseType: !139, size: 32, offset: 2624)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_list", scope: !5125, file: !4924, line: 504, baseType: !562, size: 128, offset: 2688)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "property_list", scope: !5125, file: !4924, line: 513, baseType: !562, size: 128, offset: 2816)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "privobj_list", scope: !5125, file: !4924, line: 522, baseType: !562, size: 128, offset: 2944)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "min_width", scope: !5125, file: !4924, line: 524, baseType: !139, size: 32, offset: 3072)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "min_height", scope: !5125, file: !4924, line: 524, baseType: !139, size: 32, offset: 3104)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "max_width", scope: !5125, file: !4924, line: 525, baseType: !139, size: 32, offset: 3136)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "max_height", scope: !5125, file: !4924, line: 525, baseType: !139, size: 32, offset: 3168)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5125, file: !4924, line: 526, baseType: !5188, size: 64, offset: 3200)
!5188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5189, size: 64)
!5189 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5190)
!5190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config_funcs", file: !4924, line: 47, size: 576, elements: !5191)
!5191 = !{!5192, !5294, !5298, !5299, !5303, !5309, !5313, !5317, !5321}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "fb_create", scope: !5190, file: !4924, line: 77, baseType: !5193, size: 64)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!5196, !1166, !4922, !5279}
!5196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5197, size: 64)
!5197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_framebuffer", file: !5198, line: 117, size: 1600, elements: !5199)
!5198 = !DIFile(filename: "./include/drm/drm_framebuffer.h", directory: "/home/lizy2001/genbc/linux")
!5199 = !{!5200, !5201, !5202, !5237, !5238, !5242, !5267, !5269, !5270, !5271, !5272, !5273, !5274, !5275, !5276, !5277}
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5197, file: !5198, line: 121, baseType: !1166, size: 64)
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5197, file: !5198, line: 126, baseType: !562, size: 128, offset: 64)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5197, file: !5198, line: 131, baseType: !5203, size: 256, offset: 192)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_object", file: !5204, line: 55, size: 256, elements: !5205)
!5204 = !DIFile(filename: "./include/drm/drm_mode_object.h", directory: "/home/lizy2001/genbc/linux")
!5205 = !{!5206, !5207, !5208, !5231, !5232}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5203, file: !5204, line: 56, baseType: !1509, size: 32)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5203, file: !5204, line: 57, baseType: !1509, size: 32, offset: 32)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5203, file: !5204, line: 58, baseType: !5209, size: 64, offset: 64)
!5209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5210, size: 64)
!5210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_object_properties", file: !5204, line: 67, size: 3136, elements: !5211)
!5211 = !{!5212, !5213, !5229}
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5210, file: !5204, line: 73, baseType: !139, size: 32)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5210, file: !5204, line: 82, baseType: !5214, size: 1536, offset: 64)
!5214 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5215, size: 1536, elements: !5227)
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_property", file: !5217, line: 73, size: 960, elements: !5218)
!5217 = !DIFile(filename: "./include/drm/drm_property.h", directory: "/home/lizy2001/genbc/linux")
!5218 = !{!5219, !5220, !5221, !5222, !5223, !5224, !5225, !5226}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5216, file: !5217, line: 77, baseType: !562, size: 128)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5216, file: !5217, line: 82, baseType: !5203, size: 256, offset: 128)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5216, file: !5217, line: 159, baseType: !1509, size: 32, offset: 384)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5216, file: !5217, line: 164, baseType: !568, size: 256, offset: 416)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "num_values", scope: !5216, file: !5217, line: 169, baseType: !1509, size: 32, offset: 672)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !5216, file: !5217, line: 177, baseType: !5041, size: 64, offset: 704)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5216, file: !5217, line: 182, baseType: !1166, size: 64, offset: 768)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "enum_list", scope: !5216, file: !5217, line: 190, baseType: !562, size: 128, offset: 832)
!5227 = !{!5228}
!5228 = !DISubrange(count: 24)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !5210, file: !5204, line: 102, baseType: !5230, size: 1536, offset: 1600)
!5230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5042, size: 1536, elements: !5227)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5203, file: !5204, line: 59, baseType: !1172, size: 32, offset: 128)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "free_cb", scope: !5203, file: !5204, line: 60, baseType: !5233, size: 64, offset: 192)
!5233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5234, size: 64)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{null, !5236}
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !5197, file: !5198, line: 136, baseType: !2726, size: 128, offset: 448)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !5197, file: !5198, line: 141, baseType: !5239, size: 64, offset: 576)
!5239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5240, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5241)
!5241 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_format_info", file: !4924, line: 38, flags: DIFlagFwdDecl)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5197, file: !5198, line: 145, baseType: !5243, size: 64, offset: 640)
!5243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5244, size: 64)
!5244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5245)
!5245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_framebuffer_funcs", file: !5198, line: 42, size: 192, elements: !5246)
!5246 = !{!5247, !5251, !5255}
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5245, file: !5198, line: 53, baseType: !5248, size: 64)
!5248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5249, size: 64)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{null, !5196}
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "create_handle", scope: !5245, file: !5198, line: 73, baseType: !5252, size: 64, offset: 64)
!5252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5253, size: 64)
!5253 = !DISubroutineType(types: !5254)
!5254 = !{!139, !5196, !4922, !699}
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !5245, file: !5198, line: 97, baseType: !5256, size: 64, offset: 128)
!5256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5257, size: 64)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!139, !5196, !4922, !7, !7, !5259, !7}
!5259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5260, size: 64)
!5260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_clip_rect", file: !5261, line: 97, size: 64, elements: !5262)
!5261 = !DIFile(filename: "./include/uapi/drm/drm.h", directory: "/home/lizy2001/genbc/linux")
!5262 = !{!5263, !5264, !5265, !5266}
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !5260, file: !5261, line: 98, baseType: !429, size: 16)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !5260, file: !5261, line: 99, baseType: !429, size: 16, offset: 16)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !5260, file: !5261, line: 100, baseType: !429, size: 16, offset: 32)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !5260, file: !5261, line: 101, baseType: !429, size: 16, offset: 48)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "pitches", scope: !5197, file: !5198, line: 150, baseType: !5268, size: 128, offset: 704)
!5268 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !518)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !5197, file: !5198, line: 168, baseType: !5268, size: 128, offset: 832)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5197, file: !5198, line: 175, baseType: !5042, size: 64, offset: 960)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5197, file: !5198, line: 180, baseType: !7, size: 32, offset: 1024)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5197, file: !5198, line: 185, baseType: !7, size: 32, offset: 1056)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5197, file: !5198, line: 190, baseType: !139, size: 32, offset: 1088)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "hot_x", scope: !5197, file: !5198, line: 196, baseType: !139, size: 32, offset: 1120)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "hot_y", scope: !5197, file: !5198, line: 202, baseType: !139, size: 32, offset: 1152)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "filp_head", scope: !5197, file: !5198, line: 206, baseType: !562, size: 128, offset: 1216)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !5197, file: !5198, line: 213, baseType: !5278, size: 256, offset: 1344)
!5278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4961, size: 256, elements: !518)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5281)
!5281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_fb_cmd2", file: !239, line: 494, size: 832, elements: !5282)
!5282 = !{!5283, !5284, !5285, !5286, !5287, !5288, !5290, !5291, !5292}
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "fb_id", scope: !5281, file: !239, line: 495, baseType: !389, size: 32)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !5281, file: !239, line: 496, baseType: !389, size: 32, offset: 32)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !5281, file: !239, line: 497, baseType: !389, size: 32, offset: 64)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_format", scope: !5281, file: !239, line: 498, baseType: !389, size: 32, offset: 96)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5281, file: !239, line: 499, baseType: !389, size: 32, offset: 128)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !5281, file: !239, line: 525, baseType: !5289, size: 128, offset: 160)
!5289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !389, size: 128, elements: !518)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "pitches", scope: !5281, file: !239, line: 526, baseType: !5289, size: 128, offset: 288)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !5281, file: !239, line: 527, baseType: !5289, size: 128, offset: 416)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !5281, file: !239, line: 528, baseType: !5293, size: 256, offset: 576)
!5293 = !DICompositeType(tag: DW_TAG_array_type, baseType: !587, size: 256, elements: !518)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "get_format_info", scope: !5190, file: !4924, line: 92, baseType: !5295, size: 64, offset: 64)
!5295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5296, size: 64)
!5296 = !DISubroutineType(types: !5297)
!5297 = !{!5239, !5279}
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "output_poll_changed", scope: !5190, file: !4924, line: 109, baseType: !4930, size: 64, offset: 128)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !5190, file: !4924, line: 119, baseType: !5300, size: 64, offset: 192)
!5300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5301, size: 64)
!5301 = !DISubroutineType(types: !5302)
!5302 = !{!137, !1166, !594}
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5190, file: !4924, line: 196, baseType: !5304, size: 64, offset: 256)
!5304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5305, size: 64)
!5305 = !DISubroutineType(types: !5306)
!5306 = !{!139, !1166, !5307}
!5307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5308, size: 64)
!5308 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_atomic_state", file: !4924, line: 36, flags: DIFlagFwdDecl)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit", scope: !5190, file: !4924, line: 278, baseType: !5310, size: 64, offset: 320)
!5310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!5311 = !DISubroutineType(types: !5312)
!5312 = !{!139, !1166, !5307, !559}
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_alloc", scope: !5190, file: !4924, line: 297, baseType: !5314, size: 64, offset: 384)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5315, size: 64)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{!5307, !1166}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_clear", scope: !5190, file: !4924, line: 318, baseType: !5318, size: 64, offset: 448)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{null, !5307}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_free", scope: !5190, file: !4924, line: 333, baseType: !5318, size: 64, offset: 512)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "fb_base", scope: !5125, file: !4924, line: 527, baseType: !5323, size: 64, offset: 3264)
!5323 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !524, line: 158, baseType: !3141)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "poll_enabled", scope: !5125, file: !4924, line: 530, baseType: !559, size: 8, offset: 3328)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "poll_running", scope: !5125, file: !4924, line: 531, baseType: !559, size: 8, offset: 3336)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_event", scope: !5125, file: !4924, line: 532, baseType: !559, size: 8, offset: 3344)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "output_poll_work", scope: !5125, file: !4924, line: 533, baseType: !5328, size: 704, offset: 3392)
!5328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !2974, line: 115, size: 704, elements: !5329)
!5329 = !{!5330, !5331, !5332, !5333}
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5328, file: !2974, line: 116, baseType: !2973, size: 256)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5328, file: !2974, line: 117, baseType: !4549, size: 320, offset: 256)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5328, file: !2974, line: 120, baseType: !3803, size: 64, offset: 576)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !5328, file: !2974, line: 121, baseType: !139, size: 32, offset: 640)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "blob_lock", scope: !5125, file: !4924, line: 541, baseType: !1673, size: 192, offset: 4096)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "property_blob_list", scope: !5125, file: !4924, line: 549, baseType: !562, size: 128, offset: 4288)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "edid_property", scope: !5125, file: !4924, line: 557, baseType: !5215, size: 64, offset: 4416)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "dpms_property", scope: !5125, file: !4924, line: 562, baseType: !5215, size: 64, offset: 4480)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "path_property", scope: !5125, file: !4924, line: 567, baseType: !5215, size: 64, offset: 4544)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "tile_property", scope: !5125, file: !4924, line: 573, baseType: !5215, size: 64, offset: 4608)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "link_status_property", scope: !5125, file: !4924, line: 578, baseType: !5215, size: 64, offset: 4672)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "plane_type_property", scope: !5125, file: !4924, line: 583, baseType: !5215, size: 64, offset: 4736)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_x", scope: !5125, file: !4924, line: 588, baseType: !5215, size: 64, offset: 4800)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_y", scope: !5125, file: !4924, line: 593, baseType: !5215, size: 64, offset: 4864)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_w", scope: !5125, file: !4924, line: 598, baseType: !5215, size: 64, offset: 4928)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_h", scope: !5125, file: !4924, line: 603, baseType: !5215, size: 64, offset: 4992)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_x", scope: !5125, file: !4924, line: 608, baseType: !5215, size: 64, offset: 5056)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_y", scope: !5125, file: !4924, line: 613, baseType: !5215, size: 64, offset: 5120)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_w", scope: !5125, file: !4924, line: 618, baseType: !5215, size: 64, offset: 5184)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_h", scope: !5125, file: !4924, line: 623, baseType: !5215, size: 64, offset: 5248)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "prop_fb_id", scope: !5125, file: !4924, line: 628, baseType: !5215, size: 64, offset: 5312)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "prop_in_fence_fd", scope: !5125, file: !4924, line: 633, baseType: !5215, size: 64, offset: 5376)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "prop_out_fence_ptr", scope: !5125, file: !4924, line: 639, baseType: !5215, size: 64, offset: 5440)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_id", scope: !5125, file: !4924, line: 644, baseType: !5215, size: 64, offset: 5504)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "prop_fb_damage_clips", scope: !5125, file: !4924, line: 653, baseType: !5215, size: 64, offset: 5568)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "prop_active", scope: !5125, file: !4924, line: 659, baseType: !5215, size: 64, offset: 5632)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode_id", scope: !5125, file: !4924, line: 665, baseType: !5215, size: 64, offset: 5696)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "prop_vrr_enabled", scope: !5125, file: !4924, line: 670, baseType: !5215, size: 64, offset: 5760)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_i_subconnector_property", scope: !5125, file: !4924, line: 676, baseType: !5215, size: 64, offset: 5824)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_i_select_subconnector_property", scope: !5125, file: !4924, line: 681, baseType: !5215, size: 64, offset: 5888)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "dp_subconnector_property", scope: !5125, file: !4924, line: 687, baseType: !5215, size: 64, offset: 5952)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "tv_subconnector_property", scope: !5125, file: !4924, line: 693, baseType: !5215, size: 64, offset: 6016)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "tv_select_subconnector_property", scope: !5125, file: !4924, line: 698, baseType: !5215, size: 64, offset: 6080)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "tv_mode_property", scope: !5125, file: !4924, line: 703, baseType: !5215, size: 64, offset: 6144)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "tv_left_margin_property", scope: !5125, file: !4924, line: 708, baseType: !5215, size: 64, offset: 6208)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "tv_right_margin_property", scope: !5125, file: !4924, line: 713, baseType: !5215, size: 64, offset: 6272)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "tv_top_margin_property", scope: !5125, file: !4924, line: 718, baseType: !5215, size: 64, offset: 6336)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "tv_bottom_margin_property", scope: !5125, file: !4924, line: 723, baseType: !5215, size: 64, offset: 6400)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "tv_brightness_property", scope: !5125, file: !4924, line: 728, baseType: !5215, size: 64, offset: 6464)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "tv_contrast_property", scope: !5125, file: !4924, line: 733, baseType: !5215, size: 64, offset: 6528)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "tv_flicker_reduction_property", scope: !5125, file: !4924, line: 738, baseType: !5215, size: 64, offset: 6592)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "tv_overscan_property", scope: !5125, file: !4924, line: 743, baseType: !5215, size: 64, offset: 6656)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "tv_saturation_property", scope: !5125, file: !4924, line: 748, baseType: !5215, size: 64, offset: 6720)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "tv_hue_property", scope: !5125, file: !4924, line: 752, baseType: !5215, size: 64, offset: 6784)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode_property", scope: !5125, file: !4924, line: 758, baseType: !5215, size: 64, offset: 6848)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_property", scope: !5125, file: !4924, line: 763, baseType: !5215, size: 64, offset: 6912)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "content_type_property", scope: !5125, file: !4924, line: 768, baseType: !5215, size: 64, offset: 6976)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut_property", scope: !5125, file: !4924, line: 773, baseType: !5215, size: 64, offset: 7040)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut_size_property", scope: !5125, file: !4924, line: 778, baseType: !5215, size: 64, offset: 7104)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "ctm_property", scope: !5125, file: !4924, line: 784, baseType: !5215, size: 64, offset: 7168)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut_property", scope: !5125, file: !4924, line: 790, baseType: !5215, size: 64, offset: 7232)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut_size_property", scope: !5125, file: !4924, line: 795, baseType: !5215, size: 64, offset: 7296)
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "suggested_x_property", scope: !5125, file: !4924, line: 801, baseType: !5215, size: 64, offset: 7360)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "suggested_y_property", scope: !5125, file: !4924, line: 806, baseType: !5215, size: 64, offset: 7424)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "non_desktop_property", scope: !5125, file: !4924, line: 813, baseType: !5215, size: 64, offset: 7488)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation_property", scope: !5125, file: !4924, line: 820, baseType: !5215, size: 64, offset: 7552)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_fb_id_property", scope: !5125, file: !4924, line: 827, baseType: !5215, size: 64, offset: 7616)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_pixel_formats_property", scope: !5125, file: !4924, line: 835, baseType: !5215, size: 64, offset: 7680)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_out_fence_ptr_property", scope: !5125, file: !4924, line: 843, baseType: !5215, size: 64, offset: 7744)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_output_metadata_property", scope: !5125, file: !4924, line: 850, baseType: !5215, size: 64, offset: 7808)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "content_protection_property", scope: !5125, file: !4924, line: 856, baseType: !5215, size: 64, offset: 7872)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_content_type_property", scope: !5125, file: !4924, line: 862, baseType: !5215, size: 64, offset: 7936)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_depth", scope: !5125, file: !4924, line: 865, baseType: !1509, size: 32, offset: 8000)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_shadow", scope: !5125, file: !4924, line: 865, baseType: !1509, size: 32, offset: 8032)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_shadow_fbdev", scope: !5125, file: !4924, line: 872, baseType: !559, size: 8, offset: 8064)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "fbdev_use_iomem", scope: !5125, file: !4924, line: 884, baseType: !559, size: 8, offset: 8072)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_addfb_prefer_xbgr_30bpp", scope: !5125, file: !4924, line: 892, baseType: !559, size: 8, offset: 8080)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_addfb_prefer_host_byte_order", scope: !5125, file: !4924, line: 906, baseType: !559, size: 8, offset: 8088)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "async_page_flip", scope: !5125, file: !4924, line: 912, baseType: !559, size: 8, offset: 8096)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "allow_fb_modifiers", scope: !5125, file: !4924, line: 919, baseType: !559, size: 8, offset: 8104)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "normalize_zpos", scope: !5125, file: !4924, line: 927, baseType: !559, size: 8, offset: 8112)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_property", scope: !5125, file: !4924, line: 933, baseType: !5215, size: 64, offset: 8128)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_width", scope: !5125, file: !4924, line: 936, baseType: !1509, size: 32, offset: 8192)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_height", scope: !5125, file: !4924, line: 936, baseType: !1509, size: 32, offset: 8224)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_state", scope: !5125, file: !4924, line: 945, baseType: !5307, size: 64, offset: 8256)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !5125, file: !4924, line: 947, baseType: !5406, size: 64, offset: 8320)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5408)
!5408 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config_helper_funcs", file: !4924, line: 947, flags: DIFlagFwdDecl)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "object_name_lock", scope: !1167, file: !191, line: 303, baseType: !1673, size: 192, offset: 11200)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "object_name_idr", scope: !1167, file: !191, line: 306, baseType: !2465, size: 192, offset: 11392)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "vma_offset_manager", scope: !1167, file: !191, line: 309, baseType: !5412, size: 64, offset: 11584)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5413, size: 64)
!5413 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vma_offset_manager", file: !191, line: 19, flags: DIFlagFwdDecl)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "vram_mm", scope: !1167, file: !191, line: 312, baseType: !5415, size: 64, offset: 11648)
!5415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5416, size: 64)
!5416 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vram_mm", file: !191, line: 20, flags: DIFlagFwdDecl)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "switch_power_state", scope: !1167, file: !191, line: 322, baseType: !190, size: 32, offset: 11712)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "fb_helper", scope: !1167, file: !191, line: 330, baseType: !5419, size: 64, offset: 11776)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_fb_helper", file: !191, line: 21, flags: DIFlagFwdDecl)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "kdev", scope: !1163, file: !198, line: 1174, baseType: !1186, size: 64, offset: 64)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !1163, file: !198, line: 1176, baseType: !5423, size: 64, offset: 128)
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5424, size: 64)
!5424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !97, line: 99, size: 256, elements: !5425)
!5425 = !{!5426, !5427, !5431}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5424, file: !97, line: 100, baseType: !1276, size: 128)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5424, file: !97, line: 101, baseType: !5428, size: 64, offset: 128)
!5428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 64)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!1271, !1186, !5423, !590}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5424, file: !97, line: 103, baseType: !5432, size: 64, offset: 192)
!5432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!5433 = !DISubroutineType(types: !5434)
!5434 = !{!1271, !1186, !5423, !648, !1285}
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1163, file: !198, line: 1186, baseType: !562, size: 128, offset: 192)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1163, file: !198, line: 1189, baseType: !5203, size: 256, offset: 320)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1163, file: !198, line: 1192, baseType: !590, size: 64, offset: 576)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !1163, file: !198, line: 1199, baseType: !1673, size: 192, offset: 640)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1163, file: !198, line: 1207, baseType: !7, size: 32, offset: 832)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "connector_type", scope: !1163, file: !198, line: 1213, baseType: !139, size: 32, offset: 864)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "connector_type_id", scope: !1163, file: !198, line: 1215, baseType: !139, size: 32, offset: 896)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_allowed", scope: !1163, file: !198, line: 1221, baseType: !559, size: 8, offset: 928)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "doublescan_allowed", scope: !1163, file: !198, line: 1227, baseType: !559, size: 8, offset: 936)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_allowed", scope: !1163, file: !198, line: 1233, baseType: !559, size: 8, offset: 944)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "ycbcr_420_allowed", scope: !1163, file: !198, line: 1241, baseType: !559, size: 8, offset: 952)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "registration_state", scope: !1163, file: !198, line: 1249, baseType: !197, size: 32, offset: 960)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !1163, file: !198, line: 1256, baseType: !562, size: 128, offset: 1024)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1163, file: !198, line: 1263, baseType: !203, size: 32, offset: 1152)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "probed_modes", scope: !1163, file: !198, line: 1271, baseType: !562, size: 128, offset: 1216)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "display_info", scope: !1163, file: !198, line: 1282, baseType: !5451, size: 1216, offset: 1344)
!5451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_display_info", file: !198, line: 428, size: 1216, elements: !5452)
!5452 = !{!5453, !5454, !5455, !5456, !5457, !5458, !5459, !5460, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5487, !5488}
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm", scope: !5451, file: !198, line: 432, baseType: !7, size: 32)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm", scope: !5451, file: !198, line: 437, baseType: !7, size: 32, offset: 32)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "bpc", scope: !5451, file: !198, line: 442, baseType: !7, size: 32, offset: 64)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "subpixel_order", scope: !5451, file: !198, line: 447, baseType: !208, size: 32, offset: 96)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation", scope: !5451, file: !198, line: 461, baseType: !139, size: 32, offset: 128)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "color_formats", scope: !5451, file: !198, line: 469, baseType: !388, size: 32, offset: 160)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "bus_formats", scope: !5451, file: !198, line: 476, baseType: !4789, size: 64, offset: 192)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "num_bus_formats", scope: !5451, file: !198, line: 480, baseType: !7, size: 32, offset: 256)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !5451, file: !198, line: 487, baseType: !388, size: 32, offset: 288)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "max_tmds_clock", scope: !5451, file: !198, line: 493, baseType: !139, size: 32, offset: 320)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_dual", scope: !5451, file: !198, line: 498, baseType: !559, size: 8, offset: 352)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "is_hdmi", scope: !5451, file: !198, line: 506, baseType: !559, size: 8, offset: 360)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "has_hdmi_infoframe", scope: !5451, file: !198, line: 511, baseType: !559, size: 8, offset: 368)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_quant_range_selectable", scope: !5451, file: !198, line: 517, baseType: !559, size: 8, offset: 376)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "edid_hdmi_dc_modes", scope: !5451, file: !198, line: 523, baseType: !375, size: 8, offset: 384)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "cea_rev", scope: !5451, file: !198, line: 528, baseType: !375, size: 8, offset: 392)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi", scope: !5451, file: !198, line: 533, baseType: !5470, size: 704, offset: 448)
!5470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_hdmi_info", file: !198, line: 185, size: 704, elements: !5471)
!5471 = !{!5472, !5482, !5484, !5485, !5486}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "scdc", scope: !5470, file: !198, line: 187, baseType: !5473, size: 32)
!5473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_scdc", file: !198, line: 163, size: 32, elements: !5474)
!5474 = !{!5475, !5476, !5477}
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5473, file: !198, line: 167, baseType: !559, size: 8)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "read_request", scope: !5473, file: !198, line: 171, baseType: !559, size: 8, offset: 8)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling", scope: !5473, file: !198, line: 175, baseType: !5478, size: 16, offset: 16)
!5478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_scrambling", file: !198, line: 146, size: 16, elements: !5479)
!5479 = !{!5480, !5481}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !5478, file: !198, line: 150, baseType: !559, size: 8)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "low_rates", scope: !5478, file: !198, line: 154, baseType: !559, size: 8, offset: 8)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "y420_vdb_modes", scope: !5470, file: !198, line: 195, baseType: !5483, size: 256, offset: 64)
!5483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !574, size: 256, elements: !518)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "y420_cmdb_modes", scope: !5470, file: !198, line: 203, baseType: !5483, size: 256, offset: 320)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "y420_cmdb_map", scope: !5470, file: !198, line: 206, baseType: !586, size: 64, offset: 576)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "y420_dc_modes", scope: !5470, file: !198, line: 209, baseType: !375, size: 8, offset: 640)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "non_desktop", scope: !5451, file: !198, line: 538, baseType: !559, size: 8, offset: 1152)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "monitor_range", scope: !5451, file: !198, line: 543, baseType: !5489, size: 16, offset: 1160)
!5489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_monitor_range_info", file: !198, line: 269, size: 16, elements: !5490)
!5490 = !{!5491, !5492}
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "min_vfreq", scope: !5489, file: !198, line: 270, baseType: !375, size: 8)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfreq", scope: !5489, file: !198, line: 271, baseType: !375, size: 8, offset: 8)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !1163, file: !198, line: 1285, baseType: !5494, size: 64, offset: 2560)
!5494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5495, size: 64)
!5495 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5496)
!5496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_funcs", file: !198, line: 749, size: 896, elements: !5497)
!5497 = !{!5498, !5502, !5506, !5510, !5511, !5515, !5519, !5521, !5522, !5523, !5961, !5965, !5969, !5975}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !5496, file: !198, line: 766, baseType: !5499, size: 64)
!5499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5500, size: 64)
!5500 = !DISubroutineType(types: !5501)
!5501 = !{!139, !1162, !139}
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5496, file: !198, line: 778, baseType: !5503, size: 64, offset: 64)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DISubroutineType(types: !5505)
!5505 = !{null, !1162}
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !5496, file: !198, line: 806, baseType: !5507, size: 64, offset: 128)
!5507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5508, size: 64)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{!203, !1162, !559}
!5510 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !5496, file: !198, line: 823, baseType: !5503, size: 64, offset: 192)
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "fill_modes", scope: !5496, file: !198, line: 848, baseType: !5512, size: 64, offset: 256)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = !DISubroutineType(types: !5514)
!5514 = !{!139, !1162, !1509, !1509}
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !5496, file: !198, line: 864, baseType: !5516, size: 64, offset: 320)
!5516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5517, size: 64)
!5517 = !DISubroutineType(types: !5518)
!5518 = !{!139, !1162, !5215, !5042}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !5496, file: !198, line: 883, baseType: !5520, size: 64, offset: 384)
!5520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1160, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !5496, file: !198, line: 896, baseType: !5503, size: 64, offset: 448)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5496, file: !198, line: 906, baseType: !5503, size: 64, offset: 512)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5496, file: !198, line: 939, baseType: !5524, size: 64, offset: 576)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!5527, !1162}
!5527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5528, size: 64)
!5528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_state", file: !198, line: 605, size: 1216, elements: !5529)
!5529 = !{!5530, !5531, !5893, !5927, !5928, !5929, !5930, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5958, !5959, !5960}
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !5528, file: !198, line: 607, baseType: !1162, size: 64)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5528, file: !198, line: 615, baseType: !5532, size: 64, offset: 64)
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5533, size: 64)
!5533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc", file: !5534, line: 939, size: 7680, elements: !5535)
!5534 = !DIFile(filename: "./include/drm/drm_crtc.h", directory: "/home/lizy2001/genbc/linux")
!5535 = !{!5536, !5537, !5538, !5539, !5540, !5541, !5542, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5853, !5854, !5856, !5860, !5861, !5862, !5863, !5864, !5886, !5887, !5888, !5889, !5890}
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5533, file: !5534, line: 941, baseType: !1166, size: 64)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5533, file: !5534, line: 943, baseType: !4651, size: 64, offset: 64)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5533, file: !5534, line: 951, baseType: !562, size: 128, offset: 128)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5533, file: !5534, line: 954, baseType: !590, size: 64, offset: 256)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5533, file: !5534, line: 966, baseType: !5129, size: 384, offset: 320)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5533, file: !5534, line: 969, baseType: !5203, size: 256, offset: 704)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !5533, file: !5534, line: 978, baseType: !5543, size: 64, offset: 960)
!5543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5544, size: 64)
!5544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane", file: !229, line: 575, size: 5184, elements: !5545)
!5545 = !{!5546, !5547, !5548, !5549, !5550, !5551, !5552, !5553, !5554, !5555, !5556, !5557, !5558, !5559, !5560, !5692, !5693, !5694, !5695, !5699, !5700, !5701, !5702, !5703, !5704, !5705}
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5544, file: !229, line: 577, baseType: !1166, size: 64)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5544, file: !229, line: 586, baseType: !562, size: 128, offset: 64)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5544, file: !229, line: 589, baseType: !590, size: 64, offset: 192)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5544, file: !229, line: 600, baseType: !5129, size: 384, offset: 256)
!5550 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5544, file: !229, line: 603, baseType: !5203, size: 256, offset: 640)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "possible_crtcs", scope: !5544, file: !229, line: 609, baseType: !1509, size: 32, offset: 896)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "format_types", scope: !5544, file: !229, line: 611, baseType: !4983, size: 64, offset: 960)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "format_count", scope: !5544, file: !229, line: 613, baseType: !7, size: 32, offset: 1024)
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "format_default", scope: !5544, file: !229, line: 618, baseType: !559, size: 8, offset: 1056)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !5544, file: !229, line: 621, baseType: !5041, size: 64, offset: 1088)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_count", scope: !5544, file: !229, line: 623, baseType: !7, size: 32, offset: 1152)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5544, file: !229, line: 632, baseType: !5532, size: 64, offset: 1216)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !5544, file: !229, line: 641, baseType: !5196, size: 64, offset: 1280)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "old_fb", scope: !5544, file: !229, line: 649, baseType: !5196, size: 64, offset: 1344)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5544, file: !229, line: 652, baseType: !5561, size: 64, offset: 1408)
!5561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5562, size: 64)
!5562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5563)
!5563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_funcs", file: !229, line: 256, size: 832, elements: !5564)
!5564 = !{!5565, !5569, !5573, !5577, !5578, !5582, !5635, !5639, !5643, !5649, !5653, !5654, !5688}
!5565 = !DIDerivedType(tag: DW_TAG_member, name: "update_plane", scope: !5563, file: !229, line: 283, baseType: !5566, size: 64)
!5566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5567, size: 64)
!5567 = !DISubroutineType(types: !5568)
!5568 = !{!139, !5543, !5532, !5196, !139, !139, !7, !7, !1509, !1509, !1509, !1509, !5148}
!5569 = !DIDerivedType(tag: DW_TAG_member, name: "disable_plane", scope: !5563, file: !229, line: 306, baseType: !5570, size: 64, offset: 64)
!5570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5571, size: 64)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{!139, !5543, !5148}
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5563, file: !229, line: 316, baseType: !5574, size: 64, offset: 128)
!5574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5575, size: 64)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{null, !5543}
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5563, file: !229, line: 328, baseType: !5574, size: 64, offset: 192)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !5563, file: !229, line: 344, baseType: !5579, size: 64, offset: 256)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!139, !5543, !5215, !5042}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5563, file: !229, line: 378, baseType: !5583, size: 64, offset: 320)
!5583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5584, size: 64)
!5584 = !DISubroutineType(types: !5585)
!5585 = !{!5586, !5543}
!5586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5587, size: 64)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_state", file: !229, line: 47, size: 1216, elements: !5588)
!5588 = !{!5589, !5590, !5591, !5592, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5606, !5607, !5608, !5609, !5610, !5611, !5621, !5629, !5630, !5631, !5634}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !5587, file: !229, line: 49, baseType: !5543, size: 64)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5587, file: !229, line: 57, baseType: !5532, size: 64, offset: 64)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !5587, file: !229, line: 65, baseType: !5196, size: 64, offset: 128)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !5587, file: !229, line: 80, baseType: !5593, size: 64, offset: 192)
!5593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5594, size: 64)
!5594 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence", file: !229, line: 80, flags: DIFlagFwdDecl)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_x", scope: !5587, file: !229, line: 89, baseType: !2580, size: 32, offset: 256)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_y", scope: !5587, file: !229, line: 96, baseType: !2580, size: 32, offset: 288)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_w", scope: !5587, file: !229, line: 100, baseType: !1509, size: 32, offset: 320)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_h", scope: !5587, file: !229, line: 100, baseType: !1509, size: 32, offset: 352)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "src_x", scope: !5587, file: !229, line: 106, baseType: !1509, size: 32, offset: 384)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "src_y", scope: !5587, file: !229, line: 111, baseType: !1509, size: 32, offset: 416)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "src_h", scope: !5587, file: !229, line: 114, baseType: !1509, size: 32, offset: 448)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "src_w", scope: !5587, file: !229, line: 114, baseType: !1509, size: 32, offset: 480)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5587, file: !229, line: 122, baseType: !530, size: 16, offset: 512)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_blend_mode", scope: !5587, file: !229, line: 130, baseType: !5605, size: 16, offset: 528)
!5605 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !524, line: 103, baseType: !530)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !5587, file: !229, line: 137, baseType: !7, size: 32, offset: 544)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "zpos", scope: !5587, file: !229, line: 152, baseType: !7, size: 32, offset: 576)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_zpos", scope: !5587, file: !229, line: 161, baseType: !7, size: 32, offset: 608)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "color_encoding", scope: !5587, file: !229, line: 168, baseType: !216, size: 32, offset: 640)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !5587, file: !229, line: 175, baseType: !223, size: 32, offset: 672)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "fb_damage_clips", scope: !5587, file: !229, line: 185, baseType: !5612, size: 64, offset: 704)
!5612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5613, size: 64)
!5613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_property_blob", file: !5217, line: 209, size: 704, elements: !5614)
!5614 = !{!5615, !5616, !5617, !5618, !5619, !5620}
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5613, file: !5217, line: 210, baseType: !5203, size: 256)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5613, file: !5217, line: 211, baseType: !1166, size: 64, offset: 256)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "head_global", scope: !5613, file: !5217, line: 212, baseType: !562, size: 128, offset: 320)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "head_file", scope: !5613, file: !5217, line: 213, baseType: !562, size: 128, offset: 448)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5613, file: !5217, line: 214, baseType: !1285, size: 64, offset: 576)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5613, file: !5217, line: 215, baseType: !368, size: 64, offset: 640)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5587, file: !229, line: 207, baseType: !5622, size: 128, offset: 768)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_rect", file: !5623, line: 43, size: 128, elements: !5624)
!5623 = !DIFile(filename: "./include/drm/drm_rect.h", directory: "/home/lizy2001/genbc/linux")
!5624 = !{!5625, !5626, !5627, !5628}
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !5622, file: !5623, line: 44, baseType: !139, size: 32)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !5622, file: !5623, line: 44, baseType: !139, size: 32, offset: 32)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !5622, file: !5623, line: 44, baseType: !139, size: 32, offset: 64)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !5622, file: !5623, line: 44, baseType: !139, size: 32, offset: 96)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5587, file: !229, line: 207, baseType: !5622, size: 128, offset: 896)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "visible", scope: !5587, file: !229, line: 215, baseType: !559, size: 8, offset: 1024)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5587, file: !229, line: 223, baseType: !5632, size: 64, offset: 1088)
!5632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!5633 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_commit", file: !198, line: 649, flags: DIFlagFwdDecl)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5587, file: !229, line: 226, baseType: !5307, size: 64, offset: 1152)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5563, file: !229, line: 388, baseType: !5636, size: 64, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = !DISubroutineType(types: !5638)
!5638 = !{null, !5543, !5586}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !5563, file: !229, line: 433, baseType: !5640, size: 64, offset: 448)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DISubroutineType(types: !5642)
!5642 = !{!139, !5543, !5586, !5215, !5042}
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !5563, file: !229, line: 456, baseType: !5644, size: 64, offset: 512)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DISubroutineType(types: !5646)
!5646 = !{!139, !5543, !5647, !5215, !5041}
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5587)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !5563, file: !229, line: 473, baseType: !5650, size: 64, offset: 576)
!5650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5651, size: 64)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!139, !5543}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !5563, file: !229, line: 484, baseType: !5574, size: 64, offset: 640)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !5563, file: !229, line: 495, baseType: !5655, size: 64, offset: 704)
!5655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5656, size: 64)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{null, !5658, !5647}
!5658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5659, size: 64)
!5659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_printer", file: !12, line: 75, size: 256, elements: !5660)
!5660 = !{!5661, !5682, !5686, !5687}
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "printfn", scope: !5659, file: !12, line: 77, baseType: !5662, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5663, size: 64)
!5663 = !DISubroutineType(types: !5664)
!5664 = !{null, !5658, !5665}
!5665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5666, size: 64)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "va_format", file: !25, line: 90, size: 128, elements: !5667)
!5667 = !{!5668, !5669}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !5666, file: !25, line: 91, baseType: !648, size: 64)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "va", scope: !5666, file: !25, line: 92, baseType: !5670, size: 64, offset: 64)
!5670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5671, size: 64)
!5671 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5672, line: 99, baseType: !5673)
!5672 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!5673 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5672, line: 40, baseType: !5674)
!5674 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 1767, baseType: !5675)
!5675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5676, size: 192, elements: !2336)
!5676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 1767, size: 192, elements: !5677)
!5677 = !{!5678, !5679, !5680, !5681}
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5676, file: !3, line: 1767, baseType: !7, size: 32)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5676, file: !3, line: 1767, baseType: !7, size: 32, offset: 32)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5676, file: !3, line: 1767, baseType: !368, size: 64, offset: 64)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5676, file: !3, line: 1767, baseType: !368, size: 64, offset: 128)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "puts", scope: !5659, file: !12, line: 78, baseType: !5683, size: 64, offset: 64)
!5683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5684, size: 64)
!5684 = !DISubroutineType(types: !5685)
!5685 = !{null, !5658, !648}
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5659, file: !12, line: 79, baseType: !368, size: 64, offset: 128)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !5659, file: !12, line: 80, baseType: !648, size: 64, offset: 192)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "format_mod_supported", scope: !5563, file: !229, line: 514, baseType: !5689, size: 64, offset: 768)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{!559, !5543, !1509, !5042}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5544, file: !229, line: 655, baseType: !5210, size: 3136, offset: 1472)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5544, file: !229, line: 658, baseType: !228, size: 32, offset: 4608)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5544, file: !229, line: 664, baseType: !7, size: 32, offset: 4640)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !5544, file: !229, line: 667, baseType: !5696, size: 64, offset: 4672)
!5696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5697, size: 64)
!5697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5698)
!5698 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_helper_funcs", file: !229, line: 667, flags: DIFlagFwdDecl)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5544, file: !229, line: 682, baseType: !5586, size: 64, offset: 4736)
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_property", scope: !5544, file: !229, line: 689, baseType: !5215, size: 64, offset: 4800)
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "zpos_property", scope: !5544, file: !229, line: 695, baseType: !5215, size: 64, offset: 4864)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_property", scope: !5544, file: !229, line: 701, baseType: !5215, size: 64, offset: 4928)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode_property", scope: !5544, file: !229, line: 709, baseType: !5215, size: 64, offset: 4992)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "color_encoding_property", scope: !5544, file: !229, line: 718, baseType: !5215, size: 64, offset: 5056)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "color_range_property", scope: !5544, file: !229, line: 726, baseType: !5215, size: 64, offset: 5120)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !5533, file: !5534, line: 987, baseType: !5543, size: 64, offset: 1024)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5533, file: !5534, line: 993, baseType: !7, size: 32, offset: 1088)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_x", scope: !5533, file: !5534, line: 1002, baseType: !139, size: 32, offset: 1120)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_y", scope: !5533, file: !5534, line: 1010, baseType: !139, size: 32, offset: 1152)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !5533, file: !5534, line: 1020, baseType: !559, size: 8, offset: 1184)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5533, file: !5534, line: 1030, baseType: !526, size: 960, offset: 1216)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "hwmode", scope: !5533, file: !5534, line: 1046, baseType: !526, size: 960, offset: 2176)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5533, file: !5534, line: 1055, baseType: !139, size: 32, offset: 3136)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5533, file: !5534, line: 1063, baseType: !139, size: 32, offset: 3168)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5533, file: !5534, line: 1066, baseType: !5716, size: 64, offset: 3200)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5718)
!5718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_funcs", file: !5534, line: 409, size: 1536, elements: !5719)
!5719 = !{!5720, !5724, !5728, !5732, !5736, !5741, !5742, !5757, !5763, !5767, !5771, !5804, !5808, !5812, !5818, !5822, !5823, !5827, !5832, !5838, !5842, !5846, !5847, !5848}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5718, file: !5534, line: 420, baseType: !5721, size: 64)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{null, !5532}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_set", scope: !5718, file: !5534, line: 443, baseType: !5725, size: 64, offset: 64)
!5725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5726, size: 64)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{!139, !5532, !4922, !1509, !1509, !1509}
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_set2", scope: !5718, file: !5534, line: 465, baseType: !5729, size: 64, offset: 128)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!139, !5532, !4922, !1509, !1509, !1509, !2580, !2580}
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_move", scope: !5718, file: !5534, line: 485, baseType: !5733, size: 64, offset: 192)
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 64)
!5734 = !DISubroutineType(types: !5735)
!5735 = !{!139, !5532, !139, !139}
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_set", scope: !5718, file: !5534, line: 500, baseType: !5737, size: 64, offset: 256)
!5737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5738, size: 64)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!139, !5532, !5740, !5740, !5740, !1509, !5148}
!5740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5718, file: !5534, line: 511, baseType: !5721, size: 64, offset: 320)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !5718, file: !5534, line: 527, baseType: !5743, size: 64, offset: 384)
!5743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5744, size: 64)
!5744 = !DISubroutineType(types: !5745)
!5745 = !{!139, !5746, !5148}
!5746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5747, size: 64)
!5747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_set", file: !5534, line: 1190, size: 384, elements: !5748)
!5748 = !{!5749, !5750, !5751, !5752, !5753, !5754, !5756}
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !5747, file: !5534, line: 1191, baseType: !5196, size: 64)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5747, file: !5534, line: 1192, baseType: !5532, size: 64, offset: 64)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5747, file: !5534, line: 1193, baseType: !525, size: 64, offset: 128)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !5747, file: !5534, line: 1195, baseType: !1509, size: 32, offset: 192)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !5747, file: !5534, line: 1196, baseType: !1509, size: 32, offset: 224)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "connectors", scope: !5747, file: !5534, line: 1198, baseType: !5755, size: 64, offset: 256)
!5755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "num_connectors", scope: !5747, file: !5534, line: 1199, baseType: !1285, size: 64, offset: 320)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "page_flip", scope: !5718, file: !5534, line: 583, baseType: !5758, size: 64, offset: 448)
!5758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5759, size: 64)
!5759 = !DISubroutineType(types: !5760)
!5760 = !{!139, !5532, !5196, !5761, !1509, !5148}
!5761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5762, size: 64)
!5762 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_pending_vblank_event", file: !5534, line: 71, flags: DIFlagFwdDecl)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "page_flip_target", scope: !5718, file: !5534, line: 602, baseType: !5764, size: 64, offset: 512)
!5764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5765, size: 64)
!5765 = !DISubroutineType(types: !5766)
!5766 = !{!139, !5532, !5196, !5761, !1509, !1509, !5148}
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !5718, file: !5534, line: 622, baseType: !5768, size: 64, offset: 576)
!5768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5769, size: 64)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{!139, !5532, !5215, !5042}
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5718, file: !5534, line: 656, baseType: !5772, size: 64, offset: 640)
!5772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5773, size: 64)
!5773 = !DISubroutineType(types: !5774)
!5774 = !{!5775, !5532}
!5775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5776, size: 64)
!5776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_state", file: !5534, line: 99, size: 2624, elements: !5777)
!5777 = !{!5778, !5779, !5780, !5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792, !5793, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5802, !5803}
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5776, file: !5534, line: 101, baseType: !5532, size: 64)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !5776, file: !5534, line: 108, baseType: !559, size: 8, offset: 64)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5776, file: !5534, line: 123, baseType: !559, size: 8, offset: 72)
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "planes_changed", scope: !5776, file: !5534, line: 129, baseType: !559, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 80)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "mode_changed", scope: !5776, file: !5534, line: 141, baseType: !559, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 80)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "active_changed", scope: !5776, file: !5534, line: 148, baseType: !559, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 80)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "connectors_changed", scope: !5776, file: !5534, line: 159, baseType: !559, size: 1, offset: 83, flags: DIFlagBitField, extraData: i64 80)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "zpos_changed", scope: !5776, file: !5534, line: 165, baseType: !559, size: 1, offset: 84, flags: DIFlagBitField, extraData: i64 80)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgmt_changed", scope: !5776, file: !5534, line: 171, baseType: !559, size: 1, offset: 85, flags: DIFlagBitField, extraData: i64 80)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "no_vblank", scope: !5776, file: !5534, line: 207, baseType: !559, size: 1, offset: 86, flags: DIFlagBitField, extraData: i64 80)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "plane_mask", scope: !5776, file: !5534, line: 213, baseType: !388, size: 32, offset: 96)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "connector_mask", scope: !5776, file: !5534, line: 219, baseType: !388, size: 32, offset: 128)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_mask", scope: !5776, file: !5534, line: 225, baseType: !388, size: 32, offset: 160)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "adjusted_mode", scope: !5776, file: !5534, line: 240, baseType: !526, size: 960, offset: 192)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5776, file: !5534, line: 257, baseType: !526, size: 960, offset: 1152)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "mode_blob", scope: !5776, file: !5534, line: 263, baseType: !5612, size: 64, offset: 2112)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut", scope: !5776, file: !5534, line: 272, baseType: !5612, size: 64, offset: 2176)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "ctm", scope: !5776, file: !5534, line: 280, baseType: !5612, size: 64, offset: 2240)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut", scope: !5776, file: !5534, line: 289, baseType: !5612, size: 64, offset: 2304)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "target_vblank", scope: !5776, file: !5534, line: 297, baseType: !388, size: 32, offset: 2368)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "async_flip", scope: !5776, file: !5534, line: 305, baseType: !559, size: 8, offset: 2400)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "vrr_enabled", scope: !5776, file: !5534, line: 314, baseType: !559, size: 8, offset: 2408)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_active", scope: !5776, file: !5534, line: 325, baseType: !559, size: 8, offset: 2416)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5776, file: !5534, line: 382, baseType: !5761, size: 64, offset: 2432)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5776, file: !5534, line: 391, baseType: !5632, size: 64, offset: 2496)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5776, file: !5534, line: 394, baseType: !5307, size: 64, offset: 2560)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5718, file: !5534, line: 666, baseType: !5805, size: 64, offset: 704)
!5805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5806, size: 64)
!5806 = !DISubroutineType(types: !5807)
!5807 = !{null, !5532, !5775}
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !5718, file: !5534, line: 711, baseType: !5809, size: 64, offset: 768)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = !DISubroutineType(types: !5811)
!5811 = !{!139, !5532, !5775, !5215, !5042}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !5718, file: !5534, line: 733, baseType: !5813, size: 64, offset: 832)
!5813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5814, size: 64)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{!139, !5532, !5816, !5215, !5041}
!5816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5817, size: 64)
!5817 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5776)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !5718, file: !5534, line: 751, baseType: !5819, size: 64, offset: 896)
!5819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5820, size: 64)
!5820 = !DISubroutineType(types: !5821)
!5821 = !{!139, !5532}
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !5718, file: !5534, line: 762, baseType: !5721, size: 64, offset: 960)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "set_crc_source", scope: !5718, file: !5534, line: 791, baseType: !5824, size: 64, offset: 1024)
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!139, !5532, !648}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "verify_crc_source", scope: !5718, file: !5534, line: 807, baseType: !5828, size: 64, offset: 1088)
!5828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5829, size: 64)
!5829 = !DISubroutineType(types: !5830)
!5830 = !{!139, !5532, !648, !5831}
!5831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "get_crc_sources", scope: !5718, file: !5534, line: 829, baseType: !5833, size: 64, offset: 1152)
!5833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5834, size: 64)
!5834 = !DISubroutineType(types: !5835)
!5835 = !{!5836, !5532, !5831}
!5836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5837, size: 64)
!5837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !648)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !5718, file: !5534, line: 841, baseType: !5839, size: 64, offset: 1216)
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 64)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{null, !5658, !5816}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_counter", scope: !5718, file: !5534, line: 868, baseType: !5843, size: 64, offset: 1280)
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 64)
!5844 = !DISubroutineType(types: !5845)
!5845 = !{!388, !5532}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "enable_vblank", scope: !5718, file: !5534, line: 881, baseType: !5819, size: 64, offset: 1344)
!5847 = !DIDerivedType(tag: DW_TAG_member, name: "disable_vblank", scope: !5718, file: !5534, line: 889, baseType: !5721, size: 64, offset: 1408)
!5848 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_timestamp", scope: !5718, file: !5534, line: 927, baseType: !5849, size: 64, offset: 1472)
!5849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5850, size: 64)
!5850 = !DISubroutineType(types: !5851)
!5851 = !{!559, !5532, !1655, !5852, !559}
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_size", scope: !5533, file: !5534, line: 1072, baseType: !1509, size: 32, offset: 3264)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_store", scope: !5533, file: !5534, line: 1078, baseType: !5855, size: 64, offset: 3328)
!5855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5605, size: 64)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !5533, file: !5534, line: 1081, baseType: !5857, size: 64, offset: 3392)
!5857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5858, size: 64)
!5858 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5859)
!5859 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_helper_funcs", file: !5534, line: 76, flags: DIFlagFwdDecl)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5533, file: !5534, line: 1084, baseType: !5210, size: 3136, offset: 3456)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5533, file: !5534, line: 1099, baseType: !5775, size: 64, offset: 6592)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "commit_list", scope: !5533, file: !5534, line: 1116, baseType: !562, size: 128, offset: 6656)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "commit_lock", scope: !5533, file: !5534, line: 1123, baseType: !1203, offset: 6784)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !5533, file: !5534, line: 1139, baseType: !5865, size: 448, offset: 6784)
!5865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_crc", file: !5866, line: 53, size: 448, elements: !5867)
!5866 = !DIFile(filename: "./include/drm/drm_debugfs_crc.h", directory: "/home/lizy2001/genbc/linux")
!5867 = !{!5868, !5869, !5870, !5871, !5872, !5882, !5883, !5884, !5885}
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5865, file: !5866, line: 54, baseType: !1203)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5865, file: !5866, line: 55, baseType: !648, size: 64)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "opened", scope: !5865, file: !5866, line: 56, baseType: !559, size: 8, offset: 64)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "overflow", scope: !5865, file: !5866, line: 56, baseType: !559, size: 8, offset: 72)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !5865, file: !5866, line: 57, baseType: !5873, size: 64, offset: 128)
!5873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5874, size: 64)
!5874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_crc_entry", file: !5866, line: 33, size: 384, elements: !5875)
!5875 = !{!5876, !5877, !5878}
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "has_frame_counter", scope: !5874, file: !5866, line: 34, baseType: !559, size: 8)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !5874, file: !5866, line: 35, baseType: !1509, size: 32, offset: 32)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "crcs", scope: !5874, file: !5866, line: 36, baseType: !5879, size: 320, offset: 64)
!5879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1509, size: 320, elements: !5880)
!5880 = !{!5881}
!5881 = !DISubrange(count: 10)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5865, file: !5866, line: 58, baseType: !139, size: 32, offset: 192)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5865, file: !5866, line: 58, baseType: !139, size: 32, offset: 224)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "values_cnt", scope: !5865, file: !5866, line: 59, baseType: !1285, size: 64, offset: 256)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5865, file: !5866, line: 60, baseType: !2446, size: 128, offset: 320)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "fence_context", scope: !5533, file: !5534, line: 1146, baseType: !7, size: 32, offset: 7232)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "fence_lock", scope: !5533, file: !5534, line: 1153, baseType: !1203, offset: 7264)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "fence_seqno", scope: !5533, file: !5534, line: 1160, baseType: !574, size: 64, offset: 7296)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_name", scope: !5533, file: !5534, line: 1167, baseType: !568, size: 256, offset: 7360)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_data", scope: !5533, file: !5534, line: 1174, baseType: !5891, size: 64, offset: 7616)
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_self_refresh_data", file: !5534, line: 56, flags: DIFlagFwdDecl)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "best_encoder", scope: !5528, file: !198, line: 633, baseType: !5894, size: 64, offset: 128)
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder", file: !5896, line: 99, size: 960, elements: !5897)
!5896 = !DIFile(filename: "./include/drm/drm_encoder.h", directory: "/home/lizy2001/genbc/linux")
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5923}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5895, file: !5896, line: 100, baseType: !1166, size: 64)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5895, file: !5896, line: 101, baseType: !562, size: 128, offset: 64)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5895, file: !5896, line: 103, baseType: !5203, size: 256, offset: 192)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5895, file: !5896, line: 104, baseType: !590, size: 64, offset: 448)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_type", scope: !5895, file: !5896, line: 131, baseType: !139, size: 32, offset: 512)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5895, file: !5896, line: 137, baseType: !7, size: 32, offset: 544)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "possible_crtcs", scope: !5895, file: !5896, line: 150, baseType: !1509, size: 32, offset: 576)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "possible_clones", scope: !5895, file: !5896, line: 171, baseType: !1509, size: 32, offset: 608)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5895, file: !5896, line: 178, baseType: !5532, size: 64, offset: 640)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_chain", scope: !5895, file: !5896, line: 184, baseType: !562, size: 128, offset: 704)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5895, file: !5896, line: 186, baseType: !5909, size: 64, offset: 832)
!5909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!5910 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5911)
!5911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder_funcs", file: !5896, line: 40, size: 256, elements: !5912)
!5912 = !{!5913, !5917, !5918, !5922}
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5911, file: !5896, line: 48, baseType: !5914, size: 64)
!5914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5915, size: 64)
!5915 = !DISubroutineType(types: !5916)
!5916 = !{null, !5894}
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5911, file: !5896, line: 57, baseType: !5914, size: 64, offset: 64)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !5911, file: !5896, line: 72, baseType: !5919, size: 64, offset: 128)
!5919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5920, size: 64)
!5920 = !DISubroutineType(types: !5921)
!5921 = !{!139, !5894}
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !5911, file: !5896, line: 83, baseType: !5914, size: 64, offset: 192)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !5895, file: !5896, line: 187, baseType: !5924, size: 64, offset: 896)
!5924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5925, size: 64)
!5925 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5926)
!5926 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder_helper_funcs", file: !5896, line: 187, flags: DIFlagFwdDecl)
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "link_status", scope: !5528, file: !198, line: 639, baseType: !234, size: 32, offset: 192)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5528, file: !198, line: 642, baseType: !5307, size: 64, offset: 256)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5528, file: !198, line: 649, baseType: !5632, size: 64, offset: 320)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "tv", scope: !5528, file: !198, line: 652, baseType: !5931, size: 384, offset: 384)
!5931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_tv_connector_state", file: !198, line: 590, size: 384, elements: !5932)
!5932 = !{!5933, !5934, !5941, !5942, !5943, !5944, !5945, !5946, !5947}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "subconnector", scope: !5931, file: !198, line: 591, baseType: !238, size: 32)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !5931, file: !198, line: 592, baseType: !5935, size: 128, offset: 32)
!5935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_tv_margins", file: !198, line: 556, size: 128, elements: !5936)
!5936 = !{!5937, !5938, !5939, !5940}
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !5935, file: !198, line: 560, baseType: !7, size: 32)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !5935, file: !198, line: 565, baseType: !7, size: 32, offset: 32)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !5935, file: !198, line: 570, baseType: !7, size: 32, offset: 64)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !5935, file: !198, line: 575, baseType: !7, size: 32, offset: 96)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5931, file: !198, line: 593, baseType: !7, size: 32, offset: 160)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "brightness", scope: !5931, file: !198, line: 594, baseType: !7, size: 32, offset: 192)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !5931, file: !198, line: 595, baseType: !7, size: 32, offset: 224)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "flicker_reduction", scope: !5931, file: !198, line: 596, baseType: !7, size: 32, offset: 256)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "overscan", scope: !5931, file: !198, line: 597, baseType: !7, size: 32, offset: 288)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !5931, file: !198, line: 598, baseType: !7, size: 32, offset: 320)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "hue", scope: !5931, file: !198, line: 599, baseType: !7, size: 32, offset: 352)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_aware", scope: !5528, file: !198, line: 666, baseType: !559, size: 8, offset: 768)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect_ratio", scope: !5528, file: !198, line: 675, baseType: !181, size: 32, offset: 800)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !5528, file: !198, line: 683, baseType: !7, size: 32, offset: 832)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_content_type", scope: !5528, file: !198, line: 689, baseType: !7, size: 32, offset: 864)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode", scope: !5528, file: !198, line: 695, baseType: !7, size: 32, offset: 896)
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "content_protection", scope: !5528, file: !198, line: 701, baseType: !7, size: 32, offset: 928)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !5528, file: !198, line: 708, baseType: !388, size: 32, offset: 960)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_job", scope: !5528, file: !198, line: 721, baseType: !5956, size: 64, offset: 1024)
!5956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5957, size: 64)
!5957 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_writeback_job", file: !198, line: 721, flags: DIFlagFwdDecl)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "max_requested_bpc", scope: !5528, file: !198, line: 727, baseType: !375, size: 8, offset: 1088)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "max_bpc", scope: !5528, file: !198, line: 733, baseType: !375, size: 8, offset: 1096)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_output_metadata", scope: !5528, file: !198, line: 739, baseType: !5612, size: 64, offset: 1152)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5496, file: !198, line: 949, baseType: !5962, size: 64, offset: 640)
!5962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5963, size: 64)
!5963 = !DISubroutineType(types: !5964)
!5964 = !{null, !1162, !5527}
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !5496, file: !198, line: 994, baseType: !5966, size: 64, offset: 704)
!5966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5967, size: 64)
!5967 = !DISubroutineType(types: !5968)
!5968 = !{!139, !1162, !5527, !5215, !5042}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !5496, file: !198, line: 1017, baseType: !5970, size: 64, offset: 768)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!139, !1162, !5973, !5215, !5041}
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5528)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !5496, file: !198, line: 1031, baseType: !5976, size: 64, offset: 832)
!5976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5977, size: 64)
!5977 = !DISubroutineType(types: !5978)
!5978 = !{null, !5658, !5973}
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "edid_blob_ptr", scope: !1163, file: !198, line: 1292, baseType: !5612, size: 64, offset: 2624)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1163, file: !198, line: 1295, baseType: !5210, size: 3136, offset: 2688)
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode_property", scope: !1163, file: !198, line: 1301, baseType: !5215, size: 64, offset: 5824)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "vrr_capable_property", scope: !1163, file: !198, line: 1312, baseType: !5215, size: 64, offset: 5888)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_property", scope: !1163, file: !198, line: 1318, baseType: !5215, size: 64, offset: 5952)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "path_blob_ptr", scope: !1163, file: !198, line: 1326, baseType: !5612, size: 64, offset: 6016)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "max_bpc_property", scope: !1163, file: !198, line: 1332, baseType: !5215, size: 64, offset: 6080)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "polled", scope: !1163, file: !198, line: 1359, baseType: !5987, size: 8, offset: 6144)
!5987 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !524, line: 102, baseType: !375)
!5988 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !1163, file: !198, line: 1367, baseType: !139, size: 32, offset: 6176)
!5989 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !1163, file: !198, line: 1370, baseType: !5990, size: 64, offset: 6208)
!5990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5991, size: 64)
!5991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5992)
!5992 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_helper_funcs", file: !198, line: 35, flags: DIFlagFwdDecl)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "cmdline_mode", scope: !1163, file: !198, line: 1373, baseType: !5994, size: 672, offset: 6272)
!5994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_cmdline_mode", file: !198, line: 1043, size: 672, elements: !5995)
!5995 = !{!5996, !5997, !5998, !5999, !6000, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6009, !6010, !6011}
!5996 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5994, file: !198, line: 1049, baseType: !568, size: 256)
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "specified", scope: !5994, file: !198, line: 1056, baseType: !559, size: 8, offset: 256)
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_specified", scope: !5994, file: !198, line: 1063, baseType: !559, size: 8, offset: 264)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "bpp_specified", scope: !5994, file: !198, line: 1070, baseType: !559, size: 8, offset: 272)
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !5994, file: !198, line: 1077, baseType: !139, size: 32, offset: 288)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !5994, file: !198, line: 1084, baseType: !139, size: 32, offset: 320)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !5994, file: !198, line: 1091, baseType: !139, size: 32, offset: 352)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !5994, file: !198, line: 1098, baseType: !139, size: 32, offset: 384)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5994, file: !198, line: 1105, baseType: !559, size: 8, offset: 416)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !5994, file: !198, line: 1112, baseType: !559, size: 8, offset: 424)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !5994, file: !198, line: 1120, baseType: !559, size: 8, offset: 432)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !5994, file: !198, line: 1128, baseType: !559, size: 8, offset: 440)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !5994, file: !198, line: 1136, baseType: !254, size: 32, offset: 448)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_reflection", scope: !5994, file: !198, line: 1146, baseType: !7, size: 32, offset: 480)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation", scope: !5994, file: !198, line: 1154, baseType: !260, size: 32, offset: 512)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "tv_margins", scope: !5994, file: !198, line: 1159, baseType: !5935, size: 128, offset: 544)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !1163, file: !198, line: 1375, baseType: !254, size: 32, offset: 6944)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "override_edid", scope: !1163, file: !198, line: 1377, baseType: !559, size: 8, offset: 6976)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_counter", scope: !1163, file: !198, line: 1379, baseType: !586, size: 64, offset: 7040)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "possible_encoders", scope: !1163, file: !198, line: 1386, baseType: !388, size: 32, offset: 7104)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !1163, file: !198, line: 1394, baseType: !5894, size: 64, offset: 7168)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "eld", scope: !1163, file: !198, line: 1398, baseType: !6018, size: 1024, offset: 7232)
!6018 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5987, size: 1024, elements: !4448)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "latency_present", scope: !1163, file: !198, line: 1400, baseType: !6020, size: 16, offset: 8256)
!6020 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 16, elements: !384)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "video_latency", scope: !1163, file: !198, line: 1405, baseType: !6022, size: 64, offset: 8288)
!6022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !139, size: 64, elements: !384)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "audio_latency", scope: !1163, file: !198, line: 1410, baseType: !6022, size: 64, offset: 8352)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "ddc", scope: !1163, file: !198, line: 1421, baseType: !6025, size: 64, offset: 8448)
!6025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6026, size: 64)
!6026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !6027, line: 695, size: 7552, elements: !6028)
!6027 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!6028 = !{!6029, !6030, !6031, !6068, !6069, !6083, !6090, !6091, !6092, !6093, !6094, !6095, !6096, !6100, !6101, !6102, !6103, !6135, !6146}
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6026, file: !6027, line: 696, baseType: !651, size: 64)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !6026, file: !6027, line: 697, baseType: !7, size: 32, offset: 64)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !6026, file: !6027, line: 698, baseType: !6032, size: 64, offset: 128)
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 64)
!6033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6034)
!6034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !6027, line: 519, size: 320, elements: !6035)
!6035 = !{!6036, !6049, !6050, !6063, !6064}
!6036 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !6034, file: !6027, line: 529, baseType: !6037, size: 64)
!6037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6038, size: 64)
!6038 = !DISubroutineType(types: !6039)
!6039 = !{!139, !6025, !6040, !139}
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !6042, line: 69, size: 128, elements: !6043)
!6042 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!6043 = !{!6044, !6045, !6046, !6047}
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !6041, file: !6042, line: 70, baseType: !428, size: 16)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6041, file: !6042, line: 71, baseType: !428, size: 16, offset: 16)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6041, file: !6042, line: 84, baseType: !428, size: 16, offset: 32)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6041, file: !6042, line: 85, baseType: !6048, size: 64, offset: 64)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !6034, file: !6027, line: 531, baseType: !6037, size: 64, offset: 64)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !6034, file: !6027, line: 533, baseType: !6051, size: 64, offset: 128)
!6051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6052, size: 64)
!6052 = !DISubroutineType(types: !6053)
!6053 = !{!139, !6025, !530, !429, !569, !375, !139, !6054}
!6054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6055, size: 64)
!6055 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !6042, line: 135, size: 272, elements: !6056)
!6056 = !{!6057, !6058, !6059}
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !6055, file: !6042, line: 136, baseType: !377, size: 8)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !6055, file: !6042, line: 137, baseType: !428, size: 16)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6055, file: !6042, line: 138, baseType: !6060, size: 272)
!6060 = !DICompositeType(tag: DW_TAG_array_type, baseType: !377, size: 272, elements: !6061)
!6061 = !{!6062}
!6062 = !DISubrange(count: 34)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !6034, file: !6027, line: 536, baseType: !6051, size: 64, offset: 192)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !6034, file: !6027, line: 541, baseType: !6065, size: 64, offset: 256)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!388, !6025}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !6026, file: !6027, line: 699, baseType: !368, size: 64, offset: 192)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !6026, file: !6027, line: 702, baseType: !6070, size: 64, offset: 256)
!6070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6071, size: 64)
!6071 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6072)
!6072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !6027, line: 557, size: 192, elements: !6073)
!6073 = !{!6074, !6078, !6082}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !6072, file: !6027, line: 558, baseType: !6075, size: 64)
!6075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6076, size: 64)
!6076 = !DISubroutineType(types: !6077)
!6077 = !{null, !6025, !7}
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !6072, file: !6027, line: 559, baseType: !6079, size: 64, offset: 64)
!6079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6080, size: 64)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{!139, !6025, !7}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !6072, file: !6027, line: 560, baseType: !6075, size: 64, offset: 128)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !6026, file: !6027, line: 703, baseType: !6084, size: 192, offset: 320)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !6085, line: 30, size: 192, elements: !6086)
!6085 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!6086 = !{!6087, !6088, !6089}
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !6084, file: !6085, line: 31, baseType: !1768)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6084, file: !6085, line: 32, baseType: !1747, size: 128)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6084, file: !6085, line: 33, baseType: !2191, size: 64, offset: 128)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !6026, file: !6027, line: 704, baseType: !6084, size: 192, offset: 512)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6026, file: !6027, line: 706, baseType: !139, size: 32, offset: 704)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !6026, file: !6027, line: 707, baseType: !139, size: 32, offset: 736)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6026, file: !6027, line: 708, baseType: !1187, size: 5568, offset: 768)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !6026, file: !6027, line: 709, baseType: !574, size: 64, offset: 6336)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !6026, file: !6027, line: 713, baseType: !139, size: 32, offset: 6400)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6026, file: !6027, line: 714, baseType: !6097, size: 384, offset: 6432)
!6097 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 384, elements: !6098)
!6098 = !{!6099}
!6099 = !DISubrange(count: 48)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !6026, file: !6027, line: 715, baseType: !2500, size: 192, offset: 6848)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !6026, file: !6027, line: 717, baseType: !1673, size: 192, offset: 7040)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !6026, file: !6027, line: 718, baseType: !562, size: 128, offset: 7232)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !6026, file: !6027, line: 720, baseType: !6104, size: 64, offset: 7360)
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 64)
!6105 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !6027, line: 618, size: 832, elements: !6106)
!6106 = !{!6107, !6111, !6112, !6116, !6117, !6118, !6119, !6123, !6124, !6127, !6128, !6131, !6134}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !6105, file: !6027, line: 619, baseType: !6108, size: 64)
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6109, size: 64)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!139, !6025}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !6105, file: !6027, line: 621, baseType: !6108, size: 64, offset: 64)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !6105, file: !6027, line: 622, baseType: !6113, size: 64, offset: 128)
!6113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6114, size: 64)
!6114 = !DISubroutineType(types: !6115)
!6115 = !{null, !6025, !139}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !6105, file: !6027, line: 623, baseType: !6108, size: 64, offset: 192)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !6105, file: !6027, line: 624, baseType: !6113, size: 64, offset: 256)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !6105, file: !6027, line: 625, baseType: !6108, size: 64, offset: 320)
!6119 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !6105, file: !6027, line: 627, baseType: !6120, size: 64, offset: 384)
!6120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6121, size: 64)
!6121 = !DISubroutineType(types: !6122)
!6122 = !{null, !6025}
!6123 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !6105, file: !6027, line: 628, baseType: !6120, size: 64, offset: 448)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !6105, file: !6027, line: 631, baseType: !6125, size: 64, offset: 512)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !6027, line: 631, flags: DIFlagFwdDecl)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !6105, file: !6027, line: 632, baseType: !6125, size: 64, offset: 576)
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !6105, file: !6027, line: 633, baseType: !6129, size: 64, offset: 640)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 64)
!6130 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !6027, line: 633, flags: DIFlagFwdDecl)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !6105, file: !6027, line: 634, baseType: !6132, size: 64, offset: 704)
!6132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6133, size: 64)
!6133 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !6027, line: 634, flags: DIFlagFwdDecl)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !6105, file: !6027, line: 635, baseType: !6132, size: 64, offset: 768)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !6026, file: !6027, line: 721, baseType: !6136, size: 64, offset: 7424)
!6136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6137, size: 64)
!6137 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6138)
!6138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !6027, line: 664, size: 192, elements: !6139)
!6139 = !{!6140, !6141, !6142, !6143, !6144, !6145}
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6138, file: !6027, line: 665, baseType: !586, size: 64)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !6138, file: !6027, line: 666, baseType: !139, size: 32, offset: 64)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !6138, file: !6027, line: 667, baseType: !530, size: 16, offset: 96)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !6138, file: !6027, line: 668, baseType: !530, size: 16, offset: 112)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !6138, file: !6027, line: 669, baseType: !530, size: 16, offset: 128)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !6138, file: !6027, line: 670, baseType: !530, size: 16, offset: 144)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !6026, file: !6027, line: 723, baseType: !4637, size: 64, offset: 7488)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "null_edid_counter", scope: !1163, file: !198, line: 1427, baseType: !139, size: 32, offset: 8512)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "bad_edid_counter", scope: !1163, file: !198, line: 1430, baseType: !7, size: 32, offset: 8544)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "edid_corrupt", scope: !1163, file: !198, line: 1437, baseType: !559, size: 8, offset: 8576)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "real_edid_checksum", scope: !1163, file: !198, line: 1443, baseType: !375, size: 8, offset: 8584)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_entry", scope: !1163, file: !198, line: 1446, baseType: !1345, size: 64, offset: 8640)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1163, file: !198, line: 1462, baseType: !5527, size: 64, offset: 8704)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "tile_blob_ptr", scope: !1163, file: !198, line: 1479, baseType: !5612, size: 64, offset: 8768)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "has_tile", scope: !1163, file: !198, line: 1482, baseType: !559, size: 8, offset: 8832)
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "tile_group", scope: !1163, file: !198, line: 1484, baseType: !6156, size: 64, offset: 8896)
!6156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6157, size: 64)
!6157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_tile_group", file: !198, line: 1663, size: 256, elements: !6158)
!6158 = !{!6159, !6160, !6161, !6162}
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !6157, file: !198, line: 1664, baseType: !1172, size: 32)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6157, file: !198, line: 1665, baseType: !1166, size: 64, offset: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6157, file: !198, line: 1666, baseType: !139, size: 32, offset: 128)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "group_data", scope: !6157, file: !198, line: 1667, baseType: !374, size: 64, offset: 160)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "tile_is_single_monitor", scope: !1163, file: !198, line: 1486, baseType: !559, size: 8, offset: 8960)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "num_h_tile", scope: !1163, file: !198, line: 1490, baseType: !5987, size: 8, offset: 8968)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "num_v_tile", scope: !1163, file: !198, line: 1490, baseType: !5987, size: 8, offset: 8976)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h_loc", scope: !1163, file: !198, line: 1493, baseType: !5987, size: 8, offset: 8984)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "tile_v_loc", scope: !1163, file: !198, line: 1493, baseType: !5987, size: 8, offset: 8992)
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h_size", scope: !1163, file: !198, line: 1496, baseType: !5605, size: 16, offset: 9008)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "tile_v_size", scope: !1163, file: !198, line: 1496, baseType: !5605, size: 16, offset: 9024)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !1163, file: !198, line: 1505, baseType: !1322, size: 64, offset: 9088)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_sink_metadata", scope: !1163, file: !198, line: 1508, baseType: !6172, size: 96, offset: 9152)
!6172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_sink_metadata", file: !182, line: 378, size: 96, elements: !6173)
!6173 = !{!6174, !6175}
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !6172, file: !182, line: 382, baseType: !389, size: 32)
!6175 = !DIDerivedType(tag: DW_TAG_member, scope: !6172, file: !182, line: 386, baseType: !6176, size: 64, offset: 32)
!6176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6172, file: !182, line: 386, size: 64, elements: !6177)
!6177 = !{!6178}
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi_type1", scope: !6176, file: !182, line: 387, baseType: !6179, size: 64)
!6179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_static_metadata", file: !182, line: 365, size: 64, elements: !6180)
!6180 = !{!6181, !6182, !6183, !6184, !6185}
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "eotf", scope: !6179, file: !182, line: 366, baseType: !377, size: 8)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !6179, file: !182, line: 367, baseType: !377, size: 8, offset: 8)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "max_cll", scope: !6179, file: !182, line: 368, baseType: !428, size: 16, offset: 16)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "max_fall", scope: !6179, file: !182, line: 369, baseType: !428, size: 16, offset: 32)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "min_cll", scope: !6179, file: !182, line: 370, baseType: !428, size: 16, offset: 48)
!6186 = !DILocalVariable(name: "connector", arg: 1, scope: !1159, file: !3, line: 1890, type: !1162)
!6187 = !DILocation(line: 1890, column: 55, scope: !1159)
!6188 = !DILocalVariable(name: "override", scope: !1159, file: !3, line: 1892, type: !369)
!6189 = !DILocation(line: 1892, column: 15, scope: !1159)
!6190 = !DILocalVariable(name: "num_modes", scope: !1159, file: !3, line: 1893, type: !139)
!6191 = !DILocation(line: 1893, column: 6, scope: !1159)
!6192 = !DILocation(line: 1895, column: 35, scope: !1159)
!6193 = !DILocation(line: 1895, column: 13, scope: !1159)
!6194 = !DILocation(line: 1895, column: 11, scope: !1159)
!6195 = !DILocation(line: 1896, column: 6, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !1159, file: !3, line: 1896, column: 6)
!6197 = !DILocation(line: 1896, column: 6, scope: !1159)
!6198 = !DILocation(line: 1897, column: 38, scope: !6199)
!6199 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 1896, column: 16)
!6200 = !DILocation(line: 1897, column: 49, scope: !6199)
!6201 = !DILocation(line: 1897, column: 3, scope: !6199)
!6202 = !DILocation(line: 1898, column: 34, scope: !6199)
!6203 = !DILocation(line: 1898, column: 45, scope: !6199)
!6204 = !DILocation(line: 1898, column: 15, scope: !6199)
!6205 = !DILocation(line: 1898, column: 13, scope: !6199)
!6206 = !DILocation(line: 1899, column: 9, scope: !6199)
!6207 = !DILocation(line: 1899, column: 3, scope: !6199)
!6208 = !DILocation(line: 1901, column: 3, scope: !6199)
!6209 = !DILocation(line: 1903, column: 2, scope: !6199)
!6210 = !DILocation(line: 1905, column: 9, scope: !1159)
!6211 = !DILocation(line: 1905, column: 2, scope: !1159)
!6212 = distinct !DISubprogram(name: "drm_get_override_edid", scope: !3, file: !3, line: 1866, type: !6213, scopeLine: 1867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6213 = !DISubroutineType(types: !6214)
!6214 = !{!369, !1162}
!6215 = !DILocalVariable(name: "connector", arg: 1, scope: !6212, file: !3, line: 1866, type: !1162)
!6216 = !DILocation(line: 1866, column: 65, scope: !6212)
!6217 = !DILocalVariable(name: "override", scope: !6212, file: !3, line: 1868, type: !369)
!6218 = !DILocation(line: 1868, column: 15, scope: !6212)
!6219 = !DILocation(line: 1870, column: 6, scope: !6220)
!6220 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1870, column: 6)
!6221 = !DILocation(line: 1870, column: 17, scope: !6220)
!6222 = !DILocation(line: 1870, column: 6, scope: !6212)
!6223 = !DILocation(line: 1871, column: 33, scope: !6220)
!6224 = !DILocation(line: 1871, column: 44, scope: !6220)
!6225 = !DILocation(line: 1871, column: 59, scope: !6220)
!6226 = !DILocation(line: 1871, column: 14, scope: !6220)
!6227 = !DILocation(line: 1871, column: 12, scope: !6220)
!6228 = !DILocation(line: 1871, column: 3, scope: !6220)
!6229 = !DILocation(line: 1873, column: 7, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 1873, column: 6)
!6231 = !DILocation(line: 1873, column: 6, scope: !6212)
!6232 = !DILocation(line: 1874, column: 37, scope: !6230)
!6233 = !DILocation(line: 1874, column: 14, scope: !6230)
!6234 = !DILocation(line: 1874, column: 12, scope: !6230)
!6235 = !DILocation(line: 1874, column: 3, scope: !6230)
!6236 = !DILocation(line: 1876, column: 16, scope: !6212)
!6237 = !DILocation(line: 1876, column: 9, scope: !6212)
!6238 = !DILocation(line: 1876, column: 35, scope: !6212)
!6239 = !DILocation(line: 1876, column: 2, scope: !6212)
!6240 = distinct !DISubprogram(name: "drm_add_edid_modes", scope: !3, file: !3, line: 5316, type: !6241, scopeLine: 5317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6241 = !DISubroutineType(types: !6242)
!6242 = !{!139, !1162, !369}
!6243 = !DILocalVariable(name: "connector", arg: 1, scope: !6240, file: !3, line: 5316, type: !1162)
!6244 = !DILocation(line: 5316, column: 46, scope: !6240)
!6245 = !DILocalVariable(name: "edid", arg: 2, scope: !6240, file: !3, line: 5316, type: !369)
!6246 = !DILocation(line: 5316, column: 70, scope: !6240)
!6247 = !DILocalVariable(name: "num_modes", scope: !6240, file: !3, line: 5318, type: !139)
!6248 = !DILocation(line: 5318, column: 6, scope: !6240)
!6249 = !DILocalVariable(name: "quirks", scope: !6240, file: !3, line: 5319, type: !388)
!6250 = !DILocation(line: 5319, column: 6, scope: !6240)
!6251 = !DILocation(line: 5321, column: 6, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5321, column: 6)
!6253 = !DILocation(line: 5321, column: 11, scope: !6252)
!6254 = !DILocation(line: 5321, column: 6, scope: !6240)
!6255 = !DILocation(line: 5322, column: 13, scope: !6256)
!6256 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 5321, column: 20)
!6257 = !DILocation(line: 5322, column: 3, scope: !6256)
!6258 = !DILocation(line: 5323, column: 3, scope: !6256)
!6259 = !DILocation(line: 5325, column: 25, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5325, column: 6)
!6261 = !DILocation(line: 5325, column: 7, scope: !6260)
!6262 = !DILocation(line: 5325, column: 6, scope: !6240)
!6263 = !DILocation(line: 5326, column: 13, scope: !6264)
!6264 = distinct !DILexicalBlock(scope: !6260, file: !3, line: 5325, column: 32)
!6265 = !DILocation(line: 5326, column: 3, scope: !6264)
!6266 = !DILocation(line: 5327, column: 3, scope: !6264)
!6267 = !DILocation(line: 5329, column: 3, scope: !6264)
!6268 = !DILocation(line: 5332, column: 18, scope: !6240)
!6269 = !DILocation(line: 5332, column: 29, scope: !6240)
!6270 = !DILocation(line: 5332, column: 2, scope: !6240)
!6271 = !DILocation(line: 5339, column: 32, scope: !6240)
!6272 = !DILocation(line: 5339, column: 43, scope: !6240)
!6273 = !DILocation(line: 5339, column: 11, scope: !6240)
!6274 = !DILocation(line: 5339, column: 9, scope: !6240)
!6275 = !DILocation(line: 5355, column: 34, scope: !6240)
!6276 = !DILocation(line: 5355, column: 45, scope: !6240)
!6277 = !DILocation(line: 5355, column: 51, scope: !6240)
!6278 = !DILocation(line: 5355, column: 15, scope: !6240)
!6279 = !DILocation(line: 5355, column: 12, scope: !6240)
!6280 = !DILocation(line: 5356, column: 29, scope: !6240)
!6281 = !DILocation(line: 5356, column: 40, scope: !6240)
!6282 = !DILocation(line: 5356, column: 15, scope: !6240)
!6283 = !DILocation(line: 5356, column: 12, scope: !6240)
!6284 = !DILocation(line: 5357, column: 34, scope: !6240)
!6285 = !DILocation(line: 5357, column: 45, scope: !6240)
!6286 = !DILocation(line: 5357, column: 15, scope: !6240)
!6287 = !DILocation(line: 5357, column: 12, scope: !6240)
!6288 = !DILocation(line: 5358, column: 37, scope: !6240)
!6289 = !DILocation(line: 5358, column: 48, scope: !6240)
!6290 = !DILocation(line: 5358, column: 15, scope: !6240)
!6291 = !DILocation(line: 5358, column: 12, scope: !6240)
!6292 = !DILocation(line: 5359, column: 29, scope: !6240)
!6293 = !DILocation(line: 5359, column: 40, scope: !6240)
!6294 = !DILocation(line: 5359, column: 15, scope: !6240)
!6295 = !DILocation(line: 5359, column: 12, scope: !6240)
!6296 = !DILocation(line: 5360, column: 39, scope: !6240)
!6297 = !DILocation(line: 5360, column: 50, scope: !6240)
!6298 = !DILocation(line: 5360, column: 15, scope: !6240)
!6299 = !DILocation(line: 5360, column: 12, scope: !6240)
!6300 = !DILocation(line: 5361, column: 44, scope: !6240)
!6301 = !DILocation(line: 5361, column: 55, scope: !6240)
!6302 = !DILocation(line: 5361, column: 15, scope: !6240)
!6303 = !DILocation(line: 5361, column: 12, scope: !6240)
!6304 = !DILocation(line: 5362, column: 6, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5362, column: 6)
!6306 = !DILocation(line: 5362, column: 12, scope: !6305)
!6307 = !DILocation(line: 5362, column: 21, scope: !6305)
!6308 = !DILocation(line: 5362, column: 6, scope: !6240)
!6309 = !DILocation(line: 5363, column: 35, scope: !6305)
!6310 = !DILocation(line: 5363, column: 46, scope: !6305)
!6311 = !DILocation(line: 5363, column: 16, scope: !6305)
!6312 = !DILocation(line: 5363, column: 13, scope: !6305)
!6313 = !DILocation(line: 5363, column: 3, scope: !6305)
!6314 = !DILocation(line: 5365, column: 6, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5365, column: 6)
!6316 = !DILocation(line: 5365, column: 13, scope: !6315)
!6317 = !DILocation(line: 5365, column: 6, scope: !6240)
!6318 = !DILocation(line: 5366, column: 24, scope: !6315)
!6319 = !DILocation(line: 5366, column: 35, scope: !6315)
!6320 = !DILocation(line: 5366, column: 3, scope: !6315)
!6321 = !DILocation(line: 5368, column: 6, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5368, column: 6)
!6323 = !DILocation(line: 5368, column: 13, scope: !6322)
!6324 = !DILocation(line: 5368, column: 6, scope: !6240)
!6325 = !DILocation(line: 5369, column: 3, scope: !6322)
!6326 = !DILocation(line: 5369, column: 14, scope: !6322)
!6327 = !DILocation(line: 5369, column: 27, scope: !6322)
!6328 = !DILocation(line: 5369, column: 31, scope: !6322)
!6329 = !DILocation(line: 5371, column: 6, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5371, column: 6)
!6331 = !DILocation(line: 5371, column: 13, scope: !6330)
!6332 = !DILocation(line: 5371, column: 6, scope: !6240)
!6333 = !DILocation(line: 5372, column: 3, scope: !6330)
!6334 = !DILocation(line: 5372, column: 14, scope: !6330)
!6335 = !DILocation(line: 5372, column: 27, scope: !6330)
!6336 = !DILocation(line: 5372, column: 31, scope: !6330)
!6337 = !DILocation(line: 5374, column: 6, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5374, column: 6)
!6339 = !DILocation(line: 5374, column: 13, scope: !6338)
!6340 = !DILocation(line: 5374, column: 6, scope: !6240)
!6341 = !DILocation(line: 5375, column: 3, scope: !6338)
!6342 = !DILocation(line: 5375, column: 14, scope: !6338)
!6343 = !DILocation(line: 5375, column: 27, scope: !6338)
!6344 = !DILocation(line: 5375, column: 31, scope: !6338)
!6345 = !DILocation(line: 5377, column: 6, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !6240, file: !3, line: 5377, column: 6)
!6347 = !DILocation(line: 5377, column: 13, scope: !6346)
!6348 = !DILocation(line: 5377, column: 6, scope: !6240)
!6349 = !DILocation(line: 5378, column: 3, scope: !6346)
!6350 = !DILocation(line: 5378, column: 14, scope: !6346)
!6351 = !DILocation(line: 5378, column: 27, scope: !6346)
!6352 = !DILocation(line: 5378, column: 31, scope: !6346)
!6353 = !DILocation(line: 5380, column: 9, scope: !6240)
!6354 = !DILocation(line: 5380, column: 2, scope: !6240)
!6355 = !DILocation(line: 5381, column: 1, scope: !6240)
!6356 = distinct !DISubprogram(name: "drm_do_get_edid", scope: !3, file: !3, line: 1929, type: !6357, scopeLine: 1933, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6357 = !DISubroutineType(types: !6358)
!6358 = !{!369, !1162, !6359, !368}
!6359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6360, size: 64)
!6360 = !DISubroutineType(types: !6361)
!6361 = !{!139, !368, !522, !7, !1285}
!6362 = !DILocalVariable(name: "s", arg: 1, scope: !6363, file: !361, line: 445, type: !1920)
!6363 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !361, file: !361, line: 445, type: !6364, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!368, !1920, !523, !1285}
!6366 = !DILocation(line: 445, column: 72, scope: !6363, inlinedAt: !6367)
!6367 = distinct !DILocation(line: 552, column: 10, scope: !6368, inlinedAt: !6373)
!6368 = distinct !DILexicalBlock(scope: !6369, file: !361, line: 540, column: 34)
!6369 = distinct !DILexicalBlock(scope: !6370, file: !361, line: 540, column: 6)
!6370 = distinct !DISubprogram(name: "kmalloc", scope: !361, file: !361, line: 538, type: !6371, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6371 = !DISubroutineType(types: !6372)
!6372 = !{!368, !1285, !523}
!6373 = distinct !DILocation(line: 1942, column: 14, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1942, column: 6)
!6375 = !DILocalVariable(name: "flags", arg: 2, scope: !6363, file: !361, line: 446, type: !523)
!6376 = !DILocation(line: 446, column: 9, scope: !6363, inlinedAt: !6367)
!6377 = !DILocalVariable(name: "size", arg: 3, scope: !6363, file: !361, line: 446, type: !1285)
!6378 = !DILocation(line: 446, column: 23, scope: !6363, inlinedAt: !6367)
!6379 = !DILocalVariable(name: "ret", scope: !6363, file: !361, line: 448, type: !368)
!6380 = !DILocation(line: 448, column: 8, scope: !6363, inlinedAt: !6367)
!6381 = !DILocalVariable(name: "flags", arg: 1, scope: !6382, file: !361, line: 318, type: !523)
!6382 = distinct !DISubprogram(name: "kmalloc_type", scope: !361, file: !361, line: 318, type: !6383, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6383 = !DISubroutineType(types: !6384)
!6384 = !{!360, !523}
!6385 = !DILocation(line: 318, column: 67, scope: !6382, inlinedAt: !6386)
!6386 = distinct !DILocation(line: 553, column: 20, scope: !6368, inlinedAt: !6373)
!6387 = !DILocalVariable(name: "size", arg: 1, scope: !6388, file: !361, line: 346, type: !1285)
!6388 = distinct !DISubprogram(name: "kmalloc_index", scope: !361, file: !361, line: 346, type: !6389, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{!7, !1285}
!6391 = !DILocation(line: 346, column: 58, scope: !6388, inlinedAt: !6392)
!6392 = distinct !DILocation(line: 547, column: 11, scope: !6368, inlinedAt: !6373)
!6393 = !DILocalVariable(name: "size", arg: 1, scope: !6394, file: !361, line: 472, type: !1285)
!6394 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !361, file: !361, line: 472, type: !6395, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6395 = !DISubroutineType(types: !6396)
!6396 = !{!368, !1285, !523, !7}
!6397 = !DILocation(line: 472, column: 28, scope: !6394, inlinedAt: !6398)
!6398 = distinct !DILocation(line: 481, column: 9, scope: !6399, inlinedAt: !6400)
!6399 = distinct !DISubprogram(name: "kmalloc_large", scope: !361, file: !361, line: 478, type: !6371, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6400 = distinct !DILocation(line: 545, column: 11, scope: !6401, inlinedAt: !6373)
!6401 = distinct !DILexicalBlock(scope: !6368, file: !361, line: 544, column: 7)
!6402 = !DILocalVariable(name: "flags", arg: 2, scope: !6394, file: !361, line: 472, type: !523)
!6403 = !DILocation(line: 472, column: 40, scope: !6394, inlinedAt: !6398)
!6404 = !DILocalVariable(name: "order", arg: 3, scope: !6394, file: !361, line: 472, type: !7)
!6405 = !DILocation(line: 472, column: 60, scope: !6394, inlinedAt: !6398)
!6406 = !DILocalVariable(name: "size", arg: 1, scope: !6399, file: !361, line: 478, type: !1285)
!6407 = !DILocation(line: 478, column: 51, scope: !6399, inlinedAt: !6400)
!6408 = !DILocalVariable(name: "flags", arg: 2, scope: !6399, file: !361, line: 478, type: !523)
!6409 = !DILocation(line: 478, column: 63, scope: !6399, inlinedAt: !6400)
!6410 = !DILocalVariable(name: "order", scope: !6399, file: !361, line: 480, type: !7)
!6411 = !DILocation(line: 480, column: 15, scope: !6399, inlinedAt: !6400)
!6412 = !DILocalVariable(name: "size", arg: 1, scope: !6370, file: !361, line: 538, type: !1285)
!6413 = !DILocation(line: 538, column: 45, scope: !6370, inlinedAt: !6373)
!6414 = !DILocalVariable(name: "flags", arg: 2, scope: !6370, file: !361, line: 538, type: !523)
!6415 = !DILocation(line: 538, column: 57, scope: !6370, inlinedAt: !6373)
!6416 = !DILocalVariable(name: "index", scope: !6368, file: !361, line: 542, type: !7)
!6417 = !DILocation(line: 542, column: 16, scope: !6368, inlinedAt: !6373)
!6418 = !DILocalVariable(name: "connector", arg: 1, scope: !6356, file: !3, line: 1929, type: !1162)
!6419 = !DILocation(line: 1929, column: 52, scope: !6356)
!6420 = !DILocalVariable(name: "get_edid_block", arg: 2, scope: !6356, file: !3, line: 1930, type: !6359)
!6421 = !DILocation(line: 1930, column: 8, scope: !6356)
!6422 = !DILocalVariable(name: "data", arg: 3, scope: !6356, file: !3, line: 1932, type: !368)
!6423 = !DILocation(line: 1932, column: 8, scope: !6356)
!6424 = !DILocalVariable(name: "i", scope: !6356, file: !3, line: 1934, type: !139)
!6425 = !DILocation(line: 1934, column: 6, scope: !6356)
!6426 = !DILocalVariable(name: "j", scope: !6356, file: !3, line: 1934, type: !139)
!6427 = !DILocation(line: 1934, column: 9, scope: !6356)
!6428 = !DILocalVariable(name: "valid_extensions", scope: !6356, file: !3, line: 1934, type: !139)
!6429 = !DILocation(line: 1934, column: 16, scope: !6356)
!6430 = !DILocalVariable(name: "edid", scope: !6356, file: !3, line: 1935, type: !522)
!6431 = !DILocation(line: 1935, column: 6, scope: !6356)
!6432 = !DILocalVariable(name: "new", scope: !6356, file: !3, line: 1935, type: !522)
!6433 = !DILocation(line: 1935, column: 13, scope: !6356)
!6434 = !DILocalVariable(name: "override", scope: !6356, file: !3, line: 1936, type: !369)
!6435 = !DILocation(line: 1936, column: 15, scope: !6356)
!6436 = !DILocation(line: 1938, column: 35, scope: !6356)
!6437 = !DILocation(line: 1938, column: 13, scope: !6356)
!6438 = !DILocation(line: 1938, column: 11, scope: !6356)
!6439 = !DILocation(line: 1939, column: 6, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1939, column: 6)
!6441 = !DILocation(line: 1939, column: 6, scope: !6356)
!6442 = !DILocation(line: 1940, column: 10, scope: !6440)
!6443 = !DILocation(line: 1940, column: 3, scope: !6440)
!6444 = !DILocation(line: 540, column: 27, scope: !6369, inlinedAt: !6373)
!6445 = !DILocation(line: 540, column: 6, scope: !6369, inlinedAt: !6373)
!6446 = !DILocation(line: 540, column: 6, scope: !6370, inlinedAt: !6373)
!6447 = !DILocation(line: 544, column: 7, scope: !6401, inlinedAt: !6373)
!6448 = !DILocation(line: 544, column: 12, scope: !6401, inlinedAt: !6373)
!6449 = !DILocation(line: 544, column: 7, scope: !6368, inlinedAt: !6373)
!6450 = !DILocation(line: 545, column: 25, scope: !6401, inlinedAt: !6373)
!6451 = !DILocation(line: 545, column: 31, scope: !6401, inlinedAt: !6373)
!6452 = !DILocation(line: 480, column: 33, scope: !6399, inlinedAt: !6400)
!6453 = !DILocation(line: 480, column: 23, scope: !6399, inlinedAt: !6400)
!6454 = !DILocation(line: 481, column: 29, scope: !6399, inlinedAt: !6400)
!6455 = !DILocation(line: 481, column: 35, scope: !6399, inlinedAt: !6400)
!6456 = !DILocation(line: 481, column: 42, scope: !6399, inlinedAt: !6400)
!6457 = !DILocation(line: 474, column: 23, scope: !6394, inlinedAt: !6398)
!6458 = !DILocation(line: 474, column: 29, scope: !6394, inlinedAt: !6398)
!6459 = !DILocation(line: 474, column: 36, scope: !6394, inlinedAt: !6398)
!6460 = !DILocation(line: 474, column: 9, scope: !6394, inlinedAt: !6398)
!6461 = !DILocation(line: 545, column: 4, scope: !6401, inlinedAt: !6373)
!6462 = !DILocation(line: 547, column: 25, scope: !6368, inlinedAt: !6373)
!6463 = !DILocation(line: 348, column: 7, scope: !6464, inlinedAt: !6392)
!6464 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 348, column: 6)
!6465 = !DILocation(line: 348, column: 6, scope: !6388, inlinedAt: !6392)
!6466 = !DILocation(line: 349, column: 3, scope: !6464, inlinedAt: !6392)
!6467 = !DILocation(line: 351, column: 6, scope: !6468, inlinedAt: !6392)
!6468 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 351, column: 6)
!6469 = !DILocation(line: 351, column: 11, scope: !6468, inlinedAt: !6392)
!6470 = !DILocation(line: 351, column: 6, scope: !6388, inlinedAt: !6392)
!6471 = !DILocation(line: 352, column: 3, scope: !6468, inlinedAt: !6392)
!6472 = !DILocation(line: 354, column: 32, scope: !6473, inlinedAt: !6392)
!6473 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 354, column: 6)
!6474 = !DILocation(line: 354, column: 37, scope: !6473, inlinedAt: !6392)
!6475 = !DILocation(line: 354, column: 42, scope: !6473, inlinedAt: !6392)
!6476 = !DILocation(line: 354, column: 45, scope: !6473, inlinedAt: !6392)
!6477 = !DILocation(line: 354, column: 50, scope: !6473, inlinedAt: !6392)
!6478 = !DILocation(line: 354, column: 6, scope: !6388, inlinedAt: !6392)
!6479 = !DILocation(line: 355, column: 3, scope: !6473, inlinedAt: !6392)
!6480 = !DILocation(line: 356, column: 32, scope: !6481, inlinedAt: !6392)
!6481 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 356, column: 6)
!6482 = !DILocation(line: 356, column: 37, scope: !6481, inlinedAt: !6392)
!6483 = !DILocation(line: 356, column: 43, scope: !6481, inlinedAt: !6392)
!6484 = !DILocation(line: 356, column: 46, scope: !6481, inlinedAt: !6392)
!6485 = !DILocation(line: 356, column: 51, scope: !6481, inlinedAt: !6392)
!6486 = !DILocation(line: 356, column: 6, scope: !6388, inlinedAt: !6392)
!6487 = !DILocation(line: 357, column: 3, scope: !6481, inlinedAt: !6392)
!6488 = !DILocation(line: 358, column: 6, scope: !6489, inlinedAt: !6392)
!6489 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 358, column: 6)
!6490 = !DILocation(line: 358, column: 11, scope: !6489, inlinedAt: !6392)
!6491 = !DILocation(line: 358, column: 6, scope: !6388, inlinedAt: !6392)
!6492 = !DILocation(line: 358, column: 26, scope: !6489, inlinedAt: !6392)
!6493 = !DILocation(line: 359, column: 6, scope: !6494, inlinedAt: !6392)
!6494 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 359, column: 6)
!6495 = !DILocation(line: 359, column: 11, scope: !6494, inlinedAt: !6392)
!6496 = !DILocation(line: 359, column: 6, scope: !6388, inlinedAt: !6392)
!6497 = !DILocation(line: 359, column: 26, scope: !6494, inlinedAt: !6392)
!6498 = !DILocation(line: 360, column: 6, scope: !6499, inlinedAt: !6392)
!6499 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 360, column: 6)
!6500 = !DILocation(line: 360, column: 11, scope: !6499, inlinedAt: !6392)
!6501 = !DILocation(line: 360, column: 6, scope: !6388, inlinedAt: !6392)
!6502 = !DILocation(line: 360, column: 26, scope: !6499, inlinedAt: !6392)
!6503 = !DILocation(line: 361, column: 6, scope: !6504, inlinedAt: !6392)
!6504 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 361, column: 6)
!6505 = !DILocation(line: 361, column: 11, scope: !6504, inlinedAt: !6392)
!6506 = !DILocation(line: 361, column: 6, scope: !6388, inlinedAt: !6392)
!6507 = !DILocation(line: 361, column: 26, scope: !6504, inlinedAt: !6392)
!6508 = !DILocation(line: 362, column: 6, scope: !6509, inlinedAt: !6392)
!6509 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 362, column: 6)
!6510 = !DILocation(line: 362, column: 11, scope: !6509, inlinedAt: !6392)
!6511 = !DILocation(line: 362, column: 6, scope: !6388, inlinedAt: !6392)
!6512 = !DILocation(line: 362, column: 26, scope: !6509, inlinedAt: !6392)
!6513 = !DILocation(line: 363, column: 6, scope: !6514, inlinedAt: !6392)
!6514 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 363, column: 6)
!6515 = !DILocation(line: 363, column: 11, scope: !6514, inlinedAt: !6392)
!6516 = !DILocation(line: 363, column: 6, scope: !6388, inlinedAt: !6392)
!6517 = !DILocation(line: 363, column: 26, scope: !6514, inlinedAt: !6392)
!6518 = !DILocation(line: 364, column: 6, scope: !6519, inlinedAt: !6392)
!6519 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 364, column: 6)
!6520 = !DILocation(line: 364, column: 11, scope: !6519, inlinedAt: !6392)
!6521 = !DILocation(line: 364, column: 6, scope: !6388, inlinedAt: !6392)
!6522 = !DILocation(line: 364, column: 26, scope: !6519, inlinedAt: !6392)
!6523 = !DILocation(line: 365, column: 6, scope: !6524, inlinedAt: !6392)
!6524 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 365, column: 6)
!6525 = !DILocation(line: 365, column: 11, scope: !6524, inlinedAt: !6392)
!6526 = !DILocation(line: 365, column: 6, scope: !6388, inlinedAt: !6392)
!6527 = !DILocation(line: 365, column: 26, scope: !6524, inlinedAt: !6392)
!6528 = !DILocation(line: 366, column: 6, scope: !6529, inlinedAt: !6392)
!6529 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 366, column: 6)
!6530 = !DILocation(line: 366, column: 11, scope: !6529, inlinedAt: !6392)
!6531 = !DILocation(line: 366, column: 6, scope: !6388, inlinedAt: !6392)
!6532 = !DILocation(line: 366, column: 26, scope: !6529, inlinedAt: !6392)
!6533 = !DILocation(line: 367, column: 6, scope: !6534, inlinedAt: !6392)
!6534 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 367, column: 6)
!6535 = !DILocation(line: 367, column: 11, scope: !6534, inlinedAt: !6392)
!6536 = !DILocation(line: 367, column: 6, scope: !6388, inlinedAt: !6392)
!6537 = !DILocation(line: 367, column: 26, scope: !6534, inlinedAt: !6392)
!6538 = !DILocation(line: 368, column: 6, scope: !6539, inlinedAt: !6392)
!6539 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 368, column: 6)
!6540 = !DILocation(line: 368, column: 11, scope: !6539, inlinedAt: !6392)
!6541 = !DILocation(line: 368, column: 6, scope: !6388, inlinedAt: !6392)
!6542 = !DILocation(line: 368, column: 26, scope: !6539, inlinedAt: !6392)
!6543 = !DILocation(line: 369, column: 6, scope: !6544, inlinedAt: !6392)
!6544 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 369, column: 6)
!6545 = !DILocation(line: 369, column: 11, scope: !6544, inlinedAt: !6392)
!6546 = !DILocation(line: 369, column: 6, scope: !6388, inlinedAt: !6392)
!6547 = !DILocation(line: 369, column: 26, scope: !6544, inlinedAt: !6392)
!6548 = !DILocation(line: 370, column: 6, scope: !6549, inlinedAt: !6392)
!6549 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 370, column: 6)
!6550 = !DILocation(line: 370, column: 11, scope: !6549, inlinedAt: !6392)
!6551 = !DILocation(line: 370, column: 6, scope: !6388, inlinedAt: !6392)
!6552 = !DILocation(line: 370, column: 26, scope: !6549, inlinedAt: !6392)
!6553 = !DILocation(line: 371, column: 6, scope: !6554, inlinedAt: !6392)
!6554 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 371, column: 6)
!6555 = !DILocation(line: 371, column: 11, scope: !6554, inlinedAt: !6392)
!6556 = !DILocation(line: 371, column: 6, scope: !6388, inlinedAt: !6392)
!6557 = !DILocation(line: 371, column: 26, scope: !6554, inlinedAt: !6392)
!6558 = !DILocation(line: 372, column: 6, scope: !6559, inlinedAt: !6392)
!6559 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 372, column: 6)
!6560 = !DILocation(line: 372, column: 11, scope: !6559, inlinedAt: !6392)
!6561 = !DILocation(line: 372, column: 6, scope: !6388, inlinedAt: !6392)
!6562 = !DILocation(line: 372, column: 26, scope: !6559, inlinedAt: !6392)
!6563 = !DILocation(line: 373, column: 6, scope: !6564, inlinedAt: !6392)
!6564 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 373, column: 6)
!6565 = !DILocation(line: 373, column: 11, scope: !6564, inlinedAt: !6392)
!6566 = !DILocation(line: 373, column: 6, scope: !6388, inlinedAt: !6392)
!6567 = !DILocation(line: 373, column: 26, scope: !6564, inlinedAt: !6392)
!6568 = !DILocation(line: 374, column: 6, scope: !6569, inlinedAt: !6392)
!6569 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 374, column: 6)
!6570 = !DILocation(line: 374, column: 11, scope: !6569, inlinedAt: !6392)
!6571 = !DILocation(line: 374, column: 6, scope: !6388, inlinedAt: !6392)
!6572 = !DILocation(line: 374, column: 26, scope: !6569, inlinedAt: !6392)
!6573 = !DILocation(line: 375, column: 6, scope: !6574, inlinedAt: !6392)
!6574 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 375, column: 6)
!6575 = !DILocation(line: 375, column: 11, scope: !6574, inlinedAt: !6392)
!6576 = !DILocation(line: 375, column: 6, scope: !6388, inlinedAt: !6392)
!6577 = !DILocation(line: 375, column: 27, scope: !6574, inlinedAt: !6392)
!6578 = !DILocation(line: 376, column: 6, scope: !6579, inlinedAt: !6392)
!6579 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 376, column: 6)
!6580 = !DILocation(line: 376, column: 11, scope: !6579, inlinedAt: !6392)
!6581 = !DILocation(line: 376, column: 6, scope: !6388, inlinedAt: !6392)
!6582 = !DILocation(line: 376, column: 32, scope: !6579, inlinedAt: !6392)
!6583 = !DILocation(line: 377, column: 6, scope: !6584, inlinedAt: !6392)
!6584 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 377, column: 6)
!6585 = !DILocation(line: 377, column: 11, scope: !6584, inlinedAt: !6392)
!6586 = !DILocation(line: 377, column: 6, scope: !6388, inlinedAt: !6392)
!6587 = !DILocation(line: 377, column: 32, scope: !6584, inlinedAt: !6392)
!6588 = !DILocation(line: 378, column: 6, scope: !6589, inlinedAt: !6392)
!6589 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 378, column: 6)
!6590 = !DILocation(line: 378, column: 11, scope: !6589, inlinedAt: !6392)
!6591 = !DILocation(line: 378, column: 6, scope: !6388, inlinedAt: !6392)
!6592 = !DILocation(line: 378, column: 32, scope: !6589, inlinedAt: !6392)
!6593 = !DILocation(line: 379, column: 6, scope: !6594, inlinedAt: !6392)
!6594 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 379, column: 6)
!6595 = !DILocation(line: 379, column: 11, scope: !6594, inlinedAt: !6392)
!6596 = !DILocation(line: 379, column: 6, scope: !6388, inlinedAt: !6392)
!6597 = !DILocation(line: 379, column: 33, scope: !6594, inlinedAt: !6392)
!6598 = !DILocation(line: 380, column: 6, scope: !6599, inlinedAt: !6392)
!6599 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 380, column: 6)
!6600 = !DILocation(line: 380, column: 11, scope: !6599, inlinedAt: !6392)
!6601 = !DILocation(line: 380, column: 6, scope: !6388, inlinedAt: !6392)
!6602 = !DILocation(line: 380, column: 33, scope: !6599, inlinedAt: !6392)
!6603 = !DILocation(line: 381, column: 6, scope: !6604, inlinedAt: !6392)
!6604 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 381, column: 6)
!6605 = !DILocation(line: 381, column: 11, scope: !6604, inlinedAt: !6392)
!6606 = !DILocation(line: 381, column: 6, scope: !6388, inlinedAt: !6392)
!6607 = !DILocation(line: 381, column: 33, scope: !6604, inlinedAt: !6392)
!6608 = !DILocation(line: 382, column: 2, scope: !6609, inlinedAt: !6392)
!6609 = distinct !DILexicalBlock(scope: !6610, file: !361, line: 382, column: 2)
!6610 = distinct !DILexicalBlock(scope: !6388, file: !361, line: 382, column: 2)
!6611 = !{i32 -2143323979, i32 -2143323950, i32 -2143323904, i32 -2143323846, i32 -2143323792, i32 -2143323738, i32 -2143323683, i32 -2143323652}
!6612 = !DILocation(line: 382, column: 2, scope: !6613, inlinedAt: !6392)
!6613 = distinct !DILexicalBlock(scope: !6614, file: !361, line: 382, column: 2)
!6614 = distinct !DILexicalBlock(scope: !6610, file: !361, line: 382, column: 2)
!6615 = !{i32 -2143323209, i32 -2143323202, i32 -2143323148, i32 -2143323117, i32 -2143323087}
!6616 = !DILocation(line: 382, column: 2, scope: !6614, inlinedAt: !6392)
!6617 = !DILocation(line: 386, column: 1, scope: !6388, inlinedAt: !6392)
!6618 = !DILocation(line: 547, column: 9, scope: !6368, inlinedAt: !6373)
!6619 = !DILocation(line: 549, column: 8, scope: !6620, inlinedAt: !6373)
!6620 = distinct !DILexicalBlock(scope: !6368, file: !361, line: 549, column: 7)
!6621 = !DILocation(line: 549, column: 7, scope: !6368, inlinedAt: !6373)
!6622 = !DILocation(line: 550, column: 4, scope: !6620, inlinedAt: !6373)
!6623 = !DILocation(line: 553, column: 33, scope: !6368, inlinedAt: !6373)
!6624 = !DILocation(line: 325, column: 6, scope: !6625, inlinedAt: !6386)
!6625 = distinct !DILexicalBlock(scope: !6382, file: !361, line: 325, column: 6)
!6626 = !DILocation(line: 325, column: 6, scope: !6382, inlinedAt: !6386)
!6627 = !DILocation(line: 326, column: 3, scope: !6625, inlinedAt: !6386)
!6628 = !DILocation(line: 332, column: 9, scope: !6382, inlinedAt: !6386)
!6629 = !DILocation(line: 332, column: 15, scope: !6382, inlinedAt: !6386)
!6630 = !DILocation(line: 332, column: 2, scope: !6382, inlinedAt: !6386)
!6631 = !DILocation(line: 336, column: 1, scope: !6382, inlinedAt: !6386)
!6632 = !DILocation(line: 553, column: 5, scope: !6368, inlinedAt: !6373)
!6633 = !DILocation(line: 553, column: 41, scope: !6368, inlinedAt: !6373)
!6634 = !DILocation(line: 554, column: 5, scope: !6368, inlinedAt: !6373)
!6635 = !DILocation(line: 554, column: 12, scope: !6368, inlinedAt: !6373)
!6636 = !DILocation(line: 448, column: 31, scope: !6363, inlinedAt: !6367)
!6637 = !DILocation(line: 448, column: 34, scope: !6363, inlinedAt: !6367)
!6638 = !DILocation(line: 448, column: 14, scope: !6363, inlinedAt: !6367)
!6639 = !DILocation(line: 450, column: 22, scope: !6363, inlinedAt: !6367)
!6640 = !DILocation(line: 450, column: 25, scope: !6363, inlinedAt: !6367)
!6641 = !DILocation(line: 450, column: 30, scope: !6363, inlinedAt: !6367)
!6642 = !DILocation(line: 450, column: 36, scope: !6363, inlinedAt: !6367)
!6643 = !DILocation(line: 450, column: 8, scope: !6363, inlinedAt: !6367)
!6644 = !DILocation(line: 450, column: 6, scope: !6363, inlinedAt: !6367)
!6645 = !DILocation(line: 451, column: 9, scope: !6363, inlinedAt: !6367)
!6646 = !DILocation(line: 552, column: 3, scope: !6368, inlinedAt: !6373)
!6647 = !DILocation(line: 557, column: 19, scope: !6370, inlinedAt: !6373)
!6648 = !DILocation(line: 557, column: 25, scope: !6370, inlinedAt: !6373)
!6649 = !DILocation(line: 557, column: 9, scope: !6370, inlinedAt: !6373)
!6650 = !DILocation(line: 557, column: 2, scope: !6370, inlinedAt: !6373)
!6651 = !DILocation(line: 558, column: 1, scope: !6370, inlinedAt: !6373)
!6652 = !DILocation(line: 1942, column: 12, scope: !6374)
!6653 = !DILocation(line: 1942, column: 48, scope: !6374)
!6654 = !DILocation(line: 1942, column: 6, scope: !6356)
!6655 = !DILocation(line: 1943, column: 3, scope: !6374)
!6656 = !DILocation(line: 1946, column: 9, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1946, column: 2)
!6658 = !DILocation(line: 1946, column: 7, scope: !6657)
!6659 = !DILocation(line: 1946, column: 14, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6657, file: !3, line: 1946, column: 2)
!6661 = !DILocation(line: 1946, column: 16, scope: !6660)
!6662 = !DILocation(line: 1946, column: 2, scope: !6657)
!6663 = !DILocation(line: 1947, column: 7, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1947, column: 7)
!6665 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 1946, column: 26)
!6666 = !DILocation(line: 1947, column: 22, scope: !6664)
!6667 = !DILocation(line: 1947, column: 28, scope: !6664)
!6668 = !DILocation(line: 1947, column: 7, scope: !6665)
!6669 = !DILocation(line: 1948, column: 4, scope: !6664)
!6670 = !DILocation(line: 1949, column: 28, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1949, column: 7)
!6672 = !DILocation(line: 1950, column: 8, scope: !6671)
!6673 = !DILocation(line: 1950, column: 19, scope: !6671)
!6674 = !DILocation(line: 1949, column: 7, scope: !6671)
!6675 = !DILocation(line: 1949, column: 7, scope: !6665)
!6676 = !DILocation(line: 1951, column: 4, scope: !6671)
!6677 = !DILocation(line: 1952, column: 7, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1952, column: 7)
!6679 = !DILocation(line: 1952, column: 9, scope: !6678)
!6680 = !DILocation(line: 1952, column: 14, scope: !6678)
!6681 = !DILocation(line: 1952, column: 34, scope: !6678)
!6682 = !DILocation(line: 1952, column: 17, scope: !6678)
!6683 = !DILocation(line: 1952, column: 7, scope: !6665)
!6684 = !DILocation(line: 1953, column: 4, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 1952, column: 54)
!6686 = !DILocation(line: 1953, column: 15, scope: !6685)
!6687 = !DILocation(line: 1953, column: 32, scope: !6685)
!6688 = !DILocation(line: 1954, column: 4, scope: !6685)
!6689 = !DILocation(line: 1956, column: 2, scope: !6665)
!6690 = !DILocation(line: 1946, column: 22, scope: !6660)
!6691 = !DILocation(line: 1946, column: 2, scope: !6660)
!6692 = distinct !{!6692, !6662, !6693}
!6693 = !DILocation(line: 1956, column: 2, scope: !6657)
!6694 = !DILocation(line: 1957, column: 6, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1957, column: 6)
!6696 = !DILocation(line: 1957, column: 8, scope: !6695)
!6697 = !DILocation(line: 1957, column: 6, scope: !6356)
!6698 = !DILocation(line: 1958, column: 3, scope: !6695)
!6699 = !DILocation(line: 1961, column: 21, scope: !6356)
!6700 = !DILocation(line: 1961, column: 19, scope: !6356)
!6701 = !DILocation(line: 1962, column: 6, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1962, column: 6)
!6703 = !DILocation(line: 1962, column: 23, scope: !6702)
!6704 = !DILocation(line: 1962, column: 6, scope: !6356)
!6705 = !DILocation(line: 1963, column: 25, scope: !6702)
!6706 = !DILocation(line: 1963, column: 10, scope: !6702)
!6707 = !DILocation(line: 1963, column: 3, scope: !6702)
!6708 = !DILocation(line: 1965, column: 17, scope: !6356)
!6709 = !DILocation(line: 1965, column: 24, scope: !6356)
!6710 = !DILocation(line: 1965, column: 41, scope: !6356)
!6711 = !DILocation(line: 1965, column: 46, scope: !6356)
!6712 = !DILocation(line: 1965, column: 23, scope: !6356)
!6713 = !DILocation(line: 1965, column: 8, scope: !6356)
!6714 = !DILocation(line: 1965, column: 6, scope: !6356)
!6715 = !DILocation(line: 1966, column: 7, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1966, column: 6)
!6717 = !DILocation(line: 1966, column: 6, scope: !6356)
!6718 = !DILocation(line: 1967, column: 3, scope: !6716)
!6719 = !DILocation(line: 1968, column: 9, scope: !6356)
!6720 = !DILocation(line: 1968, column: 7, scope: !6356)
!6721 = !DILocation(line: 1970, column: 9, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1970, column: 2)
!6723 = !DILocation(line: 1970, column: 7, scope: !6722)
!6724 = !DILocation(line: 1970, column: 14, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 1970, column: 2)
!6726 = !DILocation(line: 1970, column: 19, scope: !6725)
!6727 = !DILocation(line: 1970, column: 16, scope: !6725)
!6728 = !DILocation(line: 1970, column: 2, scope: !6722)
!6729 = !DILocalVariable(name: "block", scope: !6730, file: !3, line: 1971, type: !522)
!6730 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 1970, column: 36)
!6731 = !DILocation(line: 1971, column: 7, scope: !6730)
!6732 = !DILocation(line: 1971, column: 15, scope: !6730)
!6733 = !DILocation(line: 1971, column: 22, scope: !6730)
!6734 = !DILocation(line: 1971, column: 24, scope: !6730)
!6735 = !DILocation(line: 1971, column: 20, scope: !6730)
!6736 = !DILocation(line: 1973, column: 10, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1973, column: 3)
!6738 = !DILocation(line: 1973, column: 8, scope: !6737)
!6739 = !DILocation(line: 1973, column: 15, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6737, file: !3, line: 1973, column: 3)
!6741 = !DILocation(line: 1973, column: 17, scope: !6740)
!6742 = !DILocation(line: 1973, column: 3, scope: !6737)
!6743 = !DILocation(line: 1974, column: 8, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 1974, column: 8)
!6745 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 1973, column: 27)
!6746 = !DILocation(line: 1974, column: 23, scope: !6744)
!6747 = !DILocation(line: 1974, column: 29, scope: !6744)
!6748 = !DILocation(line: 1974, column: 36, scope: !6744)
!6749 = !DILocation(line: 1974, column: 8, scope: !6745)
!6750 = !DILocation(line: 1975, column: 5, scope: !6744)
!6751 = !DILocation(line: 1976, column: 29, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6745, file: !3, line: 1976, column: 8)
!6753 = !DILocation(line: 1976, column: 36, scope: !6752)
!6754 = !DILocation(line: 1976, column: 8, scope: !6752)
!6755 = !DILocation(line: 1976, column: 8, scope: !6745)
!6756 = !DILocation(line: 1977, column: 5, scope: !6752)
!6757 = !DILocation(line: 1978, column: 3, scope: !6745)
!6758 = !DILocation(line: 1973, column: 23, scope: !6740)
!6759 = !DILocation(line: 1973, column: 3, scope: !6740)
!6760 = distinct !{!6760, !6742, !6761}
!6761 = !DILocation(line: 1978, column: 3, scope: !6737)
!6762 = !DILocation(line: 1980, column: 7, scope: !6763)
!6763 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 1980, column: 7)
!6764 = !DILocation(line: 1980, column: 9, scope: !6763)
!6765 = !DILocation(line: 1980, column: 7, scope: !6730)
!6766 = !DILocation(line: 1981, column: 20, scope: !6763)
!6767 = !DILocation(line: 1981, column: 4, scope: !6763)
!6768 = !DILocation(line: 1982, column: 2, scope: !6730)
!6769 = !DILocation(line: 1970, column: 32, scope: !6725)
!6770 = !DILocation(line: 1970, column: 2, scope: !6725)
!6771 = distinct !{!6771, !6728, !6772}
!6772 = !DILocation(line: 1982, column: 2, scope: !6722)
!6773 = !DILocation(line: 1984, column: 6, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6356, file: !3, line: 1984, column: 6)
!6775 = !DILocation(line: 1984, column: 26, scope: !6774)
!6776 = !DILocation(line: 1984, column: 23, scope: !6774)
!6777 = !DILocation(line: 1984, column: 6, scope: !6356)
!6778 = !DILocalVariable(name: "base", scope: !6779, file: !3, line: 1985, type: !522)
!6779 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1984, column: 38)
!6780 = !DILocation(line: 1985, column: 7, scope: !6779)
!6781 = !DILocation(line: 1987, column: 22, scope: !6779)
!6782 = !DILocation(line: 1987, column: 33, scope: !6779)
!6783 = !DILocation(line: 1987, column: 39, scope: !6779)
!6784 = !DILocation(line: 1987, column: 50, scope: !6779)
!6785 = !DILocation(line: 1987, column: 3, scope: !6779)
!6786 = !DILocation(line: 1989, column: 26, scope: !6779)
!6787 = !DILocation(line: 1989, column: 39, scope: !6779)
!6788 = !DILocation(line: 1989, column: 37, scope: !6779)
!6789 = !DILocation(line: 1989, column: 3, scope: !6779)
!6790 = !DILocation(line: 1989, column: 23, scope: !6779)
!6791 = !DILocation(line: 1990, column: 16, scope: !6779)
!6792 = !DILocation(line: 1990, column: 3, scope: !6779)
!6793 = !DILocation(line: 1990, column: 14, scope: !6779)
!6794 = !DILocation(line: 1992, column: 23, scope: !6779)
!6795 = !DILocation(line: 1992, column: 40, scope: !6779)
!6796 = !DILocation(line: 1992, column: 9, scope: !6779)
!6797 = !DILocation(line: 1992, column: 7, scope: !6779)
!6798 = !DILocation(line: 1994, column: 8, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1994, column: 7)
!6800 = !DILocation(line: 1994, column: 7, scope: !6779)
!6801 = !DILocation(line: 1995, column: 4, scope: !6799)
!6802 = !DILocation(line: 1997, column: 10, scope: !6779)
!6803 = !DILocation(line: 1997, column: 8, scope: !6779)
!6804 = !DILocation(line: 1998, column: 10, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 1998, column: 3)
!6806 = !DILocation(line: 1998, column: 8, scope: !6805)
!6807 = !DILocation(line: 1998, column: 15, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6805, file: !3, line: 1998, column: 3)
!6809 = !DILocation(line: 1998, column: 20, scope: !6808)
!6810 = !DILocation(line: 1998, column: 17, scope: !6808)
!6811 = !DILocation(line: 1998, column: 3, scope: !6805)
!6812 = !DILocalVariable(name: "block", scope: !6813, file: !3, line: 1999, type: !522)
!6813 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 1998, column: 37)
!6814 = !DILocation(line: 1999, column: 8, scope: !6813)
!6815 = !DILocation(line: 1999, column: 16, scope: !6813)
!6816 = !DILocation(line: 1999, column: 23, scope: !6813)
!6817 = !DILocation(line: 1999, column: 25, scope: !6813)
!6818 = !DILocation(line: 1999, column: 21, scope: !6813)
!6819 = !DILocation(line: 2001, column: 30, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 2001, column: 8)
!6821 = !DILocation(line: 2001, column: 37, scope: !6820)
!6822 = !DILocation(line: 2001, column: 9, scope: !6820)
!6823 = !DILocation(line: 2001, column: 8, scope: !6813)
!6824 = !DILocation(line: 2002, column: 5, scope: !6820)
!6825 = !DILocation(line: 2004, column: 11, scope: !6813)
!6826 = !DILocation(line: 2004, column: 17, scope: !6813)
!6827 = !DILocation(line: 2004, column: 4, scope: !6813)
!6828 = !DILocation(line: 2005, column: 9, scope: !6813)
!6829 = !DILocation(line: 2006, column: 3, scope: !6813)
!6830 = !DILocation(line: 1998, column: 33, scope: !6808)
!6831 = !DILocation(line: 1998, column: 3, scope: !6808)
!6832 = distinct !{!6832, !6811, !6833}
!6833 = !DILocation(line: 2006, column: 3, scope: !6805)
!6834 = !DILocation(line: 2008, column: 9, scope: !6779)
!6835 = !DILocation(line: 2008, column: 3, scope: !6779)
!6836 = !DILocation(line: 2009, column: 10, scope: !6779)
!6837 = !DILocation(line: 2009, column: 8, scope: !6779)
!6838 = !DILocation(line: 2010, column: 2, scope: !6779)
!6839 = !DILocation(line: 2012, column: 24, scope: !6356)
!6840 = !DILocation(line: 2012, column: 9, scope: !6356)
!6841 = !DILocation(line: 2012, column: 2, scope: !6356)
!6842 = !DILabel(scope: !6356, name: "carp", file: !3, line: 2014)
!6843 = !DILocation(line: 2014, column: 1, scope: !6356)
!6844 = !DILocation(line: 2015, column: 21, scope: !6356)
!6845 = !DILocation(line: 2015, column: 32, scope: !6356)
!6846 = !DILocation(line: 2015, column: 2, scope: !6356)
!6847 = !DILabel(scope: !6356, name: "out", file: !3, line: 2016)
!6848 = !DILocation(line: 2016, column: 1, scope: !6356)
!6849 = !DILocation(line: 2017, column: 8, scope: !6356)
!6850 = !DILocation(line: 2017, column: 2, scope: !6356)
!6851 = !DILocation(line: 2018, column: 2, scope: !6356)
!6852 = !DILocation(line: 2019, column: 1, scope: !6356)
!6853 = distinct !DISubprogram(name: "connector_bad_edid", scope: !3, file: !3, line: 1834, type: !6854, scopeLine: 1836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6854 = !DISubroutineType(types: !6855)
!6855 = !{null, !1162, !522, !139}
!6856 = !DILocalVariable(name: "connector", arg: 1, scope: !6853, file: !3, line: 1834, type: !1162)
!6857 = !DILocation(line: 1834, column: 54, scope: !6853)
!6858 = !DILocalVariable(name: "edid", arg: 2, scope: !6853, file: !3, line: 1835, type: !522)
!6859 = !DILocation(line: 1835, column: 15, scope: !6853)
!6860 = !DILocalVariable(name: "num_blocks", arg: 3, scope: !6853, file: !3, line: 1835, type: !139)
!6861 = !DILocation(line: 1835, column: 25, scope: !6853)
!6862 = !DILocalVariable(name: "i", scope: !6853, file: !3, line: 1837, type: !139)
!6863 = !DILocation(line: 1837, column: 6, scope: !6853)
!6864 = !DILocalVariable(name: "num_of_ext", scope: !6853, file: !3, line: 1838, type: !375)
!6865 = !DILocation(line: 1838, column: 5, scope: !6853)
!6866 = !DILocation(line: 1838, column: 18, scope: !6853)
!6867 = !DILocation(line: 1842, column: 27, scope: !6853)
!6868 = !DILocation(line: 1842, column: 34, scope: !6853)
!6869 = !DILocation(line: 1842, column: 45, scope: !6853)
!6870 = !DILocation(line: 1842, column: 32, scope: !6853)
!6871 = !DILocation(line: 1842, column: 3, scope: !6853)
!6872 = !DILocation(line: 1841, column: 2, scope: !6853)
!6873 = !DILocation(line: 1841, column: 13, scope: !6853)
!6874 = !DILocation(line: 1841, column: 32, scope: !6853)
!6875 = !DILocation(line: 1844, column: 6, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 1844, column: 6)
!6877 = !DILocation(line: 1844, column: 17, scope: !6876)
!6878 = !DILocation(line: 1844, column: 33, scope: !6876)
!6879 = !DILocation(line: 1844, column: 36, scope: !6876)
!6880 = !DILocation(line: 1844, column: 40, scope: !6876)
!6881 = !DILocation(line: 1844, column: 6, scope: !6853)
!6882 = !DILocation(line: 1845, column: 3, scope: !6876)
!6883 = !DILocation(line: 1847, column: 2, scope: !6853)
!6884 = !DILocation(line: 1848, column: 9, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6853, file: !3, line: 1848, column: 2)
!6886 = !DILocation(line: 1848, column: 7, scope: !6885)
!6887 = !DILocation(line: 1848, column: 14, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 1848, column: 2)
!6889 = !DILocation(line: 1848, column: 18, scope: !6888)
!6890 = !DILocation(line: 1848, column: 16, scope: !6888)
!6891 = !DILocation(line: 1848, column: 2, scope: !6885)
!6892 = !DILocalVariable(name: "block", scope: !6893, file: !3, line: 1849, type: !522)
!6893 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 1848, column: 35)
!6894 = !DILocation(line: 1849, column: 7, scope: !6893)
!6895 = !DILocation(line: 1849, column: 15, scope: !6893)
!6896 = !DILocation(line: 1849, column: 22, scope: !6893)
!6897 = !DILocation(line: 1849, column: 24, scope: !6893)
!6898 = !DILocation(line: 1849, column: 20, scope: !6893)
!6899 = !DILocalVariable(name: "prefix", scope: !6893, file: !3, line: 1850, type: !6900)
!6900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 160, elements: !3217)
!6901 = !DILocation(line: 1850, column: 8, scope: !6893)
!6902 = !DILocation(line: 1852, column: 24, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6893, file: !3, line: 1852, column: 7)
!6904 = !DILocation(line: 1852, column: 7, scope: !6903)
!6905 = !DILocation(line: 1852, column: 7, scope: !6893)
!6906 = !DILocation(line: 1853, column: 12, scope: !6903)
!6907 = !DILocation(line: 1853, column: 38, scope: !6903)
!6908 = !DILocation(line: 1853, column: 4, scope: !6903)
!6909 = !DILocation(line: 1854, column: 34, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6903, file: !3, line: 1854, column: 12)
!6911 = !DILocation(line: 1854, column: 41, scope: !6910)
!6912 = !DILocation(line: 1854, column: 13, scope: !6910)
!6913 = !DILocation(line: 1854, column: 12, scope: !6903)
!6914 = !DILocation(line: 1855, column: 12, scope: !6910)
!6915 = !DILocation(line: 1855, column: 38, scope: !6910)
!6916 = !DILocation(line: 1855, column: 4, scope: !6910)
!6917 = !DILocation(line: 1857, column: 12, scope: !6910)
!6918 = !DILocation(line: 1857, column: 38, scope: !6910)
!6919 = !DILocation(line: 1857, column: 4, scope: !6910)
!6920 = !DILocation(line: 1860, column: 11, scope: !6893)
!6921 = !DILocation(line: 1861, column: 11, scope: !6893)
!6922 = !DILocation(line: 1859, column: 3, scope: !6893)
!6923 = !DILocation(line: 1862, column: 2, scope: !6893)
!6924 = !DILocation(line: 1848, column: 31, scope: !6888)
!6925 = !DILocation(line: 1848, column: 2, scope: !6888)
!6926 = distinct !{!6926, !6891, !6927}
!6927 = !DILocation(line: 1862, column: 2, scope: !6885)
!6928 = !DILocation(line: 1863, column: 1, scope: !6853)
!6929 = distinct !DISubprogram(name: "kmalloc_array", scope: !361, file: !361, line: 584, type: !6930, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!368, !1285, !1285, !523}
!6932 = !DILocation(line: 445, column: 72, scope: !6363, inlinedAt: !6933)
!6933 = distinct !DILocation(line: 552, column: 10, scope: !6368, inlinedAt: !6934)
!6934 = distinct !DILocation(line: 591, column: 10, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6929, file: !361, line: 590, column: 6)
!6936 = !DILocation(line: 446, column: 9, scope: !6363, inlinedAt: !6933)
!6937 = !DILocation(line: 446, column: 23, scope: !6363, inlinedAt: !6933)
!6938 = !DILocation(line: 448, column: 8, scope: !6363, inlinedAt: !6933)
!6939 = !DILocation(line: 318, column: 67, scope: !6382, inlinedAt: !6940)
!6940 = distinct !DILocation(line: 553, column: 20, scope: !6368, inlinedAt: !6934)
!6941 = !DILocation(line: 346, column: 58, scope: !6388, inlinedAt: !6942)
!6942 = distinct !DILocation(line: 547, column: 11, scope: !6368, inlinedAt: !6934)
!6943 = !DILocation(line: 472, column: 28, scope: !6394, inlinedAt: !6944)
!6944 = distinct !DILocation(line: 481, column: 9, scope: !6399, inlinedAt: !6945)
!6945 = distinct !DILocation(line: 545, column: 11, scope: !6401, inlinedAt: !6934)
!6946 = !DILocation(line: 472, column: 40, scope: !6394, inlinedAt: !6944)
!6947 = !DILocation(line: 472, column: 60, scope: !6394, inlinedAt: !6944)
!6948 = !DILocation(line: 478, column: 51, scope: !6399, inlinedAt: !6945)
!6949 = !DILocation(line: 478, column: 63, scope: !6399, inlinedAt: !6945)
!6950 = !DILocation(line: 480, column: 15, scope: !6399, inlinedAt: !6945)
!6951 = !DILocation(line: 538, column: 45, scope: !6370, inlinedAt: !6934)
!6952 = !DILocation(line: 538, column: 57, scope: !6370, inlinedAt: !6934)
!6953 = !DILocation(line: 542, column: 16, scope: !6368, inlinedAt: !6934)
!6954 = !DILocalVariable(name: "n", arg: 1, scope: !6929, file: !361, line: 584, type: !1285)
!6955 = !DILocation(line: 584, column: 42, scope: !6929)
!6956 = !DILocalVariable(name: "size", arg: 2, scope: !6929, file: !361, line: 584, type: !1285)
!6957 = !DILocation(line: 584, column: 52, scope: !6929)
!6958 = !DILocalVariable(name: "flags", arg: 3, scope: !6929, file: !361, line: 584, type: !523)
!6959 = !DILocation(line: 584, column: 64, scope: !6929)
!6960 = !DILocalVariable(name: "bytes", scope: !6929, file: !361, line: 586, type: !1285)
!6961 = !DILocation(line: 586, column: 9, scope: !6929)
!6962 = !DILocalVariable(name: "__a", scope: !6963, file: !361, line: 588, type: !1285)
!6963 = distinct !DILexicalBlock(scope: !6964, file: !361, line: 588, column: 6)
!6964 = distinct !DILexicalBlock(scope: !6929, file: !361, line: 588, column: 6)
!6965 = !DILocation(line: 588, column: 6, scope: !6963)
!6966 = !DILocalVariable(name: "__b", scope: !6963, file: !361, line: 588, type: !1285)
!6967 = !DILocalVariable(name: "__d", scope: !6963, file: !361, line: 588, type: !5831)
!6968 = !DILocation(line: 588, column: 6, scope: !6964)
!6969 = !DILocation(line: 588, column: 6, scope: !6929)
!6970 = !DILocation(line: 589, column: 3, scope: !6964)
!6971 = !DILocation(line: 590, column: 27, scope: !6935)
!6972 = !DILocation(line: 590, column: 6, scope: !6935)
!6973 = !DILocation(line: 590, column: 30, scope: !6935)
!6974 = !DILocation(line: 590, column: 54, scope: !6935)
!6975 = !DILocation(line: 590, column: 33, scope: !6935)
!6976 = !DILocation(line: 590, column: 6, scope: !6929)
!6977 = !DILocation(line: 591, column: 18, scope: !6935)
!6978 = !DILocation(line: 591, column: 25, scope: !6935)
!6979 = !DILocation(line: 540, column: 27, scope: !6369, inlinedAt: !6934)
!6980 = !DILocation(line: 540, column: 6, scope: !6369, inlinedAt: !6934)
!6981 = !DILocation(line: 540, column: 6, scope: !6370, inlinedAt: !6934)
!6982 = !DILocation(line: 544, column: 7, scope: !6401, inlinedAt: !6934)
!6983 = !DILocation(line: 544, column: 12, scope: !6401, inlinedAt: !6934)
!6984 = !DILocation(line: 544, column: 7, scope: !6368, inlinedAt: !6934)
!6985 = !DILocation(line: 545, column: 25, scope: !6401, inlinedAt: !6934)
!6986 = !DILocation(line: 545, column: 31, scope: !6401, inlinedAt: !6934)
!6987 = !DILocation(line: 480, column: 33, scope: !6399, inlinedAt: !6945)
!6988 = !DILocation(line: 480, column: 23, scope: !6399, inlinedAt: !6945)
!6989 = !DILocation(line: 481, column: 29, scope: !6399, inlinedAt: !6945)
!6990 = !DILocation(line: 481, column: 35, scope: !6399, inlinedAt: !6945)
!6991 = !DILocation(line: 481, column: 42, scope: !6399, inlinedAt: !6945)
!6992 = !DILocation(line: 474, column: 23, scope: !6394, inlinedAt: !6944)
!6993 = !DILocation(line: 474, column: 29, scope: !6394, inlinedAt: !6944)
!6994 = !DILocation(line: 474, column: 36, scope: !6394, inlinedAt: !6944)
!6995 = !DILocation(line: 474, column: 9, scope: !6394, inlinedAt: !6944)
!6996 = !DILocation(line: 545, column: 4, scope: !6401, inlinedAt: !6934)
!6997 = !DILocation(line: 547, column: 25, scope: !6368, inlinedAt: !6934)
!6998 = !DILocation(line: 348, column: 7, scope: !6464, inlinedAt: !6942)
!6999 = !DILocation(line: 348, column: 6, scope: !6388, inlinedAt: !6942)
!7000 = !DILocation(line: 349, column: 3, scope: !6464, inlinedAt: !6942)
!7001 = !DILocation(line: 351, column: 6, scope: !6468, inlinedAt: !6942)
!7002 = !DILocation(line: 351, column: 11, scope: !6468, inlinedAt: !6942)
!7003 = !DILocation(line: 351, column: 6, scope: !6388, inlinedAt: !6942)
!7004 = !DILocation(line: 352, column: 3, scope: !6468, inlinedAt: !6942)
!7005 = !DILocation(line: 354, column: 32, scope: !6473, inlinedAt: !6942)
!7006 = !DILocation(line: 354, column: 37, scope: !6473, inlinedAt: !6942)
!7007 = !DILocation(line: 354, column: 42, scope: !6473, inlinedAt: !6942)
!7008 = !DILocation(line: 354, column: 45, scope: !6473, inlinedAt: !6942)
!7009 = !DILocation(line: 354, column: 50, scope: !6473, inlinedAt: !6942)
!7010 = !DILocation(line: 354, column: 6, scope: !6388, inlinedAt: !6942)
!7011 = !DILocation(line: 355, column: 3, scope: !6473, inlinedAt: !6942)
!7012 = !DILocation(line: 356, column: 32, scope: !6481, inlinedAt: !6942)
!7013 = !DILocation(line: 356, column: 37, scope: !6481, inlinedAt: !6942)
!7014 = !DILocation(line: 356, column: 43, scope: !6481, inlinedAt: !6942)
!7015 = !DILocation(line: 356, column: 46, scope: !6481, inlinedAt: !6942)
!7016 = !DILocation(line: 356, column: 51, scope: !6481, inlinedAt: !6942)
!7017 = !DILocation(line: 356, column: 6, scope: !6388, inlinedAt: !6942)
!7018 = !DILocation(line: 357, column: 3, scope: !6481, inlinedAt: !6942)
!7019 = !DILocation(line: 358, column: 6, scope: !6489, inlinedAt: !6942)
!7020 = !DILocation(line: 358, column: 11, scope: !6489, inlinedAt: !6942)
!7021 = !DILocation(line: 358, column: 6, scope: !6388, inlinedAt: !6942)
!7022 = !DILocation(line: 358, column: 26, scope: !6489, inlinedAt: !6942)
!7023 = !DILocation(line: 359, column: 6, scope: !6494, inlinedAt: !6942)
!7024 = !DILocation(line: 359, column: 11, scope: !6494, inlinedAt: !6942)
!7025 = !DILocation(line: 359, column: 6, scope: !6388, inlinedAt: !6942)
!7026 = !DILocation(line: 359, column: 26, scope: !6494, inlinedAt: !6942)
!7027 = !DILocation(line: 360, column: 6, scope: !6499, inlinedAt: !6942)
!7028 = !DILocation(line: 360, column: 11, scope: !6499, inlinedAt: !6942)
!7029 = !DILocation(line: 360, column: 6, scope: !6388, inlinedAt: !6942)
!7030 = !DILocation(line: 360, column: 26, scope: !6499, inlinedAt: !6942)
!7031 = !DILocation(line: 361, column: 6, scope: !6504, inlinedAt: !6942)
!7032 = !DILocation(line: 361, column: 11, scope: !6504, inlinedAt: !6942)
!7033 = !DILocation(line: 361, column: 6, scope: !6388, inlinedAt: !6942)
!7034 = !DILocation(line: 361, column: 26, scope: !6504, inlinedAt: !6942)
!7035 = !DILocation(line: 362, column: 6, scope: !6509, inlinedAt: !6942)
!7036 = !DILocation(line: 362, column: 11, scope: !6509, inlinedAt: !6942)
!7037 = !DILocation(line: 362, column: 6, scope: !6388, inlinedAt: !6942)
!7038 = !DILocation(line: 362, column: 26, scope: !6509, inlinedAt: !6942)
!7039 = !DILocation(line: 363, column: 6, scope: !6514, inlinedAt: !6942)
!7040 = !DILocation(line: 363, column: 11, scope: !6514, inlinedAt: !6942)
!7041 = !DILocation(line: 363, column: 6, scope: !6388, inlinedAt: !6942)
!7042 = !DILocation(line: 363, column: 26, scope: !6514, inlinedAt: !6942)
!7043 = !DILocation(line: 364, column: 6, scope: !6519, inlinedAt: !6942)
!7044 = !DILocation(line: 364, column: 11, scope: !6519, inlinedAt: !6942)
!7045 = !DILocation(line: 364, column: 6, scope: !6388, inlinedAt: !6942)
!7046 = !DILocation(line: 364, column: 26, scope: !6519, inlinedAt: !6942)
!7047 = !DILocation(line: 365, column: 6, scope: !6524, inlinedAt: !6942)
!7048 = !DILocation(line: 365, column: 11, scope: !6524, inlinedAt: !6942)
!7049 = !DILocation(line: 365, column: 6, scope: !6388, inlinedAt: !6942)
!7050 = !DILocation(line: 365, column: 26, scope: !6524, inlinedAt: !6942)
!7051 = !DILocation(line: 366, column: 6, scope: !6529, inlinedAt: !6942)
!7052 = !DILocation(line: 366, column: 11, scope: !6529, inlinedAt: !6942)
!7053 = !DILocation(line: 366, column: 6, scope: !6388, inlinedAt: !6942)
!7054 = !DILocation(line: 366, column: 26, scope: !6529, inlinedAt: !6942)
!7055 = !DILocation(line: 367, column: 6, scope: !6534, inlinedAt: !6942)
!7056 = !DILocation(line: 367, column: 11, scope: !6534, inlinedAt: !6942)
!7057 = !DILocation(line: 367, column: 6, scope: !6388, inlinedAt: !6942)
!7058 = !DILocation(line: 367, column: 26, scope: !6534, inlinedAt: !6942)
!7059 = !DILocation(line: 368, column: 6, scope: !6539, inlinedAt: !6942)
!7060 = !DILocation(line: 368, column: 11, scope: !6539, inlinedAt: !6942)
!7061 = !DILocation(line: 368, column: 6, scope: !6388, inlinedAt: !6942)
!7062 = !DILocation(line: 368, column: 26, scope: !6539, inlinedAt: !6942)
!7063 = !DILocation(line: 369, column: 6, scope: !6544, inlinedAt: !6942)
!7064 = !DILocation(line: 369, column: 11, scope: !6544, inlinedAt: !6942)
!7065 = !DILocation(line: 369, column: 6, scope: !6388, inlinedAt: !6942)
!7066 = !DILocation(line: 369, column: 26, scope: !6544, inlinedAt: !6942)
!7067 = !DILocation(line: 370, column: 6, scope: !6549, inlinedAt: !6942)
!7068 = !DILocation(line: 370, column: 11, scope: !6549, inlinedAt: !6942)
!7069 = !DILocation(line: 370, column: 6, scope: !6388, inlinedAt: !6942)
!7070 = !DILocation(line: 370, column: 26, scope: !6549, inlinedAt: !6942)
!7071 = !DILocation(line: 371, column: 6, scope: !6554, inlinedAt: !6942)
!7072 = !DILocation(line: 371, column: 11, scope: !6554, inlinedAt: !6942)
!7073 = !DILocation(line: 371, column: 6, scope: !6388, inlinedAt: !6942)
!7074 = !DILocation(line: 371, column: 26, scope: !6554, inlinedAt: !6942)
!7075 = !DILocation(line: 372, column: 6, scope: !6559, inlinedAt: !6942)
!7076 = !DILocation(line: 372, column: 11, scope: !6559, inlinedAt: !6942)
!7077 = !DILocation(line: 372, column: 6, scope: !6388, inlinedAt: !6942)
!7078 = !DILocation(line: 372, column: 26, scope: !6559, inlinedAt: !6942)
!7079 = !DILocation(line: 373, column: 6, scope: !6564, inlinedAt: !6942)
!7080 = !DILocation(line: 373, column: 11, scope: !6564, inlinedAt: !6942)
!7081 = !DILocation(line: 373, column: 6, scope: !6388, inlinedAt: !6942)
!7082 = !DILocation(line: 373, column: 26, scope: !6564, inlinedAt: !6942)
!7083 = !DILocation(line: 374, column: 6, scope: !6569, inlinedAt: !6942)
!7084 = !DILocation(line: 374, column: 11, scope: !6569, inlinedAt: !6942)
!7085 = !DILocation(line: 374, column: 6, scope: !6388, inlinedAt: !6942)
!7086 = !DILocation(line: 374, column: 26, scope: !6569, inlinedAt: !6942)
!7087 = !DILocation(line: 375, column: 6, scope: !6574, inlinedAt: !6942)
!7088 = !DILocation(line: 375, column: 11, scope: !6574, inlinedAt: !6942)
!7089 = !DILocation(line: 375, column: 6, scope: !6388, inlinedAt: !6942)
!7090 = !DILocation(line: 375, column: 27, scope: !6574, inlinedAt: !6942)
!7091 = !DILocation(line: 376, column: 6, scope: !6579, inlinedAt: !6942)
!7092 = !DILocation(line: 376, column: 11, scope: !6579, inlinedAt: !6942)
!7093 = !DILocation(line: 376, column: 6, scope: !6388, inlinedAt: !6942)
!7094 = !DILocation(line: 376, column: 32, scope: !6579, inlinedAt: !6942)
!7095 = !DILocation(line: 377, column: 6, scope: !6584, inlinedAt: !6942)
!7096 = !DILocation(line: 377, column: 11, scope: !6584, inlinedAt: !6942)
!7097 = !DILocation(line: 377, column: 6, scope: !6388, inlinedAt: !6942)
!7098 = !DILocation(line: 377, column: 32, scope: !6584, inlinedAt: !6942)
!7099 = !DILocation(line: 378, column: 6, scope: !6589, inlinedAt: !6942)
!7100 = !DILocation(line: 378, column: 11, scope: !6589, inlinedAt: !6942)
!7101 = !DILocation(line: 378, column: 6, scope: !6388, inlinedAt: !6942)
!7102 = !DILocation(line: 378, column: 32, scope: !6589, inlinedAt: !6942)
!7103 = !DILocation(line: 379, column: 6, scope: !6594, inlinedAt: !6942)
!7104 = !DILocation(line: 379, column: 11, scope: !6594, inlinedAt: !6942)
!7105 = !DILocation(line: 379, column: 6, scope: !6388, inlinedAt: !6942)
!7106 = !DILocation(line: 379, column: 33, scope: !6594, inlinedAt: !6942)
!7107 = !DILocation(line: 380, column: 6, scope: !6599, inlinedAt: !6942)
!7108 = !DILocation(line: 380, column: 11, scope: !6599, inlinedAt: !6942)
!7109 = !DILocation(line: 380, column: 6, scope: !6388, inlinedAt: !6942)
!7110 = !DILocation(line: 380, column: 33, scope: !6599, inlinedAt: !6942)
!7111 = !DILocation(line: 381, column: 6, scope: !6604, inlinedAt: !6942)
!7112 = !DILocation(line: 381, column: 11, scope: !6604, inlinedAt: !6942)
!7113 = !DILocation(line: 381, column: 6, scope: !6388, inlinedAt: !6942)
!7114 = !DILocation(line: 381, column: 33, scope: !6604, inlinedAt: !6942)
!7115 = !DILocation(line: 382, column: 2, scope: !6609, inlinedAt: !6942)
!7116 = !DILocation(line: 382, column: 2, scope: !6613, inlinedAt: !6942)
!7117 = !DILocation(line: 382, column: 2, scope: !6614, inlinedAt: !6942)
!7118 = !DILocation(line: 386, column: 1, scope: !6388, inlinedAt: !6942)
!7119 = !DILocation(line: 547, column: 9, scope: !6368, inlinedAt: !6934)
!7120 = !DILocation(line: 549, column: 8, scope: !6620, inlinedAt: !6934)
!7121 = !DILocation(line: 549, column: 7, scope: !6368, inlinedAt: !6934)
!7122 = !DILocation(line: 550, column: 4, scope: !6620, inlinedAt: !6934)
!7123 = !DILocation(line: 553, column: 33, scope: !6368, inlinedAt: !6934)
!7124 = !DILocation(line: 325, column: 6, scope: !6625, inlinedAt: !6940)
!7125 = !DILocation(line: 325, column: 6, scope: !6382, inlinedAt: !6940)
!7126 = !DILocation(line: 326, column: 3, scope: !6625, inlinedAt: !6940)
!7127 = !DILocation(line: 332, column: 9, scope: !6382, inlinedAt: !6940)
!7128 = !DILocation(line: 332, column: 15, scope: !6382, inlinedAt: !6940)
!7129 = !DILocation(line: 332, column: 2, scope: !6382, inlinedAt: !6940)
!7130 = !DILocation(line: 336, column: 1, scope: !6382, inlinedAt: !6940)
!7131 = !DILocation(line: 553, column: 5, scope: !6368, inlinedAt: !6934)
!7132 = !DILocation(line: 553, column: 41, scope: !6368, inlinedAt: !6934)
!7133 = !DILocation(line: 554, column: 5, scope: !6368, inlinedAt: !6934)
!7134 = !DILocation(line: 554, column: 12, scope: !6368, inlinedAt: !6934)
!7135 = !DILocation(line: 448, column: 31, scope: !6363, inlinedAt: !6933)
!7136 = !DILocation(line: 448, column: 34, scope: !6363, inlinedAt: !6933)
!7137 = !DILocation(line: 448, column: 14, scope: !6363, inlinedAt: !6933)
!7138 = !DILocation(line: 450, column: 22, scope: !6363, inlinedAt: !6933)
!7139 = !DILocation(line: 450, column: 25, scope: !6363, inlinedAt: !6933)
!7140 = !DILocation(line: 450, column: 30, scope: !6363, inlinedAt: !6933)
!7141 = !DILocation(line: 450, column: 36, scope: !6363, inlinedAt: !6933)
!7142 = !DILocation(line: 450, column: 8, scope: !6363, inlinedAt: !6933)
!7143 = !DILocation(line: 450, column: 6, scope: !6363, inlinedAt: !6933)
!7144 = !DILocation(line: 451, column: 9, scope: !6363, inlinedAt: !6933)
!7145 = !DILocation(line: 552, column: 3, scope: !6368, inlinedAt: !6934)
!7146 = !DILocation(line: 557, column: 19, scope: !6370, inlinedAt: !6934)
!7147 = !DILocation(line: 557, column: 25, scope: !6370, inlinedAt: !6934)
!7148 = !DILocation(line: 557, column: 9, scope: !6370, inlinedAt: !6934)
!7149 = !DILocation(line: 557, column: 2, scope: !6370, inlinedAt: !6934)
!7150 = !DILocation(line: 558, column: 1, scope: !6370, inlinedAt: !6934)
!7151 = !DILocation(line: 591, column: 3, scope: !6935)
!7152 = !DILocation(line: 592, column: 19, scope: !6929)
!7153 = !DILocation(line: 592, column: 26, scope: !6929)
!7154 = !DILocation(line: 592, column: 9, scope: !6929)
!7155 = !DILocation(line: 592, column: 2, scope: !6929)
!7156 = !DILocation(line: 593, column: 1, scope: !6929)
!7157 = distinct !DISubprogram(name: "drm_probe_ddc", scope: !3, file: !3, line: 2029, type: !7158, scopeLine: 2030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7158 = !DISubroutineType(types: !7159)
!7159 = !{!559, !6025}
!7160 = !DILocalVariable(name: "adapter", arg: 1, scope: !7157, file: !3, line: 2029, type: !6025)
!7161 = !DILocation(line: 2029, column: 35, scope: !7157)
!7162 = !DILocalVariable(name: "out", scope: !7157, file: !3, line: 2031, type: !379)
!7163 = !DILocation(line: 2031, column: 16, scope: !7157)
!7164 = !DILocation(line: 2033, column: 32, scope: !7157)
!7165 = !DILocation(line: 2033, column: 10, scope: !7157)
!7166 = !DILocation(line: 2033, column: 53, scope: !7157)
!7167 = !DILocation(line: 2033, column: 2, scope: !7157)
!7168 = distinct !DISubprogram(name: "drm_do_probe_ddc_edid", scope: !3, file: !3, line: 1783, type: !6360, scopeLine: 1784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7169 = !DILocalVariable(name: "data", arg: 1, scope: !7168, file: !3, line: 1783, type: !368)
!7170 = !DILocation(line: 1783, column: 29, scope: !7168)
!7171 = !DILocalVariable(name: "buf", arg: 2, scope: !7168, file: !3, line: 1783, type: !522)
!7172 = !DILocation(line: 1783, column: 39, scope: !7168)
!7173 = !DILocalVariable(name: "block", arg: 3, scope: !7168, file: !3, line: 1783, type: !7)
!7174 = !DILocation(line: 1783, column: 57, scope: !7168)
!7175 = !DILocalVariable(name: "len", arg: 4, scope: !7168, file: !3, line: 1783, type: !1285)
!7176 = !DILocation(line: 1783, column: 71, scope: !7168)
!7177 = !DILocalVariable(name: "adapter", scope: !7168, file: !3, line: 1785, type: !6025)
!7178 = !DILocation(line: 1785, column: 22, scope: !7168)
!7179 = !DILocation(line: 1785, column: 32, scope: !7168)
!7180 = !DILocalVariable(name: "start", scope: !7168, file: !3, line: 1786, type: !379)
!7181 = !DILocation(line: 1786, column: 16, scope: !7168)
!7182 = !DILocation(line: 1786, column: 24, scope: !7168)
!7183 = !DILocation(line: 1786, column: 30, scope: !7168)
!7184 = !DILocalVariable(name: "segment", scope: !7168, file: !3, line: 1787, type: !379)
!7185 = !DILocation(line: 1787, column: 16, scope: !7168)
!7186 = !DILocation(line: 1787, column: 26, scope: !7168)
!7187 = !DILocation(line: 1787, column: 32, scope: !7168)
!7188 = !DILocalVariable(name: "xfers", scope: !7168, file: !3, line: 1788, type: !379)
!7189 = !DILocation(line: 1788, column: 16, scope: !7168)
!7190 = !DILocation(line: 1788, column: 24, scope: !7168)
!7191 = !DILocalVariable(name: "ret", scope: !7168, file: !3, line: 1789, type: !139)
!7192 = !DILocation(line: 1789, column: 6, scope: !7168)
!7193 = !DILocalVariable(name: "retries", scope: !7168, file: !3, line: 1789, type: !139)
!7194 = !DILocation(line: 1789, column: 11, scope: !7168)
!7195 = !DILocation(line: 1798, column: 2, scope: !7168)
!7196 = !DILocalVariable(name: "msgs", scope: !7197, file: !3, line: 1799, type: !7198)
!7197 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 1798, column: 5)
!7198 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6041, size: 384, elements: !516)
!7199 = !DILocation(line: 1799, column: 18, scope: !7197)
!7200 = !DILocation(line: 1799, column: 27, scope: !7197)
!7201 = !DILocation(line: 1800, column: 4, scope: !7197)
!7202 = !DILocation(line: 1805, column: 7, scope: !7197)
!7203 = !DILocation(line: 1810, column: 7, scope: !7197)
!7204 = !DILocation(line: 1813, column: 12, scope: !7197)
!7205 = !DILocation(line: 1814, column: 12, scope: !7197)
!7206 = !DILocation(line: 1822, column: 22, scope: !7197)
!7207 = !DILocation(line: 1822, column: 41, scope: !7197)
!7208 = !DILocation(line: 1822, column: 39, scope: !7197)
!7209 = !DILocation(line: 1822, column: 32, scope: !7197)
!7210 = !DILocation(line: 1822, column: 49, scope: !7197)
!7211 = !DILocation(line: 1822, column: 9, scope: !7197)
!7212 = !DILocation(line: 1822, column: 7, scope: !7197)
!7213 = !DILocation(line: 1824, column: 7, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7197, file: !3, line: 1824, column: 7)
!7215 = !DILocation(line: 1824, column: 11, scope: !7214)
!7216 = !DILocation(line: 1824, column: 7, scope: !7197)
!7217 = !DILocation(line: 1825, column: 4, scope: !7218)
!7218 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 1824, column: 22)
!7219 = !DILocation(line: 1827, column: 4, scope: !7218)
!7220 = !DILocation(line: 1829, column: 2, scope: !7197)
!7221 = !DILocation(line: 1829, column: 11, scope: !7168)
!7222 = !DILocation(line: 1829, column: 18, scope: !7168)
!7223 = !DILocation(line: 1829, column: 15, scope: !7168)
!7224 = !DILocation(line: 1829, column: 24, scope: !7168)
!7225 = !DILocation(line: 1829, column: 27, scope: !7168)
!7226 = !DILocation(line: 0, scope: !7168)
!7227 = distinct !{!7227, !7195, !7228}
!7228 = !DILocation(line: 1829, column: 36, scope: !7168)
!7229 = !DILocation(line: 1831, column: 9, scope: !7168)
!7230 = !DILocation(line: 1831, column: 16, scope: !7168)
!7231 = !DILocation(line: 1831, column: 13, scope: !7168)
!7232 = !DILocation(line: 1831, column: 2, scope: !7168)
!7233 = distinct !DISubprogram(name: "drm_get_edid", scope: !3, file: !3, line: 2047, type: !7234, scopeLine: 2049, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7234 = !DISubroutineType(types: !7235)
!7235 = !{!369, !1162, !6025}
!7236 = !DILocalVariable(name: "connector", arg: 1, scope: !7233, file: !3, line: 2047, type: !1162)
!7237 = !DILocation(line: 2047, column: 49, scope: !7233)
!7238 = !DILocalVariable(name: "adapter", arg: 2, scope: !7233, file: !3, line: 2048, type: !6025)
!7239 = !DILocation(line: 2048, column: 26, scope: !7233)
!7240 = !DILocalVariable(name: "edid", scope: !7233, file: !3, line: 2050, type: !369)
!7241 = !DILocation(line: 2050, column: 15, scope: !7233)
!7242 = !DILocation(line: 2052, column: 6, scope: !7243)
!7243 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 2052, column: 6)
!7244 = !DILocation(line: 2052, column: 17, scope: !7243)
!7245 = !DILocation(line: 2052, column: 23, scope: !7243)
!7246 = !DILocation(line: 2052, column: 6, scope: !7233)
!7247 = !DILocation(line: 2053, column: 3, scope: !7243)
!7248 = !DILocation(line: 2055, column: 6, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7233, file: !3, line: 2055, column: 6)
!7250 = !DILocation(line: 2055, column: 17, scope: !7249)
!7251 = !DILocation(line: 2055, column: 23, scope: !7249)
!7252 = !DILocation(line: 2055, column: 48, scope: !7249)
!7253 = !DILocation(line: 2055, column: 66, scope: !7249)
!7254 = !DILocation(line: 2055, column: 52, scope: !7249)
!7255 = !DILocation(line: 2055, column: 6, scope: !7233)
!7256 = !DILocation(line: 2056, column: 3, scope: !7249)
!7257 = !DILocation(line: 2058, column: 25, scope: !7233)
!7258 = !DILocation(line: 2058, column: 59, scope: !7233)
!7259 = !DILocation(line: 2058, column: 9, scope: !7233)
!7260 = !DILocation(line: 2058, column: 7, scope: !7233)
!7261 = !DILocation(line: 2059, column: 37, scope: !7233)
!7262 = !DILocation(line: 2059, column: 48, scope: !7233)
!7263 = !DILocation(line: 2059, column: 2, scope: !7233)
!7264 = !DILocation(line: 2060, column: 9, scope: !7233)
!7265 = !DILocation(line: 2060, column: 2, scope: !7233)
!7266 = !DILocation(line: 2061, column: 1, scope: !7233)
!7267 = distinct !DISubprogram(name: "drm_get_edid_switcheroo", scope: !3, file: !3, line: 2075, type: !7234, scopeLine: 2077, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7268 = !DILocalVariable(name: "connector", arg: 1, scope: !7267, file: !3, line: 2075, type: !1162)
!7269 = !DILocation(line: 2075, column: 60, scope: !7267)
!7270 = !DILocalVariable(name: "adapter", arg: 2, scope: !7267, file: !3, line: 2076, type: !6025)
!7271 = !DILocation(line: 2076, column: 30, scope: !7267)
!7272 = !DILocalVariable(name: "pdev", scope: !7267, file: !3, line: 2078, type: !5120)
!7273 = !DILocation(line: 2078, column: 18, scope: !7267)
!7274 = !DILocation(line: 2078, column: 25, scope: !7267)
!7275 = !DILocation(line: 2078, column: 36, scope: !7267)
!7276 = !DILocation(line: 2078, column: 41, scope: !7267)
!7277 = !DILocalVariable(name: "edid", scope: !7267, file: !3, line: 2079, type: !369)
!7278 = !DILocation(line: 2079, column: 15, scope: !7267)
!7279 = !DILocation(line: 2081, column: 26, scope: !7267)
!7280 = !DILocation(line: 2081, column: 2, scope: !7267)
!7281 = !DILocation(line: 2082, column: 22, scope: !7267)
!7282 = !DILocation(line: 2082, column: 33, scope: !7267)
!7283 = !DILocation(line: 2082, column: 9, scope: !7267)
!7284 = !DILocation(line: 2082, column: 7, scope: !7267)
!7285 = !DILocation(line: 2083, column: 28, scope: !7267)
!7286 = !DILocation(line: 2083, column: 2, scope: !7267)
!7287 = !DILocation(line: 2085, column: 9, scope: !7267)
!7288 = !DILocation(line: 2085, column: 2, scope: !7267)
!7289 = distinct !DISubprogram(name: "vga_switcheroo_lock_ddc", scope: !7290, file: !7290, line: 189, type: !7291, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7290 = !DIFile(filename: "./include/linux/vga_switcheroo.h", directory: "/home/lizy2001/genbc/linux")
!7291 = !DISubroutineType(types: !7292)
!7292 = !{!139, !5120}
!7293 = !DILocalVariable(name: "pdev", arg: 1, scope: !7289, file: !7290, line: 189, type: !5120)
!7294 = !DILocation(line: 189, column: 59, scope: !7289)
!7295 = !DILocation(line: 189, column: 67, scope: !7289)
!7296 = distinct !DISubprogram(name: "vga_switcheroo_unlock_ddc", scope: !7290, file: !7290, line: 190, type: !7291, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7297 = !DILocalVariable(name: "pdev", arg: 1, scope: !7296, file: !7290, line: 190, type: !5120)
!7298 = !DILocation(line: 190, column: 61, scope: !7296)
!7299 = !DILocation(line: 190, column: 69, scope: !7296)
!7300 = distinct !DISubprogram(name: "drm_edid_duplicate", scope: !3, file: !3, line: 2095, type: !7301, scopeLine: 2096, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7301 = !DISubroutineType(types: !7302)
!7302 = !{!369, !842}
!7303 = !DILocalVariable(name: "edid", arg: 1, scope: !7300, file: !3, line: 2095, type: !842)
!7304 = !DILocation(line: 2095, column: 52, scope: !7300)
!7305 = !DILocation(line: 2097, column: 17, scope: !7300)
!7306 = !DILocation(line: 2097, column: 24, scope: !7300)
!7307 = !DILocation(line: 2097, column: 30, scope: !7300)
!7308 = !DILocation(line: 2097, column: 41, scope: !7300)
!7309 = !DILocation(line: 2097, column: 46, scope: !7300)
!7310 = !DILocation(line: 2097, column: 23, scope: !7300)
!7311 = !DILocation(line: 2097, column: 9, scope: !7300)
!7312 = !DILocation(line: 2097, column: 2, scope: !7300)
!7313 = distinct !DISubprogram(name: "drm_mode_find_dmt", scope: !3, file: !3, line: 2217, type: !7314, scopeLine: 2220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7314 = !DISubroutineType(types: !7315)
!7315 = !{!525, !1166, !139, !139, !139, !559}
!7316 = !DILocalVariable(name: "dev", arg: 1, scope: !7313, file: !3, line: 2217, type: !1166)
!7317 = !DILocation(line: 2217, column: 63, scope: !7313)
!7318 = !DILocalVariable(name: "hsize", arg: 2, scope: !7313, file: !3, line: 2218, type: !139)
!7319 = !DILocation(line: 2218, column: 13, scope: !7313)
!7320 = !DILocalVariable(name: "vsize", arg: 3, scope: !7313, file: !3, line: 2218, type: !139)
!7321 = !DILocation(line: 2218, column: 24, scope: !7313)
!7322 = !DILocalVariable(name: "fresh", arg: 4, scope: !7313, file: !3, line: 2218, type: !139)
!7323 = !DILocation(line: 2218, column: 35, scope: !7313)
!7324 = !DILocalVariable(name: "rb", arg: 5, scope: !7313, file: !3, line: 2219, type: !559)
!7325 = !DILocation(line: 2219, column: 14, scope: !7313)
!7326 = !DILocalVariable(name: "i", scope: !7313, file: !3, line: 2221, type: !139)
!7327 = !DILocation(line: 2221, column: 6, scope: !7313)
!7328 = !DILocation(line: 2223, column: 9, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7313, file: !3, line: 2223, column: 2)
!7330 = !DILocation(line: 2223, column: 7, scope: !7329)
!7331 = !DILocation(line: 2223, column: 14, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7329, file: !3, line: 2223, column: 2)
!7333 = !DILocation(line: 2223, column: 16, scope: !7332)
!7334 = !DILocation(line: 2223, column: 2, scope: !7329)
!7335 = !DILocalVariable(name: "ptr", scope: !7336, file: !3, line: 2224, type: !594)
!7336 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 2223, column: 50)
!7337 = !DILocation(line: 2224, column: 34, scope: !7336)
!7338 = !DILocation(line: 2224, column: 55, scope: !7336)
!7339 = !DILocation(line: 2224, column: 41, scope: !7336)
!7340 = !DILocation(line: 2226, column: 7, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2226, column: 7)
!7342 = !DILocation(line: 2226, column: 16, scope: !7341)
!7343 = !DILocation(line: 2226, column: 21, scope: !7341)
!7344 = !DILocation(line: 2226, column: 13, scope: !7341)
!7345 = !DILocation(line: 2226, column: 7, scope: !7336)
!7346 = !DILocation(line: 2227, column: 4, scope: !7341)
!7347 = !DILocation(line: 2228, column: 7, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2228, column: 7)
!7349 = !DILocation(line: 2228, column: 16, scope: !7348)
!7350 = !DILocation(line: 2228, column: 21, scope: !7348)
!7351 = !DILocation(line: 2228, column: 13, scope: !7348)
!7352 = !DILocation(line: 2228, column: 7, scope: !7336)
!7353 = !DILocation(line: 2229, column: 4, scope: !7348)
!7354 = !DILocation(line: 2230, column: 7, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2230, column: 7)
!7356 = !DILocation(line: 2230, column: 34, scope: !7355)
!7357 = !DILocation(line: 2230, column: 16, scope: !7355)
!7358 = !DILocation(line: 2230, column: 13, scope: !7355)
!7359 = !DILocation(line: 2230, column: 7, scope: !7336)
!7360 = !DILocation(line: 2231, column: 4, scope: !7355)
!7361 = !DILocation(line: 2232, column: 7, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 2232, column: 7)
!7363 = !DILocation(line: 2232, column: 24, scope: !7362)
!7364 = !DILocation(line: 2232, column: 13, scope: !7362)
!7365 = !DILocation(line: 2232, column: 10, scope: !7362)
!7366 = !DILocation(line: 2232, column: 7, scope: !7336)
!7367 = !DILocation(line: 2233, column: 4, scope: !7362)
!7368 = !DILocation(line: 2235, column: 29, scope: !7336)
!7369 = !DILocation(line: 2235, column: 34, scope: !7336)
!7370 = !DILocation(line: 2235, column: 10, scope: !7336)
!7371 = !DILocation(line: 2235, column: 3, scope: !7336)
!7372 = !DILocation(line: 2223, column: 46, scope: !7332)
!7373 = !DILocation(line: 2223, column: 2, scope: !7332)
!7374 = distinct !{!7374, !7334, !7375}
!7375 = !DILocation(line: 2236, column: 2, scope: !7329)
!7376 = !DILocation(line: 2238, column: 2, scope: !7313)
!7377 = !DILocation(line: 2239, column: 1, scope: !7313)
!7378 = distinct !DISubprogram(name: "mode_is_rb", scope: !3, file: !3, line: 2197, type: !7379, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!559, !594}
!7381 = !DILocalVariable(name: "mode", arg: 1, scope: !7378, file: !3, line: 2197, type: !594)
!7382 = !DILocation(line: 2197, column: 43, scope: !7378)
!7383 = !DILocation(line: 2199, column: 10, scope: !7378)
!7384 = !DILocation(line: 2199, column: 16, scope: !7378)
!7385 = !DILocation(line: 2199, column: 25, scope: !7378)
!7386 = !DILocation(line: 2199, column: 31, scope: !7378)
!7387 = !DILocation(line: 2199, column: 23, scope: !7378)
!7388 = !DILocation(line: 2199, column: 40, scope: !7378)
!7389 = !DILocation(line: 2199, column: 48, scope: !7378)
!7390 = !DILocation(line: 2200, column: 10, scope: !7378)
!7391 = !DILocation(line: 2200, column: 16, scope: !7378)
!7392 = !DILocation(line: 2200, column: 28, scope: !7378)
!7393 = !DILocation(line: 2200, column: 34, scope: !7378)
!7394 = !DILocation(line: 2200, column: 26, scope: !7378)
!7395 = !DILocation(line: 2200, column: 43, scope: !7378)
!7396 = !DILocation(line: 2200, column: 50, scope: !7378)
!7397 = !DILocation(line: 2201, column: 10, scope: !7378)
!7398 = !DILocation(line: 2201, column: 16, scope: !7378)
!7399 = !DILocation(line: 2201, column: 28, scope: !7378)
!7400 = !DILocation(line: 2201, column: 34, scope: !7378)
!7401 = !DILocation(line: 2201, column: 26, scope: !7378)
!7402 = !DILocation(line: 2201, column: 46, scope: !7378)
!7403 = !DILocation(line: 2201, column: 53, scope: !7378)
!7404 = !DILocation(line: 2202, column: 10, scope: !7378)
!7405 = !DILocation(line: 2202, column: 16, scope: !7378)
!7406 = !DILocation(line: 2202, column: 30, scope: !7378)
!7407 = !DILocation(line: 2202, column: 36, scope: !7378)
!7408 = !DILocation(line: 2202, column: 28, scope: !7378)
!7409 = !DILocation(line: 2202, column: 45, scope: !7378)
!7410 = !DILocation(line: 0, scope: !7378)
!7411 = !DILocation(line: 2199, column: 2, scope: !7378)
!7412 = distinct !DISubprogram(name: "drm_mode_fixup_1366x768", scope: !3, file: !3, line: 2822, type: !7413, scopeLine: 2823, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7413 = !DISubroutineType(types: !7414)
!7414 = !{null, !525}
!7415 = !DILocalVariable(name: "mode", arg: 1, scope: !7412, file: !3, line: 2822, type: !525)
!7416 = !DILocation(line: 2822, column: 55, scope: !7412)
!7417 = !DILocation(line: 2824, column: 6, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 2824, column: 6)
!7419 = !DILocation(line: 2824, column: 12, scope: !7418)
!7420 = !DILocation(line: 2824, column: 21, scope: !7418)
!7421 = !DILocation(line: 2824, column: 29, scope: !7418)
!7422 = !DILocation(line: 2824, column: 32, scope: !7418)
!7423 = !DILocation(line: 2824, column: 38, scope: !7418)
!7424 = !DILocation(line: 2824, column: 47, scope: !7418)
!7425 = !DILocation(line: 2824, column: 6, scope: !7412)
!7426 = !DILocation(line: 2825, column: 3, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2824, column: 55)
!7428 = !DILocation(line: 2825, column: 9, scope: !7427)
!7429 = !DILocation(line: 2825, column: 18, scope: !7427)
!7430 = !DILocation(line: 2826, column: 3, scope: !7427)
!7431 = !DILocation(line: 2826, column: 9, scope: !7427)
!7432 = !DILocation(line: 2826, column: 20, scope: !7427)
!7433 = !DILocation(line: 2827, column: 3, scope: !7427)
!7434 = !DILocation(line: 2827, column: 9, scope: !7427)
!7435 = !DILocation(line: 2827, column: 18, scope: !7427)
!7436 = !DILocation(line: 2828, column: 21, scope: !7427)
!7437 = !DILocation(line: 2828, column: 3, scope: !7427)
!7438 = !DILocation(line: 2829, column: 2, scope: !7427)
!7439 = !DILocation(line: 2830, column: 1, scope: !7412)
!7440 = distinct !DISubprogram(name: "drm_match_cea_mode", scope: !3, file: !3, line: 3445, type: !7441, scopeLine: 3446, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7441 = !DISubroutineType(types: !7442)
!7442 = !{!375, !594}
!7443 = !DILocalVariable(name: "vic", arg: 1, scope: !7444, file: !3, line: 3321, type: !375)
!7444 = distinct !DISubprogram(name: "cea_mode_for_vic", scope: !3, file: !3, line: 3321, type: !7445, scopeLine: 3322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7445 = !DISubroutineType(types: !7446)
!7446 = !{!594, !375}
!7447 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !7448)
!7448 = distinct !DILocation(line: 3457, column: 39, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7450, file: !3, line: 3456, column: 63)
!7450 = distinct !DILexicalBlock(scope: !7451, file: !3, line: 3456, column: 2)
!7451 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 3456, column: 2)
!7452 = !DILocalVariable(name: "to_match", arg: 1, scope: !7440, file: !3, line: 3445, type: !594)
!7453 = !DILocation(line: 3445, column: 54, scope: !7440)
!7454 = !DILocalVariable(name: "match_flags", scope: !7440, file: !3, line: 3447, type: !7)
!7455 = !DILocation(line: 3447, column: 15, scope: !7440)
!7456 = !DILocalVariable(name: "vic", scope: !7440, file: !3, line: 3448, type: !375)
!7457 = !DILocation(line: 3448, column: 5, scope: !7440)
!7458 = !DILocation(line: 3450, column: 7, scope: !7459)
!7459 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 3450, column: 6)
!7460 = !DILocation(line: 3450, column: 17, scope: !7459)
!7461 = !DILocation(line: 3450, column: 6, scope: !7440)
!7462 = !DILocation(line: 3451, column: 3, scope: !7459)
!7463 = !DILocation(line: 3453, column: 6, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7440, file: !3, line: 3453, column: 6)
!7465 = !DILocation(line: 3453, column: 16, scope: !7464)
!7466 = !DILocation(line: 3453, column: 6, scope: !7440)
!7467 = !DILocation(line: 3454, column: 15, scope: !7464)
!7468 = !DILocation(line: 3454, column: 3, scope: !7464)
!7469 = !DILocation(line: 3456, column: 11, scope: !7451)
!7470 = !DILocation(line: 3456, column: 7, scope: !7451)
!7471 = !DILocation(line: 3456, column: 16, scope: !7450)
!7472 = !DILocation(line: 3456, column: 22, scope: !7450)
!7473 = !DILocation(line: 3456, column: 20, scope: !7450)
!7474 = !DILocation(line: 3456, column: 2, scope: !7451)
!7475 = !DILocalVariable(name: "cea_mode", scope: !7449, file: !3, line: 3457, type: !526)
!7476 = !DILocation(line: 3457, column: 27, scope: !7449)
!7477 = !DILocation(line: 3457, column: 56, scope: !7449)
!7478 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !7448)
!7479 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 3326, column: 6)
!7480 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !7448)
!7481 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !7448)
!7482 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !7448)
!7483 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !7448)
!7484 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !7448)
!7485 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !7448)
!7486 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !7448)
!7487 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !7448)
!7488 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !7448)
!7489 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !7448)
!7490 = distinct !DILexicalBlock(scope: !7444, file: !3, line: 3328, column: 6)
!7491 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !7448)
!7492 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !7448)
!7493 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !7448)
!7494 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !7448)
!7495 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !7448)
!7496 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !7448)
!7497 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !7448)
!7498 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !7448)
!7499 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !7448)
!7500 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !7448)
!7501 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !7448)
!7502 = !DILocation(line: 3457, column: 38, scope: !7449)
!7503 = !DILocalVariable(name: "clock1", scope: !7449, file: !3, line: 3458, type: !7)
!7504 = !DILocation(line: 3458, column: 16, scope: !7449)
!7505 = !DILocalVariable(name: "clock2", scope: !7449, file: !3, line: 3458, type: !7)
!7506 = !DILocation(line: 3458, column: 24, scope: !7449)
!7507 = !DILocation(line: 3461, column: 21, scope: !7449)
!7508 = !DILocation(line: 3461, column: 10, scope: !7449)
!7509 = !DILocation(line: 3462, column: 12, scope: !7449)
!7510 = !DILocation(line: 3462, column: 10, scope: !7449)
!7511 = !DILocation(line: 3464, column: 7, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 3464, column: 7)
!7513 = !DILocation(line: 3464, column: 37, scope: !7512)
!7514 = !DILocation(line: 3464, column: 34, scope: !7512)
!7515 = !DILocation(line: 3464, column: 55, scope: !7512)
!7516 = !DILocation(line: 3465, column: 7, scope: !7512)
!7517 = !DILocation(line: 3465, column: 37, scope: !7512)
!7518 = !DILocation(line: 3465, column: 34, scope: !7512)
!7519 = !DILocation(line: 3464, column: 7, scope: !7449)
!7520 = !DILocation(line: 3466, column: 4, scope: !7512)
!7521 = !DILocation(line: 3468, column: 3, scope: !7449)
!7522 = !DILocation(line: 3469, column: 23, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 3469, column: 8)
!7524 = distinct !DILexicalBlock(scope: !7449, file: !3, line: 3468, column: 6)
!7525 = !DILocation(line: 3469, column: 44, scope: !7523)
!7526 = !DILocation(line: 3469, column: 8, scope: !7523)
!7527 = !DILocation(line: 3469, column: 8, scope: !7524)
!7528 = !DILocation(line: 3470, column: 12, scope: !7523)
!7529 = !DILocation(line: 3470, column: 5, scope: !7523)
!7530 = !DILocation(line: 3471, column: 3, scope: !7524)
!7531 = !DILocation(line: 3471, column: 39, scope: !7449)
!7532 = !DILocation(line: 3471, column: 12, scope: !7449)
!7533 = distinct !{!7533, !7521, !7534}
!7534 = !DILocation(line: 3471, column: 54, scope: !7449)
!7535 = !DILocation(line: 3472, column: 2, scope: !7449)
!7536 = !DILocation(line: 3456, column: 57, scope: !7450)
!7537 = !DILocation(line: 3456, column: 44, scope: !7450)
!7538 = !DILocation(line: 3456, column: 42, scope: !7450)
!7539 = !DILocation(line: 3456, column: 2, scope: !7450)
!7540 = distinct !{!7540, !7474, !7541}
!7541 = !DILocation(line: 3472, column: 2, scope: !7451)
!7542 = !DILocation(line: 3474, column: 2, scope: !7440)
!7543 = !DILocation(line: 3475, column: 1, scope: !7440)
!7544 = distinct !DISubprogram(name: "cea_num_vics", scope: !3, file: !3, line: 3333, type: !7545, scopeLine: 3334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7545 = !DISubroutineType(types: !7546)
!7546 = !{!375}
!7547 = !DILocation(line: 3335, column: 2, scope: !7544)
!7548 = distinct !DISubprogram(name: "cea_mode_alternate_clock", scope: !3, file: !3, line: 3350, type: !7549, scopeLine: 3351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7549 = !DISubroutineType(types: !7550)
!7550 = !{!7, !594}
!7551 = !DILocalVariable(name: "cea_mode", arg: 1, scope: !7548, file: !3, line: 3350, type: !594)
!7552 = !DILocation(line: 3350, column: 57, scope: !7548)
!7553 = !DILocalVariable(name: "clock", scope: !7548, file: !3, line: 3352, type: !7)
!7554 = !DILocation(line: 3352, column: 15, scope: !7548)
!7555 = !DILocation(line: 3352, column: 23, scope: !7548)
!7556 = !DILocation(line: 3352, column: 33, scope: !7548)
!7557 = !DILocation(line: 3354, column: 24, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 3354, column: 6)
!7559 = !DILocation(line: 3354, column: 6, scope: !7558)
!7560 = !DILocation(line: 3354, column: 34, scope: !7558)
!7561 = !DILocation(line: 3354, column: 38, scope: !7558)
!7562 = !DILocation(line: 3354, column: 6, scope: !7548)
!7563 = !DILocation(line: 3355, column: 10, scope: !7558)
!7564 = !DILocation(line: 3355, column: 3, scope: !7558)
!7565 = !DILocation(line: 3362, column: 6, scope: !7566)
!7566 = distinct !DILexicalBlock(scope: !7548, file: !3, line: 3362, column: 6)
!7567 = !DILocation(line: 3362, column: 16, scope: !7566)
!7568 = !DILocation(line: 3362, column: 25, scope: !7566)
!7569 = !DILocation(line: 3362, column: 32, scope: !7566)
!7570 = !DILocation(line: 3362, column: 35, scope: !7566)
!7571 = !DILocation(line: 3362, column: 45, scope: !7566)
!7572 = !DILocation(line: 3362, column: 54, scope: !7566)
!7573 = !DILocation(line: 3362, column: 6, scope: !7548)
!7574 = !DILocalVariable(name: "__x", scope: !7575, file: !3, line: 3363, type: !7)
!7575 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 3363, column: 11)
!7576 = !DILocation(line: 3363, column: 11, scope: !7575)
!7577 = !DILocalVariable(name: "__d", scope: !7575, file: !3, line: 3363, type: !139)
!7578 = !DILocation(line: 3363, column: 9, scope: !7566)
!7579 = !DILocation(line: 3363, column: 3, scope: !7566)
!7580 = !DILocalVariable(name: "__x", scope: !7581, file: !3, line: 3365, type: !7)
!7581 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 3365, column: 11)
!7582 = !DILocation(line: 3365, column: 11, scope: !7581)
!7583 = !DILocalVariable(name: "__d", scope: !7581, file: !3, line: 3365, type: !139)
!7584 = !DILocation(line: 3365, column: 9, scope: !7566)
!7585 = !DILocation(line: 3367, column: 9, scope: !7548)
!7586 = !DILocation(line: 3367, column: 2, scope: !7548)
!7587 = !DILocation(line: 3368, column: 1, scope: !7548)
!7588 = distinct !DISubprogram(name: "cea_mode_alternate_timings", scope: !3, file: !3, line: 3371, type: !7589, scopeLine: 3372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7589 = !DISubroutineType(types: !7590)
!7590 = !{!559, !375, !525}
!7591 = !DILocalVariable(name: "vic", arg: 1, scope: !7588, file: !3, line: 3371, type: !375)
!7592 = !DILocation(line: 3371, column: 31, scope: !7588)
!7593 = !DILocalVariable(name: "mode", arg: 2, scope: !7588, file: !3, line: 3371, type: !525)
!7594 = !DILocation(line: 3371, column: 61, scope: !7588)
!7595 = !DILocation(line: 3382, column: 2, scope: !7588)
!7596 = !DILocation(line: 3382, column: 2, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3382, column: 2)
!7598 = !DILocation(line: 3391, column: 8, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3391, column: 6)
!7600 = !DILocation(line: 3391, column: 12, scope: !7599)
!7601 = !DILocation(line: 3391, column: 17, scope: !7599)
!7602 = !DILocation(line: 3391, column: 20, scope: !7599)
!7603 = !DILocation(line: 3391, column: 24, scope: !7599)
!7604 = !DILocation(line: 3391, column: 29, scope: !7599)
!7605 = !DILocation(line: 3392, column: 8, scope: !7599)
!7606 = !DILocation(line: 3392, column: 12, scope: !7599)
!7607 = !DILocation(line: 3392, column: 18, scope: !7599)
!7608 = !DILocation(line: 3392, column: 21, scope: !7599)
!7609 = !DILocation(line: 3392, column: 25, scope: !7599)
!7610 = !DILocation(line: 3392, column: 32, scope: !7599)
!7611 = !DILocation(line: 3392, column: 35, scope: !7599)
!7612 = !DILocation(line: 3392, column: 41, scope: !7599)
!7613 = !DILocation(line: 3392, column: 48, scope: !7599)
!7614 = !DILocation(line: 3392, column: 55, scope: !7599)
!7615 = !DILocation(line: 3393, column: 8, scope: !7599)
!7616 = !DILocation(line: 3393, column: 12, scope: !7599)
!7617 = !DILocation(line: 3393, column: 18, scope: !7599)
!7618 = !DILocation(line: 3393, column: 21, scope: !7599)
!7619 = !DILocation(line: 3393, column: 25, scope: !7599)
!7620 = !DILocation(line: 3393, column: 31, scope: !7599)
!7621 = !DILocation(line: 3394, column: 8, scope: !7599)
!7622 = !DILocation(line: 3394, column: 12, scope: !7599)
!7623 = !DILocation(line: 3394, column: 18, scope: !7599)
!7624 = !DILocation(line: 3394, column: 21, scope: !7599)
!7625 = !DILocation(line: 3394, column: 25, scope: !7599)
!7626 = !DILocation(line: 3394, column: 32, scope: !7599)
!7627 = !DILocation(line: 3394, column: 35, scope: !7599)
!7628 = !DILocation(line: 3394, column: 41, scope: !7599)
!7629 = !DILocation(line: 3394, column: 48, scope: !7599)
!7630 = !DILocation(line: 3391, column: 6, scope: !7588)
!7631 = !DILocation(line: 3395, column: 3, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 3394, column: 56)
!7633 = !DILocation(line: 3395, column: 9, scope: !7632)
!7634 = !DILocation(line: 3395, column: 20, scope: !7632)
!7635 = !DILocation(line: 3396, column: 3, scope: !7632)
!7636 = !DILocation(line: 3396, column: 9, scope: !7632)
!7637 = !DILocation(line: 3396, column: 18, scope: !7632)
!7638 = !DILocation(line: 3397, column: 3, scope: !7632)
!7639 = !DILocation(line: 3397, column: 9, scope: !7632)
!7640 = !DILocation(line: 3397, column: 15, scope: !7632)
!7641 = !DILocation(line: 3399, column: 3, scope: !7632)
!7642 = !DILocation(line: 3402, column: 2, scope: !7588)
!7643 = !DILocation(line: 3403, column: 1, scope: !7588)
!7644 = distinct !DISubprogram(name: "cea_next_vic", scope: !3, file: !3, line: 3338, type: !7645, scopeLine: 3339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7645 = !DISubroutineType(types: !7646)
!7646 = !{!375, !375}
!7647 = !DILocalVariable(name: "vic", arg: 1, scope: !7644, file: !3, line: 3338, type: !375)
!7648 = !DILocation(line: 3338, column: 27, scope: !7644)
!7649 = !DILocation(line: 3340, column: 6, scope: !7650)
!7650 = distinct !DILexicalBlock(scope: !7644, file: !3, line: 3340, column: 6)
!7651 = !DILocation(line: 3340, column: 12, scope: !7650)
!7652 = !DILocation(line: 3340, column: 6, scope: !7644)
!7653 = !DILocation(line: 3341, column: 7, scope: !7650)
!7654 = !DILocation(line: 3341, column: 3, scope: !7650)
!7655 = !DILocation(line: 3342, column: 9, scope: !7644)
!7656 = !DILocation(line: 3342, column: 2, scope: !7644)
!7657 = distinct !DISubprogram(name: "drm_display_mode_from_cea_vic", scope: !3, file: !3, line: 3751, type: !7658, scopeLine: 3753, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7658 = !DISubroutineType(types: !7659)
!7659 = !{!525, !1166, !375}
!7660 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !7661)
!7661 = distinct !DILocation(line: 3757, column: 13, scope: !7657)
!7662 = !DILocalVariable(name: "dev", arg: 1, scope: !7657, file: !3, line: 3751, type: !1166)
!7663 = !DILocation(line: 3751, column: 50, scope: !7657)
!7664 = !DILocalVariable(name: "video_code", arg: 2, scope: !7657, file: !3, line: 3752, type: !375)
!7665 = !DILocation(line: 3752, column: 13, scope: !7657)
!7666 = !DILocalVariable(name: "cea_mode", scope: !7657, file: !3, line: 3754, type: !594)
!7667 = !DILocation(line: 3754, column: 33, scope: !7657)
!7668 = !DILocalVariable(name: "newmode", scope: !7657, file: !3, line: 3755, type: !525)
!7669 = !DILocation(line: 3755, column: 27, scope: !7657)
!7670 = !DILocation(line: 3757, column: 30, scope: !7657)
!7671 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !7661)
!7672 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !7661)
!7673 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !7661)
!7674 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !7661)
!7675 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !7661)
!7676 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !7661)
!7677 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !7661)
!7678 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !7661)
!7679 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !7661)
!7680 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !7661)
!7681 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !7661)
!7682 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !7661)
!7683 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !7661)
!7684 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !7661)
!7685 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !7661)
!7686 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !7661)
!7687 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !7661)
!7688 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !7661)
!7689 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !7661)
!7690 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !7661)
!7691 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !7661)
!7692 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !7661)
!7693 = !DILocation(line: 3757, column: 11, scope: !7657)
!7694 = !DILocation(line: 3758, column: 7, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 3758, column: 6)
!7696 = !DILocation(line: 3758, column: 6, scope: !7657)
!7697 = !DILocation(line: 3759, column: 3, scope: !7695)
!7698 = !DILocation(line: 3761, column: 31, scope: !7657)
!7699 = !DILocation(line: 3761, column: 36, scope: !7657)
!7700 = !DILocation(line: 3761, column: 12, scope: !7657)
!7701 = !DILocation(line: 3761, column: 10, scope: !7657)
!7702 = !DILocation(line: 3762, column: 7, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7657, file: !3, line: 3762, column: 6)
!7704 = !DILocation(line: 3762, column: 6, scope: !7657)
!7705 = !DILocation(line: 3763, column: 3, scope: !7703)
!7706 = !DILocation(line: 3765, column: 9, scope: !7657)
!7707 = !DILocation(line: 3765, column: 2, scope: !7657)
!7708 = !DILocation(line: 3766, column: 1, scope: !7657)
!7709 = distinct !DISubprogram(name: "drm_edid_get_monitor_name", scope: !3, file: !3, line: 4462, type: !7710, scopeLine: 4463, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7710 = !DISubroutineType(types: !7711)
!7711 = !{null, !369, !590, !139}
!7712 = !DILocalVariable(name: "edid", arg: 1, scope: !7709, file: !3, line: 4462, type: !369)
!7713 = !DILocation(line: 4462, column: 45, scope: !7709)
!7714 = !DILocalVariable(name: "name", arg: 2, scope: !7709, file: !3, line: 4462, type: !590)
!7715 = !DILocation(line: 4462, column: 57, scope: !7709)
!7716 = !DILocalVariable(name: "bufsize", arg: 3, scope: !7709, file: !3, line: 4462, type: !139)
!7717 = !DILocation(line: 4462, column: 67, scope: !7709)
!7718 = !DILocalVariable(name: "name_length", scope: !7709, file: !3, line: 4464, type: !139)
!7719 = !DILocation(line: 4464, column: 6, scope: !7709)
!7720 = !DILocalVariable(name: "buf", scope: !7709, file: !3, line: 4465, type: !7721)
!7721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 104, elements: !466)
!7722 = !DILocation(line: 4465, column: 7, scope: !7709)
!7723 = !DILocation(line: 4467, column: 6, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 4467, column: 6)
!7725 = !DILocation(line: 4467, column: 14, scope: !7724)
!7726 = !DILocation(line: 4467, column: 6, scope: !7709)
!7727 = !DILocation(line: 4468, column: 3, scope: !7724)
!7728 = !DILocalVariable(name: "__UNIQUE_ID___x276", scope: !7729, file: !3, line: 4470, type: !139)
!7729 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 4470, column: 16)
!7730 = !DILocation(line: 4470, column: 16, scope: !7729)
!7731 = !DILocalVariable(name: "__UNIQUE_ID___y277", scope: !7729, file: !3, line: 4470, type: !139)
!7732 = !DILocation(line: 4470, column: 14, scope: !7709)
!7733 = !DILocation(line: 4471, column: 9, scope: !7709)
!7734 = !DILocation(line: 4471, column: 2, scope: !7709)
!7735 = !DILocation(line: 4471, column: 20, scope: !7709)
!7736 = !DILocation(line: 4472, column: 2, scope: !7709)
!7737 = !DILocation(line: 4472, column: 7, scope: !7709)
!7738 = !DILocation(line: 4472, column: 20, scope: !7709)
!7739 = !DILocation(line: 4473, column: 1, scope: !7709)
!7740 = distinct !DISubprogram(name: "get_monitor_name", scope: !3, file: !3, line: 4436, type: !7741, scopeLine: 4437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7741 = !DISubroutineType(types: !7742)
!7742 = !{!139, !369, !590}
!7743 = !DILocalVariable(name: "edid", arg: 1, scope: !7740, file: !3, line: 4436, type: !369)
!7744 = !DILocation(line: 4436, column: 42, scope: !7740)
!7745 = !DILocalVariable(name: "name", arg: 2, scope: !7740, file: !3, line: 4436, type: !590)
!7746 = !DILocation(line: 4436, column: 53, scope: !7740)
!7747 = !DILocalVariable(name: "edid_name", scope: !7740, file: !3, line: 4438, type: !590)
!7748 = !DILocation(line: 4438, column: 8, scope: !7740)
!7749 = !DILocalVariable(name: "mnl", scope: !7740, file: !3, line: 4439, type: !139)
!7750 = !DILocation(line: 4439, column: 6, scope: !7740)
!7751 = !DILocation(line: 4441, column: 7, scope: !7752)
!7752 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 4441, column: 6)
!7753 = !DILocation(line: 4441, column: 12, scope: !7752)
!7754 = !DILocation(line: 4441, column: 16, scope: !7752)
!7755 = !DILocation(line: 4441, column: 6, scope: !7740)
!7756 = !DILocation(line: 4442, column: 3, scope: !7752)
!7757 = !DILocation(line: 4444, column: 36, scope: !7740)
!7758 = !DILocation(line: 4444, column: 30, scope: !7740)
!7759 = !DILocation(line: 4444, column: 56, scope: !7740)
!7760 = !DILocation(line: 4444, column: 2, scope: !7740)
!7761 = !DILocation(line: 4445, column: 11, scope: !7762)
!7762 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 4445, column: 2)
!7763 = !DILocation(line: 4445, column: 7, scope: !7762)
!7764 = !DILocation(line: 4445, column: 16, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7762, file: !3, line: 4445, column: 2)
!7766 = !DILocation(line: 4445, column: 26, scope: !7765)
!7767 = !DILocation(line: 4445, column: 29, scope: !7765)
!7768 = !DILocation(line: 4445, column: 33, scope: !7765)
!7769 = !DILocation(line: 0, scope: !7765)
!7770 = !DILocation(line: 4445, column: 2, scope: !7762)
!7771 = !DILocation(line: 4446, column: 7, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 4446, column: 7)
!7773 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 4445, column: 46)
!7774 = !DILocation(line: 4446, column: 17, scope: !7772)
!7775 = !DILocation(line: 4446, column: 22, scope: !7772)
!7776 = !DILocation(line: 4446, column: 7, scope: !7773)
!7777 = !DILocation(line: 4447, column: 4, scope: !7772)
!7778 = !DILocation(line: 4449, column: 15, scope: !7773)
!7779 = !DILocation(line: 4449, column: 25, scope: !7773)
!7780 = !DILocation(line: 4449, column: 3, scope: !7773)
!7781 = !DILocation(line: 4449, column: 8, scope: !7773)
!7782 = !DILocation(line: 4449, column: 13, scope: !7773)
!7783 = !DILocation(line: 4450, column: 2, scope: !7773)
!7784 = !DILocation(line: 4445, column: 42, scope: !7765)
!7785 = !DILocation(line: 4445, column: 2, scope: !7765)
!7786 = distinct !{!7786, !7770, !7787}
!7787 = !DILocation(line: 4450, column: 2, scope: !7762)
!7788 = !DILocation(line: 4452, column: 9, scope: !7740)
!7789 = !DILocation(line: 4452, column: 2, scope: !7740)
!7790 = !DILocation(line: 4453, column: 1, scope: !7740)
!7791 = distinct !DISubprogram(name: "drm_edid_to_sad", scope: !3, file: !3, line: 4592, type: !7792, scopeLine: 4593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7792 = !DISubroutineType(types: !7793)
!7793 = !{!139, !369, !7794}
!7794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7795, size: 64)
!7795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7796, size: 64)
!7796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cea_sad", file: !371, line: 333, size: 32, elements: !7797)
!7797 = !{!7798, !7799, !7800, !7801}
!7798 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !7796, file: !371, line: 334, baseType: !375, size: 8)
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !7796, file: !371, line: 335, baseType: !375, size: 8, offset: 8)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !7796, file: !371, line: 336, baseType: !375, size: 8, offset: 16)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "byte2", scope: !7796, file: !371, line: 337, baseType: !375, size: 8, offset: 24)
!7802 = !DILocalVariable(name: "edid", arg: 1, scope: !7791, file: !3, line: 4592, type: !369)
!7803 = !DILocation(line: 4592, column: 34, scope: !7791)
!7804 = !DILocalVariable(name: "sads", arg: 2, scope: !7791, file: !3, line: 4592, type: !7794)
!7805 = !DILocation(line: 4592, column: 57, scope: !7791)
!7806 = !DILocalVariable(name: "count", scope: !7791, file: !3, line: 4594, type: !139)
!7807 = !DILocation(line: 4594, column: 6, scope: !7791)
!7808 = !DILocalVariable(name: "i", scope: !7791, file: !3, line: 4595, type: !139)
!7809 = !DILocation(line: 4595, column: 6, scope: !7791)
!7810 = !DILocalVariable(name: "start", scope: !7791, file: !3, line: 4595, type: !139)
!7811 = !DILocation(line: 4595, column: 9, scope: !7791)
!7812 = !DILocalVariable(name: "end", scope: !7791, file: !3, line: 4595, type: !139)
!7813 = !DILocation(line: 4595, column: 16, scope: !7791)
!7814 = !DILocalVariable(name: "dbl", scope: !7791, file: !3, line: 4595, type: !139)
!7815 = !DILocation(line: 4595, column: 21, scope: !7791)
!7816 = !DILocalVariable(name: "cea", scope: !7791, file: !3, line: 4596, type: !522)
!7817 = !DILocation(line: 4596, column: 6, scope: !7791)
!7818 = !DILocation(line: 4598, column: 31, scope: !7791)
!7819 = !DILocation(line: 4598, column: 8, scope: !7791)
!7820 = !DILocation(line: 4598, column: 6, scope: !7791)
!7821 = !DILocation(line: 4599, column: 7, scope: !7822)
!7822 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 4599, column: 6)
!7823 = !DILocation(line: 4599, column: 6, scope: !7791)
!7824 = !DILocation(line: 4600, column: 3, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 4599, column: 12)
!7826 = !DILocation(line: 4601, column: 3, scope: !7825)
!7827 = !DILocation(line: 4604, column: 19, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 4604, column: 6)
!7829 = !DILocation(line: 4604, column: 6, scope: !7828)
!7830 = !DILocation(line: 4604, column: 24, scope: !7828)
!7831 = !DILocation(line: 4604, column: 6, scope: !7791)
!7832 = !DILocation(line: 4605, column: 3, scope: !7833)
!7833 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 4604, column: 29)
!7834 = !DILocation(line: 4606, column: 3, scope: !7833)
!7835 = !DILocation(line: 4609, column: 21, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 4609, column: 6)
!7837 = !DILocation(line: 4609, column: 6, scope: !7836)
!7838 = !DILocation(line: 4609, column: 6, scope: !7791)
!7839 = !DILocation(line: 4610, column: 3, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 4609, column: 41)
!7841 = !DILocation(line: 4611, column: 3, scope: !7840)
!7842 = !DILocation(line: 4614, column: 2, scope: !7843)
!7843 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 4614, column: 2)
!7844 = !DILocation(line: 4614, column: 2, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 4614, column: 2)
!7846 = !DILocation(line: 0, scope: !7845)
!7847 = !DILocalVariable(name: "db", scope: !7848, file: !3, line: 4615, type: !522)
!7848 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 4614, column: 38)
!7849 = !DILocation(line: 4615, column: 7, scope: !7848)
!7850 = !DILocation(line: 4615, column: 13, scope: !7848)
!7851 = !DILocation(line: 4615, column: 17, scope: !7848)
!7852 = !DILocation(line: 4617, column: 18, scope: !7853)
!7853 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 4617, column: 7)
!7854 = !DILocation(line: 4617, column: 7, scope: !7853)
!7855 = !DILocation(line: 4617, column: 22, scope: !7853)
!7856 = !DILocation(line: 4617, column: 7, scope: !7848)
!7857 = !DILocalVariable(name: "j", scope: !7858, file: !3, line: 4618, type: !139)
!7858 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 4617, column: 38)
!7859 = !DILocation(line: 4618, column: 8, scope: !7858)
!7860 = !DILocation(line: 4620, column: 29, scope: !7858)
!7861 = !DILocation(line: 4620, column: 10, scope: !7858)
!7862 = !DILocation(line: 4620, column: 8, scope: !7858)
!7863 = !DILocation(line: 4622, column: 12, scope: !7858)
!7864 = !DILocation(line: 4622, column: 16, scope: !7858)
!7865 = !DILocation(line: 4622, column: 10, scope: !7858)
!7866 = !DILocation(line: 4623, column: 20, scope: !7858)
!7867 = !DILocation(line: 4623, column: 12, scope: !7858)
!7868 = !DILocation(line: 4623, column: 5, scope: !7858)
!7869 = !DILocation(line: 4623, column: 10, scope: !7858)
!7870 = !DILocation(line: 4624, column: 10, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 4624, column: 8)
!7872 = !DILocation(line: 4624, column: 9, scope: !7871)
!7873 = !DILocation(line: 4624, column: 8, scope: !7858)
!7874 = !DILocation(line: 4625, column: 5, scope: !7871)
!7875 = !DILocation(line: 4626, column: 11, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 4626, column: 4)
!7877 = !DILocation(line: 4626, column: 9, scope: !7876)
!7878 = !DILocation(line: 4626, column: 16, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 4626, column: 4)
!7880 = !DILocation(line: 4626, column: 20, scope: !7879)
!7881 = !DILocation(line: 4626, column: 18, scope: !7879)
!7882 = !DILocation(line: 4626, column: 4, scope: !7876)
!7883 = !DILocalVariable(name: "sad", scope: !7884, file: !3, line: 4627, type: !522)
!7884 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 4626, column: 32)
!7885 = !DILocation(line: 4627, column: 9, scope: !7884)
!7886 = !DILocation(line: 4627, column: 16, scope: !7884)
!7887 = !DILocation(line: 4627, column: 23, scope: !7884)
!7888 = !DILocation(line: 4627, column: 25, scope: !7884)
!7889 = !DILocation(line: 4627, column: 21, scope: !7884)
!7890 = !DILocation(line: 4629, column: 26, scope: !7884)
!7891 = !DILocation(line: 4629, column: 33, scope: !7884)
!7892 = !DILocation(line: 4629, column: 41, scope: !7884)
!7893 = !DILocation(line: 4629, column: 25, scope: !7884)
!7894 = !DILocation(line: 4629, column: 7, scope: !7884)
!7895 = !DILocation(line: 4629, column: 6, scope: !7884)
!7896 = !DILocation(line: 4629, column: 13, scope: !7884)
!7897 = !DILocation(line: 4629, column: 5, scope: !7884)
!7898 = !DILocation(line: 4629, column: 16, scope: !7884)
!7899 = !DILocation(line: 4629, column: 23, scope: !7884)
!7900 = !DILocation(line: 4630, column: 27, scope: !7884)
!7901 = !DILocation(line: 4630, column: 34, scope: !7884)
!7902 = !DILocation(line: 4630, column: 7, scope: !7884)
!7903 = !DILocation(line: 4630, column: 6, scope: !7884)
!7904 = !DILocation(line: 4630, column: 13, scope: !7884)
!7905 = !DILocation(line: 4630, column: 5, scope: !7884)
!7906 = !DILocation(line: 4630, column: 16, scope: !7884)
!7907 = !DILocation(line: 4630, column: 25, scope: !7884)
!7908 = !DILocation(line: 4631, column: 23, scope: !7884)
!7909 = !DILocation(line: 4631, column: 30, scope: !7884)
!7910 = !DILocation(line: 4631, column: 7, scope: !7884)
!7911 = !DILocation(line: 4631, column: 6, scope: !7884)
!7912 = !DILocation(line: 4631, column: 13, scope: !7884)
!7913 = !DILocation(line: 4631, column: 5, scope: !7884)
!7914 = !DILocation(line: 4631, column: 16, scope: !7884)
!7915 = !DILocation(line: 4631, column: 21, scope: !7884)
!7916 = !DILocation(line: 4632, column: 24, scope: !7884)
!7917 = !DILocation(line: 4632, column: 7, scope: !7884)
!7918 = !DILocation(line: 4632, column: 6, scope: !7884)
!7919 = !DILocation(line: 4632, column: 13, scope: !7884)
!7920 = !DILocation(line: 4632, column: 5, scope: !7884)
!7921 = !DILocation(line: 4632, column: 16, scope: !7884)
!7922 = !DILocation(line: 4632, column: 22, scope: !7884)
!7923 = !DILocation(line: 4633, column: 4, scope: !7884)
!7924 = !DILocation(line: 4626, column: 28, scope: !7879)
!7925 = !DILocation(line: 4626, column: 4, scope: !7879)
!7926 = distinct !{!7926, !7882, !7927}
!7927 = !DILocation(line: 4633, column: 4, scope: !7876)
!7928 = !DILocation(line: 4634, column: 4, scope: !7858)
!7929 = !DILocation(line: 4636, column: 2, scope: !7848)
!7930 = distinct !{!7930, !7842, !7931}
!7931 = !DILocation(line: 4636, column: 2, scope: !7843)
!7932 = !DILocation(line: 4638, column: 9, scope: !7791)
!7933 = !DILocation(line: 4638, column: 2, scope: !7791)
!7934 = !DILocation(line: 4639, column: 1, scope: !7791)
!7935 = distinct !DISubprogram(name: "drm_find_cea_extension", scope: !3, file: !3, line: 3288, type: !7936, scopeLine: 3289, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7936 = !DISubroutineType(types: !7937)
!7937 = !{!522, !842}
!7938 = !DILocalVariable(name: "edid", arg: 1, scope: !7935, file: !3, line: 3288, type: !842)
!7939 = !DILocation(line: 3288, column: 54, scope: !7935)
!7940 = !DILocalVariable(name: "length", scope: !7935, file: !3, line: 3290, type: !139)
!7941 = !DILocation(line: 3290, column: 6, scope: !7935)
!7942 = !DILocalVariable(name: "idx", scope: !7935, file: !3, line: 3290, type: !139)
!7943 = !DILocation(line: 3290, column: 14, scope: !7935)
!7944 = !DILocalVariable(name: "block", scope: !7935, file: !3, line: 3291, type: !579)
!7945 = !DILocation(line: 3291, column: 26, scope: !7935)
!7946 = !DILocalVariable(name: "cea", scope: !7935, file: !3, line: 3292, type: !522)
!7947 = !DILocation(line: 3292, column: 6, scope: !7935)
!7948 = !DILocalVariable(name: "displayid", scope: !7935, file: !3, line: 3293, type: !522)
!7949 = !DILocation(line: 3293, column: 6, scope: !7935)
!7950 = !DILocalVariable(name: "ext_index", scope: !7935, file: !3, line: 3294, type: !139)
!7951 = !DILocation(line: 3294, column: 6, scope: !7935)
!7952 = !DILocation(line: 3298, column: 12, scope: !7935)
!7953 = !DILocation(line: 3299, column: 32, scope: !7935)
!7954 = !DILocation(line: 3299, column: 8, scope: !7935)
!7955 = !DILocation(line: 3299, column: 6, scope: !7935)
!7956 = !DILocation(line: 3300, column: 6, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 3300, column: 6)
!7958 = !DILocation(line: 3300, column: 6, scope: !7935)
!7959 = !DILocation(line: 3301, column: 10, scope: !7957)
!7960 = !DILocation(line: 3301, column: 3, scope: !7957)
!7961 = !DILocation(line: 3304, column: 12, scope: !7935)
!7962 = !DILocation(line: 3305, column: 2, scope: !7935)
!7963 = !DILocation(line: 3306, column: 44, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 3305, column: 11)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 3305, column: 2)
!7966 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 3305, column: 2)
!7967 = !DILocation(line: 3306, column: 15, scope: !7964)
!7968 = !DILocation(line: 3306, column: 13, scope: !7964)
!7969 = !DILocation(line: 3308, column: 8, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3308, column: 7)
!7971 = !DILocation(line: 3308, column: 7, scope: !7964)
!7972 = !DILocation(line: 3309, column: 4, scope: !7970)
!7973 = !DILocation(line: 3311, column: 7, scope: !7964)
!7974 = !DILocation(line: 3312, column: 3, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7964, file: !3, line: 3312, column: 3)
!7976 = !DILocation(line: 3312, column: 3, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 3312, column: 3)
!7978 = !DILocation(line: 0, scope: !7977)
!7979 = !DILocation(line: 3313, column: 8, scope: !7980)
!7980 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 3313, column: 8)
!7981 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 3312, column: 56)
!7982 = !DILocation(line: 3313, column: 15, scope: !7980)
!7983 = !DILocation(line: 3313, column: 19, scope: !7980)
!7984 = !DILocation(line: 3313, column: 8, scope: !7981)
!7985 = !DILocation(line: 3314, column: 18, scope: !7980)
!7986 = !DILocation(line: 3314, column: 12, scope: !7980)
!7987 = !DILocation(line: 3314, column: 5, scope: !7980)
!7988 = !DILocation(line: 3315, column: 3, scope: !7981)
!7989 = distinct !{!7989, !7974, !7990}
!7990 = !DILocation(line: 3315, column: 3, scope: !7975)
!7991 = !DILocation(line: 3305, column: 2, scope: !7965)
!7992 = distinct !{!7992, !7993, !7994}
!7993 = !DILocation(line: 3305, column: 2, scope: !7966)
!7994 = !DILocation(line: 3316, column: 2, scope: !7966)
!7995 = !DILocation(line: 3319, column: 1, scope: !7935)
!7996 = distinct !DISubprogram(name: "cea_revision", scope: !3, file: !3, line: 4088, type: !808, scopeLine: 4089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!7997 = !DILocalVariable(name: "cea", arg: 1, scope: !7996, file: !3, line: 4088, type: !576)
!7998 = !DILocation(line: 4088, column: 24, scope: !7996)
!7999 = !DILocation(line: 4097, column: 9, scope: !7996)
!8000 = !DILocation(line: 4097, column: 2, scope: !7996)
!8001 = distinct !DISubprogram(name: "cea_db_offsets", scope: !3, file: !3, line: 4101, type: !8002, scopeLine: 4102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8002 = !DISubroutineType(types: !8003)
!8003 = !{!139, !576, !1655, !1655}
!8004 = !DILocalVariable(name: "cea", arg: 1, scope: !8001, file: !3, line: 4101, type: !576)
!8005 = !DILocation(line: 4101, column: 26, scope: !8001)
!8006 = !DILocalVariable(name: "start", arg: 2, scope: !8001, file: !3, line: 4101, type: !1655)
!8007 = !DILocation(line: 4101, column: 36, scope: !8001)
!8008 = !DILocalVariable(name: "end", arg: 3, scope: !8001, file: !3, line: 4101, type: !1655)
!8009 = !DILocation(line: 4101, column: 48, scope: !8001)
!8010 = !DILocation(line: 4120, column: 6, scope: !8011)
!8011 = distinct !DILexicalBlock(scope: !8001, file: !3, line: 4120, column: 6)
!8012 = !DILocation(line: 4120, column: 13, scope: !8011)
!8013 = !DILocation(line: 4120, column: 6, scope: !8001)
!8014 = !DILocation(line: 4125, column: 4, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 4120, column: 32)
!8016 = !DILocation(line: 4125, column: 10, scope: !8015)
!8017 = !DILocation(line: 4126, column: 11, scope: !8015)
!8018 = !DILocation(line: 4126, column: 10, scope: !8015)
!8019 = !DILocation(line: 4126, column: 19, scope: !8015)
!8020 = !DILocation(line: 4126, column: 17, scope: !8015)
!8021 = !DILocation(line: 4126, column: 4, scope: !8015)
!8022 = !DILocation(line: 4126, column: 8, scope: !8015)
!8023 = !DILocation(line: 4127, column: 2, scope: !8015)
!8024 = !DILocation(line: 4127, column: 13, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 4127, column: 13)
!8026 = !DILocation(line: 4127, column: 20, scope: !8025)
!8027 = !DILocation(line: 4127, column: 13, scope: !8011)
!8028 = !DILocation(line: 4129, column: 4, scope: !8029)
!8029 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 4127, column: 32)
!8030 = !DILocation(line: 4129, column: 10, scope: !8029)
!8031 = !DILocation(line: 4130, column: 10, scope: !8029)
!8032 = !DILocation(line: 4130, column: 4, scope: !8029)
!8033 = !DILocation(line: 4130, column: 8, scope: !8029)
!8034 = !DILocation(line: 4131, column: 8, scope: !8035)
!8035 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 4131, column: 7)
!8036 = !DILocation(line: 4131, column: 7, scope: !8035)
!8037 = !DILocation(line: 4131, column: 12, scope: !8035)
!8038 = !DILocation(line: 4131, column: 7, scope: !8029)
!8039 = !DILocation(line: 4132, column: 5, scope: !8035)
!8040 = !DILocation(line: 4132, column: 9, scope: !8035)
!8041 = !DILocation(line: 4132, column: 4, scope: !8035)
!8042 = !DILocation(line: 4133, column: 8, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8029, file: !3, line: 4133, column: 7)
!8044 = !DILocation(line: 4133, column: 7, scope: !8043)
!8045 = !DILocation(line: 4133, column: 12, scope: !8043)
!8046 = !DILocation(line: 4133, column: 16, scope: !8043)
!8047 = !DILocation(line: 4133, column: 20, scope: !8043)
!8048 = !DILocation(line: 4133, column: 19, scope: !8043)
!8049 = !DILocation(line: 4133, column: 24, scope: !8043)
!8050 = !DILocation(line: 4133, column: 7, scope: !8029)
!8051 = !DILocation(line: 4134, column: 4, scope: !8043)
!8052 = !DILocation(line: 4135, column: 2, scope: !8029)
!8053 = !DILocation(line: 4136, column: 3, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8025, file: !3, line: 4135, column: 9)
!8055 = !DILocation(line: 4139, column: 2, scope: !8001)
!8056 = !DILocation(line: 4140, column: 1, scope: !8001)
!8057 = distinct !DISubprogram(name: "cea_db_payload_len", scope: !3, file: !3, line: 4070, type: !808, scopeLine: 4071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8058 = !DILocalVariable(name: "db", arg: 1, scope: !8057, file: !3, line: 4070, type: !576)
!8059 = !DILocation(line: 4070, column: 30, scope: !8057)
!8060 = !DILocation(line: 4072, column: 9, scope: !8057)
!8061 = !DILocation(line: 4072, column: 15, scope: !8057)
!8062 = !DILocation(line: 4072, column: 2, scope: !8057)
!8063 = distinct !DISubprogram(name: "cea_db_tag", scope: !3, file: !3, line: 4082, type: !808, scopeLine: 4083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8064 = !DILocalVariable(name: "db", arg: 1, scope: !8063, file: !3, line: 4082, type: !576)
!8065 = !DILocation(line: 4082, column: 22, scope: !8063)
!8066 = !DILocation(line: 4084, column: 9, scope: !8063)
!8067 = !DILocation(line: 4084, column: 15, scope: !8063)
!8068 = !DILocation(line: 4084, column: 2, scope: !8063)
!8069 = distinct !DISubprogram(name: "kcalloc", scope: !361, file: !361, line: 601, type: !6930, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8070 = !DILocalVariable(name: "n", arg: 1, scope: !8069, file: !361, line: 601, type: !1285)
!8071 = !DILocation(line: 601, column: 36, scope: !8069)
!8072 = !DILocalVariable(name: "size", arg: 2, scope: !8069, file: !361, line: 601, type: !1285)
!8073 = !DILocation(line: 601, column: 46, scope: !8069)
!8074 = !DILocalVariable(name: "flags", arg: 3, scope: !8069, file: !361, line: 601, type: !523)
!8075 = !DILocation(line: 601, column: 58, scope: !8069)
!8076 = !DILocation(line: 603, column: 23, scope: !8069)
!8077 = !DILocation(line: 603, column: 26, scope: !8069)
!8078 = !DILocation(line: 603, column: 32, scope: !8069)
!8079 = !DILocation(line: 603, column: 38, scope: !8069)
!8080 = !DILocation(line: 603, column: 9, scope: !8069)
!8081 = !DILocation(line: 603, column: 2, scope: !8069)
!8082 = distinct !DISubprogram(name: "drm_edid_to_speaker_allocation", scope: !3, file: !3, line: 4654, type: !8083, scopeLine: 4655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8083 = !DISubroutineType(types: !8084)
!8084 = !{!139, !369, !578}
!8085 = !DILocalVariable(name: "edid", arg: 1, scope: !8082, file: !3, line: 4654, type: !369)
!8086 = !DILocation(line: 4654, column: 49, scope: !8082)
!8087 = !DILocalVariable(name: "sadb", arg: 2, scope: !8082, file: !3, line: 4654, type: !578)
!8088 = !DILocation(line: 4654, column: 60, scope: !8082)
!8089 = !DILocalVariable(name: "count", scope: !8082, file: !3, line: 4656, type: !139)
!8090 = !DILocation(line: 4656, column: 6, scope: !8082)
!8091 = !DILocalVariable(name: "i", scope: !8082, file: !3, line: 4657, type: !139)
!8092 = !DILocation(line: 4657, column: 6, scope: !8082)
!8093 = !DILocalVariable(name: "start", scope: !8082, file: !3, line: 4657, type: !139)
!8094 = !DILocation(line: 4657, column: 9, scope: !8082)
!8095 = !DILocalVariable(name: "end", scope: !8082, file: !3, line: 4657, type: !139)
!8096 = !DILocation(line: 4657, column: 16, scope: !8082)
!8097 = !DILocalVariable(name: "dbl", scope: !8082, file: !3, line: 4657, type: !139)
!8098 = !DILocation(line: 4657, column: 21, scope: !8082)
!8099 = !DILocalVariable(name: "cea", scope: !8082, file: !3, line: 4658, type: !576)
!8100 = !DILocation(line: 4658, column: 12, scope: !8082)
!8101 = !DILocation(line: 4660, column: 31, scope: !8082)
!8102 = !DILocation(line: 4660, column: 8, scope: !8082)
!8103 = !DILocation(line: 4660, column: 6, scope: !8082)
!8104 = !DILocation(line: 4661, column: 7, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 4661, column: 6)
!8106 = !DILocation(line: 4661, column: 6, scope: !8082)
!8107 = !DILocation(line: 4662, column: 3, scope: !8108)
!8108 = distinct !DILexicalBlock(scope: !8105, file: !3, line: 4661, column: 12)
!8109 = !DILocation(line: 4663, column: 3, scope: !8108)
!8110 = !DILocation(line: 4666, column: 19, scope: !8111)
!8111 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 4666, column: 6)
!8112 = !DILocation(line: 4666, column: 6, scope: !8111)
!8113 = !DILocation(line: 4666, column: 24, scope: !8111)
!8114 = !DILocation(line: 4666, column: 6, scope: !8082)
!8115 = !DILocation(line: 4667, column: 3, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8111, file: !3, line: 4666, column: 29)
!8117 = !DILocation(line: 4668, column: 3, scope: !8116)
!8118 = !DILocation(line: 4671, column: 21, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 4671, column: 6)
!8120 = !DILocation(line: 4671, column: 6, scope: !8119)
!8121 = !DILocation(line: 4671, column: 6, scope: !8082)
!8122 = !DILocation(line: 4672, column: 3, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 4671, column: 41)
!8124 = !DILocation(line: 4673, column: 3, scope: !8123)
!8125 = !DILocation(line: 4676, column: 2, scope: !8126)
!8126 = distinct !DILexicalBlock(scope: !8082, file: !3, line: 4676, column: 2)
!8127 = !DILocation(line: 4676, column: 2, scope: !8128)
!8128 = distinct !DILexicalBlock(scope: !8126, file: !3, line: 4676, column: 2)
!8129 = !DILocation(line: 0, scope: !8128)
!8130 = !DILocalVariable(name: "db", scope: !8131, file: !3, line: 4677, type: !576)
!8131 = distinct !DILexicalBlock(scope: !8128, file: !3, line: 4676, column: 38)
!8132 = !DILocation(line: 4677, column: 13, scope: !8131)
!8133 = !DILocation(line: 4677, column: 19, scope: !8131)
!8134 = !DILocation(line: 4677, column: 23, scope: !8131)
!8135 = !DILocation(line: 4679, column: 18, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8131, file: !3, line: 4679, column: 7)
!8137 = !DILocation(line: 4679, column: 7, scope: !8136)
!8138 = !DILocation(line: 4679, column: 22, scope: !8136)
!8139 = !DILocation(line: 4679, column: 7, scope: !8131)
!8140 = !DILocation(line: 4680, column: 29, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8136, file: !3, line: 4679, column: 40)
!8142 = !DILocation(line: 4680, column: 10, scope: !8141)
!8143 = !DILocation(line: 4680, column: 8, scope: !8141)
!8144 = !DILocation(line: 4683, column: 8, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8141, file: !3, line: 4683, column: 8)
!8146 = !DILocation(line: 4683, column: 12, scope: !8145)
!8147 = !DILocation(line: 4683, column: 8, scope: !8141)
!8148 = !DILocation(line: 4684, column: 22, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8145, file: !3, line: 4683, column: 18)
!8150 = !DILocation(line: 4684, column: 29, scope: !8149)
!8151 = !DILocation(line: 4684, column: 13, scope: !8149)
!8152 = !DILocation(line: 4684, column: 6, scope: !8149)
!8153 = !DILocation(line: 4684, column: 11, scope: !8149)
!8154 = !DILocation(line: 4685, column: 11, scope: !8155)
!8155 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 4685, column: 9)
!8156 = !DILocation(line: 4685, column: 10, scope: !8155)
!8157 = !DILocation(line: 4685, column: 9, scope: !8149)
!8158 = !DILocation(line: 4686, column: 6, scope: !8155)
!8159 = !DILocation(line: 4687, column: 13, scope: !8149)
!8160 = !DILocation(line: 4687, column: 11, scope: !8149)
!8161 = !DILocation(line: 4688, column: 5, scope: !8149)
!8162 = !DILocation(line: 4690, column: 3, scope: !8141)
!8163 = !DILocation(line: 4691, column: 2, scope: !8131)
!8164 = distinct !{!8164, !8125, !8165}
!8165 = !DILocation(line: 4691, column: 2, scope: !8126)
!8166 = !DILocation(line: 4693, column: 9, scope: !8082)
!8167 = !DILocation(line: 4693, column: 2, scope: !8082)
!8168 = !DILocation(line: 4694, column: 1, scope: !8082)
!8169 = distinct !DISubprogram(name: "drm_av_sync_delay", scope: !3, file: !3, line: 4705, type: !8170, scopeLine: 4707, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8170 = !DISubroutineType(types: !8171)
!8171 = !{!139, !1162, !594}
!8172 = !DILocalVariable(name: "connector", arg: 1, scope: !8169, file: !3, line: 4705, type: !1162)
!8173 = !DILocation(line: 4705, column: 45, scope: !8169)
!8174 = !DILocalVariable(name: "mode", arg: 2, scope: !8169, file: !3, line: 4706, type: !594)
!8175 = !DILocation(line: 4706, column: 40, scope: !8169)
!8176 = !DILocalVariable(name: "i", scope: !8169, file: !3, line: 4708, type: !139)
!8177 = !DILocation(line: 4708, column: 6, scope: !8169)
!8178 = !DILocation(line: 4708, column: 13, scope: !8169)
!8179 = !DILocation(line: 4708, column: 19, scope: !8169)
!8180 = !DILocation(line: 4708, column: 25, scope: !8169)
!8181 = !DILocation(line: 4708, column: 11, scope: !8169)
!8182 = !DILocation(line: 4708, column: 10, scope: !8169)
!8183 = !DILocalVariable(name: "a", scope: !8169, file: !3, line: 4709, type: !139)
!8184 = !DILocation(line: 4709, column: 6, scope: !8169)
!8185 = !DILocalVariable(name: "v", scope: !8169, file: !3, line: 4709, type: !139)
!8186 = !DILocation(line: 4709, column: 9, scope: !8169)
!8187 = !DILocation(line: 4711, column: 7, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4711, column: 6)
!8189 = !DILocation(line: 4711, column: 18, scope: !8188)
!8190 = !DILocation(line: 4711, column: 6, scope: !8169)
!8191 = !DILocation(line: 4712, column: 3, scope: !8188)
!8192 = !DILocation(line: 4713, column: 7, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4713, column: 6)
!8194 = !DILocation(line: 4713, column: 18, scope: !8193)
!8195 = !DILocation(line: 4713, column: 6, scope: !8169)
!8196 = !DILocation(line: 4714, column: 5, scope: !8193)
!8197 = !DILocation(line: 4714, column: 3, scope: !8193)
!8198 = !DILocation(line: 4716, column: 6, scope: !8169)
!8199 = !DILocation(line: 4716, column: 17, scope: !8169)
!8200 = !DILocation(line: 4716, column: 31, scope: !8169)
!8201 = !DILocation(line: 4716, column: 4, scope: !8169)
!8202 = !DILocation(line: 4717, column: 6, scope: !8169)
!8203 = !DILocation(line: 4717, column: 17, scope: !8169)
!8204 = !DILocation(line: 4717, column: 31, scope: !8169)
!8205 = !DILocation(line: 4717, column: 4, scope: !8169)
!8206 = !DILocation(line: 4722, column: 6, scope: !8207)
!8207 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4722, column: 6)
!8208 = !DILocation(line: 4722, column: 8, scope: !8207)
!8209 = !DILocation(line: 4722, column: 15, scope: !8207)
!8210 = !DILocation(line: 4722, column: 18, scope: !8207)
!8211 = !DILocation(line: 4722, column: 20, scope: !8207)
!8212 = !DILocation(line: 4722, column: 6, scope: !8169)
!8213 = !DILocation(line: 4723, column: 3, scope: !8207)
!8214 = !DILocation(line: 4729, column: 6, scope: !8215)
!8215 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4729, column: 6)
!8216 = !DILocation(line: 4729, column: 6, scope: !8169)
!8217 = !DILocalVariable(name: "__UNIQUE_ID___x280", scope: !8218, file: !3, line: 4730, type: !139)
!8218 = distinct !DILexicalBlock(scope: !8215, file: !3, line: 4730, column: 7)
!8219 = !DILocation(line: 4730, column: 7, scope: !8218)
!8220 = !DILocalVariable(name: "__UNIQUE_ID___y281", scope: !8218, file: !3, line: 4730, type: !139)
!8221 = !DILocation(line: 4730, column: 5, scope: !8215)
!8222 = !DILocation(line: 4730, column: 3, scope: !8215)
!8223 = !DILocation(line: 4731, column: 6, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4731, column: 6)
!8225 = !DILocation(line: 4731, column: 6, scope: !8169)
!8226 = !DILocalVariable(name: "__UNIQUE_ID___x282", scope: !8227, file: !3, line: 4732, type: !139)
!8227 = distinct !DILexicalBlock(scope: !8224, file: !3, line: 4732, column: 7)
!8228 = !DILocation(line: 4732, column: 7, scope: !8227)
!8229 = !DILocalVariable(name: "__UNIQUE_ID___y283", scope: !8227, file: !3, line: 4732, type: !139)
!8230 = !DILocation(line: 4732, column: 5, scope: !8224)
!8231 = !DILocation(line: 4732, column: 3, scope: !8224)
!8232 = !DILocalVariable(name: "__UNIQUE_ID___x284", scope: !8233, file: !3, line: 4734, type: !139)
!8233 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4734, column: 9)
!8234 = !DILocation(line: 4734, column: 9, scope: !8233)
!8235 = !DILocalVariable(name: "__UNIQUE_ID___y285", scope: !8233, file: !3, line: 4734, type: !139)
!8236 = !DILocation(line: 4734, column: 2, scope: !8169)
!8237 = !DILocation(line: 4735, column: 1, scope: !8169)
!8238 = distinct !DISubprogram(name: "drm_detect_hdmi_monitor", scope: !3, file: !3, line: 4749, type: !1120, scopeLine: 4750, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8239 = !DILocalVariable(name: "edid", arg: 1, scope: !8238, file: !3, line: 4749, type: !369)
!8240 = !DILocation(line: 4749, column: 43, scope: !8238)
!8241 = !DILocalVariable(name: "edid_ext", scope: !8238, file: !3, line: 4751, type: !522)
!8242 = !DILocation(line: 4751, column: 6, scope: !8238)
!8243 = !DILocalVariable(name: "i", scope: !8238, file: !3, line: 4752, type: !139)
!8244 = !DILocation(line: 4752, column: 6, scope: !8238)
!8245 = !DILocalVariable(name: "start_offset", scope: !8238, file: !3, line: 4753, type: !139)
!8246 = !DILocation(line: 4753, column: 6, scope: !8238)
!8247 = !DILocalVariable(name: "end_offset", scope: !8238, file: !3, line: 4753, type: !139)
!8248 = !DILocation(line: 4753, column: 20, scope: !8238)
!8249 = !DILocation(line: 4755, column: 36, scope: !8238)
!8250 = !DILocation(line: 4755, column: 13, scope: !8238)
!8251 = !DILocation(line: 4755, column: 11, scope: !8238)
!8252 = !DILocation(line: 4756, column: 7, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 4756, column: 6)
!8254 = !DILocation(line: 4756, column: 6, scope: !8238)
!8255 = !DILocation(line: 4757, column: 3, scope: !8253)
!8256 = !DILocation(line: 4759, column: 21, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 4759, column: 6)
!8258 = !DILocation(line: 4759, column: 6, scope: !8257)
!8259 = !DILocation(line: 4759, column: 6, scope: !8238)
!8260 = !DILocation(line: 4760, column: 3, scope: !8257)
!8261 = !DILocation(line: 4766, column: 2, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 4766, column: 2)
!8263 = !DILocation(line: 4766, column: 2, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 4766, column: 2)
!8265 = !DILocation(line: 0, scope: !8264)
!8266 = !DILocation(line: 4767, column: 28, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 4767, column: 7)
!8268 = distinct !DILexicalBlock(scope: !8264, file: !3, line: 4766, column: 57)
!8269 = !DILocation(line: 4767, column: 37, scope: !8267)
!8270 = !DILocation(line: 4767, column: 7, scope: !8267)
!8271 = !DILocation(line: 4767, column: 7, scope: !8268)
!8272 = !DILocation(line: 4768, column: 4, scope: !8267)
!8273 = !DILocation(line: 4769, column: 2, scope: !8268)
!8274 = distinct !{!8274, !8261, !8275}
!8275 = !DILocation(line: 4769, column: 2, scope: !8262)
!8276 = !DILocation(line: 4771, column: 2, scope: !8238)
!8277 = !DILocation(line: 4772, column: 1, scope: !8238)
!8278 = distinct !DISubprogram(name: "cea_db_is_hdmi_vsdb", scope: !3, file: !3, line: 4142, type: !8279, scopeLine: 4143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{!559, !576}
!8281 = !DILocalVariable(name: "db", arg: 1, scope: !8278, file: !3, line: 4142, type: !576)
!8282 = !DILocation(line: 4142, column: 43, scope: !8278)
!8283 = !DILocalVariable(name: "hdmi_id", scope: !8278, file: !3, line: 4144, type: !139)
!8284 = !DILocation(line: 4144, column: 6, scope: !8278)
!8285 = !DILocation(line: 4146, column: 17, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 4146, column: 6)
!8287 = !DILocation(line: 4146, column: 6, scope: !8286)
!8288 = !DILocation(line: 4146, column: 21, scope: !8286)
!8289 = !DILocation(line: 4146, column: 6, scope: !8278)
!8290 = !DILocation(line: 4147, column: 3, scope: !8286)
!8291 = !DILocation(line: 4149, column: 25, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8278, file: !3, line: 4149, column: 6)
!8293 = !DILocation(line: 4149, column: 6, scope: !8292)
!8294 = !DILocation(line: 4149, column: 29, scope: !8292)
!8295 = !DILocation(line: 4149, column: 6, scope: !8278)
!8296 = !DILocation(line: 4150, column: 3, scope: !8292)
!8297 = !DILocation(line: 4152, column: 12, scope: !8278)
!8298 = !DILocation(line: 4152, column: 21, scope: !8278)
!8299 = !DILocation(line: 4152, column: 27, scope: !8278)
!8300 = !DILocation(line: 4152, column: 18, scope: !8278)
!8301 = !DILocation(line: 4152, column: 36, scope: !8278)
!8302 = !DILocation(line: 4152, column: 42, scope: !8278)
!8303 = !DILocation(line: 4152, column: 33, scope: !8278)
!8304 = !DILocation(line: 4152, column: 10, scope: !8278)
!8305 = !DILocation(line: 4154, column: 9, scope: !8278)
!8306 = !DILocation(line: 4154, column: 17, scope: !8278)
!8307 = !DILocation(line: 4154, column: 2, scope: !8278)
!8308 = !DILocation(line: 4155, column: 1, scope: !8278)
!8309 = distinct !DISubprogram(name: "drm_detect_monitor_audio", scope: !3, file: !3, line: 4787, type: !1120, scopeLine: 4788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8310 = !DILocalVariable(name: "edid", arg: 1, scope: !8309, file: !3, line: 4787, type: !369)
!8311 = !DILocation(line: 4787, column: 44, scope: !8309)
!8312 = !DILocalVariable(name: "edid_ext", scope: !8309, file: !3, line: 4789, type: !522)
!8313 = !DILocation(line: 4789, column: 6, scope: !8309)
!8314 = !DILocalVariable(name: "i", scope: !8309, file: !3, line: 4790, type: !139)
!8315 = !DILocation(line: 4790, column: 6, scope: !8309)
!8316 = !DILocalVariable(name: "j", scope: !8309, file: !3, line: 4790, type: !139)
!8317 = !DILocation(line: 4790, column: 9, scope: !8309)
!8318 = !DILocalVariable(name: "has_audio", scope: !8309, file: !3, line: 4791, type: !559)
!8319 = !DILocation(line: 4791, column: 7, scope: !8309)
!8320 = !DILocalVariable(name: "start_offset", scope: !8309, file: !3, line: 4792, type: !139)
!8321 = !DILocation(line: 4792, column: 6, scope: !8309)
!8322 = !DILocalVariable(name: "end_offset", scope: !8309, file: !3, line: 4792, type: !139)
!8323 = !DILocation(line: 4792, column: 20, scope: !8309)
!8324 = !DILocation(line: 4794, column: 36, scope: !8309)
!8325 = !DILocation(line: 4794, column: 13, scope: !8309)
!8326 = !DILocation(line: 4794, column: 11, scope: !8309)
!8327 = !DILocation(line: 4795, column: 7, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 4795, column: 6)
!8329 = !DILocation(line: 4795, column: 6, scope: !8309)
!8330 = !DILocation(line: 4796, column: 3, scope: !8328)
!8331 = !DILocation(line: 4798, column: 16, scope: !8309)
!8332 = !DILocation(line: 4798, column: 28, scope: !8309)
!8333 = !DILocation(line: 4798, column: 48, scope: !8309)
!8334 = !DILocation(line: 4798, column: 12, scope: !8309)
!8335 = !DILocation(line: 4800, column: 6, scope: !8336)
!8336 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 4800, column: 6)
!8337 = !DILocation(line: 4800, column: 6, scope: !8309)
!8338 = !DILocation(line: 4801, column: 3, scope: !8339)
!8339 = distinct !DILexicalBlock(scope: !8336, file: !3, line: 4800, column: 17)
!8340 = !DILocation(line: 4802, column: 3, scope: !8339)
!8341 = !DILocation(line: 4805, column: 21, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 4805, column: 6)
!8343 = !DILocation(line: 4805, column: 6, scope: !8342)
!8344 = !DILocation(line: 4805, column: 6, scope: !8309)
!8345 = !DILocation(line: 4806, column: 3, scope: !8342)
!8346 = !DILocation(line: 4808, column: 2, scope: !8347)
!8347 = distinct !DILexicalBlock(scope: !8309, file: !3, line: 4808, column: 2)
!8348 = !DILocation(line: 4808, column: 2, scope: !8349)
!8349 = distinct !DILexicalBlock(scope: !8347, file: !3, line: 4808, column: 2)
!8350 = !DILocation(line: 0, scope: !8349)
!8351 = !DILocation(line: 4809, column: 19, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 4809, column: 7)
!8353 = distinct !DILexicalBlock(scope: !8349, file: !3, line: 4808, column: 57)
!8354 = !DILocation(line: 4809, column: 28, scope: !8352)
!8355 = !DILocation(line: 4809, column: 7, scope: !8352)
!8356 = !DILocation(line: 4809, column: 32, scope: !8352)
!8357 = !DILocation(line: 4809, column: 7, scope: !8353)
!8358 = !DILocation(line: 4810, column: 14, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 4809, column: 48)
!8360 = !DILocation(line: 4811, column: 11, scope: !8361)
!8361 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 4811, column: 4)
!8362 = !DILocation(line: 4811, column: 9, scope: !8361)
!8363 = !DILocation(line: 4811, column: 16, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8361, file: !3, line: 4811, column: 4)
!8365 = !DILocation(line: 4811, column: 40, scope: !8364)
!8366 = !DILocation(line: 4811, column: 49, scope: !8364)
!8367 = !DILocation(line: 4811, column: 20, scope: !8364)
!8368 = !DILocation(line: 4811, column: 53, scope: !8364)
!8369 = !DILocation(line: 4811, column: 18, scope: !8364)
!8370 = !DILocation(line: 4811, column: 4, scope: !8361)
!8371 = !DILocation(line: 4812, column: 5, scope: !8364)
!8372 = !DILocation(line: 4811, column: 60, scope: !8364)
!8373 = !DILocation(line: 4811, column: 4, scope: !8364)
!8374 = distinct !{!8374, !8370, !8375}
!8375 = !DILocation(line: 4812, column: 5, scope: !8361)
!8376 = !DILocation(line: 4814, column: 4, scope: !8359)
!8377 = !DILocation(line: 4816, column: 2, scope: !8353)
!8378 = distinct !{!8378, !8346, !8379}
!8379 = !DILocation(line: 4816, column: 2, scope: !8347)
!8380 = !DILabel(scope: !8309, name: "end", file: !3, line: 4817)
!8381 = !DILocation(line: 4817, column: 1, scope: !8309)
!8382 = !DILocation(line: 4818, column: 9, scope: !8309)
!8383 = !DILocation(line: 4818, column: 2, scope: !8309)
!8384 = distinct !DISubprogram(name: "drm_default_rgb_quant_range", scope: !3, file: !3, line: 4833, type: !8385, scopeLine: 4834, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{!267, !594}
!8387 = !DILocalVariable(name: "mode", arg: 1, scope: !8384, file: !3, line: 4833, type: !594)
!8388 = !DILocation(line: 4833, column: 60, scope: !8384)
!8389 = !DILocation(line: 4836, column: 28, scope: !8384)
!8390 = !DILocation(line: 4836, column: 9, scope: !8384)
!8391 = !DILocation(line: 4836, column: 34, scope: !8384)
!8392 = !DILocation(line: 4836, column: 2, scope: !8384)
!8393 = distinct !DISubprogram(name: "drm_reset_display_info", scope: !3, file: !3, line: 5080, type: !5504, scopeLine: 5081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8394 = !DILocalVariable(name: "connector", arg: 1, scope: !8393, file: !3, line: 5080, type: !1162)
!8395 = !DILocation(line: 5080, column: 46, scope: !8393)
!8396 = !DILocalVariable(name: "info", scope: !8393, file: !3, line: 5082, type: !8397)
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5451, size: 64)
!8398 = !DILocation(line: 5082, column: 27, scope: !8393)
!8399 = !DILocation(line: 5082, column: 35, scope: !8393)
!8400 = !DILocation(line: 5082, column: 46, scope: !8393)
!8401 = !DILocation(line: 5084, column: 2, scope: !8393)
!8402 = !DILocation(line: 5084, column: 8, scope: !8393)
!8403 = !DILocation(line: 5084, column: 17, scope: !8393)
!8404 = !DILocation(line: 5085, column: 2, scope: !8393)
!8405 = !DILocation(line: 5085, column: 8, scope: !8393)
!8406 = !DILocation(line: 5085, column: 18, scope: !8393)
!8407 = !DILocation(line: 5087, column: 2, scope: !8393)
!8408 = !DILocation(line: 5087, column: 8, scope: !8393)
!8409 = !DILocation(line: 5087, column: 12, scope: !8393)
!8410 = !DILocation(line: 5088, column: 2, scope: !8393)
!8411 = !DILocation(line: 5088, column: 8, scope: !8393)
!8412 = !DILocation(line: 5088, column: 22, scope: !8393)
!8413 = !DILocation(line: 5089, column: 2, scope: !8393)
!8414 = !DILocation(line: 5089, column: 8, scope: !8393)
!8415 = !DILocation(line: 5089, column: 16, scope: !8393)
!8416 = !DILocation(line: 5090, column: 2, scope: !8393)
!8417 = !DILocation(line: 5090, column: 8, scope: !8393)
!8418 = !DILocation(line: 5090, column: 23, scope: !8393)
!8419 = !DILocation(line: 5091, column: 2, scope: !8393)
!8420 = !DILocation(line: 5091, column: 8, scope: !8393)
!8421 = !DILocation(line: 5091, column: 17, scope: !8393)
!8422 = !DILocation(line: 5092, column: 2, scope: !8393)
!8423 = !DILocation(line: 5092, column: 8, scope: !8393)
!8424 = !DILocation(line: 5092, column: 16, scope: !8393)
!8425 = !DILocation(line: 5093, column: 2, scope: !8393)
!8426 = !DILocation(line: 5093, column: 8, scope: !8393)
!8427 = !DILocation(line: 5093, column: 27, scope: !8393)
!8428 = !DILocation(line: 5094, column: 2, scope: !8393)
!8429 = !DILocation(line: 5094, column: 8, scope: !8393)
!8430 = !DILocation(line: 5094, column: 35, scope: !8393)
!8431 = !DILocation(line: 5095, column: 10, scope: !8393)
!8432 = !DILocation(line: 5095, column: 16, scope: !8393)
!8433 = !DILocation(line: 5095, column: 2, scope: !8393)
!8434 = !DILocation(line: 5097, column: 2, scope: !8393)
!8435 = !DILocation(line: 5097, column: 8, scope: !8393)
!8436 = !DILocation(line: 5097, column: 20, scope: !8393)
!8437 = !DILocation(line: 5098, column: 10, scope: !8393)
!8438 = !DILocation(line: 5098, column: 16, scope: !8393)
!8439 = !DILocation(line: 5098, column: 2, scope: !8393)
!8440 = !DILocation(line: 5099, column: 1, scope: !8393)
!8441 = distinct !DISubprogram(name: "drm_add_display_info", scope: !3, file: !3, line: 5101, type: !8442, scopeLine: 5102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8442 = !DISubroutineType(types: !8443)
!8443 = !{!388, !1162, !842}
!8444 = !DILocalVariable(name: "connector", arg: 1, scope: !8441, file: !3, line: 5101, type: !1162)
!8445 = !DILocation(line: 5101, column: 48, scope: !8441)
!8446 = !DILocalVariable(name: "edid", arg: 2, scope: !8441, file: !3, line: 5101, type: !842)
!8447 = !DILocation(line: 5101, column: 78, scope: !8441)
!8448 = !DILocalVariable(name: "info", scope: !8441, file: !3, line: 5103, type: !8397)
!8449 = !DILocation(line: 5103, column: 27, scope: !8441)
!8450 = !DILocation(line: 5103, column: 35, scope: !8441)
!8451 = !DILocation(line: 5103, column: 46, scope: !8441)
!8452 = !DILocalVariable(name: "quirks", scope: !8441, file: !3, line: 5105, type: !388)
!8453 = !DILocation(line: 5105, column: 6, scope: !8441)
!8454 = !DILocation(line: 5105, column: 31, scope: !8441)
!8455 = !DILocation(line: 5105, column: 15, scope: !8441)
!8456 = !DILocation(line: 5107, column: 25, scope: !8441)
!8457 = !DILocation(line: 5107, column: 2, scope: !8441)
!8458 = !DILocation(line: 5109, column: 19, scope: !8441)
!8459 = !DILocation(line: 5109, column: 25, scope: !8441)
!8460 = !DILocation(line: 5109, column: 34, scope: !8441)
!8461 = !DILocation(line: 5109, column: 2, scope: !8441)
!8462 = !DILocation(line: 5109, column: 8, scope: !8441)
!8463 = !DILocation(line: 5109, column: 17, scope: !8441)
!8464 = !DILocation(line: 5110, column: 20, scope: !8441)
!8465 = !DILocation(line: 5110, column: 26, scope: !8441)
!8466 = !DILocation(line: 5110, column: 36, scope: !8441)
!8467 = !DILocation(line: 5110, column: 2, scope: !8441)
!8468 = !DILocation(line: 5110, column: 8, scope: !8441)
!8469 = !DILocation(line: 5110, column: 18, scope: !8441)
!8470 = !DILocation(line: 5112, column: 25, scope: !8441)
!8471 = !DILocation(line: 5112, column: 32, scope: !8441)
!8472 = !DILocation(line: 5112, column: 23, scope: !8441)
!8473 = !DILocation(line: 5112, column: 22, scope: !8441)
!8474 = !DILocation(line: 5112, column: 2, scope: !8441)
!8475 = !DILocation(line: 5112, column: 8, scope: !8441)
!8476 = !DILocation(line: 5112, column: 20, scope: !8441)
!8477 = !DILocation(line: 5114, column: 24, scope: !8441)
!8478 = !DILocation(line: 5114, column: 35, scope: !8441)
!8479 = !DILocation(line: 5114, column: 2, scope: !8441)
!8480 = !DILocation(line: 5116, column: 2, scope: !8441)
!8481 = !DILocation(line: 5118, column: 6, scope: !8482)
!8482 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5118, column: 6)
!8483 = !DILocation(line: 5118, column: 12, scope: !8482)
!8484 = !DILocation(line: 5118, column: 21, scope: !8482)
!8485 = !DILocation(line: 5118, column: 6, scope: !8441)
!8486 = !DILocation(line: 5119, column: 10, scope: !8482)
!8487 = !DILocation(line: 5119, column: 3, scope: !8482)
!8488 = !DILocation(line: 5121, column: 8, scope: !8489)
!8489 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5121, column: 6)
!8490 = !DILocation(line: 5121, column: 14, scope: !8489)
!8491 = !DILocation(line: 5121, column: 20, scope: !8489)
!8492 = !DILocation(line: 5121, column: 6, scope: !8441)
!8493 = !DILocation(line: 5122, column: 10, scope: !8489)
!8494 = !DILocation(line: 5122, column: 3, scope: !8489)
!8495 = !DILocation(line: 5124, column: 20, scope: !8441)
!8496 = !DILocation(line: 5124, column: 31, scope: !8441)
!8497 = !DILocation(line: 5124, column: 2, scope: !8441)
!8498 = !DILocation(line: 5133, column: 6, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5133, column: 6)
!8500 = !DILocation(line: 5133, column: 12, scope: !8499)
!8501 = !DILocation(line: 5133, column: 16, scope: !8499)
!8502 = !DILocation(line: 5133, column: 21, scope: !8499)
!8503 = !DILocation(line: 5133, column: 24, scope: !8499)
!8504 = !DILocation(line: 5133, column: 30, scope: !8499)
!8505 = !DILocation(line: 5133, column: 39, scope: !8499)
!8506 = !DILocation(line: 5133, column: 44, scope: !8499)
!8507 = !DILocation(line: 5134, column: 6, scope: !8499)
!8508 = !DILocation(line: 5134, column: 12, scope: !8499)
!8509 = !DILocation(line: 5134, column: 18, scope: !8499)
!8510 = !DILocation(line: 5133, column: 6, scope: !8441)
!8511 = !DILocation(line: 5135, column: 3, scope: !8512)
!8512 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 5134, column: 46)
!8513 = !DILocation(line: 5135, column: 9, scope: !8512)
!8514 = !DILocation(line: 5135, column: 13, scope: !8512)
!8515 = !DILocation(line: 5136, column: 3, scope: !8512)
!8516 = !DILocation(line: 5138, column: 2, scope: !8512)
!8517 = !DILocation(line: 5141, column: 6, scope: !8518)
!8518 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5141, column: 6)
!8519 = !DILocation(line: 5141, column: 12, scope: !8518)
!8520 = !DILocation(line: 5141, column: 21, scope: !8518)
!8521 = !DILocation(line: 5141, column: 6, scope: !8441)
!8522 = !DILocation(line: 5142, column: 10, scope: !8518)
!8523 = !DILocation(line: 5142, column: 3, scope: !8518)
!8524 = !DILocation(line: 5144, column: 10, scope: !8441)
!8525 = !DILocation(line: 5144, column: 16, scope: !8441)
!8526 = !DILocation(line: 5144, column: 22, scope: !8441)
!8527 = !DILocation(line: 5144, column: 2, scope: !8441)
!8528 = !DILocation(line: 5146, column: 3, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5144, column: 53)
!8530 = !DILocation(line: 5146, column: 9, scope: !8529)
!8531 = !DILocation(line: 5146, column: 13, scope: !8529)
!8532 = !DILocation(line: 5147, column: 3, scope: !8529)
!8533 = !DILocation(line: 5149, column: 3, scope: !8529)
!8534 = !DILocation(line: 5149, column: 9, scope: !8529)
!8535 = !DILocation(line: 5149, column: 13, scope: !8529)
!8536 = !DILocation(line: 5150, column: 3, scope: !8529)
!8537 = !DILocation(line: 5152, column: 3, scope: !8529)
!8538 = !DILocation(line: 5152, column: 9, scope: !8529)
!8539 = !DILocation(line: 5152, column: 13, scope: !8529)
!8540 = !DILocation(line: 5153, column: 3, scope: !8529)
!8541 = !DILocation(line: 5155, column: 3, scope: !8529)
!8542 = !DILocation(line: 5155, column: 9, scope: !8529)
!8543 = !DILocation(line: 5155, column: 13, scope: !8529)
!8544 = !DILocation(line: 5156, column: 3, scope: !8529)
!8545 = !DILocation(line: 5158, column: 3, scope: !8529)
!8546 = !DILocation(line: 5158, column: 9, scope: !8529)
!8547 = !DILocation(line: 5158, column: 13, scope: !8529)
!8548 = !DILocation(line: 5159, column: 3, scope: !8529)
!8549 = !DILocation(line: 5161, column: 3, scope: !8529)
!8550 = !DILocation(line: 5161, column: 9, scope: !8529)
!8551 = !DILocation(line: 5161, column: 13, scope: !8529)
!8552 = !DILocation(line: 5162, column: 3, scope: !8529)
!8553 = !DILocation(line: 5165, column: 3, scope: !8529)
!8554 = !DILocation(line: 5165, column: 9, scope: !8529)
!8555 = !DILocation(line: 5165, column: 13, scope: !8529)
!8556 = !DILocation(line: 5166, column: 3, scope: !8529)
!8557 = !DILocation(line: 5169, column: 2, scope: !8441)
!8558 = !DILocation(line: 5172, column: 2, scope: !8441)
!8559 = !DILocation(line: 5172, column: 8, scope: !8441)
!8560 = !DILocation(line: 5172, column: 22, scope: !8441)
!8561 = !DILocation(line: 5173, column: 6, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5173, column: 6)
!8563 = !DILocation(line: 5173, column: 12, scope: !8562)
!8564 = !DILocation(line: 5173, column: 21, scope: !8562)
!8565 = !DILocation(line: 5173, column: 6, scope: !8441)
!8566 = !DILocation(line: 5174, column: 3, scope: !8562)
!8567 = !DILocation(line: 5174, column: 9, scope: !8562)
!8568 = !DILocation(line: 5174, column: 23, scope: !8562)
!8569 = !DILocation(line: 5175, column: 6, scope: !8570)
!8570 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 5175, column: 6)
!8571 = !DILocation(line: 5175, column: 12, scope: !8570)
!8572 = !DILocation(line: 5175, column: 21, scope: !8570)
!8573 = !DILocation(line: 5175, column: 6, scope: !8441)
!8574 = !DILocation(line: 5176, column: 3, scope: !8570)
!8575 = !DILocation(line: 5176, column: 9, scope: !8570)
!8576 = !DILocation(line: 5176, column: 23, scope: !8570)
!8577 = !DILocation(line: 5177, column: 9, scope: !8441)
!8578 = !DILocation(line: 5177, column: 2, scope: !8441)
!8579 = !DILocation(line: 5178, column: 1, scope: !8441)
!8580 = distinct !DISubprogram(name: "edid_get_quirks", scope: !3, file: !3, line: 2128, type: !8581, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8581 = !DISubroutineType(types: !8582)
!8582 = !{!388, !842}
!8583 = !DILocalVariable(name: "edid", arg: 1, scope: !8580, file: !3, line: 2128, type: !842)
!8584 = !DILocation(line: 2128, column: 47, scope: !8580)
!8585 = !DILocalVariable(name: "quirk", scope: !8580, file: !3, line: 2130, type: !8586)
!8586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!8587 = !DILocation(line: 2130, column: 27, scope: !8580)
!8588 = !DILocalVariable(name: "i", scope: !8580, file: !3, line: 2131, type: !139)
!8589 = !DILocation(line: 2131, column: 6, scope: !8580)
!8590 = !DILocation(line: 2133, column: 9, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 2133, column: 2)
!8592 = !DILocation(line: 2133, column: 7, scope: !8591)
!8593 = !DILocation(line: 2133, column: 14, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 2133, column: 2)
!8595 = !DILocation(line: 2133, column: 16, scope: !8594)
!8596 = !DILocation(line: 2133, column: 2, scope: !8591)
!8597 = !DILocation(line: 2134, column: 28, scope: !8598)
!8598 = distinct !DILexicalBlock(scope: !8594, file: !3, line: 2133, column: 52)
!8599 = !DILocation(line: 2134, column: 12, scope: !8598)
!8600 = !DILocation(line: 2134, column: 9, scope: !8598)
!8601 = !DILocation(line: 2136, column: 19, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8598, file: !3, line: 2136, column: 7)
!8603 = !DILocation(line: 2136, column: 25, scope: !8602)
!8604 = !DILocation(line: 2136, column: 32, scope: !8602)
!8605 = !DILocation(line: 2136, column: 7, scope: !8602)
!8606 = !DILocation(line: 2136, column: 40, scope: !8602)
!8607 = !DILocation(line: 2137, column: 8, scope: !8602)
!8608 = !DILocation(line: 2137, column: 33, scope: !8602)
!8609 = !DILocation(line: 2137, column: 40, scope: !8602)
!8610 = !DILocation(line: 2137, column: 30, scope: !8602)
!8611 = !DILocation(line: 2136, column: 7, scope: !8598)
!8612 = !DILocation(line: 2138, column: 11, scope: !8602)
!8613 = !DILocation(line: 2138, column: 18, scope: !8602)
!8614 = !DILocation(line: 2138, column: 4, scope: !8602)
!8615 = !DILocation(line: 2139, column: 2, scope: !8598)
!8616 = !DILocation(line: 2133, column: 48, scope: !8594)
!8617 = !DILocation(line: 2133, column: 2, scope: !8594)
!8618 = distinct !{!8618, !8596, !8619}
!8619 = !DILocation(line: 2139, column: 2, scope: !8591)
!8620 = !DILocation(line: 2141, column: 2, scope: !8580)
!8621 = !DILocation(line: 2142, column: 1, scope: !8580)
!8622 = distinct !DISubprogram(name: "drm_get_monitor_range", scope: !3, file: !3, line: 5060, type: !8623, scopeLine: 5062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8623 = !DISubroutineType(types: !8624)
!8624 = !{null, !1162, !842}
!8625 = !DILocalVariable(name: "connector", arg: 1, scope: !8622, file: !3, line: 5060, type: !1162)
!8626 = !DILocation(line: 5060, column: 50, scope: !8622)
!8627 = !DILocalVariable(name: "edid", arg: 2, scope: !8622, file: !3, line: 5061, type: !842)
!8628 = !DILocation(line: 5061, column: 26, scope: !8622)
!8629 = !DILocalVariable(name: "info", scope: !8622, file: !3, line: 5063, type: !8397)
!8630 = !DILocation(line: 5063, column: 27, scope: !8622)
!8631 = !DILocation(line: 5063, column: 35, scope: !8622)
!8632 = !DILocation(line: 5063, column: 46, scope: !8622)
!8633 = !DILocation(line: 5065, column: 7, scope: !8634)
!8634 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 5065, column: 6)
!8635 = !DILocation(line: 5065, column: 6, scope: !8622)
!8636 = !DILocation(line: 5066, column: 3, scope: !8634)
!8637 = !DILocation(line: 5068, column: 36, scope: !8622)
!8638 = !DILocation(line: 5068, column: 30, scope: !8622)
!8639 = !DILocation(line: 5069, column: 10, scope: !8622)
!8640 = !DILocation(line: 5069, column: 16, scope: !8622)
!8641 = !DILocation(line: 5069, column: 9, scope: !8622)
!8642 = !DILocation(line: 5068, column: 2, scope: !8622)
!8643 = !DILocation(line: 5071, column: 2, scope: !8622)
!8644 = !DILocation(line: 5074, column: 1, scope: !8622)
!8645 = distinct !DISubprogram(name: "drm_parse_cea_ext", scope: !3, file: !3, line: 4996, type: !8623, scopeLine: 4998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8646 = !DILocalVariable(name: "connector", arg: 1, scope: !8645, file: !3, line: 4996, type: !1162)
!8647 = !DILocation(line: 4996, column: 53, scope: !8645)
!8648 = !DILocalVariable(name: "edid", arg: 2, scope: !8645, file: !3, line: 4997, type: !842)
!8649 = !DILocation(line: 4997, column: 29, scope: !8645)
!8650 = !DILocalVariable(name: "info", scope: !8645, file: !3, line: 4999, type: !8397)
!8651 = !DILocation(line: 4999, column: 27, scope: !8645)
!8652 = !DILocation(line: 4999, column: 35, scope: !8645)
!8653 = !DILocation(line: 4999, column: 46, scope: !8645)
!8654 = !DILocalVariable(name: "edid_ext", scope: !8645, file: !3, line: 5000, type: !576)
!8655 = !DILocation(line: 5000, column: 12, scope: !8645)
!8656 = !DILocalVariable(name: "i", scope: !8645, file: !3, line: 5001, type: !139)
!8657 = !DILocation(line: 5001, column: 6, scope: !8645)
!8658 = !DILocalVariable(name: "start", scope: !8645, file: !3, line: 5001, type: !139)
!8659 = !DILocation(line: 5001, column: 9, scope: !8645)
!8660 = !DILocalVariable(name: "end", scope: !8645, file: !3, line: 5001, type: !139)
!8661 = !DILocation(line: 5001, column: 16, scope: !8645)
!8662 = !DILocation(line: 5003, column: 36, scope: !8645)
!8663 = !DILocation(line: 5003, column: 13, scope: !8645)
!8664 = !DILocation(line: 5003, column: 11, scope: !8645)
!8665 = !DILocation(line: 5004, column: 7, scope: !8666)
!8666 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 5004, column: 6)
!8667 = !DILocation(line: 5004, column: 6, scope: !8645)
!8668 = !DILocation(line: 5005, column: 3, scope: !8666)
!8669 = !DILocation(line: 5007, column: 18, scope: !8645)
!8670 = !DILocation(line: 5007, column: 2, scope: !8645)
!8671 = !DILocation(line: 5007, column: 8, scope: !8645)
!8672 = !DILocation(line: 5007, column: 16, scope: !8645)
!8673 = !DILocation(line: 5010, column: 2, scope: !8645)
!8674 = !DILocation(line: 5010, column: 8, scope: !8645)
!8675 = !DILocation(line: 5010, column: 22, scope: !8645)
!8676 = !DILocation(line: 5011, column: 6, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 5011, column: 6)
!8678 = !DILocation(line: 5011, column: 18, scope: !8677)
!8679 = !DILocation(line: 5011, column: 6, scope: !8645)
!8680 = !DILocation(line: 5012, column: 3, scope: !8677)
!8681 = !DILocation(line: 5012, column: 9, scope: !8677)
!8682 = !DILocation(line: 5012, column: 23, scope: !8677)
!8683 = !DILocation(line: 5013, column: 6, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 5013, column: 6)
!8685 = !DILocation(line: 5013, column: 18, scope: !8684)
!8686 = !DILocation(line: 5013, column: 6, scope: !8645)
!8687 = !DILocation(line: 5014, column: 3, scope: !8684)
!8688 = !DILocation(line: 5014, column: 9, scope: !8684)
!8689 = !DILocation(line: 5014, column: 23, scope: !8684)
!8690 = !DILocation(line: 5016, column: 21, scope: !8691)
!8691 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 5016, column: 6)
!8692 = !DILocation(line: 5016, column: 6, scope: !8691)
!8693 = !DILocation(line: 5016, column: 6, scope: !8645)
!8694 = !DILocation(line: 5017, column: 3, scope: !8691)
!8695 = !DILocation(line: 5019, column: 2, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 5019, column: 2)
!8697 = !DILocation(line: 5019, column: 2, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 5019, column: 2)
!8699 = !DILocation(line: 0, scope: !8698)
!8700 = !DILocalVariable(name: "db", scope: !8701, file: !3, line: 5020, type: !576)
!8701 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 5019, column: 43)
!8702 = !DILocation(line: 5020, column: 13, scope: !8701)
!8703 = !DILocation(line: 5020, column: 19, scope: !8701)
!8704 = !DILocation(line: 5020, column: 28, scope: !8701)
!8705 = !DILocation(line: 5022, column: 27, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5022, column: 7)
!8707 = !DILocation(line: 5022, column: 7, scope: !8706)
!8708 = !DILocation(line: 5022, column: 7, scope: !8701)
!8709 = !DILocation(line: 5023, column: 30, scope: !8706)
!8710 = !DILocation(line: 5023, column: 41, scope: !8706)
!8711 = !DILocation(line: 5023, column: 4, scope: !8706)
!8712 = !DILocation(line: 5024, column: 33, scope: !8713)
!8713 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5024, column: 7)
!8714 = !DILocation(line: 5024, column: 7, scope: !8713)
!8715 = !DILocation(line: 5024, column: 7, scope: !8701)
!8716 = !DILocation(line: 5025, column: 30, scope: !8713)
!8717 = !DILocation(line: 5025, column: 41, scope: !8713)
!8718 = !DILocation(line: 5025, column: 4, scope: !8713)
!8719 = !DILocation(line: 5026, column: 26, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5026, column: 7)
!8721 = !DILocation(line: 5026, column: 7, scope: !8720)
!8722 = !DILocation(line: 5026, column: 7, scope: !8701)
!8723 = !DILocation(line: 5027, column: 30, scope: !8720)
!8724 = !DILocation(line: 5027, column: 41, scope: !8720)
!8725 = !DILocation(line: 5027, column: 4, scope: !8720)
!8726 = !DILocation(line: 5028, column: 22, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5028, column: 7)
!8728 = !DILocation(line: 5028, column: 7, scope: !8727)
!8729 = !DILocation(line: 5028, column: 7, scope: !8701)
!8730 = !DILocation(line: 5029, column: 19, scope: !8727)
!8731 = !DILocation(line: 5029, column: 30, scope: !8727)
!8732 = !DILocation(line: 5029, column: 4, scope: !8727)
!8733 = !DILocation(line: 5030, column: 41, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8701, file: !3, line: 5030, column: 7)
!8735 = !DILocation(line: 5030, column: 7, scope: !8734)
!8736 = !DILocation(line: 5030, column: 7, scope: !8701)
!8737 = !DILocation(line: 5031, column: 33, scope: !8734)
!8738 = !DILocation(line: 5031, column: 44, scope: !8734)
!8739 = !DILocation(line: 5031, column: 4, scope: !8734)
!8740 = !DILocation(line: 5032, column: 2, scope: !8701)
!8741 = distinct !{!8741, !8695, !8742}
!8742 = !DILocation(line: 5032, column: 2, scope: !8696)
!8743 = !DILocation(line: 5033, column: 1, scope: !8645)
!8744 = distinct !DISubprogram(name: "clear_eld", scope: !3, file: !3, line: 4476, type: !5504, scopeLine: 4477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8745 = !DILocalVariable(name: "connector", arg: 1, scope: !8744, file: !3, line: 4476, type: !1162)
!8746 = !DILocation(line: 4476, column: 45, scope: !8744)
!8747 = !DILocation(line: 4478, column: 9, scope: !8744)
!8748 = !DILocation(line: 4478, column: 20, scope: !8744)
!8749 = !DILocation(line: 4478, column: 2, scope: !8744)
!8750 = !DILocation(line: 4480, column: 2, scope: !8744)
!8751 = !DILocation(line: 4480, column: 13, scope: !8744)
!8752 = !DILocation(line: 4480, column: 32, scope: !8744)
!8753 = !DILocation(line: 4481, column: 2, scope: !8744)
!8754 = !DILocation(line: 4481, column: 13, scope: !8744)
!8755 = !DILocation(line: 4481, column: 32, scope: !8744)
!8756 = !DILocation(line: 4482, column: 2, scope: !8744)
!8757 = !DILocation(line: 4482, column: 13, scope: !8744)
!8758 = !DILocation(line: 4482, column: 30, scope: !8744)
!8759 = !DILocation(line: 4483, column: 2, scope: !8744)
!8760 = !DILocation(line: 4483, column: 13, scope: !8744)
!8761 = !DILocation(line: 4483, column: 30, scope: !8744)
!8762 = !DILocation(line: 4484, column: 2, scope: !8744)
!8763 = !DILocation(line: 4484, column: 13, scope: !8744)
!8764 = !DILocation(line: 4484, column: 30, scope: !8744)
!8765 = !DILocation(line: 4485, column: 2, scope: !8744)
!8766 = !DILocation(line: 4485, column: 13, scope: !8744)
!8767 = !DILocation(line: 4485, column: 30, scope: !8744)
!8768 = !DILocation(line: 4486, column: 1, scope: !8744)
!8769 = distinct !DISubprogram(name: "drm_edid_to_eld", scope: !3, file: !3, line: 4496, type: !8770, scopeLine: 4497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{null, !1162, !369}
!8772 = !DILocalVariable(name: "connector", arg: 1, scope: !8769, file: !3, line: 4496, type: !1162)
!8773 = !DILocation(line: 4496, column: 51, scope: !8769)
!8774 = !DILocalVariable(name: "edid", arg: 2, scope: !8769, file: !3, line: 4496, type: !369)
!8775 = !DILocation(line: 4496, column: 75, scope: !8769)
!8776 = !DILocalVariable(name: "eld", scope: !8769, file: !3, line: 4498, type: !8777)
!8777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5987, size: 64)
!8778 = !DILocation(line: 4498, column: 11, scope: !8769)
!8779 = !DILocation(line: 4498, column: 17, scope: !8769)
!8780 = !DILocation(line: 4498, column: 28, scope: !8769)
!8781 = !DILocalVariable(name: "cea", scope: !8769, file: !3, line: 4499, type: !522)
!8782 = !DILocation(line: 4499, column: 6, scope: !8769)
!8783 = !DILocalVariable(name: "db", scope: !8769, file: !3, line: 4500, type: !522)
!8784 = !DILocation(line: 4500, column: 6, scope: !8769)
!8785 = !DILocalVariable(name: "total_sad_count", scope: !8769, file: !3, line: 4501, type: !139)
!8786 = !DILocation(line: 4501, column: 6, scope: !8769)
!8787 = !DILocalVariable(name: "mnl", scope: !8769, file: !3, line: 4502, type: !139)
!8788 = !DILocation(line: 4502, column: 6, scope: !8769)
!8789 = !DILocalVariable(name: "dbl", scope: !8769, file: !3, line: 4503, type: !139)
!8790 = !DILocation(line: 4503, column: 6, scope: !8769)
!8791 = !DILocation(line: 4505, column: 12, scope: !8769)
!8792 = !DILocation(line: 4505, column: 2, scope: !8769)
!8793 = !DILocation(line: 4507, column: 7, scope: !8794)
!8794 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 4507, column: 6)
!8795 = !DILocation(line: 4507, column: 6, scope: !8769)
!8796 = !DILocation(line: 4508, column: 3, scope: !8794)
!8797 = !DILocation(line: 4510, column: 31, scope: !8769)
!8798 = !DILocation(line: 4510, column: 8, scope: !8769)
!8799 = !DILocation(line: 4510, column: 6, scope: !8769)
!8800 = !DILocation(line: 4511, column: 7, scope: !8801)
!8801 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 4511, column: 6)
!8802 = !DILocation(line: 4511, column: 6, scope: !8769)
!8803 = !DILocation(line: 4512, column: 3, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8801, file: !3, line: 4511, column: 12)
!8805 = !DILocation(line: 4513, column: 3, scope: !8804)
!8806 = !DILocation(line: 4516, column: 25, scope: !8769)
!8807 = !DILocation(line: 4516, column: 32, scope: !8769)
!8808 = !DILocation(line: 4516, column: 8, scope: !8769)
!8809 = !DILocation(line: 4516, column: 6, scope: !8769)
!8810 = !DILocation(line: 4517, column: 2, scope: !8769)
!8811 = !DILocation(line: 4519, column: 34, scope: !8769)
!8812 = !DILocation(line: 4519, column: 41, scope: !8769)
!8813 = !DILocation(line: 4519, column: 2, scope: !8769)
!8814 = !DILocation(line: 4519, column: 32, scope: !8769)
!8815 = !DILocation(line: 4520, column: 35, scope: !8769)
!8816 = !DILocation(line: 4520, column: 2, scope: !8769)
!8817 = !DILocation(line: 4520, column: 32, scope: !8769)
!8818 = !DILocation(line: 4522, column: 2, scope: !8769)
!8819 = !DILocation(line: 4522, column: 19, scope: !8769)
!8820 = !DILocation(line: 4524, column: 36, scope: !8769)
!8821 = !DILocation(line: 4524, column: 42, scope: !8769)
!8822 = !DILocation(line: 4524, column: 2, scope: !8769)
!8823 = !DILocation(line: 4524, column: 34, scope: !8769)
!8824 = !DILocation(line: 4525, column: 36, scope: !8769)
!8825 = !DILocation(line: 4525, column: 42, scope: !8769)
!8826 = !DILocation(line: 4525, column: 2, scope: !8769)
!8827 = !DILocation(line: 4525, column: 34, scope: !8769)
!8828 = !DILocation(line: 4526, column: 31, scope: !8769)
!8829 = !DILocation(line: 4526, column: 37, scope: !8769)
!8830 = !DILocation(line: 4526, column: 2, scope: !8769)
!8831 = !DILocation(line: 4526, column: 29, scope: !8769)
!8832 = !DILocation(line: 4527, column: 31, scope: !8769)
!8833 = !DILocation(line: 4527, column: 37, scope: !8769)
!8834 = !DILocation(line: 4527, column: 2, scope: !8769)
!8835 = !DILocation(line: 4527, column: 29, scope: !8769)
!8836 = !DILocation(line: 4529, column: 19, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 4529, column: 6)
!8838 = !DILocation(line: 4529, column: 6, scope: !8837)
!8839 = !DILocation(line: 4529, column: 24, scope: !8837)
!8840 = !DILocation(line: 4529, column: 6, scope: !8769)
!8841 = !DILocalVariable(name: "i", scope: !8842, file: !3, line: 4530, type: !139)
!8842 = distinct !DILexicalBlock(scope: !8837, file: !3, line: 4529, column: 30)
!8843 = !DILocation(line: 4530, column: 7, scope: !8842)
!8844 = !DILocalVariable(name: "start", scope: !8842, file: !3, line: 4530, type: !139)
!8845 = !DILocation(line: 4530, column: 10, scope: !8842)
!8846 = !DILocalVariable(name: "end", scope: !8842, file: !3, line: 4530, type: !139)
!8847 = !DILocation(line: 4530, column: 17, scope: !8842)
!8848 = !DILocalVariable(name: "sad_count", scope: !8842, file: !3, line: 4531, type: !139)
!8849 = !DILocation(line: 4531, column: 7, scope: !8842)
!8850 = !DILocation(line: 4533, column: 22, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 4533, column: 7)
!8852 = !DILocation(line: 4533, column: 7, scope: !8851)
!8853 = !DILocation(line: 4533, column: 7, scope: !8842)
!8854 = !DILocation(line: 4534, column: 10, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8851, file: !3, line: 4533, column: 42)
!8856 = !DILocation(line: 4535, column: 8, scope: !8855)
!8857 = !DILocation(line: 4536, column: 3, scope: !8855)
!8858 = !DILocation(line: 4538, column: 3, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8842, file: !3, line: 4538, column: 3)
!8860 = !DILocation(line: 4538, column: 3, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 4538, column: 3)
!8862 = !DILocation(line: 0, scope: !8861)
!8863 = !DILocation(line: 4539, column: 10, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 4538, column: 39)
!8865 = !DILocation(line: 4539, column: 14, scope: !8864)
!8866 = !DILocation(line: 4539, column: 7, scope: !8864)
!8867 = !DILocation(line: 4540, column: 29, scope: !8864)
!8868 = !DILocation(line: 4540, column: 10, scope: !8864)
!8869 = !DILocation(line: 4540, column: 8, scope: !8864)
!8870 = !DILocation(line: 4542, column: 23, scope: !8864)
!8871 = !DILocation(line: 4542, column: 12, scope: !8864)
!8872 = !DILocation(line: 4542, column: 4, scope: !8864)
!8873 = !DILocalVariable(name: "__UNIQUE_ID___x278", scope: !8874, file: !3, line: 4545, type: !139)
!8874 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 4545, column: 17)
!8875 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 4542, column: 28)
!8876 = !DILocation(line: 4545, column: 17, scope: !8874)
!8877 = !DILocalVariable(name: "__UNIQUE_ID___y279", scope: !8874, file: !3, line: 4545, type: !139)
!8878 = !DILocation(line: 4545, column: 15, scope: !8875)
!8879 = !DILocation(line: 4546, column: 9, scope: !8880)
!8880 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 4546, column: 9)
!8881 = !DILocation(line: 4546, column: 19, scope: !8880)
!8882 = !DILocation(line: 4546, column: 9, scope: !8875)
!8883 = !DILocation(line: 4547, column: 14, scope: !8880)
!8884 = !DILocation(line: 4547, column: 18, scope: !8880)
!8885 = !DILocation(line: 4548, column: 14, scope: !8880)
!8886 = !DILocation(line: 4548, column: 21, scope: !8880)
!8887 = !DILocation(line: 4548, column: 31, scope: !8880)
!8888 = !DILocation(line: 4547, column: 6, scope: !8880)
!8889 = !DILocation(line: 4549, column: 24, scope: !8875)
!8890 = !DILocation(line: 4549, column: 21, scope: !8875)
!8891 = !DILocation(line: 4550, column: 5, scope: !8875)
!8892 = !DILocation(line: 4553, column: 9, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 4553, column: 9)
!8894 = !DILocation(line: 4553, column: 13, scope: !8893)
!8895 = !DILocation(line: 4553, column: 9, scope: !8875)
!8896 = !DILocation(line: 4554, column: 29, scope: !8893)
!8897 = !DILocation(line: 4554, column: 6, scope: !8893)
!8898 = !DILocation(line: 4554, column: 27, scope: !8893)
!8899 = !DILocation(line: 4555, column: 5, scope: !8875)
!8900 = !DILocation(line: 4558, column: 29, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 4558, column: 9)
!8902 = !DILocation(line: 4558, column: 9, scope: !8901)
!8903 = !DILocation(line: 4558, column: 9, scope: !8875)
!8904 = !DILocation(line: 4559, column: 32, scope: !8901)
!8905 = !DILocation(line: 4559, column: 43, scope: !8901)
!8906 = !DILocation(line: 4559, column: 6, scope: !8901)
!8907 = !DILocation(line: 4560, column: 5, scope: !8875)
!8908 = !DILocation(line: 4562, column: 5, scope: !8875)
!8909 = !DILocation(line: 4564, column: 3, scope: !8864)
!8910 = distinct !{!8910, !8858, !8911}
!8911 = !DILocation(line: 4564, column: 3, scope: !8859)
!8912 = !DILocation(line: 4565, column: 2, scope: !8842)
!8913 = !DILocation(line: 4566, column: 38, scope: !8769)
!8914 = !DILocation(line: 4566, column: 54, scope: !8769)
!8915 = !DILocation(line: 4566, column: 2, scope: !8769)
!8916 = !DILocation(line: 4566, column: 35, scope: !8769)
!8917 = !DILocation(line: 4568, column: 6, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8769, file: !3, line: 4568, column: 6)
!8919 = !DILocation(line: 4568, column: 17, scope: !8918)
!8920 = !DILocation(line: 4568, column: 32, scope: !8918)
!8921 = !DILocation(line: 4568, column: 66, scope: !8918)
!8922 = !DILocation(line: 4569, column: 6, scope: !8918)
!8923 = !DILocation(line: 4569, column: 17, scope: !8918)
!8924 = !DILocation(line: 4569, column: 32, scope: !8918)
!8925 = !DILocation(line: 4568, column: 6, scope: !8769)
!8926 = !DILocation(line: 4570, column: 3, scope: !8918)
!8927 = !DILocation(line: 4570, column: 36, scope: !8918)
!8928 = !DILocation(line: 4572, column: 3, scope: !8918)
!8929 = !DILocation(line: 4572, column: 36, scope: !8918)
!8930 = !DILocation(line: 4575, column: 3, scope: !8769)
!8931 = !DILocation(line: 4574, column: 2, scope: !8769)
!8932 = !DILocation(line: 4574, column: 32, scope: !8769)
!8933 = !DILocation(line: 4577, column: 2, scope: !8769)
!8934 = !DILocation(line: 4579, column: 1, scope: !8769)
!8935 = distinct !DISubprogram(name: "add_detailed_modes", scope: !3, file: !3, line: 3201, type: !8936, scopeLine: 3203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8936 = !DISubroutineType(types: !8937)
!8937 = !{!139, !1162, !369, !388}
!8938 = !DILocalVariable(name: "connector", arg: 1, scope: !8935, file: !3, line: 3201, type: !1162)
!8939 = !DILocation(line: 3201, column: 42, scope: !8935)
!8940 = !DILocalVariable(name: "edid", arg: 2, scope: !8935, file: !3, line: 3201, type: !369)
!8941 = !DILocation(line: 3201, column: 66, scope: !8935)
!8942 = !DILocalVariable(name: "quirks", arg: 3, scope: !8935, file: !3, line: 3202, type: !388)
!8943 = !DILocation(line: 3202, column: 10, scope: !8935)
!8944 = !DILocalVariable(name: "closure", scope: !8935, file: !3, line: 3204, type: !8945)
!8945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_mode_closure", file: !3, line: 89, size: 256, elements: !8946)
!8946 = !{!8947, !8948, !8949, !8950, !8951}
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !8945, file: !3, line: 90, baseType: !1162, size: 64)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "edid", scope: !8945, file: !3, line: 91, baseType: !369, size: 64, offset: 64)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "preferred", scope: !8945, file: !3, line: 92, baseType: !559, size: 8, offset: 128)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !8945, file: !3, line: 93, baseType: !388, size: 32, offset: 160)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !8945, file: !3, line: 94, baseType: !139, size: 32, offset: 192)
!8952 = !DILocation(line: 3204, column: 31, scope: !8935)
!8953 = !DILocation(line: 3204, column: 41, scope: !8935)
!8954 = !DILocation(line: 3205, column: 16, scope: !8935)
!8955 = !DILocation(line: 3206, column: 11, scope: !8935)
!8956 = !DILocation(line: 3208, column: 13, scope: !8935)
!8957 = !DILocation(line: 3211, column: 14, scope: !8958)
!8958 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 3211, column: 6)
!8959 = !DILocation(line: 3211, column: 24, scope: !8958)
!8960 = !DILocation(line: 3211, column: 28, scope: !8958)
!8961 = !DILocation(line: 3211, column: 6, scope: !8935)
!8962 = !DILocation(line: 3213, column: 8, scope: !8958)
!8963 = !DILocation(line: 3213, column: 14, scope: !8958)
!8964 = !DILocation(line: 3213, column: 23, scope: !8958)
!8965 = !DILocation(line: 3213, column: 7, scope: !8958)
!8966 = !DILocation(line: 3212, column: 11, scope: !8958)
!8967 = !DILocation(line: 3212, column: 21, scope: !8958)
!8968 = !DILocation(line: 3212, column: 3, scope: !8958)
!8969 = !DILocation(line: 3215, column: 36, scope: !8935)
!8970 = !DILocation(line: 3215, column: 30, scope: !8935)
!8971 = !DILocation(line: 3215, column: 60, scope: !8935)
!8972 = !DILocation(line: 3215, column: 2, scope: !8935)
!8973 = !DILocation(line: 3217, column: 17, scope: !8935)
!8974 = !DILocation(line: 3217, column: 2, scope: !8935)
!8975 = distinct !DISubprogram(name: "add_cvt_modes", scope: !3, file: !3, line: 3147, type: !6241, scopeLine: 3148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8976 = !DILocalVariable(name: "connector", arg: 1, scope: !8975, file: !3, line: 3147, type: !1162)
!8977 = !DILocation(line: 3147, column: 37, scope: !8975)
!8978 = !DILocalVariable(name: "edid", arg: 2, scope: !8975, file: !3, line: 3147, type: !369)
!8979 = !DILocation(line: 3147, column: 61, scope: !8975)
!8980 = !DILocalVariable(name: "closure", scope: !8975, file: !3, line: 3149, type: !8945)
!8981 = !DILocation(line: 3149, column: 31, scope: !8975)
!8982 = !DILocation(line: 3149, column: 41, scope: !8975)
!8983 = !DILocation(line: 3150, column: 16, scope: !8975)
!8984 = !DILocation(line: 3151, column: 11, scope: !8975)
!8985 = !DILocation(line: 3154, column: 6, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 3154, column: 6)
!8987 = !DILocation(line: 3154, column: 6, scope: !8975)
!8988 = !DILocation(line: 3155, column: 37, scope: !8986)
!8989 = !DILocation(line: 3155, column: 31, scope: !8986)
!8990 = !DILocation(line: 3155, column: 56, scope: !8986)
!8991 = !DILocation(line: 3155, column: 3, scope: !8986)
!8992 = !DILocation(line: 3159, column: 17, scope: !8975)
!8993 = !DILocation(line: 3159, column: 2, scope: !8975)
!8994 = distinct !DISubprogram(name: "add_standard_modes", scope: !3, file: !3, line: 3057, type: !6241, scopeLine: 3058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!8995 = !DILocalVariable(name: "connector", arg: 1, scope: !8994, file: !3, line: 3057, type: !1162)
!8996 = !DILocation(line: 3057, column: 42, scope: !8994)
!8997 = !DILocalVariable(name: "edid", arg: 2, scope: !8994, file: !3, line: 3057, type: !369)
!8998 = !DILocation(line: 3057, column: 66, scope: !8994)
!8999 = !DILocalVariable(name: "i", scope: !8994, file: !3, line: 3059, type: !139)
!9000 = !DILocation(line: 3059, column: 6, scope: !8994)
!9001 = !DILocalVariable(name: "modes", scope: !8994, file: !3, line: 3059, type: !139)
!9002 = !DILocation(line: 3059, column: 9, scope: !8994)
!9003 = !DILocalVariable(name: "closure", scope: !8994, file: !3, line: 3060, type: !8945)
!9004 = !DILocation(line: 3060, column: 31, scope: !8994)
!9005 = !DILocation(line: 3060, column: 41, scope: !8994)
!9006 = !DILocation(line: 3061, column: 16, scope: !8994)
!9007 = !DILocation(line: 3062, column: 11, scope: !8994)
!9008 = !DILocation(line: 3065, column: 9, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 3065, column: 2)
!9010 = !DILocation(line: 3065, column: 7, scope: !9009)
!9011 = !DILocation(line: 3065, column: 14, scope: !9012)
!9012 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 3065, column: 2)
!9013 = !DILocation(line: 3065, column: 16, scope: !9012)
!9014 = !DILocation(line: 3065, column: 2, scope: !9009)
!9015 = !DILocalVariable(name: "newmode", scope: !9016, file: !3, line: 3066, type: !525)
!9016 = distinct !DILexicalBlock(scope: !9012, file: !3, line: 3065, column: 41)
!9017 = !DILocation(line: 3066, column: 28, scope: !9016)
!9018 = !DILocation(line: 3068, column: 26, scope: !9016)
!9019 = !DILocation(line: 3068, column: 37, scope: !9016)
!9020 = !DILocation(line: 3069, column: 13, scope: !9016)
!9021 = !DILocation(line: 3069, column: 19, scope: !9016)
!9022 = !DILocation(line: 3069, column: 36, scope: !9016)
!9023 = !DILocation(line: 3068, column: 13, scope: !9016)
!9024 = !DILocation(line: 3068, column: 11, scope: !9016)
!9025 = !DILocation(line: 3070, column: 7, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 3070, column: 7)
!9027 = !DILocation(line: 3070, column: 7, scope: !9016)
!9028 = !DILocation(line: 3071, column: 24, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3070, column: 16)
!9030 = !DILocation(line: 3071, column: 35, scope: !9029)
!9031 = !DILocation(line: 3071, column: 4, scope: !9029)
!9032 = !DILocation(line: 3072, column: 9, scope: !9029)
!9033 = !DILocation(line: 3073, column: 3, scope: !9029)
!9034 = !DILocation(line: 3074, column: 2, scope: !9016)
!9035 = !DILocation(line: 3065, column: 37, scope: !9012)
!9036 = !DILocation(line: 3065, column: 2, scope: !9012)
!9037 = distinct !{!9037, !9014, !9038}
!9038 = !DILocation(line: 3074, column: 2, scope: !9009)
!9039 = !DILocation(line: 3076, column: 6, scope: !9040)
!9040 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 3076, column: 6)
!9041 = !DILocation(line: 3076, column: 6, scope: !8994)
!9042 = !DILocation(line: 3077, column: 37, scope: !9040)
!9043 = !DILocation(line: 3077, column: 31, scope: !9040)
!9044 = !DILocation(line: 3078, column: 10, scope: !9040)
!9045 = !DILocation(line: 3077, column: 3, scope: !9040)
!9046 = !DILocation(line: 3082, column: 9, scope: !8994)
!9047 = !DILocation(line: 3082, column: 25, scope: !8994)
!9048 = !DILocation(line: 3082, column: 15, scope: !8994)
!9049 = !DILocation(line: 3082, column: 2, scope: !8994)
!9050 = distinct !DISubprogram(name: "add_established_modes", scope: !3, file: !3, line: 2993, type: !6241, scopeLine: 2994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9051 = !DILocalVariable(name: "connector", arg: 1, scope: !9050, file: !3, line: 2993, type: !1162)
!9052 = !DILocation(line: 2993, column: 45, scope: !9050)
!9053 = !DILocalVariable(name: "edid", arg: 2, scope: !9050, file: !3, line: 2993, type: !369)
!9054 = !DILocation(line: 2993, column: 69, scope: !9050)
!9055 = !DILocalVariable(name: "dev", scope: !9050, file: !3, line: 2995, type: !1166)
!9056 = !DILocation(line: 2995, column: 21, scope: !9050)
!9057 = !DILocation(line: 2995, column: 27, scope: !9050)
!9058 = !DILocation(line: 2995, column: 38, scope: !9050)
!9059 = !DILocalVariable(name: "est_bits", scope: !9050, file: !3, line: 2996, type: !574)
!9060 = !DILocation(line: 2996, column: 16, scope: !9050)
!9061 = !DILocation(line: 2996, column: 27, scope: !9050)
!9062 = !DILocation(line: 2996, column: 33, scope: !9050)
!9063 = !DILocation(line: 2996, column: 53, scope: !9050)
!9064 = !DILocation(line: 2997, column: 4, scope: !9050)
!9065 = !DILocation(line: 2997, column: 10, scope: !9050)
!9066 = !DILocation(line: 2997, column: 30, scope: !9050)
!9067 = !DILocation(line: 2997, column: 33, scope: !9050)
!9068 = !DILocation(line: 2996, column: 56, scope: !9050)
!9069 = !DILocation(line: 2998, column: 5, scope: !9050)
!9070 = !DILocation(line: 2998, column: 11, scope: !9050)
!9071 = !DILocation(line: 2998, column: 31, scope: !9050)
!9072 = !DILocation(line: 2998, column: 40, scope: !9050)
!9073 = !DILocation(line: 2998, column: 48, scope: !9050)
!9074 = !DILocation(line: 2997, column: 39, scope: !9050)
!9075 = !DILocalVariable(name: "i", scope: !9050, file: !3, line: 2999, type: !139)
!9076 = !DILocation(line: 2999, column: 6, scope: !9050)
!9077 = !DILocalVariable(name: "modes", scope: !9050, file: !3, line: 2999, type: !139)
!9078 = !DILocation(line: 2999, column: 9, scope: !9050)
!9079 = !DILocalVariable(name: "closure", scope: !9050, file: !3, line: 3000, type: !8945)
!9080 = !DILocation(line: 3000, column: 31, scope: !9050)
!9081 = !DILocation(line: 3000, column: 41, scope: !9050)
!9082 = !DILocation(line: 3001, column: 16, scope: !9050)
!9083 = !DILocation(line: 3002, column: 11, scope: !9050)
!9084 = !DILocation(line: 3005, column: 9, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 3005, column: 2)
!9086 = !DILocation(line: 3005, column: 7, scope: !9085)
!9087 = !DILocation(line: 3005, column: 14, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9085, file: !3, line: 3005, column: 2)
!9089 = !DILocation(line: 3005, column: 16, scope: !9088)
!9090 = !DILocation(line: 3005, column: 2, scope: !9085)
!9091 = !DILocation(line: 3006, column: 7, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 3006, column: 7)
!9093 = distinct !DILexicalBlock(scope: !9088, file: !3, line: 3005, column: 42)
!9094 = !DILocation(line: 3006, column: 22, scope: !9092)
!9095 = !DILocation(line: 3006, column: 20, scope: !9092)
!9096 = !DILocation(line: 3006, column: 18, scope: !9092)
!9097 = !DILocation(line: 3006, column: 16, scope: !9092)
!9098 = !DILocation(line: 3006, column: 7, scope: !9093)
!9099 = !DILocalVariable(name: "newmode", scope: !9100, file: !3, line: 3007, type: !525)
!9100 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 3006, column: 26)
!9101 = !DILocation(line: 3007, column: 29, scope: !9100)
!9102 = !DILocation(line: 3009, column: 33, scope: !9100)
!9103 = !DILocation(line: 3009, column: 54, scope: !9100)
!9104 = !DILocation(line: 3009, column: 39, scope: !9100)
!9105 = !DILocation(line: 3009, column: 14, scope: !9100)
!9106 = !DILocation(line: 3009, column: 12, scope: !9100)
!9107 = !DILocation(line: 3010, column: 8, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 3010, column: 8)
!9109 = !DILocation(line: 3010, column: 8, scope: !9100)
!9110 = !DILocation(line: 3011, column: 25, scope: !9111)
!9111 = distinct !DILexicalBlock(scope: !9108, file: !3, line: 3010, column: 17)
!9112 = !DILocation(line: 3011, column: 36, scope: !9111)
!9113 = !DILocation(line: 3011, column: 5, scope: !9111)
!9114 = !DILocation(line: 3012, column: 10, scope: !9111)
!9115 = !DILocation(line: 3013, column: 4, scope: !9111)
!9116 = !DILocation(line: 3014, column: 3, scope: !9100)
!9117 = !DILocation(line: 3015, column: 2, scope: !9093)
!9118 = !DILocation(line: 3005, column: 38, scope: !9088)
!9119 = !DILocation(line: 3005, column: 2, scope: !9088)
!9120 = distinct !{!9120, !9090, !9121}
!9121 = !DILocation(line: 3015, column: 2, scope: !9085)
!9122 = !DILocation(line: 3017, column: 6, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9050, file: !3, line: 3017, column: 6)
!9124 = !DILocation(line: 3017, column: 6, scope: !9050)
!9125 = !DILocation(line: 3018, column: 41, scope: !9123)
!9126 = !DILocation(line: 3018, column: 35, scope: !9123)
!9127 = !DILocation(line: 3019, column: 29, scope: !9123)
!9128 = !DILocation(line: 3018, column: 7, scope: !9123)
!9129 = !DILocation(line: 3021, column: 9, scope: !9050)
!9130 = !DILocation(line: 3021, column: 25, scope: !9050)
!9131 = !DILocation(line: 3021, column: 15, scope: !9050)
!9132 = !DILocation(line: 3021, column: 2, scope: !9050)
!9133 = distinct !DISubprogram(name: "add_cea_modes", scope: !3, file: !3, line: 4258, type: !6241, scopeLine: 4259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9134 = !DILocalVariable(name: "connector", arg: 1, scope: !9133, file: !3, line: 4258, type: !1162)
!9135 = !DILocation(line: 4258, column: 37, scope: !9133)
!9136 = !DILocalVariable(name: "edid", arg: 2, scope: !9133, file: !3, line: 4258, type: !369)
!9137 = !DILocation(line: 4258, column: 61, scope: !9133)
!9138 = !DILocalVariable(name: "cea", scope: !9133, file: !3, line: 4260, type: !576)
!9139 = !DILocation(line: 4260, column: 12, scope: !9133)
!9140 = !DILocation(line: 4260, column: 41, scope: !9133)
!9141 = !DILocation(line: 4260, column: 18, scope: !9133)
!9142 = !DILocalVariable(name: "db", scope: !9133, file: !3, line: 4261, type: !576)
!9143 = !DILocation(line: 4261, column: 12, scope: !9133)
!9144 = !DILocalVariable(name: "hdmi", scope: !9133, file: !3, line: 4261, type: !576)
!9145 = !DILocation(line: 4261, column: 17, scope: !9133)
!9146 = !DILocalVariable(name: "video", scope: !9133, file: !3, line: 4261, type: !576)
!9147 = !DILocation(line: 4261, column: 31, scope: !9133)
!9148 = !DILocalVariable(name: "dbl", scope: !9133, file: !3, line: 4262, type: !375)
!9149 = !DILocation(line: 4262, column: 5, scope: !9133)
!9150 = !DILocalVariable(name: "hdmi_len", scope: !9133, file: !3, line: 4262, type: !375)
!9151 = !DILocation(line: 4262, column: 10, scope: !9133)
!9152 = !DILocalVariable(name: "video_len", scope: !9133, file: !3, line: 4262, type: !375)
!9153 = !DILocation(line: 4262, column: 20, scope: !9133)
!9154 = !DILocalVariable(name: "modes", scope: !9133, file: !3, line: 4263, type: !139)
!9155 = !DILocation(line: 4263, column: 6, scope: !9133)
!9156 = !DILocation(line: 4265, column: 6, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 4265, column: 6)
!9158 = !DILocation(line: 4265, column: 10, scope: !9157)
!9159 = !DILocation(line: 4265, column: 26, scope: !9157)
!9160 = !DILocation(line: 4265, column: 13, scope: !9157)
!9161 = !DILocation(line: 4265, column: 31, scope: !9157)
!9162 = !DILocation(line: 4265, column: 6, scope: !9133)
!9163 = !DILocalVariable(name: "i", scope: !9164, file: !3, line: 4266, type: !139)
!9164 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 4265, column: 37)
!9165 = !DILocation(line: 4266, column: 7, scope: !9164)
!9166 = !DILocalVariable(name: "start", scope: !9164, file: !3, line: 4266, type: !139)
!9167 = !DILocation(line: 4266, column: 10, scope: !9164)
!9168 = !DILocalVariable(name: "end", scope: !9164, file: !3, line: 4266, type: !139)
!9169 = !DILocation(line: 4266, column: 17, scope: !9164)
!9170 = !DILocation(line: 4268, column: 22, scope: !9171)
!9171 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 4268, column: 7)
!9172 = !DILocation(line: 4268, column: 7, scope: !9171)
!9173 = !DILocation(line: 4268, column: 7, scope: !9164)
!9174 = !DILocation(line: 4269, column: 4, scope: !9171)
!9175 = !DILocation(line: 4271, column: 3, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9164, file: !3, line: 4271, column: 3)
!9177 = !DILocation(line: 4271, column: 3, scope: !9178)
!9178 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 4271, column: 3)
!9179 = !DILocation(line: 0, scope: !9178)
!9180 = !DILocation(line: 4272, column: 10, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 4271, column: 39)
!9182 = !DILocation(line: 4272, column: 14, scope: !9181)
!9183 = !DILocation(line: 4272, column: 7, scope: !9181)
!9184 = !DILocation(line: 4273, column: 29, scope: !9181)
!9185 = !DILocation(line: 4273, column: 10, scope: !9181)
!9186 = !DILocation(line: 4273, column: 8, scope: !9181)
!9187 = !DILocation(line: 4275, column: 19, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 4275, column: 8)
!9189 = !DILocation(line: 4275, column: 8, scope: !9188)
!9190 = !DILocation(line: 4275, column: 23, scope: !9188)
!9191 = !DILocation(line: 4275, column: 8, scope: !9181)
!9192 = !DILocation(line: 4276, column: 13, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 4275, column: 39)
!9194 = !DILocation(line: 4276, column: 16, scope: !9193)
!9195 = !DILocation(line: 4276, column: 11, scope: !9193)
!9196 = !DILocation(line: 4277, column: 17, scope: !9193)
!9197 = !DILocation(line: 4277, column: 15, scope: !9193)
!9198 = !DILocation(line: 4278, column: 27, scope: !9193)
!9199 = !DILocation(line: 4278, column: 38, scope: !9193)
!9200 = !DILocation(line: 4278, column: 45, scope: !9193)
!9201 = !DILocation(line: 4278, column: 14, scope: !9193)
!9202 = !DILocation(line: 4278, column: 11, scope: !9193)
!9203 = !DILocation(line: 4279, column: 4, scope: !9193)
!9204 = !DILocation(line: 4279, column: 35, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 4279, column: 15)
!9206 = !DILocation(line: 4279, column: 15, scope: !9205)
!9207 = !DILocation(line: 4279, column: 15, scope: !9188)
!9208 = !DILocation(line: 4280, column: 12, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 4279, column: 40)
!9210 = !DILocation(line: 4280, column: 10, scope: !9209)
!9211 = !DILocation(line: 4281, column: 16, scope: !9209)
!9212 = !DILocation(line: 4281, column: 14, scope: !9209)
!9213 = !DILocation(line: 4282, column: 4, scope: !9209)
!9214 = !DILocation(line: 4282, column: 33, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 4282, column: 15)
!9216 = !DILocation(line: 4282, column: 15, scope: !9215)
!9217 = !DILocation(line: 4282, column: 15, scope: !9205)
!9218 = !DILocalVariable(name: "vdb420", scope: !9219, file: !3, line: 4283, type: !576)
!9219 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 4282, column: 38)
!9220 = !DILocation(line: 4283, column: 15, scope: !9219)
!9221 = !DILocation(line: 4283, column: 25, scope: !9219)
!9222 = !DILocation(line: 4286, column: 31, scope: !9219)
!9223 = !DILocation(line: 4287, column: 10, scope: !9219)
!9224 = !DILocation(line: 4288, column: 10, scope: !9219)
!9225 = !DILocation(line: 4288, column: 14, scope: !9219)
!9226 = !DILocation(line: 4286, column: 14, scope: !9219)
!9227 = !DILocation(line: 4286, column: 11, scope: !9219)
!9228 = !DILocation(line: 4289, column: 4, scope: !9219)
!9229 = !DILocation(line: 4290, column: 3, scope: !9181)
!9230 = distinct !{!9230, !9175, !9231}
!9231 = !DILocation(line: 4290, column: 3, scope: !9176)
!9232 = !DILocation(line: 4291, column: 2, scope: !9164)
!9233 = !DILocation(line: 4297, column: 6, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 4297, column: 6)
!9235 = !DILocation(line: 4297, column: 6, scope: !9133)
!9236 = !DILocation(line: 4298, column: 31, scope: !9234)
!9237 = !DILocation(line: 4298, column: 42, scope: !9234)
!9238 = !DILocation(line: 4298, column: 48, scope: !9234)
!9239 = !DILocation(line: 4298, column: 58, scope: !9234)
!9240 = !DILocation(line: 4299, column: 10, scope: !9234)
!9241 = !DILocation(line: 4298, column: 12, scope: !9234)
!9242 = !DILocation(line: 4298, column: 9, scope: !9234)
!9243 = !DILocation(line: 4298, column: 3, scope: !9234)
!9244 = !DILocation(line: 4301, column: 9, scope: !9133)
!9245 = !DILocation(line: 4301, column: 2, scope: !9133)
!9246 = !DILocation(line: 4302, column: 1, scope: !9133)
!9247 = distinct !DISubprogram(name: "add_alternate_cea_modes", scope: !3, file: !3, line: 3580, type: !6241, scopeLine: 3581, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9248 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !9249)
!9249 = distinct !DILocation(line: 3602, column: 15, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 3601, column: 31)
!9251 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3601, column: 7)
!9252 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 3595, column: 60)
!9253 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3595, column: 2)
!9254 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 3595, column: 2)
!9255 = !DILocalVariable(name: "connector", arg: 1, scope: !9247, file: !3, line: 3580, type: !1162)
!9256 = !DILocation(line: 3580, column: 47, scope: !9247)
!9257 = !DILocalVariable(name: "edid", arg: 2, scope: !9247, file: !3, line: 3580, type: !369)
!9258 = !DILocation(line: 3580, column: 71, scope: !9247)
!9259 = !DILocalVariable(name: "dev", scope: !9247, file: !3, line: 3582, type: !1166)
!9260 = !DILocation(line: 3582, column: 21, scope: !9247)
!9261 = !DILocation(line: 3582, column: 27, scope: !9247)
!9262 = !DILocation(line: 3582, column: 38, scope: !9247)
!9263 = !DILocalVariable(name: "mode", scope: !9247, file: !3, line: 3583, type: !525)
!9264 = !DILocation(line: 3583, column: 27, scope: !9247)
!9265 = !DILocalVariable(name: "tmp", scope: !9247, file: !3, line: 3583, type: !525)
!9266 = !DILocation(line: 3583, column: 34, scope: !9247)
!9267 = !DILocalVariable(name: "list", scope: !9247, file: !3, line: 3584, type: !562)
!9268 = !DILocation(line: 3584, column: 2, scope: !9247)
!9269 = !DILocalVariable(name: "modes", scope: !9247, file: !3, line: 3585, type: !139)
!9270 = !DILocation(line: 3585, column: 6, scope: !9247)
!9271 = !DILocation(line: 3588, column: 30, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 3588, column: 6)
!9273 = !DILocation(line: 3588, column: 7, scope: !9272)
!9274 = !DILocation(line: 3588, column: 6, scope: !9247)
!9275 = !DILocation(line: 3589, column: 3, scope: !9272)
!9276 = !DILocalVariable(name: "__mptr", scope: !9277, file: !3, line: 3595, type: !368)
!9277 = distinct !DILexicalBlock(scope: !9254, file: !3, line: 3595, column: 2)
!9278 = !DILocation(line: 3595, column: 2, scope: !9277)
!9279 = !DILocation(line: 3595, column: 2, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9277, file: !3, line: 3595, column: 2)
!9281 = !DILocation(line: 3595, column: 2, scope: !9254)
!9282 = !DILocation(line: 3595, column: 2, scope: !9253)
!9283 = !DILocalVariable(name: "cea_mode", scope: !9252, file: !3, line: 3596, type: !594)
!9284 = !DILocation(line: 3596, column: 34, scope: !9252)
!9285 = !DILocalVariable(name: "newmode", scope: !9252, file: !3, line: 3597, type: !525)
!9286 = !DILocation(line: 3597, column: 28, scope: !9252)
!9287 = !DILocalVariable(name: "vic", scope: !9252, file: !3, line: 3598, type: !375)
!9288 = !DILocation(line: 3598, column: 6, scope: !9252)
!9289 = !DILocation(line: 3598, column: 31, scope: !9252)
!9290 = !DILocation(line: 3598, column: 12, scope: !9252)
!9291 = !DILocalVariable(name: "clock1", scope: !9252, file: !3, line: 3599, type: !7)
!9292 = !DILocation(line: 3599, column: 16, scope: !9252)
!9293 = !DILocalVariable(name: "clock2", scope: !9252, file: !3, line: 3599, type: !7)
!9294 = !DILocation(line: 3599, column: 24, scope: !9252)
!9295 = !DILocation(line: 3601, column: 25, scope: !9251)
!9296 = !DILocation(line: 3601, column: 7, scope: !9251)
!9297 = !DILocation(line: 3601, column: 7, scope: !9252)
!9298 = !DILocation(line: 3602, column: 32, scope: !9250)
!9299 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !9249)
!9300 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !9249)
!9301 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !9249)
!9302 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !9249)
!9303 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !9249)
!9304 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !9249)
!9305 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !9249)
!9306 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !9249)
!9307 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !9249)
!9308 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !9249)
!9309 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !9249)
!9310 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !9249)
!9311 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !9249)
!9312 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !9249)
!9313 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !9249)
!9314 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !9249)
!9315 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !9249)
!9316 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !9249)
!9317 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !9249)
!9318 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !9249)
!9319 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !9249)
!9320 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !9249)
!9321 = !DILocation(line: 3602, column: 13, scope: !9250)
!9322 = !DILocation(line: 3603, column: 38, scope: !9250)
!9323 = !DILocation(line: 3603, column: 13, scope: !9250)
!9324 = !DILocation(line: 3603, column: 11, scope: !9250)
!9325 = !DILocation(line: 3604, column: 3, scope: !9250)
!9326 = !DILocation(line: 3605, column: 30, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 3604, column: 10)
!9328 = !DILocation(line: 3605, column: 10, scope: !9327)
!9329 = !DILocation(line: 3605, column: 8, scope: !9327)
!9330 = !DILocation(line: 3606, column: 27, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 3606, column: 8)
!9332 = !DILocation(line: 3606, column: 8, scope: !9331)
!9333 = !DILocation(line: 3606, column: 8, scope: !9327)
!9334 = !DILocation(line: 3607, column: 31, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9331, file: !3, line: 3606, column: 33)
!9336 = !DILocation(line: 3607, column: 17, scope: !9335)
!9337 = !DILocation(line: 3607, column: 14, scope: !9335)
!9338 = !DILocation(line: 3608, column: 40, scope: !9335)
!9339 = !DILocation(line: 3608, column: 14, scope: !9335)
!9340 = !DILocation(line: 3608, column: 12, scope: !9335)
!9341 = !DILocation(line: 3609, column: 4, scope: !9335)
!9342 = !DILocation(line: 3612, column: 8, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3612, column: 7)
!9344 = !DILocation(line: 3612, column: 7, scope: !9252)
!9345 = !DILocation(line: 3613, column: 4, scope: !9343)
!9346 = !DILocation(line: 3615, column: 12, scope: !9252)
!9347 = !DILocation(line: 3615, column: 22, scope: !9252)
!9348 = !DILocation(line: 3615, column: 10, scope: !9252)
!9349 = !DILocation(line: 3617, column: 7, scope: !9350)
!9350 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3617, column: 7)
!9351 = !DILocation(line: 3617, column: 17, scope: !9350)
!9352 = !DILocation(line: 3617, column: 14, scope: !9350)
!9353 = !DILocation(line: 3617, column: 7, scope: !9252)
!9354 = !DILocation(line: 3618, column: 4, scope: !9350)
!9355 = !DILocation(line: 3620, column: 7, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3620, column: 7)
!9357 = !DILocation(line: 3620, column: 13, scope: !9356)
!9358 = !DILocation(line: 3620, column: 22, scope: !9356)
!9359 = !DILocation(line: 3620, column: 19, scope: !9356)
!9360 = !DILocation(line: 3620, column: 29, scope: !9356)
!9361 = !DILocation(line: 3620, column: 32, scope: !9356)
!9362 = !DILocation(line: 3620, column: 38, scope: !9356)
!9363 = !DILocation(line: 3620, column: 47, scope: !9356)
!9364 = !DILocation(line: 3620, column: 44, scope: !9356)
!9365 = !DILocation(line: 3620, column: 7, scope: !9252)
!9366 = !DILocation(line: 3621, column: 4, scope: !9356)
!9367 = !DILocation(line: 3623, column: 32, scope: !9252)
!9368 = !DILocation(line: 3623, column: 37, scope: !9252)
!9369 = !DILocation(line: 3623, column: 13, scope: !9252)
!9370 = !DILocation(line: 3623, column: 11, scope: !9252)
!9371 = !DILocation(line: 3624, column: 8, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3624, column: 7)
!9373 = !DILocation(line: 3624, column: 7, scope: !9252)
!9374 = !DILocation(line: 3625, column: 4, scope: !9372)
!9375 = !DILocation(line: 3628, column: 21, scope: !9252)
!9376 = !DILocation(line: 3628, column: 27, scope: !9252)
!9377 = !DILocation(line: 3628, column: 33, scope: !9252)
!9378 = !DILocation(line: 3628, column: 3, scope: !9252)
!9379 = !DILocation(line: 3628, column: 12, scope: !9252)
!9380 = !DILocation(line: 3628, column: 18, scope: !9252)
!9381 = !DILocation(line: 3634, column: 7, scope: !9382)
!9382 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 3634, column: 7)
!9383 = !DILocation(line: 3634, column: 13, scope: !9382)
!9384 = !DILocation(line: 3634, column: 22, scope: !9382)
!9385 = !DILocation(line: 3634, column: 19, scope: !9382)
!9386 = !DILocation(line: 3634, column: 7, scope: !9252)
!9387 = !DILocation(line: 3635, column: 21, scope: !9382)
!9388 = !DILocation(line: 3635, column: 4, scope: !9382)
!9389 = !DILocation(line: 3635, column: 13, scope: !9382)
!9390 = !DILocation(line: 3635, column: 19, scope: !9382)
!9391 = !DILocation(line: 3637, column: 21, scope: !9382)
!9392 = !DILocation(line: 3637, column: 4, scope: !9382)
!9393 = !DILocation(line: 3637, column: 13, scope: !9382)
!9394 = !DILocation(line: 3637, column: 19, scope: !9382)
!9395 = !DILocation(line: 3639, column: 18, scope: !9252)
!9396 = !DILocation(line: 3639, column: 27, scope: !9252)
!9397 = !DILocation(line: 3639, column: 3, scope: !9252)
!9398 = !DILocation(line: 3640, column: 2, scope: !9252)
!9399 = !DILocalVariable(name: "__mptr", scope: !9400, file: !3, line: 3595, type: !368)
!9400 = distinct !DILexicalBlock(scope: !9253, file: !3, line: 3595, column: 2)
!9401 = !DILocation(line: 3595, column: 2, scope: !9400)
!9402 = !DILocation(line: 3595, column: 2, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9400, file: !3, line: 3595, column: 2)
!9404 = distinct !{!9404, !9281, !9405}
!9405 = !DILocation(line: 3640, column: 2, scope: !9254)
!9406 = !DILocalVariable(name: "__mptr", scope: !9407, file: !3, line: 3642, type: !368)
!9407 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 3642, column: 2)
!9408 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 3642, column: 2)
!9409 = !DILocation(line: 3642, column: 2, scope: !9407)
!9410 = !DILocation(line: 3642, column: 2, scope: !9411)
!9411 = distinct !DILexicalBlock(scope: !9407, file: !3, line: 3642, column: 2)
!9412 = !DILocation(line: 3642, column: 2, scope: !9408)
!9413 = !DILocalVariable(name: "__mptr", scope: !9414, file: !3, line: 3642, type: !368)
!9414 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 3642, column: 2)
!9415 = !DILocation(line: 3642, column: 2, scope: !9414)
!9416 = !DILocation(line: 3642, column: 2, scope: !9417)
!9417 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 3642, column: 2)
!9418 = !DILocation(line: 3642, column: 2, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 3642, column: 2)
!9420 = !DILocation(line: 3643, column: 13, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 3642, column: 51)
!9422 = !DILocation(line: 3643, column: 19, scope: !9421)
!9423 = !DILocation(line: 3643, column: 3, scope: !9421)
!9424 = !DILocation(line: 3644, column: 23, scope: !9421)
!9425 = !DILocation(line: 3644, column: 34, scope: !9421)
!9426 = !DILocation(line: 3644, column: 3, scope: !9421)
!9427 = !DILocation(line: 3645, column: 8, scope: !9421)
!9428 = !DILocation(line: 3646, column: 2, scope: !9421)
!9429 = !DILocalVariable(name: "__mptr", scope: !9430, file: !3, line: 3642, type: !368)
!9430 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 3642, column: 2)
!9431 = !DILocation(line: 3642, column: 2, scope: !9430)
!9432 = !DILocation(line: 3642, column: 2, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9430, file: !3, line: 3642, column: 2)
!9434 = distinct !{!9434, !9412, !9435}
!9435 = !DILocation(line: 3646, column: 2, scope: !9408)
!9436 = !DILocation(line: 3648, column: 9, scope: !9247)
!9437 = !DILocation(line: 3648, column: 2, scope: !9247)
!9438 = !DILocation(line: 3649, column: 1, scope: !9247)
!9439 = distinct !DISubprogram(name: "add_displayid_detailed_modes", scope: !3, file: !3, line: 5277, type: !6241, scopeLine: 5279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9440 = !DILocalVariable(name: "connector", arg: 1, scope: !9439, file: !3, line: 5277, type: !1162)
!9441 = !DILocation(line: 5277, column: 63, scope: !9439)
!9442 = !DILocalVariable(name: "edid", arg: 2, scope: !9439, file: !3, line: 5278, type: !369)
!9443 = !DILocation(line: 5278, column: 19, scope: !9439)
!9444 = !DILocalVariable(name: "displayid", scope: !9439, file: !3, line: 5280, type: !522)
!9445 = !DILocation(line: 5280, column: 6, scope: !9439)
!9446 = !DILocalVariable(name: "length", scope: !9439, file: !3, line: 5281, type: !139)
!9447 = !DILocation(line: 5281, column: 6, scope: !9439)
!9448 = !DILocalVariable(name: "idx", scope: !9439, file: !3, line: 5281, type: !139)
!9449 = !DILocation(line: 5281, column: 14, scope: !9439)
!9450 = !DILocalVariable(name: "block", scope: !9439, file: !3, line: 5282, type: !579)
!9451 = !DILocation(line: 5282, column: 26, scope: !9439)
!9452 = !DILocalVariable(name: "num_modes", scope: !9439, file: !3, line: 5283, type: !139)
!9453 = !DILocation(line: 5283, column: 6, scope: !9439)
!9454 = !DILocalVariable(name: "ext_index", scope: !9439, file: !3, line: 5284, type: !139)
!9455 = !DILocation(line: 5284, column: 6, scope: !9439)
!9456 = !DILocation(line: 5286, column: 2, scope: !9439)
!9457 = !DILocation(line: 5287, column: 44, scope: !9458)
!9458 = distinct !DILexicalBlock(scope: !9459, file: !3, line: 5286, column: 11)
!9459 = distinct !DILexicalBlock(scope: !9460, file: !3, line: 5286, column: 2)
!9460 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 5286, column: 2)
!9461 = !DILocation(line: 5287, column: 15, scope: !9458)
!9462 = !DILocation(line: 5287, column: 13, scope: !9458)
!9463 = !DILocation(line: 5289, column: 8, scope: !9464)
!9464 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 5289, column: 7)
!9465 = !DILocation(line: 5289, column: 7, scope: !9458)
!9466 = !DILocation(line: 5290, column: 4, scope: !9464)
!9467 = !DILocation(line: 5292, column: 7, scope: !9458)
!9468 = !DILocation(line: 5293, column: 3, scope: !9469)
!9469 = distinct !DILexicalBlock(scope: !9458, file: !3, line: 5293, column: 3)
!9470 = !DILocation(line: 5293, column: 3, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9469, file: !3, line: 5293, column: 3)
!9472 = !DILocation(line: 0, scope: !9471)
!9473 = !DILocation(line: 5294, column: 12, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 5293, column: 56)
!9475 = !DILocation(line: 5294, column: 19, scope: !9474)
!9476 = !DILocation(line: 5294, column: 4, scope: !9474)
!9477 = !DILocation(line: 5296, column: 49, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9474, file: !3, line: 5294, column: 24)
!9479 = !DILocation(line: 5296, column: 60, scope: !9478)
!9480 = !DILocation(line: 5296, column: 18, scope: !9478)
!9481 = !DILocation(line: 5296, column: 15, scope: !9478)
!9482 = !DILocation(line: 5297, column: 5, scope: !9478)
!9483 = !DILocation(line: 5299, column: 3, scope: !9474)
!9484 = distinct !{!9484, !9468, !9485}
!9485 = !DILocation(line: 5299, column: 3, scope: !9469)
!9486 = !DILocation(line: 5286, column: 2, scope: !9459)
!9487 = distinct !{!9487, !9488, !9489}
!9488 = !DILocation(line: 5286, column: 2, scope: !9460)
!9489 = !DILocation(line: 5300, column: 2, scope: !9460)
!9490 = !DILocation(line: 5302, column: 9, scope: !9439)
!9491 = !DILocation(line: 5302, column: 2, scope: !9439)
!9492 = distinct !DISubprogram(name: "add_inferred_modes", scope: !3, file: !3, line: 2930, type: !6241, scopeLine: 2931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9493 = !DILocalVariable(name: "connector", arg: 1, scope: !9492, file: !3, line: 2930, type: !1162)
!9494 = !DILocation(line: 2930, column: 42, scope: !9492)
!9495 = !DILocalVariable(name: "edid", arg: 2, scope: !9492, file: !3, line: 2930, type: !369)
!9496 = !DILocation(line: 2930, column: 66, scope: !9492)
!9497 = !DILocalVariable(name: "closure", scope: !9492, file: !3, line: 2932, type: !8945)
!9498 = !DILocation(line: 2932, column: 31, scope: !9492)
!9499 = !DILocation(line: 2932, column: 41, scope: !9492)
!9500 = !DILocation(line: 2933, column: 16, scope: !9492)
!9501 = !DILocation(line: 2934, column: 11, scope: !9492)
!9502 = !DILocation(line: 2937, column: 6, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 2937, column: 6)
!9504 = !DILocation(line: 2937, column: 6, scope: !9492)
!9505 = !DILocation(line: 2938, column: 37, scope: !9503)
!9506 = !DILocation(line: 2938, column: 31, scope: !9503)
!9507 = !DILocation(line: 2939, column: 10, scope: !9503)
!9508 = !DILocation(line: 2938, column: 3, scope: !9503)
!9509 = !DILocation(line: 2941, column: 17, scope: !9492)
!9510 = !DILocation(line: 2941, column: 2, scope: !9492)
!9511 = distinct !DISubprogram(name: "edid_fixup_preferred", scope: !3, file: !3, line: 2155, type: !9512, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9512 = !DISubroutineType(types: !9513)
!9513 = !{null, !1162, !388}
!9514 = !DILocalVariable(name: "connector", arg: 1, scope: !9511, file: !3, line: 2155, type: !1162)
!9515 = !DILocation(line: 2155, column: 56, scope: !9511)
!9516 = !DILocalVariable(name: "quirks", arg: 2, scope: !9511, file: !3, line: 2156, type: !388)
!9517 = !DILocation(line: 2156, column: 10, scope: !9511)
!9518 = !DILocalVariable(name: "t", scope: !9511, file: !3, line: 2158, type: !525)
!9519 = !DILocation(line: 2158, column: 27, scope: !9511)
!9520 = !DILocalVariable(name: "cur_mode", scope: !9511, file: !3, line: 2158, type: !525)
!9521 = !DILocation(line: 2158, column: 31, scope: !9511)
!9522 = !DILocalVariable(name: "preferred_mode", scope: !9511, file: !3, line: 2158, type: !525)
!9523 = !DILocation(line: 2158, column: 42, scope: !9511)
!9524 = !DILocalVariable(name: "target_refresh", scope: !9511, file: !3, line: 2159, type: !139)
!9525 = !DILocation(line: 2159, column: 6, scope: !9511)
!9526 = !DILocalVariable(name: "cur_vrefresh", scope: !9511, file: !3, line: 2160, type: !139)
!9527 = !DILocation(line: 2160, column: 6, scope: !9511)
!9528 = !DILocalVariable(name: "preferred_vrefresh", scope: !9511, file: !3, line: 2160, type: !139)
!9529 = !DILocation(line: 2160, column: 20, scope: !9511)
!9530 = !DILocation(line: 2162, column: 18, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2162, column: 6)
!9532 = !DILocation(line: 2162, column: 29, scope: !9531)
!9533 = !DILocation(line: 2162, column: 6, scope: !9531)
!9534 = !DILocation(line: 2162, column: 6, scope: !9511)
!9535 = !DILocation(line: 2163, column: 3, scope: !9531)
!9536 = !DILocation(line: 2165, column: 6, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2165, column: 6)
!9538 = !DILocation(line: 2165, column: 13, scope: !9537)
!9539 = !DILocation(line: 2165, column: 6, scope: !9511)
!9540 = !DILocation(line: 2166, column: 18, scope: !9537)
!9541 = !DILocation(line: 2166, column: 3, scope: !9537)
!9542 = !DILocation(line: 2167, column: 6, scope: !9543)
!9543 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2167, column: 6)
!9544 = !DILocation(line: 2167, column: 13, scope: !9543)
!9545 = !DILocation(line: 2167, column: 6, scope: !9511)
!9546 = !DILocation(line: 2168, column: 18, scope: !9543)
!9547 = !DILocation(line: 2168, column: 3, scope: !9543)
!9548 = !DILocalVariable(name: "__mptr", scope: !9549, file: !3, line: 2170, type: !368)
!9549 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2170, column: 19)
!9550 = !DILocation(line: 2170, column: 19, scope: !9549)
!9551 = !DILocation(line: 2170, column: 19, scope: !9552)
!9552 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 2170, column: 19)
!9553 = !DILocation(line: 2170, column: 17, scope: !9511)
!9554 = !DILocalVariable(name: "__mptr", scope: !9555, file: !3, line: 2173, type: !368)
!9555 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 2173, column: 2)
!9556 = distinct !DILexicalBlock(scope: !9511, file: !3, line: 2173, column: 2)
!9557 = !DILocation(line: 2173, column: 2, scope: !9555)
!9558 = !DILocation(line: 2173, column: 2, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 2173, column: 2)
!9560 = !DILocation(line: 2173, column: 2, scope: !9556)
!9561 = !DILocalVariable(name: "__mptr", scope: !9562, file: !3, line: 2173, type: !368)
!9562 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 2173, column: 2)
!9563 = !DILocation(line: 2173, column: 2, scope: !9562)
!9564 = !DILocation(line: 2173, column: 2, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 2173, column: 2)
!9566 = !DILocation(line: 2173, column: 2, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9556, file: !3, line: 2173, column: 2)
!9568 = !DILocation(line: 2174, column: 3, scope: !9569)
!9569 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 2173, column: 72)
!9570 = !DILocation(line: 2174, column: 13, scope: !9569)
!9571 = !DILocation(line: 2174, column: 18, scope: !9569)
!9572 = !DILocation(line: 2176, column: 7, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2176, column: 7)
!9574 = !DILocation(line: 2176, column: 19, scope: !9573)
!9575 = !DILocation(line: 2176, column: 16, scope: !9573)
!9576 = !DILocation(line: 2176, column: 7, scope: !9569)
!9577 = !DILocation(line: 2177, column: 4, scope: !9573)
!9578 = !DILocation(line: 2180, column: 7, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2180, column: 7)
!9580 = !DILocation(line: 2180, column: 29, scope: !9579)
!9581 = !DILocation(line: 2180, column: 27, scope: !9579)
!9582 = !DILocation(line: 2180, column: 7, scope: !9569)
!9583 = !DILocation(line: 2181, column: 21, scope: !9579)
!9584 = !DILocation(line: 2181, column: 19, scope: !9579)
!9585 = !DILocation(line: 2181, column: 4, scope: !9579)
!9586 = !DILocation(line: 2183, column: 36, scope: !9569)
!9587 = !DILocation(line: 2183, column: 18, scope: !9569)
!9588 = !DILocation(line: 2183, column: 16, scope: !9569)
!9589 = !DILocation(line: 2184, column: 42, scope: !9569)
!9590 = !DILocation(line: 2184, column: 24, scope: !9569)
!9591 = !DILocation(line: 2184, column: 22, scope: !9569)
!9592 = !DILocation(line: 2186, column: 8, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2186, column: 7)
!9594 = !DILocation(line: 2186, column: 31, scope: !9593)
!9595 = !DILocation(line: 2186, column: 28, scope: !9593)
!9596 = !DILocation(line: 2186, column: 58, scope: !9593)
!9597 = !DILocalVariable(name: "__x", scope: !9598, file: !3, line: 2187, type: !139)
!9598 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2187, column: 7)
!9599 = !DILocation(line: 2187, column: 7, scope: !9598)
!9600 = !DILocalVariable(name: "__x", scope: !9601, file: !3, line: 2188, type: !139)
!9601 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2188, column: 7)
!9602 = !DILocation(line: 2188, column: 7, scope: !9601)
!9603 = !DILocation(line: 2187, column: 55, scope: !9593)
!9604 = !DILocation(line: 2186, column: 7, scope: !9569)
!9605 = !DILocation(line: 2189, column: 21, scope: !9606)
!9606 = distinct !DILexicalBlock(scope: !9593, file: !3, line: 2188, column: 62)
!9607 = !DILocation(line: 2189, column: 19, scope: !9606)
!9608 = !DILocation(line: 2190, column: 3, scope: !9606)
!9609 = !DILocation(line: 2191, column: 2, scope: !9569)
!9610 = !DILocalVariable(name: "__mptr", scope: !9611, file: !3, line: 2173, type: !368)
!9611 = distinct !DILexicalBlock(scope: !9567, file: !3, line: 2173, column: 2)
!9612 = !DILocation(line: 2173, column: 2, scope: !9611)
!9613 = !DILocation(line: 2173, column: 2, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 2173, column: 2)
!9615 = distinct !{!9615, !9560, !9616}
!9616 = !DILocation(line: 2191, column: 2, scope: !9556)
!9617 = !DILocation(line: 2193, column: 2, scope: !9511)
!9618 = !DILocation(line: 2193, column: 18, scope: !9511)
!9619 = !DILocation(line: 2193, column: 23, scope: !9511)
!9620 = !DILocation(line: 2194, column: 1, scope: !9511)
!9621 = distinct !DISubprogram(name: "drm_add_modes_noedid", scope: !3, file: !3, line: 5395, type: !9622, scopeLine: 5397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9622 = !DISubroutineType(types: !9623)
!9623 = !{!139, !1162, !139, !139}
!9624 = !DILocalVariable(name: "connector", arg: 1, scope: !9621, file: !3, line: 5395, type: !1162)
!9625 = !DILocation(line: 5395, column: 48, scope: !9621)
!9626 = !DILocalVariable(name: "hdisplay", arg: 2, scope: !9621, file: !3, line: 5396, type: !139)
!9627 = !DILocation(line: 5396, column: 8, scope: !9621)
!9628 = !DILocalVariable(name: "vdisplay", arg: 3, scope: !9621, file: !3, line: 5396, type: !139)
!9629 = !DILocation(line: 5396, column: 22, scope: !9621)
!9630 = !DILocalVariable(name: "i", scope: !9621, file: !3, line: 5398, type: !139)
!9631 = !DILocation(line: 5398, column: 6, scope: !9621)
!9632 = !DILocalVariable(name: "count", scope: !9621, file: !3, line: 5398, type: !139)
!9633 = !DILocation(line: 5398, column: 9, scope: !9621)
!9634 = !DILocalVariable(name: "num_modes", scope: !9621, file: !3, line: 5398, type: !139)
!9635 = !DILocation(line: 5398, column: 16, scope: !9621)
!9636 = !DILocalVariable(name: "mode", scope: !9621, file: !3, line: 5399, type: !525)
!9637 = !DILocation(line: 5399, column: 27, scope: !9621)
!9638 = !DILocalVariable(name: "dev", scope: !9621, file: !3, line: 5400, type: !1166)
!9639 = !DILocation(line: 5400, column: 21, scope: !9621)
!9640 = !DILocation(line: 5400, column: 27, scope: !9621)
!9641 = !DILocation(line: 5400, column: 38, scope: !9621)
!9642 = !DILocation(line: 5402, column: 8, scope: !9621)
!9643 = !DILocation(line: 5403, column: 6, scope: !9644)
!9644 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 5403, column: 6)
!9645 = !DILocation(line: 5403, column: 15, scope: !9644)
!9646 = !DILocation(line: 5403, column: 6, scope: !9621)
!9647 = !DILocation(line: 5404, column: 12, scope: !9644)
!9648 = !DILocation(line: 5404, column: 3, scope: !9644)
!9649 = !DILocation(line: 5405, column: 6, scope: !9650)
!9650 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 5405, column: 6)
!9651 = !DILocation(line: 5405, column: 15, scope: !9650)
!9652 = !DILocation(line: 5405, column: 6, scope: !9621)
!9653 = !DILocation(line: 5406, column: 12, scope: !9650)
!9654 = !DILocation(line: 5406, column: 3, scope: !9650)
!9655 = !DILocation(line: 5408, column: 9, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 5408, column: 2)
!9657 = !DILocation(line: 5408, column: 7, scope: !9656)
!9658 = !DILocation(line: 5408, column: 14, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9656, file: !3, line: 5408, column: 2)
!9660 = !DILocation(line: 5408, column: 18, scope: !9659)
!9661 = !DILocation(line: 5408, column: 16, scope: !9659)
!9662 = !DILocation(line: 5408, column: 2, scope: !9656)
!9663 = !DILocalVariable(name: "ptr", scope: !9664, file: !3, line: 5409, type: !594)
!9664 = distinct !DILexicalBlock(scope: !9659, file: !3, line: 5408, column: 30)
!9665 = !DILocation(line: 5409, column: 34, scope: !9664)
!9666 = !DILocation(line: 5409, column: 55, scope: !9664)
!9667 = !DILocation(line: 5409, column: 41, scope: !9664)
!9668 = !DILocation(line: 5411, column: 7, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 5411, column: 7)
!9670 = !DILocation(line: 5411, column: 16, scope: !9669)
!9671 = !DILocation(line: 5411, column: 19, scope: !9669)
!9672 = !DILocation(line: 5411, column: 7, scope: !9664)
!9673 = !DILocation(line: 5417, column: 8, scope: !9674)
!9674 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 5417, column: 8)
!9675 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 5411, column: 29)
!9676 = !DILocation(line: 5417, column: 13, scope: !9674)
!9677 = !DILocation(line: 5417, column: 24, scope: !9674)
!9678 = !DILocation(line: 5417, column: 22, scope: !9674)
!9679 = !DILocation(line: 5417, column: 33, scope: !9674)
!9680 = !DILocation(line: 5418, column: 6, scope: !9674)
!9681 = !DILocation(line: 5418, column: 11, scope: !9674)
!9682 = !DILocation(line: 5418, column: 22, scope: !9674)
!9683 = !DILocation(line: 5418, column: 20, scope: !9674)
!9684 = !DILocation(line: 5417, column: 8, scope: !9675)
!9685 = !DILocation(line: 5419, column: 5, scope: !9674)
!9686 = !DILocation(line: 5420, column: 3, scope: !9675)
!9687 = !DILocation(line: 5421, column: 25, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 5421, column: 7)
!9689 = !DILocation(line: 5421, column: 7, scope: !9688)
!9690 = !DILocation(line: 5421, column: 30, scope: !9688)
!9691 = !DILocation(line: 5421, column: 7, scope: !9664)
!9692 = !DILocation(line: 5422, column: 4, scope: !9688)
!9693 = !DILocation(line: 5423, column: 29, scope: !9664)
!9694 = !DILocation(line: 5423, column: 34, scope: !9664)
!9695 = !DILocation(line: 5423, column: 10, scope: !9664)
!9696 = !DILocation(line: 5423, column: 8, scope: !9664)
!9697 = !DILocation(line: 5424, column: 7, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9664, file: !3, line: 5424, column: 7)
!9699 = !DILocation(line: 5424, column: 7, scope: !9664)
!9700 = !DILocation(line: 5425, column: 24, scope: !9701)
!9701 = distinct !DILexicalBlock(scope: !9698, file: !3, line: 5424, column: 13)
!9702 = !DILocation(line: 5425, column: 35, scope: !9701)
!9703 = !DILocation(line: 5425, column: 4, scope: !9701)
!9704 = !DILocation(line: 5426, column: 13, scope: !9701)
!9705 = !DILocation(line: 5427, column: 3, scope: !9701)
!9706 = !DILocation(line: 5428, column: 2, scope: !9664)
!9707 = !DILocation(line: 5408, column: 26, scope: !9659)
!9708 = !DILocation(line: 5408, column: 2, scope: !9659)
!9709 = distinct !{!9709, !9662, !9710}
!9710 = !DILocation(line: 5428, column: 2, scope: !9656)
!9711 = !DILocation(line: 5429, column: 9, scope: !9621)
!9712 = !DILocation(line: 5429, column: 2, scope: !9621)
!9713 = distinct !DISubprogram(name: "drm_set_preferred_mode", scope: !3, file: !3, line: 5442, type: !9714, scopeLine: 5444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9714 = !DISubroutineType(types: !9715)
!9715 = !{null, !1162, !139, !139}
!9716 = !DILocalVariable(name: "connector", arg: 1, scope: !9713, file: !3, line: 5442, type: !1162)
!9717 = !DILocation(line: 5442, column: 51, scope: !9713)
!9718 = !DILocalVariable(name: "hpref", arg: 2, scope: !9713, file: !3, line: 5443, type: !139)
!9719 = !DILocation(line: 5443, column: 11, scope: !9713)
!9720 = !DILocalVariable(name: "vpref", arg: 3, scope: !9713, file: !3, line: 5443, type: !139)
!9721 = !DILocation(line: 5443, column: 22, scope: !9713)
!9722 = !DILocalVariable(name: "mode", scope: !9713, file: !3, line: 5445, type: !525)
!9723 = !DILocation(line: 5445, column: 27, scope: !9713)
!9724 = !DILocalVariable(name: "__mptr", scope: !9725, file: !3, line: 5447, type: !368)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 5447, column: 2)
!9726 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 5447, column: 2)
!9727 = !DILocation(line: 5447, column: 2, scope: !9725)
!9728 = !DILocation(line: 5447, column: 2, scope: !9729)
!9729 = distinct !DILexicalBlock(scope: !9725, file: !3, line: 5447, column: 2)
!9730 = !DILocation(line: 5447, column: 2, scope: !9726)
!9731 = !DILocation(line: 5447, column: 2, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 5447, column: 2)
!9733 = !DILocation(line: 5448, column: 7, scope: !9734)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 5448, column: 7)
!9735 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 5447, column: 60)
!9736 = !DILocation(line: 5448, column: 13, scope: !9734)
!9737 = !DILocation(line: 5448, column: 25, scope: !9734)
!9738 = !DILocation(line: 5448, column: 22, scope: !9734)
!9739 = !DILocation(line: 5448, column: 31, scope: !9734)
!9740 = !DILocation(line: 5449, column: 7, scope: !9734)
!9741 = !DILocation(line: 5449, column: 13, scope: !9734)
!9742 = !DILocation(line: 5449, column: 25, scope: !9734)
!9743 = !DILocation(line: 5449, column: 22, scope: !9734)
!9744 = !DILocation(line: 5448, column: 7, scope: !9735)
!9745 = !DILocation(line: 5450, column: 4, scope: !9734)
!9746 = !DILocation(line: 5450, column: 10, scope: !9734)
!9747 = !DILocation(line: 5450, column: 15, scope: !9734)
!9748 = !DILocation(line: 5451, column: 2, scope: !9735)
!9749 = !DILocalVariable(name: "__mptr", scope: !9750, file: !3, line: 5447, type: !368)
!9750 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 5447, column: 2)
!9751 = !DILocation(line: 5447, column: 2, scope: !9750)
!9752 = !DILocation(line: 5447, column: 2, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 5447, column: 2)
!9754 = distinct !{!9754, !9730, !9755}
!9755 = !DILocation(line: 5451, column: 2, scope: !9726)
!9756 = !DILocation(line: 5452, column: 1, scope: !9713)
!9757 = distinct !DISubprogram(name: "drm_hdmi_infoframe_set_hdr_metadata", scope: !3, file: !3, line: 5482, type: !9758, scopeLine: 5484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9758 = !DISubroutineType(types: !9759)
!9759 = !{!139, !9760, !5973}
!9760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9761, size: 64)
!9761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdmi_drm_infoframe", file: !182, line: 193, size: 320, elements: !9762)
!9762 = !{!9763, !9764, !9765, !9766, !9767, !9768, !9774, !9779, !9780, !9781, !9782}
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9761, file: !182, line: 194, baseType: !273, size: 32)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9761, file: !182, line: 195, baseType: !379, size: 8, offset: 32)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9761, file: !182, line: 196, baseType: !379, size: 8, offset: 40)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "eotf", scope: !9761, file: !182, line: 197, baseType: !280, size: 32, offset: 64)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !9761, file: !182, line: 198, baseType: !286, size: 32, offset: 96)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "display_primaries", scope: !9761, file: !182, line: 201, baseType: !9769, size: 96, offset: 128)
!9769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9770, size: 96, elements: !516)
!9770 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9761, file: !182, line: 199, size: 32, elements: !9771)
!9771 = !{!9772, !9773}
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9770, file: !182, line: 200, baseType: !530, size: 16)
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9770, file: !182, line: 200, baseType: !530, size: 16, offset: 16)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !9761, file: !182, line: 204, baseType: !9775, size: 32, offset: 224)
!9775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9761, file: !182, line: 202, size: 32, elements: !9776)
!9776 = !{!9777, !9778}
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9775, file: !182, line: 203, baseType: !530, size: 16)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9775, file: !182, line: 203, baseType: !530, size: 16, offset: 16)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "max_display_mastering_luminance", scope: !9761, file: !182, line: 205, baseType: !530, size: 16, offset: 256)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "min_display_mastering_luminance", scope: !9761, file: !182, line: 206, baseType: !530, size: 16, offset: 272)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "max_cll", scope: !9761, file: !182, line: 207, baseType: !530, size: 16, offset: 288)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "max_fall", scope: !9761, file: !182, line: 208, baseType: !530, size: 16, offset: 304)
!9783 = !DILocalVariable(name: "frame", arg: 1, scope: !9757, file: !3, line: 5482, type: !9760)
!9784 = !DILocation(line: 5482, column: 64, scope: !9757)
!9785 = !DILocalVariable(name: "conn_state", arg: 2, scope: !9757, file: !3, line: 5483, type: !5973)
!9786 = !DILocation(line: 5483, column: 43, scope: !9757)
!9787 = !DILocalVariable(name: "connector", scope: !9757, file: !3, line: 5485, type: !1162)
!9788 = !DILocation(line: 5485, column: 24, scope: !9757)
!9789 = !DILocalVariable(name: "hdr_metadata", scope: !9757, file: !3, line: 5486, type: !9790)
!9790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9791, size: 64)
!9791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_output_metadata", file: !239, line: 721, size: 256, elements: !9792)
!9792 = !{!9793, !9794}
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !9791, file: !239, line: 725, baseType: !389, size: 32)
!9794 = !DIDerivedType(tag: DW_TAG_member, scope: !9791, file: !239, line: 729, baseType: !9795, size: 208, offset: 32)
!9795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9791, file: !239, line: 729, size: 208, elements: !9796)
!9796 = !{!9797}
!9797 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi_metadata_type1", scope: !9795, file: !239, line: 730, baseType: !9798, size: 208)
!9798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_metadata_infoframe", file: !239, line: 657, size: 208, elements: !9799)
!9799 = !{!9800, !9801, !9802, !9808, !9813, !9814, !9815, !9816}
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "eotf", scope: !9798, file: !239, line: 662, baseType: !377, size: 8)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !9798, file: !239, line: 666, baseType: !377, size: 8, offset: 8)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "display_primaries", scope: !9798, file: !239, line: 677, baseType: !9803, size: 96, offset: 16)
!9803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9804, size: 96, elements: !516)
!9804 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9798, file: !239, line: 675, size: 32, elements: !9805)
!9805 = !{!9806, !9807}
!9806 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9804, file: !239, line: 676, baseType: !428, size: 16)
!9807 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9804, file: !239, line: 676, baseType: !428, size: 16, offset: 16)
!9808 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !9798, file: !239, line: 688, baseType: !9809, size: 32, offset: 112)
!9809 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9798, file: !239, line: 686, size: 32, elements: !9810)
!9810 = !{!9811, !9812}
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !9809, file: !239, line: 687, baseType: !428, size: 16)
!9812 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !9809, file: !239, line: 687, baseType: !428, size: 16, offset: 16)
!9813 = !DIDerivedType(tag: DW_TAG_member, name: "max_display_mastering_luminance", scope: !9798, file: !239, line: 694, baseType: !428, size: 16, offset: 144)
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "min_display_mastering_luminance", scope: !9798, file: !239, line: 701, baseType: !428, size: 16, offset: 160)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "max_cll", scope: !9798, file: !239, line: 707, baseType: !428, size: 16, offset: 176)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "max_fall", scope: !9798, file: !239, line: 713, baseType: !428, size: 16, offset: 192)
!9817 = !DILocation(line: 5486, column: 30, scope: !9757)
!9818 = !DILocalVariable(name: "err", scope: !9757, file: !3, line: 5487, type: !139)
!9819 = !DILocation(line: 5487, column: 6, scope: !9757)
!9820 = !DILocation(line: 5489, column: 7, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5489, column: 6)
!9822 = !DILocation(line: 5489, column: 13, scope: !9821)
!9823 = !DILocation(line: 5489, column: 17, scope: !9821)
!9824 = !DILocation(line: 5489, column: 6, scope: !9757)
!9825 = !DILocation(line: 5490, column: 3, scope: !9821)
!9826 = !DILocation(line: 5492, column: 14, scope: !9757)
!9827 = !DILocation(line: 5492, column: 26, scope: !9757)
!9828 = !DILocation(line: 5492, column: 12, scope: !9757)
!9829 = !DILocation(line: 5494, column: 7, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5494, column: 6)
!9831 = !DILocation(line: 5494, column: 19, scope: !9830)
!9832 = !DILocation(line: 5494, column: 6, scope: !9757)
!9833 = !DILocation(line: 5495, column: 3, scope: !9830)
!9834 = !DILocation(line: 5497, column: 17, scope: !9757)
!9835 = !DILocation(line: 5497, column: 29, scope: !9757)
!9836 = !DILocation(line: 5497, column: 50, scope: !9757)
!9837 = !DILocation(line: 5497, column: 15, scope: !9757)
!9838 = !DILocation(line: 5499, column: 7, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5499, column: 6)
!9840 = !DILocation(line: 5499, column: 20, scope: !9839)
!9841 = !DILocation(line: 5499, column: 24, scope: !9839)
!9842 = !DILocation(line: 5499, column: 6, scope: !9757)
!9843 = !DILocation(line: 5500, column: 3, scope: !9839)
!9844 = !DILocation(line: 5503, column: 25, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5503, column: 6)
!9846 = !DILocation(line: 5503, column: 39, scope: !9845)
!9847 = !DILocation(line: 5503, column: 59, scope: !9845)
!9848 = !DILocation(line: 5504, column: 6, scope: !9845)
!9849 = !DILocation(line: 5504, column: 17, scope: !9845)
!9850 = !DILocation(line: 5504, column: 35, scope: !9845)
!9851 = !DILocation(line: 5504, column: 46, scope: !9845)
!9852 = !DILocation(line: 5503, column: 7, scope: !9845)
!9853 = !DILocation(line: 5503, column: 6, scope: !9757)
!9854 = !DILocation(line: 5505, column: 3, scope: !9855)
!9855 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 5504, column: 53)
!9856 = !DILocation(line: 5506, column: 3, scope: !9855)
!9857 = !DILocation(line: 5509, column: 32, scope: !9757)
!9858 = !DILocation(line: 5509, column: 8, scope: !9757)
!9859 = !DILocation(line: 5509, column: 6, scope: !9757)
!9860 = !DILocation(line: 5510, column: 6, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5510, column: 6)
!9862 = !DILocation(line: 5510, column: 10, scope: !9861)
!9863 = !DILocation(line: 5510, column: 6, scope: !9757)
!9864 = !DILocation(line: 5511, column: 10, scope: !9861)
!9865 = !DILocation(line: 5511, column: 3, scope: !9861)
!9866 = !DILocation(line: 5513, column: 16, scope: !9757)
!9867 = !DILocation(line: 5513, column: 30, scope: !9757)
!9868 = !DILocation(line: 5513, column: 50, scope: !9757)
!9869 = !DILocation(line: 5513, column: 2, scope: !9757)
!9870 = !DILocation(line: 5513, column: 9, scope: !9757)
!9871 = !DILocation(line: 5513, column: 14, scope: !9757)
!9872 = !DILocation(line: 5514, column: 25, scope: !9757)
!9873 = !DILocation(line: 5514, column: 39, scope: !9757)
!9874 = !DILocation(line: 5514, column: 59, scope: !9757)
!9875 = !DILocation(line: 5514, column: 2, scope: !9757)
!9876 = !DILocation(line: 5514, column: 9, scope: !9757)
!9877 = !DILocation(line: 5514, column: 23, scope: !9757)
!9878 = !DILocation(line: 5516, column: 2, scope: !9757)
!9879 = !DILocation(line: 5516, column: 2, scope: !9880)
!9880 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5516, column: 2)
!9881 = !DILocation(line: 5518, column: 2, scope: !9757)
!9882 = !DILocation(line: 5518, column: 2, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 5518, column: 2)
!9884 = !DILocation(line: 5521, column: 10, scope: !9757)
!9885 = !DILocation(line: 5521, column: 17, scope: !9757)
!9886 = !DILocation(line: 5521, column: 2, scope: !9757)
!9887 = !DILocation(line: 5522, column: 10, scope: !9757)
!9888 = !DILocation(line: 5522, column: 24, scope: !9757)
!9889 = !DILocation(line: 5522, column: 44, scope: !9757)
!9890 = !DILocation(line: 5525, column: 10, scope: !9757)
!9891 = !DILocation(line: 5525, column: 17, scope: !9757)
!9892 = !DILocation(line: 5525, column: 2, scope: !9757)
!9893 = !DILocation(line: 5526, column: 10, scope: !9757)
!9894 = !DILocation(line: 5526, column: 24, scope: !9757)
!9895 = !DILocation(line: 5526, column: 44, scope: !9757)
!9896 = !DILocation(line: 5530, column: 3, scope: !9757)
!9897 = !DILocation(line: 5530, column: 17, scope: !9757)
!9898 = !DILocation(line: 5530, column: 37, scope: !9757)
!9899 = !DILocation(line: 5529, column: 2, scope: !9757)
!9900 = !DILocation(line: 5529, column: 9, scope: !9757)
!9901 = !DILocation(line: 5529, column: 41, scope: !9757)
!9902 = !DILocation(line: 5532, column: 3, scope: !9757)
!9903 = !DILocation(line: 5532, column: 17, scope: !9757)
!9904 = !DILocation(line: 5532, column: 37, scope: !9757)
!9905 = !DILocation(line: 5531, column: 2, scope: !9757)
!9906 = !DILocation(line: 5531, column: 9, scope: !9757)
!9907 = !DILocation(line: 5531, column: 41, scope: !9757)
!9908 = !DILocation(line: 5533, column: 20, scope: !9757)
!9909 = !DILocation(line: 5533, column: 34, scope: !9757)
!9910 = !DILocation(line: 5533, column: 54, scope: !9757)
!9911 = !DILocation(line: 5533, column: 2, scope: !9757)
!9912 = !DILocation(line: 5533, column: 9, scope: !9757)
!9913 = !DILocation(line: 5533, column: 18, scope: !9757)
!9914 = !DILocation(line: 5534, column: 19, scope: !9757)
!9915 = !DILocation(line: 5534, column: 33, scope: !9757)
!9916 = !DILocation(line: 5534, column: 53, scope: !9757)
!9917 = !DILocation(line: 5534, column: 2, scope: !9757)
!9918 = !DILocation(line: 5534, column: 9, scope: !9757)
!9919 = !DILocation(line: 5534, column: 17, scope: !9757)
!9920 = !DILocation(line: 5536, column: 2, scope: !9757)
!9921 = !DILocation(line: 5537, column: 1, scope: !9757)
!9922 = distinct !DISubprogram(name: "is_eotf_supported", scope: !3, file: !3, line: 5468, type: !9923, scopeLine: 5469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9923 = !DISubroutineType(types: !9924)
!9924 = !{!559, !375, !375}
!9925 = !DILocalVariable(name: "output_eotf", arg: 1, scope: !9922, file: !3, line: 5468, type: !375)
!9926 = !DILocation(line: 5468, column: 41, scope: !9922)
!9927 = !DILocalVariable(name: "sink_eotf", arg: 2, scope: !9922, file: !3, line: 5468, type: !375)
!9928 = !DILocation(line: 5468, column: 57, scope: !9922)
!9929 = !DILocation(line: 5470, column: 9, scope: !9922)
!9930 = !DILocation(line: 5470, column: 21, scope: !9922)
!9931 = !DILocation(line: 5470, column: 19, scope: !9922)
!9932 = !DILocation(line: 5470, column: 2, scope: !9922)
!9933 = distinct !DISubprogram(name: "drm_hdmi_avi_infoframe_from_display_mode", scope: !3, file: !3, line: 5593, type: !9934, scopeLine: 5596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!9934 = !DISubroutineType(types: !9935)
!9935 = !{!139, !9936, !9959, !594}
!9936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9937, size: 64)
!9937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdmi_avi_infoframe", file: !182, line: 169, size: 544, elements: !9938)
!9938 = !{!9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954, !9955, !9956, !9957, !9958}
!9939 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9937, file: !182, line: 170, baseType: !273, size: 32)
!9940 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !9937, file: !182, line: 171, baseType: !379, size: 8, offset: 32)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !9937, file: !182, line: 172, baseType: !379, size: 8, offset: 40)
!9942 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !9937, file: !182, line: 173, baseType: !289, size: 32, offset: 64)
!9943 = !DIDerivedType(tag: DW_TAG_member, name: "scan_mode", scope: !9937, file: !182, line: 174, baseType: !299, size: 32, offset: 96)
!9944 = !DIDerivedType(tag: DW_TAG_member, name: "colorimetry", scope: !9937, file: !182, line: 175, baseType: !305, size: 32, offset: 128)
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect", scope: !9937, file: !182, line: 176, baseType: !181, size: 32, offset: 160)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "active_aspect", scope: !9937, file: !182, line: 177, baseType: !311, size: 32, offset: 192)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "itc", scope: !9937, file: !182, line: 178, baseType: !559, size: 8, offset: 224)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "extended_colorimetry", scope: !9937, file: !182, line: 179, baseType: !323, size: 32, offset: 256)
!9949 = !DIDerivedType(tag: DW_TAG_member, name: "quantization_range", scope: !9937, file: !182, line: 180, baseType: !267, size: 32, offset: 288)
!9950 = !DIDerivedType(tag: DW_TAG_member, name: "nups", scope: !9937, file: !182, line: 181, baseType: !333, size: 32, offset: 320)
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "video_code", scope: !9937, file: !182, line: 182, baseType: !379, size: 8, offset: 352)
!9952 = !DIDerivedType(tag: DW_TAG_member, name: "ycc_quantization_range", scope: !9937, file: !182, line: 183, baseType: !339, size: 32, offset: 384)
!9953 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !9937, file: !182, line: 184, baseType: !343, size: 32, offset: 416)
!9954 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_repeat", scope: !9937, file: !182, line: 185, baseType: !379, size: 8, offset: 448)
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "top_bar", scope: !9937, file: !182, line: 186, baseType: !429, size: 16, offset: 464)
!9956 = !DIDerivedType(tag: DW_TAG_member, name: "bottom_bar", scope: !9937, file: !182, line: 187, baseType: !429, size: 16, offset: 480)
!9957 = !DIDerivedType(tag: DW_TAG_member, name: "left_bar", scope: !9937, file: !182, line: 188, baseType: !429, size: 16, offset: 496)
!9958 = !DIDerivedType(tag: DW_TAG_member, name: "right_bar", scope: !9937, file: !182, line: 189, baseType: !429, size: 16, offset: 512)
!9959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9960, size: 64)
!9960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1163)
!9961 = !DILocalVariable(name: "frame", arg: 1, scope: !9933, file: !3, line: 5593, type: !9936)
!9962 = !DILocation(line: 5593, column: 69, scope: !9933)
!9963 = !DILocalVariable(name: "connector", arg: 2, scope: !9933, file: !3, line: 5594, type: !9959)
!9964 = !DILocation(line: 5594, column: 35, scope: !9933)
!9965 = !DILocalVariable(name: "mode", arg: 3, scope: !9933, file: !3, line: 5595, type: !594)
!9966 = !DILocation(line: 5595, column: 38, scope: !9933)
!9967 = !DILocalVariable(name: "picture_aspect", scope: !9933, file: !3, line: 5597, type: !181)
!9968 = !DILocation(line: 5597, column: 27, scope: !9933)
!9969 = !DILocalVariable(name: "vic", scope: !9933, file: !3, line: 5598, type: !375)
!9970 = !DILocation(line: 5598, column: 5, scope: !9933)
!9971 = !DILocalVariable(name: "hdmi_vic", scope: !9933, file: !3, line: 5598, type: !375)
!9972 = !DILocation(line: 5598, column: 10, scope: !9933)
!9973 = !DILocation(line: 5600, column: 7, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 5600, column: 6)
!9975 = !DILocation(line: 5600, column: 13, scope: !9974)
!9976 = !DILocation(line: 5600, column: 17, scope: !9974)
!9977 = !DILocation(line: 5600, column: 6, scope: !9933)
!9978 = !DILocation(line: 5601, column: 3, scope: !9974)
!9979 = !DILocation(line: 5603, column: 26, scope: !9933)
!9980 = !DILocation(line: 5603, column: 2, scope: !9933)
!9981 = !DILocation(line: 5605, column: 6, scope: !9982)
!9982 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 5605, column: 6)
!9983 = !DILocation(line: 5605, column: 12, scope: !9982)
!9984 = !DILocation(line: 5605, column: 18, scope: !9982)
!9985 = !DILocation(line: 5605, column: 6, scope: !9933)
!9986 = !DILocation(line: 5606, column: 3, scope: !9982)
!9987 = !DILocation(line: 5606, column: 10, scope: !9982)
!9988 = !DILocation(line: 5606, column: 23, scope: !9982)
!9989 = !DILocation(line: 5608, column: 25, scope: !9933)
!9990 = !DILocation(line: 5608, column: 36, scope: !9933)
!9991 = !DILocation(line: 5608, column: 8, scope: !9933)
!9992 = !DILocation(line: 5608, column: 6, scope: !9933)
!9993 = !DILocation(line: 5609, column: 31, scope: !9933)
!9994 = !DILocation(line: 5609, column: 42, scope: !9933)
!9995 = !DILocation(line: 5609, column: 13, scope: !9933)
!9996 = !DILocation(line: 5609, column: 11, scope: !9933)
!9997 = !DILocation(line: 5611, column: 2, scope: !9933)
!9998 = !DILocation(line: 5611, column: 9, scope: !9933)
!9999 = !DILocation(line: 5611, column: 24, scope: !9933)
!10000 = !DILocation(line: 5618, column: 2, scope: !9933)
!10001 = !DILocation(line: 5618, column: 9, scope: !9933)
!10002 = !DILocation(line: 5618, column: 22, scope: !9933)
!10003 = !DILocation(line: 5619, column: 2, scope: !9933)
!10004 = !DILocation(line: 5619, column: 9, scope: !9933)
!10005 = !DILocation(line: 5619, column: 13, scope: !9933)
!10006 = !DILocation(line: 5625, column: 19, scope: !9933)
!10007 = !DILocation(line: 5625, column: 25, scope: !9933)
!10008 = !DILocation(line: 5625, column: 17, scope: !9933)
!10009 = !DILocation(line: 5626, column: 6, scope: !10010)
!10010 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 5626, column: 6)
!10011 = !DILocation(line: 5626, column: 21, scope: !10010)
!10012 = !DILocation(line: 5626, column: 6, scope: !9933)
!10013 = !DILocation(line: 5627, column: 7, scope: !10014)
!10014 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 5627, column: 7)
!10015 = distinct !DILexicalBlock(scope: !10010, file: !3, line: 5626, column: 50)
!10016 = !DILocation(line: 5627, column: 7, scope: !10015)
!10017 = !DILocation(line: 5628, column: 46, scope: !10014)
!10018 = !DILocation(line: 5628, column: 21, scope: !10014)
!10019 = !DILocation(line: 5628, column: 19, scope: !10014)
!10020 = !DILocation(line: 5628, column: 4, scope: !10014)
!10021 = !DILocation(line: 5629, column: 12, scope: !10022)
!10022 = distinct !DILexicalBlock(scope: !10014, file: !3, line: 5629, column: 12)
!10023 = !DILocation(line: 5629, column: 12, scope: !10014)
!10024 = !DILocation(line: 5630, column: 47, scope: !10022)
!10025 = !DILocation(line: 5630, column: 21, scope: !10022)
!10026 = !DILocation(line: 5630, column: 19, scope: !10022)
!10027 = !DILocation(line: 5630, column: 4, scope: !10022)
!10028 = !DILocation(line: 5631, column: 2, scope: !10015)
!10029 = !DILocation(line: 5638, column: 6, scope: !10030)
!10030 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 5638, column: 6)
!10031 = !DILocation(line: 5638, column: 21, scope: !10030)
!10032 = !DILocation(line: 5638, column: 6, scope: !9933)
!10033 = !DILocation(line: 5639, column: 7, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10035, file: !3, line: 5639, column: 7)
!10035 = distinct !DILexicalBlock(scope: !10030, file: !3, line: 5638, column: 49)
!10036 = !DILocation(line: 5639, column: 7, scope: !10035)
!10037 = !DILocation(line: 5640, column: 8, scope: !10038)
!10038 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 5640, column: 8)
!10039 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 5639, column: 12)
!10040 = !DILocation(line: 5640, column: 51, scope: !10038)
!10041 = !DILocation(line: 5640, column: 26, scope: !10038)
!10042 = !DILocation(line: 5640, column: 23, scope: !10038)
!10043 = !DILocation(line: 5640, column: 8, scope: !10039)
!10044 = !DILocation(line: 5641, column: 5, scope: !10038)
!10045 = !DILocation(line: 5642, column: 3, scope: !10039)
!10046 = !DILocation(line: 5642, column: 14, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10034, file: !3, line: 5642, column: 14)
!10048 = !DILocation(line: 5642, column: 14, scope: !10034)
!10049 = !DILocation(line: 5643, column: 8, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10051, file: !3, line: 5643, column: 8)
!10051 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 5642, column: 24)
!10052 = !DILocation(line: 5643, column: 52, scope: !10050)
!10053 = !DILocation(line: 5643, column: 26, scope: !10050)
!10054 = !DILocation(line: 5643, column: 23, scope: !10050)
!10055 = !DILocation(line: 5643, column: 8, scope: !10051)
!10056 = !DILocation(line: 5644, column: 5, scope: !10050)
!10057 = !DILocation(line: 5645, column: 3, scope: !10051)
!10058 = !DILocation(line: 5646, column: 4, scope: !10059)
!10059 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 5645, column: 10)
!10060 = !DILocation(line: 5649, column: 18, scope: !10035)
!10061 = !DILocation(line: 5650, column: 2, scope: !10035)
!10062 = !DILocation(line: 5652, column: 22, scope: !9933)
!10063 = !DILocation(line: 5652, column: 2, scope: !9933)
!10064 = !DILocation(line: 5652, column: 9, scope: !9933)
!10065 = !DILocation(line: 5652, column: 20, scope: !9933)
!10066 = !DILocation(line: 5653, column: 26, scope: !9933)
!10067 = !DILocation(line: 5653, column: 2, scope: !9933)
!10068 = !DILocation(line: 5653, column: 9, scope: !9933)
!10069 = !DILocation(line: 5653, column: 24, scope: !9933)
!10070 = !DILocation(line: 5654, column: 2, scope: !9933)
!10071 = !DILocation(line: 5654, column: 9, scope: !9933)
!10072 = !DILocation(line: 5654, column: 23, scope: !9933)
!10073 = !DILocation(line: 5655, column: 2, scope: !9933)
!10074 = !DILocation(line: 5655, column: 9, scope: !9933)
!10075 = !DILocation(line: 5655, column: 19, scope: !9933)
!10076 = !DILocation(line: 5657, column: 2, scope: !9933)
!10077 = !DILocation(line: 5658, column: 1, scope: !9933)
!10078 = distinct !DISubprogram(name: "drm_mode_cea_vic", scope: !3, file: !3, line: 5556, type: !10079, scopeLine: 5558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10079 = !DISubroutineType(types: !10080)
!10080 = !{!375, !9959, !594}
!10081 = !DILocalVariable(name: "connector", arg: 1, scope: !10078, file: !3, line: 5556, type: !9959)
!10082 = !DILocation(line: 5556, column: 56, scope: !10078)
!10083 = !DILocalVariable(name: "mode", arg: 2, scope: !10078, file: !3, line: 5557, type: !594)
!10084 = !DILocation(line: 5557, column: 38, scope: !10078)
!10085 = !DILocalVariable(name: "vic", scope: !10078, file: !3, line: 5559, type: !375)
!10086 = !DILocation(line: 5559, column: 5, scope: !10078)
!10087 = !DILocation(line: 5567, column: 24, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 5567, column: 6)
!10089 = !DILocation(line: 5567, column: 35, scope: !10088)
!10090 = !DILocation(line: 5567, column: 6, scope: !10088)
!10091 = !DILocation(line: 5567, column: 6, scope: !10078)
!10092 = !DILocation(line: 5568, column: 3, scope: !10088)
!10093 = !DILocation(line: 5570, column: 27, scope: !10078)
!10094 = !DILocation(line: 5570, column: 8, scope: !10078)
!10095 = !DILocation(line: 5570, column: 6, scope: !10078)
!10096 = !DILocation(line: 5577, column: 21, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 5577, column: 6)
!10098 = !DILocation(line: 5577, column: 7, scope: !10097)
!10099 = !DILocation(line: 5577, column: 32, scope: !10097)
!10100 = !DILocation(line: 5577, column: 35, scope: !10097)
!10101 = !DILocation(line: 5577, column: 39, scope: !10097)
!10102 = !DILocation(line: 5577, column: 6, scope: !10078)
!10103 = !DILocation(line: 5578, column: 3, scope: !10097)
!10104 = !DILocation(line: 5580, column: 9, scope: !10078)
!10105 = !DILocation(line: 5580, column: 2, scope: !10078)
!10106 = !DILocation(line: 5581, column: 1, scope: !10078)
!10107 = distinct !DISubprogram(name: "drm_mode_hdmi_vic", scope: !3, file: !3, line: 5540, type: !10079, scopeLine: 5542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10108 = !DILocalVariable(name: "connector", arg: 1, scope: !10107, file: !3, line: 5540, type: !9959)
!10109 = !DILocation(line: 5540, column: 57, scope: !10107)
!10110 = !DILocalVariable(name: "mode", arg: 2, scope: !10107, file: !3, line: 5541, type: !594)
!10111 = !DILocation(line: 5541, column: 39, scope: !10107)
!10112 = !DILocalVariable(name: "has_hdmi_infoframe", scope: !10107, file: !3, line: 5543, type: !559)
!10113 = !DILocation(line: 5543, column: 7, scope: !10107)
!10114 = !DILocation(line: 5543, column: 28, scope: !10107)
!10115 = !DILocation(line: 5544, column: 3, scope: !10107)
!10116 = !DILocation(line: 5544, column: 14, scope: !10107)
!10117 = !DILocation(line: 5544, column: 27, scope: !10107)
!10118 = !DILocation(line: 5546, column: 7, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 5546, column: 6)
!10120 = !DILocation(line: 5546, column: 6, scope: !10107)
!10121 = !DILocation(line: 5547, column: 3, scope: !10119)
!10122 = !DILocation(line: 5550, column: 6, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 5550, column: 6)
!10124 = !DILocation(line: 5550, column: 12, scope: !10123)
!10125 = !DILocation(line: 5550, column: 18, scope: !10123)
!10126 = !DILocation(line: 5550, column: 6, scope: !10107)
!10127 = !DILocation(line: 5551, column: 3, scope: !10123)
!10128 = !DILocation(line: 5553, column: 29, scope: !10107)
!10129 = !DILocation(line: 5553, column: 9, scope: !10107)
!10130 = !DILocation(line: 5553, column: 2, scope: !10107)
!10131 = !DILocation(line: 5554, column: 1, scope: !10107)
!10132 = distinct !DISubprogram(name: "drm_get_cea_aspect_ratio", scope: !3, file: !3, line: 3483, type: !10133, scopeLine: 3484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{!181, !577}
!10135 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !10136)
!10136 = distinct !DILocation(line: 3485, column: 40, scope: !10132)
!10137 = !DILocalVariable(name: "video_code", arg: 1, scope: !10132, file: !3, line: 3483, type: !577)
!10138 = !DILocation(line: 3483, column: 67, scope: !10132)
!10139 = !DILocalVariable(name: "mode", scope: !10132, file: !3, line: 3485, type: !594)
!10140 = !DILocation(line: 3485, column: 33, scope: !10132)
!10141 = !DILocation(line: 3485, column: 57, scope: !10132)
!10142 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !10136)
!10143 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !10136)
!10144 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !10136)
!10145 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !10136)
!10146 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !10136)
!10147 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !10136)
!10148 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !10136)
!10149 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !10136)
!10150 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !10136)
!10151 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !10136)
!10152 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !10136)
!10153 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !10136)
!10154 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !10136)
!10155 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !10136)
!10156 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !10136)
!10157 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !10136)
!10158 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !10136)
!10159 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !10136)
!10160 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !10136)
!10161 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !10136)
!10162 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !10136)
!10163 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !10136)
!10164 = !DILocation(line: 3487, column: 6, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10132, file: !3, line: 3487, column: 6)
!10166 = !DILocation(line: 3487, column: 6, scope: !10132)
!10167 = !DILocation(line: 3488, column: 10, scope: !10165)
!10168 = !DILocation(line: 3488, column: 16, scope: !10165)
!10169 = !DILocation(line: 3488, column: 3, scope: !10165)
!10170 = !DILocation(line: 3490, column: 2, scope: !10132)
!10171 = !DILocation(line: 3491, column: 1, scope: !10132)
!10172 = distinct !DISubprogram(name: "drm_get_hdmi_aspect_ratio", scope: !3, file: !3, line: 3493, type: !10133, scopeLine: 3494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10173 = !DILocalVariable(name: "video_code", arg: 1, scope: !10172, file: !3, line: 3493, type: !577)
!10174 = !DILocation(line: 3493, column: 68, scope: !10172)
!10175 = !DILocation(line: 3495, column: 23, scope: !10172)
!10176 = !DILocation(line: 3495, column: 9, scope: !10172)
!10177 = !DILocation(line: 3495, column: 35, scope: !10172)
!10178 = !DILocation(line: 3495, column: 2, scope: !10172)
!10179 = distinct !DISubprogram(name: "drm_hdmi_avi_infoframe_colorspace", scope: !3, file: !3, line: 5710, type: !10180, scopeLine: 5712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10180 = !DISubroutineType(types: !10181)
!10181 = !{null, !9936, !5973}
!10182 = !DILocalVariable(name: "frame", arg: 1, scope: !10179, file: !3, line: 5710, type: !9936)
!10183 = !DILocation(line: 5710, column: 62, scope: !10179)
!10184 = !DILocalVariable(name: "conn_state", arg: 2, scope: !10179, file: !3, line: 5711, type: !5973)
!10185 = !DILocation(line: 5711, column: 41, scope: !10179)
!10186 = !DILocalVariable(name: "colorimetry_val", scope: !10179, file: !3, line: 5713, type: !388)
!10187 = !DILocation(line: 5713, column: 6, scope: !10179)
!10188 = !DILocalVariable(name: "colorimetry_index", scope: !10179, file: !3, line: 5714, type: !388)
!10189 = !DILocation(line: 5714, column: 6, scope: !10179)
!10190 = !DILocation(line: 5714, column: 26, scope: !10179)
!10191 = !DILocation(line: 5714, column: 38, scope: !10179)
!10192 = !DILocation(line: 5714, column: 49, scope: !10179)
!10193 = !DILocation(line: 5716, column: 6, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 5716, column: 6)
!10195 = !DILocation(line: 5716, column: 24, scope: !10194)
!10196 = !DILocation(line: 5716, column: 6, scope: !10179)
!10197 = !DILocation(line: 5717, column: 19, scope: !10194)
!10198 = !DILocation(line: 5717, column: 3, scope: !10194)
!10199 = !DILocation(line: 5719, column: 42, scope: !10194)
!10200 = !DILocation(line: 5719, column: 21, scope: !10194)
!10201 = !DILocation(line: 5719, column: 19, scope: !10194)
!10202 = !DILocation(line: 5721, column: 23, scope: !10179)
!10203 = !DILocation(line: 5721, column: 39, scope: !10179)
!10204 = !DILocation(line: 5721, column: 2, scope: !10179)
!10205 = !DILocation(line: 5721, column: 9, scope: !10179)
!10206 = !DILocation(line: 5721, column: 21, scope: !10179)
!10207 = !DILocation(line: 5726, column: 33, scope: !10179)
!10208 = !DILocation(line: 5726, column: 49, scope: !10179)
!10209 = !DILocation(line: 5726, column: 55, scope: !10179)
!10210 = !DILocation(line: 5726, column: 2, scope: !10179)
!10211 = !DILocation(line: 5726, column: 9, scope: !10179)
!10212 = !DILocation(line: 5726, column: 30, scope: !10179)
!10213 = !DILocation(line: 5728, column: 1, scope: !10179)
!10214 = distinct !DISubprogram(name: "drm_hdmi_avi_infoframe_quant_range", scope: !3, file: !3, line: 5740, type: !10215, scopeLine: 5744, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{null, !9936, !9959, !594, !267}
!10217 = !DILocalVariable(name: "frame", arg: 1, scope: !10214, file: !3, line: 5740, type: !9936)
!10218 = !DILocation(line: 5740, column: 63, scope: !10214)
!10219 = !DILocalVariable(name: "connector", arg: 2, scope: !10214, file: !3, line: 5741, type: !9959)
!10220 = !DILocation(line: 5741, column: 36, scope: !10214)
!10221 = !DILocalVariable(name: "mode", arg: 3, scope: !10214, file: !3, line: 5742, type: !594)
!10222 = !DILocation(line: 5742, column: 39, scope: !10214)
!10223 = !DILocalVariable(name: "rgb_quant_range", arg: 4, scope: !10214, file: !3, line: 5743, type: !267)
!10224 = !DILocation(line: 5743, column: 37, scope: !10214)
!10225 = !DILocalVariable(name: "info", scope: !10214, file: !3, line: 5745, type: !10226)
!10226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10227, size: 64)
!10227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5451)
!10228 = !DILocation(line: 5745, column: 33, scope: !10214)
!10229 = !DILocation(line: 5745, column: 41, scope: !10214)
!10230 = !DILocation(line: 5745, column: 52, scope: !10214)
!10231 = !DILocation(line: 5757, column: 6, scope: !10232)
!10232 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 5757, column: 6)
!10233 = !DILocation(line: 5757, column: 12, scope: !10232)
!10234 = !DILocation(line: 5757, column: 39, scope: !10232)
!10235 = !DILocation(line: 5758, column: 6, scope: !10232)
!10236 = !DILocation(line: 5758, column: 53, scope: !10232)
!10237 = !DILocation(line: 5758, column: 25, scope: !10232)
!10238 = !DILocation(line: 5758, column: 22, scope: !10232)
!10239 = !DILocation(line: 5757, column: 6, scope: !10214)
!10240 = !DILocation(line: 5759, column: 31, scope: !10232)
!10241 = !DILocation(line: 5759, column: 3, scope: !10232)
!10242 = !DILocation(line: 5759, column: 10, scope: !10232)
!10243 = !DILocation(line: 5759, column: 29, scope: !10232)
!10244 = !DILocation(line: 5761, column: 3, scope: !10232)
!10245 = !DILocation(line: 5761, column: 10, scope: !10232)
!10246 = !DILocation(line: 5761, column: 29, scope: !10232)
!10247 = !DILocation(line: 5776, column: 21, scope: !10248)
!10248 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 5776, column: 6)
!10249 = !DILocation(line: 5776, column: 7, scope: !10248)
!10250 = !DILocation(line: 5776, column: 32, scope: !10248)
!10251 = !DILocation(line: 5777, column: 6, scope: !10248)
!10252 = !DILocation(line: 5777, column: 22, scope: !10248)
!10253 = !DILocation(line: 5776, column: 6, scope: !10214)
!10254 = !DILocation(line: 5778, column: 3, scope: !10248)
!10255 = !DILocation(line: 5778, column: 10, scope: !10248)
!10256 = !DILocation(line: 5778, column: 33, scope: !10248)
!10257 = !DILocation(line: 5781, column: 3, scope: !10248)
!10258 = !DILocation(line: 5781, column: 10, scope: !10248)
!10259 = !DILocation(line: 5781, column: 33, scope: !10248)
!10260 = !DILocation(line: 5783, column: 1, scope: !10214)
!10261 = distinct !DISubprogram(name: "is_hdmi2_sink", scope: !3, file: !3, line: 5455, type: !10262, scopeLine: 5456, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10262 = !DISubroutineType(types: !10263)
!10263 = !{!559, !9959}
!10264 = !DILocalVariable(name: "connector", arg: 1, scope: !10261, file: !3, line: 5455, type: !9959)
!10265 = !DILocation(line: 5455, column: 55, scope: !10261)
!10266 = !DILocation(line: 5461, column: 7, scope: !10267)
!10267 = distinct !DILexicalBlock(scope: !10261, file: !3, line: 5461, column: 6)
!10268 = !DILocation(line: 5461, column: 6, scope: !10261)
!10269 = !DILocation(line: 5462, column: 3, scope: !10267)
!10270 = !DILocation(line: 5464, column: 9, scope: !10261)
!10271 = !DILocation(line: 5464, column: 20, scope: !10261)
!10272 = !DILocation(line: 5464, column: 33, scope: !10261)
!10273 = !DILocation(line: 5464, column: 38, scope: !10261)
!10274 = !DILocation(line: 5464, column: 43, scope: !10261)
!10275 = !DILocation(line: 5464, column: 53, scope: !10261)
!10276 = !DILocation(line: 5465, column: 3, scope: !10261)
!10277 = !DILocation(line: 5465, column: 14, scope: !10261)
!10278 = !DILocation(line: 5465, column: 27, scope: !10261)
!10279 = !DILocation(line: 5465, column: 41, scope: !10261)
!10280 = !DILocation(line: 5464, column: 2, scope: !10261)
!10281 = !DILocation(line: 5466, column: 1, scope: !10261)
!10282 = distinct !DISubprogram(name: "drm_hdmi_avi_infoframe_bars", scope: !3, file: !3, line: 5793, type: !10180, scopeLine: 5795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10283 = !DILocalVariable(name: "frame", arg: 1, scope: !10282, file: !3, line: 5793, type: !9936)
!10284 = !DILocation(line: 5793, column: 56, scope: !10282)
!10285 = !DILocalVariable(name: "conn_state", arg: 2, scope: !10282, file: !3, line: 5794, type: !5973)
!10286 = !DILocation(line: 5794, column: 42, scope: !10282)
!10287 = !DILocation(line: 5796, column: 21, scope: !10282)
!10288 = !DILocation(line: 5796, column: 33, scope: !10282)
!10289 = !DILocation(line: 5796, column: 36, scope: !10282)
!10290 = !DILocation(line: 5796, column: 44, scope: !10282)
!10291 = !DILocation(line: 5796, column: 2, scope: !10282)
!10292 = !DILocation(line: 5796, column: 9, scope: !10282)
!10293 = !DILocation(line: 5796, column: 19, scope: !10282)
!10294 = !DILocation(line: 5797, column: 20, scope: !10282)
!10295 = !DILocation(line: 5797, column: 32, scope: !10282)
!10296 = !DILocation(line: 5797, column: 35, scope: !10282)
!10297 = !DILocation(line: 5797, column: 43, scope: !10282)
!10298 = !DILocation(line: 5797, column: 2, scope: !10282)
!10299 = !DILocation(line: 5797, column: 9, scope: !10282)
!10300 = !DILocation(line: 5797, column: 18, scope: !10282)
!10301 = !DILocation(line: 5798, column: 19, scope: !10282)
!10302 = !DILocation(line: 5798, column: 31, scope: !10282)
!10303 = !DILocation(line: 5798, column: 34, scope: !10282)
!10304 = !DILocation(line: 5798, column: 42, scope: !10282)
!10305 = !DILocation(line: 5798, column: 2, scope: !10282)
!10306 = !DILocation(line: 5798, column: 9, scope: !10282)
!10307 = !DILocation(line: 5798, column: 17, scope: !10282)
!10308 = !DILocation(line: 5799, column: 22, scope: !10282)
!10309 = !DILocation(line: 5799, column: 34, scope: !10282)
!10310 = !DILocation(line: 5799, column: 37, scope: !10282)
!10311 = !DILocation(line: 5799, column: 45, scope: !10282)
!10312 = !DILocation(line: 5799, column: 2, scope: !10282)
!10313 = !DILocation(line: 5799, column: 9, scope: !10282)
!10314 = !DILocation(line: 5799, column: 20, scope: !10282)
!10315 = !DILocation(line: 5800, column: 1, scope: !10282)
!10316 = distinct !DISubprogram(name: "drm_hdmi_vendor_infoframe_from_display_mode", scope: !3, file: !3, line: 5844, type: !10317, scopeLine: 5847, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{!139, !10319, !9959, !594}
!10319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10320, size: 64)
!10320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdmi_vendor_infoframe", file: !182, line: 354, size: 192, elements: !10321)
!10321 = !{!10322, !10323, !10324, !10325, !10326, !10327, !10328}
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10320, file: !182, line: 355, baseType: !273, size: 32)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10320, file: !182, line: 356, baseType: !379, size: 8, offset: 32)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !10320, file: !182, line: 357, baseType: !379, size: 8, offset: 40)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "oui", scope: !10320, file: !182, line: 358, baseType: !7, size: 32, offset: 64)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "vic", scope: !10320, file: !182, line: 359, baseType: !375, size: 8, offset: 96)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "s3d_struct", scope: !10320, file: !182, line: 360, baseType: !349, size: 32, offset: 128)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "s3d_ext_data", scope: !10320, file: !182, line: 361, baseType: !7, size: 32, offset: 160)
!10329 = !DILocalVariable(name: "frame", arg: 1, scope: !10316, file: !3, line: 5844, type: !10319)
!10330 = !DILocation(line: 5844, column: 75, scope: !10316)
!10331 = !DILocalVariable(name: "connector", arg: 2, scope: !10316, file: !3, line: 5845, type: !9959)
!10332 = !DILocation(line: 5845, column: 38, scope: !10316)
!10333 = !DILocalVariable(name: "mode", arg: 3, scope: !10316, file: !3, line: 5846, type: !594)
!10334 = !DILocation(line: 5846, column: 41, scope: !10316)
!10335 = !DILocalVariable(name: "has_hdmi_infoframe", scope: !10316, file: !3, line: 5852, type: !559)
!10336 = !DILocation(line: 5852, column: 7, scope: !10316)
!10337 = !DILocation(line: 5852, column: 28, scope: !10316)
!10338 = !DILocation(line: 5853, column: 3, scope: !10316)
!10339 = !DILocation(line: 5853, column: 14, scope: !10316)
!10340 = !DILocation(line: 5853, column: 27, scope: !10316)
!10341 = !DILocalVariable(name: "err", scope: !10316, file: !3, line: 5854, type: !139)
!10342 = !DILocation(line: 5854, column: 6, scope: !10316)
!10343 = !DILocation(line: 5856, column: 7, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 5856, column: 6)
!10345 = !DILocation(line: 5856, column: 13, scope: !10344)
!10346 = !DILocation(line: 5856, column: 17, scope: !10344)
!10347 = !DILocation(line: 5856, column: 6, scope: !10316)
!10348 = !DILocation(line: 5857, column: 3, scope: !10344)
!10349 = !DILocation(line: 5859, column: 7, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 5859, column: 6)
!10351 = !DILocation(line: 5859, column: 6, scope: !10316)
!10352 = !DILocation(line: 5860, column: 3, scope: !10350)
!10353 = !DILocation(line: 5862, column: 35, scope: !10316)
!10354 = !DILocation(line: 5862, column: 8, scope: !10316)
!10355 = !DILocation(line: 5862, column: 6, scope: !10316)
!10356 = !DILocation(line: 5863, column: 6, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 5863, column: 6)
!10358 = !DILocation(line: 5863, column: 10, scope: !10357)
!10359 = !DILocation(line: 5863, column: 6, scope: !10316)
!10360 = !DILocation(line: 5864, column: 10, scope: !10357)
!10361 = !DILocation(line: 5864, column: 3, scope: !10357)
!10362 = !DILocation(line: 5875, column: 33, scope: !10316)
!10363 = !DILocation(line: 5875, column: 44, scope: !10316)
!10364 = !DILocation(line: 5875, column: 15, scope: !10316)
!10365 = !DILocation(line: 5875, column: 2, scope: !10316)
!10366 = !DILocation(line: 5875, column: 9, scope: !10316)
!10367 = !DILocation(line: 5875, column: 13, scope: !10316)
!10368 = !DILocation(line: 5876, column: 54, scope: !10316)
!10369 = !DILocation(line: 5876, column: 22, scope: !10316)
!10370 = !DILocation(line: 5876, column: 2, scope: !10316)
!10371 = !DILocation(line: 5876, column: 9, scope: !10316)
!10372 = !DILocation(line: 5876, column: 20, scope: !10316)
!10373 = !DILocation(line: 5878, column: 2, scope: !10316)
!10374 = !DILocation(line: 5879, column: 1, scope: !10316)
!10375 = distinct !DISubprogram(name: "s3d_structure_from_display_mode", scope: !3, file: !3, line: 5804, type: !10376, scopeLine: 5805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10376 = !DISubroutineType(types: !10377)
!10377 = !{!349, !594}
!10378 = !DILocalVariable(name: "mode", arg: 1, scope: !10375, file: !3, line: 5804, type: !594)
!10379 = !DILocation(line: 5804, column: 64, scope: !10375)
!10380 = !DILocalVariable(name: "layout", scope: !10375, file: !3, line: 5806, type: !388)
!10381 = !DILocation(line: 5806, column: 6, scope: !10375)
!10382 = !DILocation(line: 5806, column: 15, scope: !10375)
!10383 = !DILocation(line: 5806, column: 21, scope: !10375)
!10384 = !DILocation(line: 5806, column: 27, scope: !10375)
!10385 = !DILocation(line: 5808, column: 10, scope: !10375)
!10386 = !DILocation(line: 5808, column: 2, scope: !10375)
!10387 = !DILocation(line: 5810, column: 3, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 5808, column: 18)
!10389 = !DILocation(line: 5812, column: 3, scope: !10388)
!10390 = !DILocation(line: 5814, column: 3, scope: !10388)
!10391 = !DILocation(line: 5816, column: 3, scope: !10388)
!10392 = !DILocation(line: 5818, column: 3, scope: !10388)
!10393 = !DILocation(line: 5820, column: 3, scope: !10388)
!10394 = !DILocation(line: 5822, column: 3, scope: !10388)
!10395 = !DILocation(line: 5824, column: 3, scope: !10388)
!10396 = !DILocation(line: 5826, column: 3, scope: !10388)
!10397 = !DILocation(line: 5828, column: 1, scope: !10375)
!10398 = distinct !DISubprogram(name: "drm_update_tile_info", scope: !3, file: !3, line: 5955, type: !8623, scopeLine: 5957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10399 = !DILocalVariable(name: "connector", arg: 1, scope: !10398, file: !3, line: 5955, type: !1162)
!10400 = !DILocation(line: 5955, column: 49, scope: !10398)
!10401 = !DILocalVariable(name: "edid", arg: 2, scope: !10398, file: !3, line: 5956, type: !842)
!10402 = !DILocation(line: 5956, column: 25, scope: !10398)
!10403 = !DILocalVariable(name: "displayid", scope: !10398, file: !3, line: 5958, type: !3143)
!10404 = !DILocation(line: 5958, column: 14, scope: !10398)
!10405 = !DILocalVariable(name: "ext_index", scope: !10398, file: !3, line: 5959, type: !139)
!10406 = !DILocation(line: 5959, column: 6, scope: !10398)
!10407 = !DILocalVariable(name: "length", scope: !10398, file: !3, line: 5960, type: !139)
!10408 = !DILocation(line: 5960, column: 6, scope: !10398)
!10409 = !DILocalVariable(name: "idx", scope: !10398, file: !3, line: 5960, type: !139)
!10410 = !DILocation(line: 5960, column: 14, scope: !10398)
!10411 = !DILocation(line: 5962, column: 2, scope: !10398)
!10412 = !DILocation(line: 5962, column: 13, scope: !10398)
!10413 = !DILocation(line: 5962, column: 22, scope: !10398)
!10414 = !DILocation(line: 5963, column: 2, scope: !10398)
!10415 = !DILocation(line: 5964, column: 44, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 5963, column: 11)
!10417 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 5963, column: 2)
!10418 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 5963, column: 2)
!10419 = !DILocation(line: 5964, column: 15, scope: !10416)
!10420 = !DILocation(line: 5964, column: 13, scope: !10416)
!10421 = !DILocation(line: 5966, column: 8, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 5966, column: 7)
!10423 = !DILocation(line: 5966, column: 7, scope: !10416)
!10424 = !DILocation(line: 5967, column: 4, scope: !10422)
!10425 = !DILocation(line: 5969, column: 29, scope: !10416)
!10426 = !DILocation(line: 5969, column: 40, scope: !10416)
!10427 = !DILocation(line: 5969, column: 51, scope: !10416)
!10428 = !DILocation(line: 5969, column: 59, scope: !10416)
!10429 = !DILocation(line: 5969, column: 3, scope: !10416)
!10430 = !DILocation(line: 5963, column: 2, scope: !10417)
!10431 = distinct !{!10431, !10432, !10433}
!10432 = !DILocation(line: 5963, column: 2, scope: !10418)
!10433 = !DILocation(line: 5970, column: 2, scope: !10418)
!10434 = !DILocation(line: 5972, column: 7, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 5972, column: 6)
!10436 = !DILocation(line: 5972, column: 18, scope: !10435)
!10437 = !DILocation(line: 5972, column: 27, scope: !10435)
!10438 = !DILocation(line: 5972, column: 30, scope: !10435)
!10439 = !DILocation(line: 5972, column: 41, scope: !10435)
!10440 = !DILocation(line: 5972, column: 6, scope: !10398)
!10441 = !DILocation(line: 5973, column: 27, scope: !10442)
!10442 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 5972, column: 53)
!10443 = !DILocation(line: 5973, column: 38, scope: !10442)
!10444 = !DILocation(line: 5973, column: 43, scope: !10442)
!10445 = !DILocation(line: 5973, column: 54, scope: !10442)
!10446 = !DILocation(line: 5973, column: 3, scope: !10442)
!10447 = !DILocation(line: 5974, column: 3, scope: !10442)
!10448 = !DILocation(line: 5974, column: 14, scope: !10442)
!10449 = !DILocation(line: 5974, column: 25, scope: !10442)
!10450 = !DILocation(line: 5975, column: 2, scope: !10442)
!10451 = !DILocation(line: 5976, column: 1, scope: !10398)
!10452 = distinct !DISubprogram(name: "drm_find_displayid_extension", scope: !3, file: !3, line: 3263, type: !10453, scopeLine: 3266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10453 = !DISubroutineType(types: !10454)
!10454 = !{!522, !842, !1655, !1655, !1655}
!10455 = !DILocalVariable(name: "edid", arg: 1, scope: !10452, file: !3, line: 3263, type: !842)
!10456 = !DILocation(line: 3263, column: 60, scope: !10452)
!10457 = !DILocalVariable(name: "length", arg: 2, scope: !10452, file: !3, line: 3264, type: !1655)
!10458 = !DILocation(line: 3264, column: 11, scope: !10452)
!10459 = !DILocalVariable(name: "idx", arg: 3, scope: !10452, file: !3, line: 3264, type: !1655)
!10460 = !DILocation(line: 3264, column: 24, scope: !10452)
!10461 = !DILocalVariable(name: "ext_index", arg: 4, scope: !10452, file: !3, line: 3265, type: !1655)
!10462 = !DILocation(line: 3265, column: 11, scope: !10452)
!10463 = !DILocalVariable(name: "displayid", scope: !10452, file: !3, line: 3267, type: !522)
!10464 = !DILocation(line: 3267, column: 6, scope: !10452)
!10465 = !DILocation(line: 3267, column: 42, scope: !10452)
!10466 = !DILocation(line: 3267, column: 63, scope: !10452)
!10467 = !DILocation(line: 3267, column: 18, scope: !10452)
!10468 = !DILocalVariable(name: "base", scope: !10452, file: !3, line: 3268, type: !620)
!10469 = !DILocation(line: 3268, column: 24, scope: !10452)
!10470 = !DILocalVariable(name: "ret", scope: !10452, file: !3, line: 3269, type: !139)
!10471 = !DILocation(line: 3269, column: 6, scope: !10452)
!10472 = !DILocation(line: 3271, column: 7, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 3271, column: 6)
!10474 = !DILocation(line: 3271, column: 6, scope: !10452)
!10475 = !DILocation(line: 3272, column: 3, scope: !10473)
!10476 = !DILocation(line: 3275, column: 3, scope: !10452)
!10477 = !DILocation(line: 3275, column: 10, scope: !10452)
!10478 = !DILocation(line: 3276, column: 3, scope: !10452)
!10479 = !DILocation(line: 3276, column: 7, scope: !10452)
!10480 = !DILocation(line: 3278, column: 27, scope: !10452)
!10481 = !DILocation(line: 3278, column: 39, scope: !10452)
!10482 = !DILocation(line: 3278, column: 38, scope: !10452)
!10483 = !DILocation(line: 3278, column: 48, scope: !10452)
!10484 = !DILocation(line: 3278, column: 47, scope: !10452)
!10485 = !DILocation(line: 3278, column: 8, scope: !10452)
!10486 = !DILocation(line: 3278, column: 6, scope: !10452)
!10487 = !DILocation(line: 3279, column: 6, scope: !10488)
!10488 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 3279, column: 6)
!10489 = !DILocation(line: 3279, column: 6, scope: !10452)
!10490 = !DILocation(line: 3280, column: 3, scope: !10488)
!10491 = !DILocation(line: 3282, column: 34, scope: !10452)
!10492 = !DILocation(line: 3282, column: 45, scope: !10452)
!10493 = !DILocation(line: 3282, column: 44, scope: !10452)
!10494 = !DILocation(line: 3282, column: 9, scope: !10452)
!10495 = !DILocation(line: 3282, column: 7, scope: !10452)
!10496 = !DILocation(line: 3283, column: 13, scope: !10452)
!10497 = !DILocation(line: 3283, column: 12, scope: !10452)
!10498 = !DILocation(line: 3283, column: 17, scope: !10452)
!10499 = !DILocation(line: 3283, column: 35, scope: !10452)
!10500 = !DILocation(line: 3283, column: 41, scope: !10452)
!10501 = !DILocation(line: 3283, column: 33, scope: !10452)
!10502 = !DILocation(line: 3283, column: 3, scope: !10452)
!10503 = !DILocation(line: 3283, column: 10, scope: !10452)
!10504 = !DILocation(line: 3285, column: 9, scope: !10452)
!10505 = !DILocation(line: 3285, column: 2, scope: !10452)
!10506 = !DILocation(line: 3286, column: 1, scope: !10452)
!10507 = distinct !DISubprogram(name: "drm_displayid_parse_tiled", scope: !3, file: !3, line: 5934, type: !10508, scopeLine: 5936, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10508 = !DISubroutineType(types: !10509)
!10509 = !{null, !1162, !576, !139, !139}
!10510 = !DILocalVariable(name: "connector", arg: 1, scope: !10507, file: !3, line: 5934, type: !1162)
!10511 = !DILocation(line: 5934, column: 61, scope: !10507)
!10512 = !DILocalVariable(name: "displayid", arg: 2, scope: !10507, file: !3, line: 5935, type: !576)
!10513 = !DILocation(line: 5935, column: 21, scope: !10507)
!10514 = !DILocalVariable(name: "length", arg: 3, scope: !10507, file: !3, line: 5935, type: !139)
!10515 = !DILocation(line: 5935, column: 36, scope: !10507)
!10516 = !DILocalVariable(name: "idx", arg: 4, scope: !10507, file: !3, line: 5935, type: !139)
!10517 = !DILocation(line: 5935, column: 48, scope: !10507)
!10518 = !DILocalVariable(name: "block", scope: !10507, file: !3, line: 5937, type: !10519)
!10519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10520, size: 64)
!10520 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !580)
!10521 = !DILocation(line: 5937, column: 32, scope: !10507)
!10522 = !DILocation(line: 5939, column: 6, scope: !10507)
!10523 = !DILocation(line: 5940, column: 2, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10507, file: !3, line: 5940, column: 2)
!10525 = !DILocation(line: 5940, column: 2, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 5940, column: 2)
!10527 = !DILocation(line: 0, scope: !10526)
!10528 = !DILocation(line: 5941, column: 3, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10526, file: !3, line: 5940, column: 55)
!10530 = !DILocation(line: 5944, column: 11, scope: !10529)
!10531 = !DILocation(line: 5944, column: 18, scope: !10529)
!10532 = !DILocation(line: 5944, column: 3, scope: !10529)
!10533 = !DILocation(line: 5946, column: 26, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10529, file: !3, line: 5944, column: 23)
!10535 = !DILocation(line: 5946, column: 37, scope: !10534)
!10536 = !DILocation(line: 5946, column: 4, scope: !10534)
!10537 = !DILocation(line: 5947, column: 4, scope: !10534)
!10538 = !DILocation(line: 5949, column: 4, scope: !10534)
!10539 = !DILocation(line: 5950, column: 4, scope: !10534)
!10540 = !DILocation(line: 5952, column: 2, scope: !10529)
!10541 = distinct !{!10541, !10523, !10542}
!10542 = !DILocation(line: 5952, column: 2, scope: !10524)
!10543 = !DILocation(line: 5953, column: 1, scope: !10507)
!10544 = distinct !DISubprogram(name: "drm_load_edid_firmware", scope: !371, file: !371, line: 356, type: !6213, scopeLine: 357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10545 = !DILocalVariable(name: "connector", arg: 1, scope: !10544, file: !371, line: 356, type: !1162)
!10546 = !DILocation(line: 356, column: 46, scope: !10544)
!10547 = !DILocation(line: 358, column: 9, scope: !10544)
!10548 = !DILocation(line: 358, column: 2, scope: !10544)
!10549 = distinct !DISubprogram(name: "IS_ERR", scope: !10550, file: !10550, line: 34, type: !10551, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10550 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10551 = !DISubroutineType(types: !10552)
!10552 = !{!559, !3143}
!10553 = !DILocalVariable(name: "ptr", arg: 1, scope: !10549, file: !10550, line: 34, type: !3143)
!10554 = !DILocation(line: 34, column: 60, scope: !10549)
!10555 = !DILocation(line: 36, column: 9, scope: !10549)
!10556 = !DILocation(line: 36, column: 2, scope: !10549)
!10557 = distinct !DISubprogram(name: "ERR_PTR", scope: !10550, file: !10550, line: 24, type: !10558, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10558 = !DISubroutineType(types: !10559)
!10559 = !{!368, !593}
!10560 = !DILocalVariable(name: "error", arg: 1, scope: !10557, file: !10550, line: 24, type: !593)
!10561 = !DILocation(line: 24, column: 48, scope: !10557)
!10562 = !DILocation(line: 26, column: 18, scope: !10557)
!10563 = !DILocation(line: 26, column: 9, scope: !10557)
!10564 = !DILocation(line: 26, column: 2, scope: !10557)
!10565 = distinct !DISubprogram(name: "get_order", scope: !10566, file: !10566, line: 29, type: !10567, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10566 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!10567 = !DISubroutineType(types: !10568)
!10568 = !{!139, !574}
!10569 = !DILocalVariable(name: "x", arg: 1, scope: !10570, file: !10571, line: 366, type: !587)
!10570 = distinct !DISubprogram(name: "fls64", scope: !10571, file: !10571, line: 366, type: !10572, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10571 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!10572 = !DISubroutineType(types: !10573)
!10573 = !{!139, !587}
!10574 = !DILocation(line: 366, column: 40, scope: !10570, inlinedAt: !10575)
!10575 = distinct !DILocation(line: 46, column: 9, scope: !10565)
!10576 = !DILocalVariable(name: "bitpos", scope: !10570, file: !10571, line: 368, type: !139)
!10577 = !DILocation(line: 368, column: 6, scope: !10570, inlinedAt: !10575)
!10578 = !DILocalVariable(name: "size", arg: 1, scope: !10565, file: !10566, line: 29, type: !574)
!10579 = !DILocation(line: 29, column: 63, scope: !10565)
!10580 = !DILocation(line: 31, column: 27, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10565, file: !10566, line: 31, column: 6)
!10582 = !DILocation(line: 31, column: 6, scope: !10581)
!10583 = !DILocation(line: 31, column: 6, scope: !10565)
!10584 = !DILocation(line: 32, column: 8, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10586, file: !10566, line: 32, column: 7)
!10586 = distinct !DILexicalBlock(scope: !10581, file: !10566, line: 31, column: 34)
!10587 = !DILocation(line: 32, column: 7, scope: !10586)
!10588 = !DILocation(line: 33, column: 4, scope: !10585)
!10589 = !DILocation(line: 35, column: 7, scope: !10590)
!10590 = distinct !DILexicalBlock(scope: !10586, file: !10566, line: 35, column: 7)
!10591 = !DILocation(line: 35, column: 12, scope: !10590)
!10592 = !DILocation(line: 35, column: 7, scope: !10586)
!10593 = !DILocation(line: 36, column: 4, scope: !10590)
!10594 = !DILocation(line: 38, column: 10, scope: !10586)
!10595 = !DILocation(line: 38, column: 28, scope: !10586)
!10596 = !DILocation(line: 38, column: 41, scope: !10586)
!10597 = !DILocation(line: 38, column: 3, scope: !10586)
!10598 = !DILocation(line: 41, column: 6, scope: !10565)
!10599 = !DILocation(line: 42, column: 7, scope: !10565)
!10600 = !DILocation(line: 46, column: 15, scope: !10565)
!10601 = !DILocation(line: 374, column: 2, scope: !10570, inlinedAt: !10575)
!10602 = !DILocation(line: 376, column: 14, scope: !10570, inlinedAt: !10575)
!10603 = !{i32 574587}
!10604 = !DILocation(line: 377, column: 9, scope: !10570, inlinedAt: !10575)
!10605 = !DILocation(line: 377, column: 16, scope: !10570, inlinedAt: !10575)
!10606 = !DILocation(line: 46, column: 2, scope: !10565)
!10607 = !DILocation(line: 48, column: 1, scope: !10565)
!10608 = distinct !DISubprogram(name: "__ilog2_u64", scope: !10609, file: !10609, line: 30, type: !10610, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10609 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!10610 = !DISubroutineType(types: !10611)
!10611 = !{!139, !586}
!10612 = !DILocation(line: 366, column: 40, scope: !10570, inlinedAt: !10613)
!10613 = distinct !DILocation(line: 32, column: 9, scope: !10608)
!10614 = !DILocation(line: 368, column: 6, scope: !10570, inlinedAt: !10613)
!10615 = !DILocalVariable(name: "n", arg: 1, scope: !10608, file: !10609, line: 30, type: !586)
!10616 = !DILocation(line: 30, column: 21, scope: !10608)
!10617 = !DILocation(line: 32, column: 15, scope: !10608)
!10618 = !DILocation(line: 374, column: 2, scope: !10570, inlinedAt: !10613)
!10619 = !DILocation(line: 376, column: 14, scope: !10570, inlinedAt: !10613)
!10620 = !DILocation(line: 377, column: 9, scope: !10570, inlinedAt: !10613)
!10621 = !DILocation(line: 377, column: 16, scope: !10570, inlinedAt: !10613)
!10622 = !DILocation(line: 32, column: 18, scope: !10608)
!10623 = !DILocation(line: 32, column: 2, scope: !10608)
!10624 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !10625, file: !10625, line: 137, type: !10626, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10625 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!10626 = !DISubroutineType(types: !10627)
!10627 = !{!368, !1920, !3143, !1285, !523}
!10628 = !DILocalVariable(name: "s", arg: 1, scope: !10624, file: !10625, line: 137, type: !1920)
!10629 = !DILocation(line: 137, column: 54, scope: !10624)
!10630 = !DILocalVariable(name: "object", arg: 2, scope: !10624, file: !10625, line: 137, type: !3143)
!10631 = !DILocation(line: 137, column: 69, scope: !10624)
!10632 = !DILocalVariable(name: "size", arg: 3, scope: !10624, file: !10625, line: 138, type: !1285)
!10633 = !DILocation(line: 138, column: 12, scope: !10624)
!10634 = !DILocalVariable(name: "flags", arg: 4, scope: !10624, file: !10625, line: 138, type: !523)
!10635 = !DILocation(line: 138, column: 24, scope: !10624)
!10636 = !DILocation(line: 140, column: 17, scope: !10624)
!10637 = !DILocation(line: 140, column: 2, scope: !10624)
!10638 = distinct !DISubprogram(name: "drm_debug_enabled", scope: !12, file: !12, line: 322, type: !10639, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10639 = !DISubroutineType(types: !10640)
!10640 = !{!559, !11}
!10641 = !DILocalVariable(name: "category", arg: 1, scope: !10638, file: !12, line: 322, type: !11)
!10642 = !DILocation(line: 322, column: 62, scope: !10638)
!10643 = !DILocation(line: 324, column: 9, scope: !10638)
!10644 = !DILocation(line: 324, column: 2, scope: !10638)
!10645 = distinct !DISubprogram(name: "__must_check_overflow", scope: !10646, file: !10646, line: 52, type: !10647, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10646 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!10647 = !DISubroutineType(types: !10648)
!10648 = !{!559, !559}
!10649 = !DILocalVariable(name: "overflow", arg: 1, scope: !10645, file: !10646, line: 52, type: !559)
!10650 = !DILocation(line: 52, column: 60, scope: !10645)
!10651 = !DILocation(line: 54, column: 9, scope: !10645)
!10652 = !DILocation(line: 54, column: 2, scope: !10645)
!10653 = distinct !DISubprogram(name: "drm_for_each_detailed_block", scope: !3, file: !3, line: 2284, type: !10654, scopeLine: 2285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10654 = !DISubroutineType(types: !10655)
!10655 = !{null, !522, !10656, !368}
!10656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10657, size: 64)
!10657 = !DIDerivedType(tag: DW_TAG_typedef, name: "detailed_cb", file: !3, line: 2253, baseType: !10658)
!10658 = !DISubroutineType(types: !10659)
!10659 = !{null, !575, !368}
!10660 = !DILocalVariable(name: "raw_edid", arg: 1, scope: !10653, file: !3, line: 2284, type: !522)
!10661 = !DILocation(line: 2284, column: 33, scope: !10653)
!10662 = !DILocalVariable(name: "cb", arg: 2, scope: !10653, file: !3, line: 2284, type: !10656)
!10663 = !DILocation(line: 2284, column: 56, scope: !10653)
!10664 = !DILocalVariable(name: "closure", arg: 3, scope: !10653, file: !3, line: 2284, type: !368)
!10665 = !DILocation(line: 2284, column: 66, scope: !10653)
!10666 = !DILocalVariable(name: "i", scope: !10653, file: !3, line: 2286, type: !139)
!10667 = !DILocation(line: 2286, column: 6, scope: !10653)
!10668 = !DILocalVariable(name: "edid", scope: !10653, file: !3, line: 2287, type: !369)
!10669 = !DILocation(line: 2287, column: 15, scope: !10653)
!10670 = !DILocation(line: 2287, column: 37, scope: !10653)
!10671 = !DILocation(line: 2287, column: 22, scope: !10653)
!10672 = !DILocation(line: 2289, column: 6, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 2289, column: 6)
!10674 = !DILocation(line: 2289, column: 11, scope: !10673)
!10675 = !DILocation(line: 2289, column: 6, scope: !10653)
!10676 = !DILocation(line: 2290, column: 3, scope: !10673)
!10677 = !DILocation(line: 2292, column: 9, scope: !10678)
!10678 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 2292, column: 2)
!10679 = !DILocation(line: 2292, column: 7, scope: !10678)
!10680 = !DILocation(line: 2292, column: 14, scope: !10681)
!10681 = distinct !DILexicalBlock(scope: !10678, file: !3, line: 2292, column: 2)
!10682 = !DILocation(line: 2292, column: 16, scope: !10681)
!10683 = !DILocation(line: 2292, column: 2, scope: !10678)
!10684 = !DILocation(line: 2293, column: 3, scope: !10681)
!10685 = !DILocation(line: 2293, column: 8, scope: !10681)
!10686 = !DILocation(line: 2293, column: 14, scope: !10681)
!10687 = !DILocation(line: 2293, column: 31, scope: !10681)
!10688 = !DILocation(line: 2293, column: 36, scope: !10681)
!10689 = !DILocation(line: 2292, column: 42, scope: !10681)
!10690 = !DILocation(line: 2292, column: 2, scope: !10681)
!10691 = distinct !{!10691, !10683, !10692}
!10692 = !DILocation(line: 2293, column: 43, scope: !10678)
!10693 = !DILocation(line: 2295, column: 9, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 2295, column: 2)
!10695 = !DILocation(line: 2295, column: 7, scope: !10694)
!10696 = !DILocation(line: 2295, column: 14, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 2295, column: 2)
!10698 = !DILocation(line: 2295, column: 19, scope: !10697)
!10699 = !DILocation(line: 2295, column: 16, scope: !10697)
!10700 = !DILocation(line: 2295, column: 2, scope: !10694)
!10701 = !DILocalVariable(name: "ext", scope: !10702, file: !3, line: 2296, type: !522)
!10702 = distinct !DILexicalBlock(scope: !10697, file: !3, line: 2295, column: 40)
!10703 = !DILocation(line: 2296, column: 7, scope: !10702)
!10704 = !DILocation(line: 2296, column: 13, scope: !10702)
!10705 = !DILocation(line: 2296, column: 25, scope: !10702)
!10706 = !DILocation(line: 2296, column: 27, scope: !10702)
!10707 = !DILocation(line: 2296, column: 22, scope: !10702)
!10708 = !DILocation(line: 2298, column: 12, scope: !10702)
!10709 = !DILocation(line: 2298, column: 11, scope: !10702)
!10710 = !DILocation(line: 2298, column: 3, scope: !10702)
!10711 = !DILocation(line: 2300, column: 32, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10702, file: !3, line: 2298, column: 17)
!10713 = !DILocation(line: 2300, column: 37, scope: !10712)
!10714 = !DILocation(line: 2300, column: 41, scope: !10712)
!10715 = !DILocation(line: 2300, column: 4, scope: !10712)
!10716 = !DILocation(line: 2301, column: 4, scope: !10712)
!10717 = !DILocation(line: 2303, column: 32, scope: !10712)
!10718 = !DILocation(line: 2303, column: 37, scope: !10712)
!10719 = !DILocation(line: 2303, column: 41, scope: !10712)
!10720 = !DILocation(line: 2303, column: 4, scope: !10712)
!10721 = !DILocation(line: 2304, column: 4, scope: !10712)
!10722 = !DILocation(line: 2306, column: 4, scope: !10712)
!10723 = !DILocation(line: 2308, column: 2, scope: !10702)
!10724 = !DILocation(line: 2295, column: 36, scope: !10697)
!10725 = !DILocation(line: 2295, column: 2, scope: !10697)
!10726 = distinct !{!10726, !10700, !10727}
!10727 = !DILocation(line: 2308, column: 2, scope: !10694)
!10728 = !DILocation(line: 2309, column: 1, scope: !10653)
!10729 = distinct !DISubprogram(name: "monitor_name", scope: !3, file: !3, line: 4428, type: !10658, scopeLine: 4429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10730 = !DILocalVariable(name: "t", arg: 1, scope: !10729, file: !3, line: 4428, type: !575)
!10731 = !DILocation(line: 4428, column: 38, scope: !10729)
!10732 = !DILocalVariable(name: "data", arg: 2, scope: !10729, file: !3, line: 4428, type: !368)
!10733 = !DILocation(line: 4428, column: 47, scope: !10729)
!10734 = !DILocation(line: 4430, column: 41, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10729, file: !3, line: 4430, column: 6)
!10736 = !DILocation(line: 4430, column: 29, scope: !10735)
!10737 = !DILocation(line: 4430, column: 7, scope: !10735)
!10738 = !DILocation(line: 4430, column: 6, scope: !10729)
!10739 = !DILocation(line: 4431, column: 3, scope: !10735)
!10740 = !DILocation(line: 4433, column: 17, scope: !10729)
!10741 = !DILocation(line: 4433, column: 20, scope: !10729)
!10742 = !DILocation(line: 4433, column: 25, scope: !10729)
!10743 = !DILocation(line: 4433, column: 36, scope: !10729)
!10744 = !DILocation(line: 4433, column: 41, scope: !10729)
!10745 = !DILocation(line: 4433, column: 45, scope: !10729)
!10746 = !DILocation(line: 4433, column: 10, scope: !10729)
!10747 = !DILocation(line: 4433, column: 3, scope: !10729)
!10748 = !DILocation(line: 4433, column: 15, scope: !10729)
!10749 = !DILocation(line: 4434, column: 1, scope: !10729)
!10750 = distinct !DISubprogram(name: "cea_for_each_detailed_block", scope: !3, file: !3, line: 2256, type: !10654, scopeLine: 2257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10751 = !DILocalVariable(name: "ext", arg: 1, scope: !10750, file: !3, line: 2256, type: !522)
!10752 = !DILocation(line: 2256, column: 33, scope: !10750)
!10753 = !DILocalVariable(name: "cb", arg: 2, scope: !10750, file: !3, line: 2256, type: !10656)
!10754 = !DILocation(line: 2256, column: 51, scope: !10750)
!10755 = !DILocalVariable(name: "closure", arg: 3, scope: !10750, file: !3, line: 2256, type: !368)
!10756 = !DILocation(line: 2256, column: 61, scope: !10750)
!10757 = !DILocalVariable(name: "i", scope: !10750, file: !3, line: 2258, type: !139)
!10758 = !DILocation(line: 2258, column: 6, scope: !10750)
!10759 = !DILocalVariable(name: "n", scope: !10750, file: !3, line: 2258, type: !139)
!10760 = !DILocation(line: 2258, column: 9, scope: !10750)
!10761 = !DILocalVariable(name: "d", scope: !10750, file: !3, line: 2259, type: !375)
!10762 = !DILocation(line: 2259, column: 5, scope: !10750)
!10763 = !DILocation(line: 2259, column: 9, scope: !10750)
!10764 = !DILocalVariable(name: "det_base", scope: !10750, file: !3, line: 2260, type: !522)
!10765 = !DILocation(line: 2260, column: 6, scope: !10750)
!10766 = !DILocation(line: 2260, column: 17, scope: !10750)
!10767 = !DILocation(line: 2260, column: 23, scope: !10750)
!10768 = !DILocation(line: 2260, column: 21, scope: !10750)
!10769 = !DILocation(line: 2262, column: 6, scope: !10770)
!10770 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 2262, column: 6)
!10771 = !DILocation(line: 2262, column: 8, scope: !10770)
!10772 = !DILocation(line: 2262, column: 12, scope: !10770)
!10773 = !DILocation(line: 2262, column: 15, scope: !10770)
!10774 = !DILocation(line: 2262, column: 17, scope: !10770)
!10775 = !DILocation(line: 2262, column: 6, scope: !10750)
!10776 = !DILocation(line: 2263, column: 3, scope: !10770)
!10777 = !DILocation(line: 2265, column: 13, scope: !10750)
!10778 = !DILocation(line: 2265, column: 11, scope: !10750)
!10779 = !DILocation(line: 2265, column: 16, scope: !10750)
!10780 = !DILocation(line: 2265, column: 4, scope: !10750)
!10781 = !DILocation(line: 2266, column: 9, scope: !10782)
!10782 = distinct !DILexicalBlock(scope: !10750, file: !3, line: 2266, column: 2)
!10783 = !DILocation(line: 2266, column: 7, scope: !10782)
!10784 = !DILocation(line: 2266, column: 14, scope: !10785)
!10785 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 2266, column: 2)
!10786 = !DILocation(line: 2266, column: 18, scope: !10785)
!10787 = !DILocation(line: 2266, column: 16, scope: !10785)
!10788 = !DILocation(line: 2266, column: 2, scope: !10782)
!10789 = !DILocation(line: 2267, column: 3, scope: !10785)
!10790 = !DILocation(line: 2267, column: 33, scope: !10785)
!10791 = !DILocation(line: 2267, column: 49, scope: !10785)
!10792 = !DILocation(line: 2267, column: 47, scope: !10785)
!10793 = !DILocation(line: 2267, column: 42, scope: !10785)
!10794 = !DILocation(line: 2267, column: 6, scope: !10785)
!10795 = !DILocation(line: 2267, column: 53, scope: !10785)
!10796 = !DILocation(line: 2266, column: 22, scope: !10785)
!10797 = !DILocation(line: 2266, column: 2, scope: !10785)
!10798 = distinct !{!10798, !10788, !10799}
!10799 = !DILocation(line: 2267, column: 60, scope: !10782)
!10800 = !DILocation(line: 2268, column: 1, scope: !10750)
!10801 = distinct !DISubprogram(name: "vtb_for_each_detailed_block", scope: !3, file: !3, line: 2271, type: !10654, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10802 = !DILocalVariable(name: "ext", arg: 1, scope: !10801, file: !3, line: 2271, type: !522)
!10803 = !DILocation(line: 2271, column: 33, scope: !10801)
!10804 = !DILocalVariable(name: "cb", arg: 2, scope: !10801, file: !3, line: 2271, type: !10656)
!10805 = !DILocation(line: 2271, column: 51, scope: !10801)
!10806 = !DILocalVariable(name: "closure", arg: 3, scope: !10801, file: !3, line: 2271, type: !368)
!10807 = !DILocation(line: 2271, column: 61, scope: !10801)
!10808 = !DILocalVariable(name: "i", scope: !10801, file: !3, line: 2273, type: !7)
!10809 = !DILocation(line: 2273, column: 15, scope: !10801)
!10810 = !DILocalVariable(name: "n", scope: !10801, file: !3, line: 2273, type: !7)
!10811 = !DILocation(line: 2273, column: 18, scope: !10801)
!10812 = !DILocalVariable(name: "__UNIQUE_ID___x259", scope: !10813, file: !3, line: 2273, type: !139)
!10813 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2273, column: 22)
!10814 = !DILocation(line: 2273, column: 22, scope: !10813)
!10815 = !DILocalVariable(name: "__UNIQUE_ID___y260", scope: !10813, file: !3, line: 2273, type: !139)
!10816 = !DILocalVariable(name: "det_base", scope: !10801, file: !3, line: 2274, type: !522)
!10817 = !DILocation(line: 2274, column: 6, scope: !10801)
!10818 = !DILocation(line: 2274, column: 17, scope: !10801)
!10819 = !DILocation(line: 2274, column: 21, scope: !10801)
!10820 = !DILocation(line: 2276, column: 6, scope: !10821)
!10821 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2276, column: 6)
!10822 = !DILocation(line: 2276, column: 16, scope: !10821)
!10823 = !DILocation(line: 2276, column: 6, scope: !10801)
!10824 = !DILocation(line: 2277, column: 3, scope: !10821)
!10825 = !DILocation(line: 2279, column: 9, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2279, column: 2)
!10827 = !DILocation(line: 2279, column: 7, scope: !10826)
!10828 = !DILocation(line: 2279, column: 14, scope: !10829)
!10829 = distinct !DILexicalBlock(scope: !10826, file: !3, line: 2279, column: 2)
!10830 = !DILocation(line: 2279, column: 18, scope: !10829)
!10831 = !DILocation(line: 2279, column: 16, scope: !10829)
!10832 = !DILocation(line: 2279, column: 2, scope: !10826)
!10833 = !DILocation(line: 2280, column: 3, scope: !10829)
!10834 = !DILocation(line: 2280, column: 33, scope: !10829)
!10835 = !DILocation(line: 2280, column: 49, scope: !10829)
!10836 = !DILocation(line: 2280, column: 47, scope: !10829)
!10837 = !DILocation(line: 2280, column: 42, scope: !10829)
!10838 = !DILocation(line: 2280, column: 6, scope: !10829)
!10839 = !DILocation(line: 2280, column: 53, scope: !10829)
!10840 = !DILocation(line: 2279, column: 22, scope: !10829)
!10841 = !DILocation(line: 2279, column: 2, scope: !10829)
!10842 = distinct !{!10842, !10832, !10843}
!10843 = !DILocation(line: 2280, column: 60, scope: !10826)
!10844 = !DILocation(line: 2281, column: 1, scope: !10801)
!10845 = distinct !DISubprogram(name: "is_display_descriptor", scope: !3, file: !3, line: 2242, type: !1090, scopeLine: 2243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10846 = !DILocalVariable(name: "d", arg: 1, scope: !10845, file: !3, line: 2242, type: !576)
!10847 = !DILocation(line: 2242, column: 44, scope: !10845)
!10848 = !DILocalVariable(name: "tag", arg: 2, scope: !10845, file: !3, line: 2242, type: !375)
!10849 = !DILocation(line: 2242, column: 54, scope: !10845)
!10850 = !DILocation(line: 2244, column: 9, scope: !10845)
!10851 = !DILocation(line: 2244, column: 14, scope: !10845)
!10852 = !DILocation(line: 2244, column: 22, scope: !10845)
!10853 = !DILocation(line: 2244, column: 25, scope: !10845)
!10854 = !DILocation(line: 2244, column: 30, scope: !10845)
!10855 = !DILocation(line: 2244, column: 38, scope: !10845)
!10856 = !DILocation(line: 2245, column: 3, scope: !10845)
!10857 = !DILocation(line: 2245, column: 8, scope: !10845)
!10858 = !DILocation(line: 2245, column: 16, scope: !10845)
!10859 = !DILocation(line: 2245, column: 19, scope: !10845)
!10860 = !DILocation(line: 2245, column: 27, scope: !10845)
!10861 = !DILocation(line: 2245, column: 24, scope: !10845)
!10862 = !DILocation(line: 0, scope: !10845)
!10863 = !DILocation(line: 2244, column: 2, scope: !10845)
!10864 = distinct !DISubprogram(name: "drm_find_edid_extension", scope: !3, file: !3, line: 3237, type: !10865, scopeLine: 3239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10865 = !DISubroutineType(types: !10866)
!10866 = !{!522, !842, !139, !1655}
!10867 = !DILocalVariable(name: "edid", arg: 1, scope: !10864, file: !3, line: 3237, type: !842)
!10868 = !DILocation(line: 3237, column: 55, scope: !10864)
!10869 = !DILocalVariable(name: "ext_id", arg: 2, scope: !10864, file: !3, line: 3238, type: !139)
!10870 = !DILocation(line: 3238, column: 12, scope: !10864)
!10871 = !DILocalVariable(name: "ext_index", arg: 3, scope: !10864, file: !3, line: 3238, type: !1655)
!10872 = !DILocation(line: 3238, column: 25, scope: !10864)
!10873 = !DILocalVariable(name: "edid_ext", scope: !10864, file: !3, line: 3240, type: !522)
!10874 = !DILocation(line: 3240, column: 6, scope: !10864)
!10875 = !DILocalVariable(name: "i", scope: !10864, file: !3, line: 3241, type: !139)
!10876 = !DILocation(line: 3241, column: 6, scope: !10864)
!10877 = !DILocation(line: 3244, column: 6, scope: !10878)
!10878 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 3244, column: 6)
!10879 = !DILocation(line: 3244, column: 11, scope: !10878)
!10880 = !DILocation(line: 3244, column: 19, scope: !10878)
!10881 = !DILocation(line: 3244, column: 22, scope: !10878)
!10882 = !DILocation(line: 3244, column: 28, scope: !10878)
!10883 = !DILocation(line: 3244, column: 39, scope: !10878)
!10884 = !DILocation(line: 3244, column: 6, scope: !10864)
!10885 = !DILocation(line: 3245, column: 3, scope: !10878)
!10886 = !DILocation(line: 3248, column: 12, scope: !10887)
!10887 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 3248, column: 2)
!10888 = !DILocation(line: 3248, column: 11, scope: !10887)
!10889 = !DILocation(line: 3248, column: 9, scope: !10887)
!10890 = !DILocation(line: 3248, column: 7, scope: !10887)
!10891 = !DILocation(line: 3248, column: 23, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10887, file: !3, line: 3248, column: 2)
!10893 = !DILocation(line: 3248, column: 27, scope: !10892)
!10894 = !DILocation(line: 3248, column: 33, scope: !10892)
!10895 = !DILocation(line: 3248, column: 25, scope: !10892)
!10896 = !DILocation(line: 3248, column: 2, scope: !10887)
!10897 = !DILocation(line: 3249, column: 20, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10892, file: !3, line: 3248, column: 50)
!10899 = !DILocation(line: 3249, column: 14, scope: !10898)
!10900 = !DILocation(line: 3249, column: 42, scope: !10898)
!10901 = !DILocation(line: 3249, column: 44, scope: !10898)
!10902 = !DILocation(line: 3249, column: 39, scope: !10898)
!10903 = !DILocation(line: 3249, column: 25, scope: !10898)
!10904 = !DILocation(line: 3249, column: 12, scope: !10898)
!10905 = !DILocation(line: 3250, column: 7, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 3250, column: 7)
!10907 = !DILocation(line: 3250, column: 22, scope: !10906)
!10908 = !DILocation(line: 3250, column: 19, scope: !10906)
!10909 = !DILocation(line: 3250, column: 7, scope: !10898)
!10910 = !DILocation(line: 3251, column: 4, scope: !10906)
!10911 = !DILocation(line: 3252, column: 2, scope: !10898)
!10912 = !DILocation(line: 3248, column: 46, scope: !10892)
!10913 = !DILocation(line: 3248, column: 2, scope: !10892)
!10914 = distinct !{!10914, !10896, !10915}
!10915 = !DILocation(line: 3252, column: 2, scope: !10887)
!10916 = !DILocation(line: 3254, column: 6, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 3254, column: 6)
!10918 = !DILocation(line: 3254, column: 11, scope: !10917)
!10919 = !DILocation(line: 3254, column: 17, scope: !10917)
!10920 = !DILocation(line: 3254, column: 8, scope: !10917)
!10921 = !DILocation(line: 3254, column: 6, scope: !10864)
!10922 = !DILocation(line: 3255, column: 3, scope: !10917)
!10923 = !DILocation(line: 3257, column: 15, scope: !10864)
!10924 = !DILocation(line: 3257, column: 17, scope: !10864)
!10925 = !DILocation(line: 3257, column: 3, scope: !10864)
!10926 = !DILocation(line: 3257, column: 13, scope: !10864)
!10927 = !DILocation(line: 3259, column: 9, scope: !10864)
!10928 = !DILocation(line: 3259, column: 2, scope: !10864)
!10929 = !DILocation(line: 3260, column: 1, scope: !10864)
!10930 = distinct !DISubprogram(name: "edid_vendor", scope: !3, file: !3, line: 2110, type: !10931, scopeLine: 2111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10931 = !DISubroutineType(types: !10932)
!10932 = !{!559, !842, !648}
!10933 = !DILocalVariable(name: "edid", arg: 1, scope: !10930, file: !3, line: 2110, type: !842)
!10934 = !DILocation(line: 2110, column: 44, scope: !10930)
!10935 = !DILocalVariable(name: "vendor", arg: 2, scope: !10930, file: !3, line: 2110, type: !648)
!10936 = !DILocation(line: 2110, column: 62, scope: !10930)
!10937 = !DILocalVariable(name: "edid_vendor", scope: !10930, file: !3, line: 2112, type: !10938)
!10938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !569, size: 24, elements: !516)
!10939 = !DILocation(line: 2112, column: 7, scope: !10930)
!10940 = !DILocation(line: 2114, column: 21, scope: !10930)
!10941 = !DILocation(line: 2114, column: 27, scope: !10930)
!10942 = !DILocation(line: 2114, column: 37, scope: !10930)
!10943 = !DILocation(line: 2114, column: 45, scope: !10930)
!10944 = !DILocation(line: 2114, column: 51, scope: !10930)
!10945 = !DILocation(line: 2114, column: 19, scope: !10930)
!10946 = !DILocation(line: 2114, column: 2, scope: !10930)
!10947 = !DILocation(line: 2114, column: 17, scope: !10930)
!10948 = !DILocation(line: 2115, column: 22, scope: !10930)
!10949 = !DILocation(line: 2115, column: 28, scope: !10930)
!10950 = !DILocation(line: 2115, column: 38, scope: !10930)
!10951 = !DILocation(line: 2115, column: 45, scope: !10930)
!10952 = !DILocation(line: 2116, column: 8, scope: !10930)
!10953 = !DILocation(line: 2116, column: 14, scope: !10930)
!10954 = !DILocation(line: 2116, column: 24, scope: !10930)
!10955 = !DILocation(line: 2116, column: 32, scope: !10930)
!10956 = !DILocation(line: 2115, column: 51, scope: !10930)
!10957 = !DILocation(line: 2116, column: 39, scope: !10930)
!10958 = !DILocation(line: 2115, column: 19, scope: !10930)
!10959 = !DILocation(line: 2115, column: 2, scope: !10930)
!10960 = !DILocation(line: 2115, column: 17, scope: !10930)
!10961 = !DILocation(line: 2117, column: 20, scope: !10930)
!10962 = !DILocation(line: 2117, column: 26, scope: !10930)
!10963 = !DILocation(line: 2117, column: 36, scope: !10930)
!10964 = !DILocation(line: 2117, column: 44, scope: !10930)
!10965 = !DILocation(line: 2117, column: 19, scope: !10930)
!10966 = !DILocation(line: 2117, column: 2, scope: !10930)
!10967 = !DILocation(line: 2117, column: 17, scope: !10930)
!10968 = !DILocation(line: 2119, column: 18, scope: !10930)
!10969 = !DILocation(line: 2119, column: 31, scope: !10930)
!10970 = !DILocation(line: 2119, column: 10, scope: !10930)
!10971 = !DILocation(line: 2119, column: 9, scope: !10930)
!10972 = !DILocation(line: 2119, column: 2, scope: !10930)
!10973 = distinct !DISubprogram(name: "get_monitor_range", scope: !3, file: !3, line: 5036, type: !10658, scopeLine: 5038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!10974 = !DILocalVariable(name: "timing", arg: 1, scope: !10973, file: !3, line: 5036, type: !575)
!10975 = !DILocation(line: 5036, column: 48, scope: !10973)
!10976 = !DILocalVariable(name: "info_monitor_range", arg: 2, scope: !10973, file: !3, line: 5037, type: !368)
!10977 = !DILocation(line: 5037, column: 16, scope: !10973)
!10978 = !DILocalVariable(name: "monitor_range", scope: !10973, file: !3, line: 5039, type: !10979)
!10979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5489, size: 64)
!10980 = !DILocation(line: 5039, column: 33, scope: !10973)
!10981 = !DILocation(line: 5039, column: 49, scope: !10973)
!10982 = !DILocalVariable(name: "data", scope: !10973, file: !3, line: 5040, type: !10983)
!10983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10984, size: 64)
!10984 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !453)
!10985 = !DILocation(line: 5040, column: 35, scope: !10973)
!10986 = !DILocation(line: 5040, column: 43, scope: !10973)
!10987 = !DILocation(line: 5040, column: 51, scope: !10973)
!10988 = !DILocation(line: 5040, column: 56, scope: !10973)
!10989 = !DILocalVariable(name: "range", scope: !10973, file: !3, line: 5041, type: !10990)
!10990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10991, size: 64)
!10991 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !469)
!10992 = !DILocation(line: 5041, column: 44, scope: !10973)
!10993 = !DILocation(line: 5041, column: 53, scope: !10973)
!10994 = !DILocation(line: 5041, column: 59, scope: !10973)
!10995 = !DILocation(line: 5041, column: 64, scope: !10973)
!10996 = !DILocation(line: 5043, column: 41, scope: !10997)
!10997 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 5043, column: 6)
!10998 = !DILocation(line: 5043, column: 29, scope: !10997)
!10999 = !DILocation(line: 5043, column: 7, scope: !10997)
!11000 = !DILocation(line: 5043, column: 6, scope: !10973)
!11001 = !DILocation(line: 5044, column: 3, scope: !10997)
!11002 = !DILocation(line: 5052, column: 6, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10973, file: !3, line: 5052, column: 6)
!11004 = !DILocation(line: 5052, column: 13, scope: !11003)
!11005 = !DILocation(line: 5052, column: 19, scope: !11003)
!11006 = !DILocation(line: 5052, column: 6, scope: !10973)
!11007 = !DILocation(line: 5053, column: 3, scope: !11003)
!11008 = !DILocation(line: 5055, column: 29, scope: !10973)
!11009 = !DILocation(line: 5055, column: 36, scope: !10973)
!11010 = !DILocation(line: 5055, column: 2, scope: !10973)
!11011 = !DILocation(line: 5055, column: 17, scope: !10973)
!11012 = !DILocation(line: 5055, column: 27, scope: !10973)
!11013 = !DILocation(line: 5056, column: 29, scope: !10973)
!11014 = !DILocation(line: 5056, column: 36, scope: !10973)
!11015 = !DILocation(line: 5056, column: 2, scope: !10973)
!11016 = !DILocation(line: 5056, column: 17, scope: !10973)
!11017 = !DILocation(line: 5056, column: 27, scope: !10973)
!11018 = !DILocation(line: 5057, column: 1, scope: !10973)
!11019 = distinct !DISubprogram(name: "drm_parse_hdmi_vsdb_video", scope: !3, file: !3, line: 4976, type: !11020, scopeLine: 4977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11020 = !DISubroutineType(types: !11021)
!11021 = !{null, !1162, !576}
!11022 = !DILocalVariable(name: "connector", arg: 1, scope: !11019, file: !3, line: 4976, type: !1162)
!11023 = !DILocation(line: 4976, column: 49, scope: !11019)
!11024 = !DILocalVariable(name: "db", arg: 2, scope: !11019, file: !3, line: 4976, type: !576)
!11025 = !DILocation(line: 4976, column: 70, scope: !11019)
!11026 = !DILocalVariable(name: "info", scope: !11019, file: !3, line: 4978, type: !8397)
!11027 = !DILocation(line: 4978, column: 27, scope: !11019)
!11028 = !DILocation(line: 4978, column: 35, scope: !11019)
!11029 = !DILocation(line: 4978, column: 46, scope: !11019)
!11030 = !DILocalVariable(name: "len", scope: !11019, file: !3, line: 4979, type: !375)
!11031 = !DILocation(line: 4979, column: 5, scope: !11019)
!11032 = !DILocation(line: 4979, column: 30, scope: !11019)
!11033 = !DILocation(line: 4979, column: 11, scope: !11019)
!11034 = !DILocation(line: 4981, column: 2, scope: !11019)
!11035 = !DILocation(line: 4981, column: 8, scope: !11019)
!11036 = !DILocation(line: 4981, column: 16, scope: !11019)
!11037 = !DILocation(line: 4983, column: 6, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 4983, column: 6)
!11039 = !DILocation(line: 4983, column: 10, scope: !11038)
!11040 = !DILocation(line: 4983, column: 6, scope: !11019)
!11041 = !DILocation(line: 4984, column: 20, scope: !11038)
!11042 = !DILocation(line: 4984, column: 26, scope: !11038)
!11043 = !DILocation(line: 4984, column: 3, scope: !11038)
!11044 = !DILocation(line: 4984, column: 9, scope: !11038)
!11045 = !DILocation(line: 4984, column: 18, scope: !11038)
!11046 = !DILocation(line: 4985, column: 6, scope: !11047)
!11047 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 4985, column: 6)
!11048 = !DILocation(line: 4985, column: 10, scope: !11047)
!11049 = !DILocation(line: 4985, column: 6, scope: !11019)
!11050 = !DILocation(line: 4986, column: 26, scope: !11047)
!11051 = !DILocation(line: 4986, column: 32, scope: !11047)
!11052 = !DILocation(line: 4986, column: 3, scope: !11047)
!11053 = !DILocation(line: 4986, column: 9, scope: !11047)
!11054 = !DILocation(line: 4986, column: 24, scope: !11047)
!11055 = !DILocation(line: 4988, column: 2, scope: !11019)
!11056 = !DILocation(line: 4993, column: 33, scope: !11019)
!11057 = !DILocation(line: 4993, column: 44, scope: !11019)
!11058 = !DILocation(line: 4993, column: 2, scope: !11019)
!11059 = !DILocation(line: 4994, column: 1, scope: !11019)
!11060 = distinct !DISubprogram(name: "cea_db_is_hdmi_forum_vsdb", scope: !3, file: !3, line: 4157, type: !8279, scopeLine: 4158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11061 = !DILocalVariable(name: "db", arg: 1, scope: !11060, file: !3, line: 4157, type: !576)
!11062 = !DILocation(line: 4157, column: 49, scope: !11060)
!11063 = !DILocalVariable(name: "oui", scope: !11060, file: !3, line: 4159, type: !7)
!11064 = !DILocation(line: 4159, column: 15, scope: !11060)
!11065 = !DILocation(line: 4161, column: 17, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 4161, column: 6)
!11067 = !DILocation(line: 4161, column: 6, scope: !11066)
!11068 = !DILocation(line: 4161, column: 21, scope: !11066)
!11069 = !DILocation(line: 4161, column: 6, scope: !11060)
!11070 = !DILocation(line: 4162, column: 3, scope: !11066)
!11071 = !DILocation(line: 4164, column: 25, scope: !11072)
!11072 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 4164, column: 6)
!11073 = !DILocation(line: 4164, column: 6, scope: !11072)
!11074 = !DILocation(line: 4164, column: 29, scope: !11072)
!11075 = !DILocation(line: 4164, column: 6, scope: !11060)
!11076 = !DILocation(line: 4165, column: 3, scope: !11072)
!11077 = !DILocation(line: 4167, column: 8, scope: !11060)
!11078 = !DILocation(line: 4167, column: 14, scope: !11060)
!11079 = !DILocation(line: 4167, column: 22, scope: !11060)
!11080 = !DILocation(line: 4167, column: 28, scope: !11060)
!11081 = !DILocation(line: 4167, column: 20, scope: !11060)
!11082 = !DILocation(line: 4167, column: 35, scope: !11060)
!11083 = !DILocation(line: 4167, column: 33, scope: !11060)
!11084 = !DILocation(line: 4167, column: 6, scope: !11060)
!11085 = !DILocation(line: 4169, column: 9, scope: !11060)
!11086 = !DILocation(line: 4169, column: 13, scope: !11060)
!11087 = !DILocation(line: 4169, column: 2, scope: !11060)
!11088 = !DILocation(line: 4170, column: 1, scope: !11060)
!11089 = distinct !DISubprogram(name: "drm_parse_hdmi_forum_vsdb", scope: !3, file: !3, line: 4862, type: !11020, scopeLine: 4864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11090 = !DILocalVariable(name: "connector", arg: 1, scope: !11089, file: !3, line: 4862, type: !1162)
!11091 = !DILocation(line: 4862, column: 61, scope: !11089)
!11092 = !DILocalVariable(name: "hf_vsdb", arg: 2, scope: !11089, file: !3, line: 4863, type: !576)
!11093 = !DILocation(line: 4863, column: 16, scope: !11089)
!11094 = !DILocalVariable(name: "display", scope: !11089, file: !3, line: 4865, type: !8397)
!11095 = !DILocation(line: 4865, column: 27, scope: !11089)
!11096 = !DILocation(line: 4865, column: 38, scope: !11089)
!11097 = !DILocation(line: 4865, column: 49, scope: !11089)
!11098 = !DILocalVariable(name: "hdmi", scope: !11089, file: !3, line: 4866, type: !11099)
!11099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!11100 = !DILocation(line: 4866, column: 24, scope: !11089)
!11101 = !DILocation(line: 4866, column: 32, scope: !11089)
!11102 = !DILocation(line: 4866, column: 41, scope: !11089)
!11103 = !DILocation(line: 4868, column: 2, scope: !11089)
!11104 = !DILocation(line: 4868, column: 11, scope: !11089)
!11105 = !DILocation(line: 4868, column: 30, scope: !11089)
!11106 = !DILocation(line: 4870, column: 6, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 4870, column: 6)
!11108 = !DILocation(line: 4870, column: 17, scope: !11107)
!11109 = !DILocation(line: 4870, column: 6, scope: !11089)
!11110 = !DILocation(line: 4871, column: 3, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11107, file: !3, line: 4870, column: 25)
!11112 = !DILocation(line: 4871, column: 9, scope: !11111)
!11113 = !DILocation(line: 4871, column: 14, scope: !11111)
!11114 = !DILocation(line: 4871, column: 24, scope: !11111)
!11115 = !DILocation(line: 4872, column: 7, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 4872, column: 7)
!11117 = !DILocation(line: 4872, column: 18, scope: !11116)
!11118 = !DILocation(line: 4872, column: 7, scope: !11111)
!11119 = !DILocation(line: 4873, column: 4, scope: !11116)
!11120 = !DILocation(line: 4873, column: 10, scope: !11116)
!11121 = !DILocation(line: 4873, column: 15, scope: !11116)
!11122 = !DILocation(line: 4873, column: 28, scope: !11116)
!11123 = !DILocation(line: 4874, column: 2, scope: !11111)
!11124 = !DILocation(line: 4885, column: 6, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11089, file: !3, line: 4885, column: 6)
!11126 = !DILocation(line: 4885, column: 6, scope: !11089)
!11127 = !DILocalVariable(name: "max_tmds_clock", scope: !11128, file: !3, line: 4887, type: !388)
!11128 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 4885, column: 18)
!11129 = !DILocation(line: 4887, column: 7, scope: !11128)
!11130 = !DILocation(line: 4887, column: 24, scope: !11128)
!11131 = !DILocation(line: 4887, column: 35, scope: !11128)
!11132 = !DILocalVariable(name: "scdc", scope: !11128, file: !3, line: 4888, type: !11133)
!11133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5473, size: 64)
!11134 = !DILocation(line: 4888, column: 20, scope: !11128)
!11135 = !DILocation(line: 4888, column: 28, scope: !11128)
!11136 = !DILocation(line: 4888, column: 34, scope: !11128)
!11137 = !DILocation(line: 4890, column: 7, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 4890, column: 7)
!11139 = !DILocation(line: 4890, column: 22, scope: !11138)
!11140 = !DILocation(line: 4890, column: 7, scope: !11128)
!11141 = !DILocation(line: 4891, column: 30, scope: !11142)
!11142 = distinct !DILexicalBlock(scope: !11138, file: !3, line: 4890, column: 32)
!11143 = !DILocation(line: 4891, column: 4, scope: !11142)
!11144 = !DILocation(line: 4891, column: 13, scope: !11142)
!11145 = !DILocation(line: 4891, column: 28, scope: !11142)
!11146 = !DILocation(line: 4892, column: 4, scope: !11142)
!11147 = !DILocation(line: 4894, column: 3, scope: !11142)
!11148 = !DILocation(line: 4896, column: 7, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11128, file: !3, line: 4896, column: 7)
!11150 = !DILocation(line: 4896, column: 13, scope: !11149)
!11151 = !DILocation(line: 4896, column: 7, scope: !11128)
!11152 = !DILocation(line: 4897, column: 4, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11149, file: !3, line: 4896, column: 24)
!11154 = !DILocation(line: 4897, column: 10, scope: !11153)
!11155 = !DILocation(line: 4897, column: 21, scope: !11153)
!11156 = !DILocation(line: 4897, column: 31, scope: !11153)
!11157 = !DILocation(line: 4900, column: 9, scope: !11158)
!11158 = distinct !DILexicalBlock(scope: !11153, file: !3, line: 4900, column: 8)
!11159 = !DILocation(line: 4900, column: 20, scope: !11158)
!11160 = !DILocation(line: 4900, column: 8, scope: !11153)
!11161 = !DILocation(line: 4901, column: 5, scope: !11158)
!11162 = !DILocation(line: 4901, column: 11, scope: !11158)
!11163 = !DILocation(line: 4901, column: 22, scope: !11158)
!11164 = !DILocation(line: 4901, column: 32, scope: !11158)
!11165 = !DILocation(line: 4902, column: 3, scope: !11153)
!11166 = !DILocation(line: 4903, column: 2, scope: !11128)
!11167 = !DILocation(line: 4905, column: 37, scope: !11089)
!11168 = !DILocation(line: 4905, column: 48, scope: !11089)
!11169 = !DILocation(line: 4905, column: 2, scope: !11089)
!11170 = !DILocation(line: 4906, column: 1, scope: !11089)
!11171 = distinct !DISubprogram(name: "cea_db_is_y420cmdb", scope: !3, file: !3, line: 4186, type: !8279, scopeLine: 4187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11172 = !DILocalVariable(name: "db", arg: 1, scope: !11171, file: !3, line: 4186, type: !576)
!11173 = !DILocation(line: 4186, column: 42, scope: !11171)
!11174 = !DILocation(line: 4188, column: 17, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 4188, column: 6)
!11176 = !DILocation(line: 4188, column: 6, scope: !11175)
!11177 = !DILocation(line: 4188, column: 21, scope: !11175)
!11178 = !DILocation(line: 4188, column: 6, scope: !11171)
!11179 = !DILocation(line: 4189, column: 3, scope: !11175)
!11180 = !DILocation(line: 4191, column: 26, scope: !11181)
!11181 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 4191, column: 6)
!11182 = !DILocation(line: 4191, column: 7, scope: !11181)
!11183 = !DILocation(line: 4191, column: 6, scope: !11171)
!11184 = !DILocation(line: 4192, column: 3, scope: !11181)
!11185 = !DILocation(line: 4194, column: 26, scope: !11186)
!11186 = distinct !DILexicalBlock(scope: !11171, file: !3, line: 4194, column: 6)
!11187 = !DILocation(line: 4194, column: 6, scope: !11186)
!11188 = !DILocation(line: 4194, column: 30, scope: !11186)
!11189 = !DILocation(line: 4194, column: 6, scope: !11171)
!11190 = !DILocation(line: 4195, column: 3, scope: !11186)
!11191 = !DILocation(line: 4197, column: 2, scope: !11171)
!11192 = !DILocation(line: 4198, column: 1, scope: !11171)
!11193 = distinct !DISubprogram(name: "drm_parse_y420cmdb_bitmap", scope: !3, file: !3, line: 4217, type: !11020, scopeLine: 4219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11194 = !DILocalVariable(name: "connector", arg: 1, scope: !11193, file: !3, line: 4217, type: !1162)
!11195 = !DILocation(line: 4217, column: 61, scope: !11193)
!11196 = !DILocalVariable(name: "db", arg: 2, scope: !11193, file: !3, line: 4218, type: !576)
!11197 = !DILocation(line: 4218, column: 21, scope: !11193)
!11198 = !DILocalVariable(name: "info", scope: !11193, file: !3, line: 4220, type: !8397)
!11199 = !DILocation(line: 4220, column: 27, scope: !11193)
!11200 = !DILocation(line: 4220, column: 35, scope: !11193)
!11201 = !DILocation(line: 4220, column: 46, scope: !11193)
!11202 = !DILocalVariable(name: "hdmi", scope: !11193, file: !3, line: 4221, type: !11099)
!11203 = !DILocation(line: 4221, column: 24, scope: !11193)
!11204 = !DILocation(line: 4221, column: 32, scope: !11193)
!11205 = !DILocation(line: 4221, column: 38, scope: !11193)
!11206 = !DILocalVariable(name: "map_len", scope: !11193, file: !3, line: 4222, type: !375)
!11207 = !DILocation(line: 4222, column: 5, scope: !11193)
!11208 = !DILocation(line: 4222, column: 34, scope: !11193)
!11209 = !DILocation(line: 4222, column: 15, scope: !11193)
!11210 = !DILocation(line: 4222, column: 38, scope: !11193)
!11211 = !DILocalVariable(name: "count", scope: !11193, file: !3, line: 4223, type: !375)
!11212 = !DILocation(line: 4223, column: 5, scope: !11193)
!11213 = !DILocalVariable(name: "map", scope: !11193, file: !3, line: 4224, type: !586)
!11214 = !DILocation(line: 4224, column: 6, scope: !11193)
!11215 = !DILocation(line: 4226, column: 6, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 4226, column: 6)
!11217 = !DILocation(line: 4226, column: 14, scope: !11216)
!11218 = !DILocation(line: 4226, column: 6, scope: !11193)
!11219 = !DILocation(line: 4228, column: 3, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11216, file: !3, line: 4226, column: 20)
!11221 = !DILocation(line: 4228, column: 9, scope: !11220)
!11222 = !DILocation(line: 4228, column: 23, scope: !11220)
!11223 = !DILocation(line: 4229, column: 3, scope: !11220)
!11224 = !DILocation(line: 4229, column: 9, scope: !11220)
!11225 = !DILocation(line: 4229, column: 23, scope: !11220)
!11226 = !DILocation(line: 4230, column: 3, scope: !11220)
!11227 = !DILocalVariable(name: "__ret_warn_on", scope: !11228, file: !3, line: 4245, type: !139)
!11228 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 4245, column: 6)
!11229 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 4245, column: 6)
!11230 = !DILocation(line: 4245, column: 6, scope: !11228)
!11231 = !DILocation(line: 4245, column: 6, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11228, file: !3, line: 4245, column: 6)
!11233 = !DILocation(line: 4245, column: 6, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11232, file: !3, line: 4245, column: 6)
!11235 = !DILocation(line: 4245, column: 6, scope: !11236)
!11236 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4245, column: 6)
!11237 = !DILocation(line: 4245, column: 6, scope: !11238)
!11238 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4245, column: 6)
!11239 = !{i32 -2140307120, i32 -2140307091, i32 -2140307045, i32 -2140306987, i32 -2140306933, i32 -2140306879, i32 -2140306824, i32 -2140306793}
!11240 = !DILocation(line: 4245, column: 6, scope: !11241)
!11241 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4245, column: 6)
!11242 = !{i32 -2140306373, i32 -2140306366, i32 -2140306314, i32 -2140306283, i32 -2140306253}
!11243 = !DILocation(line: 4245, column: 6, scope: !11244)
!11244 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 4245, column: 6)
!11245 = !DILocation(line: 4245, column: 6, scope: !11229)
!11246 = !DILocation(line: 4245, column: 6, scope: !11193)
!11247 = !DILocation(line: 4246, column: 11, scope: !11229)
!11248 = !DILocation(line: 4246, column: 3, scope: !11229)
!11249 = !DILocation(line: 4248, column: 13, scope: !11250)
!11250 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 4248, column: 2)
!11251 = !DILocation(line: 4248, column: 7, scope: !11250)
!11252 = !DILocation(line: 4248, column: 18, scope: !11253)
!11253 = distinct !DILexicalBlock(scope: !11250, file: !3, line: 4248, column: 2)
!11254 = !DILocation(line: 4248, column: 26, scope: !11253)
!11255 = !DILocation(line: 4248, column: 24, scope: !11253)
!11256 = !DILocation(line: 4248, column: 2, scope: !11250)
!11257 = !DILocation(line: 4249, column: 15, scope: !11253)
!11258 = !DILocation(line: 4249, column: 22, scope: !11253)
!11259 = !DILocation(line: 4249, column: 20, scope: !11253)
!11260 = !DILocation(line: 4249, column: 10, scope: !11253)
!11261 = !DILocation(line: 4249, column: 37, scope: !11253)
!11262 = !DILocation(line: 4249, column: 35, scope: !11253)
!11263 = !DILocation(line: 4249, column: 29, scope: !11253)
!11264 = !DILocation(line: 4249, column: 7, scope: !11253)
!11265 = !DILocation(line: 4249, column: 3, scope: !11253)
!11266 = !DILocation(line: 4248, column: 40, scope: !11253)
!11267 = !DILocation(line: 4248, column: 2, scope: !11253)
!11268 = distinct !{!11268, !11256, !11269}
!11269 = !DILocation(line: 4249, column: 42, scope: !11250)
!11270 = !DILocation(line: 4251, column: 6, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 4251, column: 6)
!11272 = !DILocation(line: 4251, column: 6, scope: !11193)
!11273 = !DILocation(line: 4252, column: 3, scope: !11271)
!11274 = !DILocation(line: 4252, column: 9, scope: !11271)
!11275 = !DILocation(line: 4252, column: 23, scope: !11271)
!11276 = !DILocation(line: 4254, column: 24, scope: !11193)
!11277 = !DILocation(line: 4254, column: 2, scope: !11193)
!11278 = !DILocation(line: 4254, column: 8, scope: !11193)
!11279 = !DILocation(line: 4254, column: 22, scope: !11193)
!11280 = !DILocation(line: 4255, column: 1, scope: !11193)
!11281 = distinct !DISubprogram(name: "cea_db_is_vcdb", scope: !3, file: !3, line: 4172, type: !8279, scopeLine: 4173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11282 = !DILocalVariable(name: "db", arg: 1, scope: !11281, file: !3, line: 4172, type: !576)
!11283 = !DILocation(line: 4172, column: 38, scope: !11281)
!11284 = !DILocation(line: 4174, column: 17, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 4174, column: 6)
!11286 = !DILocation(line: 4174, column: 6, scope: !11285)
!11287 = !DILocation(line: 4174, column: 21, scope: !11285)
!11288 = !DILocation(line: 4174, column: 6, scope: !11281)
!11289 = !DILocation(line: 4175, column: 3, scope: !11285)
!11290 = !DILocation(line: 4177, column: 25, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 4177, column: 6)
!11292 = !DILocation(line: 4177, column: 6, scope: !11291)
!11293 = !DILocation(line: 4177, column: 29, scope: !11291)
!11294 = !DILocation(line: 4177, column: 6, scope: !11281)
!11295 = !DILocation(line: 4178, column: 3, scope: !11291)
!11296 = !DILocation(line: 4180, column: 26, scope: !11297)
!11297 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 4180, column: 6)
!11298 = !DILocation(line: 4180, column: 6, scope: !11297)
!11299 = !DILocation(line: 4180, column: 30, scope: !11297)
!11300 = !DILocation(line: 4180, column: 6, scope: !11281)
!11301 = !DILocation(line: 4181, column: 3, scope: !11297)
!11302 = !DILocation(line: 4183, column: 2, scope: !11281)
!11303 = !DILocation(line: 4184, column: 1, scope: !11281)
!11304 = distinct !DISubprogram(name: "drm_parse_vcdb", scope: !3, file: !3, line: 4842, type: !11020, scopeLine: 4843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11305 = !DILocalVariable(name: "connector", arg: 1, scope: !11304, file: !3, line: 4842, type: !1162)
!11306 = !DILocation(line: 4842, column: 50, scope: !11304)
!11307 = !DILocalVariable(name: "db", arg: 2, scope: !11304, file: !3, line: 4842, type: !576)
!11308 = !DILocation(line: 4842, column: 71, scope: !11304)
!11309 = !DILocalVariable(name: "info", scope: !11304, file: !3, line: 4844, type: !8397)
!11310 = !DILocation(line: 4844, column: 27, scope: !11304)
!11311 = !DILocation(line: 4844, column: 35, scope: !11304)
!11312 = !DILocation(line: 4844, column: 46, scope: !11304)
!11313 = !DILocation(line: 4846, column: 2, scope: !11304)
!11314 = !DILocation(line: 4848, column: 6, scope: !11315)
!11315 = distinct !DILexicalBlock(scope: !11304, file: !3, line: 4848, column: 6)
!11316 = !DILocation(line: 4848, column: 12, scope: !11315)
!11317 = !DILocation(line: 4848, column: 6, scope: !11304)
!11318 = !DILocation(line: 4849, column: 3, scope: !11315)
!11319 = !DILocation(line: 4849, column: 9, scope: !11315)
!11320 = !DILocation(line: 4849, column: 36, scope: !11315)
!11321 = !DILocation(line: 4850, column: 1, scope: !11304)
!11322 = distinct !DISubprogram(name: "cea_db_is_hdmi_hdr_metadata_block", scope: !3, file: !3, line: 4347, type: !8279, scopeLine: 4348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11323 = !DILocalVariable(name: "db", arg: 1, scope: !11322, file: !3, line: 4347, type: !576)
!11324 = !DILocation(line: 4347, column: 57, scope: !11322)
!11325 = !DILocation(line: 4349, column: 17, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 4349, column: 6)
!11327 = !DILocation(line: 4349, column: 6, scope: !11326)
!11328 = !DILocation(line: 4349, column: 21, scope: !11326)
!11329 = !DILocation(line: 4349, column: 6, scope: !11322)
!11330 = !DILocation(line: 4350, column: 3, scope: !11326)
!11331 = !DILocation(line: 4352, column: 6, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 4352, column: 6)
!11333 = !DILocation(line: 4352, column: 12, scope: !11332)
!11334 = !DILocation(line: 4352, column: 6, scope: !11322)
!11335 = !DILocation(line: 4353, column: 3, scope: !11332)
!11336 = !DILocation(line: 4355, column: 25, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 4355, column: 6)
!11338 = !DILocation(line: 4355, column: 6, scope: !11337)
!11339 = !DILocation(line: 4355, column: 29, scope: !11337)
!11340 = !DILocation(line: 4355, column: 6, scope: !11322)
!11341 = !DILocation(line: 4356, column: 3, scope: !11337)
!11342 = !DILocation(line: 4358, column: 2, scope: !11322)
!11343 = !DILocation(line: 4359, column: 1, scope: !11322)
!11344 = distinct !DISubprogram(name: "drm_parse_hdr_metadata_block", scope: !3, file: !3, line: 4377, type: !11020, scopeLine: 4378, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11345 = !DILocalVariable(name: "connector", arg: 1, scope: !11344, file: !3, line: 4377, type: !1162)
!11346 = !DILocation(line: 4377, column: 52, scope: !11344)
!11347 = !DILocalVariable(name: "db", arg: 2, scope: !11344, file: !3, line: 4377, type: !576)
!11348 = !DILocation(line: 4377, column: 73, scope: !11344)
!11349 = !DILocalVariable(name: "len", scope: !11344, file: !3, line: 4379, type: !530)
!11350 = !DILocation(line: 4379, column: 6, scope: !11344)
!11351 = !DILocation(line: 4381, column: 27, scope: !11344)
!11352 = !DILocation(line: 4381, column: 8, scope: !11344)
!11353 = !DILocation(line: 4381, column: 6, scope: !11344)
!11354 = !DILocation(line: 4384, column: 22, scope: !11344)
!11355 = !DILocation(line: 4384, column: 7, scope: !11344)
!11356 = !DILocation(line: 4383, column: 2, scope: !11344)
!11357 = !DILocation(line: 4383, column: 13, scope: !11344)
!11358 = !DILocation(line: 4383, column: 31, scope: !11344)
!11359 = !DILocation(line: 4383, column: 42, scope: !11344)
!11360 = !DILocation(line: 4383, column: 47, scope: !11344)
!11361 = !DILocation(line: 4386, column: 25, scope: !11344)
!11362 = !DILocation(line: 4386, column: 7, scope: !11344)
!11363 = !DILocation(line: 4385, column: 2, scope: !11344)
!11364 = !DILocation(line: 4385, column: 13, scope: !11344)
!11365 = !DILocation(line: 4385, column: 31, scope: !11344)
!11366 = !DILocation(line: 4385, column: 42, scope: !11344)
!11367 = !DILocation(line: 4385, column: 56, scope: !11344)
!11368 = !DILocation(line: 4388, column: 6, scope: !11369)
!11369 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 4388, column: 6)
!11370 = !DILocation(line: 4388, column: 10, scope: !11369)
!11371 = !DILocation(line: 4388, column: 6, scope: !11344)
!11372 = !DILocation(line: 4389, column: 53, scope: !11369)
!11373 = !DILocation(line: 4389, column: 3, scope: !11369)
!11374 = !DILocation(line: 4389, column: 14, scope: !11369)
!11375 = !DILocation(line: 4389, column: 32, scope: !11369)
!11376 = !DILocation(line: 4389, column: 43, scope: !11369)
!11377 = !DILocation(line: 4389, column: 51, scope: !11369)
!11378 = !DILocation(line: 4390, column: 6, scope: !11379)
!11379 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 4390, column: 6)
!11380 = !DILocation(line: 4390, column: 10, scope: !11379)
!11381 = !DILocation(line: 4390, column: 6, scope: !11344)
!11382 = !DILocation(line: 4391, column: 54, scope: !11379)
!11383 = !DILocation(line: 4391, column: 3, scope: !11379)
!11384 = !DILocation(line: 4391, column: 14, scope: !11379)
!11385 = !DILocation(line: 4391, column: 32, scope: !11379)
!11386 = !DILocation(line: 4391, column: 43, scope: !11379)
!11387 = !DILocation(line: 4391, column: 52, scope: !11379)
!11388 = !DILocation(line: 4392, column: 6, scope: !11389)
!11389 = distinct !DILexicalBlock(scope: !11344, file: !3, line: 4392, column: 6)
!11390 = !DILocation(line: 4392, column: 10, scope: !11389)
!11391 = !DILocation(line: 4392, column: 6, scope: !11344)
!11392 = !DILocation(line: 4393, column: 53, scope: !11389)
!11393 = !DILocation(line: 4393, column: 3, scope: !11389)
!11394 = !DILocation(line: 4393, column: 14, scope: !11389)
!11395 = !DILocation(line: 4393, column: 32, scope: !11389)
!11396 = !DILocation(line: 4393, column: 43, scope: !11389)
!11397 = !DILocation(line: 4393, column: 51, scope: !11389)
!11398 = !DILocation(line: 4394, column: 1, scope: !11344)
!11399 = distinct !DISubprogram(name: "drm_parse_hdmi_deep_color_info", scope: !3, file: !3, line: 4908, type: !11020, scopeLine: 4910, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11400 = !DILocalVariable(name: "connector", arg: 1, scope: !11399, file: !3, line: 4908, type: !1162)
!11401 = !DILocation(line: 4908, column: 66, scope: !11399)
!11402 = !DILocalVariable(name: "hdmi", arg: 2, scope: !11399, file: !3, line: 4909, type: !576)
!11403 = !DILocation(line: 4909, column: 19, scope: !11399)
!11404 = !DILocalVariable(name: "info", scope: !11399, file: !3, line: 4911, type: !8397)
!11405 = !DILocation(line: 4911, column: 27, scope: !11399)
!11406 = !DILocation(line: 4911, column: 35, scope: !11399)
!11407 = !DILocation(line: 4911, column: 46, scope: !11399)
!11408 = !DILocalVariable(name: "dc_bpc", scope: !11399, file: !3, line: 4912, type: !7)
!11409 = !DILocation(line: 4912, column: 15, scope: !11399)
!11410 = !DILocation(line: 4915, column: 2, scope: !11399)
!11411 = !DILocation(line: 4915, column: 8, scope: !11399)
!11412 = !DILocation(line: 4915, column: 12, scope: !11399)
!11413 = !DILocation(line: 4917, column: 25, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4917, column: 6)
!11415 = !DILocation(line: 4917, column: 6, scope: !11414)
!11416 = !DILocation(line: 4917, column: 31, scope: !11414)
!11417 = !DILocation(line: 4917, column: 6, scope: !11399)
!11418 = !DILocation(line: 4918, column: 3, scope: !11414)
!11419 = !DILocation(line: 4920, column: 6, scope: !11420)
!11420 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4920, column: 6)
!11421 = !DILocation(line: 4920, column: 14, scope: !11420)
!11422 = !DILocation(line: 4920, column: 6, scope: !11399)
!11423 = !DILocation(line: 4921, column: 10, scope: !11424)
!11424 = distinct !DILexicalBlock(scope: !11420, file: !3, line: 4920, column: 37)
!11425 = !DILocation(line: 4922, column: 3, scope: !11424)
!11426 = !DILocation(line: 4922, column: 9, scope: !11424)
!11427 = !DILocation(line: 4922, column: 28, scope: !11424)
!11428 = !DILocation(line: 4923, column: 3, scope: !11424)
!11429 = !DILocation(line: 4925, column: 2, scope: !11424)
!11430 = !DILocation(line: 4927, column: 6, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4927, column: 6)
!11432 = !DILocation(line: 4927, column: 14, scope: !11431)
!11433 = !DILocation(line: 4927, column: 6, scope: !11399)
!11434 = !DILocation(line: 4928, column: 10, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 4927, column: 37)
!11436 = !DILocation(line: 4929, column: 3, scope: !11435)
!11437 = !DILocation(line: 4929, column: 9, scope: !11435)
!11438 = !DILocation(line: 4929, column: 28, scope: !11435)
!11439 = !DILocation(line: 4930, column: 3, scope: !11435)
!11440 = !DILocation(line: 4932, column: 2, scope: !11435)
!11441 = !DILocation(line: 4934, column: 6, scope: !11442)
!11442 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4934, column: 6)
!11443 = !DILocation(line: 4934, column: 14, scope: !11442)
!11444 = !DILocation(line: 4934, column: 6, scope: !11399)
!11445 = !DILocation(line: 4935, column: 10, scope: !11446)
!11446 = distinct !DILexicalBlock(scope: !11442, file: !3, line: 4934, column: 37)
!11447 = !DILocation(line: 4936, column: 3, scope: !11446)
!11448 = !DILocation(line: 4936, column: 9, scope: !11446)
!11449 = !DILocation(line: 4936, column: 28, scope: !11446)
!11450 = !DILocation(line: 4937, column: 3, scope: !11446)
!11451 = !DILocation(line: 4939, column: 2, scope: !11446)
!11452 = !DILocation(line: 4941, column: 6, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4941, column: 6)
!11454 = !DILocation(line: 4941, column: 13, scope: !11453)
!11455 = !DILocation(line: 4941, column: 6, scope: !11399)
!11456 = !DILocation(line: 4942, column: 3, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 4941, column: 19)
!11458 = !DILocation(line: 4944, column: 3, scope: !11457)
!11459 = !DILocation(line: 4947, column: 2, scope: !11399)
!11460 = !DILocation(line: 4949, column: 14, scope: !11399)
!11461 = !DILocation(line: 4949, column: 2, scope: !11399)
!11462 = !DILocation(line: 4949, column: 8, scope: !11399)
!11463 = !DILocation(line: 4949, column: 12, scope: !11399)
!11464 = !DILocation(line: 4956, column: 2, scope: !11399)
!11465 = !DILocation(line: 4956, column: 8, scope: !11399)
!11466 = !DILocation(line: 4956, column: 22, scope: !11399)
!11467 = !DILocation(line: 4959, column: 6, scope: !11468)
!11468 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4959, column: 6)
!11469 = !DILocation(line: 4959, column: 14, scope: !11468)
!11470 = !DILocation(line: 4959, column: 6, scope: !11399)
!11471 = !DILocation(line: 4960, column: 3, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11468, file: !3, line: 4959, column: 39)
!11473 = !DILocation(line: 4960, column: 9, scope: !11472)
!11474 = !DILocation(line: 4960, column: 23, scope: !11472)
!11475 = !DILocation(line: 4961, column: 3, scope: !11472)
!11476 = !DILocation(line: 4963, column: 2, scope: !11472)
!11477 = !DILocation(line: 4969, column: 8, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11399, file: !3, line: 4969, column: 6)
!11479 = !DILocation(line: 4969, column: 16, scope: !11478)
!11480 = !DILocation(line: 4969, column: 6, scope: !11399)
!11481 = !DILocation(line: 4970, column: 3, scope: !11482)
!11482 = distinct !DILexicalBlock(scope: !11478, file: !3, line: 4969, column: 40)
!11483 = !DILocation(line: 4972, column: 2, scope: !11482)
!11484 = !DILocation(line: 4973, column: 1, scope: !11399)
!11485 = distinct !DISubprogram(name: "drm_parse_ycbcr420_deep_color_info", scope: !3, file: !3, line: 4852, type: !11020, scopeLine: 4854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11486 = !DILocalVariable(name: "connector", arg: 1, scope: !11485, file: !3, line: 4852, type: !1162)
!11487 = !DILocation(line: 4852, column: 70, scope: !11485)
!11488 = !DILocalVariable(name: "db", arg: 2, scope: !11485, file: !3, line: 4853, type: !576)
!11489 = !DILocation(line: 4853, column: 23, scope: !11485)
!11490 = !DILocalVariable(name: "dc_mask", scope: !11485, file: !3, line: 4855, type: !375)
!11491 = !DILocation(line: 4855, column: 5, scope: !11485)
!11492 = !DILocalVariable(name: "hdmi", scope: !11485, file: !3, line: 4856, type: !11099)
!11493 = !DILocation(line: 4856, column: 24, scope: !11485)
!11494 = !DILocation(line: 4856, column: 32, scope: !11485)
!11495 = !DILocation(line: 4856, column: 43, scope: !11485)
!11496 = !DILocation(line: 4856, column: 56, scope: !11485)
!11497 = !DILocation(line: 4858, column: 12, scope: !11485)
!11498 = !DILocation(line: 4858, column: 18, scope: !11485)
!11499 = !DILocation(line: 4858, column: 10, scope: !11485)
!11500 = !DILocation(line: 4859, column: 24, scope: !11485)
!11501 = !DILocation(line: 4859, column: 2, scope: !11485)
!11502 = !DILocation(line: 4859, column: 8, scope: !11485)
!11503 = !DILocation(line: 4859, column: 22, scope: !11485)
!11504 = !DILocation(line: 4860, column: 1, scope: !11485)
!11505 = distinct !DISubprogram(name: "cea_db_extended_tag", scope: !3, file: !3, line: 4076, type: !808, scopeLine: 4077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11506 = !DILocalVariable(name: "db", arg: 1, scope: !11505, file: !3, line: 4076, type: !576)
!11507 = !DILocation(line: 4076, column: 31, scope: !11505)
!11508 = !DILocation(line: 4078, column: 9, scope: !11505)
!11509 = !DILocation(line: 4078, column: 2, scope: !11505)
!11510 = distinct !DISubprogram(name: "eotf_supported", scope: !3, file: !3, line: 4361, type: !11511, scopeLine: 4362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11511 = !DISubroutineType(types: !11512)
!11512 = !{!5987, !576}
!11513 = !DILocalVariable(name: "edid_ext", arg: 1, scope: !11510, file: !3, line: 4361, type: !576)
!11514 = !DILocation(line: 4361, column: 41, scope: !11510)
!11515 = !DILocation(line: 4363, column: 9, scope: !11510)
!11516 = !DILocation(line: 4363, column: 21, scope: !11510)
!11517 = !DILocation(line: 4363, column: 2, scope: !11510)
!11518 = distinct !DISubprogram(name: "hdr_metadata_type", scope: !3, file: !3, line: 4370, type: !11511, scopeLine: 4371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11519 = !DILocalVariable(name: "edid_ext", arg: 1, scope: !11518, file: !3, line: 4370, type: !576)
!11520 = !DILocation(line: 4370, column: 44, scope: !11518)
!11521 = !DILocation(line: 4372, column: 9, scope: !11518)
!11522 = !DILocation(line: 4372, column: 21, scope: !11518)
!11523 = !DILocation(line: 4372, column: 2, scope: !11518)
!11524 = distinct !DISubprogram(name: "drm_parse_hdmi_vsdb_audio", scope: !3, file: !3, line: 4397, type: !11020, scopeLine: 4398, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11525 = !DILocalVariable(name: "connector", arg: 1, scope: !11524, file: !3, line: 4397, type: !1162)
!11526 = !DILocation(line: 4397, column: 49, scope: !11524)
!11527 = !DILocalVariable(name: "db", arg: 2, scope: !11524, file: !3, line: 4397, type: !576)
!11528 = !DILocation(line: 4397, column: 70, scope: !11524)
!11529 = !DILocalVariable(name: "len", scope: !11524, file: !3, line: 4399, type: !375)
!11530 = !DILocation(line: 4399, column: 5, scope: !11524)
!11531 = !DILocation(line: 4399, column: 30, scope: !11524)
!11532 = !DILocation(line: 4399, column: 11, scope: !11524)
!11533 = !DILocation(line: 4401, column: 6, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4401, column: 6)
!11535 = !DILocation(line: 4401, column: 10, scope: !11534)
!11536 = !DILocation(line: 4401, column: 15, scope: !11534)
!11537 = !DILocation(line: 4401, column: 19, scope: !11534)
!11538 = !DILocation(line: 4401, column: 25, scope: !11534)
!11539 = !DILocation(line: 4401, column: 6, scope: !11524)
!11540 = !DILocation(line: 4402, column: 3, scope: !11534)
!11541 = !DILocation(line: 4402, column: 14, scope: !11534)
!11542 = !DILocation(line: 4402, column: 47, scope: !11534)
!11543 = !DILocation(line: 4403, column: 6, scope: !11544)
!11544 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4403, column: 6)
!11545 = !DILocation(line: 4403, column: 10, scope: !11544)
!11546 = !DILocation(line: 4403, column: 6, scope: !11524)
!11547 = !DILocation(line: 4404, column: 35, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 4403, column: 16)
!11549 = !DILocation(line: 4404, column: 41, scope: !11548)
!11550 = !DILocation(line: 4404, column: 3, scope: !11548)
!11551 = !DILocation(line: 4404, column: 14, scope: !11548)
!11552 = !DILocation(line: 4404, column: 33, scope: !11548)
!11553 = !DILocation(line: 4405, column: 36, scope: !11548)
!11554 = !DILocation(line: 4405, column: 42, scope: !11548)
!11555 = !DILocation(line: 4405, column: 48, scope: !11548)
!11556 = !DILocation(line: 4405, column: 35, scope: !11548)
!11557 = !DILocation(line: 4405, column: 3, scope: !11548)
!11558 = !DILocation(line: 4405, column: 14, scope: !11548)
!11559 = !DILocation(line: 4405, column: 33, scope: !11548)
!11560 = !DILocation(line: 4406, column: 2, scope: !11548)
!11561 = !DILocation(line: 4407, column: 6, scope: !11562)
!11562 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4407, column: 6)
!11563 = !DILocation(line: 4407, column: 10, scope: !11562)
!11564 = !DILocation(line: 4407, column: 6, scope: !11524)
!11565 = !DILocation(line: 4408, column: 33, scope: !11562)
!11566 = !DILocation(line: 4408, column: 3, scope: !11562)
!11567 = !DILocation(line: 4408, column: 14, scope: !11562)
!11568 = !DILocation(line: 4408, column: 31, scope: !11562)
!11569 = !DILocation(line: 4409, column: 6, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4409, column: 6)
!11571 = !DILocation(line: 4409, column: 10, scope: !11570)
!11572 = !DILocation(line: 4409, column: 6, scope: !11524)
!11573 = !DILocation(line: 4410, column: 33, scope: !11570)
!11574 = !DILocation(line: 4410, column: 3, scope: !11570)
!11575 = !DILocation(line: 4410, column: 14, scope: !11570)
!11576 = !DILocation(line: 4410, column: 31, scope: !11570)
!11577 = !DILocation(line: 4411, column: 6, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4411, column: 6)
!11579 = !DILocation(line: 4411, column: 10, scope: !11578)
!11580 = !DILocation(line: 4411, column: 6, scope: !11524)
!11581 = !DILocation(line: 4412, column: 33, scope: !11578)
!11582 = !DILocation(line: 4412, column: 3, scope: !11578)
!11583 = !DILocation(line: 4412, column: 14, scope: !11578)
!11584 = !DILocation(line: 4412, column: 31, scope: !11578)
!11585 = !DILocation(line: 4413, column: 6, scope: !11586)
!11586 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 4413, column: 6)
!11587 = !DILocation(line: 4413, column: 10, scope: !11586)
!11588 = !DILocation(line: 4413, column: 6, scope: !11524)
!11589 = !DILocation(line: 4414, column: 33, scope: !11586)
!11590 = !DILocation(line: 4414, column: 3, scope: !11586)
!11591 = !DILocation(line: 4414, column: 14, scope: !11586)
!11592 = !DILocation(line: 4414, column: 31, scope: !11586)
!11593 = !DILocation(line: 4416, column: 2, scope: !11524)
!11594 = !DILocation(line: 4425, column: 1, scope: !11524)
!11595 = distinct !DISubprogram(name: "drm_eld_calc_baseline_block_size", scope: !371, file: !371, line: 436, type: !11596, scopeLine: 437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11596 = !DISubroutineType(types: !11597)
!11597 = !{!139, !11598}
!11598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11599, size: 64)
!11599 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5987)
!11600 = !DILocalVariable(name: "eld", arg: 1, scope: !11595, file: !371, line: 436, type: !11598)
!11601 = !DILocation(line: 436, column: 67, scope: !11595)
!11602 = !DILocation(line: 439, column: 15, scope: !11595)
!11603 = !DILocation(line: 439, column: 3, scope: !11595)
!11604 = !DILocation(line: 438, column: 65, scope: !11595)
!11605 = !DILocation(line: 439, column: 40, scope: !11595)
!11606 = !DILocation(line: 439, column: 22, scope: !11595)
!11607 = !DILocation(line: 439, column: 45, scope: !11595)
!11608 = !DILocation(line: 439, column: 20, scope: !11595)
!11609 = !DILocation(line: 438, column: 2, scope: !11595)
!11610 = distinct !DISubprogram(name: "drm_eld_size", scope: !371, file: !371, line: 452, type: !11596, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11611 = !DILocalVariable(name: "eld", arg: 1, scope: !11610, file: !371, line: 452, type: !11598)
!11612 = !DILocation(line: 452, column: 47, scope: !11610)
!11613 = !DILocation(line: 454, column: 37, scope: !11610)
!11614 = !DILocation(line: 454, column: 67, scope: !11610)
!11615 = !DILocation(line: 454, column: 35, scope: !11610)
!11616 = !DILocation(line: 454, column: 2, scope: !11610)
!11617 = distinct !DISubprogram(name: "drm_eld_mnl", scope: !371, file: !371, line: 395, type: !11596, scopeLine: 396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11618 = !DILocalVariable(name: "eld", arg: 1, scope: !11617, file: !371, line: 395, type: !11598)
!11619 = !DILocation(line: 395, column: 46, scope: !11617)
!11620 = !DILocation(line: 397, column: 10, scope: !11617)
!11621 = !DILocation(line: 397, column: 40, scope: !11617)
!11622 = !DILocation(line: 397, column: 60, scope: !11617)
!11623 = !DILocation(line: 397, column: 2, scope: !11617)
!11624 = distinct !DISubprogram(name: "drm_eld_sad_count", scope: !371, file: !371, line: 423, type: !11596, scopeLine: 424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11625 = !DILocalVariable(name: "eld", arg: 1, scope: !11624, file: !371, line: 423, type: !11598)
!11626 = !DILocation(line: 423, column: 52, scope: !11624)
!11627 = !DILocation(line: 425, column: 10, scope: !11624)
!11628 = !DILocation(line: 425, column: 43, scope: !11624)
!11629 = !DILocation(line: 425, column: 69, scope: !11624)
!11630 = !DILocation(line: 425, column: 2, scope: !11624)
!11631 = distinct !DISubprogram(name: "do_detailed_mode", scope: !3, file: !3, line: 3165, type: !10658, scopeLine: 3166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11632 = !DILocalVariable(name: "timing", arg: 1, scope: !11631, file: !3, line: 3165, type: !575)
!11633 = !DILocation(line: 3165, column: 42, scope: !11631)
!11634 = !DILocalVariable(name: "c", arg: 2, scope: !11631, file: !3, line: 3165, type: !368)
!11635 = !DILocation(line: 3165, column: 56, scope: !11631)
!11636 = !DILocalVariable(name: "closure", scope: !11631, file: !3, line: 3167, type: !11637)
!11637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8945, size: 64)
!11638 = !DILocation(line: 3167, column: 32, scope: !11631)
!11639 = !DILocation(line: 3167, column: 42, scope: !11631)
!11640 = !DILocalVariable(name: "newmode", scope: !11631, file: !3, line: 3168, type: !525)
!11641 = !DILocation(line: 3168, column: 27, scope: !11631)
!11642 = !DILocation(line: 3170, column: 49, scope: !11643)
!11643 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 3170, column: 6)
!11644 = !DILocation(line: 3170, column: 37, scope: !11643)
!11645 = !DILocation(line: 3170, column: 7, scope: !11643)
!11646 = !DILocation(line: 3170, column: 6, scope: !11631)
!11647 = !DILocation(line: 3171, column: 3, scope: !11643)
!11648 = !DILocation(line: 3173, column: 30, scope: !11631)
!11649 = !DILocation(line: 3173, column: 39, scope: !11631)
!11650 = !DILocation(line: 3173, column: 50, scope: !11631)
!11651 = !DILocation(line: 3174, column: 9, scope: !11631)
!11652 = !DILocation(line: 3174, column: 18, scope: !11631)
!11653 = !DILocation(line: 3174, column: 24, scope: !11631)
!11654 = !DILocation(line: 3175, column: 9, scope: !11631)
!11655 = !DILocation(line: 3175, column: 18, scope: !11631)
!11656 = !DILocation(line: 3173, column: 12, scope: !11631)
!11657 = !DILocation(line: 3173, column: 10, scope: !11631)
!11658 = !DILocation(line: 3176, column: 7, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 3176, column: 6)
!11660 = !DILocation(line: 3176, column: 6, scope: !11631)
!11661 = !DILocation(line: 3177, column: 3, scope: !11659)
!11662 = !DILocation(line: 3179, column: 6, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11631, file: !3, line: 3179, column: 6)
!11664 = !DILocation(line: 3179, column: 15, scope: !11663)
!11665 = !DILocation(line: 3179, column: 6, scope: !11631)
!11666 = !DILocation(line: 3180, column: 3, scope: !11663)
!11667 = !DILocation(line: 3180, column: 12, scope: !11663)
!11668 = !DILocation(line: 3180, column: 17, scope: !11663)
!11669 = !DILocation(line: 3187, column: 32, scope: !11631)
!11670 = !DILocation(line: 3187, column: 2, scope: !11631)
!11671 = !DILocation(line: 3189, column: 22, scope: !11631)
!11672 = !DILocation(line: 3189, column: 31, scope: !11631)
!11673 = !DILocation(line: 3189, column: 42, scope: !11631)
!11674 = !DILocation(line: 3189, column: 2, scope: !11631)
!11675 = !DILocation(line: 3190, column: 2, scope: !11631)
!11676 = !DILocation(line: 3190, column: 11, scope: !11631)
!11677 = !DILocation(line: 3190, column: 16, scope: !11631)
!11678 = !DILocation(line: 3191, column: 2, scope: !11631)
!11679 = !DILocation(line: 3191, column: 11, scope: !11631)
!11680 = !DILocation(line: 3191, column: 21, scope: !11631)
!11681 = !DILocation(line: 3192, column: 1, scope: !11631)
!11682 = distinct !DISubprogram(name: "is_detailed_timing_descriptor", scope: !3, file: !3, line: 2248, type: !8279, scopeLine: 2249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11683 = !DILocalVariable(name: "d", arg: 1, scope: !11682, file: !3, line: 2248, type: !576)
!11684 = !DILocation(line: 2248, column: 52, scope: !11682)
!11685 = !DILocation(line: 2250, column: 9, scope: !11682)
!11686 = !DILocation(line: 2250, column: 14, scope: !11682)
!11687 = !DILocation(line: 2250, column: 22, scope: !11682)
!11688 = !DILocation(line: 2250, column: 25, scope: !11682)
!11689 = !DILocation(line: 2250, column: 30, scope: !11682)
!11690 = !DILocation(line: 2250, column: 2, scope: !11682)
!11691 = distinct !DISubprogram(name: "drm_mode_detailed", scope: !3, file: !3, line: 2603, type: !11692, scopeLine: 2607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!11692 = !DISubroutineType(types: !11693)
!11693 = !{!525, !1166, !369, !575, !388}
!11694 = !DILocalVariable(name: "dev", arg: 1, scope: !11691, file: !3, line: 2603, type: !1166)
!11695 = !DILocation(line: 2603, column: 70, scope: !11691)
!11696 = !DILocalVariable(name: "edid", arg: 2, scope: !11691, file: !3, line: 2604, type: !369)
!11697 = !DILocation(line: 2604, column: 22, scope: !11691)
!11698 = !DILocalVariable(name: "timing", arg: 3, scope: !11691, file: !3, line: 2605, type: !575)
!11699 = !DILocation(line: 2605, column: 33, scope: !11691)
!11700 = !DILocalVariable(name: "quirks", arg: 4, scope: !11691, file: !3, line: 2606, type: !388)
!11701 = !DILocation(line: 2606, column: 13, scope: !11691)
!11702 = !DILocalVariable(name: "mode", scope: !11691, file: !3, line: 2608, type: !525)
!11703 = !DILocation(line: 2608, column: 27, scope: !11691)
!11704 = !DILocalVariable(name: "pt", scope: !11691, file: !3, line: 2609, type: !751)
!11705 = !DILocation(line: 2609, column: 32, scope: !11691)
!11706 = !DILocation(line: 2609, column: 38, scope: !11691)
!11707 = !DILocation(line: 2609, column: 46, scope: !11691)
!11708 = !DILocation(line: 2609, column: 51, scope: !11691)
!11709 = !DILocalVariable(name: "hactive", scope: !11691, file: !3, line: 2610, type: !7)
!11710 = !DILocation(line: 2610, column: 11, scope: !11691)
!11711 = !DILocation(line: 2610, column: 22, scope: !11691)
!11712 = !DILocation(line: 2610, column: 26, scope: !11691)
!11713 = !DILocation(line: 2610, column: 44, scope: !11691)
!11714 = !DILocation(line: 2610, column: 52, scope: !11691)
!11715 = !DILocation(line: 2610, column: 59, scope: !11691)
!11716 = !DILocation(line: 2610, column: 63, scope: !11691)
!11717 = !DILocation(line: 2610, column: 57, scope: !11691)
!11718 = !DILocalVariable(name: "vactive", scope: !11691, file: !3, line: 2611, type: !7)
!11719 = !DILocation(line: 2611, column: 11, scope: !11691)
!11720 = !DILocation(line: 2611, column: 22, scope: !11691)
!11721 = !DILocation(line: 2611, column: 26, scope: !11691)
!11722 = !DILocation(line: 2611, column: 44, scope: !11691)
!11723 = !DILocation(line: 2611, column: 52, scope: !11691)
!11724 = !DILocation(line: 2611, column: 59, scope: !11691)
!11725 = !DILocation(line: 2611, column: 63, scope: !11691)
!11726 = !DILocation(line: 2611, column: 57, scope: !11691)
!11727 = !DILocalVariable(name: "hblank", scope: !11691, file: !3, line: 2612, type: !7)
!11728 = !DILocation(line: 2612, column: 11, scope: !11691)
!11729 = !DILocation(line: 2612, column: 21, scope: !11691)
!11730 = !DILocation(line: 2612, column: 25, scope: !11691)
!11731 = !DILocation(line: 2612, column: 43, scope: !11691)
!11732 = !DILocation(line: 2612, column: 50, scope: !11691)
!11733 = !DILocation(line: 2612, column: 57, scope: !11691)
!11734 = !DILocation(line: 2612, column: 61, scope: !11691)
!11735 = !DILocation(line: 2612, column: 55, scope: !11691)
!11736 = !DILocalVariable(name: "vblank", scope: !11691, file: !3, line: 2613, type: !7)
!11737 = !DILocation(line: 2613, column: 11, scope: !11691)
!11738 = !DILocation(line: 2613, column: 21, scope: !11691)
!11739 = !DILocation(line: 2613, column: 25, scope: !11691)
!11740 = !DILocation(line: 2613, column: 43, scope: !11691)
!11741 = !DILocation(line: 2613, column: 50, scope: !11691)
!11742 = !DILocation(line: 2613, column: 57, scope: !11691)
!11743 = !DILocation(line: 2613, column: 61, scope: !11691)
!11744 = !DILocation(line: 2613, column: 55, scope: !11691)
!11745 = !DILocalVariable(name: "hsync_offset", scope: !11691, file: !3, line: 2614, type: !7)
!11746 = !DILocation(line: 2614, column: 11, scope: !11691)
!11747 = !DILocation(line: 2614, column: 27, scope: !11691)
!11748 = !DILocation(line: 2614, column: 31, scope: !11691)
!11749 = !DILocation(line: 2614, column: 65, scope: !11691)
!11750 = !DILocation(line: 2614, column: 73, scope: !11691)
!11751 = !DILocation(line: 2614, column: 80, scope: !11691)
!11752 = !DILocation(line: 2614, column: 84, scope: !11691)
!11753 = !DILocation(line: 2614, column: 78, scope: !11691)
!11754 = !DILocalVariable(name: "hsync_pulse_width", scope: !11691, file: !3, line: 2615, type: !7)
!11755 = !DILocation(line: 2615, column: 11, scope: !11691)
!11756 = !DILocation(line: 2615, column: 32, scope: !11691)
!11757 = !DILocation(line: 2615, column: 36, scope: !11691)
!11758 = !DILocation(line: 2615, column: 70, scope: !11691)
!11759 = !DILocation(line: 2615, column: 78, scope: !11691)
!11760 = !DILocation(line: 2615, column: 85, scope: !11691)
!11761 = !DILocation(line: 2615, column: 89, scope: !11691)
!11762 = !DILocation(line: 2615, column: 83, scope: !11691)
!11763 = !DILocalVariable(name: "vsync_offset", scope: !11691, file: !3, line: 2616, type: !7)
!11764 = !DILocation(line: 2616, column: 11, scope: !11691)
!11765 = !DILocation(line: 2616, column: 27, scope: !11691)
!11766 = !DILocation(line: 2616, column: 31, scope: !11691)
!11767 = !DILocation(line: 2616, column: 65, scope: !11691)
!11768 = !DILocation(line: 2616, column: 72, scope: !11691)
!11769 = !DILocation(line: 2616, column: 79, scope: !11691)
!11770 = !DILocation(line: 2616, column: 83, scope: !11691)
!11771 = !DILocation(line: 2616, column: 111, scope: !11691)
!11772 = !DILocation(line: 2616, column: 77, scope: !11691)
!11773 = !DILocalVariable(name: "vsync_pulse_width", scope: !11691, file: !3, line: 2617, type: !7)
!11774 = !DILocation(line: 2617, column: 11, scope: !11691)
!11775 = !DILocation(line: 2617, column: 32, scope: !11691)
!11776 = !DILocation(line: 2617, column: 36, scope: !11691)
!11777 = !DILocation(line: 2617, column: 70, scope: !11691)
!11778 = !DILocation(line: 2617, column: 77, scope: !11691)
!11779 = !DILocation(line: 2617, column: 85, scope: !11691)
!11780 = !DILocation(line: 2617, column: 89, scope: !11691)
!11781 = !DILocation(line: 2617, column: 117, scope: !11691)
!11782 = !DILocation(line: 2617, column: 82, scope: !11691)
!11783 = !DILocation(line: 2620, column: 6, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2620, column: 6)
!11785 = !DILocation(line: 2620, column: 14, scope: !11784)
!11786 = !DILocation(line: 2620, column: 19, scope: !11784)
!11787 = !DILocation(line: 2620, column: 22, scope: !11784)
!11788 = !DILocation(line: 2620, column: 30, scope: !11784)
!11789 = !DILocation(line: 2620, column: 6, scope: !11691)
!11790 = !DILocation(line: 2621, column: 3, scope: !11784)
!11791 = !DILocation(line: 2623, column: 6, scope: !11792)
!11792 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2623, column: 6)
!11793 = !DILocation(line: 2623, column: 10, scope: !11792)
!11794 = !DILocation(line: 2623, column: 15, scope: !11792)
!11795 = !DILocation(line: 2623, column: 6, scope: !11691)
!11796 = !DILocation(line: 2624, column: 3, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11792, file: !3, line: 2623, column: 37)
!11798 = !DILocation(line: 2625, column: 3, scope: !11797)
!11799 = !DILocation(line: 2627, column: 8, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2627, column: 6)
!11801 = !DILocation(line: 2627, column: 12, scope: !11800)
!11802 = !DILocation(line: 2627, column: 17, scope: !11800)
!11803 = !DILocation(line: 2627, column: 6, scope: !11691)
!11804 = !DILocation(line: 2628, column: 3, scope: !11805)
!11805 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 2627, column: 47)
!11806 = !DILocation(line: 2629, column: 2, scope: !11805)
!11807 = !DILocation(line: 2632, column: 7, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2632, column: 6)
!11809 = !DILocation(line: 2632, column: 25, scope: !11808)
!11810 = !DILocation(line: 2632, column: 29, scope: !11808)
!11811 = !DILocation(line: 2632, column: 6, scope: !11691)
!11812 = !DILocation(line: 2633, column: 3, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 2632, column: 48)
!11814 = !DILocation(line: 2635, column: 3, scope: !11813)
!11815 = !DILocation(line: 2638, column: 6, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2638, column: 6)
!11817 = !DILocation(line: 2638, column: 13, scope: !11816)
!11818 = !DILocation(line: 2638, column: 6, scope: !11691)
!11819 = !DILocation(line: 2639, column: 23, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2638, column: 50)
!11821 = !DILocation(line: 2639, column: 28, scope: !11820)
!11822 = !DILocation(line: 2639, column: 37, scope: !11820)
!11823 = !DILocation(line: 2639, column: 10, scope: !11820)
!11824 = !DILocation(line: 2639, column: 8, scope: !11820)
!11825 = !DILocation(line: 2640, column: 8, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 2640, column: 7)
!11827 = !DILocation(line: 2640, column: 7, scope: !11820)
!11828 = !DILocation(line: 2641, column: 4, scope: !11826)
!11829 = !DILocation(line: 2643, column: 3, scope: !11820)
!11830 = !DILocation(line: 2646, column: 25, scope: !11691)
!11831 = !DILocation(line: 2646, column: 9, scope: !11691)
!11832 = !DILocation(line: 2646, column: 7, scope: !11691)
!11833 = !DILocation(line: 2647, column: 7, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2647, column: 6)
!11835 = !DILocation(line: 2647, column: 6, scope: !11691)
!11836 = !DILocation(line: 2648, column: 3, scope: !11834)
!11837 = !DILocation(line: 2650, column: 6, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2650, column: 6)
!11839 = !DILocation(line: 2650, column: 13, scope: !11838)
!11840 = !DILocation(line: 2650, column: 6, scope: !11691)
!11841 = !DILocation(line: 2651, column: 3, scope: !11838)
!11842 = !DILocation(line: 2651, column: 11, scope: !11838)
!11843 = !DILocation(line: 2651, column: 23, scope: !11838)
!11844 = !DILocation(line: 2653, column: 16, scope: !11691)
!11845 = !DILocation(line: 2653, column: 49, scope: !11691)
!11846 = !DILocation(line: 2653, column: 2, scope: !11691)
!11847 = !DILocation(line: 2653, column: 8, scope: !11691)
!11848 = !DILocation(line: 2653, column: 14, scope: !11691)
!11849 = !DILocation(line: 2655, column: 19, scope: !11691)
!11850 = !DILocation(line: 2655, column: 2, scope: !11691)
!11851 = !DILocation(line: 2655, column: 8, scope: !11691)
!11852 = !DILocation(line: 2655, column: 17, scope: !11691)
!11853 = !DILocation(line: 2656, column: 22, scope: !11691)
!11854 = !DILocation(line: 2656, column: 28, scope: !11691)
!11855 = !DILocation(line: 2656, column: 39, scope: !11691)
!11856 = !DILocation(line: 2656, column: 37, scope: !11691)
!11857 = !DILocation(line: 2656, column: 2, scope: !11691)
!11858 = !DILocation(line: 2656, column: 8, scope: !11691)
!11859 = !DILocation(line: 2656, column: 20, scope: !11691)
!11860 = !DILocation(line: 2657, column: 20, scope: !11691)
!11861 = !DILocation(line: 2657, column: 26, scope: !11691)
!11862 = !DILocation(line: 2657, column: 40, scope: !11691)
!11863 = !DILocation(line: 2657, column: 38, scope: !11691)
!11864 = !DILocation(line: 2657, column: 2, scope: !11691)
!11865 = !DILocation(line: 2657, column: 8, scope: !11691)
!11866 = !DILocation(line: 2657, column: 18, scope: !11691)
!11867 = !DILocation(line: 2658, column: 17, scope: !11691)
!11868 = !DILocation(line: 2658, column: 23, scope: !11691)
!11869 = !DILocation(line: 2658, column: 34, scope: !11691)
!11870 = !DILocation(line: 2658, column: 32, scope: !11691)
!11871 = !DILocation(line: 2658, column: 2, scope: !11691)
!11872 = !DILocation(line: 2658, column: 8, scope: !11691)
!11873 = !DILocation(line: 2658, column: 15, scope: !11691)
!11874 = !DILocation(line: 2660, column: 19, scope: !11691)
!11875 = !DILocation(line: 2660, column: 2, scope: !11691)
!11876 = !DILocation(line: 2660, column: 8, scope: !11691)
!11877 = !DILocation(line: 2660, column: 17, scope: !11691)
!11878 = !DILocation(line: 2661, column: 22, scope: !11691)
!11879 = !DILocation(line: 2661, column: 28, scope: !11691)
!11880 = !DILocation(line: 2661, column: 39, scope: !11691)
!11881 = !DILocation(line: 2661, column: 37, scope: !11691)
!11882 = !DILocation(line: 2661, column: 2, scope: !11691)
!11883 = !DILocation(line: 2661, column: 8, scope: !11691)
!11884 = !DILocation(line: 2661, column: 20, scope: !11691)
!11885 = !DILocation(line: 2662, column: 20, scope: !11691)
!11886 = !DILocation(line: 2662, column: 26, scope: !11691)
!11887 = !DILocation(line: 2662, column: 40, scope: !11691)
!11888 = !DILocation(line: 2662, column: 38, scope: !11691)
!11889 = !DILocation(line: 2662, column: 2, scope: !11691)
!11890 = !DILocation(line: 2662, column: 8, scope: !11691)
!11891 = !DILocation(line: 2662, column: 18, scope: !11691)
!11892 = !DILocation(line: 2663, column: 17, scope: !11691)
!11893 = !DILocation(line: 2663, column: 23, scope: !11691)
!11894 = !DILocation(line: 2663, column: 34, scope: !11691)
!11895 = !DILocation(line: 2663, column: 32, scope: !11691)
!11896 = !DILocation(line: 2663, column: 2, scope: !11691)
!11897 = !DILocation(line: 2663, column: 8, scope: !11691)
!11898 = !DILocation(line: 2663, column: 15, scope: !11691)
!11899 = !DILocation(line: 2666, column: 6, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2666, column: 6)
!11901 = !DILocation(line: 2666, column: 12, scope: !11900)
!11902 = !DILocation(line: 2666, column: 24, scope: !11900)
!11903 = !DILocation(line: 2666, column: 30, scope: !11900)
!11904 = !DILocation(line: 2666, column: 22, scope: !11900)
!11905 = !DILocation(line: 2666, column: 6, scope: !11691)
!11906 = !DILocation(line: 2667, column: 18, scope: !11900)
!11907 = !DILocation(line: 2667, column: 24, scope: !11900)
!11908 = !DILocation(line: 2667, column: 34, scope: !11900)
!11909 = !DILocation(line: 2667, column: 3, scope: !11900)
!11910 = !DILocation(line: 2667, column: 9, scope: !11900)
!11911 = !DILocation(line: 2667, column: 16, scope: !11900)
!11912 = !DILocation(line: 2668, column: 6, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2668, column: 6)
!11914 = !DILocation(line: 2668, column: 12, scope: !11913)
!11915 = !DILocation(line: 2668, column: 24, scope: !11913)
!11916 = !DILocation(line: 2668, column: 30, scope: !11913)
!11917 = !DILocation(line: 2668, column: 22, scope: !11913)
!11918 = !DILocation(line: 2668, column: 6, scope: !11691)
!11919 = !DILocation(line: 2669, column: 18, scope: !11913)
!11920 = !DILocation(line: 2669, column: 24, scope: !11913)
!11921 = !DILocation(line: 2669, column: 34, scope: !11913)
!11922 = !DILocation(line: 2669, column: 3, scope: !11913)
!11923 = !DILocation(line: 2669, column: 9, scope: !11913)
!11924 = !DILocation(line: 2669, column: 16, scope: !11913)
!11925 = !DILocation(line: 2671, column: 30, scope: !11691)
!11926 = !DILocation(line: 2671, column: 36, scope: !11691)
!11927 = !DILocation(line: 2671, column: 2, scope: !11691)
!11928 = !DILocation(line: 2673, column: 6, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2673, column: 6)
!11930 = !DILocation(line: 2673, column: 13, scope: !11929)
!11931 = !DILocation(line: 2673, column: 6, scope: !11691)
!11932 = !DILocation(line: 2674, column: 3, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 2673, column: 44)
!11934 = !DILocation(line: 2674, column: 7, scope: !11933)
!11935 = !DILocation(line: 2674, column: 12, scope: !11933)
!11936 = !DILocation(line: 2675, column: 2, scope: !11933)
!11937 = !DILocation(line: 2677, column: 18, scope: !11691)
!11938 = !DILocation(line: 2677, column: 22, scope: !11691)
!11939 = !DILocation(line: 2677, column: 27, scope: !11691)
!11940 = !DILocation(line: 2677, column: 17, scope: !11691)
!11941 = !DILocation(line: 2677, column: 2, scope: !11691)
!11942 = !DILocation(line: 2677, column: 8, scope: !11691)
!11943 = !DILocation(line: 2677, column: 14, scope: !11691)
!11944 = !DILocation(line: 2679, column: 18, scope: !11691)
!11945 = !DILocation(line: 2679, column: 22, scope: !11691)
!11946 = !DILocation(line: 2679, column: 27, scope: !11691)
!11947 = !DILocation(line: 2679, column: 17, scope: !11691)
!11948 = !DILocation(line: 2679, column: 2, scope: !11691)
!11949 = !DILocation(line: 2679, column: 8, scope: !11691)
!11950 = !DILocation(line: 2679, column: 14, scope: !11691)
!11951 = !DILabel(scope: !11691, name: "set_size", file: !3, line: 2682)
!11952 = !DILocation(line: 2682, column: 1, scope: !11691)
!11953 = !DILocation(line: 2683, column: 19, scope: !11691)
!11954 = !DILocation(line: 2683, column: 23, scope: !11691)
!11955 = !DILocation(line: 2683, column: 38, scope: !11691)
!11956 = !DILocation(line: 2683, column: 42, scope: !11691)
!11957 = !DILocation(line: 2683, column: 61, scope: !11691)
!11958 = !DILocation(line: 2683, column: 69, scope: !11691)
!11959 = !DILocation(line: 2683, column: 35, scope: !11691)
!11960 = !DILocation(line: 2683, column: 2, scope: !11691)
!11961 = !DILocation(line: 2683, column: 8, scope: !11691)
!11962 = !DILocation(line: 2683, column: 17, scope: !11691)
!11963 = !DILocation(line: 2684, column: 20, scope: !11691)
!11964 = !DILocation(line: 2684, column: 24, scope: !11691)
!11965 = !DILocation(line: 2684, column: 40, scope: !11691)
!11966 = !DILocation(line: 2684, column: 44, scope: !11691)
!11967 = !DILocation(line: 2684, column: 63, scope: !11691)
!11968 = !DILocation(line: 2684, column: 70, scope: !11691)
!11969 = !DILocation(line: 2684, column: 37, scope: !11691)
!11970 = !DILocation(line: 2684, column: 2, scope: !11691)
!11971 = !DILocation(line: 2684, column: 8, scope: !11691)
!11972 = !DILocation(line: 2684, column: 18, scope: !11691)
!11973 = !DILocation(line: 2686, column: 6, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2686, column: 6)
!11975 = !DILocation(line: 2686, column: 13, scope: !11974)
!11976 = !DILocation(line: 2686, column: 6, scope: !11691)
!11977 = !DILocation(line: 2687, column: 3, scope: !11978)
!11978 = distinct !DILexicalBlock(scope: !11974, file: !3, line: 2686, column: 42)
!11979 = !DILocation(line: 2687, column: 9, scope: !11978)
!11980 = !DILocation(line: 2687, column: 18, scope: !11978)
!11981 = !DILocation(line: 2688, column: 3, scope: !11978)
!11982 = !DILocation(line: 2688, column: 9, scope: !11978)
!11983 = !DILocation(line: 2688, column: 19, scope: !11978)
!11984 = !DILocation(line: 2689, column: 2, scope: !11978)
!11985 = !DILocation(line: 2691, column: 6, scope: !11986)
!11986 = distinct !DILexicalBlock(scope: !11691, file: !3, line: 2691, column: 6)
!11987 = !DILocation(line: 2691, column: 13, scope: !11986)
!11988 = !DILocation(line: 2691, column: 6, scope: !11691)
!11989 = !DILocation(line: 2692, column: 20, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11986, file: !3, line: 2691, column: 53)
!11991 = !DILocation(line: 2692, column: 26, scope: !11990)
!11992 = !DILocation(line: 2692, column: 35, scope: !11990)
!11993 = !DILocation(line: 2692, column: 3, scope: !11990)
!11994 = !DILocation(line: 2692, column: 9, scope: !11990)
!11995 = !DILocation(line: 2692, column: 18, scope: !11990)
!11996 = !DILocation(line: 2693, column: 21, scope: !11990)
!11997 = !DILocation(line: 2693, column: 27, scope: !11990)
!11998 = !DILocation(line: 2693, column: 37, scope: !11990)
!11999 = !DILocation(line: 2693, column: 3, scope: !11990)
!12000 = !DILocation(line: 2693, column: 9, scope: !11990)
!12001 = !DILocation(line: 2693, column: 19, scope: !11990)
!12002 = !DILocation(line: 2694, column: 2, scope: !11990)
!12003 = !DILocation(line: 2696, column: 2, scope: !11691)
!12004 = !DILocation(line: 2696, column: 8, scope: !11691)
!12005 = !DILocation(line: 2696, column: 13, scope: !11691)
!12006 = !DILocation(line: 2697, column: 20, scope: !11691)
!12007 = !DILocation(line: 2697, column: 2, scope: !11691)
!12008 = !DILocation(line: 2699, column: 9, scope: !11691)
!12009 = !DILocation(line: 2699, column: 2, scope: !11691)
!12010 = !DILocation(line: 2700, column: 1, scope: !11691)
!12011 = distinct !DISubprogram(name: "fixup_detailed_cea_mode_clock", scope: !3, file: !3, line: 4304, type: !7413, scopeLine: 4305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12012 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !12013)
!12013 = distinct !DILocation(line: 4318, column: 14, scope: !12014)
!12014 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 4316, column: 30)
!12015 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 4316, column: 6)
!12016 = !DILocalVariable(name: "mode", arg: 1, scope: !12011, file: !3, line: 4304, type: !525)
!12017 = !DILocation(line: 4304, column: 68, scope: !12011)
!12018 = !DILocalVariable(name: "cea_mode", scope: !12011, file: !3, line: 4306, type: !594)
!12019 = !DILocation(line: 4306, column: 33, scope: !12011)
!12020 = !DILocalVariable(name: "clock1", scope: !12011, file: !3, line: 4307, type: !139)
!12021 = !DILocation(line: 4307, column: 6, scope: !12011)
!12022 = !DILocalVariable(name: "clock2", scope: !12011, file: !3, line: 4307, type: !139)
!12023 = !DILocation(line: 4307, column: 14, scope: !12011)
!12024 = !DILocalVariable(name: "clock", scope: !12011, file: !3, line: 4307, type: !139)
!12025 = !DILocation(line: 4307, column: 22, scope: !12011)
!12026 = !DILocalVariable(name: "vic", scope: !12011, file: !3, line: 4308, type: !375)
!12027 = !DILocation(line: 4308, column: 5, scope: !12011)
!12028 = !DILocalVariable(name: "type", scope: !12011, file: !3, line: 4309, type: !648)
!12029 = !DILocation(line: 4309, column: 14, scope: !12011)
!12030 = !DILocation(line: 4315, column: 43, scope: !12011)
!12031 = !DILocation(line: 4315, column: 8, scope: !12011)
!12032 = !DILocation(line: 4315, column: 6, scope: !12011)
!12033 = !DILocation(line: 4316, column: 24, scope: !12015)
!12034 = !DILocation(line: 4316, column: 6, scope: !12015)
!12035 = !DILocation(line: 4316, column: 6, scope: !12011)
!12036 = !DILocation(line: 4317, column: 8, scope: !12014)
!12037 = !DILocation(line: 4318, column: 31, scope: !12014)
!12038 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !12013)
!12039 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !12013)
!12040 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !12013)
!12041 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !12013)
!12042 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !12013)
!12043 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !12013)
!12044 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !12013)
!12045 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !12013)
!12046 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !12013)
!12047 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !12013)
!12048 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !12013)
!12049 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !12013)
!12050 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !12013)
!12051 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !12013)
!12052 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !12013)
!12053 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !12013)
!12054 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !12013)
!12055 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !12013)
!12056 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !12013)
!12057 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !12013)
!12058 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !12013)
!12059 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !12013)
!12060 = !DILocation(line: 4318, column: 12, scope: !12014)
!12061 = !DILocation(line: 4319, column: 12, scope: !12014)
!12062 = !DILocation(line: 4319, column: 22, scope: !12014)
!12063 = !DILocation(line: 4319, column: 10, scope: !12014)
!12064 = !DILocation(line: 4320, column: 37, scope: !12014)
!12065 = !DILocation(line: 4320, column: 12, scope: !12014)
!12066 = !DILocation(line: 4320, column: 10, scope: !12014)
!12067 = !DILocation(line: 4321, column: 2, scope: !12014)
!12068 = !DILocation(line: 4322, column: 45, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12015, file: !3, line: 4321, column: 9)
!12070 = !DILocation(line: 4322, column: 9, scope: !12069)
!12071 = !DILocation(line: 4322, column: 7, scope: !12069)
!12072 = !DILocation(line: 4323, column: 26, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 4323, column: 7)
!12074 = !DILocation(line: 4323, column: 7, scope: !12073)
!12075 = !DILocation(line: 4323, column: 7, scope: !12069)
!12076 = !DILocation(line: 4324, column: 9, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 4323, column: 32)
!12078 = !DILocation(line: 4325, column: 30, scope: !12077)
!12079 = !DILocation(line: 4325, column: 16, scope: !12077)
!12080 = !DILocation(line: 4325, column: 13, scope: !12077)
!12081 = !DILocation(line: 4326, column: 13, scope: !12077)
!12082 = !DILocation(line: 4326, column: 23, scope: !12077)
!12083 = !DILocation(line: 4326, column: 11, scope: !12077)
!12084 = !DILocation(line: 4327, column: 39, scope: !12077)
!12085 = !DILocation(line: 4327, column: 13, scope: !12077)
!12086 = !DILocation(line: 4327, column: 11, scope: !12077)
!12087 = !DILocation(line: 4328, column: 3, scope: !12077)
!12088 = !DILocation(line: 4329, column: 4, scope: !12089)
!12089 = distinct !DILexicalBlock(scope: !12073, file: !3, line: 4328, column: 10)
!12090 = !DILocalVariable(name: "__x", scope: !12091, file: !3, line: 4334, type: !139)
!12091 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 4334, column: 6)
!12092 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 4334, column: 6)
!12093 = !DILocation(line: 4334, column: 6, scope: !12091)
!12094 = !DILocalVariable(name: "__x", scope: !12095, file: !3, line: 4334, type: !139)
!12095 = distinct !DILexicalBlock(scope: !12092, file: !3, line: 4334, column: 34)
!12096 = !DILocation(line: 4334, column: 34, scope: !12095)
!12097 = !DILocation(line: 4334, column: 32, scope: !12092)
!12098 = !DILocation(line: 4334, column: 6, scope: !12011)
!12099 = !DILocation(line: 4335, column: 11, scope: !12092)
!12100 = !DILocation(line: 4335, column: 9, scope: !12092)
!12101 = !DILocation(line: 4335, column: 3, scope: !12092)
!12102 = !DILocation(line: 4337, column: 11, scope: !12092)
!12103 = !DILocation(line: 4337, column: 9, scope: !12092)
!12104 = !DILocation(line: 4339, column: 6, scope: !12105)
!12105 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 4339, column: 6)
!12106 = !DILocation(line: 4339, column: 12, scope: !12105)
!12107 = !DILocation(line: 4339, column: 21, scope: !12105)
!12108 = !DILocation(line: 4339, column: 18, scope: !12105)
!12109 = !DILocation(line: 4339, column: 6, scope: !12011)
!12110 = !DILocation(line: 4340, column: 3, scope: !12105)
!12111 = !DILocation(line: 4342, column: 2, scope: !12011)
!12112 = !DILocation(line: 4344, column: 16, scope: !12011)
!12113 = !DILocation(line: 4344, column: 2, scope: !12011)
!12114 = !DILocation(line: 4344, column: 8, scope: !12011)
!12115 = !DILocation(line: 4344, column: 14, scope: !12011)
!12116 = !DILocation(line: 4345, column: 1, scope: !12011)
!12117 = !DILocalVariable(name: "mode", arg: 1, scope: !748, file: !3, line: 2560, type: !525)
!12118 = !DILocation(line: 2560, column: 54, scope: !748)
!12119 = !DILocalVariable(name: "pt", arg: 2, scope: !748, file: !3, line: 2561, type: !751)
!12120 = !DILocation(line: 2561, column: 38, scope: !748)
!12121 = !DILocalVariable(name: "i", scope: !748, file: !3, line: 2563, type: !139)
!12122 = !DILocation(line: 2563, column: 6, scope: !748)
!12123 = !DILocation(line: 2576, column: 8, scope: !12124)
!12124 = distinct !DILexicalBlock(scope: !748, file: !3, line: 2576, column: 6)
!12125 = !DILocation(line: 2576, column: 12, scope: !12124)
!12126 = !DILocation(line: 2576, column: 17, scope: !12124)
!12127 = !DILocation(line: 2576, column: 6, scope: !748)
!12128 = !DILocation(line: 2577, column: 3, scope: !12124)
!12129 = !DILocation(line: 2579, column: 9, scope: !12130)
!12130 = distinct !DILexicalBlock(scope: !748, file: !3, line: 2579, column: 2)
!12131 = !DILocation(line: 2579, column: 7, scope: !12130)
!12132 = !DILocation(line: 2579, column: 14, scope: !12133)
!12133 = distinct !DILexicalBlock(scope: !12130, file: !3, line: 2579, column: 2)
!12134 = !DILocation(line: 2579, column: 16, scope: !12133)
!12135 = !DILocation(line: 2579, column: 2, scope: !12130)
!12136 = !DILocation(line: 2580, column: 8, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12138, file: !3, line: 2580, column: 7)
!12138 = distinct !DILexicalBlock(scope: !12133, file: !3, line: 2579, column: 51)
!12139 = !DILocation(line: 2580, column: 14, scope: !12137)
!12140 = !DILocation(line: 2580, column: 41, scope: !12137)
!12141 = !DILocation(line: 2580, column: 26, scope: !12137)
!12142 = !DILocation(line: 2580, column: 44, scope: !12137)
!12143 = !DILocation(line: 2580, column: 23, scope: !12137)
!12144 = !DILocation(line: 2580, column: 47, scope: !12137)
!12145 = !DILocation(line: 2581, column: 8, scope: !12137)
!12146 = !DILocation(line: 2581, column: 14, scope: !12137)
!12147 = !DILocation(line: 2581, column: 41, scope: !12137)
!12148 = !DILocation(line: 2581, column: 26, scope: !12137)
!12149 = !DILocation(line: 2581, column: 44, scope: !12137)
!12150 = !DILocation(line: 2581, column: 46, scope: !12137)
!12151 = !DILocation(line: 2581, column: 23, scope: !12137)
!12152 = !DILocation(line: 2580, column: 7, scope: !12138)
!12153 = !DILocation(line: 2582, column: 4, scope: !12154)
!12154 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 2581, column: 52)
!12155 = !DILocation(line: 2582, column: 10, scope: !12154)
!12156 = !DILocation(line: 2582, column: 19, scope: !12154)
!12157 = !DILocation(line: 2583, column: 4, scope: !12154)
!12158 = !DILocation(line: 2583, column: 10, scope: !12154)
!12159 = !DILocation(line: 2583, column: 22, scope: !12154)
!12160 = !DILocation(line: 2584, column: 4, scope: !12154)
!12161 = !DILocation(line: 2584, column: 10, scope: !12154)
!12162 = !DILocation(line: 2584, column: 20, scope: !12154)
!12163 = !DILocation(line: 2585, column: 4, scope: !12154)
!12164 = !DILocation(line: 2585, column: 10, scope: !12154)
!12165 = !DILocation(line: 2585, column: 17, scope: !12154)
!12166 = !DILocation(line: 2586, column: 4, scope: !12154)
!12167 = !DILocation(line: 2586, column: 10, scope: !12154)
!12168 = !DILocation(line: 2586, column: 17, scope: !12154)
!12169 = !DILocation(line: 2587, column: 3, scope: !12154)
!12170 = !DILocation(line: 2588, column: 2, scope: !12138)
!12171 = !DILocation(line: 2579, column: 47, scope: !12133)
!12172 = !DILocation(line: 2579, column: 2, scope: !12133)
!12173 = distinct !{!12173, !12135, !12174}
!12174 = !DILocation(line: 2588, column: 2, scope: !12130)
!12175 = !DILocation(line: 2590, column: 2, scope: !748)
!12176 = !DILocation(line: 2590, column: 8, scope: !748)
!12177 = !DILocation(line: 2590, column: 14, scope: !748)
!12178 = !DILocation(line: 2591, column: 1, scope: !748)
!12179 = distinct !DISubprogram(name: "drm_match_cea_mode_clock_tolerance", scope: !3, file: !3, line: 3405, type: !12180, scopeLine: 3407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12180 = !DISubroutineType(types: !12181)
!12181 = !{!375, !594, !7}
!12182 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !12183)
!12183 = distinct !DILocation(line: 3418, column: 39, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12185, file: !3, line: 3417, column: 63)
!12185 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 3417, column: 2)
!12186 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3417, column: 2)
!12187 = !DILocalVariable(name: "to_match", arg: 1, scope: !12179, file: !3, line: 3405, type: !594)
!12188 = !DILocation(line: 3405, column: 77, scope: !12179)
!12189 = !DILocalVariable(name: "clock_tolerance", arg: 2, scope: !12179, file: !3, line: 3406, type: !7)
!12190 = !DILocation(line: 3406, column: 24, scope: !12179)
!12191 = !DILocalVariable(name: "match_flags", scope: !12179, file: !3, line: 3408, type: !7)
!12192 = !DILocation(line: 3408, column: 15, scope: !12179)
!12193 = !DILocalVariable(name: "vic", scope: !12179, file: !3, line: 3409, type: !375)
!12194 = !DILocation(line: 3409, column: 5, scope: !12179)
!12195 = !DILocation(line: 3411, column: 7, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3411, column: 6)
!12197 = !DILocation(line: 3411, column: 17, scope: !12196)
!12198 = !DILocation(line: 3411, column: 6, scope: !12179)
!12199 = !DILocation(line: 3412, column: 3, scope: !12196)
!12200 = !DILocation(line: 3414, column: 6, scope: !12201)
!12201 = distinct !DILexicalBlock(scope: !12179, file: !3, line: 3414, column: 6)
!12202 = !DILocation(line: 3414, column: 16, scope: !12201)
!12203 = !DILocation(line: 3414, column: 6, scope: !12179)
!12204 = !DILocation(line: 3415, column: 15, scope: !12201)
!12205 = !DILocation(line: 3415, column: 3, scope: !12201)
!12206 = !DILocation(line: 3417, column: 11, scope: !12186)
!12207 = !DILocation(line: 3417, column: 7, scope: !12186)
!12208 = !DILocation(line: 3417, column: 16, scope: !12185)
!12209 = !DILocation(line: 3417, column: 22, scope: !12185)
!12210 = !DILocation(line: 3417, column: 20, scope: !12185)
!12211 = !DILocation(line: 3417, column: 2, scope: !12186)
!12212 = !DILocalVariable(name: "cea_mode", scope: !12184, file: !3, line: 3418, type: !526)
!12213 = !DILocation(line: 3418, column: 27, scope: !12184)
!12214 = !DILocation(line: 3418, column: 56, scope: !12184)
!12215 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !12183)
!12216 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !12183)
!12217 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !12183)
!12218 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !12183)
!12219 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !12183)
!12220 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !12183)
!12221 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !12183)
!12222 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !12183)
!12223 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !12183)
!12224 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !12183)
!12225 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !12183)
!12226 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !12183)
!12227 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !12183)
!12228 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !12183)
!12229 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !12183)
!12230 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !12183)
!12231 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !12183)
!12232 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !12183)
!12233 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !12183)
!12234 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !12183)
!12235 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !12183)
!12236 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !12183)
!12237 = !DILocation(line: 3418, column: 38, scope: !12184)
!12238 = !DILocalVariable(name: "clock1", scope: !12184, file: !3, line: 3419, type: !7)
!12239 = !DILocation(line: 3419, column: 16, scope: !12184)
!12240 = !DILocalVariable(name: "clock2", scope: !12184, file: !3, line: 3419, type: !7)
!12241 = !DILocation(line: 3419, column: 24, scope: !12184)
!12242 = !DILocation(line: 3422, column: 21, scope: !12184)
!12243 = !DILocation(line: 3422, column: 10, scope: !12184)
!12244 = !DILocation(line: 3423, column: 12, scope: !12184)
!12245 = !DILocation(line: 3423, column: 10, scope: !12184)
!12246 = !DILocalVariable(name: "__x", scope: !12247, file: !3, line: 3425, type: !139)
!12247 = distinct !DILexicalBlock(scope: !12248, file: !3, line: 3425, column: 7)
!12248 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3425, column: 7)
!12249 = !DILocation(line: 3425, column: 7, scope: !12247)
!12250 = !DILocation(line: 3425, column: 39, scope: !12248)
!12251 = !DILocation(line: 3425, column: 37, scope: !12248)
!12252 = !DILocation(line: 3425, column: 55, scope: !12248)
!12253 = !DILocalVariable(name: "__x", scope: !12254, file: !3, line: 3426, type: !139)
!12254 = distinct !DILexicalBlock(scope: !12248, file: !3, line: 3426, column: 7)
!12255 = !DILocation(line: 3426, column: 7, scope: !12254)
!12256 = !DILocation(line: 3426, column: 39, scope: !12248)
!12257 = !DILocation(line: 3426, column: 37, scope: !12248)
!12258 = !DILocation(line: 3425, column: 7, scope: !12184)
!12259 = !DILocation(line: 3427, column: 4, scope: !12248)
!12260 = !DILocation(line: 3429, column: 3, scope: !12184)
!12261 = !DILocation(line: 3430, column: 23, scope: !12262)
!12262 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3430, column: 8)
!12263 = distinct !DILexicalBlock(scope: !12184, file: !3, line: 3429, column: 6)
!12264 = !DILocation(line: 3430, column: 44, scope: !12262)
!12265 = !DILocation(line: 3430, column: 8, scope: !12262)
!12266 = !DILocation(line: 3430, column: 8, scope: !12263)
!12267 = !DILocation(line: 3431, column: 12, scope: !12262)
!12268 = !DILocation(line: 3431, column: 5, scope: !12262)
!12269 = !DILocation(line: 3432, column: 3, scope: !12263)
!12270 = !DILocation(line: 3432, column: 39, scope: !12184)
!12271 = !DILocation(line: 3432, column: 12, scope: !12184)
!12272 = distinct !{!12272, !12260, !12273}
!12273 = !DILocation(line: 3432, column: 54, scope: !12184)
!12274 = !DILocation(line: 3433, column: 2, scope: !12184)
!12275 = !DILocation(line: 3417, column: 57, scope: !12185)
!12276 = !DILocation(line: 3417, column: 44, scope: !12185)
!12277 = !DILocation(line: 3417, column: 42, scope: !12185)
!12278 = !DILocation(line: 3417, column: 2, scope: !12185)
!12279 = distinct !{!12279, !12211, !12280}
!12280 = !DILocation(line: 3433, column: 2, scope: !12186)
!12281 = !DILocation(line: 3435, column: 2, scope: !12179)
!12282 = !DILocation(line: 3436, column: 1, scope: !12179)
!12283 = distinct !DISubprogram(name: "drm_valid_cea_vic", scope: !3, file: !3, line: 3478, type: !12284, scopeLine: 3479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12284 = !DISubroutineType(types: !12285)
!12285 = !{!559, !375}
!12286 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !12287)
!12287 = distinct !DILocation(line: 3480, column: 9, scope: !12283)
!12288 = !DILocalVariable(name: "vic", arg: 1, scope: !12283, file: !3, line: 3478, type: !375)
!12289 = !DILocation(line: 3478, column: 34, scope: !12283)
!12290 = !DILocation(line: 3480, column: 26, scope: !12283)
!12291 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !12287)
!12292 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !12287)
!12293 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !12287)
!12294 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !12287)
!12295 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !12287)
!12296 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !12287)
!12297 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !12287)
!12298 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !12287)
!12299 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !12287)
!12300 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !12287)
!12301 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !12287)
!12302 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !12287)
!12303 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !12287)
!12304 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !12287)
!12305 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !12287)
!12306 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !12287)
!12307 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !12287)
!12308 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !12287)
!12309 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !12287)
!12310 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !12287)
!12311 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !12287)
!12312 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !12287)
!12313 = !DILocation(line: 3480, column: 31, scope: !12283)
!12314 = !DILocation(line: 3480, column: 2, scope: !12283)
!12315 = distinct !DISubprogram(name: "drm_match_hdmi_mode_clock_tolerance", scope: !3, file: !3, line: 3508, type: !12180, scopeLine: 3510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12316 = !DILocalVariable(name: "to_match", arg: 1, scope: !12315, file: !3, line: 3508, type: !594)
!12317 = !DILocation(line: 3508, column: 78, scope: !12315)
!12318 = !DILocalVariable(name: "clock_tolerance", arg: 2, scope: !12315, file: !3, line: 3509, type: !7)
!12319 = !DILocation(line: 3509, column: 25, scope: !12315)
!12320 = !DILocalVariable(name: "match_flags", scope: !12315, file: !3, line: 3511, type: !7)
!12321 = !DILocation(line: 3511, column: 15, scope: !12315)
!12322 = !DILocalVariable(name: "vic", scope: !12315, file: !3, line: 3512, type: !375)
!12323 = !DILocation(line: 3512, column: 5, scope: !12315)
!12324 = !DILocation(line: 3514, column: 7, scope: !12325)
!12325 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 3514, column: 6)
!12326 = !DILocation(line: 3514, column: 17, scope: !12325)
!12327 = !DILocation(line: 3514, column: 6, scope: !12315)
!12328 = !DILocation(line: 3515, column: 3, scope: !12325)
!12329 = !DILocation(line: 3517, column: 6, scope: !12330)
!12330 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 3517, column: 6)
!12331 = !DILocation(line: 3517, column: 16, scope: !12330)
!12332 = !DILocation(line: 3517, column: 6, scope: !12315)
!12333 = !DILocation(line: 3518, column: 15, scope: !12330)
!12334 = !DILocation(line: 3518, column: 3, scope: !12330)
!12335 = !DILocation(line: 3520, column: 11, scope: !12336)
!12336 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 3520, column: 2)
!12337 = !DILocation(line: 3520, column: 7, scope: !12336)
!12338 = !DILocation(line: 3520, column: 16, scope: !12339)
!12339 = distinct !DILexicalBlock(scope: !12336, file: !3, line: 3520, column: 2)
!12340 = !DILocation(line: 3520, column: 20, scope: !12339)
!12341 = !DILocation(line: 3520, column: 2, scope: !12336)
!12342 = !DILocalVariable(name: "hdmi_mode", scope: !12343, file: !3, line: 3521, type: !594)
!12343 = distinct !DILexicalBlock(scope: !12339, file: !3, line: 3520, column: 56)
!12344 = !DILocation(line: 3521, column: 34, scope: !12343)
!12345 = !DILocation(line: 3521, column: 61, scope: !12343)
!12346 = !DILocation(line: 3521, column: 47, scope: !12343)
!12347 = !DILocalVariable(name: "clock1", scope: !12343, file: !3, line: 3522, type: !7)
!12348 = !DILocation(line: 3522, column: 16, scope: !12343)
!12349 = !DILocalVariable(name: "clock2", scope: !12343, file: !3, line: 3522, type: !7)
!12350 = !DILocation(line: 3522, column: 24, scope: !12343)
!12351 = !DILocation(line: 3525, column: 12, scope: !12343)
!12352 = !DILocation(line: 3525, column: 23, scope: !12343)
!12353 = !DILocation(line: 3525, column: 10, scope: !12343)
!12354 = !DILocation(line: 3526, column: 38, scope: !12343)
!12355 = !DILocation(line: 3526, column: 12, scope: !12343)
!12356 = !DILocation(line: 3526, column: 10, scope: !12343)
!12357 = !DILocalVariable(name: "__x", scope: !12358, file: !3, line: 3528, type: !139)
!12358 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 3528, column: 7)
!12359 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 3528, column: 7)
!12360 = !DILocation(line: 3528, column: 7, scope: !12358)
!12361 = !DILocation(line: 3528, column: 39, scope: !12359)
!12362 = !DILocation(line: 3528, column: 37, scope: !12359)
!12363 = !DILocation(line: 3528, column: 55, scope: !12359)
!12364 = !DILocalVariable(name: "__x", scope: !12365, file: !3, line: 3529, type: !139)
!12365 = distinct !DILexicalBlock(scope: !12359, file: !3, line: 3529, column: 7)
!12366 = !DILocation(line: 3529, column: 7, scope: !12365)
!12367 = !DILocation(line: 3529, column: 39, scope: !12359)
!12368 = !DILocation(line: 3529, column: 37, scope: !12359)
!12369 = !DILocation(line: 3528, column: 7, scope: !12343)
!12370 = !DILocation(line: 3530, column: 4, scope: !12359)
!12371 = !DILocation(line: 3532, column: 22, scope: !12372)
!12372 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 3532, column: 7)
!12373 = !DILocation(line: 3532, column: 32, scope: !12372)
!12374 = !DILocation(line: 3532, column: 43, scope: !12372)
!12375 = !DILocation(line: 3532, column: 7, scope: !12372)
!12376 = !DILocation(line: 3532, column: 7, scope: !12343)
!12377 = !DILocation(line: 3533, column: 11, scope: !12372)
!12378 = !DILocation(line: 3533, column: 4, scope: !12372)
!12379 = !DILocation(line: 3534, column: 2, scope: !12343)
!12380 = !DILocation(line: 3520, column: 52, scope: !12339)
!12381 = !DILocation(line: 3520, column: 2, scope: !12339)
!12382 = distinct !{!12382, !12341, !12383}
!12383 = !DILocation(line: 3534, column: 2, scope: !12336)
!12384 = !DILocation(line: 3536, column: 2, scope: !12315)
!12385 = !DILocation(line: 3537, column: 1, scope: !12315)
!12386 = distinct !DISubprogram(name: "drm_valid_hdmi_vic", scope: !3, file: !3, line: 3574, type: !12284, scopeLine: 3575, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12387 = !DILocalVariable(name: "vic", arg: 1, scope: !12386, file: !3, line: 3574, type: !375)
!12388 = !DILocation(line: 3574, column: 35, scope: !12386)
!12389 = !DILocation(line: 3576, column: 9, scope: !12386)
!12390 = !DILocation(line: 3576, column: 13, scope: !12386)
!12391 = !DILocation(line: 3576, column: 17, scope: !12386)
!12392 = !DILocation(line: 3576, column: 20, scope: !12386)
!12393 = !DILocation(line: 3576, column: 24, scope: !12386)
!12394 = !DILocation(line: 0, scope: !12386)
!12395 = !DILocation(line: 3576, column: 2, scope: !12386)
!12396 = distinct !DISubprogram(name: "hdmi_mode_alternate_clock", scope: !3, file: !3, line: 3503, type: !7549, scopeLine: 3504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12397 = !DILocalVariable(name: "hdmi_mode", arg: 1, scope: !12396, file: !3, line: 3503, type: !594)
!12398 = !DILocation(line: 3503, column: 58, scope: !12396)
!12399 = !DILocation(line: 3505, column: 34, scope: !12396)
!12400 = !DILocation(line: 3505, column: 9, scope: !12396)
!12401 = !DILocation(line: 3505, column: 2, scope: !12396)
!12402 = distinct !DISubprogram(name: "do_cvt_mode", scope: !3, file: !3, line: 3136, type: !10658, scopeLine: 3137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12403 = !DILocalVariable(name: "timing", arg: 1, scope: !12402, file: !3, line: 3136, type: !575)
!12404 = !DILocation(line: 3136, column: 37, scope: !12402)
!12405 = !DILocalVariable(name: "c", arg: 2, scope: !12402, file: !3, line: 3136, type: !368)
!12406 = !DILocation(line: 3136, column: 51, scope: !12402)
!12407 = !DILocalVariable(name: "closure", scope: !12402, file: !3, line: 3138, type: !11637)
!12408 = !DILocation(line: 3138, column: 32, scope: !12402)
!12409 = !DILocation(line: 3138, column: 42, scope: !12402)
!12410 = !DILocation(line: 3140, column: 41, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 3140, column: 6)
!12412 = !DILocation(line: 3140, column: 29, scope: !12411)
!12413 = !DILocation(line: 3140, column: 7, scope: !12411)
!12414 = !DILocation(line: 3140, column: 6, scope: !12402)
!12415 = !DILocation(line: 3141, column: 3, scope: !12411)
!12416 = !DILocation(line: 3143, column: 34, scope: !12402)
!12417 = !DILocation(line: 3143, column: 43, scope: !12402)
!12418 = !DILocation(line: 3143, column: 54, scope: !12402)
!12419 = !DILocation(line: 3143, column: 20, scope: !12402)
!12420 = !DILocation(line: 3143, column: 2, scope: !12402)
!12421 = !DILocation(line: 3143, column: 11, scope: !12402)
!12422 = !DILocation(line: 3143, column: 17, scope: !12402)
!12423 = !DILocation(line: 3144, column: 1, scope: !12402)
!12424 = distinct !DISubprogram(name: "drm_cvt_modes", scope: !3, file: !3, line: 3085, type: !12425, scopeLine: 3087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12425 = !DISubroutineType(types: !12426)
!12426 = !{!139, !1162, !575}
!12427 = !DILocalVariable(name: "connector", arg: 1, scope: !12424, file: !3, line: 3085, type: !1162)
!12428 = !DILocation(line: 3085, column: 48, scope: !12424)
!12429 = !DILocalVariable(name: "timing", arg: 2, scope: !12424, file: !3, line: 3086, type: !575)
!12430 = !DILocation(line: 3086, column: 29, scope: !12424)
!12431 = !DILocalVariable(name: "i", scope: !12424, file: !3, line: 3088, type: !139)
!12432 = !DILocation(line: 3088, column: 6, scope: !12424)
!12433 = !DILocalVariable(name: "j", scope: !12424, file: !3, line: 3088, type: !139)
!12434 = !DILocation(line: 3088, column: 9, scope: !12424)
!12435 = !DILocalVariable(name: "modes", scope: !12424, file: !3, line: 3088, type: !139)
!12436 = !DILocation(line: 3088, column: 12, scope: !12424)
!12437 = !DILocalVariable(name: "newmode", scope: !12424, file: !3, line: 3089, type: !525)
!12438 = !DILocation(line: 3089, column: 27, scope: !12424)
!12439 = !DILocalVariable(name: "dev", scope: !12424, file: !3, line: 3090, type: !1166)
!12440 = !DILocation(line: 3090, column: 21, scope: !12424)
!12441 = !DILocation(line: 3090, column: 27, scope: !12424)
!12442 = !DILocation(line: 3090, column: 38, scope: !12424)
!12443 = !DILocalVariable(name: "cvt", scope: !12424, file: !3, line: 3091, type: !12444)
!12444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !512, size: 64)
!12445 = !DILocation(line: 3091, column: 21, scope: !12424)
!12446 = !DILocalVariable(name: "rates", scope: !12424, file: !3, line: 3092, type: !12447)
!12447 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12448, size: 160, elements: !637)
!12448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !139)
!12449 = !DILocation(line: 3092, column: 12, scope: !12424)
!12450 = !DILocalVariable(name: "empty", scope: !12424, file: !3, line: 3093, type: !12451)
!12451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !577, size: 24, elements: !516)
!12452 = !DILocation(line: 3093, column: 11, scope: !12424)
!12453 = !DILocation(line: 3095, column: 9, scope: !12454)
!12454 = distinct !DILexicalBlock(scope: !12424, file: !3, line: 3095, column: 2)
!12455 = !DILocation(line: 3095, column: 7, scope: !12454)
!12456 = !DILocation(line: 3095, column: 14, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12454, file: !3, line: 3095, column: 2)
!12458 = !DILocation(line: 3095, column: 16, scope: !12457)
!12459 = !DILocation(line: 3095, column: 2, scope: !12454)
!12460 = !DILocalVariable(name: "width", scope: !12461, file: !3, line: 3096, type: !139)
!12461 = distinct !DILexicalBlock(scope: !12457, file: !3, line: 3095, column: 26)
!12462 = !DILocation(line: 3096, column: 7, scope: !12461)
!12463 = !DILocalVariable(name: "height", scope: !12461, file: !3, line: 3096, type: !139)
!12464 = !DILocation(line: 3096, column: 14, scope: !12461)
!12465 = !DILocation(line: 3098, column: 11, scope: !12461)
!12466 = !DILocation(line: 3098, column: 19, scope: !12461)
!12467 = !DILocation(line: 3098, column: 24, scope: !12461)
!12468 = !DILocation(line: 3098, column: 35, scope: !12461)
!12469 = !DILocation(line: 3098, column: 40, scope: !12461)
!12470 = !DILocation(line: 3098, column: 44, scope: !12461)
!12471 = !DILocation(line: 3098, column: 7, scope: !12461)
!12472 = !DILocation(line: 3100, column: 15, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 3100, column: 7)
!12474 = !DILocation(line: 3100, column: 20, scope: !12473)
!12475 = !DILocation(line: 3100, column: 26, scope: !12473)
!12476 = !DILocation(line: 3100, column: 8, scope: !12473)
!12477 = !DILocation(line: 3100, column: 7, scope: !12461)
!12478 = !DILocation(line: 3101, column: 4, scope: !12473)
!12479 = !DILocation(line: 3103, column: 13, scope: !12461)
!12480 = !DILocation(line: 3103, column: 18, scope: !12461)
!12481 = !DILocation(line: 3103, column: 30, scope: !12461)
!12482 = !DILocation(line: 3103, column: 35, scope: !12461)
!12483 = !DILocation(line: 3103, column: 43, scope: !12461)
!12484 = !DILocation(line: 3103, column: 51, scope: !12461)
!12485 = !DILocation(line: 3103, column: 26, scope: !12461)
!12486 = !DILocation(line: 3103, column: 57, scope: !12461)
!12487 = !DILocation(line: 3103, column: 62, scope: !12461)
!12488 = !DILocation(line: 3103, column: 10, scope: !12461)
!12489 = !DILocation(line: 3104, column: 11, scope: !12461)
!12490 = !DILocation(line: 3104, column: 16, scope: !12461)
!12491 = !DILocation(line: 3104, column: 24, scope: !12461)
!12492 = !DILocation(line: 3104, column: 3, scope: !12461)
!12493 = !DILocation(line: 3106, column: 12, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 3104, column: 32)
!12495 = !DILocation(line: 3106, column: 19, scope: !12494)
!12496 = !DILocation(line: 3106, column: 23, scope: !12494)
!12497 = !DILocation(line: 3106, column: 10, scope: !12494)
!12498 = !DILocation(line: 3107, column: 4, scope: !12494)
!12499 = !DILocation(line: 3109, column: 12, scope: !12494)
!12500 = !DILocation(line: 3109, column: 19, scope: !12494)
!12501 = !DILocation(line: 3109, column: 24, scope: !12494)
!12502 = !DILocation(line: 3109, column: 10, scope: !12494)
!12503 = !DILocation(line: 3110, column: 4, scope: !12494)
!12504 = !DILocation(line: 3112, column: 12, scope: !12494)
!12505 = !DILocation(line: 3112, column: 19, scope: !12494)
!12506 = !DILocation(line: 3112, column: 24, scope: !12494)
!12507 = !DILocation(line: 3112, column: 10, scope: !12494)
!12508 = !DILocation(line: 3113, column: 4, scope: !12494)
!12509 = !DILocation(line: 3115, column: 12, scope: !12494)
!12510 = !DILocation(line: 3115, column: 19, scope: !12494)
!12511 = !DILocation(line: 3115, column: 24, scope: !12494)
!12512 = !DILocation(line: 3115, column: 10, scope: !12494)
!12513 = !DILocation(line: 3116, column: 4, scope: !12494)
!12514 = !DILocation(line: 3119, column: 10, scope: !12515)
!12515 = distinct !DILexicalBlock(scope: !12461, file: !3, line: 3119, column: 3)
!12516 = !DILocation(line: 3119, column: 8, scope: !12515)
!12517 = !DILocation(line: 3119, column: 15, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12515, file: !3, line: 3119, column: 3)
!12519 = !DILocation(line: 3119, column: 17, scope: !12518)
!12520 = !DILocation(line: 3119, column: 3, scope: !12515)
!12521 = !DILocation(line: 3120, column: 8, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12523, file: !3, line: 3120, column: 8)
!12523 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 3119, column: 27)
!12524 = !DILocation(line: 3120, column: 13, scope: !12522)
!12525 = !DILocation(line: 3120, column: 29, scope: !12522)
!12526 = !DILocation(line: 3120, column: 26, scope: !12522)
!12527 = !DILocation(line: 3120, column: 21, scope: !12522)
!12528 = !DILocation(line: 3120, column: 8, scope: !12523)
!12529 = !DILocation(line: 3121, column: 28, scope: !12530)
!12530 = distinct !DILexicalBlock(scope: !12522, file: !3, line: 3120, column: 33)
!12531 = !DILocation(line: 3121, column: 33, scope: !12530)
!12532 = !DILocation(line: 3121, column: 40, scope: !12530)
!12533 = !DILocation(line: 3122, column: 20, scope: !12530)
!12534 = !DILocation(line: 3122, column: 14, scope: !12530)
!12535 = !DILocation(line: 3122, column: 24, scope: !12530)
!12536 = !DILocation(line: 3122, column: 26, scope: !12530)
!12537 = !DILocation(line: 3121, column: 15, scope: !12530)
!12538 = !DILocation(line: 3121, column: 13, scope: !12530)
!12539 = !DILocation(line: 3124, column: 9, scope: !12540)
!12540 = distinct !DILexicalBlock(scope: !12530, file: !3, line: 3124, column: 9)
!12541 = !DILocation(line: 3124, column: 9, scope: !12530)
!12542 = !DILocation(line: 3125, column: 26, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12540, file: !3, line: 3124, column: 18)
!12544 = !DILocation(line: 3125, column: 37, scope: !12543)
!12545 = !DILocation(line: 3125, column: 6, scope: !12543)
!12546 = !DILocation(line: 3126, column: 11, scope: !12543)
!12547 = !DILocation(line: 3127, column: 5, scope: !12543)
!12548 = !DILocation(line: 3128, column: 4, scope: !12530)
!12549 = !DILocation(line: 3129, column: 3, scope: !12523)
!12550 = !DILocation(line: 3119, column: 23, scope: !12518)
!12551 = !DILocation(line: 3119, column: 3, scope: !12518)
!12552 = distinct !{!12552, !12520, !12553}
!12553 = !DILocation(line: 3129, column: 3, scope: !12515)
!12554 = !DILocation(line: 3130, column: 2, scope: !12461)
!12555 = !DILocation(line: 3095, column: 22, scope: !12457)
!12556 = !DILocation(line: 3095, column: 2, scope: !12457)
!12557 = distinct !{!12557, !12459, !12558}
!12558 = !DILocation(line: 3130, column: 2, scope: !12454)
!12559 = !DILocation(line: 3132, column: 9, scope: !12424)
!12560 = !DILocation(line: 3132, column: 2, scope: !12424)
!12561 = distinct !DISubprogram(name: "drm_mode_std", scope: !3, file: !3, line: 2442, type: !12562, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12562 = !DISubroutineType(types: !12563)
!12563 = !{!525, !1162, !369, !12564}
!12564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!12565 = !DILocalVariable(name: "connector", arg: 1, scope: !12561, file: !3, line: 2442, type: !1162)
!12566 = !DILocation(line: 2442, column: 36, scope: !12561)
!12567 = !DILocalVariable(name: "edid", arg: 2, scope: !12561, file: !3, line: 2442, type: !369)
!12568 = !DILocation(line: 2442, column: 60, scope: !12561)
!12569 = !DILocalVariable(name: "t", arg: 3, scope: !12561, file: !3, line: 2443, type: !12564)
!12570 = !DILocation(line: 2443, column: 26, scope: !12561)
!12571 = !DILocalVariable(name: "dev", scope: !12561, file: !3, line: 2445, type: !1166)
!12572 = !DILocation(line: 2445, column: 21, scope: !12561)
!12573 = !DILocation(line: 2445, column: 27, scope: !12561)
!12574 = !DILocation(line: 2445, column: 38, scope: !12561)
!12575 = !DILocalVariable(name: "m", scope: !12561, file: !3, line: 2446, type: !525)
!12576 = !DILocation(line: 2446, column: 27, scope: !12561)
!12577 = !DILocalVariable(name: "mode", scope: !12561, file: !3, line: 2446, type: !525)
!12578 = !DILocation(line: 2446, column: 31, scope: !12561)
!12579 = !DILocalVariable(name: "hsize", scope: !12561, file: !3, line: 2447, type: !139)
!12580 = !DILocation(line: 2447, column: 6, scope: !12561)
!12581 = !DILocalVariable(name: "vsize", scope: !12561, file: !3, line: 2447, type: !139)
!12582 = !DILocation(line: 2447, column: 13, scope: !12561)
!12583 = !DILocalVariable(name: "vrefresh_rate", scope: !12561, file: !3, line: 2448, type: !139)
!12584 = !DILocation(line: 2448, column: 6, scope: !12561)
!12585 = !DILocalVariable(name: "aspect_ratio", scope: !12561, file: !3, line: 2449, type: !7)
!12586 = !DILocation(line: 2449, column: 11, scope: !12561)
!12587 = !DILocation(line: 2449, column: 27, scope: !12561)
!12588 = !DILocation(line: 2449, column: 30, scope: !12561)
!12589 = !DILocation(line: 2449, column: 43, scope: !12561)
!12590 = !DILocation(line: 2450, column: 3, scope: !12561)
!12591 = !DILocalVariable(name: "vfreq", scope: !12561, file: !3, line: 2451, type: !7)
!12592 = !DILocation(line: 2451, column: 11, scope: !12561)
!12593 = !DILocation(line: 2451, column: 20, scope: !12561)
!12594 = !DILocation(line: 2451, column: 23, scope: !12561)
!12595 = !DILocation(line: 2451, column: 36, scope: !12561)
!12596 = !DILocation(line: 2452, column: 3, scope: !12561)
!12597 = !DILocalVariable(name: "timing_level", scope: !12561, file: !3, line: 2453, type: !139)
!12598 = !DILocation(line: 2453, column: 6, scope: !12561)
!12599 = !DILocation(line: 2453, column: 43, scope: !12561)
!12600 = !DILocation(line: 2453, column: 21, scope: !12561)
!12601 = !DILocation(line: 2455, column: 21, scope: !12602)
!12602 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2455, column: 6)
!12603 = !DILocation(line: 2455, column: 24, scope: !12602)
!12604 = !DILocation(line: 2455, column: 31, scope: !12602)
!12605 = !DILocation(line: 2455, column: 34, scope: !12602)
!12606 = !DILocation(line: 2455, column: 6, scope: !12602)
!12607 = !DILocation(line: 2455, column: 6, scope: !12561)
!12608 = !DILocation(line: 2456, column: 3, scope: !12602)
!12609 = !DILocation(line: 2459, column: 10, scope: !12561)
!12610 = !DILocation(line: 2459, column: 13, scope: !12561)
!12611 = !DILocation(line: 2459, column: 19, scope: !12561)
!12612 = !DILocation(line: 2459, column: 23, scope: !12561)
!12613 = !DILocation(line: 2459, column: 8, scope: !12561)
!12614 = !DILocation(line: 2461, column: 18, scope: !12561)
!12615 = !DILocation(line: 2461, column: 24, scope: !12561)
!12616 = !DILocation(line: 2461, column: 16, scope: !12561)
!12617 = !DILocation(line: 2463, column: 6, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2463, column: 6)
!12619 = !DILocation(line: 2463, column: 19, scope: !12618)
!12620 = !DILocation(line: 2463, column: 6, scope: !12561)
!12621 = !DILocation(line: 2464, column: 7, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12623, file: !3, line: 2464, column: 7)
!12623 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 2463, column: 25)
!12624 = !DILocation(line: 2464, column: 13, scope: !12622)
!12625 = !DILocation(line: 2464, column: 22, scope: !12622)
!12626 = !DILocation(line: 2464, column: 7, scope: !12623)
!12627 = !DILocation(line: 2465, column: 12, scope: !12622)
!12628 = !DILocation(line: 2465, column: 10, scope: !12622)
!12629 = !DILocation(line: 2465, column: 4, scope: !12622)
!12630 = !DILocation(line: 2467, column: 13, scope: !12622)
!12631 = !DILocation(line: 2467, column: 19, scope: !12622)
!12632 = !DILocation(line: 2467, column: 25, scope: !12622)
!12633 = !DILocation(line: 2467, column: 10, scope: !12622)
!12634 = !DILocation(line: 2468, column: 2, scope: !12623)
!12635 = !DILocation(line: 2468, column: 13, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12618, file: !3, line: 2468, column: 13)
!12637 = !DILocation(line: 2468, column: 26, scope: !12636)
!12638 = !DILocation(line: 2468, column: 13, scope: !12618)
!12639 = !DILocation(line: 2469, column: 12, scope: !12636)
!12640 = !DILocation(line: 2469, column: 18, scope: !12636)
!12641 = !DILocation(line: 2469, column: 23, scope: !12636)
!12642 = !DILocation(line: 2469, column: 9, scope: !12636)
!12643 = !DILocation(line: 2469, column: 3, scope: !12636)
!12644 = !DILocation(line: 2470, column: 11, scope: !12645)
!12645 = distinct !DILexicalBlock(scope: !12636, file: !3, line: 2470, column: 11)
!12646 = !DILocation(line: 2470, column: 24, scope: !12645)
!12647 = !DILocation(line: 2470, column: 11, scope: !12636)
!12648 = !DILocation(line: 2471, column: 12, scope: !12645)
!12649 = !DILocation(line: 2471, column: 18, scope: !12645)
!12650 = !DILocation(line: 2471, column: 23, scope: !12645)
!12651 = !DILocation(line: 2471, column: 9, scope: !12645)
!12652 = !DILocation(line: 2471, column: 3, scope: !12645)
!12653 = !DILocation(line: 2473, column: 12, scope: !12645)
!12654 = !DILocation(line: 2473, column: 18, scope: !12645)
!12655 = !DILocation(line: 2473, column: 23, scope: !12645)
!12656 = !DILocation(line: 2473, column: 9, scope: !12645)
!12657 = !DILocation(line: 2476, column: 6, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2476, column: 6)
!12659 = !DILocation(line: 2476, column: 20, scope: !12658)
!12660 = !DILocation(line: 2476, column: 26, scope: !12658)
!12661 = !DILocation(line: 2477, column: 8, scope: !12658)
!12662 = !DILocation(line: 2477, column: 14, scope: !12658)
!12663 = !DILocation(line: 2477, column: 22, scope: !12658)
!12664 = !DILocation(line: 2477, column: 25, scope: !12658)
!12665 = !DILocation(line: 2477, column: 31, scope: !12658)
!12666 = !DILocation(line: 2477, column: 39, scope: !12658)
!12667 = !DILocation(line: 2478, column: 8, scope: !12658)
!12668 = !DILocation(line: 2478, column: 14, scope: !12658)
!12669 = !DILocation(line: 2478, column: 22, scope: !12658)
!12670 = !DILocation(line: 2478, column: 25, scope: !12658)
!12671 = !DILocation(line: 2478, column: 31, scope: !12658)
!12672 = !DILocation(line: 2476, column: 6, scope: !12561)
!12673 = !DILocation(line: 2479, column: 9, scope: !12674)
!12674 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 2478, column: 41)
!12675 = !DILocation(line: 2480, column: 9, scope: !12674)
!12676 = !DILocation(line: 2481, column: 2, scope: !12674)
!12677 = !DILocalVariable(name: "__mptr", scope: !12678, file: !3, line: 2489, type: !368)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2489, column: 2)
!12679 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2489, column: 2)
!12680 = !DILocation(line: 2489, column: 2, scope: !12678)
!12681 = !DILocation(line: 2489, column: 2, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 2489, column: 2)
!12683 = !DILocation(line: 2489, column: 2, scope: !12679)
!12684 = !DILocation(line: 2489, column: 2, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 2489, column: 2)
!12686 = !DILocation(line: 2490, column: 7, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 2490, column: 7)
!12688 = !DILocation(line: 2490, column: 10, scope: !12687)
!12689 = !DILocation(line: 2490, column: 22, scope: !12687)
!12690 = !DILocation(line: 2490, column: 19, scope: !12687)
!12691 = !DILocation(line: 2490, column: 28, scope: !12687)
!12692 = !DILocation(line: 2490, column: 31, scope: !12687)
!12693 = !DILocation(line: 2490, column: 34, scope: !12687)
!12694 = !DILocation(line: 2490, column: 46, scope: !12687)
!12695 = !DILocation(line: 2490, column: 43, scope: !12687)
!12696 = !DILocation(line: 2490, column: 52, scope: !12687)
!12697 = !DILocation(line: 2491, column: 25, scope: !12687)
!12698 = !DILocation(line: 2491, column: 7, scope: !12687)
!12699 = !DILocation(line: 2491, column: 31, scope: !12687)
!12700 = !DILocation(line: 2491, column: 28, scope: !12687)
!12701 = !DILocation(line: 2490, column: 7, scope: !12685)
!12702 = !DILocation(line: 2492, column: 4, scope: !12687)
!12703 = !DILocalVariable(name: "__mptr", scope: !12704, file: !3, line: 2489, type: !368)
!12704 = distinct !DILexicalBlock(scope: !12685, file: !3, line: 2489, column: 2)
!12705 = !DILocation(line: 2489, column: 2, scope: !12704)
!12706 = !DILocation(line: 2489, column: 2, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12704, file: !3, line: 2489, column: 2)
!12708 = distinct !{!12708, !12683, !12709}
!12709 = !DILocation(line: 2492, column: 11, scope: !12679)
!12710 = !DILocation(line: 2495, column: 6, scope: !12711)
!12711 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2495, column: 6)
!12712 = !DILocation(line: 2495, column: 12, scope: !12711)
!12713 = !DILocation(line: 2495, column: 20, scope: !12711)
!12714 = !DILocation(line: 2495, column: 23, scope: !12711)
!12715 = !DILocation(line: 2495, column: 29, scope: !12711)
!12716 = !DILocation(line: 2495, column: 36, scope: !12711)
!12717 = !DILocation(line: 2495, column: 39, scope: !12711)
!12718 = !DILocation(line: 2495, column: 53, scope: !12711)
!12719 = !DILocation(line: 2495, column: 6, scope: !12561)
!12720 = !DILocation(line: 2496, column: 23, scope: !12721)
!12721 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 2495, column: 60)
!12722 = !DILocation(line: 2496, column: 39, scope: !12721)
!12723 = !DILocation(line: 2496, column: 10, scope: !12721)
!12724 = !DILocation(line: 2496, column: 8, scope: !12721)
!12725 = !DILocation(line: 2498, column: 8, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12721, file: !3, line: 2498, column: 7)
!12727 = !DILocation(line: 2498, column: 7, scope: !12721)
!12728 = !DILocation(line: 2499, column: 4, scope: !12726)
!12729 = !DILocation(line: 2500, column: 3, scope: !12721)
!12730 = !DILocation(line: 2500, column: 9, scope: !12721)
!12731 = !DILocation(line: 2500, column: 18, scope: !12721)
!12732 = !DILocation(line: 2501, column: 23, scope: !12721)
!12733 = !DILocation(line: 2501, column: 29, scope: !12721)
!12734 = !DILocation(line: 2501, column: 41, scope: !12721)
!12735 = !DILocation(line: 2501, column: 3, scope: !12721)
!12736 = !DILocation(line: 2501, column: 9, scope: !12721)
!12737 = !DILocation(line: 2501, column: 21, scope: !12721)
!12738 = !DILocation(line: 2502, column: 21, scope: !12721)
!12739 = !DILocation(line: 2502, column: 27, scope: !12721)
!12740 = !DILocation(line: 2502, column: 37, scope: !12721)
!12741 = !DILocation(line: 2502, column: 3, scope: !12721)
!12742 = !DILocation(line: 2502, column: 9, scope: !12721)
!12743 = !DILocation(line: 2502, column: 19, scope: !12721)
!12744 = !DILocation(line: 2503, column: 10, scope: !12721)
!12745 = !DILocation(line: 2503, column: 3, scope: !12721)
!12746 = !DILocation(line: 2507, column: 30, scope: !12747)
!12747 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2507, column: 6)
!12748 = !DILocation(line: 2507, column: 6, scope: !12747)
!12749 = !DILocation(line: 2507, column: 6, scope: !12561)
!12750 = !DILocation(line: 2508, column: 28, scope: !12751)
!12751 = distinct !DILexicalBlock(scope: !12747, file: !3, line: 2507, column: 37)
!12752 = !DILocation(line: 2508, column: 33, scope: !12751)
!12753 = !DILocation(line: 2508, column: 40, scope: !12751)
!12754 = !DILocation(line: 2508, column: 47, scope: !12751)
!12755 = !DILocation(line: 2508, column: 10, scope: !12751)
!12756 = !DILocation(line: 2508, column: 8, scope: !12751)
!12757 = !DILocation(line: 2510, column: 7, scope: !12758)
!12758 = distinct !DILexicalBlock(scope: !12751, file: !3, line: 2510, column: 7)
!12759 = !DILocation(line: 2510, column: 7, scope: !12751)
!12760 = !DILocation(line: 2511, column: 11, scope: !12758)
!12761 = !DILocation(line: 2511, column: 4, scope: !12758)
!12762 = !DILocation(line: 2512, column: 2, scope: !12751)
!12763 = !DILocation(line: 2513, column: 27, scope: !12561)
!12764 = !DILocation(line: 2513, column: 32, scope: !12561)
!12765 = !DILocation(line: 2513, column: 39, scope: !12561)
!12766 = !DILocation(line: 2513, column: 46, scope: !12561)
!12767 = !DILocation(line: 2513, column: 9, scope: !12561)
!12768 = !DILocation(line: 2513, column: 7, scope: !12561)
!12769 = !DILocation(line: 2514, column: 6, scope: !12770)
!12770 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2514, column: 6)
!12771 = !DILocation(line: 2514, column: 6, scope: !12561)
!12772 = !DILocation(line: 2515, column: 10, scope: !12770)
!12773 = !DILocation(line: 2515, column: 3, scope: !12770)
!12774 = !DILocation(line: 2518, column: 10, scope: !12561)
!12775 = !DILocation(line: 2518, column: 2, scope: !12561)
!12776 = !DILocation(line: 2520, column: 3, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 2518, column: 24)
!12778 = !DILocation(line: 2522, column: 23, scope: !12777)
!12779 = !DILocation(line: 2522, column: 28, scope: !12777)
!12780 = !DILocation(line: 2522, column: 35, scope: !12777)
!12781 = !DILocation(line: 2522, column: 42, scope: !12777)
!12782 = !DILocation(line: 2522, column: 10, scope: !12777)
!12783 = !DILocation(line: 2522, column: 8, scope: !12777)
!12784 = !DILocation(line: 2523, column: 3, scope: !12777)
!12785 = !DILocation(line: 2530, column: 23, scope: !12777)
!12786 = !DILocation(line: 2530, column: 28, scope: !12777)
!12787 = !DILocation(line: 2530, column: 35, scope: !12777)
!12788 = !DILocation(line: 2530, column: 42, scope: !12777)
!12789 = !DILocation(line: 2530, column: 10, scope: !12777)
!12790 = !DILocation(line: 2530, column: 8, scope: !12777)
!12791 = !DILocation(line: 2531, column: 8, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 2531, column: 7)
!12793 = !DILocation(line: 2531, column: 7, scope: !12777)
!12794 = !DILocation(line: 2532, column: 4, scope: !12792)
!12795 = !DILocation(line: 2533, column: 22, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 2533, column: 7)
!12797 = !DILocation(line: 2533, column: 7, scope: !12796)
!12798 = !DILocation(line: 2533, column: 46, scope: !12796)
!12799 = !DILocation(line: 2533, column: 30, scope: !12796)
!12800 = !DILocation(line: 2533, column: 28, scope: !12796)
!12801 = !DILocation(line: 2533, column: 7, scope: !12777)
!12802 = !DILocation(line: 2534, column: 21, scope: !12803)
!12803 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 2533, column: 53)
!12804 = !DILocation(line: 2534, column: 26, scope: !12803)
!12805 = !DILocation(line: 2534, column: 4, scope: !12803)
!12806 = !DILocation(line: 2535, column: 32, scope: !12803)
!12807 = !DILocation(line: 2535, column: 37, scope: !12803)
!12808 = !DILocation(line: 2535, column: 44, scope: !12803)
!12809 = !DILocation(line: 2536, column: 11, scope: !12803)
!12810 = !DILocation(line: 2537, column: 22, scope: !12803)
!12811 = !DILocation(line: 2537, column: 11, scope: !12803)
!12812 = !DILocation(line: 2538, column: 23, scope: !12803)
!12813 = !DILocation(line: 2538, column: 11, scope: !12803)
!12814 = !DILocation(line: 2539, column: 22, scope: !12803)
!12815 = !DILocation(line: 2539, column: 11, scope: !12803)
!12816 = !DILocation(line: 2540, column: 23, scope: !12803)
!12817 = !DILocation(line: 2540, column: 11, scope: !12803)
!12818 = !DILocation(line: 2535, column: 11, scope: !12803)
!12819 = !DILocation(line: 2535, column: 9, scope: !12803)
!12820 = !DILocation(line: 2541, column: 3, scope: !12803)
!12821 = !DILocation(line: 2542, column: 3, scope: !12777)
!12822 = !DILocation(line: 2544, column: 23, scope: !12777)
!12823 = !DILocation(line: 2544, column: 28, scope: !12777)
!12824 = !DILocation(line: 2544, column: 35, scope: !12777)
!12825 = !DILocation(line: 2544, column: 42, scope: !12777)
!12826 = !DILocation(line: 2544, column: 10, scope: !12777)
!12827 = !DILocation(line: 2544, column: 8, scope: !12777)
!12828 = !DILocation(line: 2546, column: 3, scope: !12777)
!12829 = !DILocation(line: 2548, column: 9, scope: !12561)
!12830 = !DILocation(line: 2548, column: 2, scope: !12561)
!12831 = !DILocation(line: 2549, column: 1, scope: !12561)
!12832 = distinct !DISubprogram(name: "do_standard_modes", scope: !3, file: !3, line: 3025, type: !10658, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12833 = !DILocalVariable(name: "timing", arg: 1, scope: !12832, file: !3, line: 3025, type: !575)
!12834 = !DILocation(line: 3025, column: 43, scope: !12832)
!12835 = !DILocalVariable(name: "c", arg: 2, scope: !12832, file: !3, line: 3025, type: !368)
!12836 = !DILocation(line: 3025, column: 57, scope: !12832)
!12837 = !DILocalVariable(name: "closure", scope: !12832, file: !3, line: 3027, type: !11637)
!12838 = !DILocation(line: 3027, column: 32, scope: !12832)
!12839 = !DILocation(line: 3027, column: 42, scope: !12832)
!12840 = !DILocalVariable(name: "data", scope: !12832, file: !3, line: 3028, type: !12841)
!12841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !453, size: 64)
!12842 = !DILocation(line: 3028, column: 29, scope: !12832)
!12843 = !DILocation(line: 3028, column: 37, scope: !12832)
!12844 = !DILocation(line: 3028, column: 45, scope: !12832)
!12845 = !DILocation(line: 3028, column: 50, scope: !12832)
!12846 = !DILocalVariable(name: "connector", scope: !12832, file: !3, line: 3029, type: !1162)
!12847 = !DILocation(line: 3029, column: 24, scope: !12832)
!12848 = !DILocation(line: 3029, column: 36, scope: !12832)
!12849 = !DILocation(line: 3029, column: 45, scope: !12832)
!12850 = !DILocalVariable(name: "edid", scope: !12832, file: !3, line: 3030, type: !369)
!12851 = !DILocation(line: 3030, column: 15, scope: !12832)
!12852 = !DILocation(line: 3030, column: 22, scope: !12832)
!12853 = !DILocation(line: 3030, column: 31, scope: !12832)
!12854 = !DILocalVariable(name: "i", scope: !12832, file: !3, line: 3031, type: !139)
!12855 = !DILocation(line: 3031, column: 6, scope: !12832)
!12856 = !DILocation(line: 3033, column: 41, scope: !12857)
!12857 = distinct !DILexicalBlock(scope: !12832, file: !3, line: 3033, column: 6)
!12858 = !DILocation(line: 3033, column: 29, scope: !12857)
!12859 = !DILocation(line: 3033, column: 7, scope: !12857)
!12860 = !DILocation(line: 3033, column: 6, scope: !12832)
!12861 = !DILocation(line: 3034, column: 3, scope: !12857)
!12862 = !DILocation(line: 3036, column: 9, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12832, file: !3, line: 3036, column: 2)
!12864 = !DILocation(line: 3036, column: 7, scope: !12863)
!12865 = !DILocation(line: 3036, column: 14, scope: !12866)
!12866 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 3036, column: 2)
!12867 = !DILocation(line: 3036, column: 16, scope: !12866)
!12868 = !DILocation(line: 3036, column: 2, scope: !12863)
!12869 = !DILocalVariable(name: "std", scope: !12870, file: !3, line: 3037, type: !12564)
!12870 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 3036, column: 26)
!12871 = !DILocation(line: 3037, column: 22, scope: !12870)
!12872 = !DILocation(line: 3037, column: 29, scope: !12870)
!12873 = !DILocation(line: 3037, column: 35, scope: !12870)
!12874 = !DILocation(line: 3037, column: 40, scope: !12870)
!12875 = !DILocation(line: 3037, column: 48, scope: !12870)
!12876 = !DILocalVariable(name: "newmode", scope: !12870, file: !3, line: 3038, type: !525)
!12877 = !DILocation(line: 3038, column: 28, scope: !12870)
!12878 = !DILocation(line: 3040, column: 26, scope: !12870)
!12879 = !DILocation(line: 3040, column: 37, scope: !12870)
!12880 = !DILocation(line: 3040, column: 43, scope: !12870)
!12881 = !DILocation(line: 3040, column: 13, scope: !12870)
!12882 = !DILocation(line: 3040, column: 11, scope: !12870)
!12883 = !DILocation(line: 3041, column: 7, scope: !12884)
!12884 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 3041, column: 7)
!12885 = !DILocation(line: 3041, column: 7, scope: !12870)
!12886 = !DILocation(line: 3042, column: 24, scope: !12887)
!12887 = distinct !DILexicalBlock(scope: !12884, file: !3, line: 3041, column: 16)
!12888 = !DILocation(line: 3042, column: 35, scope: !12887)
!12889 = !DILocation(line: 3042, column: 4, scope: !12887)
!12890 = !DILocation(line: 3043, column: 4, scope: !12887)
!12891 = !DILocation(line: 3043, column: 13, scope: !12887)
!12892 = !DILocation(line: 3043, column: 18, scope: !12887)
!12893 = !DILocation(line: 3044, column: 3, scope: !12887)
!12894 = !DILocation(line: 3045, column: 2, scope: !12870)
!12895 = !DILocation(line: 3036, column: 22, scope: !12866)
!12896 = !DILocation(line: 3036, column: 2, scope: !12866)
!12897 = distinct !{!12897, !12868, !12898}
!12898 = !DILocation(line: 3045, column: 2, scope: !12863)
!12899 = !DILocation(line: 3046, column: 1, scope: !12832)
!12900 = distinct !DISubprogram(name: "standard_timing_level", scope: !3, file: !3, line: 2399, type: !12901, scopeLine: 2400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12901 = !DISubroutineType(types: !12902)
!12902 = !{!139, !369}
!12903 = !DILocalVariable(name: "edid", arg: 1, scope: !12900, file: !3, line: 2399, type: !369)
!12904 = !DILocation(line: 2399, column: 47, scope: !12900)
!12905 = !DILocation(line: 2401, column: 6, scope: !12906)
!12906 = distinct !DILexicalBlock(scope: !12900, file: !3, line: 2401, column: 6)
!12907 = !DILocation(line: 2401, column: 12, scope: !12906)
!12908 = !DILocation(line: 2401, column: 21, scope: !12906)
!12909 = !DILocation(line: 2401, column: 6, scope: !12900)
!12910 = !DILocation(line: 2402, column: 7, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 2402, column: 7)
!12912 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 2401, column: 27)
!12913 = !DILocation(line: 2402, column: 13, scope: !12911)
!12914 = !DILocation(line: 2402, column: 22, scope: !12911)
!12915 = !DILocation(line: 2402, column: 27, scope: !12911)
!12916 = !DILocation(line: 2402, column: 31, scope: !12911)
!12917 = !DILocation(line: 2402, column: 37, scope: !12911)
!12918 = !DILocation(line: 2402, column: 46, scope: !12911)
!12919 = !DILocation(line: 2402, column: 7, scope: !12912)
!12920 = !DILocation(line: 2403, column: 4, scope: !12911)
!12921 = !DILocation(line: 2404, column: 23, scope: !12922)
!12922 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 2404, column: 7)
!12923 = !DILocation(line: 2404, column: 7, scope: !12922)
!12924 = !DILocation(line: 2404, column: 7, scope: !12912)
!12925 = !DILocation(line: 2405, column: 4, scope: !12922)
!12926 = !DILocation(line: 2406, column: 7, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 2406, column: 7)
!12928 = !DILocation(line: 2406, column: 13, scope: !12927)
!12929 = !DILocation(line: 2406, column: 22, scope: !12927)
!12930 = !DILocation(line: 2406, column: 7, scope: !12912)
!12931 = !DILocation(line: 2407, column: 4, scope: !12927)
!12932 = !DILocation(line: 2408, column: 2, scope: !12912)
!12933 = !DILocation(line: 2409, column: 2, scope: !12900)
!12934 = !DILocation(line: 2410, column: 1, scope: !12900)
!12935 = distinct !DISubprogram(name: "bad_std_timing", scope: !3, file: !3, line: 2417, type: !12936, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12936 = !DISubroutineType(types: !12937)
!12937 = !{!139, !375, !375}
!12938 = !DILocalVariable(name: "a", arg: 1, scope: !12935, file: !3, line: 2417, type: !375)
!12939 = !DILocation(line: 2417, column: 19, scope: !12935)
!12940 = !DILocalVariable(name: "b", arg: 2, scope: !12935, file: !3, line: 2417, type: !375)
!12941 = !DILocation(line: 2417, column: 25, scope: !12935)
!12942 = !DILocation(line: 2419, column: 10, scope: !12935)
!12943 = !DILocation(line: 2419, column: 12, scope: !12935)
!12944 = !DILocation(line: 2419, column: 20, scope: !12935)
!12945 = !DILocation(line: 2419, column: 23, scope: !12935)
!12946 = !DILocation(line: 2419, column: 25, scope: !12935)
!12947 = !DILocation(line: 2419, column: 34, scope: !12935)
!12948 = !DILocation(line: 2420, column: 10, scope: !12935)
!12949 = !DILocation(line: 2420, column: 12, scope: !12935)
!12950 = !DILocation(line: 2420, column: 20, scope: !12935)
!12951 = !DILocation(line: 2420, column: 23, scope: !12935)
!12952 = !DILocation(line: 2420, column: 25, scope: !12935)
!12953 = !DILocation(line: 2420, column: 34, scope: !12935)
!12954 = !DILocation(line: 2421, column: 10, scope: !12935)
!12955 = !DILocation(line: 2421, column: 12, scope: !12935)
!12956 = !DILocation(line: 2421, column: 20, scope: !12935)
!12957 = !DILocation(line: 2421, column: 23, scope: !12935)
!12958 = !DILocation(line: 2421, column: 25, scope: !12935)
!12959 = !DILocation(line: 0, scope: !12935)
!12960 = !DILocation(line: 2419, column: 2, scope: !12935)
!12961 = distinct !DISubprogram(name: "drm_monitor_supports_rb", scope: !3, file: !3, line: 2325, type: !1120, scopeLine: 2326, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12962 = !DILocalVariable(name: "edid", arg: 1, scope: !12961, file: !3, line: 2325, type: !369)
!12963 = !DILocation(line: 2325, column: 38, scope: !12961)
!12964 = !DILocation(line: 2327, column: 6, scope: !12965)
!12965 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 2327, column: 6)
!12966 = !DILocation(line: 2327, column: 12, scope: !12965)
!12967 = !DILocation(line: 2327, column: 21, scope: !12965)
!12968 = !DILocation(line: 2327, column: 6, scope: !12961)
!12969 = !DILocalVariable(name: "ret", scope: !12970, file: !3, line: 2328, type: !559)
!12970 = distinct !DILexicalBlock(scope: !12965, file: !3, line: 2327, column: 27)
!12971 = !DILocation(line: 2328, column: 8, scope: !12970)
!12972 = !DILocation(line: 2330, column: 37, scope: !12970)
!12973 = !DILocation(line: 2330, column: 31, scope: !12970)
!12974 = !DILocation(line: 2330, column: 3, scope: !12970)
!12975 = !DILocation(line: 2331, column: 10, scope: !12970)
!12976 = !DILocation(line: 2331, column: 3, scope: !12970)
!12977 = !DILocation(line: 2334, column: 11, scope: !12961)
!12978 = !DILocation(line: 2334, column: 17, scope: !12961)
!12979 = !DILocation(line: 2334, column: 23, scope: !12961)
!12980 = !DILocation(line: 2334, column: 49, scope: !12961)
!12981 = !DILocation(line: 2334, column: 2, scope: !12961)
!12982 = !DILocation(line: 2335, column: 1, scope: !12961)
!12983 = distinct !DISubprogram(name: "drm_mode_hsync", scope: !3, file: !3, line: 2424, type: !12984, scopeLine: 2425, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!12984 = !DISubroutineType(types: !12985)
!12985 = !{!139, !594}
!12986 = !DILocalVariable(name: "mode", arg: 1, scope: !12983, file: !3, line: 2424, type: !594)
!12987 = !DILocation(line: 2424, column: 58, scope: !12983)
!12988 = !DILocation(line: 2426, column: 6, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 2426, column: 6)
!12990 = !DILocation(line: 2426, column: 12, scope: !12989)
!12991 = !DILocation(line: 2426, column: 19, scope: !12989)
!12992 = !DILocation(line: 2426, column: 6, scope: !12983)
!12993 = !DILocation(line: 2427, column: 3, scope: !12989)
!12994 = !DILocalVariable(name: "__x", scope: !12995, file: !3, line: 2429, type: !12448)
!12995 = distinct !DILexicalBlock(scope: !12983, file: !3, line: 2429, column: 9)
!12996 = !DILocation(line: 2429, column: 9, scope: !12995)
!12997 = !DILocalVariable(name: "__d", scope: !12995, file: !3, line: 2429, type: !674)
!12998 = !DILocation(line: 2429, column: 2, scope: !12983)
!12999 = !DILocation(line: 2430, column: 1, scope: !12983)
!13000 = distinct !DISubprogram(name: "drm_gtf2_hbreak", scope: !3, file: !3, line: 2351, type: !12901, scopeLine: 2352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13001 = !DILocalVariable(name: "edid", arg: 1, scope: !13000, file: !3, line: 2351, type: !369)
!13002 = !DILocation(line: 2351, column: 30, scope: !13000)
!13003 = !DILocalVariable(name: "r", scope: !13000, file: !3, line: 2353, type: !522)
!13004 = !DILocation(line: 2353, column: 6, scope: !13000)
!13005 = !DILocation(line: 2355, column: 36, scope: !13000)
!13006 = !DILocation(line: 2355, column: 30, scope: !13000)
!13007 = !DILocation(line: 2355, column: 53, scope: !13000)
!13008 = !DILocation(line: 2355, column: 2, scope: !13000)
!13009 = !DILocation(line: 2356, column: 9, scope: !13000)
!13010 = !DILocation(line: 2356, column: 14, scope: !13000)
!13011 = !DILocation(line: 2356, column: 20, scope: !13000)
!13012 = !DILocation(line: 2356, column: 2, scope: !13000)
!13013 = distinct !DISubprogram(name: "drm_gtf2_m", scope: !3, file: !3, line: 2369, type: !12901, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13014 = !DILocalVariable(name: "edid", arg: 1, scope: !13013, file: !3, line: 2369, type: !369)
!13015 = !DILocation(line: 2369, column: 25, scope: !13013)
!13016 = !DILocalVariable(name: "r", scope: !13013, file: !3, line: 2371, type: !522)
!13017 = !DILocation(line: 2371, column: 6, scope: !13013)
!13018 = !DILocation(line: 2373, column: 36, scope: !13013)
!13019 = !DILocation(line: 2373, column: 30, scope: !13013)
!13020 = !DILocation(line: 2373, column: 53, scope: !13013)
!13021 = !DILocation(line: 2373, column: 2, scope: !13013)
!13022 = !DILocation(line: 2374, column: 9, scope: !13013)
!13023 = !DILocation(line: 2374, column: 14, scope: !13013)
!13024 = !DILocation(line: 2374, column: 20, scope: !13013)
!13025 = !DILocation(line: 2374, column: 28, scope: !13013)
!13026 = !DILocation(line: 2374, column: 26, scope: !13013)
!13027 = !DILocation(line: 2374, column: 2, scope: !13013)
!13028 = distinct !DISubprogram(name: "drm_gtf2_2c", scope: !3, file: !3, line: 2360, type: !12901, scopeLine: 2361, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13029 = !DILocalVariable(name: "edid", arg: 1, scope: !13028, file: !3, line: 2360, type: !369)
!13030 = !DILocation(line: 2360, column: 26, scope: !13028)
!13031 = !DILocalVariable(name: "r", scope: !13028, file: !3, line: 2362, type: !522)
!13032 = !DILocation(line: 2362, column: 6, scope: !13028)
!13033 = !DILocation(line: 2364, column: 36, scope: !13028)
!13034 = !DILocation(line: 2364, column: 30, scope: !13028)
!13035 = !DILocation(line: 2364, column: 53, scope: !13028)
!13036 = !DILocation(line: 2364, column: 2, scope: !13028)
!13037 = !DILocation(line: 2365, column: 9, scope: !13028)
!13038 = !DILocation(line: 2365, column: 13, scope: !13028)
!13039 = !DILocation(line: 2365, column: 2, scope: !13028)
!13040 = distinct !DISubprogram(name: "drm_gtf2_k", scope: !3, file: !3, line: 2378, type: !12901, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13041 = !DILocalVariable(name: "edid", arg: 1, scope: !13040, file: !3, line: 2378, type: !369)
!13042 = !DILocation(line: 2378, column: 25, scope: !13040)
!13043 = !DILocalVariable(name: "r", scope: !13040, file: !3, line: 2380, type: !522)
!13044 = !DILocation(line: 2380, column: 6, scope: !13040)
!13045 = !DILocation(line: 2382, column: 36, scope: !13040)
!13046 = !DILocation(line: 2382, column: 30, scope: !13040)
!13047 = !DILocation(line: 2382, column: 53, scope: !13040)
!13048 = !DILocation(line: 2382, column: 2, scope: !13040)
!13049 = !DILocation(line: 2383, column: 9, scope: !13040)
!13050 = !DILocation(line: 2383, column: 13, scope: !13040)
!13051 = !DILocation(line: 2383, column: 2, scope: !13040)
!13052 = distinct !DISubprogram(name: "drm_gtf2_2j", scope: !3, file: !3, line: 2387, type: !12901, scopeLine: 2388, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13053 = !DILocalVariable(name: "edid", arg: 1, scope: !13052, file: !3, line: 2387, type: !369)
!13054 = !DILocation(line: 2387, column: 26, scope: !13052)
!13055 = !DILocalVariable(name: "r", scope: !13052, file: !3, line: 2389, type: !522)
!13056 = !DILocation(line: 2389, column: 6, scope: !13052)
!13057 = !DILocation(line: 2391, column: 36, scope: !13052)
!13058 = !DILocation(line: 2391, column: 30, scope: !13052)
!13059 = !DILocation(line: 2391, column: 53, scope: !13052)
!13060 = !DILocation(line: 2391, column: 2, scope: !13052)
!13061 = !DILocation(line: 2392, column: 9, scope: !13052)
!13062 = !DILocation(line: 2392, column: 13, scope: !13052)
!13063 = !DILocation(line: 2392, column: 2, scope: !13052)
!13064 = distinct !DISubprogram(name: "is_rb", scope: !3, file: !3, line: 2312, type: !10658, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13065 = !DILocalVariable(name: "t", arg: 1, scope: !13064, file: !3, line: 2312, type: !575)
!13066 = !DILocation(line: 2312, column: 31, scope: !13064)
!13067 = !DILocalVariable(name: "data", arg: 2, scope: !13064, file: !3, line: 2312, type: !368)
!13068 = !DILocation(line: 2312, column: 40, scope: !13064)
!13069 = !DILocalVariable(name: "r", scope: !13064, file: !3, line: 2314, type: !522)
!13070 = !DILocation(line: 2314, column: 6, scope: !13064)
!13071 = !DILocation(line: 2314, column: 16, scope: !13064)
!13072 = !DILocation(line: 2314, column: 10, scope: !13064)
!13073 = !DILocation(line: 2316, column: 29, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13064, file: !3, line: 2316, column: 6)
!13075 = !DILocation(line: 2316, column: 7, scope: !13074)
!13076 = !DILocation(line: 2316, column: 6, scope: !13064)
!13077 = !DILocation(line: 2317, column: 3, scope: !13074)
!13078 = !DILocation(line: 2319, column: 6, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13064, file: !3, line: 2319, column: 6)
!13080 = !DILocation(line: 2319, column: 12, scope: !13079)
!13081 = !DILocation(line: 2319, column: 6, scope: !13064)
!13082 = !DILocation(line: 2320, column: 12, scope: !13079)
!13083 = !DILocation(line: 2320, column: 17, scope: !13079)
!13084 = !DILocation(line: 2320, column: 3, scope: !13079)
!13085 = !DILocation(line: 2321, column: 1, scope: !13064)
!13086 = distinct !DISubprogram(name: "find_gtf2", scope: !3, file: !3, line: 2338, type: !10658, scopeLine: 2339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13087 = !DILocalVariable(name: "t", arg: 1, scope: !13086, file: !3, line: 2338, type: !575)
!13088 = !DILocation(line: 2338, column: 35, scope: !13086)
!13089 = !DILocalVariable(name: "data", arg: 2, scope: !13086, file: !3, line: 2338, type: !368)
!13090 = !DILocation(line: 2338, column: 44, scope: !13086)
!13091 = !DILocalVariable(name: "r", scope: !13086, file: !3, line: 2340, type: !522)
!13092 = !DILocation(line: 2340, column: 6, scope: !13086)
!13093 = !DILocation(line: 2340, column: 16, scope: !13086)
!13094 = !DILocation(line: 2340, column: 10, scope: !13086)
!13095 = !DILocation(line: 2342, column: 29, scope: !13096)
!13096 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 2342, column: 6)
!13097 = !DILocation(line: 2342, column: 7, scope: !13096)
!13098 = !DILocation(line: 2342, column: 6, scope: !13086)
!13099 = !DILocation(line: 2343, column: 3, scope: !13096)
!13100 = !DILocation(line: 2345, column: 6, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !13086, file: !3, line: 2345, column: 6)
!13102 = !DILocation(line: 2345, column: 12, scope: !13101)
!13103 = !DILocation(line: 2345, column: 6, scope: !13086)
!13104 = !DILocation(line: 2346, column: 18, scope: !13101)
!13105 = !DILocation(line: 2346, column: 11, scope: !13101)
!13106 = !DILocation(line: 2346, column: 4, scope: !13101)
!13107 = !DILocation(line: 2346, column: 16, scope: !13101)
!13108 = !DILocation(line: 2346, column: 3, scope: !13101)
!13109 = !DILocation(line: 2347, column: 1, scope: !13086)
!13110 = distinct !DISubprogram(name: "do_established_modes", scope: !3, file: !3, line: 2974, type: !10658, scopeLine: 2975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13111 = !DILocalVariable(name: "timing", arg: 1, scope: !13110, file: !3, line: 2974, type: !575)
!13112 = !DILocation(line: 2974, column: 46, scope: !13110)
!13113 = !DILocalVariable(name: "c", arg: 2, scope: !13110, file: !3, line: 2974, type: !368)
!13114 = !DILocation(line: 2974, column: 60, scope: !13110)
!13115 = !DILocalVariable(name: "closure", scope: !13110, file: !3, line: 2976, type: !11637)
!13116 = !DILocation(line: 2976, column: 32, scope: !13110)
!13117 = !DILocation(line: 2976, column: 42, scope: !13110)
!13118 = !DILocation(line: 2978, column: 41, scope: !13119)
!13119 = distinct !DILexicalBlock(scope: !13110, file: !3, line: 2978, column: 6)
!13120 = !DILocation(line: 2978, column: 29, scope: !13119)
!13121 = !DILocation(line: 2978, column: 7, scope: !13119)
!13122 = !DILocation(line: 2978, column: 6, scope: !13110)
!13123 = !DILocation(line: 2979, column: 3, scope: !13119)
!13124 = !DILocation(line: 2981, column: 35, scope: !13110)
!13125 = !DILocation(line: 2981, column: 44, scope: !13110)
!13126 = !DILocation(line: 2981, column: 55, scope: !13110)
!13127 = !DILocation(line: 2981, column: 20, scope: !13110)
!13128 = !DILocation(line: 2981, column: 2, scope: !13110)
!13129 = !DILocation(line: 2981, column: 11, scope: !13110)
!13130 = !DILocation(line: 2981, column: 17, scope: !13110)
!13131 = !DILocation(line: 2982, column: 1, scope: !13110)
!13132 = distinct !DISubprogram(name: "drm_est3_modes", scope: !3, file: !3, line: 2945, type: !12425, scopeLine: 2946, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13133 = !DILocalVariable(name: "connector", arg: 1, scope: !13132, file: !3, line: 2945, type: !1162)
!13134 = !DILocation(line: 2945, column: 38, scope: !13132)
!13135 = !DILocalVariable(name: "timing", arg: 2, scope: !13132, file: !3, line: 2945, type: !575)
!13136 = !DILocation(line: 2945, column: 73, scope: !13132)
!13137 = !DILocalVariable(name: "i", scope: !13132, file: !3, line: 2947, type: !139)
!13138 = !DILocation(line: 2947, column: 6, scope: !13132)
!13139 = !DILocalVariable(name: "j", scope: !13132, file: !3, line: 2947, type: !139)
!13140 = !DILocation(line: 2947, column: 9, scope: !13132)
!13141 = !DILocalVariable(name: "m", scope: !13132, file: !3, line: 2947, type: !139)
!13142 = !DILocation(line: 2947, column: 12, scope: !13132)
!13143 = !DILocalVariable(name: "modes", scope: !13132, file: !3, line: 2947, type: !139)
!13144 = !DILocation(line: 2947, column: 15, scope: !13132)
!13145 = !DILocalVariable(name: "mode", scope: !13132, file: !3, line: 2948, type: !525)
!13146 = !DILocation(line: 2948, column: 27, scope: !13132)
!13147 = !DILocalVariable(name: "est", scope: !13132, file: !3, line: 2949, type: !522)
!13148 = !DILocation(line: 2949, column: 6, scope: !13132)
!13149 = !DILocation(line: 2949, column: 19, scope: !13132)
!13150 = !DILocation(line: 2949, column: 13, scope: !13132)
!13151 = !DILocation(line: 2949, column: 27, scope: !13132)
!13152 = !DILocation(line: 2951, column: 9, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 2951, column: 2)
!13154 = !DILocation(line: 2951, column: 7, scope: !13153)
!13155 = !DILocation(line: 2951, column: 14, scope: !13156)
!13156 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 2951, column: 2)
!13157 = !DILocation(line: 2951, column: 16, scope: !13156)
!13158 = !DILocation(line: 2951, column: 2, scope: !13153)
!13159 = !DILocation(line: 2952, column: 10, scope: !13160)
!13160 = distinct !DILexicalBlock(scope: !13161, file: !3, line: 2952, column: 3)
!13161 = distinct !DILexicalBlock(scope: !13156, file: !3, line: 2951, column: 26)
!13162 = !DILocation(line: 2952, column: 8, scope: !13160)
!13163 = !DILocation(line: 2952, column: 15, scope: !13164)
!13164 = distinct !DILexicalBlock(scope: !13160, file: !3, line: 2952, column: 3)
!13165 = !DILocation(line: 2952, column: 17, scope: !13164)
!13166 = !DILocation(line: 2952, column: 3, scope: !13160)
!13167 = !DILocation(line: 2953, column: 9, scope: !13168)
!13168 = distinct !DILexicalBlock(scope: !13164, file: !3, line: 2952, column: 28)
!13169 = !DILocation(line: 2953, column: 11, scope: !13168)
!13170 = !DILocation(line: 2953, column: 23, scope: !13168)
!13171 = !DILocation(line: 2953, column: 21, scope: !13168)
!13172 = !DILocation(line: 2953, column: 16, scope: !13168)
!13173 = !DILocation(line: 2953, column: 6, scope: !13168)
!13174 = !DILocation(line: 2954, column: 8, scope: !13175)
!13175 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2954, column: 8)
!13176 = !DILocation(line: 2954, column: 10, scope: !13175)
!13177 = !DILocation(line: 2954, column: 8, scope: !13168)
!13178 = !DILocation(line: 2955, column: 5, scope: !13175)
!13179 = !DILocation(line: 2956, column: 8, scope: !13180)
!13180 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 2956, column: 8)
!13181 = !DILocation(line: 2956, column: 12, scope: !13180)
!13182 = !DILocation(line: 2956, column: 23, scope: !13180)
!13183 = !DILocation(line: 2956, column: 20, scope: !13180)
!13184 = !DILocation(line: 2956, column: 15, scope: !13180)
!13185 = !DILocation(line: 2956, column: 8, scope: !13168)
!13186 = !DILocation(line: 2957, column: 30, scope: !13187)
!13187 = distinct !DILexicalBlock(scope: !13180, file: !3, line: 2956, column: 27)
!13188 = !DILocation(line: 2957, column: 41, scope: !13187)
!13189 = !DILocation(line: 2958, column: 20, scope: !13187)
!13190 = !DILocation(line: 2958, column: 9, scope: !13187)
!13191 = !DILocation(line: 2958, column: 23, scope: !13187)
!13192 = !DILocation(line: 2959, column: 20, scope: !13187)
!13193 = !DILocation(line: 2959, column: 9, scope: !13187)
!13194 = !DILocation(line: 2959, column: 23, scope: !13187)
!13195 = !DILocation(line: 2960, column: 20, scope: !13187)
!13196 = !DILocation(line: 2960, column: 9, scope: !13187)
!13197 = !DILocation(line: 2960, column: 23, scope: !13187)
!13198 = !DILocation(line: 2961, column: 20, scope: !13187)
!13199 = !DILocation(line: 2961, column: 9, scope: !13187)
!13200 = !DILocation(line: 2961, column: 23, scope: !13187)
!13201 = !DILocation(line: 2957, column: 12, scope: !13187)
!13202 = !DILocation(line: 2957, column: 10, scope: !13187)
!13203 = !DILocation(line: 2962, column: 9, scope: !13204)
!13204 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 2962, column: 9)
!13205 = !DILocation(line: 2962, column: 9, scope: !13187)
!13206 = !DILocation(line: 2963, column: 26, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13204, file: !3, line: 2962, column: 15)
!13208 = !DILocation(line: 2963, column: 37, scope: !13207)
!13209 = !DILocation(line: 2963, column: 6, scope: !13207)
!13210 = !DILocation(line: 2964, column: 11, scope: !13207)
!13211 = !DILocation(line: 2965, column: 5, scope: !13207)
!13212 = !DILocation(line: 2966, column: 4, scope: !13187)
!13213 = !DILocation(line: 2967, column: 3, scope: !13168)
!13214 = !DILocation(line: 2952, column: 24, scope: !13164)
!13215 = !DILocation(line: 2952, column: 3, scope: !13164)
!13216 = distinct !{!13216, !13166, !13217}
!13217 = !DILocation(line: 2967, column: 3, scope: !13160)
!13218 = !DILocation(line: 2968, column: 2, scope: !13161)
!13219 = !DILocation(line: 2951, column: 22, scope: !13156)
!13220 = !DILocation(line: 2951, column: 2, scope: !13156)
!13221 = distinct !{!13221, !13158, !13222}
!13222 = !DILocation(line: 2968, column: 2, scope: !13153)
!13223 = !DILocation(line: 2970, column: 9, scope: !13132)
!13224 = !DILocation(line: 2970, column: 2, scope: !13132)
!13225 = distinct !DISubprogram(name: "do_cea_modes", scope: !3, file: !3, line: 3770, type: !13226, scopeLine: 3771, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13226 = !DISubroutineType(types: !13227)
!13227 = !{!139, !1162, !576, !375}
!13228 = !DILocalVariable(name: "connector", arg: 1, scope: !13225, file: !3, line: 3770, type: !1162)
!13229 = !DILocation(line: 3770, column: 36, scope: !13225)
!13230 = !DILocalVariable(name: "db", arg: 2, scope: !13225, file: !3, line: 3770, type: !576)
!13231 = !DILocation(line: 3770, column: 57, scope: !13225)
!13232 = !DILocalVariable(name: "len", arg: 3, scope: !13225, file: !3, line: 3770, type: !375)
!13233 = !DILocation(line: 3770, column: 64, scope: !13225)
!13234 = !DILocalVariable(name: "i", scope: !13225, file: !3, line: 3772, type: !139)
!13235 = !DILocation(line: 3772, column: 6, scope: !13225)
!13236 = !DILocalVariable(name: "modes", scope: !13225, file: !3, line: 3772, type: !139)
!13237 = !DILocation(line: 3772, column: 9, scope: !13225)
!13238 = !DILocalVariable(name: "hdmi", scope: !13225, file: !3, line: 3773, type: !11099)
!13239 = !DILocation(line: 3773, column: 24, scope: !13225)
!13240 = !DILocation(line: 3773, column: 32, scope: !13225)
!13241 = !DILocation(line: 3773, column: 43, scope: !13225)
!13242 = !DILocation(line: 3773, column: 56, scope: !13225)
!13243 = !DILocation(line: 3775, column: 9, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13225, file: !3, line: 3775, column: 2)
!13245 = !DILocation(line: 3775, column: 7, scope: !13244)
!13246 = !DILocation(line: 3775, column: 14, scope: !13247)
!13247 = distinct !DILexicalBlock(scope: !13244, file: !3, line: 3775, column: 2)
!13248 = !DILocation(line: 3775, column: 18, scope: !13247)
!13249 = !DILocation(line: 3775, column: 16, scope: !13247)
!13250 = !DILocation(line: 3775, column: 2, scope: !13244)
!13251 = !DILocalVariable(name: "mode", scope: !13252, file: !3, line: 3776, type: !525)
!13252 = distinct !DILexicalBlock(scope: !13247, file: !3, line: 3775, column: 28)
!13253 = !DILocation(line: 3776, column: 28, scope: !13252)
!13254 = !DILocation(line: 3778, column: 42, scope: !13252)
!13255 = !DILocation(line: 3778, column: 53, scope: !13252)
!13256 = !DILocation(line: 3778, column: 57, scope: !13252)
!13257 = !DILocation(line: 3778, column: 62, scope: !13252)
!13258 = !DILocation(line: 3778, column: 10, scope: !13252)
!13259 = !DILocation(line: 3778, column: 8, scope: !13252)
!13260 = !DILocation(line: 3779, column: 7, scope: !13261)
!13261 = distinct !DILexicalBlock(scope: !13252, file: !3, line: 3779, column: 7)
!13262 = !DILocation(line: 3779, column: 7, scope: !13252)
!13263 = !DILocation(line: 3789, column: 8, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13265, file: !3, line: 3789, column: 8)
!13265 = distinct !DILexicalBlock(scope: !13261, file: !3, line: 3779, column: 13)
!13266 = !DILocation(line: 3789, column: 10, scope: !13264)
!13267 = !DILocation(line: 3789, column: 15, scope: !13264)
!13268 = !DILocation(line: 3789, column: 18, scope: !13264)
!13269 = !DILocation(line: 3789, column: 24, scope: !13264)
!13270 = !DILocation(line: 3789, column: 49, scope: !13264)
!13271 = !DILocation(line: 3789, column: 46, scope: !13264)
!13272 = !DILocation(line: 3789, column: 38, scope: !13264)
!13273 = !DILocation(line: 3789, column: 8, scope: !13265)
!13274 = !DILocation(line: 3790, column: 24, scope: !13264)
!13275 = !DILocation(line: 3790, column: 35, scope: !13264)
!13276 = !DILocation(line: 3790, column: 38, scope: !13264)
!13277 = !DILocation(line: 3790, column: 5, scope: !13264)
!13278 = !DILocation(line: 3792, column: 24, scope: !13265)
!13279 = !DILocation(line: 3792, column: 35, scope: !13265)
!13280 = !DILocation(line: 3792, column: 4, scope: !13265)
!13281 = !DILocation(line: 3793, column: 9, scope: !13265)
!13282 = !DILocation(line: 3794, column: 3, scope: !13265)
!13283 = !DILocation(line: 3795, column: 2, scope: !13252)
!13284 = !DILocation(line: 3775, column: 24, scope: !13247)
!13285 = !DILocation(line: 3775, column: 2, scope: !13247)
!13286 = distinct !{!13286, !13250, !13287}
!13287 = !DILocation(line: 3795, column: 2, scope: !13244)
!13288 = !DILocation(line: 3797, column: 9, scope: !13225)
!13289 = !DILocation(line: 3797, column: 2, scope: !13225)
!13290 = distinct !DISubprogram(name: "cea_db_is_y420vdb", scope: !3, file: !3, line: 4200, type: !8279, scopeLine: 4201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13291 = !DILocalVariable(name: "db", arg: 1, scope: !13290, file: !3, line: 4200, type: !576)
!13292 = !DILocation(line: 4200, column: 41, scope: !13290)
!13293 = !DILocation(line: 4202, column: 17, scope: !13294)
!13294 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 4202, column: 6)
!13295 = !DILocation(line: 4202, column: 6, scope: !13294)
!13296 = !DILocation(line: 4202, column: 21, scope: !13294)
!13297 = !DILocation(line: 4202, column: 6, scope: !13290)
!13298 = !DILocation(line: 4203, column: 3, scope: !13294)
!13299 = !DILocation(line: 4205, column: 26, scope: !13300)
!13300 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 4205, column: 6)
!13301 = !DILocation(line: 4205, column: 7, scope: !13300)
!13302 = !DILocation(line: 4205, column: 6, scope: !13290)
!13303 = !DILocation(line: 4206, column: 3, scope: !13300)
!13304 = !DILocation(line: 4208, column: 26, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 4208, column: 6)
!13306 = !DILocation(line: 4208, column: 6, scope: !13305)
!13307 = !DILocation(line: 4208, column: 30, scope: !13305)
!13308 = !DILocation(line: 4208, column: 6, scope: !13290)
!13309 = !DILocation(line: 4209, column: 3, scope: !13305)
!13310 = !DILocation(line: 4211, column: 2, scope: !13290)
!13311 = !DILocation(line: 4212, column: 1, scope: !13290)
!13312 = distinct !DISubprogram(name: "do_y420vdb_modes", scope: !3, file: !3, line: 3694, type: !13226, scopeLine: 3696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13313 = !DILocalVariable(name: "map", arg: 1, scope: !13314, file: !13315, line: 405, type: !4790)
!13314 = distinct !DISubprogram(name: "bitmap_set", scope: !13315, file: !13315, line: 405, type: !13316, scopeLine: 407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13315 = !DIFile(filename: "./include/linux/bitmap.h", directory: "/home/lizy2001/genbc/linux")
!13316 = !DISubroutineType(types: !13317)
!13317 = !{null, !4790, !7, !7}
!13318 = !DILocation(line: 405, column: 55, scope: !13314, inlinedAt: !13319)
!13319 = distinct !DILocation(line: 3712, column: 3, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13321, file: !3, line: 3702, column: 33)
!13321 = distinct !DILexicalBlock(scope: !13322, file: !3, line: 3702, column: 2)
!13322 = distinct !DILexicalBlock(scope: !13312, file: !3, line: 3702, column: 2)
!13323 = !DILocalVariable(name: "start", arg: 2, scope: !13314, file: !13315, line: 405, type: !7)
!13324 = !DILocation(line: 405, column: 73, scope: !13314, inlinedAt: !13319)
!13325 = !DILocalVariable(name: "nbits", arg: 3, scope: !13314, file: !13315, line: 406, type: !7)
!13326 = !DILocation(line: 406, column: 16, scope: !13314, inlinedAt: !13319)
!13327 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !13328)
!13328 = distinct !DILocation(line: 3709, column: 37, scope: !13320)
!13329 = !DILocalVariable(name: "connector", arg: 1, scope: !13312, file: !3, line: 3694, type: !1162)
!13330 = !DILocation(line: 3694, column: 51, scope: !13312)
!13331 = !DILocalVariable(name: "svds", arg: 2, scope: !13312, file: !3, line: 3695, type: !576)
!13332 = !DILocation(line: 3695, column: 18, scope: !13312)
!13333 = !DILocalVariable(name: "svds_len", arg: 3, scope: !13312, file: !3, line: 3695, type: !375)
!13334 = !DILocation(line: 3695, column: 27, scope: !13312)
!13335 = !DILocalVariable(name: "modes", scope: !13312, file: !3, line: 3697, type: !139)
!13336 = !DILocation(line: 3697, column: 6, scope: !13312)
!13337 = !DILocalVariable(name: "i", scope: !13312, file: !3, line: 3697, type: !139)
!13338 = !DILocation(line: 3697, column: 17, scope: !13312)
!13339 = !DILocalVariable(name: "dev", scope: !13312, file: !3, line: 3698, type: !1166)
!13340 = !DILocation(line: 3698, column: 21, scope: !13312)
!13341 = !DILocation(line: 3698, column: 27, scope: !13312)
!13342 = !DILocation(line: 3698, column: 38, scope: !13312)
!13343 = !DILocalVariable(name: "info", scope: !13312, file: !3, line: 3699, type: !8397)
!13344 = !DILocation(line: 3699, column: 27, scope: !13312)
!13345 = !DILocation(line: 3699, column: 35, scope: !13312)
!13346 = !DILocation(line: 3699, column: 46, scope: !13312)
!13347 = !DILocalVariable(name: "hdmi", scope: !13312, file: !3, line: 3700, type: !11099)
!13348 = !DILocation(line: 3700, column: 24, scope: !13312)
!13349 = !DILocation(line: 3700, column: 32, scope: !13312)
!13350 = !DILocation(line: 3700, column: 38, scope: !13312)
!13351 = !DILocation(line: 3702, column: 9, scope: !13322)
!13352 = !DILocation(line: 3702, column: 7, scope: !13322)
!13353 = !DILocation(line: 3702, column: 14, scope: !13321)
!13354 = !DILocation(line: 3702, column: 18, scope: !13321)
!13355 = !DILocation(line: 3702, column: 16, scope: !13321)
!13356 = !DILocation(line: 3702, column: 2, scope: !13322)
!13357 = !DILocalVariable(name: "vic", scope: !13320, file: !3, line: 3703, type: !375)
!13358 = !DILocation(line: 3703, column: 6, scope: !13320)
!13359 = !DILocation(line: 3703, column: 23, scope: !13320)
!13360 = !DILocation(line: 3703, column: 28, scope: !13320)
!13361 = !DILocation(line: 3703, column: 12, scope: !13320)
!13362 = !DILocalVariable(name: "newmode", scope: !13320, file: !3, line: 3704, type: !525)
!13363 = !DILocation(line: 3704, column: 28, scope: !13320)
!13364 = !DILocation(line: 3706, column: 26, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13320, file: !3, line: 3706, column: 7)
!13366 = !DILocation(line: 3706, column: 8, scope: !13365)
!13367 = !DILocation(line: 3706, column: 7, scope: !13320)
!13368 = !DILocation(line: 3707, column: 4, scope: !13365)
!13369 = !DILocation(line: 3709, column: 32, scope: !13320)
!13370 = !DILocation(line: 3709, column: 54, scope: !13320)
!13371 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !13328)
!13372 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !13328)
!13373 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !13328)
!13374 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !13328)
!13375 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !13328)
!13376 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !13328)
!13377 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !13328)
!13378 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !13328)
!13379 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !13328)
!13380 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !13328)
!13381 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !13328)
!13382 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !13328)
!13383 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !13328)
!13384 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !13328)
!13385 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !13328)
!13386 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !13328)
!13387 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !13328)
!13388 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !13328)
!13389 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !13328)
!13390 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !13328)
!13391 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !13328)
!13392 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !13328)
!13393 = !DILocation(line: 3709, column: 13, scope: !13320)
!13394 = !DILocation(line: 3709, column: 11, scope: !13320)
!13395 = !DILocation(line: 3710, column: 8, scope: !13396)
!13396 = distinct !DILexicalBlock(scope: !13320, file: !3, line: 3710, column: 7)
!13397 = !DILocation(line: 3710, column: 7, scope: !13320)
!13398 = !DILocation(line: 3711, column: 4, scope: !13396)
!13399 = !DILocation(line: 3712, column: 14, scope: !13320)
!13400 = !DILocation(line: 3712, column: 20, scope: !13320)
!13401 = !DILocation(line: 3712, column: 36, scope: !13320)
!13402 = !DILocation(line: 408, column: 27, scope: !13403, inlinedAt: !13319)
!13403 = distinct !DILexicalBlock(scope: !13314, file: !13315, line: 408, column: 6)
!13404 = !DILocation(line: 408, column: 6, scope: !13403, inlinedAt: !13319)
!13405 = !DILocation(line: 408, column: 34, scope: !13403, inlinedAt: !13319)
!13406 = !DILocation(line: 408, column: 37, scope: !13403, inlinedAt: !13319)
!13407 = !DILocation(line: 408, column: 43, scope: !13403, inlinedAt: !13319)
!13408 = !DILocation(line: 408, column: 6, scope: !13314, inlinedAt: !13319)
!13409 = !DILocation(line: 409, column: 13, scope: !13403, inlinedAt: !13319)
!13410 = !DILocation(line: 409, column: 20, scope: !13403, inlinedAt: !13319)
!13411 = !DILocation(line: 409, column: 3, scope: !13403, inlinedAt: !13319)
!13412 = !DILocation(line: 410, column: 32, scope: !13413, inlinedAt: !13319)
!13413 = distinct !DILexicalBlock(scope: !13403, file: !13315, line: 410, column: 11)
!13414 = !DILocation(line: 410, column: 38, scope: !13413, inlinedAt: !13319)
!13415 = !DILocation(line: 410, column: 11, scope: !13413, inlinedAt: !13319)
!13416 = !DILocation(line: 410, column: 57, scope: !13413, inlinedAt: !13319)
!13417 = !DILocation(line: 411, column: 4, scope: !13413, inlinedAt: !13319)
!13418 = !DILocation(line: 411, column: 44, scope: !13413, inlinedAt: !13319)
!13419 = !DILocation(line: 412, column: 25, scope: !13413, inlinedAt: !13319)
!13420 = !DILocation(line: 412, column: 31, scope: !13413, inlinedAt: !13319)
!13421 = !DILocation(line: 412, column: 4, scope: !13413, inlinedAt: !13319)
!13422 = !DILocation(line: 412, column: 50, scope: !13413, inlinedAt: !13319)
!13423 = !DILocation(line: 413, column: 4, scope: !13413, inlinedAt: !13319)
!13424 = !DILocation(line: 410, column: 11, scope: !13403, inlinedAt: !13319)
!13425 = !DILocation(line: 414, column: 18, scope: !13413, inlinedAt: !13319)
!13426 = !DILocation(line: 414, column: 10, scope: !13413, inlinedAt: !13319)
!13427 = !DILocation(line: 414, column: 24, scope: !13413, inlinedAt: !13319)
!13428 = !DILocation(line: 414, column: 30, scope: !13413, inlinedAt: !13319)
!13429 = !DILocation(line: 414, column: 22, scope: !13413, inlinedAt: !13319)
!13430 = !DILocation(line: 414, column: 41, scope: !13413, inlinedAt: !13319)
!13431 = !DILocation(line: 414, column: 47, scope: !13413, inlinedAt: !13319)
!13432 = !DILocation(line: 414, column: 3, scope: !13413, inlinedAt: !13319)
!13433 = !DILocation(line: 416, column: 16, scope: !13413, inlinedAt: !13319)
!13434 = !DILocation(line: 416, column: 21, scope: !13413, inlinedAt: !13319)
!13435 = !DILocation(line: 416, column: 28, scope: !13413, inlinedAt: !13319)
!13436 = !DILocation(line: 416, column: 3, scope: !13413, inlinedAt: !13319)
!13437 = !DILocation(line: 3713, column: 23, scope: !13320)
!13438 = !DILocation(line: 3713, column: 34, scope: !13320)
!13439 = !DILocation(line: 3713, column: 3, scope: !13320)
!13440 = !DILocation(line: 3714, column: 8, scope: !13320)
!13441 = !DILocation(line: 3715, column: 2, scope: !13320)
!13442 = !DILocation(line: 3702, column: 29, scope: !13321)
!13443 = !DILocation(line: 3702, column: 2, scope: !13321)
!13444 = distinct !{!13444, !13356, !13445}
!13445 = !DILocation(line: 3715, column: 2, scope: !13322)
!13446 = !DILocation(line: 3717, column: 6, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13312, file: !3, line: 3717, column: 6)
!13448 = !DILocation(line: 3717, column: 12, scope: !13447)
!13449 = !DILocation(line: 3717, column: 6, scope: !13312)
!13450 = !DILocation(line: 3718, column: 3, scope: !13447)
!13451 = !DILocation(line: 3718, column: 9, scope: !13447)
!13452 = !DILocation(line: 3718, column: 23, scope: !13447)
!13453 = !DILocation(line: 3719, column: 9, scope: !13312)
!13454 = !DILocation(line: 3719, column: 2, scope: !13312)
!13455 = distinct !DISubprogram(name: "do_hdmi_vsdb_modes", scope: !3, file: !3, line: 3933, type: !13456, scopeLine: 3935, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13456 = !DISubroutineType(types: !13457)
!13457 = !{!139, !1162, !576, !375, !576, !375}
!13458 = !DILocalVariable(name: "connector", arg: 1, scope: !13455, file: !3, line: 3933, type: !1162)
!13459 = !DILocation(line: 3933, column: 42, scope: !13455)
!13460 = !DILocalVariable(name: "db", arg: 2, scope: !13455, file: !3, line: 3933, type: !576)
!13461 = !DILocation(line: 3933, column: 63, scope: !13455)
!13462 = !DILocalVariable(name: "len", arg: 3, scope: !13455, file: !3, line: 3933, type: !375)
!13463 = !DILocation(line: 3933, column: 70, scope: !13455)
!13464 = !DILocalVariable(name: "video_db", arg: 4, scope: !13455, file: !3, line: 3934, type: !576)
!13465 = !DILocation(line: 3934, column: 16, scope: !13455)
!13466 = !DILocalVariable(name: "video_len", arg: 5, scope: !13455, file: !3, line: 3934, type: !375)
!13467 = !DILocation(line: 3934, column: 29, scope: !13455)
!13468 = !DILocalVariable(name: "info", scope: !13455, file: !3, line: 3936, type: !8397)
!13469 = !DILocation(line: 3936, column: 27, scope: !13455)
!13470 = !DILocation(line: 3936, column: 35, scope: !13455)
!13471 = !DILocation(line: 3936, column: 46, scope: !13455)
!13472 = !DILocalVariable(name: "modes", scope: !13455, file: !3, line: 3937, type: !139)
!13473 = !DILocation(line: 3937, column: 6, scope: !13455)
!13474 = !DILocalVariable(name: "offset", scope: !13455, file: !3, line: 3937, type: !139)
!13475 = !DILocation(line: 3937, column: 17, scope: !13455)
!13476 = !DILocalVariable(name: "i", scope: !13455, file: !3, line: 3937, type: !139)
!13477 = !DILocation(line: 3937, column: 29, scope: !13455)
!13478 = !DILocalVariable(name: "multi_present", scope: !13455, file: !3, line: 3937, type: !139)
!13479 = !DILocation(line: 3937, column: 32, scope: !13455)
!13480 = !DILocalVariable(name: "multi_len", scope: !13455, file: !3, line: 3937, type: !139)
!13481 = !DILocation(line: 3937, column: 51, scope: !13455)
!13482 = !DILocalVariable(name: "vic_len", scope: !13455, file: !3, line: 3938, type: !375)
!13483 = !DILocation(line: 3938, column: 5, scope: !13455)
!13484 = !DILocalVariable(name: "hdmi_3d_len", scope: !13455, file: !3, line: 3938, type: !375)
!13485 = !DILocation(line: 3938, column: 14, scope: !13455)
!13486 = !DILocalVariable(name: "mask", scope: !13455, file: !3, line: 3939, type: !530)
!13487 = !DILocation(line: 3939, column: 6, scope: !13455)
!13488 = !DILocalVariable(name: "structure_all", scope: !13455, file: !3, line: 3940, type: !530)
!13489 = !DILocation(line: 3940, column: 6, scope: !13455)
!13490 = !DILocation(line: 3942, column: 6, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3942, column: 6)
!13492 = !DILocation(line: 3942, column: 10, scope: !13491)
!13493 = !DILocation(line: 3942, column: 6, scope: !13455)
!13494 = !DILocation(line: 3943, column: 3, scope: !13491)
!13495 = !DILocation(line: 3946, column: 8, scope: !13496)
!13496 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3946, column: 6)
!13497 = !DILocation(line: 3946, column: 14, scope: !13496)
!13498 = !DILocation(line: 3946, column: 6, scope: !13455)
!13499 = !DILocation(line: 3947, column: 3, scope: !13496)
!13500 = !DILocation(line: 3950, column: 6, scope: !13501)
!13501 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3950, column: 6)
!13502 = !DILocation(line: 3950, column: 12, scope: !13501)
!13503 = !DILocation(line: 3950, column: 6, scope: !13455)
!13504 = !DILocation(line: 3951, column: 10, scope: !13501)
!13505 = !DILocation(line: 3951, column: 3, scope: !13501)
!13506 = !DILocation(line: 3954, column: 6, scope: !13507)
!13507 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3954, column: 6)
!13508 = !DILocation(line: 3954, column: 12, scope: !13507)
!13509 = !DILocation(line: 3954, column: 6, scope: !13455)
!13510 = !DILocation(line: 3955, column: 10, scope: !13507)
!13511 = !DILocation(line: 3955, column: 3, scope: !13507)
!13512 = !DILocation(line: 3959, column: 6, scope: !13513)
!13513 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3959, column: 6)
!13514 = !DILocation(line: 3959, column: 17, scope: !13513)
!13515 = !DILocation(line: 3959, column: 15, scope: !13513)
!13516 = !DILocation(line: 3959, column: 24, scope: !13513)
!13517 = !DILocation(line: 3959, column: 10, scope: !13513)
!13518 = !DILocation(line: 3959, column: 6, scope: !13455)
!13519 = !DILocation(line: 3960, column: 3, scope: !13513)
!13520 = !DILocation(line: 3963, column: 8, scope: !13455)
!13521 = !DILocation(line: 3964, column: 6, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3964, column: 6)
!13523 = !DILocation(line: 3964, column: 13, scope: !13522)
!13524 = !DILocation(line: 3964, column: 11, scope: !13522)
!13525 = !DILocation(line: 3964, column: 21, scope: !13522)
!13526 = !DILocation(line: 3964, column: 6, scope: !13455)
!13527 = !DILocation(line: 3965, column: 44, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 3964, column: 33)
!13529 = !DILocation(line: 3965, column: 12, scope: !13528)
!13530 = !DILocation(line: 3965, column: 9, scope: !13528)
!13531 = !DILocation(line: 3968, column: 20, scope: !13528)
!13532 = !DILocation(line: 3968, column: 27, scope: !13528)
!13533 = !DILocation(line: 3968, column: 25, scope: !13528)
!13534 = !DILocation(line: 3968, column: 35, scope: !13528)
!13535 = !DILocation(line: 3968, column: 43, scope: !13528)
!13536 = !DILocation(line: 3968, column: 17, scope: !13528)
!13537 = !DILocation(line: 3969, column: 2, scope: !13528)
!13538 = !DILocation(line: 3971, column: 8, scope: !13455)
!13539 = !DILocation(line: 3972, column: 12, scope: !13455)
!13540 = !DILocation(line: 3972, column: 19, scope: !13455)
!13541 = !DILocation(line: 3972, column: 17, scope: !13455)
!13542 = !DILocation(line: 3972, column: 27, scope: !13455)
!13543 = !DILocation(line: 3972, column: 10, scope: !13455)
!13544 = !DILocation(line: 3973, column: 16, scope: !13455)
!13545 = !DILocation(line: 3973, column: 23, scope: !13455)
!13546 = !DILocation(line: 3973, column: 21, scope: !13455)
!13547 = !DILocation(line: 3973, column: 31, scope: !13455)
!13548 = !DILocation(line: 3973, column: 14, scope: !13455)
!13549 = !DILocation(line: 3975, column: 9, scope: !13550)
!13550 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3975, column: 2)
!13551 = !DILocation(line: 3975, column: 7, scope: !13550)
!13552 = !DILocation(line: 3975, column: 14, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13550, file: !3, line: 3975, column: 2)
!13554 = !DILocation(line: 3975, column: 18, scope: !13553)
!13555 = !DILocation(line: 3975, column: 16, scope: !13553)
!13556 = !DILocation(line: 3975, column: 26, scope: !13553)
!13557 = !DILocation(line: 3975, column: 29, scope: !13553)
!13558 = !DILocation(line: 3975, column: 41, scope: !13553)
!13559 = !DILocation(line: 3975, column: 39, scope: !13553)
!13560 = !DILocation(line: 3975, column: 50, scope: !13553)
!13561 = !DILocation(line: 3975, column: 48, scope: !13553)
!13562 = !DILocation(line: 3975, column: 33, scope: !13553)
!13563 = !DILocation(line: 0, scope: !13553)
!13564 = !DILocation(line: 3975, column: 2, scope: !13550)
!13565 = !DILocalVariable(name: "vic", scope: !13566, file: !3, line: 3976, type: !375)
!13566 = distinct !DILexicalBlock(scope: !13553, file: !3, line: 3975, column: 59)
!13567 = !DILocation(line: 3976, column: 6, scope: !13566)
!13568 = !DILocation(line: 3978, column: 9, scope: !13566)
!13569 = !DILocation(line: 3978, column: 16, scope: !13566)
!13570 = !DILocation(line: 3978, column: 14, scope: !13566)
!13571 = !DILocation(line: 3978, column: 25, scope: !13566)
!13572 = !DILocation(line: 3978, column: 23, scope: !13566)
!13573 = !DILocation(line: 3978, column: 7, scope: !13566)
!13574 = !DILocation(line: 3979, column: 26, scope: !13566)
!13575 = !DILocation(line: 3979, column: 37, scope: !13566)
!13576 = !DILocation(line: 3979, column: 12, scope: !13566)
!13577 = !DILocation(line: 3979, column: 9, scope: !13566)
!13578 = !DILocation(line: 3980, column: 2, scope: !13566)
!13579 = !DILocation(line: 3975, column: 55, scope: !13553)
!13580 = !DILocation(line: 3975, column: 2, scope: !13553)
!13581 = distinct !{!13581, !13564, !13582}
!13582 = !DILocation(line: 3980, column: 2, scope: !13550)
!13583 = !DILocation(line: 3981, column: 16, scope: !13455)
!13584 = !DILocation(line: 3981, column: 14, scope: !13455)
!13585 = !DILocation(line: 3981, column: 9, scope: !13455)
!13586 = !DILocation(line: 3983, column: 6, scope: !13587)
!13587 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3983, column: 6)
!13588 = !DILocation(line: 3983, column: 20, scope: !13587)
!13589 = !DILocation(line: 3983, column: 6, scope: !13455)
!13590 = !DILocation(line: 3984, column: 13, scope: !13587)
!13591 = !DILocation(line: 3984, column: 3, scope: !13587)
!13592 = !DILocation(line: 3985, column: 11, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13587, file: !3, line: 3985, column: 11)
!13594 = !DILocation(line: 3985, column: 25, scope: !13593)
!13595 = !DILocation(line: 3985, column: 11, scope: !13587)
!13596 = !DILocation(line: 3986, column: 13, scope: !13593)
!13597 = !DILocation(line: 3986, column: 3, scope: !13593)
!13598 = !DILocation(line: 3988, column: 13, scope: !13593)
!13599 = !DILocation(line: 3990, column: 6, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3990, column: 6)
!13601 = !DILocation(line: 3990, column: 17, scope: !13600)
!13602 = !DILocation(line: 3990, column: 15, scope: !13600)
!13603 = !DILocation(line: 3990, column: 26, scope: !13600)
!13604 = !DILocation(line: 3990, column: 24, scope: !13600)
!13605 = !DILocation(line: 3990, column: 38, scope: !13600)
!13606 = !DILocation(line: 3990, column: 10, scope: !13600)
!13607 = !DILocation(line: 3990, column: 6, scope: !13455)
!13608 = !DILocation(line: 3991, column: 3, scope: !13600)
!13609 = !DILocation(line: 3993, column: 6, scope: !13610)
!13610 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3993, column: 6)
!13611 = !DILocation(line: 3993, column: 20, scope: !13610)
!13612 = !DILocation(line: 3993, column: 18, scope: !13610)
!13613 = !DILocation(line: 3993, column: 6, scope: !13455)
!13614 = !DILocation(line: 3994, column: 3, scope: !13610)
!13615 = !DILocation(line: 3996, column: 6, scope: !13616)
!13616 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 3996, column: 6)
!13617 = !DILocation(line: 3996, column: 20, scope: !13616)
!13618 = !DILocation(line: 3996, column: 25, scope: !13616)
!13619 = !DILocation(line: 3996, column: 28, scope: !13616)
!13620 = !DILocation(line: 3996, column: 42, scope: !13616)
!13621 = !DILocation(line: 3996, column: 6, scope: !13455)
!13622 = !DILocation(line: 3998, column: 20, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13616, file: !3, line: 3996, column: 48)
!13624 = !DILocation(line: 3998, column: 27, scope: !13623)
!13625 = !DILocation(line: 3998, column: 25, scope: !13623)
!13626 = !DILocation(line: 3998, column: 35, scope: !13623)
!13627 = !DILocation(line: 3998, column: 43, scope: !13623)
!13628 = !DILocation(line: 3998, column: 50, scope: !13623)
!13629 = !DILocation(line: 3998, column: 48, scope: !13623)
!13630 = !DILocation(line: 3998, column: 41, scope: !13623)
!13631 = !DILocation(line: 3998, column: 19, scope: !13623)
!13632 = !DILocation(line: 3998, column: 17, scope: !13623)
!13633 = !DILocation(line: 4001, column: 7, scope: !13634)
!13634 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 4001, column: 7)
!13635 = !DILocation(line: 4001, column: 21, scope: !13634)
!13636 = !DILocation(line: 4001, column: 7, scope: !13623)
!13637 = !DILocation(line: 4002, column: 12, scope: !13634)
!13638 = !DILocation(line: 4002, column: 20, scope: !13634)
!13639 = !DILocation(line: 4002, column: 18, scope: !13634)
!13640 = !DILocation(line: 4002, column: 28, scope: !13634)
!13641 = !DILocation(line: 4002, column: 36, scope: !13634)
!13642 = !DILocation(line: 4002, column: 44, scope: !13634)
!13643 = !DILocation(line: 4002, column: 42, scope: !13634)
!13644 = !DILocation(line: 4002, column: 34, scope: !13634)
!13645 = !DILocation(line: 4002, column: 11, scope: !13634)
!13646 = !DILocation(line: 4002, column: 9, scope: !13634)
!13647 = !DILocation(line: 4002, column: 4, scope: !13634)
!13648 = !DILocation(line: 4004, column: 9, scope: !13634)
!13649 = !DILocation(line: 4006, column: 10, scope: !13650)
!13650 = distinct !DILexicalBlock(scope: !13623, file: !3, line: 4006, column: 3)
!13651 = !DILocation(line: 4006, column: 8, scope: !13650)
!13652 = !DILocation(line: 4006, column: 15, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13650, file: !3, line: 4006, column: 3)
!13654 = !DILocation(line: 4006, column: 17, scope: !13653)
!13655 = !DILocation(line: 4006, column: 3, scope: !13650)
!13656 = !DILocation(line: 4007, column: 8, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 4007, column: 8)
!13658 = distinct !DILexicalBlock(scope: !13653, file: !3, line: 4006, column: 28)
!13659 = !DILocation(line: 4007, column: 21, scope: !13657)
!13660 = !DILocation(line: 4007, column: 18, scope: !13657)
!13661 = !DILocation(line: 4007, column: 13, scope: !13657)
!13662 = !DILocation(line: 4007, column: 8, scope: !13658)
!13663 = !DILocation(line: 4008, column: 34, scope: !13657)
!13664 = !DILocation(line: 4009, column: 7, scope: !13657)
!13665 = !DILocation(line: 4010, column: 7, scope: !13657)
!13666 = !DILocation(line: 4011, column: 7, scope: !13657)
!13667 = !DILocation(line: 4011, column: 18, scope: !13657)
!13668 = !DILocation(line: 4008, column: 14, scope: !13657)
!13669 = !DILocation(line: 4008, column: 11, scope: !13657)
!13670 = !DILocation(line: 4008, column: 5, scope: !13657)
!13671 = !DILocation(line: 4012, column: 3, scope: !13658)
!13672 = !DILocation(line: 4006, column: 24, scope: !13653)
!13673 = !DILocation(line: 4006, column: 3, scope: !13653)
!13674 = distinct !{!13674, !13655, !13675}
!13675 = !DILocation(line: 4012, column: 3, scope: !13650)
!13676 = !DILocation(line: 4013, column: 2, scope: !13623)
!13677 = !DILocation(line: 4015, column: 12, scope: !13455)
!13678 = !DILocation(line: 4015, column: 9, scope: !13455)
!13679 = !DILocation(line: 4017, column: 9, scope: !13680)
!13680 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 4017, column: 2)
!13681 = !DILocation(line: 4017, column: 7, scope: !13680)
!13682 = !DILocation(line: 4017, column: 14, scope: !13683)
!13683 = distinct !DILexicalBlock(scope: !13680, file: !3, line: 4017, column: 2)
!13684 = !DILocation(line: 4017, column: 19, scope: !13683)
!13685 = !DILocation(line: 4017, column: 33, scope: !13683)
!13686 = !DILocation(line: 4017, column: 31, scope: !13683)
!13687 = !DILocation(line: 4017, column: 16, scope: !13683)
!13688 = !DILocation(line: 4017, column: 2, scope: !13680)
!13689 = !DILocalVariable(name: "vic_index", scope: !13690, file: !3, line: 4018, type: !139)
!13690 = distinct !DILexicalBlock(scope: !13683, file: !3, line: 4017, column: 50)
!13691 = !DILocation(line: 4018, column: 7, scope: !13690)
!13692 = !DILocalVariable(name: "newmode", scope: !13690, file: !3, line: 4019, type: !525)
!13693 = !DILocation(line: 4019, column: 28, scope: !13690)
!13694 = !DILocalVariable(name: "newflag", scope: !13690, file: !3, line: 4020, type: !7)
!13695 = !DILocation(line: 4020, column: 16, scope: !13690)
!13696 = !DILocalVariable(name: "detail_present", scope: !13690, file: !3, line: 4021, type: !559)
!13697 = !DILocation(line: 4021, column: 8, scope: !13690)
!13698 = !DILocation(line: 4023, column: 22, scope: !13690)
!13699 = !DILocation(line: 4023, column: 29, scope: !13690)
!13700 = !DILocation(line: 4023, column: 27, scope: !13690)
!13701 = !DILocation(line: 4023, column: 38, scope: !13690)
!13702 = !DILocation(line: 4023, column: 36, scope: !13690)
!13703 = !DILocation(line: 4023, column: 41, scope: !13690)
!13704 = !DILocation(line: 4023, column: 49, scope: !13690)
!13705 = !DILocation(line: 4023, column: 18, scope: !13690)
!13706 = !DILocation(line: 4025, column: 7, scope: !13707)
!13707 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 4025, column: 7)
!13708 = !DILocation(line: 4025, column: 22, scope: !13707)
!13709 = !DILocation(line: 4025, column: 26, scope: !13707)
!13710 = !DILocation(line: 4025, column: 28, scope: !13707)
!13711 = !DILocation(line: 4025, column: 35, scope: !13707)
!13712 = !DILocation(line: 4025, column: 49, scope: !13707)
!13713 = !DILocation(line: 4025, column: 47, scope: !13707)
!13714 = !DILocation(line: 4025, column: 32, scope: !13707)
!13715 = !DILocation(line: 4025, column: 7, scope: !13690)
!13716 = !DILocation(line: 4026, column: 4, scope: !13707)
!13717 = !DILocation(line: 4029, column: 15, scope: !13690)
!13718 = !DILocation(line: 4029, column: 22, scope: !13690)
!13719 = !DILocation(line: 4029, column: 20, scope: !13690)
!13720 = !DILocation(line: 4029, column: 31, scope: !13690)
!13721 = !DILocation(line: 4029, column: 29, scope: !13690)
!13722 = !DILocation(line: 4029, column: 34, scope: !13690)
!13723 = !DILocation(line: 4029, column: 13, scope: !13690)
!13724 = !DILocation(line: 4032, column: 11, scope: !13690)
!13725 = !DILocation(line: 4032, column: 18, scope: !13690)
!13726 = !DILocation(line: 4032, column: 16, scope: !13690)
!13727 = !DILocation(line: 4032, column: 27, scope: !13690)
!13728 = !DILocation(line: 4032, column: 25, scope: !13690)
!13729 = !DILocation(line: 4032, column: 30, scope: !13690)
!13730 = !DILocation(line: 4032, column: 3, scope: !13690)
!13731 = !DILocation(line: 4034, column: 12, scope: !13732)
!13732 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 4032, column: 38)
!13733 = !DILocation(line: 4035, column: 4, scope: !13732)
!13734 = !DILocation(line: 4037, column: 12, scope: !13732)
!13735 = !DILocation(line: 4038, column: 4, scope: !13732)
!13736 = !DILocation(line: 4041, column: 9, scope: !13737)
!13737 = distinct !DILexicalBlock(scope: !13732, file: !3, line: 4041, column: 8)
!13738 = !DILocation(line: 4041, column: 16, scope: !13737)
!13739 = !DILocation(line: 4041, column: 14, scope: !13737)
!13740 = !DILocation(line: 4041, column: 25, scope: !13737)
!13741 = !DILocation(line: 4041, column: 23, scope: !13737)
!13742 = !DILocation(line: 4041, column: 28, scope: !13737)
!13743 = !DILocation(line: 4041, column: 34, scope: !13737)
!13744 = !DILocation(line: 4041, column: 8, scope: !13732)
!13745 = !DILocation(line: 4042, column: 13, scope: !13737)
!13746 = !DILocation(line: 4042, column: 5, scope: !13737)
!13747 = !DILocation(line: 4043, column: 4, scope: !13732)
!13748 = !DILocation(line: 4046, column: 7, scope: !13749)
!13749 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 4046, column: 7)
!13750 = !DILocation(line: 4046, column: 15, scope: !13749)
!13751 = !DILocation(line: 4046, column: 7, scope: !13690)
!13752 = !DILocation(line: 4047, column: 46, scope: !13753)
!13753 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 4046, column: 21)
!13754 = !DILocation(line: 4048, column: 11, scope: !13753)
!13755 = !DILocation(line: 4049, column: 11, scope: !13753)
!13756 = !DILocation(line: 4050, column: 11, scope: !13753)
!13757 = !DILocation(line: 4047, column: 14, scope: !13753)
!13758 = !DILocation(line: 4047, column: 12, scope: !13753)
!13759 = !DILocation(line: 4052, column: 8, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13753, file: !3, line: 4052, column: 8)
!13761 = !DILocation(line: 4052, column: 8, scope: !13753)
!13762 = !DILocation(line: 4053, column: 23, scope: !13763)
!13763 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 4052, column: 17)
!13764 = !DILocation(line: 4053, column: 5, scope: !13763)
!13765 = !DILocation(line: 4053, column: 14, scope: !13763)
!13766 = !DILocation(line: 4053, column: 20, scope: !13763)
!13767 = !DILocation(line: 4054, column: 25, scope: !13763)
!13768 = !DILocation(line: 4054, column: 36, scope: !13763)
!13769 = !DILocation(line: 4054, column: 5, scope: !13763)
!13770 = !DILocation(line: 4055, column: 10, scope: !13763)
!13771 = !DILocation(line: 4056, column: 4, scope: !13763)
!13772 = !DILocation(line: 4057, column: 3, scope: !13753)
!13773 = !DILocation(line: 4059, column: 7, scope: !13774)
!13774 = distinct !DILexicalBlock(scope: !13690, file: !3, line: 4059, column: 7)
!13775 = !DILocation(line: 4059, column: 7, scope: !13690)
!13776 = !DILocation(line: 4060, column: 5, scope: !13774)
!13777 = !DILocation(line: 4060, column: 4, scope: !13774)
!13778 = !DILocation(line: 4061, column: 2, scope: !13690)
!13779 = !DILocation(line: 4017, column: 46, scope: !13683)
!13780 = !DILocation(line: 4017, column: 2, scope: !13683)
!13781 = distinct !{!13781, !13688, !13782}
!13782 = !DILocation(line: 4061, column: 2, scope: !13680)
!13783 = !DILabel(scope: !13455, name: "out", file: !3, line: 4063)
!13784 = !DILocation(line: 4063, column: 1, scope: !13455)
!13785 = !DILocation(line: 4064, column: 6, scope: !13786)
!13786 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 4064, column: 6)
!13787 = !DILocation(line: 4064, column: 12, scope: !13786)
!13788 = !DILocation(line: 4064, column: 6, scope: !13455)
!13789 = !DILocation(line: 4065, column: 3, scope: !13786)
!13790 = !DILocation(line: 4065, column: 9, scope: !13786)
!13791 = !DILocation(line: 4065, column: 28, scope: !13786)
!13792 = !DILocation(line: 4066, column: 9, scope: !13455)
!13793 = !DILocation(line: 4066, column: 2, scope: !13455)
!13794 = distinct !DISubprogram(name: "drm_display_mode_from_vic_index", scope: !3, file: !3, line: 3661, type: !13795, scopeLine: 3664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13795 = !DISubroutineType(types: !13796)
!13796 = !{!525, !1162, !576, !375, !375}
!13797 = !DILocation(line: 3321, column: 75, scope: !7444, inlinedAt: !13798)
!13798 = distinct !DILocation(line: 3677, column: 36, scope: !13794)
!13799 = !DILocalVariable(name: "connector", arg: 1, scope: !13794, file: !3, line: 3661, type: !1162)
!13800 = !DILocation(line: 3661, column: 55, scope: !13794)
!13801 = !DILocalVariable(name: "video_db", arg: 2, scope: !13794, file: !3, line: 3662, type: !576)
!13802 = !DILocation(line: 3662, column: 15, scope: !13794)
!13803 = !DILocalVariable(name: "video_len", arg: 3, scope: !13794, file: !3, line: 3662, type: !375)
!13804 = !DILocation(line: 3662, column: 28, scope: !13794)
!13805 = !DILocalVariable(name: "video_index", arg: 4, scope: !13794, file: !3, line: 3663, type: !375)
!13806 = !DILocation(line: 3663, column: 8, scope: !13794)
!13807 = !DILocalVariable(name: "dev", scope: !13794, file: !3, line: 3665, type: !1166)
!13808 = !DILocation(line: 3665, column: 21, scope: !13794)
!13809 = !DILocation(line: 3665, column: 27, scope: !13794)
!13810 = !DILocation(line: 3665, column: 38, scope: !13794)
!13811 = !DILocalVariable(name: "newmode", scope: !13794, file: !3, line: 3666, type: !525)
!13812 = !DILocation(line: 3666, column: 27, scope: !13794)
!13813 = !DILocalVariable(name: "vic", scope: !13794, file: !3, line: 3667, type: !375)
!13814 = !DILocation(line: 3667, column: 5, scope: !13794)
!13815 = !DILocation(line: 3669, column: 6, scope: !13816)
!13816 = distinct !DILexicalBlock(scope: !13794, file: !3, line: 3669, column: 6)
!13817 = !DILocation(line: 3669, column: 15, scope: !13816)
!13818 = !DILocation(line: 3669, column: 23, scope: !13816)
!13819 = !DILocation(line: 3669, column: 26, scope: !13816)
!13820 = !DILocation(line: 3669, column: 41, scope: !13816)
!13821 = !DILocation(line: 3669, column: 38, scope: !13816)
!13822 = !DILocation(line: 3669, column: 6, scope: !13794)
!13823 = !DILocation(line: 3670, column: 3, scope: !13816)
!13824 = !DILocation(line: 3673, column: 19, scope: !13794)
!13825 = !DILocation(line: 3673, column: 28, scope: !13794)
!13826 = !DILocation(line: 3673, column: 8, scope: !13794)
!13827 = !DILocation(line: 3673, column: 6, scope: !13794)
!13828 = !DILocation(line: 3674, column: 25, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13794, file: !3, line: 3674, column: 6)
!13830 = !DILocation(line: 3674, column: 7, scope: !13829)
!13831 = !DILocation(line: 3674, column: 6, scope: !13794)
!13832 = !DILocation(line: 3675, column: 3, scope: !13829)
!13833 = !DILocation(line: 3677, column: 31, scope: !13794)
!13834 = !DILocation(line: 3677, column: 53, scope: !13794)
!13835 = !DILocation(line: 3326, column: 6, scope: !7479, inlinedAt: !13798)
!13836 = !DILocation(line: 3326, column: 10, scope: !7479, inlinedAt: !13798)
!13837 = !DILocation(line: 3326, column: 15, scope: !7479, inlinedAt: !13798)
!13838 = !DILocation(line: 3326, column: 18, scope: !7479, inlinedAt: !13798)
!13839 = !DILocation(line: 3326, column: 22, scope: !7479, inlinedAt: !13798)
!13840 = !DILocation(line: 3326, column: 6, scope: !7444, inlinedAt: !13798)
!13841 = !DILocation(line: 3327, column: 28, scope: !7479, inlinedAt: !13798)
!13842 = !DILocation(line: 3327, column: 32, scope: !7479, inlinedAt: !13798)
!13843 = !DILocation(line: 3327, column: 11, scope: !7479, inlinedAt: !13798)
!13844 = !DILocation(line: 3327, column: 3, scope: !7479, inlinedAt: !13798)
!13845 = !DILocation(line: 3328, column: 6, scope: !7490, inlinedAt: !13798)
!13846 = !DILocation(line: 3328, column: 10, scope: !7490, inlinedAt: !13798)
!13847 = !DILocation(line: 3328, column: 17, scope: !7490, inlinedAt: !13798)
!13848 = !DILocation(line: 3328, column: 20, scope: !7490, inlinedAt: !13798)
!13849 = !DILocation(line: 3328, column: 24, scope: !7490, inlinedAt: !13798)
!13850 = !DILocation(line: 3328, column: 6, scope: !7444, inlinedAt: !13798)
!13851 = !DILocation(line: 3329, column: 30, scope: !7490, inlinedAt: !13798)
!13852 = !DILocation(line: 3329, column: 34, scope: !7490, inlinedAt: !13798)
!13853 = !DILocation(line: 3329, column: 11, scope: !7490, inlinedAt: !13798)
!13854 = !DILocation(line: 3329, column: 3, scope: !7490, inlinedAt: !13798)
!13855 = !DILocation(line: 3330, column: 2, scope: !7444, inlinedAt: !13798)
!13856 = !DILocation(line: 3331, column: 1, scope: !7444, inlinedAt: !13798)
!13857 = !DILocation(line: 3677, column: 12, scope: !13794)
!13858 = !DILocation(line: 3677, column: 10, scope: !13794)
!13859 = !DILocation(line: 3678, column: 7, scope: !13860)
!13860 = distinct !DILexicalBlock(scope: !13794, file: !3, line: 3678, column: 6)
!13861 = !DILocation(line: 3678, column: 6, scope: !13794)
!13862 = !DILocation(line: 3679, column: 3, scope: !13860)
!13863 = !DILocation(line: 3681, column: 9, scope: !13794)
!13864 = !DILocation(line: 3681, column: 2, scope: !13794)
!13865 = !DILocation(line: 3682, column: 1, scope: !13794)
!13866 = distinct !DISubprogram(name: "drm_add_cmdb_modes", scope: !3, file: !3, line: 3730, type: !13867, scopeLine: 3731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13867 = !DISubroutineType(types: !13868)
!13868 = !{null, !1162, !375}
!13869 = !DILocation(line: 405, column: 55, scope: !13314, inlinedAt: !13870)
!13870 = distinct !DILocation(line: 3738, column: 2, scope: !13866)
!13871 = !DILocation(line: 405, column: 73, scope: !13314, inlinedAt: !13870)
!13872 = !DILocation(line: 406, column: 16, scope: !13314, inlinedAt: !13870)
!13873 = !DILocalVariable(name: "connector", arg: 1, scope: !13866, file: !3, line: 3730, type: !1162)
!13874 = !DILocation(line: 3730, column: 42, scope: !13866)
!13875 = !DILocalVariable(name: "svd", arg: 2, scope: !13866, file: !3, line: 3730, type: !375)
!13876 = !DILocation(line: 3730, column: 56, scope: !13866)
!13877 = !DILocalVariable(name: "vic", scope: !13866, file: !3, line: 3732, type: !375)
!13878 = !DILocation(line: 3732, column: 5, scope: !13866)
!13879 = !DILocation(line: 3732, column: 22, scope: !13866)
!13880 = !DILocation(line: 3732, column: 11, scope: !13866)
!13881 = !DILocalVariable(name: "hdmi", scope: !13866, file: !3, line: 3733, type: !11099)
!13882 = !DILocation(line: 3733, column: 24, scope: !13866)
!13883 = !DILocation(line: 3733, column: 32, scope: !13866)
!13884 = !DILocation(line: 3733, column: 43, scope: !13866)
!13885 = !DILocation(line: 3733, column: 56, scope: !13866)
!13886 = !DILocation(line: 3735, column: 25, scope: !13887)
!13887 = distinct !DILexicalBlock(scope: !13866, file: !3, line: 3735, column: 6)
!13888 = !DILocation(line: 3735, column: 7, scope: !13887)
!13889 = !DILocation(line: 3735, column: 6, scope: !13866)
!13890 = !DILocation(line: 3736, column: 3, scope: !13887)
!13891 = !DILocation(line: 3738, column: 13, scope: !13866)
!13892 = !DILocation(line: 3738, column: 19, scope: !13866)
!13893 = !DILocation(line: 3738, column: 36, scope: !13866)
!13894 = !DILocation(line: 408, column: 27, scope: !13403, inlinedAt: !13870)
!13895 = !DILocation(line: 408, column: 6, scope: !13403, inlinedAt: !13870)
!13896 = !DILocation(line: 408, column: 34, scope: !13403, inlinedAt: !13870)
!13897 = !DILocation(line: 408, column: 37, scope: !13403, inlinedAt: !13870)
!13898 = !DILocation(line: 408, column: 43, scope: !13403, inlinedAt: !13870)
!13899 = !DILocation(line: 408, column: 6, scope: !13314, inlinedAt: !13870)
!13900 = !DILocation(line: 409, column: 13, scope: !13403, inlinedAt: !13870)
!13901 = !DILocation(line: 409, column: 20, scope: !13403, inlinedAt: !13870)
!13902 = !DILocation(line: 409, column: 3, scope: !13403, inlinedAt: !13870)
!13903 = !DILocation(line: 410, column: 32, scope: !13413, inlinedAt: !13870)
!13904 = !DILocation(line: 410, column: 38, scope: !13413, inlinedAt: !13870)
!13905 = !DILocation(line: 410, column: 11, scope: !13413, inlinedAt: !13870)
!13906 = !DILocation(line: 410, column: 57, scope: !13413, inlinedAt: !13870)
!13907 = !DILocation(line: 411, column: 4, scope: !13413, inlinedAt: !13870)
!13908 = !DILocation(line: 411, column: 44, scope: !13413, inlinedAt: !13870)
!13909 = !DILocation(line: 412, column: 25, scope: !13413, inlinedAt: !13870)
!13910 = !DILocation(line: 412, column: 31, scope: !13413, inlinedAt: !13870)
!13911 = !DILocation(line: 412, column: 4, scope: !13413, inlinedAt: !13870)
!13912 = !DILocation(line: 412, column: 50, scope: !13413, inlinedAt: !13870)
!13913 = !DILocation(line: 413, column: 4, scope: !13413, inlinedAt: !13870)
!13914 = !DILocation(line: 410, column: 11, scope: !13403, inlinedAt: !13870)
!13915 = !DILocation(line: 414, column: 18, scope: !13413, inlinedAt: !13870)
!13916 = !DILocation(line: 414, column: 10, scope: !13413, inlinedAt: !13870)
!13917 = !DILocation(line: 414, column: 24, scope: !13413, inlinedAt: !13870)
!13918 = !DILocation(line: 414, column: 30, scope: !13413, inlinedAt: !13870)
!13919 = !DILocation(line: 414, column: 22, scope: !13413, inlinedAt: !13870)
!13920 = !DILocation(line: 414, column: 41, scope: !13413, inlinedAt: !13870)
!13921 = !DILocation(line: 414, column: 47, scope: !13413, inlinedAt: !13870)
!13922 = !DILocation(line: 414, column: 3, scope: !13413, inlinedAt: !13870)
!13923 = !DILocation(line: 416, column: 16, scope: !13413, inlinedAt: !13870)
!13924 = !DILocation(line: 416, column: 21, scope: !13413, inlinedAt: !13870)
!13925 = !DILocation(line: 416, column: 28, scope: !13413, inlinedAt: !13870)
!13926 = !DILocation(line: 416, column: 3, scope: !13413, inlinedAt: !13870)
!13927 = !DILocation(line: 3739, column: 1, scope: !13866)
!13928 = distinct !DISubprogram(name: "svd_to_vic", scope: !3, file: !3, line: 3651, type: !7645, scopeLine: 3652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13929 = !DILocalVariable(name: "svd", arg: 1, scope: !13928, file: !3, line: 3651, type: !375)
!13930 = !DILocation(line: 3651, column: 25, scope: !13928)
!13931 = !DILocation(line: 3654, column: 7, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13928, file: !3, line: 3654, column: 6)
!13933 = !DILocation(line: 3654, column: 11, scope: !13932)
!13934 = !DILocation(line: 3654, column: 16, scope: !13932)
!13935 = !DILocation(line: 3654, column: 20, scope: !13932)
!13936 = !DILocation(line: 3654, column: 24, scope: !13932)
!13937 = !DILocation(line: 3654, column: 31, scope: !13932)
!13938 = !DILocation(line: 3654, column: 35, scope: !13932)
!13939 = !DILocation(line: 3654, column: 39, scope: !13932)
!13940 = !DILocation(line: 3654, column: 46, scope: !13932)
!13941 = !DILocation(line: 3654, column: 49, scope: !13932)
!13942 = !DILocation(line: 3654, column: 53, scope: !13932)
!13943 = !DILocation(line: 3654, column: 6, scope: !13928)
!13944 = !DILocation(line: 3655, column: 10, scope: !13932)
!13945 = !DILocation(line: 3655, column: 14, scope: !13932)
!13946 = !DILocation(line: 3655, column: 3, scope: !13932)
!13947 = !DILocation(line: 3657, column: 9, scope: !13928)
!13948 = !DILocation(line: 3657, column: 2, scope: !13928)
!13949 = !DILocation(line: 3658, column: 1, scope: !13928)
!13950 = distinct !DISubprogram(name: "__set_bit", scope: !13951, file: !13951, line: 25, type: !13952, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13951 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-non-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13952 = !DISubroutineType(types: !13953)
!13953 = !{null, !593, !13954}
!13954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13955, size: 64)
!13955 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !574)
!13956 = !DILocalVariable(name: "nr", arg: 1, scope: !13957, file: !10571, line: 66, type: !593)
!13957 = distinct !DISubprogram(name: "arch___set_bit", scope: !10571, file: !10571, line: 66, type: !13952, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13958 = !DILocation(line: 66, column: 21, scope: !13957, inlinedAt: !13959)
!13959 = distinct !DILocation(line: 28, column: 2, scope: !13950)
!13960 = !DILocalVariable(name: "addr", arg: 2, scope: !13957, file: !10571, line: 66, type: !13954)
!13961 = !DILocation(line: 66, column: 49, scope: !13957, inlinedAt: !13959)
!13962 = !DILocalVariable(name: "v", arg: 1, scope: !13963, file: !13964, line: 39, type: !13967)
!13963 = distinct !DISubprogram(name: "instrument_write", scope: !13964, file: !13964, line: 39, type: !13965, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13964 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13965 = !DISubroutineType(types: !13966)
!13966 = !{null, !13967, !1285}
!13967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13968, size: 64)
!13968 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13969)
!13969 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!13970 = !DILocation(line: 39, column: 67, scope: !13963, inlinedAt: !13971)
!13971 = distinct !DILocation(line: 27, column: 2, scope: !13950)
!13972 = !DILocalVariable(name: "size", arg: 2, scope: !13963, file: !13964, line: 39, type: !1285)
!13973 = !DILocation(line: 39, column: 77, scope: !13963, inlinedAt: !13971)
!13974 = !DILocalVariable(name: "nr", arg: 1, scope: !13950, file: !13951, line: 25, type: !593)
!13975 = !DILocation(line: 25, column: 35, scope: !13950)
!13976 = !DILocalVariable(name: "addr", arg: 2, scope: !13950, file: !13951, line: 25, type: !13954)
!13977 = !DILocation(line: 25, column: 63, scope: !13950)
!13978 = !DILocation(line: 27, column: 19, scope: !13950)
!13979 = !DILocation(line: 27, column: 26, scope: !13950)
!13980 = !DILocation(line: 27, column: 24, scope: !13950)
!13981 = !DILocation(line: 41, column: 20, scope: !13963, inlinedAt: !13971)
!13982 = !DILocation(line: 41, column: 23, scope: !13963, inlinedAt: !13971)
!13983 = !DILocation(line: 41, column: 2, scope: !13963, inlinedAt: !13971)
!13984 = !DILocation(line: 42, column: 2, scope: !13963, inlinedAt: !13971)
!13985 = !DILocation(line: 28, column: 17, scope: !13950)
!13986 = !DILocation(line: 28, column: 21, scope: !13950)
!13987 = !DILocation(line: 68, column: 44, scope: !13957, inlinedAt: !13959)
!13988 = !DILocation(line: 68, column: 56, scope: !13957, inlinedAt: !13959)
!13989 = !DILocation(line: 68, column: 2, scope: !13957, inlinedAt: !13959)
!13990 = !{i32 -2146876998}
!13991 = !DILocation(line: 29, column: 1, scope: !13950)
!13992 = distinct !DISubprogram(name: "kasan_check_write", scope: !13993, file: !13993, line: 38, type: !13994, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!13993 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13994 = !DISubroutineType(types: !13995)
!13995 = !{!559, !13967, !7}
!13996 = !DILocalVariable(name: "p", arg: 1, scope: !13992, file: !13993, line: 38, type: !13967)
!13997 = !DILocation(line: 38, column: 59, scope: !13992)
!13998 = !DILocalVariable(name: "size", arg: 2, scope: !13992, file: !13993, line: 38, type: !7)
!13999 = !DILocation(line: 38, column: 75, scope: !13992)
!14000 = !DILocation(line: 40, column: 2, scope: !13992)
!14001 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14002, file: !14002, line: 178, type: !14003, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14002 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14003 = !DISubroutineType(types: !14004)
!14004 = !{null, !13967, !1285, !139}
!14005 = !DILocalVariable(name: "ptr", arg: 1, scope: !14001, file: !14002, line: 178, type: !13967)
!14006 = !DILocation(line: 178, column: 60, scope: !14001)
!14007 = !DILocalVariable(name: "size", arg: 2, scope: !14001, file: !14002, line: 178, type: !1285)
!14008 = !DILocation(line: 178, column: 72, scope: !14001)
!14009 = !DILocalVariable(name: "type", arg: 3, scope: !14001, file: !14002, line: 179, type: !139)
!14010 = !DILocation(line: 179, column: 15, scope: !14001)
!14011 = !DILocation(line: 179, column: 23, scope: !14001)
!14012 = distinct !DISubprogram(name: "add_hdmi_mandatory_stereo_modes", scope: !3, file: !3, line: 3830, type: !1160, scopeLine: 3831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14013 = !DILocalVariable(name: "connector", arg: 1, scope: !14012, file: !3, line: 3830, type: !1162)
!14014 = !DILocation(line: 3830, column: 66, scope: !14012)
!14015 = !DILocalVariable(name: "dev", scope: !14012, file: !3, line: 3832, type: !1166)
!14016 = !DILocation(line: 3832, column: 21, scope: !14012)
!14017 = !DILocation(line: 3832, column: 27, scope: !14012)
!14018 = !DILocation(line: 3832, column: 38, scope: !14012)
!14019 = !DILocalVariable(name: "mode", scope: !14012, file: !3, line: 3833, type: !594)
!14020 = !DILocation(line: 3833, column: 33, scope: !14012)
!14021 = !DILocalVariable(name: "stereo_modes", scope: !14012, file: !3, line: 3834, type: !562)
!14022 = !DILocation(line: 3834, column: 19, scope: !14012)
!14023 = !DILocalVariable(name: "modes", scope: !14012, file: !3, line: 3835, type: !139)
!14024 = !DILocation(line: 3835, column: 6, scope: !14012)
!14025 = !DILocalVariable(name: "i", scope: !14012, file: !3, line: 3835, type: !139)
!14026 = !DILocation(line: 3835, column: 17, scope: !14012)
!14027 = !DILocation(line: 3837, column: 2, scope: !14012)
!14028 = !DILocalVariable(name: "__mptr", scope: !14029, file: !3, line: 3839, type: !368)
!14029 = distinct !DILexicalBlock(scope: !14030, file: !3, line: 3839, column: 2)
!14030 = distinct !DILexicalBlock(scope: !14012, file: !3, line: 3839, column: 2)
!14031 = !DILocation(line: 3839, column: 2, scope: !14029)
!14032 = !DILocation(line: 3839, column: 2, scope: !14033)
!14033 = distinct !DILexicalBlock(scope: !14029, file: !3, line: 3839, column: 2)
!14034 = !DILocation(line: 3839, column: 2, scope: !14030)
!14035 = !DILocation(line: 3839, column: 2, scope: !14036)
!14036 = distinct !DILexicalBlock(scope: !14030, file: !3, line: 3839, column: 2)
!14037 = !DILocation(line: 3840, column: 10, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14039, file: !3, line: 3840, column: 3)
!14039 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 3839, column: 60)
!14040 = !DILocation(line: 3840, column: 8, scope: !14038)
!14041 = !DILocation(line: 3840, column: 15, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14038, file: !3, line: 3840, column: 3)
!14043 = !DILocation(line: 3840, column: 17, scope: !14042)
!14044 = !DILocation(line: 3840, column: 3, scope: !14038)
!14045 = !DILocalVariable(name: "mandatory", scope: !14046, file: !3, line: 3841, type: !14047)
!14046 = distinct !DILexicalBlock(scope: !14042, file: !3, line: 3840, column: 60)
!14047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!14048 = !DILocation(line: 3841, column: 40, scope: !14046)
!14049 = !DILocalVariable(name: "new_mode", scope: !14046, file: !3, line: 3842, type: !525)
!14050 = !DILocation(line: 3842, column: 29, scope: !14046)
!14051 = !DILocation(line: 3844, column: 32, scope: !14052)
!14052 = distinct !DILexicalBlock(scope: !14046, file: !3, line: 3844, column: 8)
!14053 = !DILocation(line: 3845, column: 35, scope: !14052)
!14054 = !DILocation(line: 3845, column: 12, scope: !14052)
!14055 = !DILocation(line: 3844, column: 9, scope: !14052)
!14056 = !DILocation(line: 3844, column: 8, scope: !14046)
!14057 = !DILocation(line: 3846, column: 5, scope: !14052)
!14058 = !DILocation(line: 3848, column: 40, scope: !14046)
!14059 = !DILocation(line: 3848, column: 17, scope: !14046)
!14060 = !DILocation(line: 3848, column: 14, scope: !14046)
!14061 = !DILocation(line: 3849, column: 34, scope: !14046)
!14062 = !DILocation(line: 3849, column: 39, scope: !14046)
!14063 = !DILocation(line: 3849, column: 15, scope: !14046)
!14064 = !DILocation(line: 3849, column: 13, scope: !14046)
!14065 = !DILocation(line: 3850, column: 9, scope: !14066)
!14066 = distinct !DILexicalBlock(scope: !14046, file: !3, line: 3850, column: 8)
!14067 = !DILocation(line: 3850, column: 8, scope: !14046)
!14068 = !DILocation(line: 3851, column: 5, scope: !14066)
!14069 = !DILocation(line: 3853, column: 23, scope: !14046)
!14070 = !DILocation(line: 3853, column: 34, scope: !14046)
!14071 = !DILocation(line: 3853, column: 4, scope: !14046)
!14072 = !DILocation(line: 3853, column: 14, scope: !14046)
!14073 = !DILocation(line: 3853, column: 20, scope: !14046)
!14074 = !DILocation(line: 3854, column: 19, scope: !14046)
!14075 = !DILocation(line: 3854, column: 29, scope: !14046)
!14076 = !DILocation(line: 3854, column: 4, scope: !14046)
!14077 = !DILocation(line: 3855, column: 9, scope: !14046)
!14078 = !DILocation(line: 3856, column: 3, scope: !14046)
!14079 = !DILocation(line: 3840, column: 56, scope: !14042)
!14080 = !DILocation(line: 3840, column: 3, scope: !14042)
!14081 = distinct !{!14081, !14044, !14082}
!14082 = !DILocation(line: 3856, column: 3, scope: !14038)
!14083 = !DILocation(line: 3857, column: 2, scope: !14039)
!14084 = !DILocalVariable(name: "__mptr", scope: !14085, file: !3, line: 3839, type: !368)
!14085 = distinct !DILexicalBlock(scope: !14036, file: !3, line: 3839, column: 2)
!14086 = !DILocation(line: 3839, column: 2, scope: !14085)
!14087 = !DILocation(line: 3839, column: 2, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 3839, column: 2)
!14089 = distinct !{!14089, !14034, !14090}
!14090 = !DILocation(line: 3857, column: 2, scope: !14030)
!14091 = !DILocation(line: 3859, column: 35, scope: !14012)
!14092 = !DILocation(line: 3859, column: 46, scope: !14012)
!14093 = !DILocation(line: 3859, column: 2, scope: !14012)
!14094 = !DILocation(line: 3861, column: 9, scope: !14012)
!14095 = !DILocation(line: 3861, column: 2, scope: !14012)
!14096 = distinct !DISubprogram(name: "add_hdmi_mode", scope: !3, file: !3, line: 3864, type: !14097, scopeLine: 3865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{!139, !1162, !375}
!14099 = !DILocalVariable(name: "connector", arg: 1, scope: !14096, file: !3, line: 3864, type: !1162)
!14100 = !DILocation(line: 3864, column: 48, scope: !14096)
!14101 = !DILocalVariable(name: "vic", arg: 2, scope: !14096, file: !3, line: 3864, type: !375)
!14102 = !DILocation(line: 3864, column: 62, scope: !14096)
!14103 = !DILocalVariable(name: "dev", scope: !14096, file: !3, line: 3866, type: !1166)
!14104 = !DILocation(line: 3866, column: 21, scope: !14096)
!14105 = !DILocation(line: 3866, column: 27, scope: !14096)
!14106 = !DILocation(line: 3866, column: 38, scope: !14096)
!14107 = !DILocalVariable(name: "newmode", scope: !14096, file: !3, line: 3867, type: !525)
!14108 = !DILocation(line: 3867, column: 27, scope: !14096)
!14109 = !DILocation(line: 3869, column: 26, scope: !14110)
!14110 = distinct !DILexicalBlock(scope: !14096, file: !3, line: 3869, column: 6)
!14111 = !DILocation(line: 3869, column: 7, scope: !14110)
!14112 = !DILocation(line: 3869, column: 6, scope: !14096)
!14113 = !DILocation(line: 3870, column: 3, scope: !14114)
!14114 = distinct !DILexicalBlock(scope: !14110, file: !3, line: 3869, column: 32)
!14115 = !DILocation(line: 3871, column: 3, scope: !14114)
!14116 = !DILocation(line: 3874, column: 31, scope: !14096)
!14117 = !DILocation(line: 3874, column: 51, scope: !14096)
!14118 = !DILocation(line: 3874, column: 37, scope: !14096)
!14119 = !DILocation(line: 3874, column: 12, scope: !14096)
!14120 = !DILocation(line: 3874, column: 10, scope: !14096)
!14121 = !DILocation(line: 3875, column: 7, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14096, file: !3, line: 3875, column: 6)
!14123 = !DILocation(line: 3875, column: 6, scope: !14096)
!14124 = !DILocation(line: 3876, column: 3, scope: !14122)
!14125 = !DILocation(line: 3878, column: 22, scope: !14096)
!14126 = !DILocation(line: 3878, column: 33, scope: !14096)
!14127 = !DILocation(line: 3878, column: 2, scope: !14096)
!14128 = !DILocation(line: 3880, column: 2, scope: !14096)
!14129 = !DILocation(line: 3881, column: 1, scope: !14096)
!14130 = distinct !DISubprogram(name: "add_3d_struct_modes", scope: !3, file: !3, line: 3883, type: !14131, scopeLine: 3885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14131 = !DISubroutineType(types: !14132)
!14132 = !{!139, !1162, !530, !576, !375, !375}
!14133 = !DILocalVariable(name: "connector", arg: 1, scope: !14130, file: !3, line: 3883, type: !1162)
!14134 = !DILocation(line: 3883, column: 54, scope: !14130)
!14135 = !DILocalVariable(name: "structure", arg: 2, scope: !14130, file: !3, line: 3883, type: !530)
!14136 = !DILocation(line: 3883, column: 69, scope: !14130)
!14137 = !DILocalVariable(name: "video_db", arg: 3, scope: !14130, file: !3, line: 3884, type: !576)
!14138 = !DILocation(line: 3884, column: 21, scope: !14130)
!14139 = !DILocalVariable(name: "video_len", arg: 4, scope: !14130, file: !3, line: 3884, type: !375)
!14140 = !DILocation(line: 3884, column: 34, scope: !14130)
!14141 = !DILocalVariable(name: "video_index", arg: 5, scope: !14130, file: !3, line: 3884, type: !375)
!14142 = !DILocation(line: 3884, column: 48, scope: !14130)
!14143 = !DILocalVariable(name: "newmode", scope: !14130, file: !3, line: 3886, type: !525)
!14144 = !DILocation(line: 3886, column: 27, scope: !14130)
!14145 = !DILocalVariable(name: "modes", scope: !14130, file: !3, line: 3887, type: !139)
!14146 = !DILocation(line: 3887, column: 6, scope: !14130)
!14147 = !DILocation(line: 3889, column: 6, scope: !14148)
!14148 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 3889, column: 6)
!14149 = !DILocation(line: 3889, column: 16, scope: !14148)
!14150 = !DILocation(line: 3889, column: 6, scope: !14130)
!14151 = !DILocation(line: 3890, column: 45, scope: !14152)
!14152 = distinct !DILexicalBlock(scope: !14148, file: !3, line: 3889, column: 28)
!14153 = !DILocation(line: 3890, column: 56, scope: !14152)
!14154 = !DILocation(line: 3891, column: 10, scope: !14152)
!14155 = !DILocation(line: 3892, column: 10, scope: !14152)
!14156 = !DILocation(line: 3890, column: 13, scope: !14152)
!14157 = !DILocation(line: 3890, column: 11, scope: !14152)
!14158 = !DILocation(line: 3893, column: 7, scope: !14159)
!14159 = distinct !DILexicalBlock(scope: !14152, file: !3, line: 3893, column: 7)
!14160 = !DILocation(line: 3893, column: 7, scope: !14152)
!14161 = !DILocation(line: 3894, column: 4, scope: !14162)
!14162 = distinct !DILexicalBlock(scope: !14159, file: !3, line: 3893, column: 16)
!14163 = !DILocation(line: 3894, column: 13, scope: !14162)
!14164 = !DILocation(line: 3894, column: 19, scope: !14162)
!14165 = !DILocation(line: 3895, column: 24, scope: !14162)
!14166 = !DILocation(line: 3895, column: 35, scope: !14162)
!14167 = !DILocation(line: 3895, column: 4, scope: !14162)
!14168 = !DILocation(line: 3896, column: 9, scope: !14162)
!14169 = !DILocation(line: 3897, column: 3, scope: !14162)
!14170 = !DILocation(line: 3898, column: 2, scope: !14152)
!14171 = !DILocation(line: 3899, column: 6, scope: !14172)
!14172 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 3899, column: 6)
!14173 = !DILocation(line: 3899, column: 16, scope: !14172)
!14174 = !DILocation(line: 3899, column: 6, scope: !14130)
!14175 = !DILocation(line: 3900, column: 45, scope: !14176)
!14176 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3899, column: 28)
!14177 = !DILocation(line: 3900, column: 56, scope: !14176)
!14178 = !DILocation(line: 3901, column: 10, scope: !14176)
!14179 = !DILocation(line: 3902, column: 10, scope: !14176)
!14180 = !DILocation(line: 3900, column: 13, scope: !14176)
!14181 = !DILocation(line: 3900, column: 11, scope: !14176)
!14182 = !DILocation(line: 3903, column: 7, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14176, file: !3, line: 3903, column: 7)
!14184 = !DILocation(line: 3903, column: 7, scope: !14176)
!14185 = !DILocation(line: 3904, column: 4, scope: !14186)
!14186 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 3903, column: 16)
!14187 = !DILocation(line: 3904, column: 13, scope: !14186)
!14188 = !DILocation(line: 3904, column: 19, scope: !14186)
!14189 = !DILocation(line: 3905, column: 24, scope: !14186)
!14190 = !DILocation(line: 3905, column: 35, scope: !14186)
!14191 = !DILocation(line: 3905, column: 4, scope: !14186)
!14192 = !DILocation(line: 3906, column: 9, scope: !14186)
!14193 = !DILocation(line: 3907, column: 3, scope: !14186)
!14194 = !DILocation(line: 3908, column: 2, scope: !14176)
!14195 = !DILocation(line: 3909, column: 6, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14130, file: !3, line: 3909, column: 6)
!14197 = !DILocation(line: 3909, column: 16, scope: !14196)
!14198 = !DILocation(line: 3909, column: 6, scope: !14130)
!14199 = !DILocation(line: 3910, column: 45, scope: !14200)
!14200 = distinct !DILexicalBlock(scope: !14196, file: !3, line: 3909, column: 28)
!14201 = !DILocation(line: 3910, column: 56, scope: !14200)
!14202 = !DILocation(line: 3911, column: 10, scope: !14200)
!14203 = !DILocation(line: 3912, column: 10, scope: !14200)
!14204 = !DILocation(line: 3910, column: 13, scope: !14200)
!14205 = !DILocation(line: 3910, column: 11, scope: !14200)
!14206 = !DILocation(line: 3913, column: 7, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14200, file: !3, line: 3913, column: 7)
!14208 = !DILocation(line: 3913, column: 7, scope: !14200)
!14209 = !DILocation(line: 3914, column: 4, scope: !14210)
!14210 = distinct !DILexicalBlock(scope: !14207, file: !3, line: 3913, column: 16)
!14211 = !DILocation(line: 3914, column: 13, scope: !14210)
!14212 = !DILocation(line: 3914, column: 19, scope: !14210)
!14213 = !DILocation(line: 3915, column: 24, scope: !14210)
!14214 = !DILocation(line: 3915, column: 35, scope: !14210)
!14215 = !DILocation(line: 3915, column: 4, scope: !14210)
!14216 = !DILocation(line: 3916, column: 9, scope: !14210)
!14217 = !DILocation(line: 3917, column: 3, scope: !14210)
!14218 = !DILocation(line: 3918, column: 2, scope: !14200)
!14219 = !DILocation(line: 3920, column: 9, scope: !14130)
!14220 = !DILocation(line: 3920, column: 2, scope: !14130)
!14221 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !14222, file: !14222, line: 33, type: !14223, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14222 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!14223 = !DISubroutineType(types: !14224)
!14224 = !{null, !565}
!14225 = !DILocalVariable(name: "list", arg: 1, scope: !14221, file: !14222, line: 33, type: !565)
!14226 = !DILocation(line: 33, column: 53, scope: !14221)
!14227 = !DILocation(line: 35, column: 2, scope: !14221)
!14228 = !DILocation(line: 35, column: 2, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14221, file: !14222, line: 35, column: 2)
!14230 = !DILocation(line: 35, column: 2, scope: !14231)
!14231 = distinct !DILexicalBlock(scope: !14229, file: !14222, line: 35, column: 2)
!14232 = !DILocation(line: 35, column: 2, scope: !14233)
!14233 = distinct !DILexicalBlock(scope: !14229, file: !14222, line: 35, column: 2)
!14234 = !DILocation(line: 36, column: 15, scope: !14221)
!14235 = !DILocation(line: 36, column: 2, scope: !14221)
!14236 = !DILocation(line: 36, column: 8, scope: !14221)
!14237 = !DILocation(line: 36, column: 13, scope: !14221)
!14238 = !DILocation(line: 37, column: 1, scope: !14221)
!14239 = distinct !DISubprogram(name: "stereo_match_mandatory", scope: !3, file: !3, line: 3819, type: !14240, scopeLine: 3821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14240 = !DISubroutineType(types: !14241)
!14241 = !{!559, !594, !14047}
!14242 = !DILocalVariable(name: "mode", arg: 1, scope: !14239, file: !3, line: 3819, type: !594)
!14243 = !DILocation(line: 3819, column: 55, scope: !14239)
!14244 = !DILocalVariable(name: "stereo_mode", arg: 2, scope: !14239, file: !3, line: 3820, type: !14047)
!14245 = !DILocation(line: 3820, column: 46, scope: !14239)
!14246 = !DILocalVariable(name: "interlaced", scope: !14239, file: !3, line: 3822, type: !7)
!14247 = !DILocation(line: 3822, column: 15, scope: !14239)
!14248 = !DILocation(line: 3822, column: 28, scope: !14239)
!14249 = !DILocation(line: 3822, column: 34, scope: !14239)
!14250 = !DILocation(line: 3822, column: 40, scope: !14239)
!14251 = !DILocation(line: 3824, column: 9, scope: !14239)
!14252 = !DILocation(line: 3824, column: 15, scope: !14239)
!14253 = !DILocation(line: 3824, column: 27, scope: !14239)
!14254 = !DILocation(line: 3824, column: 40, scope: !14239)
!14255 = !DILocation(line: 3824, column: 24, scope: !14239)
!14256 = !DILocation(line: 3824, column: 46, scope: !14239)
!14257 = !DILocation(line: 3825, column: 9, scope: !14239)
!14258 = !DILocation(line: 3825, column: 15, scope: !14239)
!14259 = !DILocation(line: 3825, column: 27, scope: !14239)
!14260 = !DILocation(line: 3825, column: 40, scope: !14239)
!14261 = !DILocation(line: 3825, column: 24, scope: !14239)
!14262 = !DILocation(line: 3825, column: 47, scope: !14239)
!14263 = !DILocation(line: 3826, column: 9, scope: !14239)
!14264 = !DILocation(line: 3826, column: 24, scope: !14239)
!14265 = !DILocation(line: 3826, column: 37, scope: !14239)
!14266 = !DILocation(line: 3826, column: 43, scope: !14239)
!14267 = !DILocation(line: 3826, column: 20, scope: !14239)
!14268 = !DILocation(line: 3826, column: 70, scope: !14239)
!14269 = !DILocation(line: 3827, column: 27, scope: !14239)
!14270 = !DILocation(line: 3827, column: 9, scope: !14239)
!14271 = !DILocation(line: 3827, column: 36, scope: !14239)
!14272 = !DILocation(line: 3827, column: 49, scope: !14239)
!14273 = !DILocation(line: 3827, column: 33, scope: !14239)
!14274 = !DILocation(line: 0, scope: !14239)
!14275 = !DILocation(line: 3824, column: 2, scope: !14239)
!14276 = distinct !DISubprogram(name: "list_add_tail", scope: !14222, file: !14222, line: 98, type: !14277, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14277 = !DISubroutineType(types: !14278)
!14278 = !{null, !565, !565}
!14279 = !DILocalVariable(name: "new", arg: 1, scope: !14276, file: !14222, line: 98, type: !565)
!14280 = !DILocation(line: 98, column: 52, scope: !14276)
!14281 = !DILocalVariable(name: "head", arg: 2, scope: !14276, file: !14222, line: 98, type: !565)
!14282 = !DILocation(line: 98, column: 75, scope: !14276)
!14283 = !DILocation(line: 100, column: 13, scope: !14276)
!14284 = !DILocation(line: 100, column: 18, scope: !14276)
!14285 = !DILocation(line: 100, column: 24, scope: !14276)
!14286 = !DILocation(line: 100, column: 30, scope: !14276)
!14287 = !DILocation(line: 100, column: 2, scope: !14276)
!14288 = !DILocation(line: 101, column: 1, scope: !14276)
!14289 = distinct !DISubprogram(name: "list_splice_tail", scope: !14222, file: !14222, line: 464, type: !14277, scopeLine: 466, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14290 = !DILocalVariable(name: "list", arg: 1, scope: !14289, file: !14222, line: 464, type: !565)
!14291 = !DILocation(line: 464, column: 55, scope: !14289)
!14292 = !DILocalVariable(name: "head", arg: 2, scope: !14289, file: !14222, line: 465, type: !565)
!14293 = !DILocation(line: 465, column: 23, scope: !14289)
!14294 = !DILocation(line: 467, column: 18, scope: !14295)
!14295 = distinct !DILexicalBlock(scope: !14289, file: !14222, line: 467, column: 6)
!14296 = !DILocation(line: 467, column: 7, scope: !14295)
!14297 = !DILocation(line: 467, column: 6, scope: !14289)
!14298 = !DILocation(line: 468, column: 17, scope: !14295)
!14299 = !DILocation(line: 468, column: 23, scope: !14295)
!14300 = !DILocation(line: 468, column: 29, scope: !14295)
!14301 = !DILocation(line: 468, column: 35, scope: !14295)
!14302 = !DILocation(line: 468, column: 3, scope: !14295)
!14303 = !DILocation(line: 469, column: 1, scope: !14289)
!14304 = distinct !DISubprogram(name: "__list_add", scope: !14222, file: !14222, line: 63, type: !14305, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14305 = !DISubroutineType(types: !14306)
!14306 = !{null, !565, !565, !565}
!14307 = !DILocalVariable(name: "new", arg: 1, scope: !14304, file: !14222, line: 63, type: !565)
!14308 = !DILocation(line: 63, column: 49, scope: !14304)
!14309 = !DILocalVariable(name: "prev", arg: 2, scope: !14304, file: !14222, line: 64, type: !565)
!14310 = !DILocation(line: 64, column: 28, scope: !14304)
!14311 = !DILocalVariable(name: "next", arg: 3, scope: !14304, file: !14222, line: 65, type: !565)
!14312 = !DILocation(line: 65, column: 28, scope: !14304)
!14313 = !DILocation(line: 67, column: 24, scope: !14314)
!14314 = distinct !DILexicalBlock(scope: !14304, file: !14222, line: 67, column: 6)
!14315 = !DILocation(line: 67, column: 29, scope: !14314)
!14316 = !DILocation(line: 67, column: 35, scope: !14314)
!14317 = !DILocation(line: 67, column: 7, scope: !14314)
!14318 = !DILocation(line: 67, column: 6, scope: !14304)
!14319 = !DILocation(line: 68, column: 3, scope: !14314)
!14320 = !DILocation(line: 70, column: 15, scope: !14304)
!14321 = !DILocation(line: 70, column: 2, scope: !14304)
!14322 = !DILocation(line: 70, column: 8, scope: !14304)
!14323 = !DILocation(line: 70, column: 13, scope: !14304)
!14324 = !DILocation(line: 71, column: 14, scope: !14304)
!14325 = !DILocation(line: 71, column: 2, scope: !14304)
!14326 = !DILocation(line: 71, column: 7, scope: !14304)
!14327 = !DILocation(line: 71, column: 12, scope: !14304)
!14328 = !DILocation(line: 72, column: 14, scope: !14304)
!14329 = !DILocation(line: 72, column: 2, scope: !14304)
!14330 = !DILocation(line: 72, column: 7, scope: !14304)
!14331 = !DILocation(line: 72, column: 12, scope: !14304)
!14332 = !DILocation(line: 73, column: 2, scope: !14304)
!14333 = !DILocation(line: 73, column: 2, scope: !14334)
!14334 = distinct !DILexicalBlock(scope: !14304, file: !14222, line: 73, column: 2)
!14335 = !DILocation(line: 73, column: 2, scope: !14336)
!14336 = distinct !DILexicalBlock(scope: !14334, file: !14222, line: 73, column: 2)
!14337 = !DILocation(line: 73, column: 2, scope: !14338)
!14338 = distinct !DILexicalBlock(scope: !14334, file: !14222, line: 73, column: 2)
!14339 = !DILocation(line: 74, column: 1, scope: !14304)
!14340 = distinct !DISubprogram(name: "__list_add_valid", scope: !14222, file: !14222, line: 45, type: !14341, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!559, !565, !565, !565}
!14343 = !DILocalVariable(name: "new", arg: 1, scope: !14340, file: !14222, line: 45, type: !565)
!14344 = !DILocation(line: 45, column: 55, scope: !14340)
!14345 = !DILocalVariable(name: "prev", arg: 2, scope: !14340, file: !14222, line: 46, type: !565)
!14346 = !DILocation(line: 46, column: 23, scope: !14340)
!14347 = !DILocalVariable(name: "next", arg: 3, scope: !14340, file: !14222, line: 47, type: !565)
!14348 = !DILocation(line: 47, column: 23, scope: !14340)
!14349 = !DILocation(line: 49, column: 2, scope: !14340)
!14350 = distinct !DISubprogram(name: "list_empty", scope: !14222, file: !14222, line: 280, type: !14351, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14351 = !DISubroutineType(types: !14352)
!14352 = !{!139, !14353}
!14353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14354, size: 64)
!14354 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !562)
!14355 = !DILocalVariable(name: "head", arg: 1, scope: !14350, file: !14222, line: 280, type: !14353)
!14356 = !DILocation(line: 280, column: 54, scope: !14350)
!14357 = !DILocation(line: 282, column: 9, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14350, file: !14222, line: 282, column: 9)
!14359 = !DILocation(line: 282, column: 9, scope: !14360)
!14360 = distinct !DILexicalBlock(scope: !14358, file: !14222, line: 282, column: 9)
!14361 = !DILocation(line: 282, column: 34, scope: !14350)
!14362 = !DILocation(line: 282, column: 31, scope: !14350)
!14363 = !DILocation(line: 282, column: 2, scope: !14350)
!14364 = distinct !DISubprogram(name: "__list_splice", scope: !14222, file: !14222, line: 433, type: !14365, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14365 = !DISubroutineType(types: !14366)
!14366 = !{null, !14353, !565, !565}
!14367 = !DILocalVariable(name: "list", arg: 1, scope: !14364, file: !14222, line: 433, type: !14353)
!14368 = !DILocation(line: 433, column: 58, scope: !14364)
!14369 = !DILocalVariable(name: "prev", arg: 2, scope: !14364, file: !14222, line: 434, type: !565)
!14370 = !DILocation(line: 434, column: 24, scope: !14364)
!14371 = !DILocalVariable(name: "next", arg: 3, scope: !14364, file: !14222, line: 435, type: !565)
!14372 = !DILocation(line: 435, column: 24, scope: !14364)
!14373 = !DILocalVariable(name: "first", scope: !14364, file: !14222, line: 437, type: !565)
!14374 = !DILocation(line: 437, column: 20, scope: !14364)
!14375 = !DILocation(line: 437, column: 28, scope: !14364)
!14376 = !DILocation(line: 437, column: 34, scope: !14364)
!14377 = !DILocalVariable(name: "last", scope: !14364, file: !14222, line: 438, type: !565)
!14378 = !DILocation(line: 438, column: 20, scope: !14364)
!14379 = !DILocation(line: 438, column: 27, scope: !14364)
!14380 = !DILocation(line: 438, column: 33, scope: !14364)
!14381 = !DILocation(line: 440, column: 16, scope: !14364)
!14382 = !DILocation(line: 440, column: 2, scope: !14364)
!14383 = !DILocation(line: 440, column: 9, scope: !14364)
!14384 = !DILocation(line: 440, column: 14, scope: !14364)
!14385 = !DILocation(line: 441, column: 15, scope: !14364)
!14386 = !DILocation(line: 441, column: 2, scope: !14364)
!14387 = !DILocation(line: 441, column: 8, scope: !14364)
!14388 = !DILocation(line: 441, column: 13, scope: !14364)
!14389 = !DILocation(line: 443, column: 15, scope: !14364)
!14390 = !DILocation(line: 443, column: 2, scope: !14364)
!14391 = !DILocation(line: 443, column: 8, scope: !14364)
!14392 = !DILocation(line: 443, column: 13, scope: !14364)
!14393 = !DILocation(line: 444, column: 15, scope: !14364)
!14394 = !DILocation(line: 444, column: 2, scope: !14364)
!14395 = !DILocation(line: 444, column: 8, scope: !14364)
!14396 = !DILocation(line: 444, column: 13, scope: !14364)
!14397 = !DILocation(line: 445, column: 1, scope: !14364)
!14398 = distinct !DISubprogram(name: "drm_match_hdmi_mode", scope: !3, file: !3, line: 3547, type: !7441, scopeLine: 3548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14399 = !DILocalVariable(name: "to_match", arg: 1, scope: !14398, file: !3, line: 3547, type: !594)
!14400 = !DILocation(line: 3547, column: 62, scope: !14398)
!14401 = !DILocalVariable(name: "match_flags", scope: !14398, file: !3, line: 3549, type: !7)
!14402 = !DILocation(line: 3549, column: 15, scope: !14398)
!14403 = !DILocalVariable(name: "vic", scope: !14398, file: !3, line: 3550, type: !375)
!14404 = !DILocation(line: 3550, column: 5, scope: !14398)
!14405 = !DILocation(line: 3552, column: 7, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 3552, column: 6)
!14407 = !DILocation(line: 3552, column: 17, scope: !14406)
!14408 = !DILocation(line: 3552, column: 6, scope: !14398)
!14409 = !DILocation(line: 3553, column: 3, scope: !14406)
!14410 = !DILocation(line: 3555, column: 6, scope: !14411)
!14411 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 3555, column: 6)
!14412 = !DILocation(line: 3555, column: 16, scope: !14411)
!14413 = !DILocation(line: 3555, column: 6, scope: !14398)
!14414 = !DILocation(line: 3556, column: 15, scope: !14411)
!14415 = !DILocation(line: 3556, column: 3, scope: !14411)
!14416 = !DILocation(line: 3558, column: 11, scope: !14417)
!14417 = distinct !DILexicalBlock(scope: !14398, file: !3, line: 3558, column: 2)
!14418 = !DILocation(line: 3558, column: 7, scope: !14417)
!14419 = !DILocation(line: 3558, column: 16, scope: !14420)
!14420 = distinct !DILexicalBlock(scope: !14417, file: !3, line: 3558, column: 2)
!14421 = !DILocation(line: 3558, column: 20, scope: !14420)
!14422 = !DILocation(line: 3558, column: 2, scope: !14417)
!14423 = !DILocalVariable(name: "hdmi_mode", scope: !14424, file: !3, line: 3559, type: !594)
!14424 = distinct !DILexicalBlock(scope: !14420, file: !3, line: 3558, column: 56)
!14425 = !DILocation(line: 3559, column: 34, scope: !14424)
!14426 = !DILocation(line: 3559, column: 61, scope: !14424)
!14427 = !DILocation(line: 3559, column: 47, scope: !14424)
!14428 = !DILocalVariable(name: "clock1", scope: !14424, file: !3, line: 3560, type: !7)
!14429 = !DILocation(line: 3560, column: 16, scope: !14424)
!14430 = !DILocalVariable(name: "clock2", scope: !14424, file: !3, line: 3560, type: !7)
!14431 = !DILocation(line: 3560, column: 24, scope: !14424)
!14432 = !DILocation(line: 3563, column: 12, scope: !14424)
!14433 = !DILocation(line: 3563, column: 23, scope: !14424)
!14434 = !DILocation(line: 3563, column: 10, scope: !14424)
!14435 = !DILocation(line: 3564, column: 38, scope: !14424)
!14436 = !DILocation(line: 3564, column: 12, scope: !14424)
!14437 = !DILocation(line: 3564, column: 10, scope: !14424)
!14438 = !DILocation(line: 3566, column: 8, scope: !14439)
!14439 = distinct !DILexicalBlock(scope: !14424, file: !3, line: 3566, column: 7)
!14440 = !DILocation(line: 3566, column: 38, scope: !14439)
!14441 = !DILocation(line: 3566, column: 35, scope: !14439)
!14442 = !DILocation(line: 3566, column: 56, scope: !14439)
!14443 = !DILocation(line: 3567, column: 8, scope: !14439)
!14444 = !DILocation(line: 3567, column: 38, scope: !14439)
!14445 = !DILocation(line: 3567, column: 35, scope: !14439)
!14446 = !DILocation(line: 3567, column: 57, scope: !14439)
!14447 = !DILocation(line: 3568, column: 22, scope: !14439)
!14448 = !DILocation(line: 3568, column: 32, scope: !14439)
!14449 = !DILocation(line: 3568, column: 43, scope: !14439)
!14450 = !DILocation(line: 3568, column: 7, scope: !14439)
!14451 = !DILocation(line: 3566, column: 7, scope: !14424)
!14452 = !DILocation(line: 3569, column: 11, scope: !14439)
!14453 = !DILocation(line: 3569, column: 4, scope: !14439)
!14454 = !DILocation(line: 3570, column: 2, scope: !14424)
!14455 = !DILocation(line: 3558, column: 52, scope: !14420)
!14456 = !DILocation(line: 3558, column: 2, scope: !14420)
!14457 = distinct !{!14457, !14422, !14458}
!14458 = !DILocation(line: 3570, column: 2, scope: !14417)
!14459 = !DILocation(line: 3571, column: 2, scope: !14398)
!14460 = !DILocation(line: 3572, column: 1, scope: !14398)
!14461 = distinct !DISubprogram(name: "list_del", scope: !14222, file: !14222, line: 144, type: !14223, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14462 = !DILocalVariable(name: "entry", arg: 1, scope: !14461, file: !14222, line: 144, type: !565)
!14463 = !DILocation(line: 144, column: 47, scope: !14461)
!14464 = !DILocation(line: 146, column: 19, scope: !14461)
!14465 = !DILocation(line: 146, column: 2, scope: !14461)
!14466 = !DILocation(line: 147, column: 2, scope: !14461)
!14467 = !DILocation(line: 147, column: 9, scope: !14461)
!14468 = !DILocation(line: 147, column: 14, scope: !14461)
!14469 = !DILocation(line: 148, column: 2, scope: !14461)
!14470 = !DILocation(line: 148, column: 9, scope: !14461)
!14471 = !DILocation(line: 148, column: 14, scope: !14461)
!14472 = !DILocation(line: 149, column: 1, scope: !14461)
!14473 = distinct !DISubprogram(name: "__list_del_entry", scope: !14222, file: !14222, line: 130, type: !14223, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14474 = !DILocalVariable(name: "entry", arg: 1, scope: !14473, file: !14222, line: 130, type: !565)
!14475 = !DILocation(line: 130, column: 55, scope: !14473)
!14476 = !DILocation(line: 132, column: 30, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14473, file: !14222, line: 132, column: 6)
!14478 = !DILocation(line: 132, column: 7, scope: !14477)
!14479 = !DILocation(line: 132, column: 6, scope: !14473)
!14480 = !DILocation(line: 133, column: 3, scope: !14477)
!14481 = !DILocation(line: 135, column: 13, scope: !14473)
!14482 = !DILocation(line: 135, column: 20, scope: !14473)
!14483 = !DILocation(line: 135, column: 26, scope: !14473)
!14484 = !DILocation(line: 135, column: 33, scope: !14473)
!14485 = !DILocation(line: 135, column: 2, scope: !14473)
!14486 = !DILocation(line: 136, column: 1, scope: !14473)
!14487 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !14222, file: !14222, line: 51, type: !14488, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14488 = !DISubroutineType(types: !14489)
!14489 = !{!559, !565}
!14490 = !DILocalVariable(name: "entry", arg: 1, scope: !14487, file: !14222, line: 51, type: !565)
!14491 = !DILocation(line: 51, column: 61, scope: !14487)
!14492 = !DILocation(line: 53, column: 2, scope: !14487)
!14493 = distinct !DISubprogram(name: "__list_del", scope: !14222, file: !14222, line: 110, type: !14277, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14494 = !DILocalVariable(name: "prev", arg: 1, scope: !14493, file: !14222, line: 110, type: !565)
!14495 = !DILocation(line: 110, column: 50, scope: !14493)
!14496 = !DILocalVariable(name: "next", arg: 2, scope: !14493, file: !14222, line: 110, type: !565)
!14497 = !DILocation(line: 110, column: 75, scope: !14493)
!14498 = !DILocation(line: 112, column: 15, scope: !14493)
!14499 = !DILocation(line: 112, column: 2, scope: !14493)
!14500 = !DILocation(line: 112, column: 8, scope: !14493)
!14501 = !DILocation(line: 112, column: 13, scope: !14493)
!14502 = !DILocation(line: 113, column: 2, scope: !14493)
!14503 = !DILocation(line: 113, column: 2, scope: !14504)
!14504 = distinct !DILexicalBlock(scope: !14493, file: !14222, line: 113, column: 2)
!14505 = !DILocation(line: 113, column: 2, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14504, file: !14222, line: 113, column: 2)
!14507 = !DILocation(line: 113, column: 2, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14504, file: !14222, line: 113, column: 2)
!14509 = !DILocation(line: 114, column: 1, scope: !14493)
!14510 = distinct !DISubprogram(name: "add_displayid_detailed_1_modes", scope: !3, file: !3, line: 5251, type: !14511, scopeLine: 5253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14511 = !DISubroutineType(types: !14512)
!14512 = !{!139, !1162, !579}
!14513 = !DILocalVariable(name: "connector", arg: 1, scope: !14510, file: !3, line: 5251, type: !1162)
!14514 = !DILocation(line: 5251, column: 65, scope: !14510)
!14515 = !DILocalVariable(name: "block", arg: 2, scope: !14510, file: !3, line: 5252, type: !579)
!14516 = !DILocation(line: 5252, column: 32, scope: !14510)
!14517 = !DILocalVariable(name: "det", scope: !14510, file: !3, line: 5254, type: !600)
!14518 = !DILocation(line: 5254, column: 42, scope: !14510)
!14519 = !DILocation(line: 5254, column: 90, scope: !14510)
!14520 = !DILocation(line: 5254, column: 48, scope: !14510)
!14521 = !DILocalVariable(name: "i", scope: !14510, file: !3, line: 5255, type: !139)
!14522 = !DILocation(line: 5255, column: 6, scope: !14510)
!14523 = !DILocalVariable(name: "num_timings", scope: !14510, file: !3, line: 5256, type: !139)
!14524 = !DILocation(line: 5256, column: 6, scope: !14510)
!14525 = !DILocalVariable(name: "newmode", scope: !14510, file: !3, line: 5257, type: !525)
!14526 = !DILocation(line: 5257, column: 27, scope: !14510)
!14527 = !DILocalVariable(name: "num_modes", scope: !14510, file: !3, line: 5258, type: !139)
!14528 = !DILocation(line: 5258, column: 6, scope: !14510)
!14529 = !DILocation(line: 5260, column: 6, scope: !14530)
!14530 = distinct !DILexicalBlock(scope: !14510, file: !3, line: 5260, column: 6)
!14531 = !DILocation(line: 5260, column: 13, scope: !14530)
!14532 = !DILocation(line: 5260, column: 23, scope: !14530)
!14533 = !DILocation(line: 5260, column: 6, scope: !14510)
!14534 = !DILocation(line: 5261, column: 3, scope: !14530)
!14535 = !DILocation(line: 5263, column: 16, scope: !14510)
!14536 = !DILocation(line: 5263, column: 23, scope: !14510)
!14537 = !DILocation(line: 5263, column: 33, scope: !14510)
!14538 = !DILocation(line: 5263, column: 14, scope: !14510)
!14539 = !DILocation(line: 5264, column: 9, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14510, file: !3, line: 5264, column: 2)
!14541 = !DILocation(line: 5264, column: 7, scope: !14540)
!14542 = !DILocation(line: 5264, column: 14, scope: !14543)
!14543 = distinct !DILexicalBlock(scope: !14540, file: !3, line: 5264, column: 2)
!14544 = !DILocation(line: 5264, column: 18, scope: !14543)
!14545 = !DILocation(line: 5264, column: 16, scope: !14543)
!14546 = !DILocation(line: 5264, column: 2, scope: !14540)
!14547 = !DILocalVariable(name: "timings", scope: !14548, file: !3, line: 5265, type: !14549)
!14548 = distinct !DILexicalBlock(scope: !14543, file: !3, line: 5264, column: 36)
!14549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!14550 = !DILocation(line: 5265, column: 40, scope: !14548)
!14551 = !DILocation(line: 5265, column: 51, scope: !14548)
!14552 = !DILocation(line: 5265, column: 56, scope: !14548)
!14553 = !DILocation(line: 5265, column: 64, scope: !14548)
!14554 = !DILocation(line: 5267, column: 41, scope: !14548)
!14555 = !DILocation(line: 5267, column: 52, scope: !14548)
!14556 = !DILocation(line: 5267, column: 57, scope: !14548)
!14557 = !DILocation(line: 5267, column: 13, scope: !14548)
!14558 = !DILocation(line: 5267, column: 11, scope: !14548)
!14559 = !DILocation(line: 5268, column: 8, scope: !14560)
!14560 = distinct !DILexicalBlock(scope: !14548, file: !3, line: 5268, column: 7)
!14561 = !DILocation(line: 5268, column: 7, scope: !14548)
!14562 = !DILocation(line: 5269, column: 4, scope: !14560)
!14563 = !DILocation(line: 5271, column: 23, scope: !14548)
!14564 = !DILocation(line: 5271, column: 34, scope: !14548)
!14565 = !DILocation(line: 5271, column: 3, scope: !14548)
!14566 = !DILocation(line: 5272, column: 12, scope: !14548)
!14567 = !DILocation(line: 5273, column: 2, scope: !14548)
!14568 = !DILocation(line: 5264, column: 32, scope: !14543)
!14569 = !DILocation(line: 5264, column: 2, scope: !14543)
!14570 = distinct !{!14570, !14546, !14571}
!14571 = !DILocation(line: 5273, column: 2, scope: !14540)
!14572 = !DILocation(line: 5274, column: 9, scope: !14510)
!14573 = !DILocation(line: 5274, column: 2, scope: !14510)
!14574 = !DILocation(line: 5275, column: 1, scope: !14510)
!14575 = distinct !DISubprogram(name: "drm_mode_displayid_detailed", scope: !3, file: !3, line: 5206, type: !14576, scopeLine: 5208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14576 = !DISubroutineType(types: !14577)
!14577 = !{!525, !1166, !14549}
!14578 = !DILocalVariable(name: "dev", arg: 1, scope: !14575, file: !3, line: 5206, type: !1166)
!14579 = !DILocation(line: 5206, column: 80, scope: !14575)
!14580 = !DILocalVariable(name: "timings", arg: 2, scope: !14575, file: !3, line: 5207, type: !14549)
!14581 = !DILocation(line: 5207, column: 49, scope: !14575)
!14582 = !DILocalVariable(name: "mode", scope: !14575, file: !3, line: 5209, type: !525)
!14583 = !DILocation(line: 5209, column: 27, scope: !14575)
!14584 = !DILocalVariable(name: "pixel_clock", scope: !14575, file: !3, line: 5210, type: !7)
!14585 = !DILocation(line: 5210, column: 11, scope: !14575)
!14586 = !DILocation(line: 5210, column: 26, scope: !14575)
!14587 = !DILocation(line: 5210, column: 35, scope: !14575)
!14588 = !DILocation(line: 5211, column: 6, scope: !14575)
!14589 = !DILocation(line: 5211, column: 15, scope: !14575)
!14590 = !DILocation(line: 5211, column: 30, scope: !14575)
!14591 = !DILocation(line: 5210, column: 50, scope: !14575)
!14592 = !DILocation(line: 5212, column: 6, scope: !14575)
!14593 = !DILocation(line: 5212, column: 15, scope: !14575)
!14594 = !DILocation(line: 5212, column: 30, scope: !14575)
!14595 = !DILocation(line: 5211, column: 36, scope: !14575)
!14596 = !DILocation(line: 5212, column: 38, scope: !14575)
!14597 = !DILocalVariable(name: "hactive", scope: !14575, file: !3, line: 5213, type: !7)
!14598 = !DILocation(line: 5213, column: 11, scope: !14575)
!14599 = !DILocation(line: 5213, column: 22, scope: !14575)
!14600 = !DILocation(line: 5213, column: 31, scope: !14575)
!14601 = !DILocation(line: 5213, column: 44, scope: !14575)
!14602 = !DILocation(line: 5213, column: 53, scope: !14575)
!14603 = !DILocation(line: 5213, column: 64, scope: !14575)
!14604 = !DILocation(line: 5213, column: 42, scope: !14575)
!14605 = !DILocation(line: 5213, column: 70, scope: !14575)
!14606 = !DILocalVariable(name: "hblank", scope: !14575, file: !3, line: 5214, type: !7)
!14607 = !DILocation(line: 5214, column: 11, scope: !14575)
!14608 = !DILocation(line: 5214, column: 21, scope: !14575)
!14609 = !DILocation(line: 5214, column: 30, scope: !14575)
!14610 = !DILocation(line: 5214, column: 42, scope: !14575)
!14611 = !DILocation(line: 5214, column: 51, scope: !14575)
!14612 = !DILocation(line: 5214, column: 61, scope: !14575)
!14613 = !DILocation(line: 5214, column: 40, scope: !14575)
!14614 = !DILocation(line: 5214, column: 67, scope: !14575)
!14615 = !DILocalVariable(name: "hsync", scope: !14575, file: !3, line: 5215, type: !7)
!14616 = !DILocation(line: 5215, column: 11, scope: !14575)
!14617 = !DILocation(line: 5215, column: 20, scope: !14575)
!14618 = !DILocation(line: 5215, column: 29, scope: !14575)
!14619 = !DILocation(line: 5215, column: 41, scope: !14575)
!14620 = !DILocation(line: 5215, column: 50, scope: !14575)
!14621 = !DILocation(line: 5215, column: 59, scope: !14575)
!14622 = !DILocation(line: 5215, column: 67, scope: !14575)
!14623 = !DILocation(line: 5215, column: 38, scope: !14575)
!14624 = !DILocation(line: 5215, column: 73, scope: !14575)
!14625 = !DILocalVariable(name: "hsync_width", scope: !14575, file: !3, line: 5216, type: !7)
!14626 = !DILocation(line: 5216, column: 11, scope: !14575)
!14627 = !DILocation(line: 5216, column: 26, scope: !14575)
!14628 = !DILocation(line: 5216, column: 35, scope: !14575)
!14629 = !DILocation(line: 5216, column: 44, scope: !14575)
!14630 = !DILocation(line: 5216, column: 53, scope: !14575)
!14631 = !DILocation(line: 5216, column: 60, scope: !14575)
!14632 = !DILocation(line: 5216, column: 42, scope: !14575)
!14633 = !DILocation(line: 5216, column: 66, scope: !14575)
!14634 = !DILocalVariable(name: "vactive", scope: !14575, file: !3, line: 5217, type: !7)
!14635 = !DILocation(line: 5217, column: 11, scope: !14575)
!14636 = !DILocation(line: 5217, column: 22, scope: !14575)
!14637 = !DILocation(line: 5217, column: 31, scope: !14575)
!14638 = !DILocation(line: 5217, column: 44, scope: !14575)
!14639 = !DILocation(line: 5217, column: 53, scope: !14575)
!14640 = !DILocation(line: 5217, column: 64, scope: !14575)
!14641 = !DILocation(line: 5217, column: 42, scope: !14575)
!14642 = !DILocation(line: 5217, column: 70, scope: !14575)
!14643 = !DILocalVariable(name: "vblank", scope: !14575, file: !3, line: 5218, type: !7)
!14644 = !DILocation(line: 5218, column: 11, scope: !14575)
!14645 = !DILocation(line: 5218, column: 21, scope: !14575)
!14646 = !DILocation(line: 5218, column: 30, scope: !14575)
!14647 = !DILocation(line: 5218, column: 42, scope: !14575)
!14648 = !DILocation(line: 5218, column: 51, scope: !14575)
!14649 = !DILocation(line: 5218, column: 61, scope: !14575)
!14650 = !DILocation(line: 5218, column: 40, scope: !14575)
!14651 = !DILocation(line: 5218, column: 67, scope: !14575)
!14652 = !DILocalVariable(name: "vsync", scope: !14575, file: !3, line: 5219, type: !7)
!14653 = !DILocation(line: 5219, column: 11, scope: !14575)
!14654 = !DILocation(line: 5219, column: 20, scope: !14575)
!14655 = !DILocation(line: 5219, column: 29, scope: !14575)
!14656 = !DILocation(line: 5219, column: 41, scope: !14575)
!14657 = !DILocation(line: 5219, column: 50, scope: !14575)
!14658 = !DILocation(line: 5219, column: 59, scope: !14575)
!14659 = !DILocation(line: 5219, column: 67, scope: !14575)
!14660 = !DILocation(line: 5219, column: 38, scope: !14575)
!14661 = !DILocation(line: 5219, column: 73, scope: !14575)
!14662 = !DILocalVariable(name: "vsync_width", scope: !14575, file: !3, line: 5220, type: !7)
!14663 = !DILocation(line: 5220, column: 11, scope: !14575)
!14664 = !DILocation(line: 5220, column: 26, scope: !14575)
!14665 = !DILocation(line: 5220, column: 35, scope: !14575)
!14666 = !DILocation(line: 5220, column: 44, scope: !14575)
!14667 = !DILocation(line: 5220, column: 53, scope: !14575)
!14668 = !DILocation(line: 5220, column: 60, scope: !14575)
!14669 = !DILocation(line: 5220, column: 42, scope: !14575)
!14670 = !DILocation(line: 5220, column: 66, scope: !14575)
!14671 = !DILocalVariable(name: "hsync_positive", scope: !14575, file: !3, line: 5221, type: !559)
!14672 = !DILocation(line: 5221, column: 7, scope: !14575)
!14673 = !DILocation(line: 5221, column: 25, scope: !14575)
!14674 = !DILocation(line: 5221, column: 34, scope: !14575)
!14675 = !DILocation(line: 5221, column: 43, scope: !14575)
!14676 = !DILocation(line: 5221, column: 49, scope: !14575)
!14677 = !DILocation(line: 5221, column: 24, scope: !14575)
!14678 = !DILocalVariable(name: "vsync_positive", scope: !14575, file: !3, line: 5222, type: !559)
!14679 = !DILocation(line: 5222, column: 7, scope: !14575)
!14680 = !DILocation(line: 5222, column: 25, scope: !14575)
!14681 = !DILocation(line: 5222, column: 34, scope: !14575)
!14682 = !DILocation(line: 5222, column: 43, scope: !14575)
!14683 = !DILocation(line: 5222, column: 49, scope: !14575)
!14684 = !DILocation(line: 5222, column: 24, scope: !14575)
!14685 = !DILocation(line: 5224, column: 25, scope: !14575)
!14686 = !DILocation(line: 5224, column: 9, scope: !14575)
!14687 = !DILocation(line: 5224, column: 7, scope: !14575)
!14688 = !DILocation(line: 5225, column: 7, scope: !14689)
!14689 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 5225, column: 6)
!14690 = !DILocation(line: 5225, column: 6, scope: !14575)
!14691 = !DILocation(line: 5226, column: 3, scope: !14689)
!14692 = !DILocation(line: 5228, column: 16, scope: !14575)
!14693 = !DILocation(line: 5228, column: 28, scope: !14575)
!14694 = !DILocation(line: 5228, column: 2, scope: !14575)
!14695 = !DILocation(line: 5228, column: 8, scope: !14575)
!14696 = !DILocation(line: 5228, column: 14, scope: !14575)
!14697 = !DILocation(line: 5229, column: 19, scope: !14575)
!14698 = !DILocation(line: 5229, column: 2, scope: !14575)
!14699 = !DILocation(line: 5229, column: 8, scope: !14575)
!14700 = !DILocation(line: 5229, column: 17, scope: !14575)
!14701 = !DILocation(line: 5230, column: 22, scope: !14575)
!14702 = !DILocation(line: 5230, column: 28, scope: !14575)
!14703 = !DILocation(line: 5230, column: 39, scope: !14575)
!14704 = !DILocation(line: 5230, column: 37, scope: !14575)
!14705 = !DILocation(line: 5230, column: 2, scope: !14575)
!14706 = !DILocation(line: 5230, column: 8, scope: !14575)
!14707 = !DILocation(line: 5230, column: 20, scope: !14575)
!14708 = !DILocation(line: 5231, column: 20, scope: !14575)
!14709 = !DILocation(line: 5231, column: 26, scope: !14575)
!14710 = !DILocation(line: 5231, column: 40, scope: !14575)
!14711 = !DILocation(line: 5231, column: 38, scope: !14575)
!14712 = !DILocation(line: 5231, column: 2, scope: !14575)
!14713 = !DILocation(line: 5231, column: 8, scope: !14575)
!14714 = !DILocation(line: 5231, column: 18, scope: !14575)
!14715 = !DILocation(line: 5232, column: 17, scope: !14575)
!14716 = !DILocation(line: 5232, column: 23, scope: !14575)
!14717 = !DILocation(line: 5232, column: 34, scope: !14575)
!14718 = !DILocation(line: 5232, column: 32, scope: !14575)
!14719 = !DILocation(line: 5232, column: 2, scope: !14575)
!14720 = !DILocation(line: 5232, column: 8, scope: !14575)
!14721 = !DILocation(line: 5232, column: 15, scope: !14575)
!14722 = !DILocation(line: 5234, column: 19, scope: !14575)
!14723 = !DILocation(line: 5234, column: 2, scope: !14575)
!14724 = !DILocation(line: 5234, column: 8, scope: !14575)
!14725 = !DILocation(line: 5234, column: 17, scope: !14575)
!14726 = !DILocation(line: 5235, column: 22, scope: !14575)
!14727 = !DILocation(line: 5235, column: 28, scope: !14575)
!14728 = !DILocation(line: 5235, column: 39, scope: !14575)
!14729 = !DILocation(line: 5235, column: 37, scope: !14575)
!14730 = !DILocation(line: 5235, column: 2, scope: !14575)
!14731 = !DILocation(line: 5235, column: 8, scope: !14575)
!14732 = !DILocation(line: 5235, column: 20, scope: !14575)
!14733 = !DILocation(line: 5236, column: 20, scope: !14575)
!14734 = !DILocation(line: 5236, column: 26, scope: !14575)
!14735 = !DILocation(line: 5236, column: 40, scope: !14575)
!14736 = !DILocation(line: 5236, column: 38, scope: !14575)
!14737 = !DILocation(line: 5236, column: 2, scope: !14575)
!14738 = !DILocation(line: 5236, column: 8, scope: !14575)
!14739 = !DILocation(line: 5236, column: 18, scope: !14575)
!14740 = !DILocation(line: 5237, column: 17, scope: !14575)
!14741 = !DILocation(line: 5237, column: 23, scope: !14575)
!14742 = !DILocation(line: 5237, column: 34, scope: !14575)
!14743 = !DILocation(line: 5237, column: 32, scope: !14575)
!14744 = !DILocation(line: 5237, column: 2, scope: !14575)
!14745 = !DILocation(line: 5237, column: 8, scope: !14575)
!14746 = !DILocation(line: 5237, column: 15, scope: !14575)
!14747 = !DILocation(line: 5239, column: 2, scope: !14575)
!14748 = !DILocation(line: 5239, column: 8, scope: !14575)
!14749 = !DILocation(line: 5239, column: 14, scope: !14575)
!14750 = !DILocation(line: 5240, column: 17, scope: !14575)
!14751 = !DILocation(line: 5240, column: 2, scope: !14575)
!14752 = !DILocation(line: 5240, column: 8, scope: !14575)
!14753 = !DILocation(line: 5240, column: 14, scope: !14575)
!14754 = !DILocation(line: 5241, column: 17, scope: !14575)
!14755 = !DILocation(line: 5241, column: 2, scope: !14575)
!14756 = !DILocation(line: 5241, column: 8, scope: !14575)
!14757 = !DILocation(line: 5241, column: 14, scope: !14575)
!14758 = !DILocation(line: 5242, column: 2, scope: !14575)
!14759 = !DILocation(line: 5242, column: 8, scope: !14575)
!14760 = !DILocation(line: 5242, column: 13, scope: !14575)
!14761 = !DILocation(line: 5244, column: 6, scope: !14762)
!14762 = distinct !DILexicalBlock(scope: !14575, file: !3, line: 5244, column: 6)
!14763 = !DILocation(line: 5244, column: 15, scope: !14762)
!14764 = !DILocation(line: 5244, column: 21, scope: !14762)
!14765 = !DILocation(line: 5244, column: 6, scope: !14575)
!14766 = !DILocation(line: 5245, column: 3, scope: !14762)
!14767 = !DILocation(line: 5245, column: 9, scope: !14762)
!14768 = !DILocation(line: 5245, column: 14, scope: !14762)
!14769 = !DILocation(line: 5246, column: 20, scope: !14575)
!14770 = !DILocation(line: 5246, column: 2, scope: !14575)
!14771 = !DILocation(line: 5248, column: 9, scope: !14575)
!14772 = !DILocation(line: 5248, column: 2, scope: !14575)
!14773 = !DILocation(line: 5249, column: 1, scope: !14575)
!14774 = distinct !DISubprogram(name: "do_inferred_modes", scope: !3, file: !3, line: 2892, type: !10658, scopeLine: 2893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14775 = !DILocalVariable(name: "timing", arg: 1, scope: !14774, file: !3, line: 2892, type: !575)
!14776 = !DILocation(line: 2892, column: 43, scope: !14774)
!14777 = !DILocalVariable(name: "c", arg: 2, scope: !14774, file: !3, line: 2892, type: !368)
!14778 = !DILocation(line: 2892, column: 57, scope: !14774)
!14779 = !DILocalVariable(name: "closure", scope: !14774, file: !3, line: 2894, type: !11637)
!14780 = !DILocation(line: 2894, column: 32, scope: !14774)
!14781 = !DILocation(line: 2894, column: 42, scope: !14774)
!14782 = !DILocalVariable(name: "data", scope: !14774, file: !3, line: 2895, type: !12841)
!14783 = !DILocation(line: 2895, column: 29, scope: !14774)
!14784 = !DILocation(line: 2895, column: 37, scope: !14774)
!14785 = !DILocation(line: 2895, column: 45, scope: !14774)
!14786 = !DILocation(line: 2895, column: 50, scope: !14774)
!14787 = !DILocalVariable(name: "range", scope: !14774, file: !3, line: 2896, type: !14788)
!14788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!14789 = !DILocation(line: 2896, column: 38, scope: !14774)
!14790 = !DILocation(line: 2896, column: 47, scope: !14774)
!14791 = !DILocation(line: 2896, column: 53, scope: !14774)
!14792 = !DILocation(line: 2896, column: 58, scope: !14774)
!14793 = !DILocation(line: 2898, column: 41, scope: !14794)
!14794 = distinct !DILexicalBlock(scope: !14774, file: !3, line: 2898, column: 6)
!14795 = !DILocation(line: 2898, column: 29, scope: !14794)
!14796 = !DILocation(line: 2898, column: 7, scope: !14794)
!14797 = !DILocation(line: 2898, column: 6, scope: !14774)
!14798 = !DILocation(line: 2899, column: 3, scope: !14794)
!14799 = !DILocation(line: 2901, column: 44, scope: !14774)
!14800 = !DILocation(line: 2901, column: 53, scope: !14774)
!14801 = !DILocation(line: 2902, column: 9, scope: !14774)
!14802 = !DILocation(line: 2902, column: 18, scope: !14774)
!14803 = !DILocation(line: 2903, column: 9, scope: !14774)
!14804 = !DILocation(line: 2901, column: 20, scope: !14774)
!14805 = !DILocation(line: 2901, column: 2, scope: !14774)
!14806 = !DILocation(line: 2901, column: 11, scope: !14774)
!14807 = !DILocation(line: 2901, column: 17, scope: !14774)
!14808 = !DILocation(line: 2905, column: 7, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14774, file: !3, line: 2905, column: 6)
!14810 = !DILocation(line: 2905, column: 6, scope: !14774)
!14811 = !DILocation(line: 2906, column: 3, scope: !14809)
!14812 = !DILocation(line: 2908, column: 10, scope: !14774)
!14813 = !DILocation(line: 2908, column: 17, scope: !14774)
!14814 = !DILocation(line: 2908, column: 2, scope: !14774)
!14815 = !DILocation(line: 2911, column: 45, scope: !14816)
!14816 = distinct !DILexicalBlock(scope: !14774, file: !3, line: 2908, column: 24)
!14817 = !DILocation(line: 2911, column: 54, scope: !14816)
!14818 = !DILocation(line: 2912, column: 10, scope: !14816)
!14819 = !DILocation(line: 2912, column: 19, scope: !14816)
!14820 = !DILocation(line: 2913, column: 10, scope: !14816)
!14821 = !DILocation(line: 2911, column: 21, scope: !14816)
!14822 = !DILocation(line: 2911, column: 3, scope: !14816)
!14823 = !DILocation(line: 2911, column: 12, scope: !14816)
!14824 = !DILocation(line: 2911, column: 18, scope: !14816)
!14825 = !DILocation(line: 2914, column: 3, scope: !14816)
!14826 = !DILocation(line: 2916, column: 8, scope: !14827)
!14827 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 2916, column: 7)
!14828 = !DILocation(line: 2916, column: 7, scope: !14816)
!14829 = !DILocation(line: 2917, column: 4, scope: !14827)
!14830 = !DILocation(line: 2919, column: 45, scope: !14816)
!14831 = !DILocation(line: 2919, column: 54, scope: !14816)
!14832 = !DILocation(line: 2920, column: 10, scope: !14816)
!14833 = !DILocation(line: 2920, column: 19, scope: !14816)
!14834 = !DILocation(line: 2921, column: 10, scope: !14816)
!14835 = !DILocation(line: 2919, column: 21, scope: !14816)
!14836 = !DILocation(line: 2919, column: 3, scope: !14816)
!14837 = !DILocation(line: 2919, column: 12, scope: !14816)
!14838 = !DILocation(line: 2919, column: 18, scope: !14816)
!14839 = !DILocation(line: 2922, column: 3, scope: !14816)
!14840 = !DILocation(line: 2925, column: 3, scope: !14816)
!14841 = !DILocation(line: 2927, column: 1, scope: !14774)
!14842 = distinct !DISubprogram(name: "drm_dmt_modes_for_range", scope: !3, file: !3, line: 2798, type: !14843, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14843 = !DISubroutineType(types: !14844)
!14844 = !{!139, !1162, !369, !575}
!14845 = !DILocalVariable(name: "connector", arg: 1, scope: !14842, file: !3, line: 2798, type: !1162)
!14846 = !DILocation(line: 2798, column: 47, scope: !14842)
!14847 = !DILocalVariable(name: "edid", arg: 2, scope: !14842, file: !3, line: 2798, type: !369)
!14848 = !DILocation(line: 2798, column: 71, scope: !14842)
!14849 = !DILocalVariable(name: "timing", arg: 3, scope: !14842, file: !3, line: 2799, type: !575)
!14850 = !DILocation(line: 2799, column: 28, scope: !14842)
!14851 = !DILocalVariable(name: "i", scope: !14842, file: !3, line: 2801, type: !139)
!14852 = !DILocation(line: 2801, column: 6, scope: !14842)
!14853 = !DILocalVariable(name: "modes", scope: !14842, file: !3, line: 2801, type: !139)
!14854 = !DILocation(line: 2801, column: 9, scope: !14842)
!14855 = !DILocalVariable(name: "newmode", scope: !14842, file: !3, line: 2802, type: !525)
!14856 = !DILocation(line: 2802, column: 27, scope: !14842)
!14857 = !DILocalVariable(name: "dev", scope: !14842, file: !3, line: 2803, type: !1166)
!14858 = !DILocation(line: 2803, column: 21, scope: !14842)
!14859 = !DILocation(line: 2803, column: 27, scope: !14842)
!14860 = !DILocation(line: 2803, column: 38, scope: !14842)
!14861 = !DILocation(line: 2805, column: 9, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14842, file: !3, line: 2805, column: 2)
!14863 = !DILocation(line: 2805, column: 7, scope: !14862)
!14864 = !DILocation(line: 2805, column: 14, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14862, file: !3, line: 2805, column: 2)
!14866 = !DILocation(line: 2805, column: 16, scope: !14865)
!14867 = !DILocation(line: 2805, column: 2, scope: !14862)
!14868 = !DILocation(line: 2806, column: 37, scope: !14869)
!14869 = distinct !DILexicalBlock(scope: !14870, file: !3, line: 2806, column: 7)
!14870 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 2805, column: 50)
!14871 = !DILocation(line: 2806, column: 35, scope: !14869)
!14872 = !DILocation(line: 2806, column: 40, scope: !14869)
!14873 = !DILocation(line: 2806, column: 46, scope: !14869)
!14874 = !DILocation(line: 2806, column: 7, scope: !14869)
!14875 = !DILocation(line: 2806, column: 54, scope: !14869)
!14876 = !DILocation(line: 2807, column: 27, scope: !14869)
!14877 = !DILocation(line: 2807, column: 54, scope: !14869)
!14878 = !DILocation(line: 2807, column: 52, scope: !14869)
!14879 = !DILocation(line: 2807, column: 7, scope: !14869)
!14880 = !DILocation(line: 2806, column: 7, scope: !14870)
!14881 = !DILocation(line: 2808, column: 33, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14869, file: !3, line: 2807, column: 58)
!14883 = !DILocation(line: 2808, column: 53, scope: !14882)
!14884 = !DILocation(line: 2808, column: 39, scope: !14882)
!14885 = !DILocation(line: 2808, column: 14, scope: !14882)
!14886 = !DILocation(line: 2808, column: 12, scope: !14882)
!14887 = !DILocation(line: 2809, column: 8, scope: !14888)
!14888 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 2809, column: 8)
!14889 = !DILocation(line: 2809, column: 8, scope: !14882)
!14890 = !DILocation(line: 2810, column: 25, scope: !14891)
!14891 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 2809, column: 17)
!14892 = !DILocation(line: 2810, column: 36, scope: !14891)
!14893 = !DILocation(line: 2810, column: 5, scope: !14891)
!14894 = !DILocation(line: 2811, column: 10, scope: !14891)
!14895 = !DILocation(line: 2812, column: 4, scope: !14891)
!14896 = !DILocation(line: 2813, column: 3, scope: !14882)
!14897 = !DILocation(line: 2814, column: 2, scope: !14870)
!14898 = !DILocation(line: 2805, column: 46, scope: !14865)
!14899 = !DILocation(line: 2805, column: 2, scope: !14865)
!14900 = distinct !{!14900, !14867, !14901}
!14901 = !DILocation(line: 2814, column: 2, scope: !14862)
!14902 = !DILocation(line: 2816, column: 9, scope: !14842)
!14903 = !DILocation(line: 2816, column: 2, scope: !14842)
!14904 = distinct !DISubprogram(name: "drm_gtf_modes_for_range", scope: !3, file: !3, line: 2833, type: !14843, scopeLine: 2835, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14905 = !DILocalVariable(name: "connector", arg: 1, scope: !14904, file: !3, line: 2833, type: !1162)
!14906 = !DILocation(line: 2833, column: 47, scope: !14904)
!14907 = !DILocalVariable(name: "edid", arg: 2, scope: !14904, file: !3, line: 2833, type: !369)
!14908 = !DILocation(line: 2833, column: 71, scope: !14904)
!14909 = !DILocalVariable(name: "timing", arg: 3, scope: !14904, file: !3, line: 2834, type: !575)
!14910 = !DILocation(line: 2834, column: 28, scope: !14904)
!14911 = !DILocalVariable(name: "i", scope: !14904, file: !3, line: 2836, type: !139)
!14912 = !DILocation(line: 2836, column: 6, scope: !14904)
!14913 = !DILocalVariable(name: "modes", scope: !14904, file: !3, line: 2836, type: !139)
!14914 = !DILocation(line: 2836, column: 9, scope: !14904)
!14915 = !DILocalVariable(name: "newmode", scope: !14904, file: !3, line: 2837, type: !525)
!14916 = !DILocation(line: 2837, column: 27, scope: !14904)
!14917 = !DILocalVariable(name: "dev", scope: !14904, file: !3, line: 2838, type: !1166)
!14918 = !DILocation(line: 2838, column: 21, scope: !14904)
!14919 = !DILocation(line: 2838, column: 27, scope: !14904)
!14920 = !DILocation(line: 2838, column: 38, scope: !14904)
!14921 = !DILocation(line: 2840, column: 9, scope: !14922)
!14922 = distinct !DILexicalBlock(scope: !14904, file: !3, line: 2840, column: 2)
!14923 = !DILocation(line: 2840, column: 7, scope: !14922)
!14924 = !DILocation(line: 2840, column: 14, scope: !14925)
!14925 = distinct !DILexicalBlock(scope: !14922, file: !3, line: 2840, column: 2)
!14926 = !DILocation(line: 2840, column: 16, scope: !14925)
!14927 = !DILocation(line: 2840, column: 2, scope: !14922)
!14928 = !DILocalVariable(name: "m", scope: !14929, file: !3, line: 2841, type: !14930)
!14929 = distinct !DILexicalBlock(scope: !14925, file: !3, line: 2840, column: 48)
!14930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!14931 = !DILocation(line: 2841, column: 26, scope: !14929)
!14932 = !DILocation(line: 2841, column: 43, scope: !14929)
!14933 = !DILocation(line: 2841, column: 31, scope: !14929)
!14934 = !DILocation(line: 2843, column: 26, scope: !14929)
!14935 = !DILocation(line: 2843, column: 31, scope: !14929)
!14936 = !DILocation(line: 2843, column: 34, scope: !14929)
!14937 = !DILocation(line: 2843, column: 37, scope: !14929)
!14938 = !DILocation(line: 2843, column: 40, scope: !14929)
!14939 = !DILocation(line: 2843, column: 43, scope: !14929)
!14940 = !DILocation(line: 2843, column: 46, scope: !14929)
!14941 = !DILocation(line: 2843, column: 13, scope: !14929)
!14942 = !DILocation(line: 2843, column: 11, scope: !14929)
!14943 = !DILocation(line: 2844, column: 8, scope: !14944)
!14944 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 2844, column: 7)
!14945 = !DILocation(line: 2844, column: 7, scope: !14929)
!14946 = !DILocation(line: 2845, column: 11, scope: !14944)
!14947 = !DILocation(line: 2845, column: 4, scope: !14944)
!14948 = !DILocation(line: 2847, column: 27, scope: !14929)
!14949 = !DILocation(line: 2847, column: 3, scope: !14929)
!14950 = !DILocation(line: 2848, column: 22, scope: !14951)
!14951 = distinct !DILexicalBlock(scope: !14929, file: !3, line: 2848, column: 7)
!14952 = !DILocation(line: 2848, column: 31, scope: !14951)
!14953 = !DILocation(line: 2848, column: 37, scope: !14951)
!14954 = !DILocation(line: 2848, column: 8, scope: !14951)
!14955 = !DILocation(line: 2848, column: 45, scope: !14951)
!14956 = !DILocation(line: 2849, column: 28, scope: !14951)
!14957 = !DILocation(line: 2849, column: 39, scope: !14951)
!14958 = !DILocation(line: 2849, column: 8, scope: !14951)
!14959 = !DILocation(line: 2848, column: 7, scope: !14929)
!14960 = !DILocation(line: 2850, column: 21, scope: !14961)
!14961 = distinct !DILexicalBlock(scope: !14951, file: !3, line: 2849, column: 49)
!14962 = !DILocation(line: 2850, column: 26, scope: !14961)
!14963 = !DILocation(line: 2850, column: 4, scope: !14961)
!14964 = !DILocation(line: 2851, column: 4, scope: !14961)
!14965 = !DILocation(line: 2854, column: 23, scope: !14929)
!14966 = !DILocation(line: 2854, column: 34, scope: !14929)
!14967 = !DILocation(line: 2854, column: 3, scope: !14929)
!14968 = !DILocation(line: 2855, column: 8, scope: !14929)
!14969 = !DILocation(line: 2856, column: 2, scope: !14929)
!14970 = !DILocation(line: 2840, column: 44, scope: !14925)
!14971 = !DILocation(line: 2840, column: 2, scope: !14925)
!14972 = distinct !{!14972, !14927, !14973}
!14973 = !DILocation(line: 2856, column: 2, scope: !14922)
!14974 = !DILocation(line: 2858, column: 9, scope: !14904)
!14975 = !DILocation(line: 2858, column: 2, scope: !14904)
!14976 = !DILocation(line: 2859, column: 1, scope: !14904)
!14977 = distinct !DISubprogram(name: "drm_cvt_modes_for_range", scope: !3, file: !3, line: 2862, type: !14843, scopeLine: 2864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!14978 = !DILocalVariable(name: "connector", arg: 1, scope: !14977, file: !3, line: 2862, type: !1162)
!14979 = !DILocation(line: 2862, column: 47, scope: !14977)
!14980 = !DILocalVariable(name: "edid", arg: 2, scope: !14977, file: !3, line: 2862, type: !369)
!14981 = !DILocation(line: 2862, column: 71, scope: !14977)
!14982 = !DILocalVariable(name: "timing", arg: 3, scope: !14977, file: !3, line: 2863, type: !575)
!14983 = !DILocation(line: 2863, column: 28, scope: !14977)
!14984 = !DILocalVariable(name: "i", scope: !14977, file: !3, line: 2865, type: !139)
!14985 = !DILocation(line: 2865, column: 6, scope: !14977)
!14986 = !DILocalVariable(name: "modes", scope: !14977, file: !3, line: 2865, type: !139)
!14987 = !DILocation(line: 2865, column: 9, scope: !14977)
!14988 = !DILocalVariable(name: "newmode", scope: !14977, file: !3, line: 2866, type: !525)
!14989 = !DILocation(line: 2866, column: 27, scope: !14977)
!14990 = !DILocalVariable(name: "dev", scope: !14977, file: !3, line: 2867, type: !1166)
!14991 = !DILocation(line: 2867, column: 21, scope: !14977)
!14992 = !DILocation(line: 2867, column: 27, scope: !14977)
!14993 = !DILocation(line: 2867, column: 38, scope: !14977)
!14994 = !DILocalVariable(name: "rb", scope: !14977, file: !3, line: 2868, type: !559)
!14995 = !DILocation(line: 2868, column: 7, scope: !14977)
!14996 = !DILocation(line: 2868, column: 36, scope: !14977)
!14997 = !DILocation(line: 2868, column: 12, scope: !14977)
!14998 = !DILocation(line: 2870, column: 9, scope: !14999)
!14999 = distinct !DILexicalBlock(scope: !14977, file: !3, line: 2870, column: 2)
!15000 = !DILocation(line: 2870, column: 7, scope: !14999)
!15001 = !DILocation(line: 2870, column: 14, scope: !15002)
!15002 = distinct !DILexicalBlock(scope: !14999, file: !3, line: 2870, column: 2)
!15003 = !DILocation(line: 2870, column: 16, scope: !15002)
!15004 = !DILocation(line: 2870, column: 2, scope: !14999)
!15005 = !DILocalVariable(name: "m", scope: !15006, file: !3, line: 2871, type: !14930)
!15006 = distinct !DILexicalBlock(scope: !15002, file: !3, line: 2870, column: 48)
!15007 = !DILocation(line: 2871, column: 26, scope: !15006)
!15008 = !DILocation(line: 2871, column: 43, scope: !15006)
!15009 = !DILocation(line: 2871, column: 31, scope: !15006)
!15010 = !DILocation(line: 2873, column: 26, scope: !15006)
!15011 = !DILocation(line: 2873, column: 31, scope: !15006)
!15012 = !DILocation(line: 2873, column: 34, scope: !15006)
!15013 = !DILocation(line: 2873, column: 37, scope: !15006)
!15014 = !DILocation(line: 2873, column: 40, scope: !15006)
!15015 = !DILocation(line: 2873, column: 43, scope: !15006)
!15016 = !DILocation(line: 2873, column: 46, scope: !15006)
!15017 = !DILocation(line: 2873, column: 49, scope: !15006)
!15018 = !DILocation(line: 2873, column: 13, scope: !15006)
!15019 = !DILocation(line: 2873, column: 11, scope: !15006)
!15020 = !DILocation(line: 2874, column: 8, scope: !15021)
!15021 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 2874, column: 7)
!15022 = !DILocation(line: 2874, column: 7, scope: !15006)
!15023 = !DILocation(line: 2875, column: 11, scope: !15021)
!15024 = !DILocation(line: 2875, column: 4, scope: !15021)
!15025 = !DILocation(line: 2877, column: 27, scope: !15006)
!15026 = !DILocation(line: 2877, column: 3, scope: !15006)
!15027 = !DILocation(line: 2878, column: 22, scope: !15028)
!15028 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 2878, column: 7)
!15029 = !DILocation(line: 2878, column: 31, scope: !15028)
!15030 = !DILocation(line: 2878, column: 37, scope: !15028)
!15031 = !DILocation(line: 2878, column: 8, scope: !15028)
!15032 = !DILocation(line: 2878, column: 45, scope: !15028)
!15033 = !DILocation(line: 2879, column: 28, scope: !15028)
!15034 = !DILocation(line: 2879, column: 39, scope: !15028)
!15035 = !DILocation(line: 2879, column: 8, scope: !15028)
!15036 = !DILocation(line: 2878, column: 7, scope: !15006)
!15037 = !DILocation(line: 2880, column: 21, scope: !15038)
!15038 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 2879, column: 49)
!15039 = !DILocation(line: 2880, column: 26, scope: !15038)
!15040 = !DILocation(line: 2880, column: 4, scope: !15038)
!15041 = !DILocation(line: 2881, column: 4, scope: !15038)
!15042 = !DILocation(line: 2884, column: 23, scope: !15006)
!15043 = !DILocation(line: 2884, column: 34, scope: !15006)
!15044 = !DILocation(line: 2884, column: 3, scope: !15006)
!15045 = !DILocation(line: 2885, column: 8, scope: !15006)
!15046 = !DILocation(line: 2886, column: 2, scope: !15006)
!15047 = !DILocation(line: 2870, column: 44, scope: !15002)
!15048 = !DILocation(line: 2870, column: 2, scope: !15002)
!15049 = distinct !{!15049, !15004, !15050}
!15050 = !DILocation(line: 2886, column: 2, scope: !14999)
!15051 = !DILocation(line: 2888, column: 9, scope: !14977)
!15052 = !DILocation(line: 2888, column: 2, scope: !14977)
!15053 = !DILocation(line: 2889, column: 1, scope: !14977)
!15054 = distinct !DISubprogram(name: "mode_in_range", scope: !3, file: !3, line: 2752, type: !15055, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15055 = !DISubroutineType(types: !15056)
!15056 = !{!559, !594, !369, !575}
!15057 = !DILocalVariable(name: "mode", arg: 1, scope: !15054, file: !3, line: 2752, type: !594)
!15058 = !DILocation(line: 2752, column: 46, scope: !15054)
!15059 = !DILocalVariable(name: "edid", arg: 2, scope: !15054, file: !3, line: 2752, type: !369)
!15060 = !DILocation(line: 2752, column: 65, scope: !15054)
!15061 = !DILocalVariable(name: "timing", arg: 3, scope: !15054, file: !3, line: 2753, type: !575)
!15062 = !DILocation(line: 2753, column: 32, scope: !15054)
!15063 = !DILocalVariable(name: "max_clock", scope: !15054, file: !3, line: 2755, type: !388)
!15064 = !DILocation(line: 2755, column: 6, scope: !15054)
!15065 = !DILocalVariable(name: "t", scope: !15054, file: !3, line: 2756, type: !522)
!15066 = !DILocation(line: 2756, column: 6, scope: !15054)
!15067 = !DILocation(line: 2756, column: 16, scope: !15054)
!15068 = !DILocation(line: 2756, column: 10, scope: !15054)
!15069 = !DILocation(line: 2758, column: 27, scope: !15070)
!15070 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 2758, column: 6)
!15071 = !DILocation(line: 2758, column: 33, scope: !15070)
!15072 = !DILocation(line: 2758, column: 39, scope: !15070)
!15073 = !DILocation(line: 2758, column: 7, scope: !15070)
!15074 = !DILocation(line: 2758, column: 6, scope: !15054)
!15075 = !DILocation(line: 2759, column: 3, scope: !15070)
!15076 = !DILocation(line: 2761, column: 27, scope: !15077)
!15077 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 2761, column: 6)
!15078 = !DILocation(line: 2761, column: 33, scope: !15077)
!15079 = !DILocation(line: 2761, column: 39, scope: !15077)
!15080 = !DILocation(line: 2761, column: 7, scope: !15077)
!15081 = !DILocation(line: 2761, column: 6, scope: !15054)
!15082 = !DILocation(line: 2762, column: 3, scope: !15077)
!15083 = !DILocation(line: 2764, column: 37, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 2764, column: 6)
!15085 = !DILocation(line: 2764, column: 43, scope: !15084)
!15086 = !DILocation(line: 2764, column: 19, scope: !15084)
!15087 = !DILocation(line: 2764, column: 17, scope: !15084)
!15088 = !DILocation(line: 2764, column: 6, scope: !15054)
!15089 = !DILocation(line: 2765, column: 7, scope: !15090)
!15090 = distinct !DILexicalBlock(scope: !15084, file: !3, line: 2765, column: 7)
!15091 = !DILocation(line: 2765, column: 13, scope: !15090)
!15092 = !DILocation(line: 2765, column: 21, scope: !15090)
!15093 = !DILocation(line: 2765, column: 19, scope: !15090)
!15094 = !DILocation(line: 2765, column: 7, scope: !15084)
!15095 = !DILocation(line: 2766, column: 4, scope: !15090)
!15096 = !DILocation(line: 2769, column: 6, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 2769, column: 6)
!15098 = !DILocation(line: 2769, column: 12, scope: !15097)
!15099 = !DILocation(line: 2769, column: 21, scope: !15097)
!15100 = !DILocation(line: 2769, column: 26, scope: !15097)
!15101 = !DILocation(line: 2769, column: 29, scope: !15097)
!15102 = !DILocation(line: 2769, column: 35, scope: !15097)
!15103 = !DILocation(line: 2769, column: 6, scope: !15054)
!15104 = !DILocation(line: 2770, column: 7, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15097, file: !3, line: 2770, column: 7)
!15106 = !DILocation(line: 2770, column: 13, scope: !15105)
!15107 = !DILocation(line: 2770, column: 16, scope: !15105)
!15108 = !DILocation(line: 2770, column: 22, scope: !15105)
!15109 = !DILocation(line: 2770, column: 38, scope: !15105)
!15110 = !DILocation(line: 2770, column: 54, scope: !15105)
!15111 = !DILocation(line: 2770, column: 59, scope: !15105)
!15112 = !DILocation(line: 2770, column: 51, scope: !15105)
!15113 = !DILocation(line: 2770, column: 44, scope: !15105)
!15114 = !DILocation(line: 2770, column: 35, scope: !15105)
!15115 = !DILocation(line: 2770, column: 31, scope: !15105)
!15116 = !DILocation(line: 2770, column: 7, scope: !15097)
!15117 = !DILocation(line: 2771, column: 4, scope: !15105)
!15118 = !DILocation(line: 2770, column: 65, scope: !15105)
!15119 = !DILocation(line: 2773, column: 17, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 2773, column: 6)
!15121 = !DILocation(line: 2773, column: 6, scope: !15120)
!15122 = !DILocation(line: 2773, column: 23, scope: !15120)
!15123 = !DILocation(line: 2773, column: 51, scope: !15120)
!15124 = !DILocation(line: 2773, column: 27, scope: !15120)
!15125 = !DILocation(line: 2773, column: 6, scope: !15054)
!15126 = !DILocation(line: 2774, column: 3, scope: !15120)
!15127 = !DILocation(line: 2776, column: 2, scope: !15054)
!15128 = !DILocation(line: 2777, column: 1, scope: !15054)
!15129 = distinct !DISubprogram(name: "valid_inferred_mode", scope: !3, file: !3, line: 2779, type: !15130, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15130 = !DISubroutineType(types: !15131)
!15131 = !{!559, !9959, !594}
!15132 = !DILocalVariable(name: "connector", arg: 1, scope: !15129, file: !3, line: 2779, type: !9959)
!15133 = !DILocation(line: 2779, column: 61, scope: !15129)
!15134 = !DILocalVariable(name: "mode", arg: 2, scope: !15129, file: !3, line: 2780, type: !594)
!15135 = !DILocation(line: 2780, column: 36, scope: !15129)
!15136 = !DILocalVariable(name: "m", scope: !15129, file: !3, line: 2782, type: !594)
!15137 = !DILocation(line: 2782, column: 33, scope: !15129)
!15138 = !DILocalVariable(name: "ok", scope: !15129, file: !3, line: 2783, type: !559)
!15139 = !DILocation(line: 2783, column: 7, scope: !15129)
!15140 = !DILocalVariable(name: "__mptr", scope: !15141, file: !3, line: 2785, type: !368)
!15141 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 2785, column: 2)
!15142 = distinct !DILexicalBlock(scope: !15129, file: !3, line: 2785, column: 2)
!15143 = !DILocation(line: 2785, column: 2, scope: !15141)
!15144 = !DILocation(line: 2785, column: 2, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15141, file: !3, line: 2785, column: 2)
!15146 = !DILocation(line: 2785, column: 2, scope: !15142)
!15147 = !DILocation(line: 2785, column: 2, scope: !15148)
!15148 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 2785, column: 2)
!15149 = !DILocation(line: 2786, column: 7, scope: !15150)
!15150 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 2786, column: 7)
!15151 = distinct !DILexicalBlock(scope: !15148, file: !3, line: 2785, column: 57)
!15152 = !DILocation(line: 2786, column: 13, scope: !15150)
!15153 = !DILocation(line: 2786, column: 25, scope: !15150)
!15154 = !DILocation(line: 2786, column: 28, scope: !15150)
!15155 = !DILocation(line: 2786, column: 22, scope: !15150)
!15156 = !DILocation(line: 2786, column: 37, scope: !15150)
!15157 = !DILocation(line: 2787, column: 7, scope: !15150)
!15158 = !DILocation(line: 2787, column: 13, scope: !15150)
!15159 = !DILocation(line: 2787, column: 25, scope: !15150)
!15160 = !DILocation(line: 2787, column: 28, scope: !15150)
!15161 = !DILocation(line: 2787, column: 22, scope: !15150)
!15162 = !DILocation(line: 2787, column: 37, scope: !15150)
!15163 = !DILocation(line: 2788, column: 25, scope: !15150)
!15164 = !DILocation(line: 2788, column: 7, scope: !15150)
!15165 = !DILocation(line: 2788, column: 52, scope: !15150)
!15166 = !DILocation(line: 2788, column: 34, scope: !15150)
!15167 = !DILocation(line: 2788, column: 31, scope: !15150)
!15168 = !DILocation(line: 2786, column: 7, scope: !15151)
!15169 = !DILocation(line: 2789, column: 4, scope: !15150)
!15170 = !DILocation(line: 2790, column: 7, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 2790, column: 7)
!15172 = !DILocation(line: 2790, column: 13, scope: !15171)
!15173 = !DILocation(line: 2790, column: 25, scope: !15171)
!15174 = !DILocation(line: 2790, column: 28, scope: !15171)
!15175 = !DILocation(line: 2790, column: 22, scope: !15171)
!15176 = !DILocation(line: 2790, column: 37, scope: !15171)
!15177 = !DILocation(line: 2791, column: 7, scope: !15171)
!15178 = !DILocation(line: 2791, column: 13, scope: !15171)
!15179 = !DILocation(line: 2791, column: 25, scope: !15171)
!15180 = !DILocation(line: 2791, column: 28, scope: !15171)
!15181 = !DILocation(line: 2791, column: 22, scope: !15171)
!15182 = !DILocation(line: 2790, column: 7, scope: !15151)
!15183 = !DILocation(line: 2792, column: 7, scope: !15171)
!15184 = !DILocation(line: 2792, column: 4, scope: !15171)
!15185 = !DILocation(line: 2793, column: 2, scope: !15151)
!15186 = !DILocalVariable(name: "__mptr", scope: !15187, file: !3, line: 2785, type: !368)
!15187 = distinct !DILexicalBlock(scope: !15148, file: !3, line: 2785, column: 2)
!15188 = !DILocation(line: 2785, column: 2, scope: !15187)
!15189 = !DILocation(line: 2785, column: 2, scope: !15190)
!15190 = distinct !DILexicalBlock(scope: !15187, file: !3, line: 2785, column: 2)
!15191 = distinct !{!15191, !15146, !15192}
!15192 = !DILocation(line: 2793, column: 2, scope: !15142)
!15193 = !DILocation(line: 2794, column: 9, scope: !15129)
!15194 = !DILocation(line: 2794, column: 2, scope: !15129)
!15195 = !DILocation(line: 2795, column: 1, scope: !15129)
!15196 = distinct !DISubprogram(name: "mode_in_hsync_range", scope: !3, file: !3, line: 2703, type: !15197, scopeLine: 2705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15197 = !DISubroutineType(types: !15198)
!15198 = !{!559, !594, !369, !522}
!15199 = !DILocalVariable(name: "mode", arg: 1, scope: !15196, file: !3, line: 2703, type: !594)
!15200 = !DILocation(line: 2703, column: 52, scope: !15196)
!15201 = !DILocalVariable(name: "edid", arg: 2, scope: !15196, file: !3, line: 2704, type: !369)
!15202 = !DILocation(line: 2704, column: 20, scope: !15196)
!15203 = !DILocalVariable(name: "t", arg: 3, scope: !15196, file: !3, line: 2704, type: !522)
!15204 = !DILocation(line: 2704, column: 30, scope: !15196)
!15205 = !DILocalVariable(name: "hsync", scope: !15196, file: !3, line: 2706, type: !139)
!15206 = !DILocation(line: 2706, column: 6, scope: !15196)
!15207 = !DILocalVariable(name: "hmin", scope: !15196, file: !3, line: 2706, type: !139)
!15208 = !DILocation(line: 2706, column: 13, scope: !15196)
!15209 = !DILocalVariable(name: "hmax", scope: !15196, file: !3, line: 2706, type: !139)
!15210 = !DILocation(line: 2706, column: 19, scope: !15196)
!15211 = !DILocation(line: 2708, column: 9, scope: !15196)
!15212 = !DILocation(line: 2708, column: 7, scope: !15196)
!15213 = !DILocation(line: 2709, column: 6, scope: !15214)
!15214 = distinct !DILexicalBlock(scope: !15196, file: !3, line: 2709, column: 6)
!15215 = !DILocation(line: 2709, column: 12, scope: !15214)
!15216 = !DILocation(line: 2709, column: 21, scope: !15214)
!15217 = !DILocation(line: 2709, column: 6, scope: !15196)
!15218 = !DILocation(line: 2710, column: 16, scope: !15214)
!15219 = !DILocation(line: 2710, column: 21, scope: !15214)
!15220 = !DILocation(line: 2710, column: 15, scope: !15214)
!15221 = !DILocation(line: 2710, column: 11, scope: !15214)
!15222 = !DILocation(line: 2710, column: 6, scope: !15214)
!15223 = !DILocation(line: 2711, column: 9, scope: !15196)
!15224 = !DILocation(line: 2711, column: 7, scope: !15196)
!15225 = !DILocation(line: 2712, column: 6, scope: !15226)
!15226 = distinct !DILexicalBlock(scope: !15196, file: !3, line: 2712, column: 6)
!15227 = !DILocation(line: 2712, column: 12, scope: !15226)
!15228 = !DILocation(line: 2712, column: 21, scope: !15226)
!15229 = !DILocation(line: 2712, column: 6, scope: !15196)
!15230 = !DILocation(line: 2713, column: 16, scope: !15226)
!15231 = !DILocation(line: 2713, column: 21, scope: !15226)
!15232 = !DILocation(line: 2713, column: 15, scope: !15226)
!15233 = !DILocation(line: 2713, column: 11, scope: !15226)
!15234 = !DILocation(line: 2713, column: 6, scope: !15226)
!15235 = !DILocation(line: 2714, column: 25, scope: !15196)
!15236 = !DILocation(line: 2714, column: 10, scope: !15196)
!15237 = !DILocation(line: 2714, column: 8, scope: !15196)
!15238 = !DILocation(line: 2716, column: 10, scope: !15196)
!15239 = !DILocation(line: 2716, column: 19, scope: !15196)
!15240 = !DILocation(line: 2716, column: 16, scope: !15196)
!15241 = !DILocation(line: 2716, column: 24, scope: !15196)
!15242 = !DILocation(line: 2716, column: 27, scope: !15196)
!15243 = !DILocation(line: 2716, column: 36, scope: !15196)
!15244 = !DILocation(line: 2716, column: 33, scope: !15196)
!15245 = !DILocation(line: 0, scope: !15196)
!15246 = !DILocation(line: 2716, column: 2, scope: !15196)
!15247 = distinct !DISubprogram(name: "mode_in_vsync_range", scope: !3, file: !3, line: 2720, type: !15197, scopeLine: 2722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15248 = !DILocalVariable(name: "mode", arg: 1, scope: !15247, file: !3, line: 2720, type: !594)
!15249 = !DILocation(line: 2720, column: 52, scope: !15247)
!15250 = !DILocalVariable(name: "edid", arg: 2, scope: !15247, file: !3, line: 2721, type: !369)
!15251 = !DILocation(line: 2721, column: 20, scope: !15247)
!15252 = !DILocalVariable(name: "t", arg: 3, scope: !15247, file: !3, line: 2721, type: !522)
!15253 = !DILocation(line: 2721, column: 30, scope: !15247)
!15254 = !DILocalVariable(name: "vsync", scope: !15247, file: !3, line: 2723, type: !139)
!15255 = !DILocation(line: 2723, column: 6, scope: !15247)
!15256 = !DILocalVariable(name: "vmin", scope: !15247, file: !3, line: 2723, type: !139)
!15257 = !DILocation(line: 2723, column: 13, scope: !15247)
!15258 = !DILocalVariable(name: "vmax", scope: !15247, file: !3, line: 2723, type: !139)
!15259 = !DILocation(line: 2723, column: 19, scope: !15247)
!15260 = !DILocation(line: 2725, column: 9, scope: !15247)
!15261 = !DILocation(line: 2725, column: 7, scope: !15247)
!15262 = !DILocation(line: 2726, column: 6, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15247, file: !3, line: 2726, column: 6)
!15264 = !DILocation(line: 2726, column: 12, scope: !15263)
!15265 = !DILocation(line: 2726, column: 21, scope: !15263)
!15266 = !DILocation(line: 2726, column: 6, scope: !15247)
!15267 = !DILocation(line: 2727, column: 16, scope: !15263)
!15268 = !DILocation(line: 2727, column: 21, scope: !15263)
!15269 = !DILocation(line: 2727, column: 15, scope: !15263)
!15270 = !DILocation(line: 2727, column: 11, scope: !15263)
!15271 = !DILocation(line: 2727, column: 6, scope: !15263)
!15272 = !DILocation(line: 2728, column: 9, scope: !15247)
!15273 = !DILocation(line: 2728, column: 7, scope: !15247)
!15274 = !DILocation(line: 2729, column: 6, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15247, file: !3, line: 2729, column: 6)
!15276 = !DILocation(line: 2729, column: 12, scope: !15275)
!15277 = !DILocation(line: 2729, column: 21, scope: !15275)
!15278 = !DILocation(line: 2729, column: 6, scope: !15247)
!15279 = !DILocation(line: 2730, column: 16, scope: !15275)
!15280 = !DILocation(line: 2730, column: 21, scope: !15275)
!15281 = !DILocation(line: 2730, column: 15, scope: !15275)
!15282 = !DILocation(line: 2730, column: 11, scope: !15275)
!15283 = !DILocation(line: 2730, column: 6, scope: !15275)
!15284 = !DILocation(line: 2731, column: 28, scope: !15247)
!15285 = !DILocation(line: 2731, column: 10, scope: !15247)
!15286 = !DILocation(line: 2731, column: 8, scope: !15247)
!15287 = !DILocation(line: 2733, column: 10, scope: !15247)
!15288 = !DILocation(line: 2733, column: 19, scope: !15247)
!15289 = !DILocation(line: 2733, column: 16, scope: !15247)
!15290 = !DILocation(line: 2733, column: 24, scope: !15247)
!15291 = !DILocation(line: 2733, column: 27, scope: !15247)
!15292 = !DILocation(line: 2733, column: 36, scope: !15247)
!15293 = !DILocation(line: 2733, column: 33, scope: !15247)
!15294 = !DILocation(line: 0, scope: !15247)
!15295 = !DILocation(line: 2733, column: 2, scope: !15247)
!15296 = distinct !DISubprogram(name: "range_pixel_clock", scope: !3, file: !3, line: 2737, type: !15297, scopeLine: 2738, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15297 = !DISubroutineType(types: !15298)
!15298 = !{!388, !369, !522}
!15299 = !DILocalVariable(name: "edid", arg: 1, scope: !15296, file: !3, line: 2737, type: !369)
!15300 = !DILocation(line: 2737, column: 32, scope: !15296)
!15301 = !DILocalVariable(name: "t", arg: 2, scope: !15296, file: !3, line: 2737, type: !522)
!15302 = !DILocation(line: 2737, column: 42, scope: !15296)
!15303 = !DILocation(line: 2740, column: 6, scope: !15304)
!15304 = distinct !DILexicalBlock(scope: !15296, file: !3, line: 2740, column: 6)
!15305 = !DILocation(line: 2740, column: 11, scope: !15304)
!15306 = !DILocation(line: 2740, column: 16, scope: !15304)
!15307 = !DILocation(line: 2740, column: 19, scope: !15304)
!15308 = !DILocation(line: 2740, column: 24, scope: !15304)
!15309 = !DILocation(line: 2740, column: 6, scope: !15296)
!15310 = !DILocation(line: 2741, column: 3, scope: !15304)
!15311 = !DILocation(line: 2744, column: 6, scope: !15312)
!15312 = distinct !DILexicalBlock(scope: !15296, file: !3, line: 2744, column: 6)
!15313 = !DILocation(line: 2744, column: 12, scope: !15312)
!15314 = !DILocation(line: 2744, column: 21, scope: !15312)
!15315 = !DILocation(line: 2744, column: 26, scope: !15312)
!15316 = !DILocation(line: 2744, column: 29, scope: !15312)
!15317 = !DILocation(line: 2744, column: 35, scope: !15312)
!15318 = !DILocation(line: 2744, column: 6, scope: !15296)
!15319 = !DILocation(line: 2745, column: 11, scope: !15312)
!15320 = !DILocation(line: 2745, column: 16, scope: !15312)
!15321 = !DILocation(line: 2745, column: 29, scope: !15312)
!15322 = !DILocation(line: 2745, column: 35, scope: !15312)
!15323 = !DILocation(line: 2745, column: 41, scope: !15312)
!15324 = !DILocation(line: 2745, column: 25, scope: !15312)
!15325 = !DILocation(line: 2745, column: 3, scope: !15312)
!15326 = !DILocation(line: 2748, column: 9, scope: !15296)
!15327 = !DILocation(line: 2748, column: 14, scope: !15296)
!15328 = !DILocation(line: 2748, column: 22, scope: !15296)
!15329 = !DILocation(line: 2748, column: 2, scope: !15296)
!15330 = !DILocation(line: 2749, column: 1, scope: !15296)
!15331 = distinct !DISubprogram(name: "validate_displayid", scope: !3, file: !3, line: 5180, type: !15332, scopeLine: 5181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15332 = !DISubroutineType(types: !15333)
!15333 = !{!139, !522, !139, !139}
!15334 = !DILocalVariable(name: "displayid", arg: 1, scope: !15331, file: !3, line: 5180, type: !522)
!15335 = !DILocation(line: 5180, column: 35, scope: !15331)
!15336 = !DILocalVariable(name: "length", arg: 2, scope: !15331, file: !3, line: 5180, type: !139)
!15337 = !DILocation(line: 5180, column: 50, scope: !15331)
!15338 = !DILocalVariable(name: "idx", arg: 3, scope: !15331, file: !3, line: 5180, type: !139)
!15339 = !DILocation(line: 5180, column: 62, scope: !15331)
!15340 = !DILocalVariable(name: "i", scope: !15331, file: !3, line: 5182, type: !139)
!15341 = !DILocation(line: 5182, column: 6, scope: !15331)
!15342 = !DILocalVariable(name: "dispid_length", scope: !15331, file: !3, line: 5182, type: !139)
!15343 = !DILocation(line: 5182, column: 9, scope: !15331)
!15344 = !DILocalVariable(name: "csum", scope: !15331, file: !3, line: 5183, type: !375)
!15345 = !DILocation(line: 5183, column: 5, scope: !15331)
!15346 = !DILocalVariable(name: "base", scope: !15331, file: !3, line: 5184, type: !620)
!15347 = !DILocation(line: 5184, column: 24, scope: !15331)
!15348 = !DILocation(line: 5186, column: 34, scope: !15331)
!15349 = !DILocation(line: 5186, column: 44, scope: !15331)
!15350 = !DILocation(line: 5186, column: 9, scope: !15331)
!15351 = !DILocation(line: 5186, column: 7, scope: !15331)
!15352 = !DILocation(line: 5188, column: 2, scope: !15331)
!15353 = !DILocation(line: 5192, column: 34, scope: !15331)
!15354 = !DILocation(line: 5192, column: 40, scope: !15331)
!15355 = !DILocation(line: 5192, column: 32, scope: !15331)
!15356 = !DILocation(line: 5192, column: 46, scope: !15331)
!15357 = !DILocation(line: 5192, column: 18, scope: !15331)
!15358 = !DILocation(line: 5192, column: 16, scope: !15331)
!15359 = !DILocation(line: 5193, column: 6, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 5193, column: 6)
!15361 = !DILocation(line: 5193, column: 22, scope: !15360)
!15362 = !DILocation(line: 5193, column: 31, scope: !15360)
!15363 = !DILocation(line: 5193, column: 29, scope: !15360)
!15364 = !DILocation(line: 5193, column: 20, scope: !15360)
!15365 = !DILocation(line: 5193, column: 6, scope: !15331)
!15366 = !DILocation(line: 5194, column: 3, scope: !15360)
!15367 = !DILocation(line: 5196, column: 9, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 5196, column: 2)
!15369 = !DILocation(line: 5196, column: 7, scope: !15368)
!15370 = !DILocation(line: 5196, column: 14, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15368, file: !3, line: 5196, column: 2)
!15372 = !DILocation(line: 5196, column: 18, scope: !15371)
!15373 = !DILocation(line: 5196, column: 16, scope: !15371)
!15374 = !DILocation(line: 5196, column: 2, scope: !15368)
!15375 = !DILocation(line: 5197, column: 11, scope: !15371)
!15376 = !DILocation(line: 5197, column: 21, scope: !15371)
!15377 = !DILocation(line: 5197, column: 27, scope: !15371)
!15378 = !DILocation(line: 5197, column: 25, scope: !15371)
!15379 = !DILocation(line: 5197, column: 8, scope: !15371)
!15380 = !DILocation(line: 5197, column: 3, scope: !15371)
!15381 = !DILocation(line: 5196, column: 34, scope: !15371)
!15382 = !DILocation(line: 5196, column: 2, scope: !15371)
!15383 = distinct !{!15383, !15374, !15384}
!15384 = !DILocation(line: 5197, column: 28, scope: !15368)
!15385 = !DILocation(line: 5198, column: 6, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 5198, column: 6)
!15387 = !DILocation(line: 5198, column: 6, scope: !15331)
!15388 = !DILocation(line: 5199, column: 3, scope: !15389)
!15389 = distinct !DILexicalBlock(scope: !15386, file: !3, line: 5198, column: 12)
!15390 = !DILocation(line: 5200, column: 3, scope: !15389)
!15391 = !DILocation(line: 5203, column: 2, scope: !15331)
!15392 = !DILocation(line: 5204, column: 1, scope: !15331)
!15393 = distinct !DISubprogram(name: "drm_parse_tiled_block", scope: !3, file: !3, line: 5882, type: !15394, scopeLine: 5884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !752)
!15394 = !DISubroutineType(types: !15395)
!15395 = !{null, !1162, !10519}
!15396 = !DILocalVariable(name: "connector", arg: 1, scope: !15393, file: !3, line: 5882, type: !1162)
!15397 = !DILocation(line: 5882, column: 57, scope: !15393)
!15398 = !DILocalVariable(name: "block", arg: 2, scope: !15393, file: !3, line: 5883, type: !10519)
!15399 = !DILocation(line: 5883, column: 37, scope: !15393)
!15400 = !DILocalVariable(name: "tile", scope: !15393, file: !3, line: 5885, type: !15401)
!15401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15402, size: 64)
!15402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !628)
!15403 = !DILocation(line: 5885, column: 38, scope: !15393)
!15404 = !DILocation(line: 5885, column: 77, scope: !15393)
!15405 = !DILocation(line: 5885, column: 45, scope: !15393)
!15406 = !DILocalVariable(name: "w", scope: !15393, file: !3, line: 5886, type: !530)
!15407 = !DILocation(line: 5886, column: 6, scope: !15393)
!15408 = !DILocalVariable(name: "h", scope: !15393, file: !3, line: 5886, type: !530)
!15409 = !DILocation(line: 5886, column: 9, scope: !15393)
!15410 = !DILocalVariable(name: "tile_v_loc", scope: !15393, file: !3, line: 5887, type: !375)
!15411 = !DILocation(line: 5887, column: 5, scope: !15393)
!15412 = !DILocalVariable(name: "tile_h_loc", scope: !15393, file: !3, line: 5887, type: !375)
!15413 = !DILocation(line: 5887, column: 17, scope: !15393)
!15414 = !DILocalVariable(name: "num_v_tile", scope: !15393, file: !3, line: 5888, type: !375)
!15415 = !DILocation(line: 5888, column: 5, scope: !15393)
!15416 = !DILocalVariable(name: "num_h_tile", scope: !15393, file: !3, line: 5888, type: !375)
!15417 = !DILocation(line: 5888, column: 17, scope: !15393)
!15418 = !DILocalVariable(name: "tg", scope: !15393, file: !3, line: 5889, type: !6156)
!15419 = !DILocation(line: 5889, column: 25, scope: !15393)
!15420 = !DILocation(line: 5891, column: 6, scope: !15393)
!15421 = !DILocation(line: 5891, column: 12, scope: !15393)
!15422 = !DILocation(line: 5891, column: 27, scope: !15393)
!15423 = !DILocation(line: 5891, column: 33, scope: !15393)
!15424 = !DILocation(line: 5891, column: 46, scope: !15393)
!15425 = !DILocation(line: 5891, column: 25, scope: !15393)
!15426 = !DILocation(line: 5891, column: 4, scope: !15393)
!15427 = !DILocation(line: 5892, column: 6, scope: !15393)
!15428 = !DILocation(line: 5892, column: 12, scope: !15393)
!15429 = !DILocation(line: 5892, column: 27, scope: !15393)
!15430 = !DILocation(line: 5892, column: 33, scope: !15393)
!15431 = !DILocation(line: 5892, column: 46, scope: !15393)
!15432 = !DILocation(line: 5892, column: 25, scope: !15393)
!15433 = !DILocation(line: 5892, column: 4, scope: !15393)
!15434 = !DILocation(line: 5894, column: 16, scope: !15393)
!15435 = !DILocation(line: 5894, column: 22, scope: !15393)
!15436 = !DILocation(line: 5894, column: 30, scope: !15393)
!15437 = !DILocation(line: 5894, column: 40, scope: !15393)
!15438 = !DILocation(line: 5894, column: 46, scope: !15393)
!15439 = !DILocation(line: 5894, column: 54, scope: !15393)
!15440 = !DILocation(line: 5894, column: 37, scope: !15393)
!15441 = !DILocation(line: 5894, column: 15, scope: !15393)
!15442 = !DILocation(line: 5894, column: 13, scope: !15393)
!15443 = !DILocation(line: 5895, column: 16, scope: !15393)
!15444 = !DILocation(line: 5895, column: 22, scope: !15393)
!15445 = !DILocation(line: 5895, column: 30, scope: !15393)
!15446 = !DILocation(line: 5895, column: 40, scope: !15393)
!15447 = !DILocation(line: 5895, column: 46, scope: !15393)
!15448 = !DILocation(line: 5895, column: 54, scope: !15393)
!15449 = !DILocation(line: 5895, column: 60, scope: !15393)
!15450 = !DILocation(line: 5895, column: 36, scope: !15393)
!15451 = !DILocation(line: 5895, column: 15, scope: !15393)
!15452 = !DILocation(line: 5895, column: 13, scope: !15393)
!15453 = !DILocation(line: 5896, column: 16, scope: !15393)
!15454 = !DILocation(line: 5896, column: 22, scope: !15393)
!15455 = !DILocation(line: 5896, column: 30, scope: !15393)
!15456 = !DILocation(line: 5896, column: 41, scope: !15393)
!15457 = !DILocation(line: 5896, column: 47, scope: !15393)
!15458 = !DILocation(line: 5896, column: 55, scope: !15393)
!15459 = !DILocation(line: 5896, column: 62, scope: !15393)
!15460 = !DILocation(line: 5896, column: 37, scope: !15393)
!15461 = !DILocation(line: 5896, column: 15, scope: !15393)
!15462 = !DILocation(line: 5896, column: 13, scope: !15393)
!15463 = !DILocation(line: 5897, column: 16, scope: !15393)
!15464 = !DILocation(line: 5897, column: 22, scope: !15393)
!15465 = !DILocation(line: 5897, column: 30, scope: !15393)
!15466 = !DILocation(line: 5897, column: 41, scope: !15393)
!15467 = !DILocation(line: 5897, column: 47, scope: !15393)
!15468 = !DILocation(line: 5897, column: 55, scope: !15393)
!15469 = !DILocation(line: 5897, column: 61, scope: !15393)
!15470 = !DILocation(line: 5897, column: 68, scope: !15393)
!15471 = !DILocation(line: 5897, column: 36, scope: !15393)
!15472 = !DILocation(line: 5897, column: 15, scope: !15393)
!15473 = !DILocation(line: 5897, column: 13, scope: !15393)
!15474 = !DILocation(line: 5899, column: 2, scope: !15393)
!15475 = !DILocation(line: 5899, column: 13, scope: !15393)
!15476 = !DILocation(line: 5899, column: 22, scope: !15393)
!15477 = !DILocation(line: 5900, column: 6, scope: !15478)
!15478 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 5900, column: 6)
!15479 = !DILocation(line: 5900, column: 12, scope: !15478)
!15480 = !DILocation(line: 5900, column: 21, scope: !15478)
!15481 = !DILocation(line: 5900, column: 6, scope: !15393)
!15482 = !DILocation(line: 5901, column: 3, scope: !15478)
!15483 = !DILocation(line: 5901, column: 14, scope: !15478)
!15484 = !DILocation(line: 5901, column: 37, scope: !15478)
!15485 = !DILocation(line: 5903, column: 26, scope: !15393)
!15486 = !DILocation(line: 5903, column: 37, scope: !15393)
!15487 = !DILocation(line: 5903, column: 2, scope: !15393)
!15488 = !DILocation(line: 5903, column: 13, scope: !15393)
!15489 = !DILocation(line: 5903, column: 24, scope: !15393)
!15490 = !DILocation(line: 5904, column: 26, scope: !15393)
!15491 = !DILocation(line: 5904, column: 37, scope: !15393)
!15492 = !DILocation(line: 5904, column: 2, scope: !15393)
!15493 = !DILocation(line: 5904, column: 13, scope: !15393)
!15494 = !DILocation(line: 5904, column: 24, scope: !15393)
!15495 = !DILocation(line: 5905, column: 26, scope: !15393)
!15496 = !DILocation(line: 5905, column: 2, scope: !15393)
!15497 = !DILocation(line: 5905, column: 13, scope: !15393)
!15498 = !DILocation(line: 5905, column: 24, scope: !15393)
!15499 = !DILocation(line: 5906, column: 26, scope: !15393)
!15500 = !DILocation(line: 5906, column: 2, scope: !15393)
!15501 = !DILocation(line: 5906, column: 13, scope: !15393)
!15502 = !DILocation(line: 5906, column: 24, scope: !15393)
!15503 = !DILocation(line: 5907, column: 27, scope: !15393)
!15504 = !DILocation(line: 5907, column: 29, scope: !15393)
!15505 = !DILocation(line: 5907, column: 2, scope: !15393)
!15506 = !DILocation(line: 5907, column: 13, scope: !15393)
!15507 = !DILocation(line: 5907, column: 25, scope: !15393)
!15508 = !DILocation(line: 5908, column: 27, scope: !15393)
!15509 = !DILocation(line: 5908, column: 29, scope: !15393)
!15510 = !DILocation(line: 5908, column: 2, scope: !15393)
!15511 = !DILocation(line: 5908, column: 13, scope: !15393)
!15512 = !DILocation(line: 5908, column: 25, scope: !15393)
!15513 = !DILocation(line: 5910, column: 2, scope: !15393)
!15514 = !DILocation(line: 5911, column: 2, scope: !15393)
!15515 = !DILocation(line: 5912, column: 2, scope: !15393)
!15516 = !DILocation(line: 5914, column: 2, scope: !15393)
!15517 = !DILocation(line: 5916, column: 31, scope: !15393)
!15518 = !DILocation(line: 5916, column: 42, scope: !15393)
!15519 = !DILocation(line: 5916, column: 47, scope: !15393)
!15520 = !DILocation(line: 5916, column: 53, scope: !15393)
!15521 = !DILocation(line: 5916, column: 7, scope: !15393)
!15522 = !DILocation(line: 5916, column: 5, scope: !15393)
!15523 = !DILocation(line: 5917, column: 7, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 5917, column: 6)
!15525 = !DILocation(line: 5917, column: 6, scope: !15393)
!15526 = !DILocation(line: 5918, column: 35, scope: !15524)
!15527 = !DILocation(line: 5918, column: 46, scope: !15524)
!15528 = !DILocation(line: 5918, column: 51, scope: !15524)
!15529 = !DILocation(line: 5918, column: 57, scope: !15524)
!15530 = !DILocation(line: 5918, column: 8, scope: !15524)
!15531 = !DILocation(line: 5918, column: 6, scope: !15524)
!15532 = !DILocation(line: 5918, column: 3, scope: !15524)
!15533 = !DILocation(line: 5919, column: 7, scope: !15534)
!15534 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 5919, column: 6)
!15535 = !DILocation(line: 5919, column: 6, scope: !15393)
!15536 = !DILocation(line: 5920, column: 3, scope: !15534)
!15537 = !DILocation(line: 5922, column: 6, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 5922, column: 6)
!15539 = !DILocation(line: 5922, column: 17, scope: !15538)
!15540 = !DILocation(line: 5922, column: 31, scope: !15538)
!15541 = !DILocation(line: 5922, column: 28, scope: !15538)
!15542 = !DILocation(line: 5922, column: 6, scope: !15393)
!15543 = !DILocation(line: 5925, column: 7, scope: !15544)
!15544 = distinct !DILexicalBlock(scope: !15545, file: !3, line: 5925, column: 7)
!15545 = distinct !DILexicalBlock(scope: !15538, file: !3, line: 5922, column: 35)
!15546 = !DILocation(line: 5925, column: 18, scope: !15544)
!15547 = !DILocation(line: 5925, column: 7, scope: !15545)
!15548 = !DILocation(line: 5926, column: 28, scope: !15544)
!15549 = !DILocation(line: 5926, column: 39, scope: !15544)
!15550 = !DILocation(line: 5926, column: 44, scope: !15544)
!15551 = !DILocation(line: 5926, column: 55, scope: !15544)
!15552 = !DILocation(line: 5926, column: 4, scope: !15544)
!15553 = !DILocation(line: 5927, column: 27, scope: !15545)
!15554 = !DILocation(line: 5927, column: 3, scope: !15545)
!15555 = !DILocation(line: 5927, column: 14, scope: !15545)
!15556 = !DILocation(line: 5927, column: 25, scope: !15545)
!15557 = !DILocation(line: 5928, column: 2, scope: !15545)
!15558 = !DILocation(line: 5930, column: 27, scope: !15559)
!15559 = distinct !DILexicalBlock(scope: !15538, file: !3, line: 5928, column: 9)
!15560 = !DILocation(line: 5930, column: 38, scope: !15559)
!15561 = !DILocation(line: 5930, column: 43, scope: !15559)
!15562 = !DILocation(line: 5930, column: 3, scope: !15559)
!15563 = !DILocation(line: 5932, column: 1, scope: !15393)
